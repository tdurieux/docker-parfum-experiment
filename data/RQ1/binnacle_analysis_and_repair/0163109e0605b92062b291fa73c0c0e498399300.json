{
  "startTime": 1674248511022,
  "endTime": 1674248511315,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# Authentication information for hpfeeds in the broker container.\n# Example command to add the credentials to the broker:\n#\n# docker exec broker /opt/hpfeeds/env/bin/python /opt/hpfeeds/broker/add_user.py \\\n#\tcowrie 7919ea5eb8ab8cc475e64dd074723b0b cowrie.sessions \"\"\nENV HPF_HOST=broker\nENV HPF_PORT=10000\nENV HPF_IDENT=cowrie\nENV HPF_SECRET=7919ea5eb8ab8cc475e64dd074723b0b\n\n# You may want to change the cowrie user id inside the container if\n# you're going to mount an external log directory.  The internal uid\n# needs write permissions to the external volume.\n#\n# E.g. to save cowrie logs to /var/log/cowrie on the host OS, run docker with ...\n#\n# \t-v /var/log/cowrie:/opt/cowrie/log\n#\n# ... and make sure /var/log/cowrie is writable by the cowrie uid inside the container.\nENV COWRIE_UID=1000\n\n# Install packages\nRUN apt-get update && apt-get install --no-install-recommends -y git supervisor && rm -rf /var/lib/apt/lists/*;\n\n# Create the cowrie user\nRUN useradd -u ${COWRIE_UID} -s /bin/false cowrie\n\n# Download the MHN distro\nWORKDIR /usr/src\nRUN git clone https://github.com/threatstream/mhn\n\n# Run the install script.  The script will generate a bunch of errors, but we don't care.\nWORKDIR /usr/src/mhn/scripts\nRUN sed -i -e 's/set -e/#set -e/' deploy_cowrie.sh ; \\\n\t# Cowrie has deprecated start/stop.sh \\\n\tsed -i -e 's/start.sh env/bin\\/cowrie start/' deploy_cowrie.sh ; \\\n\tsed -i -e 's/start.sh/bin\\/cowrie/' deploy_cowrie.sh ; \\\n\tsed -i -e 's/ env/ cowrie-env/' deploy_cowrie.sh ; \\\n\tbash deploy_cowrie.sh foo bar ; \\\n\tapt-get -y purge '.*-dev'\n\n# Disable the json log and enable telnet\nRUN sed -i -e 's/logfile = log\\/cowrie.json/#logfile = log\\/cowrie.json/' \\\n\t\t/opt/cowrie/cowrie.cfg ; \\\n\tsed -i -e 's/^enabled = false/enabled = true/' \\\n\t\t/opt/cowrie/cowrie.cfg ; \\\n\tsed -i -e 's/^listen_endpoints = tcp:2222/listen_endpoints = tcp:22/' \\\n\t\t/opt/cowrie/cowrie.cfg ; \\\n\tsed -i -e 's/^listen_endpoints = tcp:2223/listen_endpoints = tcp:23/' \\\n\t\t/opt/cowrie/cowrie.cfg ; \\\n\ttouch /etc/authbind/byport/23; \\\n\tchown cowrie /etc/authbind/byport/23; \\\n\tchmod 770 /etc/authbind/byport/23;\n\nEXPOSE 22\nEXPOSE 23\n\nCOPY run.sh /\n\nWORKDIR /opt/cowrie\nCMD [\"/run.sh\"]\n\n# How to run the container:\n#\n# docker run --rm --name cowrie --link broker cowrie\n#\n# To log outside the container:\n#\n# mkdir /var/log/cowrie\n# chown 1000 /var/log/cowrie\n# docker run --rm --name cowrie -v /var/log/cowrie:/opt/cowrie/log --link broker cowrie\n"
}