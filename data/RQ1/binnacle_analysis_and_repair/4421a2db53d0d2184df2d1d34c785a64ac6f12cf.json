{
  "startTime": 1674238597789,
  "endTime": 1674238597842,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is a docker file for deploying the UCCA server.\n# At some point we should upload this to the Docker hub from github directly.\nFROM python:3.5-alpine as builder\n\nRUN apk --no-cache add postgresql-libs\nRUN apk add --no-cache --virtual .build-deps gcc musl-dev postgresql-dev\n\n# Copy the files we need - requirements.txt and the entire Backend folder\nCOPY . /src\n\nRUN pip install --no-cache-dir -r src/requirements.txt\nCOPY ucca/settings_ucca_docker.py /src/ucca/local_settings.py\n\nRUN pip install --no-cache-dir gunicorn\n\nRUN mkdir /logs\n\n# Clean up before creating the final stage\n# RUN apk del --purge git openssh-client build-deps\nFROM builder as backend\n\n# The gunicorn environment variables\nENV DJANGO_SETTINGS_MODULE ucca.settings\nENV PYTHONPATH $PYTHONPATH:/src\nRUN echo \"#!/bin/sh\" > /docker-entrypoint.sh\nRUN echo gunicorn --workers 3 --bind 0.0.0.0:8000 ucca.wsgi:application >> /docker-entrypoint.sh\nRUN chmod u+x docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}