{
  "startTime": 1674240261780,
  "endTime": 1674240263194,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 5,
        "columnEnd": 84
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 5,
        "columnEnd": 91
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 5,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 115,
        "lineEnd": 170,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 177,
        "lineEnd": 232,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 5,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 5,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.8\nMAINTAINER Thomas Spicer (thomas@openbridge.com)\n\nENV NGINX_VERSION=1.15.2 \\\n    VAR_PREFIX=/var/run \\\n    LOG_PREFIX=/var/log/nginx \\\n    MOD_PAGESPEED_VER=1.13.35.2 \\\n    NGX_PAGESPEED_VER=1.13.35.2 \\\n    TEMP_PREFIX=/tmp \\\n    CACHE_PREFIX=/var/cache \\\n    CONF_PREFIX=/etc/nginx \\\n    CERTS_PREFIX=/etc/pki/tls/\n\nCOPY psol/ /tmp\nRUN set -x  \\\n  && addgroup -g 82 -S www-data \\\n  && adduser -u 82 -D -S -h /var/cache/nginx -s /sbin/nologin -G www-data www-data \\\n  && echo -e '@community http://nl.alpinelinux.org/alpine/3.8/community' >> /etc/apk/repositories \\\n  && apk add --no-cache --virtual .build-deps \\\n      build-base \\\n      findutils \\\n      apr-dev \\\n      apr-util-dev \\\n      apache2-dev \\\n      gnupg \\\n      gperf \\\n      icu-dev \\\n      gettext-dev \\\n      libjpeg-turbo-dev \\\n      libpng-dev \\\n      libtool \\\n      ca-certificates \\\n      automake \\\n      autoconf \\\n      git \\\n      jemalloc-dev \\\n      libtool \\\n      binutils \\\n      gnupg \\\n      cmake \\\n      go \\\n      gcc \\\n      build-base \\\n      libc-dev \\\n      make \\\n      wget \\\n      gzip \\\n      libressl-dev \\\n      musl-dev \\\n      pcre-dev \\\n      zlib-dev \\\n      geoip-dev \\\n      git \\\n      linux-headers \\\n      libxslt-dev \\\n      nghttp2 \\\n      gd-dev \\\n      unzip \\\n  && apk add --no-cache --update \\\n      curl \\\n      monit \\\n      bash \\\n      bind-tools \\\n      rsync \\\n      geoip \\\n      libressl \\\n      tini \\\n      tar \\\n  && cd /tmp \\\n  && git clone https://github.com/google/ngx_brotli --depth=1 \\\n  && cd ngx_brotli && git submodule update --init \\\n  && export NGX_BROTLI_STATIC_MODULE_ONLY=1 \\\n  && cd /tmp \\\n  && git clone https://github.com/nbs-system/naxsi.git \\\n  && echo 'adding /usr/local/share/GeoIP/GeoIP.dat database' \\\n  && wget -N https://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz \\\n  && wget -N https://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz \\\n  && gunzip GeoIP.dat.gz \\\n  && gunzip GeoLiteCity.dat.gz \\\n  && mkdir /usr/local/share/GeoIP/ \\\n  && mv GeoIP.dat /usr/local/share/GeoIP/ \\\n  && mv GeoLiteCity.dat /usr/local/share/GeoIP/ \\\n  && chown -R www-data:www-data /usr/local/share/GeoIP/ \\\n  && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n  && mkdir -p /usr/src \\\n  && tar -zxC /usr/src -f nginx.tar.gz \\\n  && rm nginx.tar.gz \\\n  && cd /tmp \\\n  && git clone -b \"v${NGX_PAGESPEED_VER}-stable\" \\\n    --recurse-submodules \\\n    --shallow-submodules \\\n    --depth=1 \\\n    -c advice.detachedHead=false \\\n    -j$(getconf _NPROCESSORS_ONLN) \\\n    https://github.com/apache/incubator-pagespeed-ngx.git \\\n    /tmp/ngxpagespeed \\\n\n  #&& psolurl=\"https://github.com/wodby/nginx-alpine-psol/releases/download/${MOD_PAGESPEED_VER}/psol.tar.gz\" \\\n  #&& wget -qO- \"${psolurl}\" | tar xz -C /tmp/ngxpagespeed \\\n  && cd /tmp \\\n  && tar -zxC /tmp/ngxpagespeed -f psol.tar.gz \\\n  && git clone https://github.com/openresty/echo-nginx-module.git \\\n  && wget https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.zip -O dev.zip \\\n  && wget https://github.com/openresty/set-misc-nginx-module/archive/v0.31.zip -O setmisc.zip \\\n  && wget https://people.freebsd.org/~osa/ngx_http_redis-0.3.8.tar.gz \\\n  && wget https://github.com/openresty/redis2-nginx-module/archive/v0.14.zip -O redis.zip \\\n  && wget https://github.com/openresty/srcache-nginx-module/archive/v0.31.zip -O cache.zip \\\n  && wget https://github.com/FRiCKLE/ngx_cache_purge/archive/2.3.zip -O purge.zip \\\n  && tar -zx -f ngx_http_redis-0.3.8.tar.gz \\\n  && unzip dev.zip \\\n  && unzip setmisc.zip \\\n  && unzip redis.zip \\\n  && unzip cache.zip \\\n  && unzip purge.zip \\\n  && cd /usr/src/nginx-$NGINX_VERSION \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/usr/share/nginx/ \\\n    --sbin-path=/usr/sbin/nginx \\\n    --add-module=/tmp/naxsi/naxsi_src \\\n    --modules-path=/usr/lib/nginx/modules \\\n    --conf-path=${CONF_PREFIX}/nginx.conf \\\n    --error-log-path=${LOG_PREFIX}/error.log \\\n    --http-log-path=${LOG_PREFIX}/access.log \\\n    --pid-path=${VAR_PREFIX}/nginx.pid \\\n    --lock-path=${VAR_PREFIX}/nginx.lock \\\n    --http-client-body-temp-path=${TEMP_PREFIX}/client_temp \\\n    --http-proxy-temp-path=${TEMP_PREFIX}/proxy_temp \\\n    --http-fastcgi-temp-path=${TEMP_PREFIX}/fastcgi_temp \\\n    --http-uwsgi-temp-path=${TEMP_PREFIX}/uwsgi_temp \\\n    --http-scgi-temp-path=${TEMP_PREFIX}/scgi_temp \\\n    --user=www-data \\\n    --group=www-data \\\n    --with-file-aio \\\n    --with-http_ssl_module \\\n    --with-pcre-jit \\\n    --with-http_realip_module \\\n    --with-http_addition_module \\\n    --with-http_sub_module \\\n    --with-http_dav_module \\\n    --with-http_flv_module \\\n    --with-http_mp4_module \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_random_index_module \\\n    --with-http_secure_link_module \\\n    --with-http_stub_status_module \\\n    --with-http_auth_request_module \\\n    --with-http_xslt_module=dynamic \\\n    --with-http_image_filter_module=dynamic \\\n    --with-http_geoip_module=dynamic \\\n    --with-threads \\\n    --with-stream \\\n    --with-stream_ssl_module \\\n    --with-stream_ssl_preread_module \\\n    --with-stream_realip_module \\\n    --with-stream_geoip_module=dynamic \\\n    --with-http_slice_module \\\n    --with-mail \\\n    --with-mail_ssl_module \\\n    --with-compat \\\n    --with-http_v2_module \\\n    --with-ld-opt=\"-Wl,-z,relro,--start-group -lapr-1 -laprutil-1 -licudata -licuuc -lpng -lturbojpeg -ljpeg\" \\\n    --add-module=/tmp/ngx_cache_purge-2.3 \\\n    --add-module=/tmp/ngx_http_redis-0.3.8 \\\n    --add-module=/tmp/redis2-nginx-module-0.14 \\\n    --add-module=/tmp/srcache-nginx-module-0.31 \\\n    --add-module=/tmp/echo-nginx-module \\\n    --add-module=/tmp/ngx_devel_kit-0.3.0 \\\n    --add-module=/tmp/set-misc-nginx-module-0.31 \\\n    --add-module=/tmp/ngx_brotli \\\n    --add-module=/tmp/ngxpagespeed \\\n\n  && make -j$(getconf _NPROCESSORS_ONLN) \\\n  && mv objs/nginx objs/nginx-debug \\\n  && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n  && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n  && mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/usr/share/nginx/ \\\n    --sbin-path=/usr/sbin/nginx \\\n    --add-module=/tmp/naxsi/naxsi_src \\\n    --modules-path=/usr/lib/nginx/modules \\\n    --conf-path=${CONF_PREFIX}/nginx.conf \\\n    --error-log-path=${LOG_PREFIX}/error.log \\\n    --http-log-path=${LOG_PREFIX}/access.log \\\n    --pid-path=${VAR_PREFIX}/nginx.pid \\\n    --lock-path=${VAR_PREFIX}/nginx.lock \\\n    --http-client-body-temp-path=${TEMP_PREFIX}/client_temp \\\n    --http-proxy-temp-path=${TEMP_PREFIX}/proxy_temp \\\n    --http-fastcgi-temp-path=${TEMP_PREFIX}/fastcgi_temp \\\n    --http-uwsgi-temp-path=${TEMP_PREFIX}/uwsgi_temp \\\n    --http-scgi-temp-path=${TEMP_PREFIX}/scgi_temp \\\n    --user=www-data \\\n    --group=www-data \\\n    --with-file-aio \\\n    --with-http_ssl_module \\\n    --with-pcre-jit \\\n    --with-http_realip_module \\\n    --with-http_addition_module \\\n    --with-http_sub_module \\\n    --with-http_dav_module \\\n    --with-http_flv_module \\\n    --with-http_mp4_module \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_random_index_module \\\n    --with-http_secure_link_module \\\n    --with-http_stub_status_module \\\n    --with-http_auth_request_module \\\n    --with-http_xslt_module=dynamic \\\n    --with-http_image_filter_module=dynamic \\\n    --with-http_geoip_module=dynamic \\\n    --with-threads \\\n    --with-stream \\\n    --with-stream_ssl_module \\\n    --with-stream_ssl_preread_module \\\n    --with-stream_realip_module \\\n    --with-stream_geoip_module=dynamic \\\n    --with-http_slice_module \\\n    --with-mail \\\n    --with-mail_ssl_module \\\n    --with-compat \\\n    --with-http_v2_module \\\n    --with-ld-opt=\"-Wl,-z,relro,--start-group -lapr-1 -laprutil-1 -licudata -licuuc -lpng -lturbojpeg -ljpeg\" \\\n    --add-module=/tmp/ngx_cache_purge-2.3 \\\n    --add-module=/tmp/ngx_http_redis-0.3.8 \\\n    --add-module=/tmp/redis2-nginx-module-0.14 \\\n    --add-module=/tmp/srcache-nginx-module-0.31 \\\n    --add-module=/tmp/echo-nginx-module \\\n    --add-module=/tmp/ngx_devel_kit-0.3.0 \\\n    --add-module=/tmp/set-misc-nginx-module-0.31 \\\n    --add-module=/tmp/ngx_brotli \\\n    --add-module=/tmp/ngxpagespeed \\\n\n  && make -j$(getconf _NPROCESSORS_ONLN) \\\n  && make install \\\n  && rm -rf /etc/nginx/html/ \\\n  && mkdir -p /etc/nginx/conf.d/ \\\n  && mkdir -p /usr/share/nginx/html/ \\\n  && install -m644 html/index.html /usr/share/nginx/html/ \\\n  && install -m644 html/50x.html /usr/share/nginx/html/ \\\n  && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n  && strip /usr/sbin/nginx* \\\n  && strip /usr/lib/nginx/modules/*.so \\\n  && mkdir -p /usr/local/bin/ \\\n  && mkdir -p ${CACHE_PREFIX} \\\n  && mkdir -p ${CERTS_PREFIX} \\\n  && cd ${CERTS_PREFIX} \\\n  && openssl dhparam 2048 -out ${CERTS_PREFIX}/dhparam.pem.default \\\n  && apk add --no-cache --virtual .gettext gettext \\\n  && mv /usr/bin/envsubst /tmp/ \\\n\n  && runDeps=\"$( \\\n    scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \\\n      | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n      | sort -u \\\n      | xargs -r apk info --installed \\\n      | sort -u \\\n  )\" \\\n  && apk add --no-cache --virtual .nginx-rundeps $runDeps \\\n  && apk del .build-deps \\\n  && apk del .gettext \\\n  && cd /tmp/naxsi \\\n  && mv naxsi_config/naxsi_core.rules /etc/nginx/naxsi_core.rules \\\n  && mv /tmp/envsubst /usr/local/bin/ \\\n  && rm -rf /tmp/* \\\n  && rm -rf /usr/src/* \\\n  && ln -sf /dev/stdout ${LOG_PREFIX}/access.log \\\n  && ln -sf /dev/stderr ${LOG_PREFIX}/error.log \\\n  && ln -sf /dev/stdout ${LOG_PREFIX}/blocked.log && rm psol.tar.gz\n\nCOPY conf/ /conf\nCOPY test/ /tmp/test\nCOPY error/ /tmp/error/\nCOPY check_wwwdata.sh /usr/bin/check_wwwdata\nCOPY check_folder.sh /usr/bin/check_folder\nCOPY check_host.sh /usr/bin/check_host\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod +x /docker-entrypoint.sh /usr/bin/check_wwwdata /usr/bin/check_folder /usr/bin/check_host\n\nSTOPSIGNAL SIGQUIT\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}