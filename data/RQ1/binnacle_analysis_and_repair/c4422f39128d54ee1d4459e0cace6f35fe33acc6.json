{
  "startTime": 1674235039823,
  "endTime": 1674235040094,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 133
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 165
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM dockercore/golang-cross:latest\n\nENV DEBIAN_FRONTEND noninteractive\n\nARG DOCKER_RELEASE_STAGE\nARG INSTALLER_VERSION\nARG DOCKER_VERSION\nARG DOCKER_COMPOSE_VERSION\nARG DOCKER_MACHINE_VERSION\nARG KITEMATIC_VERSION\nARG VBOX_VERSION\nARG VBOX_REV\nARG MIXPANEL_TOKEN\n\nRUN dpkg --add-architecture i386\nRUN sed -i \"s/main/main contrib non-free/\" /etc/apt/sources.list\nRUN apt-get update && apt-get install --no-install-recommends -yq wine curl unrar unzip && rm -rf /var/lib/apt/lists/*;\n\n# innosetup\nRUN mkdir /innosetup && \\\n    cd /innosetup && \\\n    curl -fsSL -o innounp045.rar \"https://downloads.sourceforge.net/project/innounp/innounp/innounp%200.45/innounp045.rar?r=&ts=1439566551&use_mirror=skylineservers\" && \\\n    unrar e innounp045.rar\n\nRUN cd /innosetup && \\\n    curl -fsSL -o is-unicode.exe https://files.jrsoftware.org/is/5/isetup-5.5.8-unicode.exe && \\\n    wine \"./innounp.exe\" -e \"is-unicode.exe\"\n\nENV GIT_VERSION 2.9.0\n\n# Build CLI binary\nRUN mkdir -p /go/src/github.com/docker/\n\nRUN git clone https://github.com/docker/docker-ce.git /docker-ce && \\\n    cd /docker-ce && \\\n    git checkout \"v${DOCKER_VERSION}\" && \\\n    cp -R components/cli /go/src/github.com/docker/\n\nWORKDIR /go/src/github.com/docker/cli\nRUN VERSION=$DOCKER_VERSION GITCOMMIT=$(cd /docker-ce && git rev-parse --short HEAD) ./scripts/build/windows\n\n# Assemble bundle\nRUN mkdir /bundle\n\nWORKDIR /bundle\n\nRUN cp /go/src/github.com/docker/cli/build/docker-windows-amd64 docker.exe\n\nRUN curl -fsSL -o docker-machine.exe \"https://github.com/docker/machine/releases/download/v$DOCKER_MACHINE_VERSION/docker-machine-Windows-x86_64.exe\"\n\nRUN curl -fsSL -o docker-compose.exe \"https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-Windows-x86_64.exe\"\n\nRUN curl -fsSL -o boot2docker.iso https://github.com/boot2docker/boot2docker/releases/download/v$DOCKER_VERSION/boot2docker.iso\n\nRUN curl -fsSL -o kitematic.zip \"https://github.com/kitematic/kitematic/releases/download/v$KITEMATIC_VERSION/Kitematic-$KITEMATIC_VERSION-Windows.zip\" && \\\n    mkdir kitematic && \\\n    cd kitematic && \\\n    unzip ../kitematic.zip && \\\n    rm ../kitematic.zip\nRUN curl -fsSL -o Git.exe \"https://github.com/git-for-windows/git/releases/download/v$GIT_VERSION.windows.1/Git-$GIT_VERSION-64-bit.exe\"\nRUN curl -fsSL -o virtualbox.exe \"https://download.virtualbox.org/virtualbox/$VBOX_VERSION/VirtualBox-$VBOX_VERSION-$VBOX_REV-Win.exe\" \\\n\t&& echo \"$(curl -fsSL 'https://virtualbox.org/download/hashes/'\"$VBOX_VERSION\"'/SHA256SUMS' | awk '$2 ~ /-Win.exe$/ { print $1 }')  *virtualbox.exe\" | sha256sum -c -\nRUN wine virtualbox.exe -extract -silent -path . && \\\n\t  rm virtualbox.exe && \\\n\t  rm *x86.msi && \\\n\t  mv *_amd64.msi VirtualBox_amd64.msi\n\n# Add installer resources\nCOPY windows /installer\n\nWORKDIR /installer\nRUN rm -rf /tmp/.wine-0/\nRUN wine ../innosetup/ISCC.exe Toolbox.iss /DMyAppVersion=$INSTALLER_VERSION /DMixpanelToken=$MIXPANEL_TOKEN\n"
}