{
  "startTime": 1674238897037,
  "endTime": 1674238897436,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 99
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements. See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership. The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License. You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied. See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n# First stage: the build environment\n# Edge required for rocksdb\nFROM alpine:3.8 AS builder\nMAINTAINER Apache NiFi <dev@nifi.apache.org>\n\nARG UID\nARG GID\nARG MINIFI_VERSION\nARG MINIFI_SOURCE_CODE\n\n# Install the system dependencies needed for a build\nRUN apk --update --no-cache upgrade && apk --update --no-cache add gcc \\\n\tg++ \\\n\tmake \\\n\tbison \\\n\tflex \\\n\tflex-dev \\\n\tmaven \\\n\topenjdk8-jre-base \\\n\topenjdk8 \\\n\tautoconf \\\n\tlibtool \\\n\twget \\\n\tgdb \\\n\tmusl-dev \\\n\tboost-dev \\\n\tvim \\\n\tutil-linux-dev \\\n\tcurl-dev \\\n\tcmake \\\n\tgit \\\n\tnss \\\n\tnss-dev \\\n\tunzip \\\n\tgpsd-dev \\\n\tlibressl-dev \\\n\tzlib-dev \\\n\tbzip2-dev \\\n\tpython3-dev\n\nENV USER minificpp\nENV MINIFI_BASE_DIR /opt/minifi\n\n# Setup minificpp user\nRUN addgroup -g $GID $USER && adduser -u $UID -D -G $USER -g \"\" $USER\nRUN mkdir -p $MINIFI_BASE_DIR\nENV JAVA_HOME /usr/lib/jvm/default-jvm\nENV PATH $PATH:/usr/lib/jvm/default-jvm/bin\n\nADD $MINIFI_SOURCE_CODE $MINIFI_BASE_DIR\nRUN chown -R $USER:$USER $MINIFI_BASE_DIR\n\nUSER $USER\n\nENV MINIFI_HOME $MINIFI_BASE_DIR/nifi-minifi-cpp-$MINIFI_VERSION\n\n# Perform the build\nRUN cd $MINIFI_BASE_DIR \\\n\t&& mkdir build \\\n\t&& cd build \\\n\t&& cmake -DOPENSSL_FORCE_SHARED=true -DDISABLE_JEMALLOC=ON -DSTATIC_BUILD= -DSKIP_TESTS=true -DENABLE_JNI=ON .. \\\n\t&& make -j8 package \\\n\t&& tar -xzvf $MINIFI_BASE_DIR/build/nifi-minifi-cpp-$MINIFI_VERSION-bin.tar.gz -C $MINIFI_BASE_DIR && rm $MINIFI_BASE_DIR/build/nifi-minifi-cpp-$MINIFI_VERSION-bin.tar.gz\n\n# Second stage: the runtime image\n# Edge required for rocksdb\nFROM alpine:3.8\n\nARG UID\nARG GID\nARG MINIFI_VERSION\nARG MINIFI_SOURCE_CODE\n\n# Add testing repo for rocksdb\nRUN echo 'http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories\n\nRUN apk --update --no-cache upgrade && apk add --update --no-cache \\\n\tutil-linux \\\n\tcurl \\\n\tunzip \\\n\tgpsd \\\n\topenjdk8-jre-base \\\n\topenjdk8 \\\n\tnss \\\n\tnss-dev \\\n\tlibressl \\\n\tpython3 \\\n\tzlib\n\n# Start MiNiFi CPP in the foreground\nENV USER minificpp\nENV MINIFI_BASE_DIR /opt/minifi\nENV MINIFI_HOME $MINIFI_BASE_DIR/nifi-minifi-cpp-$MINIFI_VERSION\nENV JAVA_HOME /usr/lib/jvm/default-jvm\nENV PATH $PATH:/usr/lib/jvm/default-jvm/bin\nRUN addgroup -g $GID $USER && adduser -u $UID -D -G $USER -g \"\" $USER\nRUN mkdir -p $MINIFI_BASE_DIR\n\n# Copy built minifi distribution from builder\nCOPY --from=builder ${MINIFI_HOME} ${MINIFI_HOME}\nRUN chown -R ${USER}:${USER} /opt/minifi\n\nUSER $USER\n\nWORKDIR ${MINIFI_HOME}\nCMD ./bin/minifi.sh run\n"
}