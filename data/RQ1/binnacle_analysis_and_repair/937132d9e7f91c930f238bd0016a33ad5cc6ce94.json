{
  "startTime": 1674244146226,
  "endTime": 1674244146568,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 137
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 6,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 118
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 11,
        "columnEnd": 130
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 6,
        "columnEnd": 84
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 6,
        "columnEnd": 42
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 6,
        "columnEnd": 52
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 11,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.5-slim-stretch\n\n# ensure unoconv can locate the uno library\nENV PYTHONPATH=/usr/lib/python3/dist-packages\n\nRUN usermod -d /home www-data \\\n    && chown www-data:www-data /home \\\n    && apt-get update \\\n    # mfr dependencies \\\n    && apt-get install --no-install-recommends -y \\\n        git \\\n        make \\\n        gcc \\\n        build-essential \\\n        gfortran \\\n        r-base \\\n        libblas-dev \\\n        libevent-dev \\\n        libfreetype6-dev \\\n        libjpeg-dev \\\n        libpng-dev \\\n        libtiff5-dev \\\n        libxml2-dev \\\n        libxslt1-dev \\\n        zlib1g-dev \\\n        # convert .step to jsc3d-compatible format\n        freecad \\\n        # pspp dependencies\n        pspp \\\n        # gosu dependencies\n        curl \\\n        gnupg2 \\\n    # gosu\n    && export GOSU_VERSION='1.10' \\\n    && mkdir ~/.gnupg && chmod 600 ~/.gnupg && echo \"disable-ipv6\" >> ~/.gnupg/dirmngr.conf \\\n    && for server in hkp://ipv4.pool.sks-keyservers.net:80 \\\n                     hkp://ha.pool.sks-keyservers.net:80 \\\n                     hkp://pgp.mit.edu:80 \\\n                     hkp://keyserver.pgp.com:80; \\\n    do \\\n      gpg --batch --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && break || echo \"Trying new server...\" \\\n    ; done \\\n    && curl -f -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n   && curl -f -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n   && gpg --batch --verify /usr/local/bin/gosu.asc \\\n   && rm /usr/local/bin/gosu.asc \\\n   && chmod +x /usr/local/bin/gosu \\\n    # /gosu\n    && apt-get clean \\\n    && apt-get autoremove -y \\\n        curl \\\n        gnupg2 \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && pip install --no-cache-dir -U pip \\\n    && pip install --no-cache-dir setuptools==37.0.0 \\\n    && mkdir -p /code\n\nENV LIBREOFFICE_VERSION 6.1.6\nENV LIBREOFFICE_ARCHIVE LibreOffice_6.1.6_Linux_x86-64_deb.tar.gz\nENV LIBREOFFICE_MIRROR_URL https://download.documentfoundation.org/libreoffice/stable/\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        curl \\\n        gnupg2 \\\n    && for server in hkp://ipv4.pool.sks-keyservers.net:80 \\\n                     hkp://ha.pool.sks-keyservers.net:80 \\\n                     hkp://pgp.mit.edu:80 \\\n                     hkp://keyserver.pgp.com:80; \\\n    do \\\n      gpg --batch --keyserver \"$server\" --recv-keys AFEEAEA3 && break || echo \"Trying new server...\" \\\n    ; done \\\n    && curl -f -SL \"$LIBREOFFICE_MIRROR_URL/$LIBREOFFICE_VERSION/deb/x86_64/$LIBREOFFICE_ARCHIVE\" -o $LIBREOFFICE_ARCHIVE \\\n        && curl -f -SL \"$LIBREOFFICE_MIRROR_URL/$LIBREOFFICE_VERSION/deb/x86_64/$LIBREOFFICE_ARCHIVE.asc\" -o $LIBREOFFICE_ARCHIVE.asc \\\n        && gpg --batch --verify \"$LIBREOFFICE_ARCHIVE.asc\" \\\n        && mkdir /tmp/libreoffice \\\n        && tar -xvf \"$LIBREOFFICE_ARCHIVE\" -C /tmp/libreoffice/ --strip-components=1 \\\n        && dpkg -i /tmp/libreoffice/**/*.deb \\\n        && rm $LIBREOFFICE_ARCHIVE* \\\n        && rm -Rf /tmp/libreoffice \\\n    && apt-get clean \\\n    && apt-get autoremove -y \\\n        curl \\\n        gnupg2 \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN pip install --no-cache-dir unoconv==0.8.2\n\nWORKDIR /code\n\nCOPY ./requirements.txt ./\n\nRUN pip install --no-cache-dir -r ./requirements.txt\n\n# Copy the rest of the code over\nCOPY ./ ./\n\nARG GIT_COMMIT=\nENV GIT_COMMIT ${GIT_COMMIT}\n\nRUN python setup.py develop\n\nEXPOSE 7778\n\nCMD [\"gosu\", \"www-data\", \"invoke\", \"server\"]\n"
}