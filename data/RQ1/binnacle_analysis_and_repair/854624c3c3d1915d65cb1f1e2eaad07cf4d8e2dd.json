{
  "startTime": 1674242867864,
  "endTime": 1674242868512,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Pull base image.\nFROM ubuntu:16.04\n\nRUN apt-get update && apt-get upgrade -y && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential scons autoconf automake libtool curl make g++ unzip \\\n        bzip2 cmake git pkg-config \\\n        python python-dev python-pip python-virtualenv \\\n        wget zlib1g-dev libbz2-dev libssl-dev liblz4-dev mpich \\\n        libjsoncpp-dev flex javacc bison openjdk-8-jdk \\\n        libleveldb-dev libsnappy-dev libhdf5-serial-dev \\\n        libatlas-base-dev libboost-all-dev libgflags-dev libgoogle-glog-dev \\\n        liblmdb-dev \\\n        libjpeg8-dev libtiff5-dev libjasper-dev libpng12-dev libgtk-3-dev \\\n        libopenmpi-dev \\\n        libgtest-dev ed \\\n        libgtk2.0-dev pkg-config libavcodec-dev \\\n        libavformat-dev libswscale-dev \\\n        libtbb2 libtbb-dev libjpeg-dev libpng-dev \\\n        libtiff-dev libdc1394-22-dev libopenblas-dev && \\\n        apt-get remove -y libprotobuf-dev protobuf-compiler && \\\n        rm -rf /var/lib/apt/lists/* /root/.cache\n\n# Google Test\nRUN cd /usr/src/gtest && cmake . && make && mv libgtest* /usr/lib/\n\n# Protobuf\nRUN cd / && git clone https://github.com/google/protobuf.git && \\\n    cd protobuf && git checkout v3.6.1 && ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local && \\\n    make -j $(cat /proc/cpuinfo | wc -l) && \\\n    make install && ldconfig && \\\n    rm -rf /protobuf\n\n# OpenCV\nRUN mkdir /opencv && cd /opencv && \\\n    wget -O opencv.zip https://github.com/opencv/opencv/archive/3.3.0.zip && \\\n    unzip opencv.zip && cd opencv-3.3.0 && \\\n    mkdir build && cd build && \\\n    cmake -D CMAKE_BUILD_TYPE=Release \\\n    -D CMAKE_INSTALL_PREFIX=/usr/local .. && \\\n    make -j $(cat /proc/cpuinfo | wc -l) && make install && \\\n    rm -rf /opencv\n\n# TileDB\nRUN cd / && wget https://github.com/TileDB-Inc/TileDB/archive/1.3.1.tar.gz && \\\n    tar xf 1.3.1.tar.gz && cd TileDB-1.3.1 && mkdir build && cd build && \\\n    ../bootstrap --prefix=/usr/local/ && make -j && make install-tiledb && \\\n    rm -rf /TileDB-1.3.1 && rm 1.3.1.tar.gz\n\n# Faiss\nRUN cd / && \\\n    wget https://github.com/facebookresearch/faiss/archive/v1.4.0.tar.gz && \\\n    tar xf v1.4.0.tar.gz && \\\n    cd faiss-1.4.0 && rm CMakeLists.txt && \\\n    wget https://gist.githubusercontent.com/luisremis/758c71c6a86cb3e4fe2311c415e07547/raw/3c51b5ed7d3f16a4d684d9ea524602c9f1f8593a/CMakeLists.txt && \\\n    mkdir build && cd build && cmake ../ && make -j && \\\n    mkdir /usr/local/include/faiss/ && rm v1.4.0.tar.gz\nRUN cp -r faiss-1.4.0/* /usr/local/include/faiss/ && \\\n    mv faiss-1.4.0/build/lib/libfaiss.so /usr/local/lib/ && \\\n    rm -rf faiss-1.4*\n\n# PMGD install\nRUN cd / && wget https://github.com/intellabs/pmgd/archive/v2.0.0.tar.gz && \\\n    tar xf v2.0.0.tar.gz && mv pmgd-2.0.0 pmgd && cd pmgd && \\\n    make PMOPT=MSYNC && rm v2.0.0.tar.gz\n\n# Valijson\nRUN cd / && git clone https://github.com/tristanpenman/valijson.git && \\\n    cd valijson && cp -r include/* /usr/local/include/\n\n# VDMS install\nRUN git clone https://github.com/intellabs/vdms/ && \\\n    cd vdms && git checkout develop && \\\n    mkdir db && scons -j16 INTEL_PATH=/\n\nRUN rm -rf /*.tar.gz\n"
}