{
  "startTime": 1674249502310,
  "endTime": 1674249502478,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 19,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 62,
        "columnEnd": 79
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 as root-build\nLABEL maintainer caffe-maint@googlegroups.com\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cmake \\\n        git \\\n        wget \\\n        libatlas-base-dev \\\n        libboost-all-dev \\\n        libgflags-dev \\\n        libgoogle-glog-dev \\\n        libhdf5-serial-dev \\\n        libleveldb-dev \\\n        liblmdb-dev \\\n        libopencv-dev \\\n        libprotobuf-dev \\\n        libsnappy-dev \\\n        protobuf-compiler \\\n        python-dev \\\n        python-numpy \\\n        python-pip \\\n        python-setuptools \\\n\tpython-matplotlib \\\n\tpython-pil \\\n\tcython \\\n\tpython-skimage \\\n        python-scipy && \\\n    rm -rf /var/lib/apt/lists/*\n\nFROM golang:alpine AS build\nRUN apk add --no-cache git\nADD . /go/src/github.com/stefanolsenn/nsfw\nWORKDIR /go/src/github.com/stefanolsenn/nsfw\n#disable crosscompiling\nENV CGO_ENABLED=0\n#compile linux only\nENV GOOS=linux\n\n#build the binary with debug information removed\nRUN go get -d -v\nRUN go build -ldflags '-w -s' -a -installsuffix cgo -o /go/bin/github.com/stefanolsenn/nsfw\n\nFROM root-build\nCOPY --from=build /go/bin/github.com/stefanolsenn/nsfw /go/bin/github.com/stefanolsenn/nsfw\nADD . /workspace\n##ADD classify_nsfw.py /go/bin/github.com/stefanolsenn/nsfw\nENV CAFFE_ROOT=/opt/caffe\nWORKDIR $CAFFE_ROOT\n\n# FIXME: use ARG instead of ENV once DockerHub supports this\n# https://github.com/docker/hub-feedback/issues/460\nENV CLONE_TAG=1.0\n\nRUN git clone -b ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git . && \\\n    pip install --no-cache-dir && pip install --no-cache-dir requests && \\\n    cd python && for req in $(cat requirements.txt) pydot; do pip install --no-cache-dir $req; done && cd .. && \\\n    mkdir build && cd build && \\\n    cmake -DCPU_ONLY=1 .. && \\\n    make -j\"$(nproc)\"\n\nENV PYCAFFE_ROOT $CAFFE_ROOT/python\nENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH\nENV PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf && ldconfig\n\nWORKDIR /workspace\nENTRYPOINT [\"/go/bin/github.com/stefanolsenn/nsfw\"]\n#ENTRYPOINT [\"/bin/sh\"]\n"
}