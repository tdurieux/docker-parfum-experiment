{
  "startTime": 1674248781211,
  "endTime": 1674248781506,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 6,
        "columnEnd": 111
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 43
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 44
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 30,
        "columnStart": 6,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.6\n\nENV VERSION=v8.1.2 NPM_VERSION=5 YARN_VERSION=latest\n\n# For base builds\n#ENV CONFIG_FLAGS=\"--fully-static --without-npm\" DEL_PKGS=\"libstdc++\" RM_DIRS=/usr/include\n\nRUN apk add --no-cache curl make gcc g++ python linux-headers binutils-gold gnupg libstdc++ && \\\n  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \\\n    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n    FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n    B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n    56730D5401028683275BD23C23EFEFE93C4CFFFE && \\ && \\\n  curl -f -sSLO https://nodejs.org/dist/${VERSION}/node-${VERSION}.tar.xz && \\\n  curl -f -sSL https://nodejs.org/dist/${VERSION}/SHASUMS256.txt.asc | gpg --batch --decrypt | \\\n    grep \" node-${VERSION}.tar.xz\\$\" | sha256sum -c | grep . && \\\n  tar -xf node-${VERSION}.tar.xz && \\\n  cd node-${VERSION} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr ${CONFIG_FLAGS} && \\\n  make -j$(getconf _NPROCESSORS_ONLN) && \\\n  make install && \\\n  cd / && \\\n  if [ -z \"$CONFIG_FLAGS\" ]; then \\\n    npm install -g npm@${NPM_VERSION} && \\\n    find /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf && \\\n    if [ -n \"$YARN_VERSION\" ]; then \\\n      gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \\\n        6A010C5166006599AA17F08146C2130DFD2497F5 && \\ && \\\n      curl -f -sSL -O https://yarnpkg.com/${YARN_VERSION}.tar.gz -O && \\\n      gpg --batch --verify ${YARN_VERSION}.tar.gz.asc ${YARN_VERSION}.tar.gz && \\\n      mkdir /usr/local/share/yarn && \\\n      tar -xf ${YARN_VERSION}.tar.gz -C /usr/local/share/yarn --strip 1 && \\\n      ln -s /usr/local/share/yarn/bin/yarn /usr/local/bin/ && \\\n      ln -s /usr/local/share/yarn/bin/yarnpkg /usr/local/bin/ && \\\n      rm ${YARN_VERSION}.tar.gz*; \\\n    fi; npm cache clean --force; \\\n  fi && \\\n  apk del curl make gcc g++ python linux-headers binutils-gold gnupg ${DEL_PKGS} && \\\n  rm -rf ${RM_DIRS} /node-${VERSION}* /usr/share/man /tmp/* /var/cache/apk/* \\\n    /root/.npm /root/.node-gyp /root/.gnupg /usr/lib/node_modules/npm/man \\\n    /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html /usr/lib/node_modules/npm/scripts"
}