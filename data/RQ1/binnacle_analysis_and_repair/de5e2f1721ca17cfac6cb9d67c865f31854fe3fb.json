{
  "startTime": 1674249004915,
  "endTime": 1674249005295,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile for mediagoblin\n#\n\nFROM debian:jessie\nMAINTAINER kev <noreply@easypi.pro>\n\nRUN set -xe \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y automake \\\n                          gir1.2-gst-plugins-base-1.0 \\\n                          gir1.2-gstreamer-1.0 \\\n                          git-core \\\n                          gstreamer1.0-libav \\\n                          gstreamer1.0-plugins-bad \\\n                          gstreamer1.0-plugins-base \\\n                          gstreamer1.0-plugins-good \\\n                          gstreamer1.0-plugins-ugly \\\n                          gstreamer1.0-tools \\\n                          libasound2-dev \\\n                          libgstreamer-plugins-base1.0-dev \\\n                          libsndfile1-dev \\\n                          nginx \\\n                          nodejs-legacy \\\n                          npm \\\n                          poppler-utils \\\n                          python \\\n                          python-dev \\\n                          python-gi \\\n                          python-gst-1.0 \\\n                          python-gst-1.0 \\\n                          python-imaging \\\n                          python-lxml \\\n                          python-numpy \\\n                          python-scipy \\\n                          python-virtualenv \\\n                          python3-gi \\\n                          sudo \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN set -xe \\\n    && useradd -d /var/lib/mediagoblin -m -r -g www-data mediagoblin \\\n    && groupadd -r mediagoblin \\\n    && usermod -a -G mediagoblin mediagoblin \\\n    && mkdir -p /var/log/mediagoblin \\\n                /srv/mediagoblin.example.org/mediagoblin \\\n    && chown -hR mediagoblin:www-data /var/log/mediagoblin \\\n                                      /srv/mediagoblin.example.org \\\n    && echo 'mediagoblin ALL=(ALL:ALL) NOPASSWD: /usr/sbin/nginx, /bin/chown' >> /etc/sudoers\n\nUSER mediagoblin\n\nWORKDIR /srv/mediagoblin.example.org/mediagoblin\n\nRUN set -xe \\\n    && git clone http://git.savannah.gnu.org/r/mediagoblin.git . \\\n    && git checkout stable \\\n    && git submodule sync \\\n    && git submodule update --force --init --recursive \\\n    && ./bootstrap.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && bin/easy_install flup==1.0.3.dev-20110405 \\\n    && bin/pip install scikits.audiolab \\\n    && ln -s /var/lib/mediagoblin user_dev \\\n    && cp -av mediagoblin.ini mediagoblin_local.ini \\\n    && cp -av paste.ini paste_local.ini \\\n    && sed -i 's@.*sql_engine = .*@sql_engine = sqlite:////var/lib/mediagoblin/mediagoblin.db@' mediagoblin_local.ini \\\n    && { \\\n        echo '[[mediagoblin.media_types.video]]'; \\\n        echo '[[mediagoblin.media_types.audio]]'; \\\n        echo '[[mediagoblin.media_types.pdf]]'; \\\n       } >> mediagoblin_local.ini\n\nCOPY nginx.conf /etc/nginx/sites-enabled/default\n\nVOLUME /var/lib/mediagoblin\n\nEXPOSE 80\n\nENV MG_USER admin\nENV MG_PASS admin\nENV MG_MAIL admin@easypi.pro\n\nCMD set -xe \\\n    && sudo nginx \\\n    && sudo chown -hR mediagoblin:www-data /var/lib/mediagoblin \\\n    && { \\\n        bin/gmg dbupdate; \\\n        bin/gmg adduser --username \"${MG_USER}\" --password \"${MG_PASS}\" --email \"${MG_MAIL}\"; \\\n        bin/gmg makeadmin \"${MG_USER}\"; \\\n       } \\\n    && ./lazyserver.sh --server-name=fcgi fcgi_host=127.0.0.1 fcgi_port=26543\n"
}