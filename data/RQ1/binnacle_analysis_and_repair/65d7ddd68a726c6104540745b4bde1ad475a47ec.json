{
  "startTime": 1674235163835,
  "endTime": 1674235164356,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 176,
        "lineEnd": 176,
        "columnStart": 4,
        "columnEnd": 133
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 180,
        "lineEnd": 180,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 176,
        "lineEnd": 176,
        "columnStart": 4,
        "columnEnd": 133
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 14,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 14,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 14,
        "columnEnd": 98
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 14,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 35,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 79,
        "columnEnd": 118
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# BSD 3-Clause License\n#\n# Copyright (c) 2017, Juliano Petronetto\n# All rights reserved.\n#\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are met:\n#\n# * Redistributions of source code must retain the above copyright notice, this\n#   list of conditions and the following disclaimer.\n#\n# * Redistributions in binary form must reproduce the above copyright notice,\n#   this list of conditions and the following disclaimer in the documentation\n#   and/or other materials provided with the distribution.\n#\n# * Neither the name of the copyright holder nor the names of its\n#   contributors may be used to endorse or promote products derived from\n#   this software without specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nFROM alpine:3.8\n\nLABEL maintainer=\"Juliano Petronetto <juliano@petronetto.com.br>\"\n\nENV BUILD_DEPS=\"autoconf g++ make php7-dev git php7-pear tzdata libmemcached-dev rabbitmq-c-dev zlib-dev\" \\\n    LC_ALL=en_US.UTF-8 \\\n    LANG=en_US.UTF-8 \\\n# XDebug configs\n    XDEBUG_ENABLE=0 \\\n    XDEBUG_REMOTE_PORT=9000 \\\n    XDEBUG_HOST=localhost \\\n    XDEBUG_LOG=/var/log/xdebug/xdebug.log \\\n    PHP_MEMCACHE_BRANCH=NON_BLOCKING_IO_php7 \\\n    PHP_MEMCACHED_VERSION=3.0.4-r1 \\\n    PHP_REDIS_VERSION=3.1.6 \\\n    PHP_MONGODB_VERSION=1.4.4-r0 \\\n    PHP_IGBINARY_VERSION=2.0.8 \\\n    PHP_OAUTH_VERSION=2.0.3 \\\n    PHP_SYSCONF_PATH=/etc/php7 \\\n# New Relic\n    NEWRELIC_VERSION=8.5.0.235 \\\n    NEWRELIC_ENABLED=0 \\\n    NEWRELIC_APP_NAME=\"PHP Application\" \\\n    NEWRELIC_LICENSE= \\\n    NEWRELIC_LOG_FILE=/var/log/newrelic/newrelic.log \\\n    NEWRELIC_LOG_LEVEL=info \\\n    NEWRELIC_DAEMON_LOG_FILE=/var/log/newrelic/daemon.log \\\n    NEWRELIC_DAEMON_LOG_LEVEL=info \\\n# PHP Configs\n    PHP_MEMORY_LIMIT=256M \\\n    PHP_PRECISION=-1 \\\n    PHP_OUTPUT_BUFFERING=4096 \\\n    PHP_SERIALIZE_PRECISION=-1 \\\n    PHP_MAX_EXECUTION_TIME=60 \\\n    PHP_ERROR_REPORTING=E_ALL \\\n    PHP_DISPLAY_ERRORS=0 \\\n    PHP_DISPLAY_STARTUP_ERRORS=0 \\\n    PHP_TRACK_ERRORS=0 \\\n    PHP_LOG_ERRORS=1 \\\n    PHP_LOG_ERRORS_MAX_LEN=10240 \\\n    PHP_ACCESS_LOG=/var/log/php/access.log \\\n    PHP_POST_MAX_SIZE=20M \\\n    PHP_MAX_UPLOAD_FILESIZE=10M \\\n    PHP_MAX_FILE_UPLOADS=20 \\\n    PHP_MAX_INPUT_TIME=60 \\\n    PHP_VARIABLES_ORDER=EGPCS \\\n    PHP_REQUEST_ORDER=GP \\\n    PHP_OPCACHE_ENABLE=1 \\\n    PHP_OPCACHE_ENABLE_CLI=0 \\\n    PHP_OPCACHE_MEMORY_CONSUMPTION=128 \\\n    PHP_OPCACHE_INTERNED_STRINGS_BUFFER=32 \\\n    PHP_OPCACHE_MAX_ACCELERATED_FILES=10000 \\\n    PHP_OPCACHE_USE_CWD=1 \\\n    PHP_OPCACHE_VALIDATE_TIMESTAMPS=1 \\\n    PHP_OPCACHE_REVALIDATE_FREQ=2 \\\n    PHP_OPCACHE_ENABLE_FILE_OVERRIDE=0 \\\n    PHP_ZEND_ASSERTIONS=-1 \\\n    PHP_PM_ERROR_LOG=/var/log/php/fpm-error.log \\\n    PHP_PM=ondemand \\\n    PHP_PM_MAX_CHILDREN=100 \\\n    PHP_PM_START_SERVERS=20 \\\n    PHP_PM_MIN_SPARE_SERVERS=20 \\\n    PHP_PM_MAX_SPARE_SERVERS=20 \\\n    PHP_PM_PROCESS_IDLE_TIMEOUT=60s \\\n    PHP_PM_MAX_REQUESTS=500\n\n# Copying the config files\nCOPY ./ /app\n\n# Installing necessary packages\nRUN set -ex; \\\n    apk --update upgrade --no-cache; \\\n    apk add --no-cache --virtual .build-deps ${BUILD_DEPS}; \\\n    apk add --no-cache \\\n        curl \\\n        zlib \\\n        ca-certificates \\\n        openssl \\\n        libmemcached \\\n        rabbitmq-c \\\n        php7 \\\n        php7-dom \\\n        php7-fpm \\\n        php7-cgi \\\n        php7-mbstring \\\n        php7-mcrypt \\\n        php7-opcache \\\n        php7-pdo \\\n        php7-pdo_pgsql \\\n        php7-pdo_sqlite \\\n        php7-fileinfo \\\n        php7-xml \\\n        php7-simplexml \\\n        php7-xmlreader \\\n        php7-xmlwriter \\\n        php7-phar \\\n        php7-openssl \\\n        php7-json \\\n        php7-curl \\\n        php7-ctype \\\n        php7-session \\\n        php7-zlib \\\n        php7-tokenizer \\\n        php7-xdebug; \\\n# Configuring timezones\n    cp /usr/share/zoneinfo/Etc/UTC /etc/localtime; \\\n    echo \"UTC\" | tee /etc/timezone; \\\n# install PHP driver\n    git clone https://github.com/mongodb/mongo-php-driver.git /tmp/php-mongodb && \\\n    cd /tmp/php-mongodb && \\\n    git submodule update --init && \\\n    phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/usr/bin/php-config7 && make all && make install && \\\n    cd .. && rm -rf /tmp/php-mongodb/ && \\\n    echo 'extension=mongodb.so' >> ${PHP_SYSCONF_PATH}/conf.d/mongodb.ini \\\n    ; \\\n    git clone --depth=1 -b ${PHP_MEMCACHE_BRANCH} https://github.com/websupport-sk/pecl-memcache.git /tmp/php-memcache && \\\n    cd /tmp/php-memcache && \\\n    phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/usr/bin/php-config7 && make && make install && \\\n    cd .. && rm -rf /tmp/php-memcache/ && \\\n    echo 'extension=memcache.so' >> ${PHP_SYSCONF_PATH}/conf.d/memcache.ini \\\n    ; \\\n    git clone --depth=1 -b ${PHP_IGBINARY_VERSION} https://github.com/igbinary/igbinary.git /tmp/php-igbinary && \\\n    cd /tmp/php-igbinary && \\\n    phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CFLAGS=\"-O2 -g\" --enable-igbinary --with-php-config=/usr/bin/php-config7 && make && make install && \\\n    cd .. && rm -rf /tmp/php-igbinary/ && \\\n    echo 'extension=igbinary.so' >> ${PHP_SYSCONF_PATH}/conf.d/igbinary.ini \\\n    ; \\\n    cd /tmp && wget https://pecl.php.net/get/oauth-${PHP_OAUTH_VERSION}.tgz && tar xvzf oauth-${PHP_OAUTH_VERSION}.tgz && \\\n    cd oauth-${PHP_OAUTH_VERSION} && \\\n    phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/usr/bin/php-config7 && make && make install && \\\n    cd .. && rm -rf /tmp/${PHP_OAUTH_VERSION}/ && \\\n    echo 'extension=oauth.so' >> ${PHP_SYSCONF_PATH}/conf.d/oauth.ini \\\n    ; rm oauth-${PHP_OAUTH_VERSION}.tgz \\\n    git clone --depth=1 -b ${PHP_REDIS_VERSION} https://github.com/phpredis/phpredis.git /tmp/phpredis && \\\n    cd /tmp/phpredis && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n    cd .. && rm -rf /tmp/phpredis && \\\n    echo 'extension=redis.so' >> ${PHP_SYSCONF_PATH}/conf.d/redis.ini \\\n    ; \\\n    rm -rf /tmp/pear; \\\n# Create application folder\n    mkdir -p /app; \\\n# Creating www-data user and group\n    addgroup -g 1000 -S www-data; \\\n\tadduser -u 1000 -D -S -h /app -s /sbin/nologin -G www-data www-data; \\\n# Installing New Relic Agent\n    mkdir /opt && cd /opt; \\\n    curl -f -LOk https://download.newrelic.com/php_agent/archive/${NEWRELIC_VERSION}/newrelic-php5-${NEWRELIC_VERSION}-linux-musl.tar.gz; \\\n    gzip -dc newrelic-php5-${NEWRELIC_VERSION}-linux-musl.tar.gz | tar xf -; \\\n    ./newrelic-php5-${NEWRELIC_VERSION}-linux-musl/newrelic-install install; \\\n# Installing Composer\n    curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer; \\\n# Compying PHP config files\n    cp -a /app/config/php.ini /etc/php7/php.ini; \\\n    cp -a /app/config/www.conf /etc/php7/php-fpm.d/www.conf; \\\n    cp -a /app/config/php-fpm.conf /etc/php7/php-fpm.conf; \\\n    cp -a /app/config/xdebug.ini /etc/php7/conf.d/xdebug.ini; \\\n    cp -a /app/config/newrelic.ini /etc/php7/conf.d/newrelic.ini; \\\n# Cleaning\n    apk del .build-deps; \\\n    rm -rf /var/cache/apk/*; \\\n    rm -rf /app/config;\n\nWORKDIR /app\n\n# The container shouldn't run as root, it can be a potential\n# security issue, obviously, depending the enviroment\n# but to ensure the security, we aren't going to run as root.\nUSER www-data\n\nCMD [\"/usr/sbin/php-fpm7\"]\n"
}