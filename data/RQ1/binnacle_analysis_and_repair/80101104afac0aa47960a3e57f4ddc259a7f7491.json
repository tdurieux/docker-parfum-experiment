{
  "startTime": 1674248559456,
  "endTime": 1674248559638,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 2,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Builds and runs a simple nginx server, traced by Datadog\nFROM ubuntu:18.04\n\nARG NGINX_VERSION=1.14.0\n\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y git gnupg wget tar && rm -rf /var/lib/apt/lists/*;\n\n# Install nginx\nRUN wget https://nginx.org/keys/nginx_signing.key && \\\n  apt-key add nginx_signing.key && \\\n  echo deb https://nginx.org/packages/ubuntu/ bionic nginx >> /etc/apt/sources.list && \\\n  echo deb-src https://nginx.org/packages/ubuntu/ bionic nginx >> /etc/apt/sources.list && \\\n  apt-get update && \\\n  apt-get install -y --no-install-recommends nginx=${NGINX_VERSION}-1~bionic && rm -rf /var/lib/apt/lists/*;\n# Configure nginx\nCOPY ./examples/nginx-tracing/nginx.conf /etc/nginx/nginx.conf\nCOPY ./examples/nginx-tracing/dd-config.json /etc/dd-config.json\nRUN mkdir -p /var/www/\nCOPY ./examples/nginx-tracing/index.html /var/www/index.html\n\n# Install nginx-opentracing\nRUN get_latest_release() { \\\n  { \\\n  wget -qO- \"https://api.github.com/repos/$1/releases/latest\" | grep '\"tag_name\":' | sed -E 's/.*\"([^\"]+)\".*/\\1/'; \\\n  } && \\\n  OPENTRACING_NGINX_VERSION=\"$(get_latest_release opentracing-contrib/nginx-opentracing)\" && \\\n  DD_OPENTRACING_CPP_VERSION=\"$(get_latest_release DataDog/dd-opentracing-cpp)\" && \\\n  \\\n  wget https://github.com/opentracing-contrib/nginx-opentracing/releases/download/${OPENTRACING_NGINX_VERSION}/linux-amd64-nginx-${NGINX_VERSION}-ngx_http_module.so.tgz && \\\n  NGINX_MODULES=$(nginx -V 2>&1 | grep \"configure arguments\" | sed -n 's/.*--modules-path=\\([^ ]*\\).*/\\1/p') && \\\n  tar zxvf linux-amd64-nginx-${NGINX_VERSION}-ngx_http_module.so.tgz -C \"${NGINX_MODULES}\" && \\\n  # Install Datadog module\n  wget -O - https://github.com/DataDog/dd-opentracing-cpp/releases/download/${DD_OPENTRACING_CPP_VERSION}/linux-amd64-libdd_opentracing_plugin.so.gz | gunzip -c > /usr/local/lib/libdd_opentracing_plugin.so \\\n} && rm linux-amd64-nginx-${NGINX_VERSION}-ngx_http_module.so.tgz\n\n# Test nginx config.\nRUN nginx -t\n\nEXPOSE 80\nCMD [ \"nginx\", \"-g\", \"daemon off;\"]\n"
}