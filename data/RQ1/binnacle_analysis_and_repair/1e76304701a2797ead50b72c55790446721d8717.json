{
  "startTime": 1674249299266,
  "endTime": 1674249299380,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stable as build-env\n\nENV DEBIAN_FRONTEND=noninteractive\nENV PACKER_LOG=1\n\nRUN apt-get update -qy \\\n && apt-get upgrade -qy \\\n && apt-get install --no-install-recommends -y \\\n    bridge-utils \\\n    iproute2 \\\n    python3-ipy \\\n    tcpdump \\\n    htop \\\n    unzip \\\n    curl \\\n    socat \\\n    screen \\\n    qemu-kvm \\\n    telnet \\\n    vim \\\n    procps \\\n    openssh-client \\\n    cloud-image-utils \\\n && rm -rf /var/lib/apt/lists/*\n\n# We want to curl the image first so we can cache it inside Docker's FS instead of Packer pulling it on each build\nRUN curl -f -o /ubuntu-base.img https://cloud-images.ubuntu.com/xenial/20181223/xenial-server-cloudimg-amd64-disk1.img\n\nRUN wget -nv https://releases.hashicorp.com/packer/1.3.3/packer_1.3.3_linux_amd64.zip\nRUN unzip -b -qq packer_1.3.3_linux_amd64.zip -d /usr/local/bin\n\nCOPY cloud-config.yaml /cloud-config.yaml\nRUN cloud-localds /user-data.img /cloud-config.yaml\n\nCOPY provision.sh /\nCOPY packer.json /\nRUN packer build /packer.json\n\n\n\n# Runtime container\nFROM debian:stable\n\nRUN apt-get update -qy \\\n && apt-get upgrade -qy \\\n && apt-get install --no-install-recommends -y \\\n    bridge-utils \\\n    iproute2 \\\n    python3-ipy \\\n    tcpdump \\\n    htop \\\n    unzip \\\n    curl \\\n    socat \\\n    screen \\\n    qemu-kvm \\\n    telnet \\\n    vim \\\n    procps \\\n    openssh-client \\\n    cloud-image-utils \\\n && rm -rf /var/lib/apt/lists/*\n\nCOPY --from=build-env /image/utility-vm /utility-vm.img\nCOPY --from=build-env /user-data.img /user-data.img\nCOPY --from=build-env /ubuntu-base.img /ubuntu-base.img\n\nCOPY launch.sh /\n\nEXPOSE 22 161/udp 830 5000 10000-10099\n\nENTRYPOINT [\"/launch.sh\"]\n"
}