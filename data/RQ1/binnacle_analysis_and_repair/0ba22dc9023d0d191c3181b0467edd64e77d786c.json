{
  "startTime": 1674241151151,
  "endTime": 1674241151242,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#################\n# BUILD CONTAINER\nFROM devdocker.mulesoft.com:18078/mulesoft/core-paas-base-image-node-8.12:v2.0.7 as BUILD\n\nUSER root\n\n# Add dependencies and setup working directory\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    git \\\n    phantomjs \\\n    bzip2 \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install and cache node_modules/\nCOPY --chown=app:app package*.json /code/\nWORKDIR /code\nUSER app\nRUN npm set progress=false && \\\n    npm install -s --no-progress && npm cache clean --force;\n\n# Build project\nCOPY . /code\nRUN npm run build && \\\n    npm prune -s --production\n\n\n###################\n# RUNTIME CONTAINER\nFROM devdocker.mulesoft.com:18078/mulesoft/core-paas-base-image-ubuntu:v2.2.149\n\n# Intall build dependencies\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n      python \\\n && rm -rf /var/lib/apt/lists/*\n\n# Add app user\nRUN groupadd -g 2020 app\nRUN useradd -u 2020 -g 2020 -r -m -d /usr/src/app app\n\n# Copy built artifacts from build container\nCOPY --from=BUILD /code/build /usr/src/app\n\n# Copy python server file\nCOPY --chown=app:app server.py /usr/src/app/\nWORKDIR /usr/src/app\nUSER app\n\nEXPOSE 3000\nCMD [\"python\", \"server.py\", \"'/'\", \"3000\"]\n"
}