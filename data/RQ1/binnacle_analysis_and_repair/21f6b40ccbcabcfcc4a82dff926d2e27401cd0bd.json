{
  "startTime": 1674240653374,
  "endTime": 1674240653524,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This image combines all central components into one container, for easier\n# deployment and management.\nFROM debian:9\n\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential curl sqlite3 nginx sudo procps && rm -rf /var/lib/apt/lists/*;\n\n# Install redis.\nADD http://download.redis.io/redis-stable.tar.gz /tmp/redis-stable.tar.gz\nRUN tar -xvzf /tmp/redis-stable.tar.gz -C /tmp && rm /tmp/redis-stable.tar.gz\nRUN cd /tmp/redis-stable && make install\n\nRUN mkdir -p -m 777 /var/log/kraken/kraken-build-index\nRUN mkdir -p -m 777 /var/log/kraken/kraken-origin\nRUN mkdir -p -m 777 /var/log/kraken/kraken-proxy\nRUN mkdir -p -m 777 /var/log/kraken/kraken-testfs\nRUN mkdir -p -m 777 /var/log/kraken/kraken-tracker\n\nRUN mkdir -p -m 777 /var/cache/kraken/kraken-build-index\nRUN mkdir -p -m 777 /var/cache/kraken/kraken-origin\nRUN mkdir -p -m 777 /var/cache/kraken/kraken-proxy\nRUN mkdir -p -m 777 /var/cache/kraken/kraken-testfs\nRUN mkdir -p -m 777 /var/cache/kraken/kraken-tracker\n\nRUN mkdir -p -m 777 /var/run/kraken\n\nARG USERNAME=\"root\"\nARG USERID=\"0\"\nRUN if [ ${USERID} != \"0\" ]; then useradd --uid ${USERID} ${USERNAME}; fi\n\n# Allow proxy to run nginx as root.\nRUN if [ ${USERID} != \"0\" ]; then mkdir -p /etc/sudoers.d/ && \\\n    echo '${USERNAME}  ALL=(root) NOPASSWD: /usr/sbin/nginx' >> /etc/sudoers.d/kraken-proxy; fi\n\nCOPY ./docker/setup_nginx.sh /tmp/setup_nginx.sh\nRUN /tmp/setup_nginx.sh ${USERNAME}\n\nUSER ${USERNAME}\n\nCOPY ./build-index/build-index /usr/bin/kraken-build-index\nCOPY ./origin/origin           /usr/bin/kraken-origin\nCOPY ./proxy/proxy             /usr/bin/kraken-proxy\nCOPY ./tools/bin/testfs/testfs /usr/bin/kraken-testfs\nCOPY ./tracker/tracker         /usr/bin/kraken-tracker\n\nWORKDIR /etc/kraken\n\nCOPY ./config /etc/kraken/config\nCOPY ./nginx/config /etc/kraken/nginx/config\nCOPY ./test/tls /etc/kraken/tls\n"
}