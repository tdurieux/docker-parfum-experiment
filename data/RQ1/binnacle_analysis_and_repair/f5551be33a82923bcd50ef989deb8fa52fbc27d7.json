{
  "startTime": 1674252018270,
  "endTime": 1674252018417,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-runtime\n\nENV LANG=C.UTF-8 \\\n    LC_ALL=C.UTF-8 \\\n    ROS_DISTRO=kinetic \\\n    DEBIAN_FRONTEND=noninteractive \\\n    USER_NAME=ubuntu\n\nRUN apt-get update && apt-get install --no-install-recommends -q -y \\\n    apt-utils \\\n    curl \\\n    dirmngr \\\n    gnupg2 \\\n    less \\\n    lsb-release \\\n    lxde-core \\\n    && rm -rf /var/lib/apt/lists/*\n\n# install ros-kinetic\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116\n\nRUN echo \"deb http://packages.ros.org/ros/ubuntu `lsb_release -sc` main\" > /etc/apt/sources.list.d/ros-latest.list\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    ros-kinetic-ros-base\\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python-rosinstall \\\n    python-rosinstall-generator \\\n    python-wstool \\\n    build-essential \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN rosdep init\nRUN useradd -m $USER_NAME && \\\n    echo \"${USER_NAME} ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers.d/${USER_NAME}\n\nUSER $USER_NAME\nRUN rosdep update\n\nRUN echo \"source /opt/ros/$ROS_DISTRO/setup.bash\" >> /home/$USER_NAME/.bashrc\nRUN mkdir -p /home/$USER_NAME/catkin_ws/src\nWORKDIR /home/$USER_NAME/catkin_ws/src\nRUN git clone https://github.com/OUXT-Polaris/robotx_packages.git\nWORKDIR /home/$USER_NAME/catkin_ws/src/robotx_packages/\nWORKDIR /home/$USER_NAME/catkin_ws/\n\nRUN sudo apt-get update && \\\n    export DEBIAN_FRONTEND=noninteractive && \\\n    rosdep install -i -r -y --from-paths src --rosdistro kinetic\n\nRUN /bin/bash -c \". /opt/ros/$ROS_DISTRO/setup.bash && \\\n    rm -rf devel build && \\\n    catkin_make_isolated\"\nRUN echo \"source /home/$USER_NAME/catkin_ws/devel_isolated/setup.bash\" >> /home/$USER_NAME/.bashrc"
}