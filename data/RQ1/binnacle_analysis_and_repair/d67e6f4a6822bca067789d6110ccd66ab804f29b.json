{
  "startTime": 1674249243904,
  "endTime": 1674249244091,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 66,
        "columnEnd": 123
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 115
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\nMAINTAINER \"Brent Baude\" <bbaude@redhat.com>\nLABEL maintainer \"https://github.com/CentOS-PaaS-SIG/ci-pipeline\"\nLABEL description=\"This container is meant to boot a qcow2 image\"\n\nENV container docker\nENV HOME=/home\n\nWORKDIR $HOME\n\nRUN yum -y install epel-release && rm -rf /var/cache/yum\n\nRUN yum -y install libguestfs libguestfs-tools-c \\\n                   git libvirt-client \\\n                   PyYAML python2-setuptools virt-install \\\n                   python-pip python-devel gcc net-tools \\\n                   openssh-clients sshpass && yum clean all && rm -rf /var/cache/yum\n\nRUN yum -y update && yum clean all\nRUN yum -y install systemd && rm -rf /var/cache/yum\nRUN yum -y install libvirt-daemon-driver-* libvirt-daemon libvirt-daemon-kvm qemu-kvm libvirt-daemon-config-network && yum clean all; rm -rf /var/cache/yum \\\n(cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \\\nrm -f /lib/systemd/system/multi-user.target.wants/*; \\\nrm -f /etc/systemd/system/*.wants/*; \\\nrm -f /lib/systemd/system/local-fs.target.wants/*; \\\nrm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\nrm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\nrm -f /lib/systemd/system/basic.target.wants/*; \\\nrm -f /lib/systemd/system/anaconda.target.wants/*; \\\nsystemctl enable libvirtd; \\\nsystemctl enable virtlockd\n\nRUN pip install --no-cache-dir ara\n\nCOPY execute.sh $HOME/\nCOPY default.xml /etc/libvirt/qemu/networks/\n\nRUN mkdir -p $HOME/images/\nRUN if [ \"${ENABLE_VM}\" == \"true\" ]; then \\\n echo \"ENABLE_VM: true\"; curl -f -o $HOME/images/latest-atomic.qcow2 ${VM_IMAGE_URL}; else echo \"ENABLE_VM: false\"; echo \"NOT Pulling VM cloud image\"; fi\n\n# Edit the service file which includes ExecStartPost to chmod /dev/kvm\nRUN sed -i \"/Service/a ExecStartPost=\\/bin\\/chmod 666 /dev/kvm\" /usr/lib/systemd/system/libvirtd.service\n\nVOLUME [ \"/sys/fs/cgroup\"]\nCMD [\"/usr/sbin/init\"]\n"
}