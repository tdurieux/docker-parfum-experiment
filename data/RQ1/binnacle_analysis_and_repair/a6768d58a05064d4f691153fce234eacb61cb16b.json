{
  "startTime": 1674239184761,
  "endTime": 1674239185051,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 182
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM fluent/fluentd:v0.12.28\n\n#add ElasticSearch plugins\nUSER root\nRUN apk --no-cache --update add \\\n      sudo \\\n      build-base \\\n      ruby-dev \\\n      geoip-dev \\\n      curl \\\n      ca-certificates\\\n  && sudo -u fluent gem install \\\n      fluent-plugin-parser \\\n      fluent-plugin-fields-parser \\\n      fluent-plugin-mutate_filter \\\n      fluent-plugin-geoip \\\n      fluent-plugin-elasticsearch \\\n  && rm -rf /home/fluent/.gem/ruby/2.3.0/cache/*.gem \\\n  && sudo -u fluent gem source -c \\\n  && apk del sudo build-base ruby-dev \\\n  && rm -rf /var/cache/apk/*\n\n#update Geoip database\nRUN wget https://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz \\\n  && gunzip GeoLiteCity.dat.gz \\\n  && mkdir -p /usr/share/GeoIP/ \\\n  && mv -f GeoLiteCity.dat /usr/share/GeoIP/\n\n#add dockerize for orchestration\n#use Dockerize to syncronize startup...\nENV DOCKERIZE_VERSION v0.2.0\nRUN curl -f -Lo dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n#add index template for indices with logstash-* prefix...\nCOPY elasticsearch-template.json /usr/share/elasticsearch-template.json\n\nUSER fluent\n\n#onbuild: cp fluent.conf,plugins/ -> /fluentd/etc,/fluentd/plugins/\nCOPY fluent.conf /fluentd/etc/\nCOPY plugins /fluentd/plugins/\n"
}