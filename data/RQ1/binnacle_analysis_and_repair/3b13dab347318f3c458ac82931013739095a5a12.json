{
  "startTime": 1674243296739,
  "endTime": 1674243297217,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 1,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 1,
        "columnEnd": 121
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 1,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 1,
        "columnEnd": 121
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 1,
        "columnEnd": 107
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 1,
        "columnEnd": 19
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 1,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 1,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 0,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 0,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER kevthehermit (https://github.com/kevthehermit/VolUtility)\n\n# Version Vars\nENV YARA_VERSION        3.4.0\nENV SSDEEP_VERSION      2.13\n\n# Switch to user root\nUSER root\n\n# Install OS Dependancies\nRUN apt-get update && apt-get install --no-install-recommends -yq \\\n autoconf \\\n automake \\\n autopoint \\\n curl \\\n gettext \\\n git \\\n libimage-exiftool-perl \\\n libtool \\\n nano \\\n pkg-config \\\n python-dev \\\n python-pip \\\n sudo && rm -rf /var/lib/apt/lists/*;\n\n\n# Install Mongo\nRUN \\\n apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927 && \\\necho \"deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-3.2.list && \\\napt-get update && \\\n apt-get install --no-install-recommends -yq mongodb-org && rm -rf /var/lib/apt/lists/*;\n\n# Install packages from source\n# Make Tmp Dir\nRUN mkdir ~/tmp_build\n\n# Install Yara\nRUN cd ~/tmp_build && \\\n curl -f -sSL https://github.com/plusvic/yara/archive/v$YARA_VERSION.tar.gz | \\\n tar -xzC . && \\\n cd yara-$YARA_VERSION && \\\n bash build.sh && \\\n make install && \\\n cd yara-python && \\\n python setup.py build && \\\n python setup.py install && \\\n cd ../.. && \\\n rm -rf yara-$YARA_VERSION && \\\n ldconfig\n\n# Install SSDEEP\nRUN cd ~/tmp_build && \\\n curl -f -sSL https://sourceforge.net/projects/ssdeep/files/ssdeep-${SSDEEP_VERSION}/ssdeep-${SSDEEP_VERSION}.tar.gz/download | \\\n tar -xzC . && \\\n cd ssdeep-${SSDEEP_VERSION} && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n make install && \\\n pip install --no-cache-dir pydeep && \\\n cd .. && \\\n rm -rf ssdeep-${SSDEEP_VERSION}\n\n# Get the maxmind database for ip lookup\nRUN cd ~/tmp_build && \\\n curl -f -sSL https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz > GeoLite2-City.mmdb.gz && \\\n gzip -d GeoLite2-City.mmdb.gz && \\\n mkdir /usr/share/GeoIP/ && \\\n mv GeoLite2-City.mmdb /usr/share/GeoIP/\n\n# Install and Build libpff\nRUN cd ~/tmp_build && \\\n git clone https://github.com/libyal/libpff.git &&\\\n cd libpff/ && \\\n ./synclibs.sh && \\\n ./autogen.sh && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-python && \\\n make && \\\n make install && \\\n ldconfig\n\n# Install Volatility\nRUN cd ~/tmp_build &&\\\n git clone https://github.com/volatilityfoundation/volatility.git && \\\n cd volatility && \\\n python setup.py install\n\n# Create Volutility User\nRUN groupadd -r volutility && \\\n useradd -r -g volutility -d /home/volutility -s /sbin/nologin -c \"Volutility User\" volutility && \\\n usermod -a -G sudo volutility  && \\\n mkdir /home/volutility && \\\n chown -R volutility:volutility /home/volutility\n\n# Get VolUtility\nRUN cd /opt && \\\n git clone https://github.com/kevthehermit/VolUtility.git && \\\n chown -R volutility:volutility /opt/VolUtility\n\n# Install PIP Requirements.\nRUN cd /opt/VolUtility && \\\n pip install --no-cache-dir -r requirements.txt\n\n # Clean Up\nRUN rm -rf ~/tmp_build\nRUN apt-get remove -yq \\\n automake \\\n autopoint \\\n gettext \\\n autoconf \\\n gettext \\\n pkg-config \\\n libtool\nRUN sudo apt-get clean\n\n# Setup and Run\nUSER volutility\nWORKDIR /opt/VolUtility\nADD start.sh start.sh\nRUN mkdir ~/dbpath\nRUN chmod 755 ~/dbpath\nCMD /bin/bash /opt/VolUtility/start.sh\n"
}