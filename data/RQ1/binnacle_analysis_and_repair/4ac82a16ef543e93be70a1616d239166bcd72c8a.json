{
  "startTime": 1674239695799,
  "endTime": 1674239695956,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 310
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 310
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 310
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 334
      }
    }
  ],
  "repairedDockerfile": "FROM debian\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y --force-yes wget git make gnupg nano && rm -rf /var/lib/apt/lists/*;\n\n# Unfortunately, this key isn't available over HTTPS.\nRUN wget -O /tmp/llvm-snapshot.gpg.key https://apt.llvm.org/llvm-snapshot.gpg.key\nRUN apt-key add /tmp/llvm-snapshot.gpg.key\nRUN bash -c 'echo \"deb http://apt.llvm.org/jessie/ llvm-toolchain-jessie-3.9 main\" >> /etc/apt/sources.list'\nRUN bash -c 'echo \"deb-src http://apt.llvm.org/jessie/ llvm-toolchain-jessie-3.9 main\" >> /etc/apt/sources.list'\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y --force-yes clang-3.9 clang-3.9-doc libclang-common-3.9-dev libclang-3.9-dev libclang1-3.9 libclang1-3.9-dbg libllvm-3.9-ocaml-dev libllvm3.9 libllvm3.9-dbg lldb-3.9 llvm-3.9 llvm-3.9-dev llvm-3.9-doc llvm-3.9-examples llvm-3.9-runtime clang-format-3.9 python-clang-3.9 libfuzzer-3.9-dev && rm -rf /var/lib/apt/lists/*;\n\n\nENV CFLAGS=\"-O1 -g -fsanitize=address,bool,float-cast-overflow,integer-divide-by-zero,return,returns-nonnull-attribute,shift-exponent,signed-integer-overflow,unreachable,vla-bound -fno-sanitize-recover=all -fno-omit-frame-pointer -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1\"\nENV CXXFLAGS=\"-O1 -g -fsanitize=address,bool,float-cast-overflow,integer-divide-by-zero,return,returns-nonnull-attribute,shift-exponent,signed-integer-overflow,unreachable,vla-bound -fno-sanitize-recover=all -fno-omit-frame-pointer -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1\"\nENV LDFLAGS=\"-g -fsanitize=address,bool,float-cast-overflow,integer-divide-by-zero,return,returns-nonnull-attribute,shift-exponent,signed-integer-overflow,unreachable,vla-bound\"\nENV CC=\"/usr/bin/clang-3.9\"\nENV CXX=\"/usr/bin/clang++-3.9\"\nENV ASAN_OPTIONS=\"exitcode=1,handle_segv=1,detect_leaks=1,leak_check_at_exit=1,allocator_may_return_null=1,detect_odr_violation=0\"\nENV ASAN_SYMBOLIZER_PATH=\"/usr/lib/llvm-3.9/bin/llvm-symbolizer\"\n\nRUN bash -c 'echo \"export CFLAGS=\\\"${CFLAGS}\\\"\" >> /root/.bashrc'\nRUN bash -c 'echo \"export CXXFLAGS=\\\"${CXXFLAGS}\\\"\" >> /root/.bashrc'\nRUN bash -c 'echo \"export LDFLAGS=\\\"${LDFLAGS}\\\"\" >> /root/.bashrc'\nRUN bash -c 'echo \"export CC=\\\"${CC}\\\"\" >> /root/.bashrc'\nRUN bash -c 'echo \"export CXX=\\\"${CXX}\\\"\" >> /root/.bashrc'\nRUN bash -c 'echo \"export CXXFLAGS=\\\"${CXXFLAGS}\\\"\" >> /root/.bashrc'\nRUN bash -c 'echo \"export ASAN_OPTIONS=\\\"${ASAN_OPTIONS}\\\"\" >> /root/.bashrc'\nRUN bash -c 'echo \"export ASAN_SYMBOLIZER_PATH=\\\"${ASAN_SYMBOLIZER_PATH}\\\"\" >> /root/.bashrc'\n\nWORKDIR /test\nRUN git clone git://thekelleys.org.uk/dnsmasq.git\nWORKDIR /test/dnsmasq\n# Patch Makefile so we can compile with ASAN\nRUN sed -i'' 's/LDFLAGS       =/LDFLAGS       ?=/' Makefile\nRUN sed -i'' 's/CFLAGS        =/CFLAGS        ?=/' Makefile\nRUN make\n\n# Only the last ENTRYPOINT or CMD is honored, so this can be overridden.\nENTRYPOINT /bin/bash\n"
}