{
  "startTime": 1674234294250,
  "endTime": 1674234294338,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\nLABEL maintainer \"devs@bigchaindb.com\"\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nCOPY . /usr/src/app/\nWORKDIR /usr/src/app\nRUN apk --update add sudo \\\n    && apk --update add python3 openssl ca-certificates git\\\n    && apk --update add --virtual build-dependencies python3-dev \\\n        libffi-dev openssl-dev build-base \\\n    && apk add --no-cache libstdc++ \\\n    && pip3 install --no-cache-dir --upgrade pip cffi \\\n    && pip install --no-cache-dir -e .[dev] \\\n    && apk del build-dependencies \\\n    && rm -f /var/cache/apk/*\n# When developing with Python in a docker container, we are using PYTHONBUFFERED\n# to force stdin, stdout and stderr to be totally unbuffered and to capture logs/outputs\nENV PYTHONUNBUFFERED 0\n\nENV BIGCHAINDB_DATABASE_PORT 27017\nENV BIGCHAINDB_DATABASE_BACKEND $backend\nENV BIGCHAINDB_SERVER_BIND 0.0.0.0:9984\nENV BIGCHAINDB_WSSERVER_HOST 0.0.0.0\nENV BIGCHAINDB_WSSERVER_SCHEME ws\n\nENV BIGCHAINDB_WSSERVER_ADVERTISED_HOST 0.0.0.0\nENV BIGCHAINDB_WSSERVER_ADVERTISED_SCHEME ws\n\nENV BIGCHAINDB_TENDERMINT_PORT 26657\nARG backend\nRUN bigchaindb -y configure \"$backend\""
}