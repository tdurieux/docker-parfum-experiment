{
  "startTime": 1674242027590,
  "endTime": 1674242028038,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 25,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 34,
        "columnEnd": 143
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 41,
        "columnEnd": 52
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 33,
        "columnEnd": 648
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 295
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 23,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 23,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 23,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 23,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 23,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base image to use, this must be set as the first line\nFROM ansible/centos7-ansible:1.7\n\n# Maintainer: docker_user <docker_user at email.com> (@docker_user)\nMAINTAINER yangyifan yangyifanphp@gmail.com\n\n# 暴露的端口\nEXPOSE 80\n\n# 下载二进制源码包（已经下载，直接把本地的移到容器里面去）\n#RUN wget http://nginx.org/download/nginx-1.9.9.tar.gz  #下载地址 http://nginx.org/en/download.html\n#RUN wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre2-10.10.tar.gz  #下载地址 ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/\n#RUN wget http://zlib.net/zlib-1.2.8.tar.gz # 下载地址 http://www.zlib.net/\n#RUN wget http://www.openssl.org/source/openssl-1.0.2e.tar.gz # 下载地址 http://www.openssl.org/source/\n#RUN wget http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.28.tar.gz # 下载地址 http://dev.mysql.com/downloads/mysql/\n#RUN wget http://cn2.php.net/distributions/php-5.6.16.tar.gz # 下载地址 http://php.net/get/php-5.6.16.tar.gz/from/a/mirror\n#RUN wget http://download.redis.io/releases/redis-3.0.6.tar.gz # 下载地址 http://redis.io/\n#RUN wget ftp://mcrypt.hellug.gr/pub/crypto/mcrypt/libmcrypt/libmcrypt-2.5.7.tar.gz # 下载地址 http://mcrypt.hellug.gr/lib/\n\n# 移到文件到容器\nCOPY [\"soft/\", \"/usr/local/src/\"]\n\n# 操作yum源\nRUN yum install -y wget && rm -rf /var/cache/yum\nRUN mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\nRUN cd /etc/yum.repos.d/; wget https://mirrors.163.com/.help/CentOS7-Base-163.repo\nRUN yum clean all\nRUN yum makecache\n\n# 下载依赖包\nRUN yum install -y gcc gcc-c++ autoconf libxml libxml2-devel libcurl libcurl-devel libpng libpng-devel freetype freetype-devel gd gd-devel libjpeg libjpeg-devel openssl libvpx libvpx-devel libmcrypt libmcrypt-devel ncurses ncurses-devel wget openssl openssl-devel pcre pcre-devel vim cmake bzip2 && rm -rf /var/cache/yum\n\n# 解压文件\nRUN cd /usr/local/src/; tar zxf mysql-5.6.28.tar.gz && rm mysql-5.6.28.tar.gz\nRUN cd /usr/local/src/; tar zxf redis-3.0.6.tar.gz && rm redis-3.0.6.tar.gz\nRUN cd /usr/local/src/; tar zxf nginx-1.9.9.tar.gz && rm nginx-1.9.9.tar.gz\nRUN cd /usr/local/src/; tar zxf php-5.6.16.tar.gz && rm php-5.6.16.tar.gz\nRUN cd /usr/local/src/; tar zxf libmcrypt-2.5.7.tar.gz && rm libmcrypt-2.5.7.tar.gz\n\n# 操作nginx编译\nRUN cd /usr/local/src/nginx-1.9.9; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/nginx-1.9.9 --with-pcre --with-http_ssl_module --with-http_stub_status_module && make && make install\n\n# 操作redis\nRUN cd /usr/local/src/redis-3.0.6/ && make && make install PREFIX=/usr/local/redis-3.0.6\nRUN cd /usr/local/src/redis-3.0.6/;cp redis.conf /usr/local/redis-3.0.6/\n\n# 操作mysql\nRUN mkdir -p /usr/local/www/data/mysql/data\nRUN groupadd mysql\nRUN useradd -g mysql mysql\nRUN chown -R mysql:mysql /usr/local/www/data/mysql/data\nRUN cd /usr/local/src/mysql-5.6.28;cmake -DMYSQL_USER=mysql -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/usr/local/www/data/mysql/data -DSYSCONFDIR=/etc -DMYSQL_USER=mysql -DMYSQL_UNIX_ADDR=/tmp/mysql/mysql.sock  -DDEFAULT_CHARSET=utf8  -DDEFAULT_COLLATION=utf8_general_ci -DEXTRA_CHARSETS=all -DWITH_EMBEDDED_SERVER=1 -DENABLED_LOCAL_INFILE=1 -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITH_MEMORY_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DMYSQL_TCP_PORT=3306 -DWITH_SSL:STRING=bundled -DWITH_ZLIB:STRING=bundled && make && make install\n\n#操作mysql配置文件\nCOPY [\"./soft/mysql/my.cnf\", \"/etc/my.cnf\"]\nCOPY [\"./soft/mysql/my.cnf.d/\", \"/etc/my.cnf.d/\"]\n\n# 初始化mysql\n#RUN /usr/local/mysql/scripts/mysql_install_db --basedir=/usr/local/mysql/ --datadir=/usr/local/www/data/mysql/data --defaults-extra-file=/etc/my.cnf --user=mysql --pid-file=/usr/local/www/data/mysql/data/mysql.pid\n#RUN mkdir -p /var/log/mariadb/ && chown -R mysql:mysql /var/log/mariadb/\n\n# 操作 php\nRUN cd /usr/local/src/libmcrypt-2.5.7 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\nRUN cd /usr/local/src/php-5.6.16; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/php5.6 --with-config-file-path=/usr/local/php5.6/etc --with-mysql=mysqlnd --with-pdo-mysql=mysqlnd --with-mysqli=mysqlnd --with-iconv-dir --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir --enable-xml --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curl --with-curlwrappers --enable-mbregex --enable-fastcgi --enable-fpm --enable-mbstring --with-gd --enable-gd-native-ttf --with-openssl --with-mhash --enable-sockets --with-xmlrpc --enable-zip --enable-soap --enable-ftp --with-mcrypt=/usr/local/src/libmcrypt-2.5.7 && make && make install\nRUN cd /usr/local/src/php-5.6.16;cp php.ini-production /usr/local/php5.6/etc/php.ini\nRUN cd /usr/local/php5.6/etc/ &&  mv php-fpm.conf.default php-fpm.conf\n\n\n\n# 设置挂载\nVOLUME [\"/usr/local/nginx/html\", \"/usr/local/www\"] # 前面这个是我本地的代码存放目录，详细的可以自定义，后面这个是容器存放代码的地方\n\n# 容器运行时的指令\nCMD /usr/local/nginx-1.9.9/sbin/nginx # 运行nginx\nCMD /usr/local/mysql/support-files/mysql.server start # 运行mysql\nCMD /usr/local/php5.6/sbin/php-fpm # 运行php-fpm\nCMD /usr/local/redis-3.0.6/bin/redis-server /usr/local/redis-3.0.6/redis.conf # 运行redis\n\n"
}