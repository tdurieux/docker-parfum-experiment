{
  "startTime": 1674245091738,
  "endTime": 1674245091958,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedDockerfile": "FROM dockercore/golang-cross:1.12.5@sha256:15b5f9805c0395d3ad80f9354ee358312e1abe3a683ce80371ad0551199ff253 AS build\nENV     DISABLE_WARN_OUTSIDE_CONTAINER=1\n\nRUN apt-get install -y -q --no-install-recommends \\\n    coreutils \\\n    util-linux \\\n    uuid-runtime && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /go/src/github.com/docker/cli\n\nRUN git clone https://github.com/docker/cli . && git checkout a1b83ffd2cbeefc0752e5aa7a543d49c1ddfd2cb\n\nRUN make binary-osx binary-windows binary && \\\n cp build/docker-linux-amd64 /usr/bin/docker\n\nWORKDIR /go/src/github.com/docker/app/\n\n# main dev image\nFROM build AS dev\nENV PATH=${PATH}:/go/src/github.com/docker/app/bin/\nARG DEP_VERSION=v0.5.1\nRUN curl -f -o /usr/bin/dep -L https://github.com/golang/dep/releases/download/${DEP_VERSION}/dep-linux-amd64 && \\\n    chmod +x /usr/bin/dep\nARG GOTESTSUM_VERSION=v0.3.4\nRUN mkdir $GOPATH/src/gotest.tools && \\\n    git clone -q https://github.com/gotestyourself/gotestsum $GOPATH/src/gotest.tools/gotestsum && \\\n    cd $GOPATH/src/gotest.tools/gotestsum && \\\n    git -C $GOPATH/src/gotest.tools/gotestsum checkout -q $GOTESTSUM_VERSION && \\\n    GO111MODULE=on GOOS=linux   go build -o /usr/local/bin/gotestsum-linux       gotest.tools/gotestsum && \\\n    GO111MODULE=on GOOS=darwin  go build -o /usr/local/bin/gotestsum-darwin      gotest.tools/gotestsum && \\\n    GO111MODULE=on GOOS=windows go build -o /usr/local/bin/gotestsum-windows.exe gotest.tools/gotestsum && \\\n    ln -s gotestsum-linux /usr/local/bin/gotestsum\n# Source for cmd/test2json is part of the Go distribution and is\n# therefore available in the base image.\nRUN GOOS=linux   go build -o /usr/local/bin/test2json-linux       cmd/test2json && \\\n    GOOS=darwin  go build -o /usr/local/bin/test2json-darwin      cmd/test2json && \\\n    GOOS=windows go build -o /usr/local/bin/test2json-windows.exe cmd/test2json\nRUN go get -d gopkg.in/mjibson/esc.v0 && \\\n    cd /go/src/github.com/mjibson/esc && \\\n    go build -v -o /usr/bin/esc . && \\\n    rm -rf /go/src/* /go/pkg/* /go/bin/*\nCOPY . .\n\nFROM dev AS cross\nARG EXPERIMENTAL=\"off\"\nARG TAG=\"unknown\"\nRUN make EXPERIMENTAL=${EXPERIMENTAL} TAG=${TAG} cross\n\nFROM cross AS e2e-cross\nARG EXPERIMENTAL=\"off\"\nARG TAG=\"unknown\"\n# Run e2e tests\nRUN make EXPERIMENTAL=${EXPERIMENTAL} TAG=${TAG} e2e-cross\n"
}