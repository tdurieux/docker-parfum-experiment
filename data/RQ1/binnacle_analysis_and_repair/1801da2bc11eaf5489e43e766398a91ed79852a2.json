{
  "startTime": 1674242894761,
  "endTime": 1674242895007,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 9,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 9,
        "columnEnd": 87
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 93
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Based on the SequenceIQ hadoop-docker project hosted at\n# https://github.com/sequenceiq/hadoop-docker, and modified at\n# the Apache Software Foundation (ASF).\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Creates pseudo distributed hadoop 2.8.3 with java 8\n#\n# Modified from the SequenceIQ Dockerfiles at https://github.com/sequenceiq/hadoop-docker\n#\n# docker build -t druid-hadoop-demo:2.8.3 .\n\nFROM sequenceiq/pam:centos-6.5\nMAINTAINER SequenceIQ\n\nUSER root\n\n# install dev tools\nRUN yum clean all \\\n    && rpm --rebuilddb \\\n    && yum install -y curl which tar sudo openssh-server openssh-clients rsync yum-plugin-ovl\\\n    && yum clean all \\\n    && yum update -y libselinux \\\n    && yum clean all && rm -rf /var/cache/yum\n# update libselinux. see https://github.com/sequenceiq/hadoop-docker/issues/14\n\n# passwordless ssh\nRUN ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n\n# zulu java 8\nRUN rpm --import http://repos.azulsystems.com/RPM-GPG-KEY-azulsystems\nRUN rpm --rebuilddb\nRUN sudo curl -f -o /etc/yum.repos.d/zulu.repo https://repos.azulsystems.com/rhel/zulu.repo\nRUN yum install -y zulu-8 && rm -rf /var/cache/yum\n\nENV JAVA_HOME /usr/lib/jvm/zulu-8\nENV PATH $PATH:$JAVA_HOME/bin\n\n# hadoop\nRUN curl -f -s https://archive.apache.org/dist/hadoop/core/hadoop-2.8.3/hadoop-2.8.3.tar.gz | tar -xz -C /usr/local/\nRUN cd /usr/local && ln -s ./hadoop-2.8.3 hadoop\n\nENV HADOOP_PREFIX /usr/local/hadoop\nENV HADOOP_COMMON_HOME /usr/local/hadoop\nENV HADOOP_HDFS_HOME /usr/local/hadoop\nENV HADOOP_MAPRED_HOME /usr/local/hadoop\nENV HADOOP_YARN_HOME /usr/local/hadoop\nENV HADOOP_CONF_DIR /usr/local/hadoop/etc/hadoop\nENV YARN_CONF_DIR $HADOOP_PREFIX/etc/hadoop\n\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/lib/jvm/zulu-8\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\n\nRUN mkdir $HADOOP_PREFIX/input\nRUN cp $HADOOP_PREFIX/etc/hadoop/*.xml $HADOOP_PREFIX/input\n\n# pseudo distributed\nADD core-site.xml.template $HADOOP_PREFIX/etc/hadoop/core-site.xml.template\nRUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/core-site.xml.template > /usr/local/hadoop/etc/hadoop/core-site.xml\nADD hdfs-site.xml $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml\n\nADD mapred-site.xml $HADOOP_PREFIX/etc/hadoop/mapred-site.xml\nADD yarn-site.xml $HADOOP_PREFIX/etc/hadoop/yarn-site.xml\n\nRUN $HADOOP_PREFIX/bin/hdfs namenode -format\n\nADD ssh_config /root/.ssh/config\nRUN chmod 600 /root/.ssh/config\nRUN chown root:root /root/.ssh/config\n\n# # installing supervisord\n# RUN yum install -y python-setuptools\n# RUN easy_install pip\n# RUN curl https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -o - | python\n# RUN pip install supervisor\n#\n# ADD supervisord.conf /etc/supervisord.conf\n\nADD bootstrap.sh /etc/bootstrap.sh\nRUN chown root:root /etc/bootstrap.sh\nRUN chmod 700 /etc/bootstrap.sh\n\nENV BOOTSTRAP /etc/bootstrap.sh\n\n# workingaround docker.io build error\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN chmod +x /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\n\n# Copy additional .jars to classpath\nRUN cp /usr/local/hadoop/share/hadoop/tools/lib/*.jar /usr/local/hadoop/share/hadoop/common/lib/\n\n# fix the 254 error code\nRUN sed  -i \"/^[^#]*UsePAM/ s/.*/#&/\"  /etc/ssh/sshd_config\nRUN echo \"UsePAM no\" >> /etc/ssh/sshd_config\nRUN echo \"Port 2122\" >> /etc/ssh/sshd_config\n\nRUN service sshd start && $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh && $HADOOP_PREFIX/sbin/start-dfs.sh && $HADOOP_PREFIX/bin/hdfs dfs -mkdir -p /user/root\nRUN service sshd start && $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh && $HADOOP_PREFIX/sbin/start-dfs.sh && $HADOOP_PREFIX/bin/hdfs dfs -put $HADOOP_PREFIX/etc/hadoop/ input\n\nCMD [\"/etc/bootstrap.sh\", \"-d\"]\n\n# Hdfs ports\nEXPOSE 50010 50020 50070 50075 50090 8020 9000\n# Mapred ports\nEXPOSE 10020 19888\n#Yarn ports\nEXPOSE 8030 8031 8032 8033 8040 8042 8088\n#Other ports\nEXPOSE 49707 2122\n"
}