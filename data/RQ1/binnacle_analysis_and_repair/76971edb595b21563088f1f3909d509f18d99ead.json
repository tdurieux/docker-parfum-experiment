{
  "startTime": 1674234194918,
  "endTime": 1674234195026,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 25,
        "columnStart": 18,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Based on https://www.fpcomplete.com/blog/2016/10/static-compilation-with-stack\n# USE ALPINE LINUX\nFROM alpine:edge\nRUN echo '@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories\nRUN apk update && apk add --no-cache \\\n    alpine-sdk \\\n    bash \\\n    bzip2-dev \\\n    ca-certificates \\\n    cabal@testing \\\n    file \\\n    ghc-dev@testing \\\n    ghc@testing \\\n    git \\\n    gmp-dev \\\n    libffi-dev \\\n    libgcc \\\n    linux-headers \\\n    m4 \\\n    make \\\n    openssh \\\n    openssh-client \\\n    vim \\\n    xz \\\n    xz-dev \\\n    zlib-dev\n# We add vim to get xxd\n\n# GRAB A RECENT BINARY OF STACK\nRUN wget -qO- https://get.haskellstack.org/ | sh\n\nRUN chmod 755 /usr/local/bin/stack\nRUN mkdir -p /usr/src/ && rm -rf /usr/src/\n\nRUN git clone --depth=10 https://github.com/ngless-toolkit/ngless /usr/src/ngless\nWORKDIR /usr/src/ngless\n\n# This will have all make calls use the ghc installed above\n# Build dependencies in a separate step to avoid a full rebuild on ngless compile failure\nENV STACKOPTS=\"--system-ghc --only-dependencies\"\nRUN make static\n\nENV STACKOPTS=\"--system-ghc\"\nRUN make static\nRUN stack --local-bin-path /usr/local/bin install $STACKOPTS --ghc-options '-optl-static -optl-pthread' --flag NGLess:embed\n"
}