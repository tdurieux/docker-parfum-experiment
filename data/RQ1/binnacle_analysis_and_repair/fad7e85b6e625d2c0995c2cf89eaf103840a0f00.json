{
  "startTime": 1674235332554,
  "endTime": 1674235333101,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Generated by Neurodocker version 0.4.3-2-g01cdd22\n# Timestamp: 2019-02-28 15:29:24 UTC\n#\n# Thank you for using Neurodocker. If you discover any issues\n# or ways to improve this software, please submit an issue or\n# pull request on our GitHub repository:\n#\n#     https://github.com/kaczmarj/neurodocker\n\nFROM debian:stretch\n\nARG DEBIAN_FRONTEND=\"noninteractive\"\n\nENV LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    ND_ENTRYPOINT=\"/neurodocker/startup.sh\"\nRUN export ND_ENTRYPOINT=\"/neurodocker/startup.sh\" \\\n    && apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           apt-utils \\\n           bzip2 \\\n           ca-certificates \\\n           curl \\\n           locales \\\n           unzip \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n    && dpkg-reconfigure --frontend=noninteractive locales \\\n    && update-locale LANG=\"en_US.UTF-8\" \\\n    && chmod 777 /opt && chmod a+s /opt \\\n    && mkdir -p /neurodocker \\\n    && if [ ! -f \"$ND_ENTRYPOINT\" ]; then \\\n         echo '#!/usr/bin/env bash' >> \"$ND_ENTRYPOINT\" \\\n    &&   echo 'set -e' >> \"$ND_ENTRYPOINT\" \\\n    &&   echo 'if [ -n \"$1\" ]; then \"$@\"; else /usr/bin/env bash; fi' >> \"$ND_ENTRYPOINT\"; \\\n    fi \\\n    && chmod -R 777 /neurodocker && chmod a+s /neurodocker\n\nENTRYPOINT [\"/neurodocker/startup.sh\"]\n\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           git \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nENV FSLDIR=\"/opt/fsl-5.0.10\" \\\n    PATH=\"/opt/fsl-5.0.10/bin:$PATH\"\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           bc \\\n           dc \\\n           file \\\n           libfontconfig1 \\\n           libfreetype6 \\\n           libgl1-mesa-dev \\\n           libglu1-mesa-dev \\\n           libgomp1 \\\n           libice6 \\\n           libmng1 \\\n           libxcursor1 \\\n           libxft2 \\\n           libxinerama1 \\\n           libxrandr2 \\\n           libxrender1 \\\n           libxt6 \\\n           wget \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && echo \"Downloading FSL ...\" \\\n    && mkdir -p /opt/fsl-5.0.10 \\\n    && curl -fsSL --retry 5 https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-5.0.10-centos6_64.tar.gz \\\n    | tar -xz -C /opt/fsl-5.0.10 --strip-components 1 \\\n    && sed -i '$iecho Some packages in this Docker container are non-free' $ND_ENTRYPOINT \\\n    && sed -i '$iecho If you are considering commercial use of this container, please consult the relevant license:' $ND_ENTRYPOINT \\\n    && sed -i '$iecho https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence' $ND_ENTRYPOINT \\\n    && sed -i '$isource $FSLDIR/etc/fslconf/fsl.sh' $ND_ENTRYPOINT \\\n    && echo \"Installing FSL conda environment ...\" \\\n    && bash /opt/fsl-5.0.10/etc/fslconf/fslpython_install.sh -f /opt/fsl-5.0.10\n\nENV PATH=\"/opt/dcm2niix-master/bin:$PATH\"\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           cmake \\\n           g++ \\\n           gcc \\\n           git \\\n           make \\\n           pigz \\\n           zlib1g-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && git clone https://github.com/rordenlab/dcm2niix /tmp/dcm2niix \\\n    && mkdir /tmp/dcm2niix/build \\\n    && cd /tmp/dcm2niix/build \\\n    && cmake  -DCMAKE_INSTALL_PREFIX:PATH=/opt/dcm2niix-master .. \\\n    && make \\\n    && make install \\\n    && rm -rf /tmp/dcm2niix\n\nENV CONDA_DIR=\"/opt/miniconda-latest\" \\\n    PATH=\"/opt/miniconda-latest/bin:$PATH\"\nRUN export PATH=\"/opt/miniconda-latest/bin:$PATH\" \\\n    && echo \"Downloading Miniconda installer ...\" \\\n    && conda_installer=\"/tmp/miniconda.sh\" \\\n    && curl -fsSL --retry 5 -o \"$conda_installer\" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n    && bash \"$conda_installer\" -b -p /opt/miniconda-latest \\\n    && rm -f \"$conda_installer\" \\\n    && conda update -yq -nbase conda \\\n    && conda config --system --prepend channels conda-forge \\\n    && conda config --system --set auto_update_conda false \\\n    && conda config --system --set show_channel_urls true \\\n    && sync && conda clean -tipsy && sync \\\n    && conda create -y -q --name neuro \\\n    && conda install -y -q --name neuro \\\n           'python=3.6' \\\n           'numpy' \\\n           'pandas' \\\n    && sync && conda clean -tipsy && sync \\\n    && bash -c \"source activate neuro \\\n    &&   pip install --no-cache-dir  \\\n             'nipype' \\\n             'git+https://github.com/poldracklab/pydeface.git@master' \\\n             'pyyaml' \\\n             'nibabel' \\\n             'joblib'\" \\\n    && rm -rf ~/.cache/pip/* \\\n    && sync \\\n    && sed -i '$isource activate neuro' $ND_ENTRYPOINT\n\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           gnupg2 \\\n           vim \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN curl -f --silent --location https://deb.nodesource.com/setup_10.x | bash -\n\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           nodejs \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN npm install -g bids-validator && npm cache clean --force;\n\nCOPY [\".\", \"/home/neuro/bidsify\"]\n\nWORKDIR /home/neuro/bidsify\n\nRUN /opt/miniconda-latest/envs/neuro/bin/python setup.py install\n\nVOLUME [\"/raw\"]\n\nVOLUME [\"/bids\"]\n\nRUN echo '{ \\\n    \\n  \"pkg_manager\": \"apt\", \\\n    \\n  \"instructions\": [ \\\n    \\n    [ \\\n    \\n      \"base\", \\\n    \\n      \"debian:stretch\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"install\", \\\n    \\n      [ \\\n    \\n        \"git\" \\\n    \\n      ] \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"fsl\", \\\n    \\n      { \\\n    \\n        \"version\": \"5.0.10\" \\\n    \\n      } \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"dcm2niix\", \\\n    \\n      { \\\n    \\n        \"version\": \"master\", \\\n    \\n        \"method\": \"source\" \\\n    \\n      } \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"miniconda\", \\\n    \\n      { \\\n    \\n        \"create_env\": \"neuro\", \\\n    \\n        \"conda_install\": [ \\\n    \\n          \"python=3.6\", \\\n    \\n          \"numpy\", \\\n    \\n          \"pandas\" \\\n    \\n        ], \\\n    \\n        \"pip_install\": [ \\\n    \\n          \"nipype\", \\\n    \\n          \"git+https://github.com/poldracklab/pydeface.git@master\", \\\n    \\n          \"pyyaml\", \\\n    \\n          \"nibabel\", \\\n    \\n          \"joblib\" \\\n    \\n        ], \\\n    \\n        \"activate\": true \\\n    \\n      } \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"install\", \\\n    \\n      [ \\\n    \\n        \"gnupg2\", \\\n    \\n        \"vim\" \\\n    \\n      ] \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"run\", \\\n    \\n      \"curl --silent --location https://deb.nodesource.com/setup_10.x | bash -\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"install\", \\\n    \\n      [ \\\n    \\n        \"nodejs\" \\\n    \\n      ] \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"run\", \\\n    \\n      \"npm install -g bids-validator\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"copy\", \\\n    \\n      [ \\\n    \\n        \".\", \\\n    \\n        \"/home/neuro/bidsify\" \\\n    \\n      ] \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"workdir\", \\\n    \\n      \"/home/neuro/bidsify\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"run\", \\\n    \\n      \"/opt/miniconda-latest/envs/neuro/bin/python setup.py install\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"volume\", \\\n    \\n      [ \\\n    \\n        \"/raw\" \\\n    \\n      ] \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"volume\", \\\n    \\n      [ \\\n    \\n        \"/bids\" \\\n    \\n      ] \\\n    \\n    ] \\\n    \\n  ] \\\n    \\n}' > /neurodocker/neurodocker_specs.json\n"
}