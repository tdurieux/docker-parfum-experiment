{
  "startTime": 1674236615709,
  "endTime": 1674236615884,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 2,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 31
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 2,
        "columnEnd": 97
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.5\n\nENV JAVA_HOME=/usr/lib/jvm/default-jvm/jre\n\n# install envsubst\nENV \\\n    BUILD_DEPS=\"gettext\"  \\\n    RUNTIME_DEPS=\"libintl\"\nRUN \\\n    apk add --no-cache --update $RUNTIME_DEPS && \\\n    apk add --no-cache --virtual build_deps $BUILD_DEPS && \\\n    cp /usr/bin/envsubst /usr/local/bin/envsubst && \\\n    apk del build_deps\n\n# install java and bash\nRUN apk upgrade --update-cache && \\\n    apk add openjdk8-jre bash && \\\n    rm -rf /tmp/* /var/cache/apk/*\n\n# Install glibc to resolve sqlite's \"__isnan: symbol not found\"\nADD https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.25-r0/glibc-2.25-r0.apk /tmp\nRUN apk add --no-cache --allow-untrusted /tmp/glibc-2.25-r0.apk\n\n############################################################# ELK Docker\n\nEXPOSE 9000\n\nENV VERSION 0.6.5\nENV GOSU_VERSION 1.7\n\n# Install Cerebro\nRUN apk add --no-cache --update curl ca-certificates sudo jq gnupg && \\\n  curl -f -Lso /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64\" && \\\n  curl -f -Lso /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64.asc\" && \\\n  export GNUPGHOME=\"$(mktemp -d)\" && \\\n  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && \\\n  gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu && \\\n  rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc && \\\n  chmod +x /usr/local/bin/gosu && \\\n  ( curl -f -Lsj https://github.com/lmenezes/cerebro/releases/download/v${VERSION}/cerebro-${VERSION}.tgz | \\\n  gunzip -c - | tar xf -) && \\\n  mv /cerebro-$VERSION /cerebro && \\\n  apk del gnupg && rm -rf -d\n\nCOPY conf /cerebro/conf\n\nCOPY run.sh /\n\nVOLUME /cerebro/logs\n\nCMD [\"/run.sh\"]\n"
}