{
  "startTime": 1674239716956,
  "endTime": 1674239717258,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG HUMHUB_VERSION=1.3.13\n\nFROM composer:1.7 as builder-composer\n\nFROM alpine:3.8 as builder\n\nARG HUMHUB_VERSION\n\nRUN apk update\nRUN apk add --no-cache \\\n    ca-certificates \\\n    tzdata \\\n    wget\n\nWORKDIR /usr/src/\nRUN wget https://github.com/humhub/humhub/archive/v${HUMHUB_VERSION}.tar.gz -q -O humhub.tar.gz && \\\n    tar xzf humhub.tar.gz && \\\n    mv humhub-${HUMHUB_VERSION} humhub && \\\n    rm humhub.tar.gz\n\nWORKDIR /usr/src/humhub\n\nCOPY --from=builder-composer /usr/bin/composer /usr/bin/composer\nRUN chmod +x /usr/bin/composer\n\nRUN apk add --no-cache \\\n    php7 \\\n    php7-gd \\\n    php7-ldap \\\n    php7-json \\\n    php7-phar \\\n    php7-iconv \\\n    php7-openssl \\\n    php7-curl \\\n    php7-ctype \\\n    php7-dom \\\n    php7-mbstring \\\n    php7-simplexml \\\n    php7-xml \\\n    php7-xmlreader \\\n    php7-xmlwriter \\\n    php7-zip \\\n    php7-fileinfo\n\nRUN composer install --no-ansi --no-dev --no-interaction --no-progress --no-scripts --optimize-autoloader && \\\n    chmod +x protected/yii && \\\n    chmod +x protected/yii.bat\n\nRUN apk add --no-cache \\\n    nodejs \\\n    npm\n\nRUN npm install grunt && npm cache clean --force;\nRUN npm install -g grunt-cli && npm cache clean --force;\n\nRUN apk add --no-cache \\\n    php7-pdo_mysql\nRUN grunt build-assets\n\nRUN rm -rf ./node_modules\n\n\nFROM alpine:3.8\n\nARG HUMHUB_VERSION\n\nRUN apk add --no-cache \\\n    curl \\\n    ca-certificates \\\n    tzdata \\\n    php7 \\\n    php7-fpm \\\n    php7-pdo_mysql \\\n    php7-gd \\\n    php7-ldap \\\n    php7-json \\\n    php7-phar \\\n    php7-iconv \\\n    php7-openssl \\\n    php7-curl \\\n    php7-ctype \\\n    php7-dom \\\n    php7-mbstring \\\n    php7-simplexml \\\n    php7-xml \\\n    php7-xmlreader \\\n    php7-xmlwriter \\\n    php7-zip \\\n    php7-sqlite3 \\\n    php7-intl \\\n    php7-apcu \\\n    php7-exif \\\n    php7-fileinfo \\\n    php7-session \\\n    supervisor \\\n    nginx \\\n    sqlite \\\n    && rm -rf /var/cache/apk/*\n\nRUN BUILD_DEPS=\"gettext\"  \\\n    RUNTIME_DEPS=\"libintl\" && \\\n    set -x && \\\n    apk add --no-cache --update $RUNTIME_DEPS && \\\n    apk add --no-cache --virtual build_deps $BUILD_DEPS && \\\n    cp /usr/bin/envsubst /usr/local/bin/envsubst && \\\n    apk del build_deps\n\nENV PHP_POST_MAX_SIZE=10M\nENV PHP_UPLOAD_MAX_FILESIZE=10M\nENV PHP_MAX_EXECUTION_TIME=60\nENV PHP_MEMORY_LIMIT=512M\n\nRUN chown -R nginx:nginx /var/lib/nginx/ && \\\n    touch /var/run/supervisor.sock && \\\n    chmod 777 /var/run/supervisor.sock\n\nCOPY --from=builder --chown=nginx:nginx /usr/src/humhub /var/www/localhost/htdocs/\nCOPY --chown=nginx:nginx humhub/ /var/www/localhost/htdocs/\n\nRUN mkdir -p /usr/src/humhub/protected/config/ && \\\n    cp -R /var/www/localhost/htdocs/protected/config/* /usr/src/humhub/protected/config/ && \\\n    echo \"v${HUMHUB_VERSION}\" >  /usr/src/humhub/.version && rm -rf /usr/src/humhub/protected/config/\n\nCOPY etc/ /etc/\nCOPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\n\nRUN chmod 600 /etc/crontabs/nginx && \\\n    chmod +x /usr/local/bin/docker-entrypoint.sh\n\nVOLUME /var/www/localhost/htdocs/uploads\nVOLUME /var/www/localhost/htdocs/protected/config\nVOLUME /var/www/localhost/htdocs/protected/modules\n\nEXPOSE 80\n\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\nCMD [\"supervisord\", \"-n\", \"-c\", \"/etc/supervisord.conf\"]\n"
}