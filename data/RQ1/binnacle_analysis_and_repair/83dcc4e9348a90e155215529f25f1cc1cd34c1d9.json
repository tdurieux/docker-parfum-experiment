{
  "startTime": 1674247963424,
  "endTime": 1674247963774,
  "originalSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 1,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\n\n# Default to UTF-8 file.encoding\nENV LANG C.UTF-8\n\n# Get all packages, install Java OpenJDK 8 and create a user\n\nRUN apt-get update && \\\n#\n#\tFix for Debian9 slim to be able to install Java\n\tmkdir -p /usr/share/man/man1 &&\\\n#\n#\tGet packages\n\tapt-get install -y --no-install-recommends \\\n        git wget curl nano unzip zip procps \\\n\t\topenjdk-8-jdk-headless ca-certificates-java maven && \\\n#\n#   Clean up\n    apt-get clean && apt-get autoclean && apt-get autoremove -y && \\\n#\n#   Create a Linux user\n    useradd --create-home --shell /bin/bash admin && \\\n\tadduser admin sudo && rm -rf /var/lib/apt/lists/*;\n\n# Set JAVA_HOME path ... just in case\n\nENV JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\"\nENV PATH=\"${JAVA_HOME}:${PATH}\"\n\n# Build SEPIA-Home (custom-bundle, single-server, SBC version)\n\nUSER admin\n\nRUN echo \"Building SEPIA-Home (custom bundle) ...\" && \\\n#\n#\tMake target and temporary folder (SEPIA should be in ~/SEPIA !!)\n\tmkdir -p ~/SEPIA/tmp && \\\n\tcd ~/SEPIA/tmp && \\\n#\n#\tDownload files\n\twget -O sepia-custom-bundle-folder.zip https://github.com/SEPIA-Framework/sepia-installation-and-setup/blob/master/sepia-custom-bundle-folder.zip?raw=true && \\\n\tunzip -n sepia-custom-bundle-folder.zip -d ~/SEPIA && \\\n#\n\tgit clone https://github.com/SEPIA-Framework/sepia-core-tools-java.git && \\\n\tgit clone https://github.com/SEPIA-Framework/sepia-websocket-server-java.git && \\\n\tgit clone https://github.com/SEPIA-Framework/sepia-assist-server.git && \\\n\tgit clone https://github.com/SEPIA-Framework/sepia-teach-server.git && \\\n\tgit clone https://github.com/SEPIA-Framework/sepia-reverse-proxy.git && \\\n\tgit clone https://github.com/SEPIA-Framework/sepia-mesh-nodes.git && \\\n\tgit clone https://github.com/SEPIA-Framework/sepia-html-client-app.git && \\\n\tgit clone https://github.com/SEPIA-Framework/sepia-admin-tools.git && \\\n#\n#\tBuild all modules and copy client and admin-tools\n\tcd sepia-core-tools-java && mvn install && cp -r target/release/. ~/SEPIA/sepia-assist-server/ && cd .. && \\\n\tcd sepia-websocket-server-java && mvn install && cp -r target/release/. ~/SEPIA/sepia-websocket-server-java/ && cd .. && \\\n\tcd sepia-assist-server && mvn install && cp -r target/release/. ~/SEPIA/sepia-assist-server/ && cd .. && \\\n\tcd sepia-teach-server && mvn install && cp -r target/release/. ~/SEPIA/sepia-teach-server/ && cd .. && \\\n\tcd sepia-reverse-proxy && mvn install && cp -r target/release/. ~/SEPIA/sepia-reverse-proxy/ && cd .. && \\\n\tcd sepia-mesh-nodes/java && mvn install && cp -r target/release/. ~/SEPIA/sepia-mesh-nodes/ && cd ../.. && \\\n\tmkdir -p sepia-assist-server/Xtensions/WebContent/app && \\\n\tcp -r sepia-html-client-app/www/. ~/SEPIA/sepia-assist-server/Xtensions/WebContent/app/ && \\\n\tmkdir -p sepia-assist-server/Xtensions/WebContent/tools && \\\n\tcp -r sepia-admin-tools/admin-web-tools/. ~/SEPIA/sepia-assist-server/Xtensions/WebContent/tools/ && \\\n#\n#\tDownload and unzip elasticsearch (keeping the existing config folder)\n\twget -O elasticsearch.zip https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.3.3.zip && \\\n\tunzip -n elasticsearch.zip && \\\n\tcp -rn elasticsearch-*/. ~/SEPIA/elasticsearch/ && \\\n#\n#\tClean up\n\tcd ~/SEPIA && \\\n\tfind . -iname \"*.sh\" -exec chmod +x {} \\; && \\\n\trm -r ~/SEPIA/tmp\n\t# we could also remove maven here and maybe some other packages\n\n# Start\nWORKDIR /home/admin/SEPIA\nCMD bash run-sepia.sh && cat\n"
}