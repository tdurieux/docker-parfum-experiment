{
  "startTime": 1674234409939,
  "endTime": 1674234410494,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 43,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 30,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 30,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 26,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 30,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 30,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 26,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 30,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 30,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 26,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 30,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 30,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 26,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 30,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 30,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 26,
        "columnEnd": 79
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER sergey.serebryakov@hpe.com\n\nARG build_space=/tmp\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        python-pip \\\n        python-dev \\\n        git \\\n        cmake \\\n        libnuma-dev \\\n        wget && \\\n    wget -qO - https://repo.radeon.com/rocm/apt/debian/rocm.gpg.key | apt-key add - && \\\n    echo 'deb [arch=amd64] http://repo.radeon.com/rocm/apt/debian/ xenial main' | tee /etc/apt/sources.list.d/rocm.list && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        rocm-dev \\\n        rocrand \\\n        rocblas \\\n        rocfft \\\n        miopengemm \\\n       && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV ROC_SPARSE_URL https://github.com/ROCmSoftwarePlatform/rocSPARSE/releases/download/v0.1.4.1/rocsparse-0.1.4.1-Linux.deb\nENV HIP_SPARSE_URL https://github.com/ROCmSoftwarePlatform/hipSPARSE/releases/download/v0.1.4.0/hipsparse-0.1.4.0-Linux.deb\nENV MIOPEN_URL https://github.com/ROCmSoftwarePlatform/MIOpen/releases/download/1.7.0/MIOpen-HIP-1.7.0-49c48917-Linux.deb\nRUN cd ${build_space} && \\\n    wget ${ROC_SPARSE_URL} && apt-get install -y --no-install-recommends ./rocsparse-* && rm ./rocsparse-* && \\\n    wget ${HIP_SPARSE_URL} && apt-get install -y --no-install-recommends ./hipsparse-* && rm ./hipsparse-* && \\\n    wget ${MIOPEN_URL} && apt-get install -y --no-install-recommends ./MIOpen-* && rm ./MIOpen-* && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir setuptools wheel && \\\n    pip install --no-cache-dir enum pyyaml typing pybind11 numpy Pillow lmdb protobuf\n\nENV THRUST_HASHTAG e0b8fe2af3d345fb85689011140a20ff46fb610d\nENV HIP_PLATFORM hcc\nRUN cd ${build_space} && git clone https://github.com/ROCmSoftwarePlatform/Thrust.git ./thrust && \\\n    cd ./thrust && git reset --hard ${THRUST_HASHTAG} && \\\n    git submodule update --init --recursive && \\\n    mkdir ./build && cd ./build && cmake .. && make install && \\\n    ln -s /usr/local/include/thrust/system/cuda/detail/cub /usr/local/include/cub && \\\n    cd ${build_space} && rm -rf ./thrust\n\nARG version=b710aee8c2ac2daa36e5143b00982b06746a4bf7\nENV hip_DIR /opt/rocm/hip/lib/cmake/hip\nENV hcc_DIR /opt/rocm/hcc/lib/cmake/hcc\nRUN cd ${build_space} && git clone https://github.com/ROCmSoftwarePlatform/pytorch.git ./pytorch && \\\n    cd ./pytorch && \\\n    git reset --hard ${version} && git submodule update --init --recursive && \\\n    for req in $(cat requirements.txt); do pip install --no-cache-dir $req; done && \\\n    python tools/amd_build/build_pytorch_amd.py && \\\n    python tools/amd_build/build_caffe2_amd.py && \\\n    USE_ROCM=1 BUILD_TESTS=OFF python setup.py install && \\\n    cd ${build_space} && rm -rf ./pytorch\n\nENV APEX_HASHTAG 53e1b61a1e2498e66e4af9ff19e0bc55955b24b0\nRUN cd ${build_space} && git clone https://github.com/NVIDIA/apex ./nvidia_apex && \\\n    cd ./nvidia_apex && \\\n    git reset --hard ${APEX_HASHTAG} && \\\n    python setup.py install && \\\n    cd ${build_space} && rm -rf ./nvidia_apex\n\nRUN cd ${build_space} && git clone https://github.com/pytorch/vision.git ./pytorchvision && \\\n    cd ./pytorchvision && python setup.py install && \\\n    cd ${build_space} && rm -rf ./pytorchvision\n\n"
}