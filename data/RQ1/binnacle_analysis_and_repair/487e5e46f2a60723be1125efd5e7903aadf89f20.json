{
  "startTime": 1674249360850,
  "endTime": 1674249361148,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 18,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# First stage, install composer and its dependencies and fetch vendor files and submodules\nFROM alpine:3.7\nRUN apk update\nRUN apk --no-cache add \\\n  php7 \\\n  php7-dom \\\n  php7-phar \\\n  php7-gd \\\n  php7-json \\\n  php7-mysqli \\\n  php7-mysqlnd \\\n  php7-mbstring \\\n  php7-ctype \\\n  php7-iconv \\\n  php7-tokenizer \\\n  php7-openssl \\\n  php7-xml \\\n  php7-simplexml \\\n  php7-xmlwriter \\\n  php7-zlib \\\n  php7-curl \\\n  git \\\n  curl\nRUN mkdir /app && curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nWORKDIR /app\nCOPY . /app/\n\nRUN git submodule init\nRUN git submodule update --recursive --init\nARG COMPOSER_ALLOW_SUPERUSER=1\nARG COMPOSER_NO_INTERACTION=1\nRUN cd /app/extensions/OpenIDConnect && composer install --no-dev\nRUN cd /app/extensions/PluggableAuth && composer install --no-dev\n\n# Cleanup before copying over to next stage - version history takes up a lot of space\nRUN rm -rf .git/\n\n# Second stage, build usable container\nFROM alpine:3.7\nLABEL maintainer=\"Ilia Salem\"\nRUN \\\n  apk --no-cache add \\\n    apache2 \\\n    php7 \\\n    php7-apache2 \\\n    php7-curl \\\n    php7-dom \\\n    php7-gd \\\n    php7-json \\\n    php7-mysqli \\\n    php7-mbstring \\\n    php7-ctype \\\n    php7-iconv \\\n    php7-xml \\\n    php7-session \\\n    php7-curl \\\n    php7-fileinfo  \\\n    php7-zlib \\\n    php7-xmlreader \\\n    php7-opcache \\\n    php7-intl \\\n    php7-apcu \\\n    curl \\\n    # Required for SyntaxHighlighting\n    python3 \\\n  && apk update \\\n  && mkdir -p /data \\\n  && mkdir -p /run/apache2 \\\n  && chown apache /data \\\n  && ln -s /dev/stderr /var/log/apache2/error.log \\\n  && ln -s /dev/stdout /var/log/apache2/access.log \\\n  && sed -i '/#LoadModule rewrite_module modules\\/mod_rewrite.so/c\\LoadModule rewrite_module modules\\/mod_rewrite.so' /etc/apache2/httpd.conf \\\n  && sed -i '/DocumentRoot \"\\/var\\/www\\/localhost\\/htdocs\"/c\\DocumentRoot \"\\/var\\/www\\/html\\/docker_gcpedia\"' /etc/apache2/httpd.conf \\\n  && sed -i '/Options Indexes FollowSymLinks/c\\\\' /etc/apache2/httpd.conf \\\n  && sed -i '/AllowOverride None/c\\\\' /etc/apache2/httpd.conf \\\n  && sed -i '/Options Indexes FollowSymLinks/c\\\\' /etc/apache2/httpd.conf \\\n  && sed -i '/<Directory \"\\/var\\/www\\/localhost\\/htdocs\">/c\\<Directory \"\\/var\\/www\\/html\\/docker_gcpedia\">\\nDirectoryIndex index.php\\nOptions FollowSymLinks MultiViews\\nAllowOverride All\\nOrder allow,deny\\nallow from all\\n' /etc/apache2/httpd.conf\n\nRUN { \\\n\t\techo 'opcache.memory_consumption=128'; \\\n\t\techo 'opcache.interned_strings_buffer=8'; \\\n\t\techo 'opcache.max_accelerated_files=4000'; \\\n\t\techo 'opcache.revalidate_freq=60'; \\\n\t\techo 'opcache.fast_shutdown=1'; \\\n\t\techo 'opcache.enable_cli=1'; \\\n} > /etc/php7/conf.d/opcache-recommended.ini\n\nWORKDIR /var/www/html/docker_gcpedia\n\n# Version\nENV MEDIAWIKI_MAJOR_VERSION 1.31\nENV MEDIAWIKI_BRANCH REL1_31\nENV MEDIAWIKI_VERSION 1.31.1\nENV MEDIAWIKI_SHA512 ee49649cc37d0a7d45a7c6d90c822c2a595df290be2b5bf085affbec3318768700a458a6e5b5b7e437651400b9641424429d6d304f870c22ec63fae86ffc5152\n\n# MediaWiki setup\nRUN curl -fSL \"https://releases.wikimedia.org/mediawiki/${MEDIAWIKI_MAJOR_VERSION}/mediawiki-${MEDIAWIKI_VERSION}.tar.gz\" -o mediawiki.tar.gz \\\n\t&& echo \"${MEDIAWIKI_SHA512} *mediawiki.tar.gz\" | sha512sum -c - \\\n\t&& tar -xz --strip-components=1 -f mediawiki.tar.gz \\\n\t&& rm mediawiki.tar.gz \\\n&& chown -R apache:apache extensions skins cache images\n\nCOPY --from=0 /app/ /var/www/html/docker_gcpedia/\n\n# for automated install\nRUN chown apache:apache /var/www/html/docker_gcpedia/\n\nRUN mkdir /super\nRUN mv /var/www/html/docker_gcpedia/docker/secrets.php /super/secrets.php\nRUN chown apache:apache /super/secrets.php\n\nEXPOSE 80\n\nRUN chmod +x docker/start.sh\n\n# Start Apache in foreground mode\nRUN rm -f /run/apache2/httpd.pid\nENTRYPOINT [ \"docker/start.sh\" ]\nCMD  [\"/usr/sbin/httpd -D FOREGROUND\"]"
}