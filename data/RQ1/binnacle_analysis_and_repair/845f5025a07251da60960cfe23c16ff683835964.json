{
  "startTime": 1674251569417,
  "endTime": 1674251569663,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 113
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ARG usage in FROMs has to go up here in global\n\nARG embedpy_img=kxsys/embedpy:latest\n\n####\n\nFROM $embedpy_img AS embedpy\nFROM embedpy AS juypterq\n\nRUN apt-get update \\\n\t&& apt-get -yy --option=Dpkg::options::=--force-unsafe-io --no-install-recommends install build-essential \\\n\t&& apt-get clean \\\n\t&& find /var/lib/apt/lists -type f -delete && rm -rf /var/lib/apt/lists/*;\n\nCOPY build/makefile requirements.txt *.q *.p *.ipynb /opt/kx/jupyterq/\nCOPY jupyterq_licensemgr/ /opt/kx/jupyterq/jupyterq_licensemgr/\nCOPY src/c/ /opt/kx/jupyterq/src/c/\nCOPY kxpy/ /opt/kx/jupyterq/kxpy/\nCOPY kernelspec/ /opt/kx/jupyterq/kernelspec/\nCOPY examples/ /opt/kx/jupyterq/examples/\n# COPY kdb+Notebooks.ipynb /opt/kx/jupyterq/examples/kdb+Notebooks.ipynb\n\nRUN make -C /opt/kx/jupyterq jupyterq\n\n####\n\nFROM embedpy\n\nARG port=8888\nENV PORT=${port}\nEXPOSE ${port}/tcp\n\nARG VCS_REF=dev\nARG BUILD_DATE=dev\n\nLABEL\torg.label-schema.schema-version=\"1.0\" \\\n\torg.label-schema.name=jupyterq \\\n\torg.label-schema.description=\"Jupyter kernel for kdb+\" \\\n\torg.label-schema.vendor=\"Kx\" \\\n\torg.label-schema.license=\"Apache-2.0\" \\\n\torg.label-schema.url=\"https://code.kx.com/q/ml/jupyterq/\" \\\n\torg.label-schema.version=\"${VERSION:-dev}\" \\\n\torg.label-schema.vcs-url=\"https://github.com/KxSystems/jupyterq.git\" \\\n\torg.label-schema.vcs-ref=\"$VCS_REF\" \\\n\torg.label-schema.build-date=\"$BUILD_DATE\" \\\n\torg.label-schema.docker.cmd=\"docker run -v `pwd`/q:/tmp/q -p $PORT:$PORT kxsys/jupyterq\"\n\nCOPY --from=juypterq /opt/kx/jupyterq /opt/kx/jupyterq\nRUN chown kx:kx /opt/kx/jupyterq /opt/kx/jupyterq/kdb+Notebooks.ipynb\nRUN find /opt/kx/jupyterq -maxdepth 1 -type f -name 'jupyterq_*.q' | xargs ln -s -t /opt/kx/q \\\n\t&& ln -s -t /opt/kx/q /opt/kx/jupyterq/kxpy \\\n\t&& ln -s -t /opt/kx/q/l64 /opt/kx/jupyterq/l64/jupyterq.so\n\nRUN apt-get update \\\n\t&& apt-get -yy --option=Dpkg::options::=--force-unsafe-io --no-install-recommends install xinetd libgl1-mesa-glx \\\n\t&& apt-get clean \\\n\t&& find /var/lib/apt/lists -type f -delete && rm -rf /var/lib/apt/lists/*;\n\nUSER kx\n\nRUN . /opt/conda/etc/profile.d/conda.sh \\\n\t&& conda activate kx \\\n\t&& conda install nomkl \\\n\t&& conda install --file /opt/kx/jupyterq/requirements.txt \\\n\t&& conda clean -y --all\n\nUSER root\n\nRUN chown -R kx:kx /opt/kx/jupyterq/jupyterq_licensemgr\n\nUSER kx\n\nRUN . /opt/conda/etc/profile.d/conda.sh \\\n\t&& conda activate kx \\\n\t&& cd /opt/kx/jupyterq/jupyterq_licensemgr \\\n\t&& python setup.py build \\\n\t&& pip install --no-cache-dir --user --no-deps .\n\n# remove token auth\nRUN mkdir -p ~/.jupyter \\\n\t&& echo \"c.NotebookApp.token = u''\" > ~/.jupyter/jupyter_notebook_config.py\n\nRUN . /opt/conda/etc/profile.d/conda.sh \\\n\t&& conda activate kx \\\n\t&& jupyter kernelspec install --user --name=qpk /opt/kx/jupyterq/kernelspec \\\n\t&& jupyter nbextension install --user --py jupyterq_licensemgr \\\n\t&& jupyter nbextension enable --user --py jupyterq_licensemgr \\\n\t&& jupyter serverextension enable --py jupyterq_licensemgr \\\n\t&& jupyter trust /opt/kx/jupyterq/kdb+Notebooks.ipynb\n\nUSER root\nCOPY docker/init /init\nRUN chmod 0755 /init\n\n\n## Create new Entry folders\n## Notebooks, Data & Scripts can all be mounted to these folders\n\nARG nbroot=/jqnotebooks\nARG nbdata=/jqdata\nARG nbscripts=/jqscripts\n\nENV NBROOT=${nbroot}\nENV NBDATA=${nbdata}\nENV NBSCRIPTS=${nbscipts}\n\nVOLUME ${nbroot} ${nbdata} ${nbscripts}\n\nENTRYPOINT [\"/init\"]\n"
}