{
  "startTime": 1674235024435,
  "endTime": 1674235024545,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This image must be built in the context of the repository root.\n\nFROM debian:stretch-20180831\nSHELL [\"/bin/bash\", \"-c\"]\nWORKDIR /root\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y gettext openjdk-8-jdk-headless unzip wget && rm -rf /var/lib/apt/lists/*;\nRUN echo \"progress=dot:giga\" > .wgetrc\n\nRUN filename=sdk-tools-linux-4333796.zip && \\\n    wget https://dl.google.com/android/repository/$filename && \\\n    mkdir android-sdk && \\\n    unzip -q -d android-sdk $filename && \\\n    rm $filename\n\n# Indicate that we accept the Android SDK license. The platform version here isn't critical:\n# all versions require the same license, and if app/build.gradle specifies a different version,\n# the build process will automatically download it.\nRUN yes | android-sdk/tools/bin/sdkmanager \"platforms;android-28\"\n\n# make_locale\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y python3 python3-pip && \\\n    pip3 install --no-cache-dir requests && rm -rf /var/lib/apt/lists/*;\nCOPY contrib/make_locale contrib/\nCOPY gui gui\nCOPY ios/ElectronCash/electroncash_gui/ios_native ios/ElectronCash/electroncash_gui/ios_native\nCOPY plugins plugins\n\n# The app itself\nCOPY android android\nCOPY contrib/deterministic-build contrib/deterministic-build\nCOPY lib lib\n\nRUN echo \"sdk.dir=$(pwd)/android-sdk\" > android/local.properties\nRUN cd android && ./gradlew app:assembleRelease\n"
}