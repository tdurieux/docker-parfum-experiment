{
  "startTime": 1674236799929,
  "endTime": 1674236800455,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\n\n# ensure local python is preferred over distribution python\nENV PATH /usr/local/bin:$PATH\n\n# http://bugs.python.org/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG C.UTF-8\n\n# runtime dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\r\n\t\tca-certificates \\\r\n\t\tlibexpat1 \\\r\n\t\tlibffi6 \\\r\n\t\tlibgdbm3 \\\r\n\t\tlibreadline7 \\\r\n\t\tlibsqlite3-0 \\\r\n\t\tlibssl1.1 \\\r\n\t&& rm -rf /var/lib/apt/lists/*\n\nENV GPG_KEY 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\nENV PYTHON_VERSION 3.6.5\n\nRUN set -ex \\\r\n\t&& buildDeps=\" \\\r\n\t\tdpkg-dev \\\r\n\t\tgcc \\\r\n\t\tlibbz2-dev \\\r\n\t\tlibc6-dev \\\r\n\t\tlibexpat1-dev \\\r\n\t\tlibffi-dev \\\r\n\t\tlibgdbm-dev \\\r\n\t\tliblzma-dev \\\r\n\t\tlibncursesw5-dev \\\r\n\t\tlibreadline-dev \\\r\n\t\tlibsqlite3-dev \\\r\n\t\tlibssl-dev \\\r\n\t\tmake \\\r\n\t\ttcl-dev \\\r\n\t\ttk-dev \\\r\n\t\twget \\\r\n\t\txz-utils \\\r\n\t\tzlib1g-dev \\\r\n# as of Stretch, \"gpg\" is no longer included by default\r\n\t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \\\r\n\t\" \\\r\n\t&& apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \\\r\n\t\\\r\n\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\r\n\t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\r\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n\t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n\t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n\t&& mkdir -p /usr/src/python \\\n\t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n\t&& rm python.tar.xz \\\n\n\t&& cd /usr/src/python \\\n\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& ./configure \\\r\n\t\t--build=\"$gnuArch\" \\\r\n\t\t--enable-loadable-sqlite-extensions \\\r\n\t\t--enable-shared \\\r\n\t\t--with-system-expat \\\r\n\t\t--with-system-ffi \\\r\n\t\t--without-ensurepip \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make install \\\n\t&& ldconfig \\\n\n\t&& apt-get purge -y --auto-remove $buildDeps \\\n\n\t&& find /usr/local -depth \\\r\n\t\t\\( \\\r\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\r\n\t\t\t-o \\\r\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\r\n\t\t\\) -exec rm -rf '{}' + \\\n\t&& rm -rf /usr/src/python\n\n# make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\r\n\t&& ln -s idle3 idle \\\r\n\t&& ln -s pydoc3 pydoc \\\r\n\t&& ln -s python3 python \\\r\n\t&& ln -s python3-config python-config\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 9.0.3\n\nRUN set -ex; \\\r\n\t\\\r\n\tapt-get update; \\\r\n\tapt-get install -y --no-install-recommends wget; \\\r\n\trm -rf /var/lib/apt/lists/*; \\\r\n\t\\\r\n\twget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \\\r\n\t\\\r\n\tapt-get purge -y --auto-remove wget; \\\r\n\t\\\r\n\tpython get-pip.py \\\r\n\t\t--disable-pip-version-check \\\r\n\t\t--no-cache-dir \\\r\n\t\t\"pip==$PYTHON_PIP_VERSION\" \\\r\n\t; \\\r\n\tpip --version; \\\r\n\t\\\r\n\tfind /usr/local -depth \\\r\n\t\t\\( \\\r\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\r\n\t\t\t-o \\\r\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\r\n\t\t\\) -exec rm -rf '{}' +; \\\r\n\trm -f get-pip.py\n\nRUN pip install --no-cache-dir pika\n\nRUN pip install --no-cache-dir Flask\n\n# Create and define the container's working directory.\nRUN mkdir /python-service\nWORKDIR /python-service\n"
}