{
  "startTime": 1674641766350,
  "endTime": 1674641766451,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM mcr.microsoft.com/dotnet/core/aspnet:2.2 AS base\nWORKDIR /app\nEXPOSE 80\n\nFROM mcr.microsoft.com/dotnet/core/sdk:2.2 AS sdk-with-node\nENV NODE_VERSION 8.11.1\nENV NODE_DOWNLOAD_SHA 0e20787e2eda4cc31336d8327556ebc7417e8ee0a6ba0de96a09b0ec2b841f60\nRUN curl -f -SL \"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz\" --output nodejs.tar.gz \\\n    && echo \"$NODE_DOWNLOAD_SHA  nodejs.tar.gz\" | sha256sum -c - \\\n    && tar -xzf \"nodejs.tar.gz\" -C /usr/local --strip-components=1 \\\n    && rm nodejs.tar.gz \\\n    && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n\nFROM sdk-with-node AS updated-npm\nRUN npm i -g npm && npm cache clean --force;\n\nFROM updated-npm AS build\nWORKDIR /src\nCOPY AspNetCore.Diagnostics.HealthChecks.sln ./\nCOPY global.json ./\nCOPY Directory.Build.props ./\nCOPY ./build/dependencies.props ./build/\nCOPY ./src/HealthChecks.UI/build ./src/HealthChecks.UI/build\nCOPY ./src/HealthChecks.UI/assets ./src/HealthChecks.UI/assets\nCOPY ./src/HealthChecks.UI/client ./src/HealthChecks.UI/client\nCOPY ./build/docker-images/HealthChecks.UI.Image/HealthChecks.UI.Image.csproj ./build/docker-images/HealthChecks.UI.Image/\nCOPY . .\nWORKDIR /src/build/docker-images/HealthChecks.UI.Image\nRUN rm ../../../global.json\nRUN dotnet restore -nowarn:msb3202,nu1503\nRUN dotnet build -c Release -o /app\n\nFROM build AS publish\nRUN dotnet publish -c Release -o /app\n\nFROM base AS final\nWORKDIR /app\nCOPY --from=publish /app .\nENTRYPOINT [\"dotnet\", \"HealthChecks.UI.Image.dll\"]\n"
}