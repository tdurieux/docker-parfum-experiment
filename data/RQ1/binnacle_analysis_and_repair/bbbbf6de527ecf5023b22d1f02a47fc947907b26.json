{
  "startTime": 1674235103939,
  "endTime": 1674235104171,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 160
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 157
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 169
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 226
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 160
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 169
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 226
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Daniel Malczyk\n# ThinkBig Analytics, a Teradata Company\n\n#basic image with CentOS and latest JDK\nFROM dmalczyk/kstack-hadoopclient:1.0\n\nMAINTAINER Daniel Malczyk <dmalczyk@gmail.com>\n\n# install dev tools\nRUN yum clean all; \\\n    rpm --rebuilddb; \\\n    yum install -y curl which; rm -rf /var/cache/yum \\\n    yum clean all\n\nENV NIFI_INSTALL_HOME /opt/nifi\nENV NIFI_USER nifi\nENV NIFI_GROUP users\n\n# create nifi user and group\nRUN /bin/bash -c 'useradd -r -m -s /bin/bash nifi'\n\n# download and install NiFi with Kylo-provided script\nCOPY conf/install-nifi.sh .\nRUN chmod u+x ./install-nifi.sh && \\\n    ./install-nifi.sh $NIFI_INSTALL_HOME $NIFI_USER $NIFI_GROUP\n\nVOLUME $NIFI_INSTALL_HOME/data/lib\n\n#configure kylo/nifi integration\n#this part follows install-kylo-components.sh script\nRUN echo -e \"\\n\\n# Set kylo nifi configuration file directory path\" >> $NIFI_INSTALL_HOME/current/conf/bootstrap.conf\nRUN echo -e \"java.arg.15=-Dkylo.nifi.configPath=$NIFI_INSTALL_HOME/ext-config\" >> $NIFI_INSTALL_HOME/current/conf/bootstrap.conf\n\nRUN echo \"Installing the kylo libraries to the NiFi lib\"\nRUN mkdir $NIFI_INSTALL_HOME/current/lib/app\n#$NIFI_INSTALL_HOME/data/lib is shared with Kylo img\nRUN mkdir -p $NIFI_INSTALL_HOME/data/lib/app\n\nRUN echo \"Script for linking kylo jars to nifi libs, $NIFI_INSTALL_HOME\"\nCOPY conf/create-symbolic-links.sh $NIFI_INSTALL_HOME\nRUN chmod u+x $NIFI_INSTALL_HOME/create-symbolic-links.sh\n\n# Download mysql jdbc driver and prepare hive metastore.\nRUN mkdir -p /opt/nifi/mysql\nRUN curl -f -s -o /opt/nifi/mysql/mysql-connector-java-5.1.41.jar https://central.maven.org/maven2/mysql/mysql-connector-java/5.1.41/mysql-connector-java-5.1.41.jar\nRUN curl -f -s -o /opt/nifi/mysql/mariadb-java-client-1.5.7.jar https://downloads.mariadb.com/Connectors/java/connector-java-1.5.7/mariadb-java-client-1.5.7.jar\n\nRUN echo \"Copy the activeMQ required jars for the JMS processors to $NIFI_INSTALL_HOME/activemq\"\nRUN mkdir $NIFI_INSTALL_HOME/activemq\n#COPY activemq/*.jar $NIFI_INSTALL_HOME/activemq/\nRUN curl -f -s -o $NIFI_INSTALL_HOME/activemq/activemq-client-5.13.1.jar https://repo1.maven.org/maven2/org/apache/activemq/activemq-client/5.13.1/activemq-client-5.13.1.jar\nRUN curl -f -s -o $NIFI_INSTALL_HOME/activemq/geronimo-j2ee-management_1.1_spec-1.0.1.jar https://repo1.maven.org/maven2/org/apache/geronimo/specs/geronimo-j2ee-management_1.1_spec/1.0.1/geronimo-j2ee-management_1.1_spec-1.0.1.jar\nRUN curl -f -s -o $NIFI_INSTALL_HOME/activemq/hawtbuf-1.11.jar https://repo1.maven.org/maven2/org/fusesource/hawtbuf/hawtbuf/1.11/hawtbuf-1.11.jar\n\nRUN echo \"setting up temporary database in case JMS goes down\"\nRUN mkdir $NIFI_INSTALL_HOME/h2\nRUN mkdir $NIFI_INSTALL_HOME/ext-config\n\nCOPY conf/config.properties $NIFI_INSTALL_HOME/ext-config\nRUN chown -R $NIFI_USER:$NIFI_GROUP $NIFI_INSTALL_HOME\n\nRUN echo \"Creating flow file cache directory\"\nRUN mkdir $NIFI_INSTALL_HOME/feed_flowfile_cache/\nRUN chown $NIFI_USER:$NIFI_GROUP $NIFI_INSTALL_HOME/feed_flowfile_cache/\n\nRUN mkdir /var/log/nifi && \\\n    chown $NIFI_USER:$NIFI_GROUP /var/log/nifi\n\nRUN echo \"Creating the dropzone folder\" && mkdir -p /var/dropzone\nRUN chown nifi:nifi /var/dropzone\nRUN chmod 774 /var/dropzone/\n\n#sample data to run after kylo start\nCOPY sample_data/* /var/sampledata/\nRUN chown -R nifi:nifi /var/sampledata\n\nRUN groupadd supergroup\nRUN usermod -a -G supergroup nifi\n\nCOPY scripts/nifi_bootstrap.sh /etc/nifi_bootstrap.sh\nRUN chown root.root /etc/nifi_bootstrap.sh && \\\n    chmod u+x /etc/nifi_bootstrap.sh\n\nENTRYPOINT [\"/etc/nifi_bootstrap.sh\"]\n\n# expose NiFi UI\nEXPOSE 8079\n"
}