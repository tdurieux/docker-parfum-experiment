{
  "startTime": 1674243481159,
  "endTime": 1674243482303,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 197,
        "lineEnd": 197,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 42,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 69,
        "columnStart": 22,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 22,
        "columnEnd": 399
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 22,
        "columnEnd": 399
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Image: introlab3it/rtabmap:jfr2018\n\nFROM ubuntu:16.04\n\nWORKDIR /root/\n\n# Install build dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n      libsqlite3-dev \\\n      libpcl-dev \\\n      git \\\n      cmake \\\n      libproj-dev \\\n      libqt5svg5-dev \\\n      libfreenect-dev \\\n      libopenni2-dev \\\n      libyaml-cpp-dev \\\n      software-properties-common \\\n      libgtk2.0-dev \\\n      pkg-config && rm -rf /var/lib/apt/lists/*;\n\n# OpenCV (use version <= 3.1.0 for rtabmap 0.16.3 for a solvePnpRansac issue where we have worst ransac performance on newer opencv versions)\nRUN git clone https://github.com/opencv/opencv_contrib.git\nRUN git clone https://github.com/opencv/opencv.git\nRUN cd opencv_contrib && \\\n    git checkout tags/3.1.0 && \\\n    cd && \\\n    cd opencv && \\\n    git checkout tags/3.1.0 && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DOPENCV_EXTRA_MODULES_PATH=/root/opencv_contrib/modules -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF .. && \\\n    make -j4 && \\\n    make install && \\\n    cd && \\\n    rm -rf opencv opencv_contrib\n\n# Install ROS to build other odometry approaches (depending on ROS)\n# install packages\nRUN apt-get update && apt-get install --no-install-recommends -q -y \\\n    dirmngr \\\n    gnupg2 \\\n    lsb-release \\\n    && rm -rf /var/lib/apt/lists/*\n\n# setup keys\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116\n\n# setup sources.list\nRUN echo \"deb http://packages.ros.org/ros/ubuntu `lsb_release -sc` main\" > /etc/apt/sources.list.d/ros-latest.list\n\n# install bootstrap tools\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python-rosdep \\\n    python-rosinstall \\\n    python-vcstools \\\n    && rm -rf /var/lib/apt/lists/*\n\n# setup environment\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\n# bootstrap rosdep\nRUN rosdep init \\\n    && rosdep update\n\n# install ros packages\nENV ROS_DISTRO kinetic\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ros-${ROS_DISTRO}-ros-core=1.3.2-0* \\\n    && rm -rf /var/lib/apt/lists/*\n\n# install ROS dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y ros-${ROS_DISTRO}-tf ros-${ROS_DISTRO}-pcl-ros ros-${ROS_DISTRO}-eigen-conversions ros-${ROS_DISTRO}-tf-conversions ros-${ROS_DISTRO}-random-numbers ros-${ROS_DISTRO}-image-transport libblas-dev liblapack-dev libsuitesparse-dev libvtk6.2 libyaml-cpp-dev wget libgoogle-glog-dev libatlas-base-dev ros-${ROS_DISTRO}-sophus ros-${ROS_DISTRO}-octomap libglew-dev && rm -rf /var/lib/apt/lists/*;\n\n# g2o should be built to link on csparse installed system-wide\nRUN git clone https://github.com/RainerKuemmerle/g2o.git\nRUN cd g2o && \\\n    git checkout 20170730_git && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DBUILD_LGPL_SHARED_LIBS=ON -DG2O_BUILD_APPS=OFF -DBUILD_WITH_MARCH_NATIVE=OFF -DG2O_BUILD_EXAMPLES=OFF -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release .. && \\\n    make -j3 && \\\n    make install && \\\n    cd && \\\n    rm -r g2o\n\n# GTSAM\nRUN git clone https://bitbucket.org/gtborg/gtsam.git\nRUN cd gtsam && \\\n    git checkout 4.0.0-alpha2 && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DMETIS_SHARED=ON -DGTSAM_BUILD_STATIC_LIBRARY=OFF -DGTSAM_USE_SYSTEM_EIGEN=ON -DGTSAM_BUILD_TESTS=OFF -DGTSAM_BUILD_EXAMPLES_ALWAYS=OFF -DCMAKE_BUILD_TYPE=Release .. && \\\n    make -j3 && \\\n    make install && \\\n    cd && \\\n    rm -r gtsam\n\n# libpointmatcher\nRUN git clone https://github.com/ethz-asl/libnabo.git\n#commit Apr 25 2018\nRUN cd libnabo && \\\n    git checkout 7e378f6765393462357b8b74d8dc8c5554542ae6 && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Release .. && \\\n    make -j3 && \\\n    make install && \\\n    cd && \\\n    rm -r libnabo\nRUN git clone https://github.com/ethz-asl/libpointmatcher.git\n#commit Jan 19 2018\nRUN cd libpointmatcher && \\\n    git checkout 00004bd41e44a1cf8de24ad87e4914760717cbcc && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Release .. && \\\n    make -j3 && \\\n    make install && \\\n    cd && \\\n    rm -r libpointmatcher\n\n# Clone dependencies\nRUN mkdir -p catkin_ws/src\nWORKDIR /root/catkin_ws/src\nRUN /bin/bash -c '. /opt/ros/${ROS_DISTRO}/setup.bash; catkin_init_workspace'\n# OPENCV ROS\nRUN git clone https://github.com/ros-perception/vision_opencv.git && cd vision_opencv && git checkout kinetic\n# DVO\nRUN git clone https://github.com/tum-vision/dvo_slam.git && cd dvo_slam && git checkout ${ROS_DISTRO}-devel && rm dvo_slam/package.xml && rm dvo_benchmark/package.xml && rm dvo_ros/package.xml\n# VISO2\nRUN git clone https://github.com/srv/viso2.git && cd viso2 && git checkout ${ROS_DISTRO}\n# MSCKF-VIO\nRUN git clone https://github.com/KumarRobotics/msckf_vio.git && cd msckf_vio && git checkout a9386c5 && wget https://gist.githubusercontent.com/matlabbe/f2518d7427e7f6740af2110e540b1f2b/raw/900a76b0a6741e172e76722e07c0aae50d3b94f3/msckf_vio_a9386c5_ros_commented.patch && git apply --ignore-space-change --ignore-whitespace msckf_vio_a9386c5_ros_commented.patch\n# FOVIS\nRUN git clone https://github.com/srv/libfovis.git && cd libfovis && git checkout 896acc8425e9fd7c5609153b8bad349ae1abbb50\n# LOAM\nRUN git clone https://github.com/laboshinl/loam_velodyne.git && cd loam_velodyne && git checkout a4c364a677647f2a35831439032dc5a58378b3fd\n# VINS-Fusion\nRUN git clone https://github.com/HKUST-Aerial-Robotics/VINS-Fusion.git && cd VINS-Fusion && git checkout e72b5f7ae7437e8cf481cc0bcbfb5fe91bd3d640 && wget https://gist.githubusercontent.com/matlabbe/795ab37067367dca58bbadd8201d986c/raw/0657cc30fca6b1b61faeef42be9f3428861d2598/vins-fusion_e72b5f7.patch && git apply --ignore-space-change --ignore-whitespace vins-fusion_e72b5f7.patch\n\nWORKDIR /root\n# OKVIS\nRUN git clone https://github.com/ethz-asl/okvis.git && cd okvis && git checkout 1dce9129f22dd4d21d944788cd9da3a4341586aa && wget https://gist.githubusercontent.com/matlabbe/383be55b5cb682fea217d45ef9a37ef8/raw/bd4f6886eeba3800f0e5171e77abc5dd6dc8bfd9/okvis_1dce912_marchnative_disabled.patch && git apply --ignore-space-change --ignore-whitespace okvis_1dce912_marchnative_disabled.patch\n# ORB_SLAM2\nRUN git clone https://github.com/stevenlovegrove/Pangolin.git\nRUN git clone https://github.com/raulmur/ORB_SLAM2.git && cd ORB_SLAM2 && wget https://gist.githubusercontent.com/matlabbe/c10403c5d44af85cc3585c0e1c601a60/raw/48adf04098960d86ddf225f1a8c68af87bfcf56e/orbslam2_f2e6f51_marchnative_disabled.patch && git apply --ignore-space-change --ignore-whitespace orbslam2_f2e6f51_marchnative_disabled.patch\n\nRUN git clone https://github.com/introlab/rtabmap.git\n\n# for dvo, TBB is required (docker related issue)\n# Download and install TBB\nENV TBB_RELEASE 2018_U2\nENV TBB_VERSION 2018_20171205\nENV TBB_DOWNLOAD_URL https://github.com/01org/tbb/releases/download/${TBB_RELEASE}/tbb${TBB_VERSION}oss_lin.tgz\nENV TBB_INSTALL_DIR /opt\nRUN wget ${TBB_DOWNLOAD_URL} && \\\n\ttar -C ${TBB_INSTALL_DIR} -xf tbb${TBB_VERSION}oss_lin.tgz && \\\n\trm tbb${TBB_VERSION}oss_lin.tgz && \\\n\tsed -i \"s%SUBSTITUTE_INSTALL_DIR_HERE%${TBB_INSTALL_DIR}/tbb${TBB_VERSION}oss%\" ${TBB_INSTALL_DIR}/tbb${TBB_VERSION}oss/bin/tbbvars.* && \\\n        echo \"source ${TBB_INSTALL_DIR}/tbb${TBB_VERSION}oss/bin/tbbvars.sh intel64\" >> ~/.bashrc\n\nRUN cd okvis && \\\n     mkdir build && \\\n     cd build && \\\n     cmake .. && \\\n     make -j3 && \\\n     make install && \\\n     mkdir -p /usr/local/lib/cmake && \\\n     mv /usr/local/lib/CMake/* /usr/local/lib/cmake/.\n\n# Pangolin needed for ORB_SLAM2\nRUN cd Pangolin && \\\n     mkdir build && \\\n     cd build && \\\n     cmake .. && \\\n     make -j3 && \\\n     make install && \\\n     cd && \\\n     rm -rf Pangolin\n\nRUN cd ORB_SLAM2 && \\\n     cd Thirdparty/DBoW2 && \\\n     mkdir build && \\\n     cd build && \\\n     cmake .. -DCMAKE_BUILD_TYPE=Release && \\\n     make -j3 && \\\n     rm -rf * && \\\n     cd ../../g2o && \\\n     mkdir build && \\\n     cd build && \\\n     cmake .. -DCMAKE_BUILD_TYPE=Release && \\\n     make -j3 && \\\n     rm -rf * && \\\n     cd ../../../ && \\\n     cd Vocabulary && \\\n     tar -xf ORBvoc.txt.tar.gz && \\\n     cd .. && \\\n     mkdir build && \\\n     cd build && \\\n     cmake .. -DCMAKE_BUILD_TYPE=Release && \\\n     make -j3 && \\\n     rm -rf * && rm ORBvoc.txt.tar.gz\n\nRUN mv okvis/config/config_fpga_p2_euroc.yaml .\nRUN mv ORB_SLAM2/Vocabulary/ORBvoc.txt .\nRUN cp catkin_ws/src/VINS-Fusion/config/euroc/* .\nRUN cp catkin_ws/src/VINS-Fusion/config/kitti_odom/* .\n\n# Catkin_make\nWORKDIR /root/catkin_ws\nRUN /bin/bash -c '. /opt/ros/${ROS_DISTRO}/setup.bash;. ${TBB_INSTALL_DIR}/tbb${TBB_VERSION}oss/bin/tbbvars.sh intel64; catkin_make -j3 -DCMAKE_BUILD_TYPE=Release; rm -rf build;'\nRUN echo \"source /root/catkin_ws/devel/setup.bash\" >> ~/.bashrc\n\nENV LD_LIBRARY_PATH /opt/tbb2018_20171205oss/lib/intel64/gcc4.7:/root/ORB_SLAM2/lib:/root/ORB_SLAM2/Thirdparty/g2o/lib:/root/ORB_SLAM2/Thirdparty/DBoW2/lib:/root/catkin_ws/devel/lib:/opt/ros/${ROS_DISTRO}/lib:$LD_LIBRARY_PATH\nENV PATH /root/catkin_ws/devel/bin:/opt/ros/${ROS_DISTRO}/bin:$PATH\nENV ORB_SLAM2_ROOT_DIR /root/ORB_SLAM2\n\nWORKDIR /root\n\n# Build RTAB-Map (using standard g2o, then a version for orbslam2, which uses its own g2o version)\nRUN cp -r rtabmap rtabmap_os2 && cp -r rtabmap rtabmap_msckf && cp -r rtabmap rtabmap_loam\nRUN /bin/bash -c '. /root/catkin_ws/devel/setup.bash; cd rtabmap ;  cd build ;  cmake -DWITH_G2O=ON .. ;  make -j3 ; make install ; rm -rf * ; ldconfig'\n# Version with orb_slam2 (system g2o disabled)\nRUN /bin/bash -c '. /root/catkin_ws/devel/setup.bash; cd rtabmap_os2 ; cd build ; cmake -DWITH_G2O=OFF .. ; make -j3 ; rm -rf *'\n\n# rtabmap is crashing if LOAM and MSCKF dependencies are used at the same time, so split them\nRUN /bin/bash -c '. /root/catkin_ws/devel/setup.bash; cd rtabmap_loam ;cd build ;cmake -DWITH_MSCKF_VIO=OFF -DWITH_LOAM=ON -DWITH_G2O=ON -DWITH_FOVIS=OFF -DWITH_DVO=OFF -DWITH_OKVIS=OFF -DWITH_VINS=OFF -DWITH_VISO2=OFF .. ;make -j3 ;rm -rf *'\nRUN /bin/bash -c '. /root/catkin_ws/devel/setup.bash; cd rtabmap_msckf ;cd build ;cmake -DWITH_MSCKF_VIO=ON -DWITH_LOAM=OFF -DWITH_G2O=ON -DWITH_FOVIS=OFF -DWITH_DVO=OFF -DWITH_OKVIS=OFF -DWITH_VINS=OFF -DWITH_VISO2=OFF .. ;make -j3 ;rm -rf *'\n\nWORKDIR /root\n\n"
}