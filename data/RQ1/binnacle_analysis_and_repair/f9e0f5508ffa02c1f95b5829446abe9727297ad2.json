{
  "startTime": 1674241493791,
  "endTime": 1674241494313,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 24,
        "columnEnd": 33
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 5,
        "columnEnd": 97
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 5,
        "columnEnd": 64
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 99
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:8.6\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r redis && useradd -r -g redis redis\n\nRUN apt-get update \\\n  && grep security /etc/apt/sources.list > /tmp/security.list \\\n  && apt-get upgrade -oDir::Etc::Sourcelist=/tmp/security.list -s \\\n  && apt-get install -y --no-install-recommends apt apt-utils \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tca-certificates \\\n\t\twget \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# grab gosu for easy step-down from root\nENV GOSU_VERSION 1.7\nRUN set -x \\\n\t&& wget --progress=bar:force:noscroll -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n\t&& wget --progress=bar:force:noscroll -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n\t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n\t&& rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n\t&& chmod +x /usr/local/bin/gosu \\\n\t&& gosu nobody true && rm -rf -d\n\nENV REDIS_VERSION 3.2.6\nENV REDIS_DOWNLOAD_URL http://download.redis.io/releases/redis-3.2.6.tar.gz\nENV REDIS_DOWNLOAD_SHA1 0c7bc5c751bdbc6fabed178db9cdbdd948915d1b\n\nRUN apt-get update && apt-get install -y libc6-i386 --no-install-recommends && rm -rf /var/lib/apt/lists/*\n\n# for redis-sentinel see: http://redis.io/topics/sentinel\nRUN set -ex \\\n\t\\\n\t&& buildDeps=' \\\n\t\tgcc \\\n\t\tgcc-multilib \\\n\t\tlibc6-dev-i386 \\\n\t\tmake \\\n\t' \\\n\t&& apt-get update \\\n\t&& apt-get install -y $buildDeps --no-install-recommends \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t\\\n\t&& wget --progress=bar:force:noscroll -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\" \\\n\t&& echo \"$REDIS_DOWNLOAD_SHA1 *redis.tar.gz\" | sha1sum -c - \\\n\t&& mkdir -p /usr/src/redis \\\n  && mkdir -p /usr/local/bin \\\n\t&& tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1 \\\n\t&& rm redis.tar.gz \\\n\t\\\n  # Disable Redis protected mode [1] as it is unnecessary in context\n  # of Docker. Ports are not automatically exposed when running inside\n  # Docker, but rather explicitly by specifying -p / -P.\n  # [1] https://github.com/antirez/redis/commit/edd4d555df57dc84265fdfb4ef59a4678832f6da\n\t&& grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h \\\n\t&& sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /usr/src/redis/src/server.h \\\n\t&& grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h \\\n  # for future reference, we modify this directly in the source instead of just supplying a default configuration flag because apparently \"if you specify any argument to redis-server, [it assumes] you are going to specify everything\"\n  # see also https://github.com/docker-library/redis/issues/4#issuecomment-50780840\n  # (more exactly, this makes sure the default behavior of \"save on SIGTERM\" stays functional by default)\n\t\\\n\t&& make -C /usr/src/redis \\\n\t&& make -C /usr/src/redis install \\\n  && cp /usr/src/redis/redis.conf /etc/ \\\n  && sed -i -e \"s|^bind .*$|#bind 0.0.0.0|\" /etc/redis.conf \\\n  && cp /usr/src/redis/sentinel.conf /etc/ \\\n\t\\\n\t&& rm -r /usr/src/redis \\\n\t\\\n\t&& apt-get purge -y --auto-remove $buildDeps\n\nENV GO_VERSION 1.7.4\nENV GO_DOWNLOAD_URL https://storage.googleapis.com/golang/go1.7.4.linux-amd64.tar.gz\nENV GO_DOWNLOAD_SHA256 47fda42e46b4c3ec93fa5d4d4cc6a748aa3f9411a2a2b7e08e3a6d80d753ec8b\n\nRUN apt-get update && apt-get install -y --no-install-recommends git \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && git clone https://github.com/kubernetes/contrib.git /usr/src/k8s-contrib \\\n  && cd /usr/src/k8s-contrib \\\n  # For security reasons\n  && git checkout 93f75fa70b3b14971b8bc72fe7574923bf50e719 \\\n  && cd - \\\n  && wget --progress=bar:force:noscroll -O /tmp/go.tar.gz \"$GO_DOWNLOAD_URL\" \\\n  && echo \"$GO_DOWNLOAD_SHA256  */tmp/go.tar.gz\" | sha256sum -c - \\\n  && tar -xzf /tmp/go.tar.gz -C /usr/local \\\n  && rm /tmp/go.tar.gz \\\n  && mkdir -p /usr/src/go/src \\\n  && export GOPATH=/usr/src/go \\\n  && /usr/local/go/bin/go get k8s.io/kubernetes/pkg/util/sets \\\n  && /usr/local/go/bin/go build \\\n    /usr/src/k8s-contrib/pets/peer-finder/peer-finder.go \\\n  && mv peer-finder /usr/local/bin/ \\\n  && rm -rf /usr/local/go \\\n  && apt-get purge -y --auto-remove git \\\n  && rm -rf /usr/src/go \\\n  && rm -rf /usr/src/k8s-contrib\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends ruby redis-tools \\\n  && wget https://download.redis.io/redis-stable/src/redis-trib.rb -O /usr/local/bin/redis-trib.rb \\\n  && chmod +x /usr/local/bin/redis-trib.rb \\\n  && gem install redis \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update \\\n  && grep security /etc/apt/sources.list > /tmp/security.list \\\n  && apt-get upgrade -oDir::Etc::Sourcelist=/tmp/security.list -s \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN rm -rf /usr/src\n\nRUN mkdir /data && chown redis:redis /data\nVOLUME /data\nWORKDIR /data\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\n\nCOPY cluster-meet.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/cluster-meet.sh\n\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\n\nEXPOSE 6379\nCMD [ \"/usr/local/bin/redis-server\" ]\n"
}