{
  "startTime": 1674252230234,
  "endTime": 1674252230722,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:19.04\nMAINTAINER Florian Sch√ºller <florian.schueller@gmail.com>\n\nENV DEBIAN_FRONTEND noninteractive\nENV DISPLAY ${DISPLAY:-:1}\n\n# Test specific\n# python-wheel is a missing dependency from behave\n# psmisc for \"killall\"\nRUN apt-get update \\\n && apt-get -y --no-install-recommends install apt-utils psmisc ffmpeg x11-utils libxrandr-dev \\\n && apt-get -y --no-install-recommends install dirmngr git python-ldtp ldtp python-pip python-wheel python-dogtail python-psutil python-setuptools vim sudo gdb valgrind tmuxinator tmux \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN /usr/bin/pip install behave\n\n# Enable source repositories\nRUN sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list\n\n# Xfce specific build dependencies\nRUN apt-get update \\\n && apt-get -y --no-install-recommends install gnome-themes-standard libglib2.0-bin build-essential libgtk-3-dev gtk-doc-tools libgtk2.0-dev libx11-dev libglib2.0-dev libwnck-3-dev intltool libdbus-glib-1-dev liburi-perl x11-xserver-utils libvte-2.91-dev dbus-x11 strace libgl1-mesa-dev adwaita-icon-theme libwnck-dev adwaita-icon-theme-full cmake libsoup2.4-dev libpcre2-dev exo-utils \\\n && apt-get -y --no-install-recommends install xfce4 \\\n && apt-get -y --no-install-recommends build-dep xfce4-panel thunar xfce4-settings xfce4-session xfdesktop4 xfwm4 xfce4-appfinder tumbler xfce4-terminal xfce4-clipman-plugin xfce4-screenshooter \\\n && rm -rf /var/lib/apt/lists/*\n\n#needed for LDTP and friends\nRUN /usr/bin/dbus-run-session /usr/bin/gsettings set org.gnome.desktop.interface toolkit-accessibility true\n\n# Create the directory for version_info.txt\nRUN useradd -ms /bin/bash xfce-test_user\n\nRUN adduser xfce-test_user sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\n# Group all repos here\nRUN mkdir /git\n\n# Rather use my patched version\nRUN cd git \\\n && git clone https://github.com/schuellerf/ldtp2.git \\\n && cd ldtp2 \\\n && python setup.py install\n\n# Install _all_ languages for testing\nRUN apt-get update \\\n && apt-get -y --no-install-recommends install transifex-client xautomation $(apt-cache search language-pack|grep -oP \"^language-pack-...?(?= )\") \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN pip install --no-cache-dir opencv-python google-api-python-client oauth2client\n\nRUN cp /usr/share/i18n/locales/en_GB /usr/share/i18n/locales/automate\nRUN sed -i -E \"s/Language: en/Language: automate/\" /usr/share/i18n/locales/automate\nRUN sed -i -E \"s/lang_lib +\\\"eng\\\"/lang_lib    \\\"automate\\\"/\" /usr/share/i18n/locales/automate\nRUN sed -i -E \"s/lang_name +\\\"English\\\"/lang_name     \\\"Automate\\\"/\" /usr/share/i18n/locales/automate\nRUN bash -c \"cd /usr/share/i18n/locales;localedef -i automate -f UTF-8 automate.UTF-8 -c -v || echo Ignoring warnings...\"\nRUN echo \"automate UTF-8\" > /var/lib/locales/supported.d/automate\nRUN locale-gen automate\nRUN dpkg-reconfigure fontconfig\n\n# Line used to invalidate all git clones\nARG DOWNLOAD_DATE=give_me_a_date\nENV DOWNLOAD_DATE=$DOWNLOAD_DATE\nRUN echo \"Newly cloning all repos as date-flag changed to ${DOWNLOAD_DATE}\"\nARG AUTOGEN_OPTIONS=\"--disable-debug --enable-maintainer-mode --host=x86_64-linux-gnu \\\n                    --build=x86_64-linux-gnu --prefix=/usr --libdir=/usr/lib/x86_64-linux-gnu \\\n                    --libexecdir=/usr/lib/x86_64-linux-gnu --sysconfdir=/etc --localstatedir=/var --enable-gtk3 --enable-gtk-doc\"\nENV AUTOGEN_OPTIONS $AUTOGEN_OPTIONS\n\nCOPY container_scripts /container_scripts\nRUN chmod a+x /container_scripts/*.sh /container_scripts/*.py\n\nRUN /container_scripts/build_all.sh\n\nCOPY behave /behave_tests\nRUN mkdir /data\n\nCOPY xfce-test /\nRUN chmod a+x /xfce-test\nCOPY .tmuxinator /home/xfce-test_user/.tmuxinator\nRUN chown -R xfce-test_user /git /behave_tests /data ~xfce-test_user/.tmuxinator\n\nUSER xfce-test_user\nENV HOME /home/xfce-test_user\n\nRUN mkdir -p ~xfce-test_user/Desktop\nRUN ln -s /container_scripts ~xfce-test_user/Desktop/container_scripts\n\n#RUN echo 'if [[ $- =~ \"i\" ]]; then echo -n \"This container includes:\\n\"; cat ~xfce-test_user/version_info.txt; fi' >> ~xfce-test_user/.bashrc\n\nWORKDIR /data\nCMD [ \"/container_scripts/entrypoint.sh\" ]\n"
}