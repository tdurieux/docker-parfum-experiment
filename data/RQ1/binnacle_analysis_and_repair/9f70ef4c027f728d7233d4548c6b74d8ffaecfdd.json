{
  "startTime": 1674236329253,
  "endTime": 1674236329407,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 5,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.12-alpine\n\nENV GOPATH /go\nENV CGO_ENABLED 0\nENV GO111MODULE on\n\nRUN  \\\n     apk add --no-cache git && \\\n     git clone https://github.com/minio/minio && cd minio/dockerscripts && \\\n     go build -tags kqueue -ldflags \"-s -w\" -o /usr/bin/healthcheck healthcheck.go && \\\n     go build -tags kqueue -ldflags \"-s -w\" -o /usr/bin/check-user check-user.go\n\nFROM alpine:3.9\n\nLABEL maintainer=\"MinIO Inc <dev@min.io>\"\n\nCOPY --from=0 /usr/bin/healthcheck /usr/bin/healthcheck\nCOPY --from=0 /usr/bin/check-user /usr/bin/check-user\nCOPY dockerscripts/docker-entrypoint.sh /usr/bin/\n\nENV MINIO_UPDATE off\nENV MINIO_ACCESS_KEY_FILE=access_key \\\n    MINIO_SECRET_KEY_FILE=secret_key\n\nRUN \\\n     apk add --no-cache ca-certificates 'curl>7.61.0' 'su-exec>=0.2' && \\\n     echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf && \\\n     curl -f https://dl.min.io/server/minio/release/linux-amd64/minio > /usr/bin/minio && \\\n     chmod +x /usr/bin/minio && \\\n     chmod +x /usr/bin/docker-entrypoint.sh && \\\n     chmod +x /usr/bin/healthcheck && \\\n     chmod +x /usr/bin/check-user\n\nEXPOSE 9000\n\nENTRYPOINT [\"/usr/bin/docker-entrypoint.sh\"]\n\nVOLUME [\"/data\"]\n\nHEALTHCHECK --interval=1m CMD healthcheck\n\nCMD [\"minio\"]\n"
}