{
  "startTime": 1674242892430,
  "endTime": 1674242892788,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 11,
        "columnEnd": 109
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 11,
        "columnEnd": 117
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 40,
        "columnStart": 11,
        "columnEnd": 46
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 19,
        "columnEnd": 47
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 41,
        "columnEnd": 170
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 11,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 11,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 11,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 41,
        "columnEnd": 170
      }
    }
  ],
  "repairedDockerfile": "FROM centos:latest\nMAINTAINER \"The CentOS Project\" <admin@jiobxn.com>\nARG LATEST=\"0\"\nARG ZEND=\"0\"\n\nRUN \\cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\nRUN yum clean all; yum -y install epel-release; rm -rf /var/cache/yum yum -y update \\\n        && yum clean all; yum -y update; yum -y install net-tools bash-completion vim wget libnghttp2-devel openssl openssl-devel expat-devel make gcc-c++ iptables cronie \\\n        && yum clean all\n\nRUN cd /usr/local/src \\\n        && wget -c \"$( curl -f -s https://httpd.apache.org/download.cgi | grep tar.gz | awk -F\\\" 'NR==1{print $2}')\" \\\n        && wget -c \"$( curl -f -s https://apr.apache.org/download.cgi | grep tar.gz | awk -F\\\" 'NR==1{print $2}')\" \\\n        && wget -c \"$( curl -f -s https://apr.apache.org/download.cgi | grep tar.gz | awk -F\\\" 'NR==4{print $2}')\"\n\nRUN cd /usr/local/src \\\n        && if [ \"${ZEND}\" = \"1\" ]; then MPM=\"--with-mpm=prefork\"; fi \\\n        && tar zxf httpd-*.tar.gz \\\n        && tar zxf apr-util-*.tar.gz \\\n        && \\rm apr-util-*.tar.gz \\\n        && mv apr-util-* new-apr-util \\\n        && tar zxf apr-*.tar.gz \\\n        && cd /usr/local/src/apr-* \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j8 && make install \\\n        && cd /usr/local/src/new-apr-util \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/apr-util --with-apr=/usr/local/apr --with-crypto --with-openssl --with-nss \\\n        && make -j8 && make install \\\n        && cd /usr/local/src/httpd-* \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/apache ${MPM} \\\n           --enable-load-all-modules \\\n           --enable-modules=all \\\n           --enable-mods-shared=all \\\n           --enable-session-crypto \\\n           --enable-http2 \\\n           --enable-cgi \\\n           --with-z=/usr \\\n           --with-ssl=/usr \\\n           --with-pcre=/usr \\\n           --with-libxml2=/usr \\\n           --with-apr=/usr/local/apr \\\n           --with-apr-util=/usr/local/apr-util \\\n        && make -j8 && make install \\\n        && rm -rf /usr/local/src/* \\\n        && ln -s /usr/local/apache/bin/* /usr/local/bin/ && rm httpd-*.tar.gz\n\nVOLUME /usr/local/apache/htdocs\n\nCOPY httpd.sh /httpd.sh\nRUN chmod +x /httpd.sh\n\nENTRYPOINT [\"/httpd.sh\"]\n\nEXPOSE 80 443\n\nCMD [\"httpd\", \"-DFOREGROUND\"]\n\n# docker build --build-arg ZEND=1 -t httpd .\n# docker run -d --restart always -p 10080:80 -p 10443:443 -v /docker/www:/usr/local/apache/htdocs -e PHP_SERVER=redhat.xyz --hostname httpd --name httpd httpd\n# docker run -it --rm httpd --help\n"
}