{
  "startTime": 1674244797698,
  "endTime": 1674244798476,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 95
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 762
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 60
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 60
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 7,
        "columnEnd": 162
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 280
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:centos6\n\nRUN cp -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n\nRUN yum -y install wget tar unzip gcc zlib zlib-devel openssl openssl-devel unzip && rm -rf /var/cache/yum\nRUN yum -y install libxml2-devel bzip2-devel curl-devel db4-devel gdbm-devel libjpeg-devel libpng-devel freetype-devel t1lib-devel.x86_64 gmp-devel libc-client-devel build-essential openldap-devel libmcrypt-devel.x86_64 gcc-c++ postgresql-devel aspell-devel pcre pcre-devel xz git && rm -rf /var/cache/yum\n\nRUN ln -s /usr/lib64/libc-client.so /usr/lib/libc-client.so \\\n    && cp -frp /usr/lib64/libldap* /usr/lib/\n\nRUN set -x \\\n    && wget https://sourceforge.net/projects/mcrypt/files/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz \\\n    && mkdir -p /usr/src/libmcrypt \\\n    && tar -zxvf libmcrypt-2.5.8.tar.gz -C /usr/src/libmcrypt --strip-components=1 \\\n    && rm libmcrypt-2.5.8.tar.gz \\\n    && pushd /usr/src/libmcrypt \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make && make install \\\n    && popd && rm -rf /usr/src/libmcrypt\n\nRUN wget https://mirrors.sohu.com/php/php-5.5.9.tar.gz \\\n    && mkdir -p /usr/src/php \\\n    && tar -zxvf php-5.5.9.tar.gz -C /usr/src/php --strip-components=1 \\\n    && rm php-5.5.9.tar.gz \\\n    && pushd /usr/src/php \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/php --with-config-file-path=/opt/php/etc --enable-cli --enable-ftp --enable-sockets --enable-soap --enable-fileinfo --enable-bcmath --enable-calendar --with-kerberos --enable-zip --enable-pear --with-bz2 --with-curl --enable-dba --with-inifile --with-flatfile --with-cdb --with-gdbm --with-mcrypt --with-mhash --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-pdo-pgsql --with-pgsql --with-pspell --with-gettext --with-gmp --with-imap --with-imap-ssl --with-ldap --with-ldap-sasl --enable-mbstring --enable-mbregex --enable-exif --with-openssl --enable-fpm --with-gd --with-png-dir --with-jpeg-dir --with-freetype-dir --with-t1lib --enable-gd-native-ttf --enable-gd-jis-conv --with-libxml-dir --with-zlib \\\n    && make \\\n    && make install \\\n    && rm -r /usr/src/php \\\n    && popd\n\nRUN git clone https://github.com/nicolasff/phpredis \\\n    && pushd phpredis \\\n    && /opt/php/bin/phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/opt/php/bin/php-config \\\n    && make \\\n    && make install \\\n    && popd\n\nRUN git clone https://github.com/allegro/php-protobuf \\\n    && pushd php-protobuf \\\n    && /opt/php/bin/phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/opt/php/bin/php-config \\\n    && make \\\n    && make install \\\n    && popd\n\nRUN wget https://ftp.exim.llorien.org/pcre/pcre-8.32.tar.gz \\\n    && mkdir -p /usr/src/pcre-8.32 \\\n    && tar -zxvf pcre-8.32.tar.gz -C /usr/src/pcre-8.32 --strip-components=1 \\\n    && rm pcre-8.32.tar.gz && rm -rf /usr/src/pcre-8.32\n\nRUN wget https://www.openssl.org/source/openssl-1.0.1e.tar.gz \\\n    && mkdir -p /usr/src/openssl-1.0.1e \\\n    && tar -zxvf openssl-1.0.1e.tar.gz -C /usr/src/openssl-1.0.1e --strip-components=1 \\\n    && rm openssl-1.0.1e.tar.gz && rm -rf /usr/src/openssl-1.0.1e\n\nRUN wget https://nginx.org/download/nginx-1.4.6.tar.gz \\\n    && mkdir -p /usr/src/nginx \\\n    && tar -zxvf nginx-1.4.6.tar.gz -C /usr/src/nginx --strip-components=1 \\\n    && rm nginx-1.4.6.tar.gz \\\n    && pushd /usr/src/nginx \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/nginx --with-pcre=/usr/src/pcre-8.32 --with-http_gzip_static_module --with-http_ssl_module --with-openssl=/usr/src/openssl-1.0.1e \\\n    && make \\\n    && make install \\\n    && popd && rm -rf /usr/src/nginx\n\nADD . /opt/\nWORKDIR /opt\n\nRUN cp nginx.conf /opt/nginx/conf/nginx.conf \\\n    && cp php.ini /opt/php/etc/ \\\n    && cp php-fpm.conf /opt/php/etc/\n\nRUN tar zxvf scribed.tar.gz \\\n    && chown -R root:root scribed \\\n    && rm -f scribed.tar.gz\n\nRUN curl -f -SL 'https://bootstrap.pypa.io/get-pip.py' | python\nRUN pip install --no-cache-dir supervisor \\\n    && echo_supervisord_conf > /etc/supervisord.conf \\\n    && echo \"[include]\" >> /etc/supervisord.conf \\\n    && echo \"files = /etc/supervisord.d/*.conf\" >> /etc/supervisord.conf \\\n    && mkdir -p /etc/supervisord.d \\\n    && cp nginxphp.conf scribed.conf /etc/supervisord.d/ \\\n    && rm -f nginx.conf php.ini php-fpm.conf nginxphp.conf scribed.conf Dockerfile\n\nRUN mkdir /opt/app\nRUN mkdir /opt/logs\nENV PHP_HOME /opt/php\nENV NGINX_HOME /opt/nginx\nENV PATH $PATH:$PHP_HOME/bin:$PHP_HOME/sbin:$NGINX_HOME/sbin\n\nEXPOSE 8080\n"
}