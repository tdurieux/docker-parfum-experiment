{
  "startTime": 1674240190657,
  "endTime": 1674240190804,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 130
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_VERSION\nARG IMAGE_REPO\nFROM ${IMAGE_REPO:-lagoon}/php:${PHP_VERSION}-fpm\n\nLABEL maintainer=\"amazee.io\"\nENV LAGOON=cli\n\n# Defining Versions - https://getcomposer.org/download/\nENV COMPOSER_VERSION=1.8.6 \\\n  COMPOSER_HASH_SHA256=b66f9b53db72c5117408defe8a1e00515fe749e97ce1b0ae8bdaa6a5a43dd542\n\nRUN apk add --no-cache git \\\n        unzip \\\n        gzip  \\\n        bash \\\n        tini \\\n        openssh-client \\\n        rsync \\\n        patch \\\n        procps \\\n        coreutils \\\n        postgresql-client \\\n        openssh-sftp-server \\\n        findutils \\\n    && apk add --no-cache \"mariadb-client=10.2.24-r0\" --repository http://dl-cdn.alpinelinux.org/alpine/v3.8/main/ \\\n    && apk add --no-cache nodejs-current nodejs-npm yarn --force-overwrite --repository http://dl-cdn.alpinelinux.org/alpine/edge/main/ --repository http://dl-cdn.alpinelinux.org/alpine/edge/community/ \\\n    && ln -s /usr/lib/ssh/sftp-server /usr/local/bin/sftp-server \\\n    && rm -rf /var/cache/apk/* \\\n    && curl -f -L -o /usr/local/bin/composer https://github.com/composer/composer/releases/download/${COMPOSER_VERSION}/composer.phar \\\n    && echo \"$COMPOSER_HASH_SHA256 /usr/local/bin/composer\" | sha256sum \\\n    && chmod +x /usr/local/bin/composer \\\n    && php -d memory_limit=-1 /usr/local/bin/composer global require hirak/prestissimo \\\n    && mkdir -p /home/.ssh \\\n    && fix-permissions /home/\n\n# Adding Composer vendor bin path to $PATH.\nENV PATH=\"/home/.composer/vendor/bin:${PATH}\"\n# We not only use \"export $PATH\" as this could be overwritten again\n# like it happens in /etc/profile of alpine Images.\nCOPY 90-composer-path.sh /lagoon/entrypoints/\n\n# Remove warning about running as root in composer\nENV COMPOSER_ALLOW_SUPERUSER=1\n\n# Making sure the path is not only added during entrypoint, but also when creating a new shell\nRUN echo \"source /lagoon/entrypoints/90-composer-path.sh\" >> /home/.bashrc\n\n# Make sure shells are not running forever\nCOPY 80-shell-timeout.sh /lagoon/entrypoints/\nRUN echo \"source /lagoon/entrypoints/80-shell-timeout.sh\" >> /home/.bashrc\n\n# Make sure xdebug is automatically enabled also for cli scripts\nCOPY 61-php-xdebug-cli-env.sh /lagoon/entrypoints/\nRUN echo \"source /lagoon/entrypoints/61-php-xdebug-cli-env.sh\" >> /home/.bashrc\n\n# helper functions\nCOPY 55-cli-helpers.sh /lagoon/entrypoints/\nRUN echo \"source /lagoon/entrypoints/55-cli-helpers.sh\" >> /home/.bashrc\n\nRUN if [ ${PHP_VERSION%.*} == \"5.6\" ] || [ ${PHP_VERSION%.*} == \"7.0\" ] ; then \\\n  echo echo \\\"PHP ${PHP_VERSION} is end of life and should no longer be used. For more information, visit https://secure.php.net/eol.php\\\" \\> /dev/stderr >> /home/.bashrc ; fi\n\n# SSH Key and Agent Setup\nCOPY 05-ssh-key.sh /lagoon/entrypoints/\nCOPY 10-ssh-agent.sh /lagoon/entrypoints/\nCOPY ssh_config /etc/ssh/ssh_config\nCOPY id_ed25519_lagoon_cli.key /home/.ssh/lagoon_cli.key\nRUN chmod 400 /home/.ssh/lagoon_cli.key\nENV SSH_AUTH_SOCK=/tmp/ssh-agent\n\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/lagoon/entrypoints.sh\"]\nCMD [\"/bin/docker-sleep\"]\n"
}