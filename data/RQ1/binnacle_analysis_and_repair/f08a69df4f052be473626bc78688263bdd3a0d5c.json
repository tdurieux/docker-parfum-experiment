{
  "startTime": 1674641750181,
  "endTime": 1674641750397,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 118
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM vmware/photon2\n\nLABEL authors=\"renoufa@vmware.com,jaker@vmware.com\"\n\n# Set terminal. If we don't do this, weird readline things happen.\nENV TERM linux\nRUN echo \"/usr/bin/pwsh\" >> /etc/shells && \\\n    echo \"/bin/pwsh\" >> /etc/shells\n\n# Install PowerShell and unzip on Photon\nRUN tdnf install -y powershell unzip\n\n# Set working directory so stuff doesn't end up in /\nWORKDIR /root\n\n# Install PackageManagement and PowerShellGet\n# This is temporary until it is included in the PowerShell Core package for Photon\nRUN curl -f -O -J -L https://www.powershellgallery.com/api/v2/package/PackageManagement && \\\n    unzip PackageManagement -d /usr/lib/powershell/Modules/PackageManagement && \\\n    rm -f PackageManagement\n\nRUN curl -f -O -J -L https://www.powershellgallery.com/api/v2/package/PowerShellGet && \\\n    unzip PowerShellGet -d /usr/lib/powershell/Modules/PowerShellGet && \\\n    rm -f PowerShellGet\n\n# Workaround for https://github.com/vmware/photon/issues/752\nRUN mkdir -p /usr/lib/powershell/ref/ && ln -s /usr/lib/powershell/*.dll /usr/lib/powershell/ref/\n\n# Install VMware modules from PSGallery\nSHELL [ \"pwsh\", \"-command\" ]\nRUN Set-PSRepository -Name PSGallery -InstallationPolicy Trusted\nRUN Install-Module VMware.PowerCLI,PowerNSX,PowervRA\n\n# On by default to suppress nagging. Set to $false if you don't want to help us make PowerCLI better.\n# TODO: Investigate why we can't set this to either true or false.\n# RUN Set-PowerCLIConfiguration -ParticipateInCeip $true -Confirm:$false\n\n# Add the PowerCLI Example Scripts and Modules\n# using ZIP instead of a git pull to save at least 100MB\nSHELL [ \"bash\", \"-c\"]\nRUN curl -f -o ./PowerCLI-Example-Scripts.zip -J -L https://github.com/vmware/PowerCLI-Example-Scripts/archive/master.zip && \\\n    unzip PowerCLI-Example-Scripts.zip && \\\n    rm -f PowerCLI-Example-Scripts.zip && \\\n    mv ./PowerCLI-Example-Scripts-master ./PowerCLI-Example-Scripts && \\\n    mv ./PowerCLI-Example-Scripts/Modules/* /usr/lib/powershell/Modules/\n\n# Final clean up\nRUN tdnf erase -y unzip && \\\n    tdnf clean all\n\nCMD [\"/bin/pwsh\"]\n"
}