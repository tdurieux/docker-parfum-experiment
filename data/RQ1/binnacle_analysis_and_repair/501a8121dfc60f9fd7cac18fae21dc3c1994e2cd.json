{
  "startTime": 1674251182602,
  "endTime": 1674251182924,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 2,
        "columnEnd": 19
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 122,
        "columnEnd": 150
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedDockerfile": "ARG CUDA_BASE_VERSION\nARG UBUNTU_VERSION\nARG CUDNN_VERSION\n\n# use CUDA + OpenGL\nFROM nvidia/cudagl:${CUDA_BASE_VERSION}-devel-ubuntu${UBUNTU_VERSION}\nMAINTAINER Domhnall Boyle (domhnallboyle@gmail.com)\n\n# arguments from command line\nARG CUDA_BASE_VERSION\nARG UBUNTU_VERSION\nARG CUDNN_VERSION\nARG TENSORFLOW_VERSION\n\n# set environment variables\nENV CUDA_BASE_VERSION=${CUDA_BASE_VERSION}\nENV CUDNN_VERSION=${CUDNN_VERSION}\nENV TENSORFLOW_VERSION=${TENSORFLOW_VERSION}\n\n# install apt dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\tpython \\\n\tpython-pip \\\n\tgit \\\n\tvim \\\n\twget && rm -rf /var/lib/apt/lists/*;\n\n# install newest cmake version\nRUN apt-get purge cmake && cd ~ && wget https://github.com/Kitware/CMake/releases/download/v3.14.5/cmake-3.14.5.tar.gz && tar -xvf cmake-3.14.5.tar.gz && rm cmake-3.14.5.tar.gz\nRUN cd ~/cmake-3.14.5 && ./bootstrap && make && make install\n\n# setting up cudnn\nRUN apt-get install -y --no-install-recommends \\\n\tlibcudnn7=$(echo $CUDNN_VERSION)-1+cuda$(echo $CUDA_BASE_VERSION) \\\n\tlibcudnn7-dev=$(echo $CUDNN_VERSION)-1+cuda$(echo $CUDA_BASE_VERSION) && rm -rf /var/lib/apt/lists/*;\nRUN apt-mark hold libcudnn7 && rm -rf /var/lib/apt/lists/*\n\n# install python dependencies\nRUN pip install --no-cache-dir tensorflow-gpu==$(echo $TENSORFLOW_VERSION)\n\n# install dirt\nENV CUDAFLAGS='-DNDEBUG=1'\nRUN cd ~ && git clone https://github.com/pmh47/dirt.git && \\\n  pip install --no-cache-dir dirt/\n\n# run dirt test command\nRUN python ~/dirt/tests/square_test.py\n"
}