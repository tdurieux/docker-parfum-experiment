{
  "startTime": 1674234088828,
  "endTime": 1674234088949,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 15,
        "columnStart": 20,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 15,
        "columnStart": 20,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedDockerfile": "from ubuntu:latest\n\nWORKDIR /app\n\nRUN apt-get update; apt-get install --no-install-recommends -y \\\n  build-essential \\\n  cmake \\\n  git-core \\\n  libboost-all-dev \\\n  libglew-dev \\\n  liblua5.1-0-dev \\\n  libopenal-dev \\\n  libphysfs-dev \\\n  libssl-dev \\\n  libvorbis-dev \\\n  zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y \\\n  libncurses5-dev \\\n  mercurial; rm -rf /var/lib/apt/lists/*; \\\n  hg clone -r stable-2.0 http://hg.icculus.org/icculus/physfs/; \\\n    cd physfs; \\\n    mkdir build && cd build && cmake .. && make && make install; \\\n    mv /usr/local/lib/libphysfs.a /usr/lib/x86_64-linux-gnu/.\n\nADD . /app\n\n# Build application\nRUN mkdir -p build && cd build && cmake .. && make -j$(grep -c ^process /proc/cpuinfo);\n\nCMD cd build; ./otclient\n"
}