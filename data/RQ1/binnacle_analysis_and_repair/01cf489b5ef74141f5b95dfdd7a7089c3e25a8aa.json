{
  "startTime": 1674242153754,
  "endTime": 1674242154076,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 86,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 66,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-devel-ubuntu16.04\n\nMAINTAINER Chenglong Wu <wuchenglong15@gmail.com>\n\n# Install some dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\tbc \\\n\tbuild-essential \\\n\tcmake \\\n\tcurl \\\n\tg++ \\\n\tnet-tools \\\n\tinetutils-ping \\\n\tnginx \\\n\twget \\\n\tcurl \\\n\tgfortran \\\n\tgit \\\n\tlibffi-dev \\\n\tlibfreetype6-dev \\\n\tlibhdf5-dev \\\n\tlibjpeg-dev \\\n\tliblcms2-dev \\\n\tlibopenblas-dev \\\n\tliblapack-dev \\\n\tlibpng12-dev \\\n\tlibssl-dev \\\n\tlibtiff5-dev \\\n\tlibwebp-dev \\\n\tlibzmq3-dev \\\n\tnano \\\n\tpkg-config \\\n\tsoftware-properties-common \\\n\tunzip \\\n\tvim \\\n\twget \\\n\tzlib1g-dev \\\n\tqt5-default \\\n\tlibvtk6-dev \\\n\tzlib1g-dev \\\n\tlibjpeg-dev \\\n\tlibwebp-dev \\\n\tlibpng-dev \\\n\tlibtiff5-dev \\\n\tlibjasper-dev \\\n\tlibopenexr-dev \\\n\tlibgdal-dev \\\n\tlibdc1394-22-dev \\\n\tlibavcodec-dev \\\n\tlibavformat-dev \\\n\tlibswscale-dev \\\n\tlibtheora-dev \\\n\tlibvorbis-dev \\\n\tlibxvidcore-dev \\\n\tlibx264-dev \\\n\tyasm \\\n\tlibopencore-amrnb-dev \\\n\tlibopencore-amrwb-dev \\\n\tlibv4l-dev \\\n\tlibxine2-dev \\\n\tlibtbb-dev \\\n\tlibeigen3-dev \\\n\topenssh-server \\\n\tant \\\n\ttmux \\\n\tdefault-jdk \\\n\tdoxygen \\\n\t&& \\\n    apt-get clean && \\\n    apt-get autoremove && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    # Link BLAS library to use OpenBLAS using the alternatives mechanism (https://www.scipy.org/scipylib/building/linux.html#debian-ubuntu)\n    update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n# Install Anaconda3\nRUN curl -f -o /tmp/anaconda.sh https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-5.2.0-Linux-x86_64.sh && \\\n    chmod +x /tmp/anaconda.sh && \\\n    bash /tmp/anaconda.sh -b -p ~/anaconda3 && \\\n    rm /tmp/anaconda.sh && \\\n    echo 'export PATH=\"/root/anaconda3/bin:$PATH\"' >> ~/.bashrc && \\\n    echo 'export LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib64\"' >> ~/.bashrc && \\\n    . ~/.bashrc && \\\n    conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free && \\\n    conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main && \\\n    conda config --set show_channel_urls yes && \\\n\n    # pip install tensorflow-gpu:lastest, torch and others\n    pip install --no-cache-dir shapely \\\n\tmsgpack \\\n\th5py==2.8.0 \\\n\tpypng \\\n\tsklearn \\\n\teasydict \\\n\timage \\\n        opencv-python==3.4.5.20 \\\n\t&& \\\n    echo 'export PATH=\"/root/anaconda3/bin:$PATH\"' >> /etc/profile && \\\n    echo 'export LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib64\"' >> /etc/profile && \\\n    . /etc/profile && \\\n    conda install -y tensorflow-gpu==1.7.0 cudatoolkit==8.0 cudnn==7.0.5 && \\\n    conda clean --all && \\\n    rm -r ~/.cache/pip/*\n"
}