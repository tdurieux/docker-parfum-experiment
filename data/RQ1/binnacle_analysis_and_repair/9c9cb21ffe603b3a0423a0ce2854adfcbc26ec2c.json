{
  "startTime": 1674246684869,
  "endTime": 1674246685187,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 6,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 6,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 6,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:9.1-cudnn7-devel-ubuntu16.04\n\nENV DEBIAN_FRONTEND noninteractive\nARG GITHUB_ACCOUNT=\"singnet\"\nARG GITHUB_BRANCH=\"master\"\nARG GITHUB_REPO=\"nlp-services\"\nARG SNETD_VERSION=\"v0.1.8\"\n\nENV SERVICE_FOLDER=\"text-summarization\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y locales software-properties-common git && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository -y ppa:deadsnakes/ppa && \\\n      apt-get update && \\\n      apt-get upgrade -y && \\\n      apt-get install --no-install-recommends -y python3.6 python3.6-dev build-essential cmake libgtk2.0-dev python3.6-tk && \\\n      curl -f https://bootstrap.pypa.io/get-pip.py | python3.6 && rm -rf /var/lib/apt/lists/*;\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    dpkg-reconfigure --frontend=noninteractive locales && \\\n    update-locale LANG=en_US.UTF-8\nENV LANG en_US.UTF-8\n\nADD https://raw.githubusercontent.com/OpenNMT/OpenNMT-py/master/requirements.txt /tmp/opennmt_requirements.txt\nRUN apt-get install --no-install-recommends -y git default-jre && pip3.6 install -r /tmp/opennmt_requirements.txt && pip3.6 install numpy -I && rm -rf /var/lib/apt/lists/*;\n\nADD https://github.com/${GITHUB_ACCOUNT}/${GITHUB_REPO}/raw/${GITHUB_BRANCH}/${SERVICE_FOLDER}/requirements.txt /tmp/service_requirements.txt\nRUN pip3.6 install -r /tmp/service_requirements.txt\n\nADD https://api.github.com/repos/${GITHUB_ACCOUNT}/${GITHUB_REPO}/compare/${GITHUB_BRANCH}...HEAD /dev/null\nRUN git clone -b ${GITHUB_BRANCH} https://github.com/${GITHUB_ACCOUNT}/${GITHUB_REPO}.git && \\\n    cd ${GITHUB_REPO}/${SERVICE_FOLDER} && \\\n    python3.6 ../fetch_models.py && \\\n    git submodule update --init -- opennmt-py && \\\n    cd .. && mv ${SERVICE_FOLDER}/ /${SERVICE_FOLDER} && \\\n    rm -rf /${GITHUB_REPO}\n\nADD https://github.com/singnet/snet-daemon/releases/download/${SNETD_VERSION}/snet-daemon-${SNETD_VERSION}-linux-amd64.tar.gz /tmp/snet-daemon-${SNETD_VERSION}-linux-amd64.tar.gz\nRUN cd /tmp && \\\n    tar -xvf snet-daemon-${SNETD_VERSION}-linux-amd64.tar.gz && \\\n    mv snet-daemon-${SNETD_VERSION}-linux-amd64/snetd /usr/bin/snetd && \\\n    rm -rf snet-daemon-${SNETD_VERSION}-linux-amd64* && rm snet-daemon-${SNETD_VERSION}-linux-amd64.tar.gz\n\nWORKDIR /${SERVICE_FOLDER}\nRUN bash buildproto.sh"
}