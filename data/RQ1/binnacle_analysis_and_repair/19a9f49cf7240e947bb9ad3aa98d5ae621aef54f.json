{
  "startTime": 1674240591703,
  "endTime": 1674240592117,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 22,
        "columnEnd": 31
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 2,
        "columnEnd": 97
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 2,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 2,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 2,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 2,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# VERSION 1.0\n# AUTHOR:         Jerome Guibert <jguibert@gmail.com>\n# DESCRIPTION:    Debian Stable image based on debian:jessie\n# TO_BUILD:       docker build --rm -t airdock/base .\n# SOURCE:         https://github.com/airdock/docker-base\n\n# Pull base image.\nFROM debian:jessie\nMAINTAINER Jerome Guibert <jguibert@gmail.com>\n\nUSER root\n\n# Never prompts the user for choices on installation/configuration of packages\n# No dialog on apt-get update\n# Work around initramfs-tools running on kernel 'upgrade': <http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=594189>\n# Define en_US.\n\n\nENV DEBIAN_FRONTEND=noninteractive \\\n    TERM=linux \\\n    INITRD=No \\\n    LANGUAGE=en_US.UTF-8 \\\n    LANG=en_US.UTF-8  \\\n    LC_ALL=en_US.UTF-8 \\\n    LC_CTYPE=en_US.UTF-8 \\\n    LC_MESSAGES=en_US.UTF-8 \\\n    LC_ALL=en_US.UTF-8 \\\n    GOSU_VERSION=1.9 \\\n    TINI_VERSION=v0.13.2\n\n\n#add root asset (aliases and fix user id)\nADD asset/* /root/\n\n\n# Install curl, locales, apt-utils, gosu and tini\n# create en_US.UTF-8\n# update distribution package\n# add few common alias to root user\n# add utilities (create user, post install script)\n# create airdock user list\nRUN set -x && \\\n  apt-get update -qq && \\\n  apt-get install --no-install-recommends -y apt-utils curl locales && \\\n  apt-get install -y --no-install-recommends ca-certificates wget && \\\n  sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen && locale-gen && \\\n  update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 && \\\n  apt-get update -y && \\\n  dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\" && \\\n  wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" && \\\n  wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" && \\\n  export GNUPGHOME=\"$(mktemp -d)\" && \\\n  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && \\\n  gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu && \\\n  rm -r /usr/local/bin/gosu.asc && \\\n  chmod +x /usr/local/bin/gosu && \\\n  gosu nobody true && \\\n  wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini\" && \\\n  wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc\" && \\\n  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 && \\\n  gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini && \\\n  rm -r \"$GNUPGHOME\" /usr/local/bin/tini.asc && \\\n  chmod +x /usr/local/bin/tini && \\\n  apt-get purge -y --auto-remove ca-certificates wget && \\\n  mv /root/aliases /root/.aliases && \\\n  echo \"source ~/.aliases\" >> /root/.bashrc && \\\n  /root/create-user redis 4201 redis 4201 && \\\n  /root/create-user elasticsearch 4202 elasticsearch 4202 && \\\n  /root/create-user mongodb 4203 mongodb 4203 && \\\n  /root/create-user rabbitmq 4204 rabbitmq 4204 && \\\n  /root/create-user java 4205 java 4205 && \\\n  /root/create-user py 4206 py 4206 && \\\n  /root/create-user node 4207 node 4207 && \\\n  /root/create-user docker 4242 docker 4242 && \\\n  /root/post-install && rm -rf -d && rm -rf /var/lib/apt/lists/*;\n\n# Define default workdir\nWORKDIR /root\n\n# Define default command.\nCMD [ \"/bin/bash\", \"-l\"]\n"
}