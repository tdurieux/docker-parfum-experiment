{
  "startTime": 1674243752428,
  "endTime": 1674243752615,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 2,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 2,
        "columnEnd": 23
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 2,
        "columnEnd": 58
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 2,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Image for building Spark releases. Based on Ubuntu 16.04.\n#\n# Includes:\n# * Java 8\n# * Ivy\n# * Python/PyPandoc (2.7.12/3.5.2)\n# * R-base/R-base-dev (3.3.2+)\n# * Ruby 2.3 build utilities\n\nFROM ubuntu:16.04\n\n# These arguments are just for reuse and not really meant to be customized.\nARG APT_INSTALL=\"apt-get install --no-install-recommends -y\"\n\nARG BASE_PIP_PKGS=\"setuptools wheel virtualenv\"\nARG PIP_PKGS=\"pyopenssl pypandoc numpy pygments sphinx\"\n\n# Install extra needed repos and refresh.\n# - CRAN repo\n# - Ruby repo (for doc generation)\n#\n# This is all in a single \"RUN\" command so that if anything changes, \"apt update\" is run to fetch\n# the most current package versions (instead of potentially using old versions cached by docker).\nRUN echo 'deb http://cran.cnr.Berkeley.edu/bin/linux/ubuntu xenial/' >> /etc/apt/sources.list && \\\n  gpg --batch --keyserver keyserver.ubuntu.com --recv-key E084DAB9 && \\\n  gpg --batch -a --export E084DAB9 | apt-key add - && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  apt-get clean && \\\n  apt-get update && \\\n  $APT_INSTALL software-properties-common && \\\n  apt-add-repository -y ppa:brightbox/ruby-ng && \\\n  apt-get update && \\\n  # Install openjdk 8.\n  $APT_INSTALL openjdk-8-jdk && \\\n  update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java && \\\n  # Install build / source control tools\n  $APT_INSTALL curl wget git maven ivy subversion make gcc lsof libffi-dev \\\n    pandoc pandoc-citeproc libssl-dev libcurl4-openssl-dev libxml2-dev && \\\n  ln -s -T /usr/share/java/ivy.jar /usr/share/ant/lib/ivy.jar && \\\n  curl -f -sL https://deb.nodesource.com/setup_4.x | bash && \\\n  $APT_INSTALL nodejs && \\\n  # Install needed python packages. Use pip for installing packages (for consistency).\n  $APT_INSTALL libpython2.7-dev libpython3-dev python-pip python3-pip && \\\n  pip install --no-cache-dir $BASE_PIP_PKGS && \\\n  pip install --no-cache-dir $PIP_PKGS && \\\n  cd && \\\n  virtualenv -p python3 p35 && \\\n  . p35/bin/activate && \\\n  pip install --no-cache-dir $BASE_PIP_PKGS && \\\n  pip install --no-cache-dir $PIP_PKGS && \\\n  # Install R packages and dependencies used when building.\n  # R depends on pandoc*, libssl (which are installed above).\n  $APT_INSTALL r-base r-base-dev && \\\n  $APT_INSTALL texlive-latex-base texlive texlive-fonts-extra texinfo qpdf && \\\n  Rscript -e \"install.packages(c('curl', 'xml2', 'httr', 'devtools', 'testthat', 'knitr', 'rmarkdown', 'roxygen2', 'e1071', 'survival'), repos='http://cran.us.r-project.org/')\" && \\\n  Rscript -e \"devtools::install_github('jimhester/lintr')\" && \\\n  # Install tools needed to build the documentation.\n  $APT_INSTALL ruby2.3 ruby2.3-dev mkdocs && \\\n  gem install jekyll --no-rdoc --no-ri && \\\n  gem install jekyll-redirect-from && \\\n  gem install pygments.rb\n\nWORKDIR /opt/spark-rm/output\n\nARG UID\nRUN useradd -m -s /bin/bash -p spark-rm -u $UID spark-rm\nUSER spark-rm:spark-rm\n\nENTRYPOINT [ \"/opt/spark-rm/do-release.sh\" ]\n"
}