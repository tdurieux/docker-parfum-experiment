{
  "startTime": 1674234362993,
  "endTime": 1674234363790,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 81,
        "columnEnd": 120
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 62,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 62,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 62,
        "columnEnd": 90
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 101
      }
    }
  ],
  "repairedDockerfile": "FROM nginx\n\nMAINTAINER Thomas Wollmann <thomas.wollmann@bioquant.uni-heidelberg.de>\n\nRUN apt-get update && apt-get install --no-install-recommends -y wget bzip2 && rm -rf /var/lib/apt/lists/*;\n\nENV PV_VERSION=5.4.0 \\\n    PV_VERSION_MAJOR=5.4 \\\n    VIZ_VERSION=2.1.4 \\\n    MESA_VERSION=13.0.3\n\nRUN apt-get -q update && \\\n    apt-get -q -y upgrade && \\\n    apt-get -q --no-install-recommends -y install build-essential software-properties-common && \\\n    apt-get -q --no-install-recommends -y install curl wget git python python-dev && \\\n    curl -f -s https://bootstrap.pypa.io/get-pip.py | python2 && rm -rf /var/lib/apt/lists/*;\n\n# Install cmake\nENV CMAKE_VERSION=3.5.2\nRUN wget https://www.cmake.org/files/v3.5/cmake-$CMAKE_VERSION.tar.gz && \\\n    tar -xvzf cmake-$CMAKE_VERSION.tar.gz && \\\n    cd cmake-$CMAKE_VERSION/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j4 && \\\n    make install && \\\n    cd .. && \\\n    rm -R cmake-$CMAKE_VERSION && \\\n    rm -R cmake-$CMAKE_VERSION.tar.gz\n\n# Install LLVM\nENV LLVM_VERSION=3.9.1\nRUN apt-get install --no-install-recommends -y pkg-config libpthread-stubs0-dev libomxil-bellagio-dev && \\\n    mkdir -p /root/build && cd /root/build && \\\n    wget https://releases.llvm.org/$LLVM_VERSION/llvm-$LLVM_VERSION.src.tar.xz && tar -xvJf llvm-$LLVM_VERSION.src.tar.xz && \\\n    mkdir -p /root/build/llvm && cd /root/build/llvm && \\\n    cmake                                           \\\n      -DCMAKE_BUILD_TYPE=Release                    \\\n      -DLLVM_BUILD_LLVM_DYLIB=ON                    \\\n      -DLLVM_ENABLE_RTTI=ON                         \\\n      -DLLVM_INSTALL_UTILS=ON                       \\\n      -DLLVM_TARGETS_TO_BUILD:STRING=X86            \\\n       ../llvm-$LLVM_VERSION.src && \\\n    make -j4 && \\\n    make install && \\\n    cd / && rm -rf /root/build && rm llvm-$LLVM_VERSION.src.tar.xz && rm -rf /var/lib/apt/lists/*;\n\n# Install OSMesa\nRUN wget ftp://ftp.freedesktop.org/pub/mesa/older-versions/13.x/$MESA_VERSION/mesa-$MESA_VERSION.tar.gz && \\\n    tar -xvzf mesa-$MESA_VERSION.tar.gz && \\\n    cd mesa-$MESA_VERSION/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n      --enable-opengl --disable-gles1 --disable-gles2 \\\n      --disable-va --disable-xvmc --disable-vdpau \\\n      --enable-shared-glapi \\\n      --disable-texture-float \\\n      --enable-gallium-llvm --enable-llvm-shared-libs \\\n      --with-gallium-drivers=swrast,swr \\\n      --disable-dri --with-dri-drivers= \\\n      --disable-egl --with-egl-platforms= --disable-gbm \\\n      --disable-glx \\\n      --disable-osmesa --enable-gallium-osmesa && \\\n    make -j4 && \\\n    make install && \\\n    cd .. && \\\n    rm -R mesa-$MESA_VERSION && \\\n    rm -R mesa-$MESA_VERSION.tar.gz\n\nRUN mkdir -p /root/build && cd /root/build && \\\n    apt-get -q update && \\\n    git clone git://paraview.org/ParaView.git pv-git && cd pv-git && \\\n    git checkout v$PV_VERSION && git submodule init && git submodule update && \\\n\n    mkdir -p /root/build/pv-bin && cd /root/build/pv-bin && \\\n    cmake \\\n        -D CMAKE_BUILD_TYPE=Release \\\n        -D BUILD_TESTING:BOOL=OFF \\\n        -D PARAVIEW_BUILD_QT_GUI:BOOL=OFF \\\n        -D PARAVIEW_ENABLE_PYTHON:BOOL=ON \\\n        -D PARAVIEW_INSTALL_DEVELOPMENT_FILES:BOOL=OFF \\\n        -D OPENGL_INCLUDE_DIR=/usr/include \\\n        -D OPENGL_gl_LIBRARY=\"\" \\\n        -D VTK_USE_X:BOOL=OFF \\\n        -D VTK_OPENGL_HAS_OSMESA:BOOL=ON \\\n        -D OSMESA_INCLUDE_DIR=/usr/include \\\n        -D OSMESA_LIBRARY=/usr/local/lib/libOSMesa.so \\\n        ../pv-git && \\\n    make -j4 && make install && \\\n    cd / && rm -rf /root/build\n\nRUN curl -f -sL https://deb.nodesource.com/setup_6.x | bash - && apt-get -q --no-install-recommends -y install nodejs && \\\n    npm install -g pvw-visualizer@$VIZ_VERSION && \\\n    mkdir /usr/local/opt/ && \\\n    mkdir /Applications && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nADD nginx.conf /etc/nginx/nginx.conf\n\nRUN mkdir /import\nRUN mkdir /export\nWORKDIR /import\n\nENV DEBUG=false \\\n    GALAXY_WEB_PORT=10000 \\\n    NOTEBOOK_PASSWORD=none \\\n    CORS_ORIGIN=none \\\n    DOCKER_PORT=none \\\n    API_KEY=none \\\n    HISTORY_ID=none \\\n    REMOTE_HOST=none \\\n    GALAXY_URL=none\n\nEXPOSE 8777\n\nADD startup.sh /\nRUN chmod +x /startup.sh\nCMD /startup.sh\n"
}