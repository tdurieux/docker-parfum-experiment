{
  "startTime": 1674248116110,
  "endTime": 1674248116486,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 83,
        "lineEnd": 129,
        "columnStart": 2,
        "columnEnd": 20
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 2,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 2,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8.15.1-alpine\n\nARG GDAL_VERSION=v2.4.0\nARG LIBKML_VERSION=1.3.0\n\nARG GDAL_DEPS_DEV='\\\n    # common certificates for https\n    libressl ca-certificates \\\n    # base compile\n    build-base cmake musl-dev linux-headers tar \\\n    # kml deps see https://github.com/boundlessgeo/alpine-pkg-b7s/blob/master/libkml/APKBUILD\n    cmake \\\n    boost-dev \\\n    expat-dev \\\n    minizip-dev \\\n    uriparser-dev \\\n    zlib-dev \\\n    # gdal deps see https://github.com/boundlessgeo/alpine-pkg-b7s/blob/master/gdal/APKBUILD\n    linux-headers \\\n    curl-dev \\\n    expat-dev \\\n    geos-dev \\\n    proj4-dev \\\n    libxml2-dev \\\n    postgresql-dev \\\n    libxslt-dev \\\n    sqlite-dev \\\n    tiff-dev \\\n    zlib-dev'\n\nARG GDAL_DEPS_RUN='\\\n    # kml deps\n    expat \\\n    minizip \\\n    uriparser \\\n    zlib \\\n    # gdal deps\n    curl \\\n    expat \\\n    geos \\\n    libpq \\\n    libxml2 \\\n    libxslt \\\n    sqlite-libs \\\n    tiff \\\n    zlib \\\n    proj4'\n\n#\n# Modified from https://github.com/petr-k/gdal-python-alpine\n#\nRUN \\\n  echo \"http://nl.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories && \\\n  apk add --no-cache --virtual .build_dep $GDAL_DEPS_DEV && \\\n  apk add --no-cache $GDAL_DEPS_RUN && \\\n  #\n  # Build\n  #\n  # issue with update-ca-certificates failing:\n  # https://github.com/gliderlabs/docker-alpine/issues/30\n  update-ca-certificates && \\\n  mkdir /build && \\\n  #\n  # Libkml\n  #\n  cd /build && \\\n  wget -O libkml.tar.gz \"https://github.com/libkml/libkml/archive/${LIBKML_VERSION}.tar.gz\" && \\\n  tar --extract --file libkml.tar.gz && \\\n  cd libkml-${LIBKML_VERSION} && \\\n  mkdir build && \\\n  cd build && \\\n  cmake .. && \\\n  make && \\\n  make install && \\\n  #\n  # gdal\n  # see option in configure (https://raw.githubusercontent.com/OSGeo/gdal/master/gdal/configure)\n  #\n  cd /build && \\\n  wget -O gdal.tar.gz \"https://github.com/OSGeo/gdal/archive/${GDAL_VERSION}.tar.gz\" && \\\n  tar --extract --file gdal.tar.gz --strip-components 1 && \\\n  cd gdal && \\\n  CXXFLAGS=\"-D__MUSL__ -Os\" CFLAGS=\"-march=native -mtune=native -Os\" LDFLAGS=\"-s\" && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n    --with-libkml=yes \\\n    --with-geos=yes \\\n    --with-proj=yes \\\n    --with-threads=yes \\\n    --with-sqlite3=yes \\\n    --with-geotiff=yes \\\n    --with-libtiff=yes \\\n    --with-libz=yes \\\n    --without-bsb \\\n    --without-ingres \\\n    --without-pcidsk \\\n    --without-cfitsio \\\n    --without-cryptopp \\\n    --without-curl \\\n    --without-ecw \\\n    --without-fme \\\n    --without-freexl \\\n    --without-gif \\\n    --without-gnm \\\n    --without-grass \\\n    --without-grib \\\n    --without-hdf4 \\\n    --without-hdf5 \\\n    --without-idb \\\n    --without-jasper \\\n    --without-jp2mrsid \\\n    --without-jpeg \\\n    --without-kakadu \\\n    --without-libgrass \\\n    --without-libtool \\\n    --without-mrf \\\n    --without-mrsid \\\n    --without-mysql \\\n    --without-netcdf \\\n    --without-odbc \\\n    --without-ogdi \\\n    --without-openjpeg \\\n    --without-pcraster \\\n    --without-pcre \\\n    --without-perl \\\n    --without-png \\\n    --without-python \\\n    --without-qhull \\\n    --without-sde \\\n    --without-webp \\\n    --without-xerces \\\n  && make && make install && \\\n  #\n  # cleanup\n  #\n  apk del .build_dep && \\\n  cd / && \\\n  rm -rf /build && \\\n  rm -rf /var/cache/apk/* && rm libkml.tar.gz\n\n#\n# Install node packages, copy files\n#\nWORKDIR /build\nCOPY package.json package-lock.json ./\n\nRUN npm install --production \\\n    && mv node_modules /node_modules && npm cache clean --force;\n\nWORKDIR /api\nCOPY . .\n\nVOLUME /shared\nEXPOSE 3030\n\nCMD [\"node\",\"index.js\"]\n\n"
}