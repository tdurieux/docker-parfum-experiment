{
  "startTime": 1674239883372,
  "endTime": 1674239883474,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 33
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile\nFROM ruby:2.6-alpine\n\nENV PORT 3000\nENV PATH /node_modules/.bin:$PATH\n\nRUN apk update \\\n  && apk add --no-cache \\\n    nodejs \\\n    curl \\\n    npm \\\n    build-base \\\n    postgresql-dev \\\n    tzdata \\\n  && npm install --global yarn \\\n  && addgroup --system ifme \\\n  && adduser \\\n    -G ifme \\\n    -h /home/ifme \\\n    -S \\\n     ifme \\\n  && mkdir -p \"/app\" \"/node_modules\" \\\n  && chown ifme:ifme \"/app\" \"/node_modules\" \\\n  # install node modules outside of /app\n  && echo \"--install.modules-folder /node_modules\" > /.yarnrc && npm cache clean --force;\n\nWORKDIR /app\nUSER ifme:ifme\n\n# add gems and npm packages before our code, so Docker can cache them\n# see http://ilikestuffblog.com/2014/01/06/\nCOPY --chown=ifme:ifme Gemfile Gemfile.lock package.json ./\nCOPY --chown=ifme:ifme client/package.json client/yarn.lock ./client/\nRUN bundle install && npm install && npm cache clean --force;\n\nCOPY --chown=ifme:ifme  . ./\nRUN bundle exec rake assets:precompile\n\nCMD [\"foreman\", \"start\", \"-f\", \"Procfile.dev\"]\nEXPOSE ${PORT}\n"
}