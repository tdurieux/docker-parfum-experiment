{
  "startTime": 1674252192297,
  "endTime": 1674252192647,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 5,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 5,
        "columnEnd": 21
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedDockerfile": "FROM jenkins/jenkins:latest\n\nUSER root\n\nRUN apt-get update \\\n  && apt-get -y upgrade\n\nRUN apt-get -y --no-install-recommends install \\\n  build-essential \\\n  software-properties-common \\\n  git vim \\\n  python \\\n  python-dev \\\n  python3 \\\n  python3-dev \\\n  python-setuptools \\\n  python-virtualenv \\\n  python-pip \\\n  net-tools \\\n  gcc \\\n  vim \\\n  openssl \\\n  libssl-dev \\\n  make \\\n  cmake \\\n  autoconf \\\n  mono-runtime \\\n  mono-devel \\\n  libcurl4-openssl-dev \\\n  libffi6 \\\n  libffi-dev \\\n  ruby \\\n  curl \\\n  php-cli \\\n  php-mbstring \\\n  unzip && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -s https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n  # https://jeremylong.github.io/DependencyCheck/analyzers/bundle-audit.html\n  && gem install bundler-audit \\\n  && bundle-audit update\n\n# Install ansible in the system's pips for jenkins\n# and in the virtual env for python3\nRUN mkdir -p -m 777 /opt/owasp \\\n  && pip install --no-cache-dir --upgrade pip \\\n  && pip install --no-cache-dir --upgrade setuptools \\\n  && pip install --no-cache-dir --upgrade cryptography >=2.1.4 \\\n  && pip install --no-cache-dir --upgrade ansible \\\n  && virtualenv -p python3 /opt/owasp/venv \\\n  && . /opt/owasp/venv/bin/activate \\\n  && pip install --no-cache-dir --upgrade pip \\\n  && pip install --no-cache-dir --upgrade setuptools \\\n  && pip install --no-cache-dir --upgrade cryptography >=2.1.4 \\\n  && pip install --no-cache-dir --upgrade ansible \\\n  && pip list\n\nENV PROJECT_NAME owasp\nENV LOG_DIR /opt/logs\nENV CONFIG_DIR /opt/logs\nENV DATA_DIR /opt/logs\nENV PATH=\"/opt/tools/apache-maven/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/usr/bin:/sbin:/bin\"\nENV JAVA_OPTS=\"-Djenkins.install.runSetupWizard=false\"\n\nRUN mkdir -p -m 777 /opt/owasp /opt/shared /opt/logs /opt/data /opt/configs /opt/nvd /opt/depchecker /opt/jenkins /opt/certs /opt/reports /opt/scanthisdir\n\nRUN /bin/echo \"Installing Plugins\"\n\nCOPY ./docker/data/jenkins/ref/plugins.txt /usr/share/jenkins/ref/plugins.txt\nRUN /usr/local/bin/install-plugins.sh < /usr/share/jenkins/ref/plugins.txt\n\nWORKDIR /opt/owasp/ansible\n\nCOPY ./ansible /opt/owasp/ansible\n\nRUN chmod 777 /opt/owasp/ansible \\\n  && ls -l /opt/owasp/ansible\n\nRUN /bin/echo \"Starting OWASP build\"\n\n# default user is jenkins with home dir in /var/jenkins_home\nRUN /bin/echo 'PATH=\"/opt/tools/apache-maven/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/usr/bin:/sbin:/bin\"' >> /var/jenkins_home/.bashrc\n\nRUN /bin/echo \"Installing Maven using Ansible\" \\\n  && . /opt/owasp/venv/bin/activate \\\n  && cd /opt/owasp/ansible \\\n  && ansible-playbook -i inventories/inventory_dev install-maven.yml -e install_maven=1 -vvvv\n\nRUN /bin/echo \"Installing NIST National Vulnerability Database and NVD Dependency Checker using Ansible and Maven\" \\\n  && . /opt/owasp/venv/bin/activate \\\n  && cd /opt/owasp/ansible \\\n  && ansible-playbook -i inventories/inventory_dev install-tools.yml -e clone_depchecker=1 -e clone_nvd_dl=1 -vvvv\n\nRUN /bin/echo \"Downloading NIST National Vulnerability Database file\" \\\n  && . /opt/owasp/venv/bin/activate \\\n  && cd /opt/owasp/ansible \\\n  && ansible-playbook -i inventories/inventory_dev download-nvd.yml -vvvv\n\nRUN /bin/echo \"Generating National Vulnerability H2 Database for increasing OWASP analysis performance\" \\\n  && . /opt/owasp/venv/bin/activate \\\n  && cd /opt/owasp/ansible \\\n  && ansible-playbook -i inventories/inventory_dev run-owasp-analysis.yml -e rebuild_nvd=1 -e owasp_scan_dir=\"/opt/owasp/venv/bin\" -vvvv\n\nRUN /bin/echo \"Installing ZAP community scripts in: /opt/zapscripts\" \\\n  && git clone https://github.com/zaproxy/community-scripts.git /opt/zapscripts\n\nRUN /bin/echo \"Installing Certs\"\n\nCOPY ./docker/bashrc /root/.bashrc\nADD docker/certs /opt/certs\n\nRUN /bin/echo \"Installing Python Utilities\"\n\nCOPY owasp-jenkins-latest.tgz /opt/owasp\n\nRUN cd /opt/owasp \\\n  && tar xvf owasp-jenkins-latest.tgz \\\n  && ls /opt/owasp && rm owasp-jenkins-latest.tgz\n\nRUN cd /opt/owasp \\\n  && . /opt/owasp/venv/bin/activate \\\n  && pip install --no-cache-dir -e . \\\n  && pip list\n\nENTRYPOINT /opt/owasp/owasp_jenkins/scripts/start-container.sh\n"
}