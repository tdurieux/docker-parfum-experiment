{
  "startTime": 1674249488972,
  "endTime": 1674249489217,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 190
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Security Onion Elastalert Docker image running on Centos7.\n\nFROM centos:7\n\nLABEL maintainer \"Security Onion Solutions, LLC\"\n\n# Create a common centos update layer\nRUN yum update -y && \\\n    yum clean all\n\n# Set this environment variable to true to set timezone on container start.\nENV SET_CONTAINER_TIMEZONE false\n\n# Default container timezone as found under the directory /usr/share/zoneinfo/.\nENV CONTAINER_TIMEZONE UTC\n\n# URL from which to download Elastalert.\nENV ELASTALERT_URL https://github.com/Yelp/elastalert/archive/master.zip\n\n# Directory holding configuration for Elastalert and Supervisor.\nENV CONFIG_DIR /etc/elastalert/conf\n\n# Elastalert rules directory.\nENV RULES_DIRECTORY /etc/elastalert/rules\n\n# Elastalert configuration file path in configuration directory.\nENV ELASTALERT_CONFIG ${CONFIG_DIR}/elastalert_config.yaml\n\n# Directory to which Elastalert and Supervisor logs are written.\nENV LOG_DIR /var/log/elastalert\n\n# Elastalert home directory name.\nENV ELASTALERT_DIRECTORY_NAME elastalert\n\n# Elastalert home directory full path.\nENV ELASTALERT_HOME /opt/${ELASTALERT_DIRECTORY_NAME}\n\n# Supervisor configuration file for Elastalert.\nENV ELASTALERT_SUPERVISOR_CONF ${CONFIG_DIR}/elastalert_supervisord.conf\n\n# Alias, DNS or IP of Elasticsearch host to be queried by Elastalert. Set in default Elasticsearch configuration file.\nENV ELASTICSEARCH_HOST elasticsearch\n\n# Port on above Elasticsearch host. Set in default Elasticsearch configuration file.\nENV ELASTICSEARCH_PORT 9200\n\n# Add ElastAlert user\nRUN groupadd --gid 933 elastalert && \\\n    adduser --uid 933 --gid 933 \\\n      --home-dir /usr/share/elastalert --no-create-home \\\n      elastalert\n\nWORKDIR /opt\n\n# Copy the script used to launch the Elastalert when a container is started.\nCOPY ./files/start-elastalert.sh /opt/\nCOPY ./files/elastalert_config.conf ${ELASTALERT_CONFIG}\nCOPY ./files/elastalert_supervisord.conf ${ELASTALERT_SUPERVISOR_CONF}\n\n# Install software required for Elastalert and NTP for time synchronization.\n#RUN yum install -y unzip wget ntp.x86_64 openssl-devel.x86_64 openssl.x86_64 libffi.x86_64 libffi-devel.x86_64 python-devel.x86_64 gcc.x86_64 compat-gcc-44.x86_64 libgcc.x86_64 tzdata.noarch; \\\n#    rm -rf /var/cache/yum/*; \\\nRUN yum update -y && \\\n    yum install -y unzip wget ntp.x86_64 openssl-devel.x86_64 openssl.x86_64 libffi.x86_64 libffi-devel.x86_64 python-devel.x86_64 gcc.x86_64 compat-gcc-44.x86_64 libgcc.x86_64 tzdata.noarch && \\\n    yum clean all; rm -rf /var/cache/yum \\\n\n# Install pip - required for installation of Elastalert.\n    wget https://bootstrap.pypa.io/get-pip.py; \\\n    python get-pip.py; \\\n    rm -rf get-pip.py; \\\n\n# Download and unpack Elastalert.\n    wget ${ELASTALERT_URL}; \\\n    unzip *.zip; \\\n    rm -rf *.zip; \\\n    mv e* ${ELASTALERT_DIRECTORY_NAME}\n\nWORKDIR ${ELASTALERT_HOME}\n\n# Install Elastalert.\nRUN python setup.py install; \\\n\n# Install Supervisor.\n    easy_install supervisor; \\\n\n# Make the start-script executable.\n    chmod +x /opt/start-elastalert.sh; \\\n\n# Create directories. The /var/empty directory is used by openntpd.\n    mkdir -p ${CONFIG_DIR}; \\\n    mkdir -p ${RULES_DIRECTORY}; \\\n    mkdir -p ${LOG_DIR}; \\\n    mkdir -p /var/empty; \\\n    mkdir -p /var/run/elastalert; \\\n\n# Define perms for ElastAlert\n    chown -R elastalert:elastalert ${CONFIG_DIR}; \\\n    chown -R elastalert:elastalert ${RULES_DIRECTORY}; \\\n    chown -R elastalert:elastalert ${LOG_DIR}; \\\n    chown -R elastalert:elastalert ${ELASTALERT_HOME}; \\\n    chown -R elastalert:elastalert /var/run/elastalert/; \\\n    chown elastalert:elastalert /opt/start-elastalert.sh; \\\n    chown elastalert:elastalert /usr/bin/supervisord; \\\n\n# Elastalert configuration:\n    # Set the rule directory in the Elastalert config file to external rules directory.\n    sed -i -e\"s|rules_folder: [[:print:]]*|rules_folder: ${RULES_DIRECTORY}|g\" ${ELASTALERT_CONFIG}; \\\n\n    # Set the Elasticsearch host that Elastalert is to query.\n    sed -i -e\"s|es_host: [[:print:]]*|es_host: ${ELASTICSEARCH_HOST}|g\" ${ELASTALERT_CONFIG}; \\\n\n    # Set the port used by Elasticsearch at the above address.\n    sed -i -e\"s|es_port: [0-9]*|es_port: ${ELASTICSEARCH_PORT}|g\" ${ELASTALERT_CONFIG}; \\\n\n# Elastalert Supervisor configuration:\n    # Configure Supervisor to run as ElastAlert user\n#    sed -i \"/\\[supervisord\\]/a user=elastalert\" ${ELASTALERT_SUPERVISOR_CONF}; \\\n#    sed -i \"/\\[program:elastalert\\]/a user=elastalert\" ${ELASTALERT_SUPERVISOR_CONF}; \\\n    \n    # Redirect Supervisor log output to a file in the designated logs directory.\n    sed -i -e\"s|logfile=.*log|logfile=${LOG_DIR}/elastalert_supervisord.log|g\" ${ELASTALERT_SUPERVISOR_CONF}; \\\n\n    # Redirect Supervisor stderr output to a file in the designated logs directory.\n    sed -i -e\"s|stderr_logfile=.*log|stderr_logfile=${LOG_DIR}/elastalert_stderr.log|g\" ${ELASTALERT_SUPERVISOR_CONF}; \\\n\n    # Modify the start-command.\n    sed -i -e\"s|python elastalert.py|python -m elastalert.elastalert --config ${ELASTALERT_CONFIG}|g\" ${ELASTALERT_SUPERVISOR_CONF}; \\\n\n# Copy the Elastalert configuration file to Elastalert home directory to be used when creating index first time an Elastalert container is launched.\n    cp ${ELASTALERT_CONFIG} ${ELASTALERT_HOME}/config.yaml; \\\n\n\n# Add Elastalert to Supervisord.\n    supervisord -c ${ELASTALERT_SUPERVISOR_CONF}\n\n# Define mount points.\n#VOLUME [ \"${CONFIG_DIR}\", \"${RULES_DIRECTORY}\", \"${LOG_DIR}\"]\n\n# Switch to ElastAlert user\nUSER elastalert\n\n# Launch Elastalert when a container is started.\nCMD [\"/opt/start-elastalert.sh\"]\n"
}