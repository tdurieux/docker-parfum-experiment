{
  "startTime": 1674242544069,
  "endTime": 1674242544160,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Docker image for cross-platform compilation\n#\n\n#\n# Build stage\n#\n\nFROM alpine:3.8 as build\n\nARG BINTRAY_USERNAME\nARG BINTRAY_API\n\nRUN apk add --no-cache openjdk8 python curl\n\nENV LANG       C.UTF-8\nENV JAVA_HOME  /usr/lib/jvm/java-1.8-openjdk\nENV PATH       $PATH:$JAVA_HOME/jre/bin:$JAVA_HOME/bin:/seed/bloop\n\nCOPY build.sh build.sbt BLOOP SEED COURSIER  /seed/\nCOPY project/  /seed/project/\nCOPY src/      /seed/src/\n\nWORKDIR /seed\n\nRUN curl -f -L https://github.com/scalacenter/bloop/releases/download/v$(cat BLOOP)/install.py | python - -d bloop\n\n# Pre-fetch bridges and their dependencies to speed up dependency resolution\n# later\nRUN blp-coursier fetch \\\n    ch.epfl.scala:bloop-js-bridge-0-6_2.12:$(cat BLOOP) \\\n    ch.epfl.scala:bloop-js-bridge-1-0_2.12:$(cat BLOOP) \\\n    ch.epfl.scala:bloop-native-bridge_2.12:$(cat BLOOP)\n\nRUN set -x && \\\n    ./build.sh && \\\n    BINTRAY_USER=$BINTRAY_USERNAME BINTRAY_PASS=$BINTRAY_API ./csbt --add-coursier=true \"; publishLocal; publish\"\n\nRUN blp-coursier bootstrap tindzk:seed_2.12:$(cat SEED) -f -o seed\n\n#\n# Run stage\n#\n\nFROM alpine:3.8\n\n# Python is needed for the Bloop front-end\n# Node.js is needed for running Scala.js programs\n# Clang, libc-dev, libunwind-dev and g++ are needed for linking Scala Native\n# programs\nRUN apk add --no-cache python openjdk8 nodejs clang libc-dev libunwind-dev g++\n\nENV LANG       C.UTF-8\nENV JAVA_HOME  /usr/lib/jvm/java-1.8-openjdk\nENV PATH       $PATH:$JAVA_HOME/jre/bin:$JAVA_HOME/bin\n\nCOPY --from=build /seed/seed              /usr/bin/\nCOPY --from=build /seed/bloop/            /usr/bin/\nCOPY --from=build /root/.ivy2/local/      /root/.ivy2/local/\nCOPY --from=build /root/.cache/coursier/  /root/.cache/coursier/\nCOPY etc/seed.toml                        /root/.config/seed.toml\n"
}