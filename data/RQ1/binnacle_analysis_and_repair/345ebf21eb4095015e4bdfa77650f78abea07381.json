{
  "startTime": 1674250570865,
  "endTime": 1674250571042,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 11,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedDockerfile": "# For use with Docker https://www.docker.io/gettingstarted/\n#\n# docker build -t $USER/opencog-precise-buildslave .\n# docker run -d -e BUILDSLAVE_NAME=$HOSTNAME -e BUILDSLAVE_PASSWD=foobar $USER/opencog-precise-buildslave\n\nFROM ubuntu:12.04\nMAINTAINER David Hart \"dhart@opencog.org\"\n\nRUN echo \"deb http://hk.archive.ubuntu.com/ubuntu precise main universe\" > /etc/apt/sources.list && \\\n    echo \"deb http://hk.archive.ubuntu.com/ubuntu precise-updates main universe\" >> /etc/apt/sources.list && \\\n    DEBIAN_FRONTEND=noninteractive apt-get update --assume-yes && \\\n    DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install \\\n                                                   python-software-properties \\\n                                                   locales \\\n                                                   sudo \\\n                                                   wget \\\n                                                   git \\\n                                                   unzip \\\n                                                   less \\\n                                                   vim \\\n                                                   byobu \\\n                                                   mosh \\\n                                           --assume-yes && rm -rf /var/lib/apt/lists/*;\n\nRUN localedef -c -i en_US -f UTF-8 en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# ocpkg tool to install repositories and dependencies\nADD https://raw.githubusercontent.com/opencog/ocpkg/master/ocpkg /octool\nRUN chmod ugo+x /octool && /octool -a -d\n\nRUN apt-get -y --no-install-recommends install python-pip python-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir buildbot-slave==0.8.8\n\nRUN adduser --disabled-password -uid 1099 --gecos \"Buildbot,,,\" --home /buildbot buildbot\n\nRUN su buildbot sh -c \"buildslave create-slave --umask=022 /buildbot buildbot.opencog.org:9989 BUILDSLAVE_NAME BUILDSLAVE_PASSWD\"\n\nADD opencog /buildbot/opencog_master_precise/build\nRUN chown -R buildbot:buildbot /buildbot\nWORKDIR /buildbot/opencog_master_precise/build\n\nRUN git remote rm origin\nRUN git remote add origin git://github.com/opencog/opencog\n\n# set buildslave admin and host info\nRUN echo \"David Hart <dhart@opencog.org>\" > /buildbot/info/admin && \\\n    grep \"model name\" /proc/cpuinfo | head -1 | cut -d \":\" -f 2 | tr -d \" \" > /buildbot/info/host && \\\n    grep DISTRIB_DESCRIPTION /etc/lsb-release | cut -d \"=\" -f 2 | tr -d \"\\\"\" >> /buildbot/info/host\n\nCMD su buildbot sh -c \"\\\nsed -i s:BUILDSLAVE_NAME:$BUILDSLAVE_NAME:g /buildbot/buildbot.tac && \\\nsed -i s:BUILDSLAVE_PASSWD:$BUILDSLAVE_PASSWD:g /buildbot/buildbot.tac && \\\nBUILDSLAVE_PASSWD=xxxxxx /usr/local/bin/buildslave start --nodaemon /buildbot\"\n"
}