{
  "startTime": 1674244640322,
  "endTime": 1674244640452,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for integration testing\n#\n# Not intended to be used for an actual setup\nFROM golang\nMAINTAINER Christopher Denny <chris.denny@utexas.edu>\nRUN apt-get update && apt-get install --no-install-recommends -y openssh-server && rm -rf /var/lib/apt/lists/*;\nRUN mkdir /var/run/sshd\nRUN echo 'root:password' | chpasswd\nRUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n\n# SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n\nENV NOTVISIBLE \"in users profile\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n\n# Setup key based ssh\nRUN mkdir /root/.ssh && chmod 700 /root/.ssh\nADD test/integration/id_rsa.pub /root/.ssh/authorized_keys\nADD test/integration/id_rsa.pub /root/.ssh/id_rsa.pub\nADD test/integration/id_rsa /root/.ssh/id_rsa\nRUN chmod 400 /root/.ssh/authorized_keys && chown root:root /root/.ssh/* && chmod 600 /root/.ssh/*\n\nCOPY . /go/src/github.com/square/sharkey\n\nRUN cd /go/src/github.com/square/sharkey && \\\n\tgo build -v -o /usr/bin/sharkey-client ./client && \\\n    cp test/integration/client_entry.sh /usr/bin/entrypoint.sh && \\\n    chmod +x /usr/bin/entrypoint.sh\n\nRUN echo \"HostCertificate /etc/ssh/ssh_host_rsa_key-cert.pub\" >> /etc/ssh/sshd_config\nRUN echo \"HostCertificate /etc/ssh/ssh_host_ecdsa_key-cert.pub\" >> /etc/ssh/sshd_config\nRUN echo \"HostCertificate /etc/ssh/ssh_host_ed25519_key-cert.pub\" >> /etc/ssh/sshd_config\n\nENTRYPOINT [\"/usr/bin/entrypoint.sh\"]\n"
}