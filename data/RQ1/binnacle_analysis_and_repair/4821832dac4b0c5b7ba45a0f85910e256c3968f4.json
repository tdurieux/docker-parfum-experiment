{
  "startTime": 1674235878093,
  "endTime": 1674235878645,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.4\n\nENV OPENRESTY_VERSION 1.11.2.1\nENV OPENRESTY_PREFIX /opt/verynginx/openresty\nENV NGINX_PREFIX /opt/verynginx/openresty/nginx\nENV VAR_PREFIX /var/nginx\n\nRUN apk update \\\n && apk add --virtual build-deps \\\n    make gcc musl-dev \\\n    pcre-dev openssl-dev zlib-dev ncurses-dev readline-dev \\\n    curl perl \\\n && mkdir -p /root/ngx_openresty \\\n && cd /root/ngx_openresty \\\n && curl -f -sSL https://openresty.org/download/openresty-${OPENRESTY_VERSION}.tar.gz | tar -xvz \\\n && cd openresty-* \\\n && readonly NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=$OPENRESTY_PREFIX \\\n    --http-client-body-temp-path=$VAR_PREFIX/client_body_temp \\\n    --http-proxy-temp-path=$VAR_PREFIX/proxy_temp \\\n    --http-log-path=$VAR_PREFIX/access.log \\\n    --error-log-path=$VAR_PREFIX/error.log \\\n    --pid-path=$VAR_PREFIX/nginx.pid \\\n    --lock-path=$VAR_PREFIX/nginx.lock \\\n    --user=www-data \\\n    --group=www-data \\\n    --with-luajit \\\n    --with-pcre-jit \\\n    --with-http_ssl_module \\\n    --with-http_v2_module \\\n    --without-http_ssi_module \\\n    --without-http_userid_module \\\n    --without-http_uwsgi_module \\\n    --with-http_stub_status_module \\\n    -j${NPROC} \\\n && make -j${NPROC} \\\n && make install \\\n && ln -sf $NGINX_PREFIX/sbin/nginx /usr/local/bin/nginx \\\n && ln -sf $NGINX_PREFIX/sbin/nginx /usr/local/bin/openresty \\\n && ln -sf $OPENRESTY_PREFIX/bin/resty /usr/local/bin/resty \\\n && ln -sf $OPENRESTY_PREFIX/luajit/bin/luajit-* $OPENRESTY_PREFIX/luajit/bin/lua \\\n && ln -sf $OPENRESTY_PREFIX/luajit/bin/luajit-* /usr/local/bin/lua \\\n && apk del build-deps \\\n && apk add \\\n    libpcrecpp libpcre16 libpcre32 openssl libssl1.0 pcre libgcc libstdc++ git \\\n && rm -rf /var/cache/apk/* \\\n && rm -rf /root/ngx_openresty\n\nRUN addgroup -g 1000 www-data && adduser -D  -G www-data -s /bin/false -u 1000 www-data\n\nRUN git clone https://github.com/camilb/VeryNginx.git \\\n    && rm -f $NGINX_PREFIX/conf/nginx.conf \\\n    && cp ./VeryNginx/nginx.conf $NGINX_PREFIX/conf/nginx.conf \\\n    && cp -r ./VeryNginx/verynginx /opt/verynginx \\\n    && chown -R www-data:www-data /opt/verynginx \\\n    && rm -rf ./verynginx\nWORKDIR $NGINX_PREFIX/\n\nCMD [\"/opt/verynginx/openresty/nginx/sbin/nginx\", \"-g\", \"daemon off; error_log /dev/stderr info;\"]\n"
}