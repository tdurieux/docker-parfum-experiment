{
  "startTime": 1674251168878,
  "endTime": 1674251169120,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 2,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "######################\n### BASE (FIRST)\n#######################\n\nFROM quay.io/criticaljuncture/baseimage:16.04\n\n\n#######################\n### RUBY\n#######################\n\nRUN apt-get update && apt-get install --no-install-recommends -y ruby2.2 ruby2.2-dev && rm -rf /var/lib/apt/lists/*;\n\n\n#######################\n### VARIOUS PACKAGES\n#######################\n\nRUN apt-get update && apt-get install --no-install-recommends -y libcurl4-openssl-dev libpcre3-dev git libmysqlclient-dev mysql-client secure-delete \\\n  # capybara-webkit\n  libqt4-dev libqtwebkit-dev && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/\n\n# node js - packages are out of date\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash - && \\\n  apt-get install --no-install-recommends -y nodejs && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/\n\n# npm packages for testing\nRUN npm install -g jshint && npm cache clean --force;\nRUN npm install -g coffeelint && npm cache clean --force;\n\n\n##################\n### TIMEZONE\n##################\n\nRUN ln -sf /usr/share/zoneinfo/US/Eastern /etc/localtime\n\n\n##################\n### APP USER\n##################\n\nRUN adduser app -uid 1000 --system &&\\\n  usermod -a -G docker_env app\n\n\n###############################\n### GEMS & PASSENGER INSTALL\n###############################\n\nRUN gem install bundler\n\nWORKDIR /tmp\nCOPY Gemfile /tmp/Gemfile\nCOPY Gemfile.lock /tmp/Gemfile.lock\nRUN bundle install --system --full-index &&\\\n  passenger-config install-standalone-runtime &&\\\n  passenger start --runtime-check-only\n\n\n# docker cached layer build optimization:\n# caches the latest security upgrade versions\n# at the same time we're doing something else slow (changing the bundle)\n# but something we do often enough that the final unattended upgrade at the\n# end of this dockerfile isn't installing the entire world of security updates\n# since we set up the dockerfile for the project\nRUN apt-get update && unattended-upgrade -d\n\n\nENV PASSENGER_MIN_INSTANCES 1\nENV WEB_PORT 3000\n\n\n##################\n### SERVICES\n##################\n\nCOPY docker/web/my_init.d /etc/my_init.d\nCOPY docker/web/service /etc/service\n\n\n##################\n### APP\n##################\n\nCOPY --chown=1000:1000 . /home/app/\n\nWORKDIR /home/app\n\nRUN DB_ADAPTER=nulldb DEVISE_SECRET_KEY=XXX AWS_ACCESS_KEY_ID=XXX AWS_SECRET_ACCESS_KEY=XXX RAILS_ENV=production bundle exec rake assets:precompile &&\\\n  chown -R app /home/app/public\n\n# CI setup\nRUN mkdir log/test/ && touch log/test/vcr.log && chown -R app log\n\n\n##################\n### BASE (LAST)\n##################\n\n# ensure all packages are as up to date as possible\n# installs all updates since we last bundled\nRUN apt-get update && unattended-upgrade -d\n\n# set terminal\nENV TERM=linux\n"
}