{
  "startTime": 1674235829895,
  "endTime": 1674235829939,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 0,
        "columnEnd": 16
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 0,
        "columnEnd": 40
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 18,
        "columnEnd": 54
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 0,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the latest cut of alpine \nFROM alpine:latest \n\n# update apk lib, install deps, install ansible and install pywinrm. \n# also install docker libraries and install crypto module which gives good \n# performance gains on ansible-vault (particularly when using lots of vaulted \n# files). \nRUN apk update && apk add --no-cache python py-pip python-dev gcc && \\\n apk add --no-cache libc-dev libffi-dev openssl-dev make && \\\n pip install --no-cache-dir cffi && \\\n pip install --no-cache-dir ansible pywinrm cryptography\n\n# Inventory file (defaults to ./hosts) \nENV INVENTORY hosts \n\n# Test variable \nENV TEST test \n\n# Setup working directory structure (/data) \n# Create /data as a volume \nVOLUME /data \n\n# Use /data as our working directory. \nWORKDIR /data \n\n# Fire up ansible, using /data/playbook.yaml as the default playbook. \nCMD ansible-playbook -i ${INVENTORY} playbook.yaml \n\n"
}