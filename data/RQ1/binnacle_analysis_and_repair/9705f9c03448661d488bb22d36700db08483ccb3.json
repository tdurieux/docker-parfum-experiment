{
  "startTime": 1674246405216,
  "endTime": 1674246405590,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM unocha/php7:%%UPSTREAM%%\n\nMAINTAINER UN-OCHA Operations <docker+ops@humanitarianresponse.info>\n\n# A little bit of metadata management.\nARG BUILD_DATE\nARG VERSION\nARG VCS_URL\nARG VCS_REF\n\nLABEL org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.vendor=\"UN-OCHA\" \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.vcs-url=$VCS_URL \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.name=\"php7-ghosts\" \\\n      org.label-schema.description=\"This service provides a php-fpm platform for the FTS/HPC Viewer Drupal 7 sites.\" \\\n      org.label-schema.architecture=\"x86_64\" \\\n      org.label-schema.distribution=\"Alpine Linux\" \\\n      org.label-schema.distribution-version=\"3.8\" \\\n      info.humanitarianresponse.php=$VERSION \\\n      info.humanitarianresponse.php.modules=\"bcmath bz2 calendar ctype curl dom exif fileinfo fpm ftp gd gettext iconv igbinary imagick imap intl json mcrypt memcached opcache openssl pdo pdo_mysql pdo_pgsql phar posix redis shmop soap sysvmsg sysvsem sysvshm simplexml sockets wddx xml xmlreader xmlwriter xsl zip zlib\" \\\n      info.humanitarianresponse.php.sapi=\"fpm\" \\\n      info.humanitarianresponse.casperjs=\"1.1.3\" \\\n      info.humanitarianresponse.phantomjs=\"2.0.0\"\n\nCOPY igbinary.ini /etc/php7/conf.d/igbinary.ini\n\nRUN \\\n\n    sed -i s/4000/48/g /etc/group && \\\n    sed -i s/4000/48/g /etc/group- && \\\n    sed -i s/4000/48/g /etc/passwd && \\\n    sed -i s/4000/48/g /etc/shadow && \\\n    # Install additional php libraries.\n    apk add --update-cache \\\n      php7-ftp \\\n      php7-imap \\\n      php7-intl \\\n      php7-soap && \\\n    rm -rf /var/cache/apk/* && \\\n    # Build igbinary php extension.\n    apk add --update-cache --virtual .build-dependencies \\\n      git \\\n      php7-dev \\\n      autoconf \\\n      g++ \\\n      make && \\\n    cd /tmp && \\\n    git clone https://github.com/igbinary/igbinary && \\\n    cd igbinary && \\\n    phpize7 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CFLAGS=\"-O2 -g\" --enable-igbinary --with-php-config=/usr/bin/php-config7 && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    rm -rf igbinary && \\\n    rm -rf /usr/include/php/ && \\\n    apk del .build-dependencies && \\\n    rm -rf /var/cache/apk/* && \\\n    # Add dependencies for capsper and phantom.\n    apk add --update-cache \\\n      fontconfig \\\n      libc6-compat \\\n      python && \\\n    rm -rf /var/cache/apk/* && \\\n    # Install casper.\n    curl -f -L -o /tmp/casperjs.zip https://github.com/n1k0/casperjs/archive/master.zip && \\\n    mkdir -p /opt && \\\n    unzip /tmp/casperjs.zip -d /opt && \\\n    mv /opt/casperjs-master /opt/casperjs && \\\n    ln -s /opt/casperjs/bin/casperjs /usr/local/bin/casperjs && \\\n    rm -f /tmp/casperjs.zip && \\\n    # Found an actual working PhantomJS at http://fabiorehm.com/blog/2015/07/22/building-a-minimum-viable-phantomjs-2-docker-image\n    # It's a year old, but it's newer than the old one (1.9.8) and it works.\n    # Mind you, only extract part of the archive, or our crafted passwd and shadow files wil be overwritten.\n    curl -f -Ls https://github.com/fgrehm/docker-phantomjs2/releases/download/v2.0.0-20150722/dockerized-phantomjs.tar.gz \\\n      | tar xz -C / bin etc/fonts etc/ssl lib lib64 usr/lib usr/local usr/share\n"
}