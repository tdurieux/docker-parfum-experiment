{
  "startTime": 1674242061000,
  "endTime": 1674242061819,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 216,
        "lineEnd": 216,
        "columnStart": 8,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 218,
        "lineEnd": 218,
        "columnStart": 8,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 166,
        "lineEnd": 167,
        "columnStart": 8,
        "columnEnd": 9
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 169,
        "lineEnd": 170,
        "columnStart": 8,
        "columnEnd": 9
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 172,
        "lineEnd": 173,
        "columnStart": 8,
        "columnEnd": 9
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 175,
        "lineEnd": 176,
        "columnStart": 8,
        "columnEnd": 9
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 245,
        "lineEnd": 245,
        "columnStart": 36,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 287,
        "lineEnd": 287,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 243,
        "lineEnd": 243,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 260,
        "lineEnd": 260,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 274,
        "lineEnd": 275,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 287,
        "lineEnd": 287,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 291,
        "lineEnd": 291,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 243,
        "lineEnd": 243,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 260,
        "lineEnd": 260,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 274,
        "lineEnd": 275,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 287,
        "lineEnd": 287,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 243,
        "lineEnd": 243,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 260,
        "lineEnd": 260,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 274,
        "lineEnd": 275,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 287,
        "lineEnd": 287,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 291,
        "lineEnd": 291,
        "columnStart": 7,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 247,
        "lineEnd": 247,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 264,
        "lineEnd": 264,
        "columnStart": 2,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 278,
        "lineEnd": 279,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 290,
        "lineEnd": 290,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "ARG NODE_VERSION=${NODE_VERSION}\n\nFROM phusion/baseimage:latest\n\n# Set Environment Variables\nENV DEBIAN_FRONTEND noninteractive\n\nENV LANGUAGE=en_US.UTF-8\nENV LC_ALL=en_US.UTF-8\nENV LC_CTYPE=en_US.UTF-8\nENV LANG=en_US.UTF-8\nENV TERM xterm\n\n# Start as root\nUSER root\n\n###########################################################################\n# Bootstrapping the image:\n###########################################################################\n\nRUN locale-gen en_US.UTF-8\nRUN apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y --allow-downgrades --allow-remove-essential \\\n        --allow-change-held-packages \\\n        build-essential \\\n        pkg-config \\\n        libcurl4-openssl-dev \\\n        libedit-dev \\\n        libssl-dev \\\n        libxml2-dev \\\n        xz-utils \\\n        libsqlite3-dev \\\n        sqlite3 \\\n        git \\\n        curl \\\n        vim \\\n        nano \\\n        postgresql-client \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Source the bash\nRUN . ~/.bashrc\n\n###########################################################################\n# Nodedock non-root user:\n###########################################################################\n\n# Add a non-root user to prevent files being created with root permissions on host machine.\nARG PUID=1000\nENV PUID ${PUID}\nARG PGID=1000\nENV PGID ${PGID}\n\n# always run apt update when start and after add new source list, then clean up at end.\nRUN apt-get update -yqq && \\\n    groupadd -g ${PGID} nodedock && \\\n    useradd -u ${PUID} -g nodedock -m nodedock -G docker_env && \\\n    usermod -p \"*\" nodedock\n\n###########################################################################\n# Set Timezone\n###########################################################################\n\nARG TZ=UTC\nENV TZ ${TZ}\n\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n###########################################################################\n# User Aliases\n###########################################################################\n\nUSER root\n\nCOPY ./aliases.sh /root/aliases.sh\nCOPY ./aliases.sh /home/nodedock/aliases.sh\n\nRUN sed -i 's/\\r//' /root/aliases.sh && \\\n    sed -i 's/\\r//' /home/nodedock/aliases.sh && \\\n    chown nodedock:nodedock /home/nodedock/aliases.sh && \\\n    echo \"\" >> ~/.bashrc && \\\n    echo \"# Load Custom Aliases\" >> ~/.bashrc && \\\n    echo \"source ~/aliases.sh\" >> ~/.bashrc && \\\n\techo \"\" >> ~/.bashrc\n\nUSER nodedock\n\nRUN echo \"\" >> ~/.bashrc && \\\n    echo \"# Load Custom Aliases\" >> ~/.bashrc && \\\n    echo \"source ~/aliases.sh\" >> ~/.bashrc && \\\n\techo \"\" >> ~/.bashrc\n\n###########################################################################\n# Crontab\n###########################################################################\n\nUSER root\n\nCOPY ./crontab /etc/cron.d\n\nRUN chmod -R 644 /etc/cron.d\n\n###########################################################################\n# ssh:\n###########################################################################\n\nARG INSTALL_WORKSPACE_SSH=false\n\nCOPY insecure_id_rsa /tmp/id_rsa\nCOPY insecure_id_rsa.pub /tmp/id_rsa.pub\n\nRUN if [ ${INSTALL_WORKSPACE_SSH} = true ]; then \\\n    rm -f /etc/service/sshd/down && \\\n    cat /tmp/id_rsa.pub >> /root/.ssh/authorized_keys \\\n        && cat /tmp/id_rsa.pub >> /root/.ssh/id_rsa.pub \\\n        && cat /tmp/id_rsa >> /root/.ssh/id_rsa \\\n        && rm -f /tmp/id_rsa* \\\n        && chmod 644 /root/.ssh/authorized_keys /root/.ssh/id_rsa.pub \\\n    && chmod 400 /root/.ssh/id_rsa \\\n    && cp -rf /root/.ssh /home/nodedock \\\n    && chown -R nodedock:nodedock /home/nodedock/.ssh \\\n;fi\n\n###########################################################################\n# Libpng16 EXTENSION\n###########################################################################\n\nARG INSTALL_LIBPNG=false\n\nRUN if [ ${INSTALL_LIBPNG} = true ]; then \\\n    apt update && \\\n    apt install -y --no-install-recommends libpng16-16 \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# Node / NVM:\n###########################################################################\n\nUSER nodedock\n\n# Check if NVM needs to be installed\nARG NODE_VERSION=node\nENV NODE_VERSION ${NODE_VERSION}\nARG NODE_ENV=development\nENV NODE_ENV ${NODE_ENV}\nARG INSTALL_NODE=false\nARG INSTALL_NPM_GULP=false\nARG INSTALL_NPM_BOWER=false\nARG INSTALL_NPM_VUE_CLI=false\nARG INSTALL_NPM_ANGULAR_CLI=false\nARG NPM_REGISTRY\nENV NPM_REGISTRY ${NPM_REGISTRY}\nENV NVM_DIR /home/nodedock/.nvm\n\nRUN if [ ${INSTALL_NODE} = true ]; then \\\n    curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash \\\n        && . $NVM_DIR/nvm.sh \\\n        && nvm install ${NODE_VERSION} \\\n        && nvm use ${NODE_VERSION} \\\n        && nvm alias ${NODE_VERSION} \\\n        && if [ ${NPM_REGISTRY} ]; then \\\n        npm config set registry ${NPM_REGISTRY} \\\n        ;fi \\\n        && if [ ${INSTALL_NPM_GULP} = true ]; then \\\n        npm install -g gulp \\\n        ; npm cache clean --force; fi \\\n        && if [ ${INSTALL_NPM_BOWER} = true ]; then \\\n        npm install -g bower \\\n        ; npm cache clean --force; fi \\\n        && if [ ${INSTALL_NPM_VUE_CLI} = true ]; then \\\n        npm install -g @vue/cli \\\n        ; npm cache clean --force; fi \\\n        && if [ ${INSTALL_NPM_ANGULAR_CLI} = true ]; then \\\n        npm install -g @angular/cli \\\n        ; npm cache clean --force; fi \\\n; fi\n\n# Wouldn't execute when added to the RUN statement in the above block\n# Source NVM when loading bash since ~/.profile isn't loaded on non-login shell\nRUN if [ ${INSTALL_NODE} = true ]; then \\\n    echo \"\" >> ~/.bashrc && \\\n    echo 'export NVM_DIR=\"$HOME/.nvm\"' >> ~/.bashrc && \\\n    echo '[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"  # This loads nvm' >> ~/.bashrc \\\n;fi\n\n# Add NVM binaries to root's .bashrc\nUSER root\n\nRUN if [ ${INSTALL_NODE} = true ]; then \\\n    echo \"\" >> ~/.bashrc && \\\n    echo 'export NVM_DIR=\"/home/nodedock/.nvm\"' >> ~/.bashrc && \\\n    echo '[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"  # This loads nvm' >> ~/.bashrc \\\n;fi\n\n# Add PATH for node\nENV PATH $PATH:$NVM_DIR/versions/node/v${NODE_VERSION}/bin\n\nRUN if [ ${NPM_REGISTRY} ]; then \\\n    . ~/.bashrc && npm config set registry ${NPM_REGISTRY} \\\n;fi\n\n###########################################################################\n# YARN:\n###########################################################################\n\nUSER nodedock\n\nARG INSTALL_YARN=false\nARG YARN_VERSION=latest\nENV YARN_VERSION ${YARN_VERSION}\n\nRUN if [ ${INSTALL_YARN} = true ]; then \\\n    [ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" && \\\n    if [ ${YARN_VERSION} = \"latest\" ]; then \\\n        curl -f -o- -L https://yarnpkg.com/install.sh | bash; \\\n    else \\\n        curl -f -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}; \\\n    fi && \\\n    echo \"\" >> ~/.bashrc && \\\n    echo 'export PATH=\"$HOME/.yarn/bin:$PATH\"' >> ~/.bashrc \\\n; else \\\n        curl -f -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}; \\\n    fi \\\n\n\nfi\n\n# Add YARN binaries to root's .bashrc\nUSER root\n\nRUN if [ ${INSTALL_YARN} = true ]; then \\\n    echo \"\" >> ~/.bashrc && \\\n    echo 'export YARN_DIR=\"/home/nodedock/.yarn\"' >> ~/.bashrc && \\\n    echo 'export PATH=\"$YARN_DIR/bin:$PATH\"' >> ~/.bashrc \\\n;fi\n\n\n###########################################################################\n# Image optimizers:\n###########################################################################\n\nUSER root\n\nARG INSTALL_IMAGE_OPTIMIZERS=false\n\nRUN if [ ${INSTALL_IMAGE_OPTIMIZERS} = true ]; then \\\n    apt-get install --no-install-recommends -y jpegoptim optipng pngquant gifsicle && \\\n    if [ ${INSTALL_NODE} = true ]; then \\\n        exec bash && . ~/.bashrc && npm install -g svgo \\\n    ; npm cache clean --force; fi \\\n; rm -rf /var/lib/apt/lists/*; fi\n\nUSER nodedock\n\n###########################################################################\n# PYTHON:\n###########################################################################\n\nUSER root\n\nARG INSTALL_PYTHON=false\n\nRUN if [ ${INSTALL_PYTHON} = true ]; then \\\n  apt-get -y --no-install-recommends install python python-pip python-dev build-essential \\\n  && python -m pip install --upgrade pip \\\n  && python -m pip install --upgrade virtualenv \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# ImageMagick:\n###########################################################################\n\nUSER root\n\nARG INSTALL_IMAGEMAGICK=false\n\nRUN if [ ${INSTALL_IMAGEMAGICK} = true ]; then \\\n    apt-get install --no-install-recommends -y imagemagick \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# pgsql client\n###########################################################################\n\nUSER root\n\nARG INSTALL_PG_CLIENT=false\n\nRUN if [ ${INSTALL_PG_CLIENT} = true ]; then \\\n    apt-get install -y --no-install-recommends wget \\\n    && add-apt-repository \"deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main\" \\\n    && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n    && apt-get update \\\n    && apt-get -y --no-install-recommends install postgresql-client-10 \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n#\n#--------------------------------------------------------------------------\n# Final Touch\n#--------------------------------------------------------------------------\n#\n\nUSER root\n\n# Clean up\nRUN apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    rm /var/log/lastlog /var/log/faillog\n\n# Set default work directory\nWORKDIR /var/www\n"
}