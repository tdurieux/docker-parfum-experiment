{
  "startTime": 1674252248156,
  "endTime": 1674252248238,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\nMAINTAINER Tim Byrne <sultan@locehilios.com>\n\n# No input during build\nENV DEBIAN_FRONTEND noninteractive\n\n# UTF8 locale\nRUN apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;\nRUN locale-gen en_US.UTF-8\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'\n\n# Convenience settings for the testbed's root account\nRUN echo 'set -o vi' >> /root/.bashrc\n\n# Install prerequisites\nRUN \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y \\\n    curl \\\n    expect \\\n    git \\\n    gnupg1 \\\n    lsb-release \\\n    make \\\n    python3-pip \\\n    shellcheck=0.4.6-1 \\\n  ; rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir \\\n      envtpl \\\n      flake8==3.5.0 \\\n      pylint==1.9.2 \\\n      pytest==3.6.4 \\\n      yamllint==1.15.0 \\\n    ;\n\n# Force GNUPG version 1 at path /usr/bin/gpg\nRUN ln -fs /usr/bin/gpg1 /usr/bin/gpg\n\n# Create a flag to identify when running inside the yadm testbed\nRUN touch /.yadmtestbed\n\n# /yadm will be the work directory for all tests\n# docker commands should mount the local yadm project as /yadm\nWORKDIR /yadm\n\n# Create a Makefile to be used if no /yadm volume is mounted\nRUN echo \"test:\\n\\t@echo 'The yadm project must be mounted at /yadm'\\n\\t@echo 'Try using a docker parameter like -v \\\"\\$\\$PWD:/yadm:ro\\\"'\\n\\t@false\" > /yadm/Makefile\n\n# By default, run all tests defined\nCMD make test\n"
}