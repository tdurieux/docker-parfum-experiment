{
  "startTime": 1674241867993,
  "endTime": 1674241868440,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 20,
        "columnEnd": 101
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 65,
        "columnEnd": 96
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 78,
        "columnEnd": 101
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 41,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 41,
        "columnEnd": 109
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt update && apt dist-upgrade -y && apt install --no-install-recommends -y clang git make wget cmake libtool automake bison flex && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/tpoechtrager/osxcross.git\nWORKDIR osxcross\n\nCOPY MacOSX10.11.sdk.tar.xz ./tarballs/\nRUN SDK_VERSION=10.11 UNATTENDED=1 ./build.sh\n\nENV PATH=\"/osxcross/target/bin:${PATH}\"\nENV MACOSX_DEPLOYMENT_TARGET=10.9\n\nRUN UNATTENDED=1 osxcross-macports install jsoncpp-devel leveldb curl libmicrohttpd sfml readline\n\nWORKDIR ../\n\nENV CC=o64-clang\nENV CXX=o64-clang++\nENV AR=x86_64-apple-darwin15-ar\nENV LD=x86_64-apple-darwin15-ld\nENV RANLIB=x86_64-apple-darwin15-ranlib\n\nRUN wget https://www.openssl.org/source/openssl-1.1.0h.tar.gz && tar -xvzf openssl-1.1.0h.tar.gz && rm openssl-1.1.0h.tar.gz\nWORKDIR openssl-1.1.0h\nRUN ./Configure darwin64-x86_64-cc --prefix=/osxcross/target/macports/pkgs/opt/local\nRUN make && make install\n\nWORKDIR ../\n\nRUN wget https://github.com/cinemast/libjson-rpc-cpp/archive/v1.1.0.tar.gz && tar -xvzf v1.1.0.tar.gz && rm v1.1.0.tar.gz\nWORKDIR libjson-rpc-cpp-1.1.0\nRUN cmake . -DBUILD_SHARED_LIBS=NO -DBUILD_STATIC_LIBS=YES -DCOMPILE_TESTS=NO -DCOMPILE_STUBGEN=NO -DCOMPILE_EXAMPLES=NO -DCMAKE_SYSTEM_NAME=Darwin -DCMAKE_C_COMPILER=$CC -DCMAKE_AR=/osxcross/target/bin/$AR -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/osxcross/target/macports/pkgs/opt/local -DCMAKE_INCLUDE_PATH=/osxcross/target/macports/pkgs/opt/local/include -DREDIS_CLIENT=NO -DREDIS_SERVER=NO -DWITH_COVERAGE=NO\nRUN OSXCROSS_MP_INC=1 make && make install\n\nWORKDIR ../\n\nRUN git clone https://github.com/rweather/noise-c\nWORKDIR noise-c\nADD noise-c-macos.patch .\nRUN git apply noise-c-macos.patch\nRUN ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/osxcross/target/macports/pkgs/opt/local --host=x86_64-linux\nRUN make && make install\n\nWORKDIR ../\n\nRUN git clone https://github.com/lhorgan/luack\nWORKDIR luack\nRUN git checkout 43e9e17984e4e992ac2dd0510ac15ebd22f38fdc\nRUN make macosx CC=$CC AR=\"$AR rcu\" RANLIB=$RANLIB && make install INSTALL_TOP=/osxcross/target/macports/pkgs/opt/local\n\nWORKDIR ../\n\nRUN git clone https://github.com/metalicjames/selene.git\nRUN cp -r selene/include/* /osxcross/target/macports/pkgs/opt/local/include\n\nRUN git clone https://github.com/metalicjames/lua-lz4.git\nWORKDIR lua-lz4\nRUN LUA_INCDIR=/osxcross/target/macports/pkgs/opt/local/include LUA_LIBDIR=/osxcross/target/macports/pkgs/opt/local/lib make UNAME=Darwin\n\nWORKDIR ../\n\nRUN git clone https://github.com/auriamg/macdylibbundler.git\nWORKDIR macdylibbundler\nRUN CXX=clang++ make && make install\n\nWORKDIR ../\n\nRUN wget https://github.com/premake/premake-core/releases/download/v5.0.0-alpha12/premake-5.0.0-alpha12-linux.tar.gz && \\\n    tar zxvf premake-5.0.0-alpha12-linux.tar.gz && \\\n    cp premake5 /usr/bin && rm premake-5.0.0-alpha12-linux.tar.gz\n\nCOPY ./cryptokernel /cryptokernel\n\nRUN cp lua-lz4/lz4.so cryptokernel\n\nRUN git clone https://github.com/metalicjames/cschnorr.git\nWORKDIR cschnorr\nRUN premake5 gmake2 --os=macosx --include-dir=/osxcross/target/macports/pkgs/opt/local/include && make config=release_static cschnorr && \\\n    mkdir /osxcross/target/macports/pkgs/opt/local/include/cschnorr/ && \\\n    cp src/*.h /osxcross/target/macports/pkgs/opt/local/include/cschnorr/ && \\\n    cp bin/Static/Release/libcschnorr.a /osxcross/target/macports/pkgs/opt/local/lib\nWORKDIR ../\n\nWORKDIR cryptokernel\nRUN premake5 gmake2 --os=macosx --include-dir=/osxcross/target/macports/pkgs/opt/local/include --lib-dir=/osxcross/target/macports/pkgs/opt/local/lib && \\\n    make config=release_static ckd\n\nRUN ln -s /osxcross/target/bin/x86_64-apple-darwin15-otool /osxcross/target/bin/otool && ln -s /osxcross/target/bin/x86_64-apple-darwin15-install_name_tool /osxcross/target/bin/install_name_tool && rm -r /opt && ln -s /osxcross/target/macports/pkgs/opt /opt\n\nRUN dylibbundler -b -x bin/Static/Release/ckd -cd -i /usr/lib/ -p @executable_path/libs/\n"
}