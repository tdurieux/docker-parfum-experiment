{
  "startTime": 1674235163395,
  "endTime": 1674235163832,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 1,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 1,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (C) The Arvados Authors. All rights reserved.\n#\n# SPDX-License-Identifier: AGPL-3.0\n\nFROM debian:9\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && \\\n    apt-get -yq --no-install-recommends -o Acquire::Retries=6 install \\\n    postgresql-9.6 postgresql-contrib-9.6 git build-essential runit curl libpq-dev \\\n    libcurl4-openssl-dev libssl1.0-dev zlib1g-dev libpcre3-dev \\\n    openssh-server python-setuptools netcat-traditional \\\n    python-epydoc graphviz bzip2 less sudo virtualenv \\\n    libpython-dev fuse libfuse-dev python-pip python-yaml \\\n    pkg-config libattr1-dev python-llfuse python-pycurl \\\n    libwww-perl libio-socket-ssl-perl libcrypt-ssleay-perl \\\n    libjson-perl nginx gitolite3 lsof libreadline-dev \\\n    apt-transport-https ca-certificates \\\n    linkchecker python3-virtualenv python-virtualenv xvfb iceweasel \\\n    libgnutls28-dev python3-dev vim cadaver cython gnupg dirmngr \\\n    libsecret-1-dev r-base r-cran-testthat libxml2-dev pandoc \\\n    python3-setuptools python3-pip openjdk-8-jdk bsdmainutils && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nENV RUBYVERSION_MINOR 2.3\nENV RUBYVERSION 2.3.5\n\n# Install Ruby from source\nRUN cd /tmp && \\\n curl -f https://cache.ruby-lang.org/pub/ruby/${RUBYVERSION_MINOR}/ruby-${RUBYVERSION}.tar.gz | tar -xzf - && \\\n cd ruby-${RUBYVERSION} && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-install-doc && \\\n make && \\\n make install && \\\n cd /tmp && \\\n rm -rf ruby-${RUBYVERSION}\n\nENV GEM_HOME /var/lib/gems\nENV GEM_PATH /var/lib/gems\nENV PATH $PATH:/var/lib/gems/bin\n\nENV GOVERSION 1.11.5\n\n# Install golang binary\nRUN curl -f https://storage.googleapis.com/golang/go${GOVERSION}.linux-amd64.tar.gz | \\\n    tar -C /usr/local -xzf -\n\nENV PATH ${PATH}:/usr/local/go/bin\n\nVOLUME /var/lib/docker\nVOLUME /var/log/nginx\nVOLUME /etc/ssl/private\n\nADD 58118E89F3A912897C070ADBF76221572C52609D.asc /tmp/\nRUN apt-key add --no-tty /tmp/58118E89F3A912897C070ADBF76221572C52609D.asc && \\\n    rm -f /tmp/58118E89F3A912897C070ADBF76221572C52609D.asc\n\nRUN mkdir -p /etc/apt/sources.list.d && \\\n    echo deb https://apt.dockerproject.org/repo debian-stretch main > /etc/apt/sources.list.d/docker.list && \\\n    apt-get update && \\\n    apt-get -yq --no-install-recommends install docker-engine=17.05.0~ce-0~debian-stretch && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN rm -rf /var/lib/postgresql && mkdir -p /var/lib/postgresql\n\nENV PJSVERSION=1.9.8\n# bitbucket is the origin, but downloads fail sometimes, so use our own mirror instead.\n#ENV PJSURL=https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-${PJSVERSION}-linux-x86_64.tar.bz2\nENV PJSURL=http://cache.arvados.org/phantomjs-${PJSVERSION}-linux-x86_64.tar.bz2\n\nRUN set -e && \\\n curl -L -f ${PJSURL} | tar -C /usr/local -xjf - && \\\n ln -s ../phantomjs-${PJSVERSION}-linux-x86_64/bin/phantomjs /usr/local/bin\n\nENV GDVERSION=v0.23.0\nENV GDURL=https://github.com/mozilla/geckodriver/releases/download/$GDVERSION/geckodriver-$GDVERSION-linux64.tar.gz\nRUN set -e && curl -L -f ${GDURL} | tar -C /usr/local/bin -xzf - geckodriver\n\nRUN pip install --no-cache-dir -U setuptools\n\nENV NODEVERSION v8.15.1\n\n# Install nodejs binary\nRUN curl -L -f https://nodejs.org/dist/${NODEVERSION}/node-${NODEVERSION}-linux-x64.tar.xz | tar -C /usr/local -xJf - && \\\n    ln -s ../node-${NODEVERSION}-linux-x64/bin/node ../node-${NODEVERSION}-linux-x64/bin/npm /usr/local/bin\n\nENV GRADLEVERSION 5.3.1\n\nRUN cd /tmp && \\\n    curl -f -L -O https://services.gradle.org/distributions/gradle-${GRADLEVERSION}-bin.zip && \\\n    unzip gradle-${GRADLEVERSION}-bin.zip -d /usr/local && \\\n    ln -s ../gradle-${GRADLEVERSION}/bin/gradle /usr/local/bin && \\\n    rm gradle-${GRADLEVERSION}-bin.zip\n\n# Set UTF-8 locale\nRUN echo en_US.UTF-8 UTF-8 > /etc/locale.gen && locale-gen\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nARG arvados_version\nRUN echo arvados_version is git commit $arvados_version\n\nADD fuse.conf /etc/\n\nADD crunch-setup.sh gitolite.rc \\\n    keep-setup.sh common.sh createusers.sh \\\n    logger runsu.sh waitforpostgres.sh \\\n    yml_override.py api-setup.sh \\\n    go-setup.sh devenv.sh \\\n    /usr/local/lib/arvbox/\n\nADD runit /etc/runit\n\n# Start the supervisor.\nENV SVDIR /etc/service\nSTOPSIGNAL SIGINT\nCMD [\"/sbin/runit\"]\n"
}