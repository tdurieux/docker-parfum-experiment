{
  "startTime": 1674238729675,
  "endTime": 1674238729943,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 87
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 43
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM williamyeh/ansible:alpine3\n\nMAINTAINER tobilg@gmail.com\n\n# Node.js installation taken from https://github.com/mhart/alpine-node/blob/master/Dockerfile\nENV VERSION=v4.5.0 NPM_VERSION=2\n\nENV CONFIG_FLAGS=\"--fully-static\" DEL_PKGS=\"libgcc libstdc++\" RM_DIRS=/usr/include\n\nRUN apk add --no-cache curl make gcc g++ python linux-headers paxctl libgcc libstdc++ gnupg && \\\n  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 9554F04D7259F04124DE6B476D5A82AC7E37093B && \\\n  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 && \\\n  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 && \\\n  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys FD3A5288F042B6850C66B31F09FE44734EB7990E && \\\n  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 && \\\n  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D && \\\n  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 && \\\n  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B9AE9905FFD7803F25714661B63B535A4C206CA9 && \\\n  curl -f -o node-${VERSION}.tar.gz -sSL https://nodejs.org/dist/${VERSION}/node-${VERSION}.tar.gz && \\\n  curl -f -o SHASUMS256.txt.asc -sSL https://nodejs.org/dist/${VERSION}/SHASUMS256.txt.asc && \\\n  gpg --batch --verify SHASUMS256.txt.asc && \\\n  grep node-${VERSION}.tar.gz SHASUMS256.txt.asc | sha256sum -c - && \\\n  tar -zxf node-${VERSION}.tar.gz && \\\n  cd node-${VERSION} && \\\n  export GYP_DEFINES=\"linux_use_gold_flags=0\" && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr ${CONFIG_FLAGS} && \\\n  NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) && \\\n  make -j${NPROC} -C out mksnapshot BUILDTYPE=Release && \\\n  paxctl -cm out/Release/mksnapshot && \\\n  make -j${NPROC} && \\\n  make install && \\\n  paxctl -cm /usr/bin/node && \\\n  cd / && \\\n  if [ -x /usr/bin/npm ]; then \\\n    npm install -g npm@${NPM_VERSION} && \\\n    find /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf; npm cache clean --force; \\\n  fi && \\\n  apk del curl make gcc g++ python linux-headers paxctl gnupg ${DEL_PKGS} && \\\n  rm -rf /etc/ssl /node-${VERSION}.tar.gz /SHASUMS256.txt.asc /node-${VERSION} ${RM_DIRS} \\\n    /usr/share/man /tmp/* /var/cache/apk/* /root/.npm /root/.node-gyp /root/.gnupg \\\n    /usr/lib/node_modules/npm/man /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html\n\nRUN npm install -g mesosctl@0.1.10 && npm cache clean --force;\n\nCMD [ \"mesosctl\", \"--version\" ]"
}