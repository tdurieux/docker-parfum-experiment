{
  "startTime": 1674245640260,
  "endTime": 1674245640471,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 191
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#docker 17.05+版本支持\n#sudo docker build -t  gopub .\n#sudo docker run --name gopub -p 8192:8192  --restart always  -d   gopub:latest\nFROM golang:1.12.4-alpine3.9 as golang\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories && \\\n    apk update && \\\n    apk add  bash  && \\ \n    rm -rf /var/cache/apk/*   /tmp/*    \nADD src/ /data/gopub/src/\nADD control /data/gopub/control\nWORKDIR /data/gopub/\nRUN ./control build\n\nFROM node:11.14.0-alpine as node\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories && \\\n    apk update --no-cache && \\\n    apk add  --no-cache --virtual .gyp python make g++ && \\ \n    rm -rf /var/cache/apk/*   /tmp/*\nADD ./ /data/gopub/\nWORKDIR /data/gopub/vue-gopub\nRUN npm install -g node-gyp --registry=https://registry.npm.taobao.org && \\\n    npm install node-sass  sass-loader --save-dev --registry=https://registry.npm.taobao.org --disturl=https://npm.taobao.org/dist --sass_binary_site=https://npm.taobao.org/mirrors/node-sass/ && \\\n    npm install --registry=https://registry.npm.taobao.org && \\\n    npm run build && npm cache clean --force;\n\nFROM alpine:3.9.3\nMAINTAINER Linc \"13579443@qq.com\"\nENV TZ='Asia/Shanghai'\nRUN TERM=linux && export TERM\nUSER root\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories && \\\n    apk update && \\\n    apk add ca-certificates bash tzdata sudo curl wget openssh git && \\ \n    echo \"Asia/Shanghai\" > /etc/timezone && \\\n    cp -r -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \\\n    rm -rf /var/cache/apk/*   /tmp/*  && \\ \n    mkdir -p /data/htdocs && \\\n    mkdir -p /data/logs && \\\n    ssh-keygen -q -N \"\" -f /root/.ssh/id_rsa && \\\n    #输出的key需要加入发布目标机的 ~/.ssh/authorized_keys\n    cat ~/.ssh/id_rsa.pub \nWORKDIR /data/gopub\nADD control /data/gopub/control\nCOPY --from=golang /data/gopub/src/gopub /data/gopub/src/gopub\nCOPY --from=golang /data/gopub/src/conf /data/gopub/src/conf\nCOPY --from=golang /data/gopub/src/logs /data/gopub/src/logs\nCOPY --from=golang /data/gopub/src/agent /data/gopub/src/agent\nCOPY --from=node /data/gopub/src/views /data/gopub/src/views\nCOPY --from=node /data/gopub/src/static /data/gopub/src/static\nCMD [\"./control\",\"rundocker\"]\n"
}