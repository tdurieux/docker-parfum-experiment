{
  "startTime": 1674247996216,
  "endTime": 1674247996426,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:trusty\n\nMAINTAINER Santiago Rodriguez <scollazo@gmail.com>\n\n#Config files and some ideas taken from\n# https://github.com/Epheo/docker-naxsi-proxy-waf/\n\n#Change this and build the image to suit your needs by default, without needing to add parameters later\nENV LEARNING_MODE yes\nENV BACKEND_IP 12.34.56.78\nENV ELASTICSEARCH_HOST elasticsearch\n\n#Software versions\nENV NGINX_VERSION 1.9.10\nENV NAXSI_VERSION master\n\n#Install needed packages from repos\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n\t\t\t\t\t    wget python-pip python-geoip logtail curl \\\n\t\t\t\t\t    gcc make libpcre3-dev libssl-dev \\\n\t\t\t\t\t    supervisor && rm -rf /var/lib/apt/lists/*;\n\n#Get nginx and naxsi-ui\nRUN cd /usr/local/ && \\\n    wget \"https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" && \\\n    wget \"https://github.com/nbs-system/naxsi/archive/${NAXSI_VERSION}.tar.gz\" && \\\n    tar zxvf nginx-${NGINX_VERSION}.tar.gz && \\\n    tar zxvf ${NAXSI_VERSION}.tar.gz && rm nginx-${NGINX_VERSION}.tar.gz\n\n#Build and install nginx + naxsi\nRUN cd /usr/local/nginx-${NGINX_VERSION}/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n      --conf-path=/etc/nginx/nginx.conf --add-module=../naxsi-${NAXSI_VERSION}/naxsi_src/ \\\n      --error-log-path=/var/log/nginx/error.log --http-client-body-temp-path=/var/lib/nginx/body \\\n      --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-log-path=/var/log/nginx/access.log \\\n      --http-proxy-temp-path=/var/lib/nginx/proxy --lock-path=/var/lock/nginx.lock \\\n      --pid-path=/var/run/nginx.pid --with-http_ssl_module \\\n      --without-mail_pop3_module --without-mail_smtp_module \\\n      --without-mail_imap_module --without-http_uwsgi_module \\\n      --without-http_scgi_module --with-ipv6 --prefix=/usr && \\\n     make && \\\n     make install\n\n#Install nxapi / nxtool\nRUN cd /usr/local/naxsi-${NAXSI_VERSION} && \\\n     cp naxsi_config/naxsi_core.rules /etc/nginx/ && \\\n     cd nxapi && \\\n     pip install --no-cache-dir -r requirements.txt && \\\n     python setup.py install\n\n#Configuration files\nADD nginx/nginx.conf /etc/nginx/nginx.conf\nADD nginx/sites-enabled/* /etc/nginx/sites-enabled/\nADD naxsi/naxsi.rules /etc/nginx/naxsi.rules\nADD naxsi/nxapi.json /usr/local/etc/nxapi.json\nRUN mkdir /etc/nginx/naxsi-local-rules\nRUN mkdir -p /var/lib/nginx/body\nRUN mkdir -p /var/log/supervisor\nRUN mkdir -p /etc/supervisor/conf.d/\nADD supervisor/supervisord.conf /etc/supervisor/supervisord.conf\nADD supervisor/conf.d/* /etc/supervisor/conf.d/\n\n#Ports\nEXPOSE 80\nEXPOSE 8080\n\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod 755 /docker-entrypoint.sh\n\nCMD [\"/docker-entrypoint.sh\"]\n"
}