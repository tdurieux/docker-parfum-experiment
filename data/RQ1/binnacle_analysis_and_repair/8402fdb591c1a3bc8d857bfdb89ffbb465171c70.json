{
  "startTime": 1674246964463,
  "endTime": 1674246965355,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.12\n\nRUN apt-get update && apt-get install -y \\\n    apparmor \\\n    autoconf \\\n    automake \\\n    bison \\\n    build-essential \\\n    curl \\\n    e2fslibs-dev \\\n    gawk \\\n    gettext \\\n    iptables \\\n    pkg-config \\\n    libaio-dev \\\n    libapparmor-dev \\\n    libcap-dev \\\n    libfuse-dev \\\n    libnet-dev \\\n    libnl-3-dev \\\n    libprotobuf-dev \\\n    libprotobuf-c0-dev \\\n    libseccomp2 \\\n    libseccomp-dev \\\n    libtool \\\n    libudev-dev \\\n    libsystemd-dev \\\n    parallel \\\n    protobuf-c-compiler \\\n    protobuf-compiler \\\n    python-minimal \\\n    python-protobuf \\\n    libglib2.0-dev \\\n    btrfs-tools \\\n    libdevmapper1.02.1 \\\n    libdevmapper-dev \\\n    libgpgme11-dev \\\n    liblzma-dev \\\n    netcat \\\n    socat \\\n    --no-install-recommends \\\n    bsdmainutils \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# install bats\nENV BATS_COMMIT 8789f910812afbf6b87dd371ee5ae30592f1423f\nRUN cd /tmp \\\n    && git clone https://github.com/bats-core/bats-core.git \\\n    && cd bats-core \\\n    && git checkout -q \"$BATS_COMMIT\" \\\n    && ./install.sh /usr/local\nRUN mkdir -p ~/.parallel && touch ~/.parallel/will-cite\n\n# install criu\nENV CRIU_VERSION 3.9\nRUN mkdir -p /usr/src/criu \\\n    && curl -f -sSL https://github.com/xemul/criu/archive/v${CRIU_VERSION}.tar.gz | tar -v -C /usr/src/criu/ -xz --strip-components=1 \\\n    && cd /usr/src/criu \\\n    && make install-criu \\\n    && rm -rf /usr/src/criu\n\n# Install runc\nRUN VERSION=v1.0.0-rc8 &&\\\n    wget -q -O /usr/bin/runc https://github.com/opencontainers/runc/releases/download/$VERSION/runc.amd64 &&\\\n    chmod +x /usr/bin/runc\n\n# Install CNI plugins\nRUN VERSION=v0.8.0 &&\\\n    mkdir -p /opt/cni/bin &&\\\n    wget -qO- https://github.com/containernetworking/plugins/releases/download/$VERSION/cni-plugins-linux-amd64-$VERSION.tgz \\\n        | tar xfz - -C /opt/cni/bin\n\n# Install crictl\nENV CRICTL_COMMIT ff8d2e81baf8ff720fb916e42da57c2b772bd19e\nRUN set -x \\\n       && export GOPATH=\"$(mktemp -d)\" \\\n       && git clone https://github.com/kubernetes-sigs/cri-tools.git \"$GOPATH/src/github.com/kubernetes-sigs/cri-tools\" \\\n       && cd \"$GOPATH/src/github.com/kubernetes-sigs/cri-tools\" \\\n       && git checkout -q \"$CRICTL_COMMIT\" \\\n       && go install github.com/kubernetes-sigs/cri-tools/cmd/crictl \\\n       && cp \"$GOPATH\"/bin/crictl /usr/bin/ \\\n       && rm -rf \"$GOPATH\"\n\n# Make sure we have some policy for pulling images\nRUN mkdir -p /etc/containers\nCOPY test/policy.json /etc/containers/policy.json\nCOPY test/redhat_sigstore.yaml /etc/containers/registries.d/registry.access.redhat.com.yaml\n\nWORKDIR /go/src/github.com/cri-o/cri-o\n\nADD . /go/src/github.com/cri-o/cri-o\n"
}