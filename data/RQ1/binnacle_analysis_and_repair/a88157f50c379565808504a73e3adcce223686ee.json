{
  "startTime": 1674251409439,
  "endTime": 1674251409518,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################################################\n# Dockerfile to build Pony Mail container images\n# Based on Debian\n############################################################\n\n# Set base images\nFROM debian\nFROM elasticsearch\n\nMAINTAINER Daniel Gruno\n\n# Update aptitude repo data\nRUN apt-get update && apt-get install --no-install-recommends -y apache2 git lua-cjson lua-sec lua-socket python3 python3-pip && rm -rf /var/lib/apt/lists/*; # Install base packages\n\nRUN pip3 install --no-cache-dir elasticsearch formatflowed netaddr\n\n\n# Download Pony Mail\nRUN git clone https://github.com/apache/incubator-ponymail.git /var/www/ponymail\n\n# Add httpd config\nADD https://raw.githubusercontent.com/apache/incubator-ponymail/master/dockerfiles/ponymail_httpd_docker.conf /etc/apache2/sites-enabled/000-default.conf\n\n\n# Start ElasticSearch, set up Pony Mail\nEXPOSE 9200 9300\nRUN service elasticsearch start && sleep 30 && service elasticsearch status && cd /var/www/ponymail/tools && python3 setup.py --defaults\n\n# Enable mod_lua\nRUN a2enmod lua\n\n# Expose port for httpd\nEXPOSE 80\n\n# Set default container startup sequence\nENTRYPOINT service elasticsearch start && service apache2 start && bash\n"
}