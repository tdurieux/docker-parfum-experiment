{
  "startTime": 1674246657573,
  "endTime": 1674246658848,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 139,
        "columnEnd": 167
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 147,
        "columnEnd": 158
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 133,
        "columnEnd": 181
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 125,
        "columnEnd": 241
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 23,
        "columnEnd": 431
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 23,
        "columnEnd": 434
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 23,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 23,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 263
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 263
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM amd64/debian:wheezy\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN echo \"deb http://archive.debian.org/debian wheezy main\" > /etc/apt/sources.list\nRUN echo \"deb http://security.debian.org/debian-security wheezy/updates main\" >> /etc/apt/sources.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y git make autoconf python curl wget bzip2 gcc g++ texlive texinfo valgrind libgl1-mesa-dev libxi-dev libxmu-dev libxft-dev libxinerama-dev libxcursor-dev libxfixes-dev mesa-common-dev libglu1-mesa-dev zlib1g-dev emacs23-nox && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nENV CFLAGS=-fPIC\nENV CXXFLAGS=-fPIC\nENV FFLAGS=-fPIC\n\n# -----------------------\n# GCC with PIC\n# -----------------------\n\nRUN curl -f -L -O https://ftpmirror.gnu.org/gcc/gcc-5.5.0/gcc-5.5.0.tar.gz && tar xf gcc-5.5.0.tar.gz && cd gcc-5.5.0 && ./contrib/download_prerequisites && cd .. && mkdir gccbuild && cd gccbuild && ../gcc-5.5.0/configure -v --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu --prefix=/usr/local --enable-checking=release --enable-languages=c,c++,fortran --disable-multilib --with-pic && make -j 4 && make install && cd .. && rm -rf gcc-5.5.0.tar.gz gcc-5.5.0 gccbuild\n\nENV PATH=/usr/local/bin:${PATH}\nENV LD_LIBRARY_PATH=/usr/local/lib64:${LD_LIBRARY_PATH}\nENV CC=/usr/local/bin/gcc\nENV CXX=/usr/local/bin/g++\nENV FC=/usr/local/bin/gfortran\n\n# -----------------------\n# OpenBLAS\n# -----------------------\n\nRUN git clone https://github.com/xianyi/OpenBLAS.git && cd OpenBLAS && git checkout v0.3.5 && make NUM_THREADS=8 TARGET=CORE2 && cp libopenblas_core2p-r0.3.5.a /usr/local/lib/libopenblas.a && cd .. && rm -rf OpenBLAS\n\n# -----------------------\n# Freetype\n# -----------------------\n\nRUN curl -f -L -O http://download.savannah.gnu.org/releases/freetype/freetype-2.9.tar.gz && tar zxf freetype-2.9.tar.gz && cd freetype-2.9 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-shared && make && make install && cd .. && rm -rf freetype-2.9.tar.gz freetype-2.9\n\n# -----------------------\n# CMake\n# -----------------------\n\nRUN curl -f -L -O https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4.tar.gz && tar zxf cmake-3.13.4.tar.gz && cd cmake-3.13.4 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && cd .. && rm -rf cmake-3.13.4.tar.gz cmake-3.13.4\n\n# -----------------------\n# OpenCASCADE\n# -----------------------\n\nRUN curl -f -L -o occt73.tgz \"https://git.dev.opencascade.org/gitweb/?p=occt.git;a=snapshot;h=refs/tags/V7_3_0;sf=tgz\" && tar xf occt73.tgz && cd occt-V7_3_0 && mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_LIBRARY_TYPE=Static -DBUILD_MODULE_Draw=0 -DBUILD_MODULE_Visualization=0 -DBUILD_MODULE_ApplicationFramework=0 .. && make -j 4 && make install && cd ../.. && rm -rf occt73.tgz occt-V7_3_0\n\n# -----------------------\n# HDF5\n# -----------------------\n\nRUN curl -f -O https://support.hdfgroup.org/ftp/HDF5/current/src/hdf5-1.10.5.tar.gz && tar zxvf hdf5-1.10.5.tar.gz && cd hdf5-1.10.5 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-shared --prefix=/usr/local && make && make install && cd .. && rm -rf hdf5-1.10.5.tar.gz hdf5-1.10.5\n\n# -----------------------\n# MED\n# -----------------------\n\nRUN curl -f -L -O http://files.salome-platform.org/Salome/other/med-4.0.0.tar.gz && tar zxf med-4.0.0.tar.gz && cd med-4.0.0 && LIBS=-ldl ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-hdf5=/usr/local --enable-build-static --disable-shared --disable-python --disable-tests && make && make install && cd .. && rm -rf med-4.0.0.tar.gz med-4.0.0\n\n# -----------------------\n# CGNS\n# -----------------------\n\nRUN git clone https://github.com/CGNS/CGNS.git && cd CGNS && git checkout v3.4.0 && mkdir build && cd build && cmake -DCGNS_BUILD_SHARED=0 -DCGNS_ENABLE_HDF5=1 -DHDF5_VERSION=1.10.5 .. && make && make install && cd ../.. && rm -rf CGNS\n\n# -----------------------\n# PETSc\n# -----------------------\n\nRUN curl -f -O http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-3.10.2.tar.gz\nRUN tar zxf petsc-3.10.2.tar.gz && rm petsc-3.10.2.tar.gz\nENV PETSC_DIR ${PWD}/petsc-3.10.2\n\nENV PETSC_ARCH real_mumps_seq\nRUN cd ${PETSC_DIR} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CC=$CC CXX=$CXX FC=$FC CFLAGS=$CFLAGS CXXFLAGS=$CXXFLAGS FFLAGS=$FFLAGS --with-clanguage=cxx --with-debugging=0 --with-mpi=0 --with-mpiuni-fortran-binding=0 --download-mumps=yes --with-mumps-serial --with-shared-libraries=0 --with-x=0 --with-ssl=0 --with-scalar-type=real --with-blaslapack-lib=\"/usr/local/lib/libopenblas.a /usr/local/lib64/libgfortran.a /usr/local/lib64/libquadmath.a -lpthread\" && make\n\nENV PETSC_ARCH complex_mumps_seq\nRUN cd ${PETSC_DIR} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CC=$CC CXX=$CXX FC=$FC CFLAGS=$CFLAGS CXXFLAGS=$CXXFLAGS FFLAGS=$FFLAGS --with-clanguage=cxx --with-debugging=0 --with-mpi=0 --with-mpiuni-fortran-binding=0 --download-mumps=yes --with-mumps-serial --with-shared-libraries=0 --with-x=0 --with-ssl=0 --with-scalar-type=complex --with-blaslapack-lib=\"/usr/local/lib/libopenblas.a /usr/local/lib64/libgfortran.a /usr/local/lib64/libquadmath.a -lpthread\" && make\n\nRUN sed -i 's|-lgfortran -lquadmath -lpthread -lstdc++ -ldl -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lstdc++ -ldl|/usr/local/lib64/libgfortran.a /usr/local/lib64/libquadmath.a -lpthread -lstdc++ -static-libstdc++ -ldl -lm -lgcc_s|' /petsc-3.10.2/complex_mumps_seq/lib/petsc/conf/petscvariables\n\nRUN sed -i 's|-lgfortran -lquadmath -lpthread -lstdc++ -ldl -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lstdc++ -ldl|/usr/local/lib64/libgfortran.a /usr/local/lib64/libquadmath.a -lpthread -lstdc++ -static-libstdc++ -ldl -lm -lgcc_s|' /petsc-3.10.2/real_mumps_seq/lib/petsc/conf/petscvariables\n\n# -----------------------\n# SLEPc\n# -----------------------\n\nRUN curl -f -O http://slepc.upv.es/download/distrib/slepc-3.10.1.tar.gz\nRUN tar zxf slepc-3.10.1.tar.gz && rm slepc-3.10.1.tar.gz\nENV SLEPC_DIR ${PWD}/slepc-3.10.1\nENV PETSC_ARCH real_mumps_seq\nRUN cd ${SLEPC_DIR} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make\nENV PETSC_ARCH complex_mumps_seq\nRUN cd ${SLEPC_DIR} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make\n\n# -----------------------\n# FLTK\n# -----------------------\n\nRUN git clone https://github.com/fltk/fltk.git && cd fltk && make -j 4 && make install && cd ../.. && rm -rf fltk\n\n# -----------------------\n# Minimal Gmsh library\n# -----------------------\n\n# \"docker build --build-arg REBUILD_GMSH=yes\"\nARG REBUILD_GMSH=\n\nRUN git clone https://gitlab.onelab.info/gmsh/gmsh.git && cd gmsh && mkdir build && cd build && cmake -DDEFAULT=0 -DENABLE_PARSER=1 -DENABLE_POST=1 -DENABLE_PLUGINS=1 -DENABLE_ANN=1 -DENABLE_BLAS_LAPACK=1 -DENABLE_BUILD_LIB=1 -DENABLE_PRIVATE_API=1 .. && make -j 4 lib && make install/fast && cd ../.. && rm -rf gmsh\n\nVOLUME [\"/etc/gitlab-runner\"]\nRUN useradd -ms /bin/bash geuzaine\nUSER geuzaine\nWORKDIR /home/geuzaine\nRUN mkdir -p ~/.ssh\nRUN chmod 700 ~/.ssh\n"
}