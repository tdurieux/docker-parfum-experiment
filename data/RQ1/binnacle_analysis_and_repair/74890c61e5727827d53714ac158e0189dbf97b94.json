{
  "startTime": 1674252257062,
  "endTime": 1674252257205,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8-alpine as builder\nMAINTAINER Open Knowledge Foundation <sysadmin@okfn.org>\nWORKDIR /app\n\nRUN apk add --no-cache \\\n    build-base \\\n    git \\\n    libpng-dev \\\n    libjpeg-turbo-dev \\\n    libffi-dev \\\n    bash \\\n    make\n\nCOPY package.json .\nCOPY package-lock.json .\n\nRUN npm install && npm cache clean --force;\n\nCOPY setup.py .\nCOPY Makefile .\nCOPY webpack.config.js .\n\nCOPY . .\nRUN make frontend\n\nFROM python:3.5-alpine\n\nMAINTAINER Open Knowledge Foundation <sysadmin@okfn.org>\n\nENV LANG=en_US.UTF-8 \\\n    APP_DIR=/srv/app\n\nWORKDIR ${APP_DIR}\n\nRUN apk add --no-cache --virtual build-dependencies \\\n    build-base \\\n    linux-headers \\\n    python3-dev \\\n    libressl-dev \\\n    readline-dev \\\n    curl \\\n    postgresql-dev \\\n    libpng-dev \\\n    libjpeg-turbo-dev \\\n    libffi-dev \\\n && apk add --no-cache --update \\\n    libstdc++ \\\n    libxml2-dev \\\n    libxslt-dev \\\n    bzip2 \\\n    bash \\\n    gettext \\\n    ca-certificates \\\n    libressl \\\n    libpq \\\n    libjpeg-turbo \\\n    libpng \\\n    postgresql-client \\\n    make \\\n && update-ca-certificates\n\nCOPY requirements.txt .\nCOPY Makefile .\n\nRUN make install-backend \\\n  && apk del build-dependencies\n\nCOPY --from=builder /app/public ./public\nCOPY . .\n\nEXPOSE 5000\n\nCMD make server queue_mode=$QUEUE_MODE\n"
}