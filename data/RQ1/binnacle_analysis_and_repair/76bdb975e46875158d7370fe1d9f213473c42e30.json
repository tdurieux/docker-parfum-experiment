{
  "startTime": 1674245723998,
  "endTime": 1674245724098,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# set user configurations\nENV USER=cellery\nENV USER_ID=1000\nENV USER_GROUP=cellery\nENV USER_GROUP_ID=1000\nENV USER_HOME=/home/${USER}\n\n# create a user group and a user\nRUN groupadd --system -g ${USER_GROUP_ID} ${USER_GROUP} && \\\n    useradd --system --create-home --home-dir ${USER_HOME} --no-log-init -g ${USER_GROUP_ID} -u ${USER_ID} ${USER}\n\nCOPY files/*.deb ${USER_HOME}/debdir/\nRUN dpkg -i ${USER_HOME}/debdir/ballerina-linux-installer-x64-0.991.0.deb\nCOPY files/cellery-*.jar /usr/lib/ballerina/ballerina-0.991.0/bre/lib/\n# install required packages\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\ncurl \\\ngpg-agent \\\nsoftware-properties-common && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\nRUN add-apt-repository \"deb [arch=amd64] http://apt.kubernetes.io/ kubernetes-xenial main\"\n\nRUN apt-get install -y --no-install-recommends kubectl && rm -rf /var/lib/apt/lists/*;\n\nCMD [\"/bin/bash\"]\n"
}