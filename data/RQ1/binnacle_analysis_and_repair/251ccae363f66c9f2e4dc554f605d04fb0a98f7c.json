{
  "startTime": 1674251578626,
  "endTime": 1674251579119,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 142,
        "columnEnd": 221
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 142,
        "columnEnd": 221
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 389,
        "columnEnd": 425
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 429,
        "columnEnd": 460
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 28,
        "columnEnd": 66
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 127,
        "columnEnd": 190
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 194,
        "columnEnd": 287
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 291,
        "columnEnd": 332
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 36,
        "columnEnd": 385
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 138
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:centos7\n\nCOPY docker/.singularity.d /.singularity.d\nADD docker/etc/profile.d/pycbc.sh /etc/profile.d/pycbc.sh\nADD docker/etc/profile.d/pycbc.csh /etc/profile.d/pycbc.csh\nADD docker/etc/cvmfs/default.local /etc/cvmfs/default.local\nADD docker/etc/cvmfs/60-osg.conf /etc/cvmfs/60-osg.conf\nADD docker/etc/cvmfs/config-osg.opensciencegrid.org.conf /etc/cvmfs/config-osg.opensciencegrid.org.conf\n\n# Set up extra repositories\nRUN rpm -ivh http://software.ligo.org/lscsoft/scientific/7/x86_64/production/lscsoft-production-config-1.3-1.el7.noarch.rpm && yum install -y https://centos7.iuscommunity.org/ius-release.rpm && yum install -y https://ecsft.cern.ch/dist/cvmfs/cvmfs-release/cvmfs-release-latest.noarch.rpm && yum install -y cvmfs cvmfs-config-default && yum clean all && yum makecache && \\\n    yum -y groupinstall \"Compatibility Libraries\" \\\n                        \"Development Tools\" \\\n                        \"Scientific Support\" && \\\n    rpm -e --nodeps git perl-Git && yum -y install python2-pip python-setuptools zlib-devel libpng-devel libjpeg-devel libsqlite3-dev sqlite-devel db4-devel openssl-devel git2u-all fftw-libs-single fftw-devel fftw fftw-libs-long fftw-libs fftw-libs-double gsl gsl-devel libframe-utils libframe-devel libframe libmetaio libmetaio-devel libmetaio-utils hdf5 hdf5-devel python-devel which && pip install --no-cache-dir --upgrade pip setuptools && pip install --no-cache-dir mkl ipython jupyter && rm -rf /var/cache/yum\n\n# set up environment\nRUN cd / && \\\n    ln -s .singularity.d/actions/exec .exec && \\\n    ln -s .singularity.d/actions/run .run && \\\n    ln -s .singularity.d/actions/test .shell && \\\n    ln -s .singularity.d/runscript singularity && \\\n    mkdir -p /cvmfs/config-osg.opensciencegrid.org /cvmfs/oasis.opensciencegrid.org /cvmfs/gwosc.osgstorage.org && echo \"config-osg.opensciencegrid.org /cvmfs/config-osg.opensciencegrid.org cvmfs ro,noauto 0 0\" >> /etc/fstab && echo \"oasis.opensciencegrid.org /cvmfs/oasis.opensciencegrid.org cvmfs ro,noauto 0 0\" >> /etc/fstab && echo \"gwosc.osgstorage.org /cvmfs/gwosc.osgstorage.org cvmfs ro,noauto 0 0\" >> /etc/fstab && mkdir -p /oasis /scratch /projects /usr/lib64/slurm /var/run/munge && \\\n    groupadd -g 1000 pycbc && useradd -u 1000 -g 1000 -d /opt/pycbc -k /etc/skel -m -s /bin/bash pycbc\n\n# Install MPI software needed for pycbc_inference\nRUN yum install -y libibverbs libibverbs-devel libibmad libibmad-devel libibumad libibumad-devel librdmacm librdmacm-devel libmlx5 libmlx4 && curl -f https://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich2-2.1.tar.gz | tar -C /tmp -zxf - && \\\n    cd /tmp/mvapich2-2.1 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/mvapich2-2.1 && make install && \\\n    cd / && rm -rf /tmp/mvapich2-2.1 && \\\n    pip install --no-cache-dir schwimmbad && \\\n    MPICC=/opt/mvapich2-2.1/bin CFLAGS='-I /opt/mvapich2-2.1/include -L /opt/mvapich2-2.1/lib -lmpi' pip install --no-cache-dir mpi4py && rm -rf /var/cache/yum\n\n# When the container is started with\n#   docker run -it pycbc/pycbc-el7:latest\n# the default is to start a loging shell as the pycbc user.\n# This can be overridden to log in as root with\n#   docker run -it pycbc/pycbc-el7:latest /bin/bash -l\nCMD [\"/bin/su\", \"-l\", \"pycbc\"]\n"
}