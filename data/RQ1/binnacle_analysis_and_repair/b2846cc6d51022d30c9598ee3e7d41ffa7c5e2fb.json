{
  "startTime": 1674245613886,
  "endTime": 1674245614206,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 101
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker build --force-rm --squash -t {REPO}/{NAME}:{TAG} .\n# --squash requires the expermimental flag to be set.\n# https://docs.docker.com/engine/reference/commandline/dockerd/#description\n#\n# This is based on the original Golang Dockerfile for Debian Stretch\n# https://github.com/docker-library/golang/blob/906e04de73168f643c5c2b40dca0877a14d2377c/1.10/stretch/Dockerfile\n\nFROM golang:1.11\nMAINTAINER Julien Vehent\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nWORKDIR $GOPATH\n\nCOPY . $GOPATH/src/github.com/mozilla/tls-observatory\n\nRUN rm -rf $GOPATH/src/github.com/mozilla/tls-observatory/.git && \\\n    # Build the latest Go from master\n    mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\" && \\\n    git clone https://github.com/golang/go.git /tmp/go && \\\n\tcd /tmp/go/src && \\\n\t#git checkout 4458a357ab819a612c0c4cafae88a65287254fe9 && \\\n\t./make.bash && \\\n\trm -rf /usr/local/go; \\\n\tmv /tmp/go /usr/local/; \\\n\trm -rf /usr/local/go/.git*; \\\n\trm -rf /tmp/*; \\\n\tgo version && \\\n    # Create a user\n    addgroup -gid 10001 app && \\\n    adduser --home /app --gecos \"\" --ingroup=app --uid=10001 --disabled-login app && \\\n    # Build TLS Observatory\n    go install github.com/mozilla/tls-observatory/tlsobs-api && \\\n    cp $GOPATH/bin/tlsobs-api /app/ && \\\n    go install github.com/mozilla/tls-observatory/tlsobs-scanner && \\\n    cp $GOPATH/bin/tlsobs-scanner /app/ && \\\n    go install github.com/mozilla/tls-observatory/tlsobs-runner && \\\n    cp $GOPATH/bin/tlsobs-runner /app/ && \\\n    go install github.com/mozilla/tls-observatory/tlsobs && \\\n    cp $GOPATH/bin/tlsobs /app/ && \\\n    # Compile ev-checker\n    cd $GOPATH && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends git libcurl4-nss-dev libnss3 libnss3-dev clang postgresql-client ruby ruby-dev -y && \\\n    chown app:app -R /var/lib/gems/ && \\\n    git clone https://github.com/mozilla-services/ev-checker.git && \\\n    cd ev-checker && \\\n    make && \\\n    mv ./ev-checker /go/bin/ && \\\n    cp $GOPATH/bin/ev-checker /app/ && \\\n    cd .. && \\\n    rm -rf ev-checker && \\\n    # Compile AWS Certlint\n    cd $GOPATH && \\\n    git clone https://github.com/awslabs/certlint.git && \\\n    cd certlint/ext && \\\n    gem install public_suffix simpleidn && \\\n    ruby extconf.rb && \\\n    make && \\\n    # Copy TLS Observatory configuration\n    cp $GOPATH/src/github.com/mozilla/tls-observatory/version.json /app && \\\n    ln -s $GOPATH/src/github.com/mozilla/tls-observatory/conf /etc/tls-observatory && \\\n    ln -s $GOPATH/src/github.com/mozilla/tls-observatory/cipherscan /opt/cipherscan && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\nUSER app\n"
}