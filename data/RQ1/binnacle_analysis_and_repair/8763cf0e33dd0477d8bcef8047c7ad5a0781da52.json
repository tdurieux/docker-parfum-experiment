{
  "startTime": 1674240603242,
  "endTime": 1674240603514,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 7,
        "columnEnd": 113
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 7,
        "columnEnd": 76
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 7,
        "columnEnd": 96
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 7,
        "columnEnd": 143
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Generated by Neurodocker version 0.4.0\n# Timestamp: 2018-06-22 09:08:27 UTC\n#\n# Thank you for using Neurodocker. If you discover any issues\n# or ways to improve this software, please submit an issue or\n# pull request on our GitHub repository:\n#\n#     https://github.com/kaczmarj/neurodocker\n\nFROM neurodebian:stretch-non-free\n\nARG DEBIAN_FRONTEND=\"noninteractive\"\n\nENV LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    ND_ENTRYPOINT=\"/neurodocker/startup.sh\"\nRUN export ND_ENTRYPOINT=\"/neurodocker/startup.sh\" \\\n    && apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           apt-utils \\\n           bzip2 \\\n           ca-certificates \\\n           curl \\\n           locales \\\n           unzip \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n    && dpkg-reconfigure --frontend=noninteractive locales \\\n    && update-locale LANG=\"en_US.UTF-8\" \\\n    && chmod 777 /opt && chmod a+s /opt \\\n    && mkdir -p /neurodocker \\\n    && if [ ! -f \"$ND_ENTRYPOINT\" ]; then \\\n         echo '#!/usr/bin/env bash' >> \"$ND_ENTRYPOINT\" \\\n    &&   echo 'set -e' >> \"$ND_ENTRYPOINT\" \\\n    &&   echo 'if [ -n \"$1\" ]; then \"$@\"; else /usr/bin/env bash; fi' >> \"$ND_ENTRYPOINT\"; \\\n    fi \\\n    && chmod -R 777 /neurodocker && chmod a+s /neurodocker\n\nENTRYPOINT [\"/neurodocker/startup.sh\"]\n\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           fsl-core \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN sed -i '$isource /etc/fsl/fsl.sh' $ND_ENTRYPOINT\n\nRUN echo '{ \\\n    \\n  \"pkg_manager\": \"apt\", \\\n    \\n  \"instructions\": [ \\\n    \\n    [ \\\n    \\n      \"base\", \\\n    \\n      \"neurodebian:stretch-non-free\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"install\", \\\n    \\n      [ \\\n    \\n        \"fsl-core\" \\\n    \\n      ] \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"add_to_entrypoint\", \\\n    \\n      \"source /etc/fsl/fsl.sh\" \\\n    \\n    ] \\\n    \\n  ] \\\n    \\n}' > /neurodocker/neurodocker_specs.json\n\nRUN apt-get update \\\n    && apt-get -y --no-install-recommends install git g++ python python-numpy libeigen3-dev zlib1g-dev libqt4-opengl-dev libgl1-mesa-dev libfftw3-dev libtiff5-dev curl \\\n    && apt-get -y --no-install-recommends install git-core python-setuptools python-dev build-essential \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN easy_install pip \\\n    && pip install --no-cache-dir wheel numpy scipy nilearn matplotlib scikit-image nibabel \\\n    && pip install --no-cache-dir https://download.pytorch.org/whl/cpu/torch-1.0.0-cp27-cp27mu-linux_x86_64.whl\n\nRUN mkdir -p ~/.tractseg \\\n    && mkdir -p /code \\\n    && curl -f -SL -o /code/mrtrix3_RC3.tar.gz https://zenodo.org/record/1415322/files/mrtrix3_RC3.tar.gz?download=1\n\nRUN tar -zxvf /code/mrtrix3_RC3.tar.gz -C code \\\n    && /code/mrtrix3/set_path && rm /code/mrtrix3_RC3.tar.gz\n\n# Uncomment if we want to rebuild the following commands (otherwise using cache)\n#RUN echo \"rebuild\"\n\nRUN pip install --no-cache-dir --upgrade https://github.com/MIC-DKFZ/TractSeg/archive/master.zip\n\n# Sometimes fails if running everything from cache -> uncomment line \"RUN echo 'rebuild'\"\nRUN download_all_pretrained_weights\n\n# Does not work -> added mrtrix to path in python\nENV PATH /code/mrtrix3/bin:$PATH\n\n# Using this we can avoid having to call TractSeg each time -> but has problems finding bet then\n#ENTRYPOINT [\"TractSeg\"]\n\n"
}