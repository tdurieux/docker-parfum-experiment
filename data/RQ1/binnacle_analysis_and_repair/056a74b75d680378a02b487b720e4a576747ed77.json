{
  "startTime": 1674252218338,
  "endTime": 1674252219056,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 4,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tiredofit/alpine:3.8\nLABEL maintainer=\"Dave Conroy <dave@tiredofit.ca>\"\n\nENV ADMIN_PASS=admin \\\n    BACKEND=mdb \\\n    BACKUP_CONFIG_CRON_PERIOD=\"0 4 * * *\" \\\n    BACKUP_DATA_CRON_PERIOD=\"0 4 * * *\" \\\n    BACKUP_TTL=15 \\\n    CONFIG_PASS=config \\\n    DOMAIN=example.org \\\n    ENABLE_NGINX=false \\\n    ENABLE_READONLY_USER=false \\\n    ENABLE_REPLICATION=false \\\n    ENABLE_SMTP=FALSE \\\n    ENABLE_TLS=true \\\n    LOG_LEVEL=256 \\\n    OPENLDAP_VERSION=2.4.47 \\\n    ORGANIZATION=\"Example Organization\" \\\n    READONLY_USER_PASS=readonly \\\n    READONLY_USER_USER=readonly \\\n    REMOVE_CONFIG_AFTER_SETUP=false \\\n    SCHEMA2LDIF_VERSION=1.3 \\\n    SCHEMA_TYPE=nis \\\n    SSL_HELPER_PREFIX=ldap \\\n    TLS_CA_CRT_FILENAME=ca.pem \\\n    TLS_CIPHER_SUITE=\"ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:-DHE-DSS:-RSA:!aNULL:!MD5:!DSS:!SHA\" \\\n    TLS_CRT_FILENAME=cert.pem \\\n    TLS_ENFORCE=false \\\n    TLS_KEY_FILENAME=key.pem \\\n    TLS_VERIFY_CLIENT=try \\\n    ZABBIX_HOSTNAME=openldap-app\n\n\nCOPY CHANGELOG.md /tiredofit/\n\nRUN set -x && \\\n### Add OpenLDAP user and group\n    addgroup -g 389 ldap && \\\n    adduser -S -D -H -h /var/lib/openldap -s /sbin/nologin -G ldap -u 389 ldap && \\\n    \\\n### Fetch Build Dependencies\n    apk update && \\\n    apk add -t .openldap-build-deps \\\n        autoconf \\\n        automake \\\n        build-base \\\n        cracklib-dev \\\n        cyrus-sasl-dev \\\n        db-dev \\\n        git \\\n        groff \\\n        libressl-dev \\\n        libtool \\\n        m4 \\\n        mosquitto-dev \\\n        unixodbc-dev \\\n        util-linux-dev \\\n        && \\\n    \\\n### Fetch Runtime Dependencies\n    apk add -t .openldap-run-deps \\\n        cyrus-sasl \\\n        coreutils \\\n        cracklib \\\n        libressl \\\n        libltdl \\\n        libuuid \\\n        libintl \\\n        nginx \\\n        perl \\\n        sed \\\n        sudo \\\n        unixodbc \\\n        && \\\n    \\\n### Grab OpenLDAP Source, Alpine Patches and Check ppolicy module\n    \\\n    mkdir -p /tiredofit/openldap:`head -n 1 /tiredofit/CHANGELOG.md | awk '{print $2'}`/ && \\\n    curl -f -sSL ftp://ftp.openldap.org/pub/OpenLDAP/openldap-release/openldap-$OPENLDAP_VERSION.tgz | tar xvfz - --strip 1 -C /tiredofit/openldap:`head -n 1 /tiredofit/CHANGELOG.md | awk '{print $2'}`/ && \\\n    git clone --depth 1 git://git.alpinelinux.org/aports.git /tiredofit/openldap:`head -n 1 /tiredofit/CHANGELOG.md | awk '{print $2'}`/alpine && \\\n    mkdir -p contrib/slapd-modules/ppolicy-check-password && \\\n    git clone https://github.com/cedric-dufour/ppolicy-check-password /tiredofit/openldap:`head -n 1 /tiredofit/CHANGELOG.md | awk '{print $2'}`/contrib/slapd-modules/ppolicy-check-password && \\\n    mkdir -p contrib/slapd-modules/ppm && \\\n    git clone https://github.com/ltb-project/ppm /tiredofit/openldap:`head -n 1 /tiredofit/CHANGELOG.md | awk '{print $2'}`/contrib/slapd-modules/ppm && \\\n    cd /tiredofit/openldap:`head -n 1 /tiredofit/CHANGELOG.md | awk '{print $2'}`/alpine && \\\n    git filter-branch --prune-empty --subdirectory-filter main/openldap HEAD && \\\n    # Already applied\n    rm -rf CVE-2017-9287.patch && \\\n\n### Apply Patches\n    cd /tiredofit/openldap:`head -n 1 /tiredofit/CHANGELOG.md | awk '{print $2'}`/ && \\\n    for patch in ./alpine/*.patch; do echo \"** Applying $patch\"; patch -p1 < $patch; done && \\\n### Compile OpenLDAP\n    cd /tiredofit/openldap:`head -n 1 /tiredofit/CHANGELOG.md | awk '{print $2'}`/ && \\\n    libtoolize --force && \\\n    aclocal && \\\n    autoconf && \\\n\n    ./configure \\\n        --build=$CBUILD \\\n        --host=$CHOST \\\n        --prefix=/usr \\\n        --libexecdir=/usr/lib \\\n        --sysconfdir=/etc \\\n        --mandir=/usr/share/man \\\n        --localstatedir=/var/run/openldap \\\n        --enable-slapd \\\n        --enable-crypt \\\n        --enable-modules \\\n        --enable-dynamic \\\n        --enable-bdb=mod \\\n        --enable-dnssrv=mod \\\n        --enable-hdb=mod \\\n        --enable-ldap=mod \\\n        --enable-mdb=mod \\\n        --enable-meta=mod \\\n        --enable-monitor=yes \\\n        --enable-null=mod \\\n        --enable-passwd=mod \\\n        --enable-spasswd \\\n        --enable-relay=mod \\\n        --enable-shell=mod \\\n        --enable-sock=mod \\\n        --enable-sql=mod \\\n        --enable-overlays=mod \\\n        --with-tls=openssl \\\n        --with-cyrus-sasl \\\n        && \\\n\n    make DESTDIR=\"\" install && \\\n\n    ## Build MQTT overlay.\n    make DESTDIR=\"\" prefix=/usr libexec=/usr/lib -C contrib/slapd-modules/mqtt install && \\\n    #\\\n    ## Build passwd pbkdf2.\n    make DESTDIR=\"\" prefix=/usr libexecdir=/usr/lib -C contrib/slapd-modules/passwd/pbkdf2 install && \\\n    #\\\n    ## Build ppolicy-check Module\n    cd /tiredofit/openldap:`head -n 1 /tiredofit/CHANGELOG.md | awk '{print $2'}`/ && \\\n    make prefix=/usr libexecdir=/usr/lib -C contrib/slapd-modules/ppolicy-check-password LDAP_INC_PATH=/tiredofit/openldap:`head -n 1 /tiredofit/CHANGELOG.md | awk '{print $2'}` && \\\n    cp /tiredofit/openldap:`head -n 1 /tiredofit/CHANGELOG.md | awk '{print $2'}`/contrib/slapd-modules/ppolicy-check-password/check_password.so /usr/lib/openldap && \\\n    ## Build Alternative PPM Module\n    cd /tiredofit/openldap:`head -n 1 /tiredofit/CHANGELOG.md | awk '{print $2'}`/ && \\\n    make prefix=/usr libexecdir=/usr/lib -C contrib/slapd-modules/ppm LDAP_INC_PATH=/tiredofit/openldap:`head -n 1 /tiredofit/CHANGELOG.md | awk '{print $2'}` && \\\n    cp /tiredofit/openldap:`head -n 1 /tiredofit/CHANGELOG.md | awk '{print $2'}`/contrib/slapd-modules/ppm/ppm.so /usr/lib/openldap && \\\n\n### OpenLDAP Setup\n    ln -s /usr/lib/slapd /usr/sbin && \\\n    mkdir -p /usr/share/doc/openldap && \\\n    mv /etc/openldap/*.default /usr/share/doc/openldap && \\\n    rm -rf /etc/openldap/* && \\\n    mkdir -p /etc/openldap/sasl2 && \\\n    echo \"mech_list: plain external\" > /etc/openldap/sasl2/slapd.conf && \\\n    mkdir -p /etc/openldap/schema && \\\n    cp -R /tiredofit/openldap:`head -n 1 /tiredofit/CHANGELOG.md | awk '{print $2'}`/servers/slapd/schema/*.schema /etc/openldap/schema && \\\n    mkdir -p /run/openldap && \\\n    chown -R ldap:ldap /run/openldap && \\\n\n### SSL Helpers\n    curl -f -o /usr/sbin/cfssl -SL https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 && \\\n    chmod 700 /usr/sbin/cfssl && \\\n    curl -f -o /usr/sbin/cfssljson -SL https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 && \\\n    chmod 700 /usr/sbin/cfssljson && \\\n\n## Install Schema2LDIF\n    curl -f https://codeload.github.com/fusiondirectory/schema2ldif/tar.gz/${SCHEMA2LDIF_VERSION} | tar xvfz - --strip 1 -C /usr && \\\n    rm -rf /usr/Changelog && \\\n    rm -rf /usr/LICENSE && \\\n\n## Create Cracklib Dictionary\n    mkdir -p /usr/share/dict && \\\n    cd /usr/share/dict && \\\n    wget https://github.com/cracklib/cracklib/releases/download/v2.9.7/cracklib-words-2.9.7.gz && \\\n    create-cracklib-dict -o pw_dict cracklib-words-2.9.7.gz && \\\n    rm -rf cracklib-words-2.9.7.gz && \\\n\n### Cleanup\n    apk del \\\n        .openldap-build-deps \\\n        && \\\n    rm -rf /tiredofit \\\n           /var/cache/apk/*\n\n### Networking\nEXPOSE 80 389 636\n\n### Add Assets\nADD install /\n"
}