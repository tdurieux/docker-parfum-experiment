{
  "startTime": 1674245589422,
  "endTime": 1674245589769,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 42,
        "columnStart": 25,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\n\nWORKDIR /gtrader\n\nENV PAXIFY 'setfattr -n user.pax.flags -v \"m\"'\nENV PAX_PHP \"$PAXIFY /usr/bin/php\"\nENV PAX_NODE \"$PAXIFY /usr/bin/nodejs\"\n\nENV SUG \"su -s /bin/sh -m gtrader -c\"\nENV CACHE /tmp/cache\n\n\nRUN DEBIAN_FRONTEND=noninteractive LC_ALL=C.UTF-8 \\\n    apt-get update && apt-get install -y --no-install-recommends \\\n    software-properties-common dirmngr gnupg locales \\\n    && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C \\\n    && add-apt-repository ppa:ondrej/php \\\n    && apt-get update && apt-get install -y --no-install-recommends \\\n                                            php-dev \\\n                                        php-cli \\\n                                    php-fpm \\\n                                php-mysql \\\n                            php-gd \\\n                        php-mcrypt \\\n                    php-xml \\\n                php-zip \\\n            php-mbstring \\\n        php-pear \\\n            curl \\\n                openssl \\\n                    ca-certificates \\\n                        git \\\n                            unzip \\\n                                mysql-client \\\n                                    libfann2 \\\n                                libfann-dev \\\n                            make \\\n                        attr \\\n                    nano \\\n                cron \\\n            logrotate \\\n        gnupg \\\n    runit && rm -rf /var/lib/apt/lists/*;\n\n\nRUN set -eux; \\\n    echo \"############### PECL ##########################\" \\\n    && pecl channel-update pecl.php.net \\\n    && pecl install trader \\\n    && pecl install fann \\\n    \\\n    \\\n    && echo \"############### GET COMPOSER ##################\" \\\n    && $PAX_PHP \\\n    && curl -f -sL https://getcomposer.org/installer | php -- --install-dir /usr/bin --filename composer \\\n\n\n    && echo \"############### GET NODE ######################\" \\\n    && curl -f -sL https://deb.nodesource.com/setup_7.x | bash - \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y nodejs \\\n\n\n    && echo \"############### CLEAN UP ######################\" \\\n    && apt-get -y remove libfann-dev make php-dev software-properties-common \\\n    dirmngr gnupg locales \\\n    && apt-get -y autoremove && apt-get clean \\\n    && rm -rfv /var/cache/apt/* /var/lib/apt/lists/* /tmp/pear*\n\nCOPY . /gtrader\n\nRUN    echo \"############### FILES #########################\" \\\n    && cp -Rv /gtrader/docker-fs/* / \\\n    && useradd -G www-data -d /gtrader -s /bin/bash -M gtrader \\\n    && for file in laravel schedule trainingManager bots; \\\n        do touch /gtrader/storage/logs/$file.log; \\\n    done \\\n    && chown -Rc gtrader:gtrader /gtrader \\\n    && for dir in /gtrader/storage /gtrader/bootstrap/cache; do \\\n            chgrp -Rc www-data $dir; \\\n            find $dir -type d -exec chmod -c 775 {} \\;; \\\n            find $dir -type f -exec chmod -c 664 {} \\;; \\\n        done \\\n    && phpenmod pdo_mysql trader fann \\\n    \\\n    \\\n    && echo \"############### COMPOSER INSTALL ##############\" \\\n    && $PAX_PHP \\\n    && $SUG \"mkdir -p $CACHE/composer && COMPOSER_CACHE_DIR=$CACHE/composer composer install\" \\\n    \\\n    \\\n    && echo \"############### NPM INSTALL ###################\" \\\n    && $PAX_NODE \\\n    && $SUG \"mkdir $CACHE/npm && npm_config_cache=$CACHE/npm npm install\" \\\n    && rm -rfv $CACHE \\\n    \\\n    \\\n    && echo \"############### ARTISAN #######################\" \\\n    && $SUG \"cp docker.env .env\" \\\n    && $PAX_PHP \\\n    && $SUG \"php artisan key:generate\" \\\n    && $PAX_PHP \\\n    && $SUG \"php artisan optimize\" \\\n    \\\n    \\\n    && echo \"############### NPM RUN DEV ###################\" \\\n    && $PAX_NODE \\\n    && $SUG \"HOME=/tmp npm run dev\" \\\n    && rm -rfv /tmp/npm* \\\n    \\\n    \\\n    && echo \"############### CRONTAB #######################\" \\\n    && $SUG \"crontab -u gtrader crontab\"\n\nEXPOSE 9000\n\nCMD [\"/usr/bin/runsvdir\", \"/etc/service\"]\n"
}