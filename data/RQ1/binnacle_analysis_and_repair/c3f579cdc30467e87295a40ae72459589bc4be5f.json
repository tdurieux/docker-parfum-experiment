{
  "startTime": 1674244566084,
  "endTime": 1674244566590,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 9,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 9,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 9,
        "columnEnd": 73
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 9,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 129,
        "lineEnd": 141,
        "columnStart": 9,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 9,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\n\nLABEL maintainer=\"phithon <root@leavesongs.com>\"\n\n# persistent / runtime deps\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      ca-certificates \\\n      curl \\\n      librecode0 \\\n      libmysqlclient-dev \\\n      libsqlite3-0 \\\n      libxml2 \\\n    && apt-get clean \\\n    && rm -r /var/lib/apt/lists/*\n\n# phpize deps\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      autoconf \\\n      file \\\n      g++ \\\n      gcc \\\n      libc-dev \\\n      make \\\n      pkg-config \\\n      re2c \\\n    && apt-get clean \\\n    && rm -r /var/lib/apt/lists/*\n\nENV PHP_INI_DIR /usr/local/etc/php\nRUN mkdir -p $PHP_INI_DIR/conf.d\n\n# compile openssl, otherwise --with-openssl won't work\nRUN OPENSSL_VERSION=\"1.0.2k\" \\\n      && cd /tmp \\\n      && mkdir openssl \\\n      && curl -f -sL \"https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz\" -o openssl.tar.gz \\\n      && tar -xzf openssl.tar.gz -C openssl --strip-components=1 \\\n      && cd /tmp/openssl \\\n      && ./config -fPIC && make && make install \\\n      && rm -rf /tmp/* && rm openssl.tar.gz\n\nENV PHP_VERSION 5.4.1\n\n##<autogenerated>##\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tapache2 \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nENV APACHE_CONFDIR /etc/apache2\nENV APACHE_ENVVARS $APACHE_CONFDIR/envvars\n\nRUN set -ex \\\n\t\\\n# generically convert lines like\n#   export APACHE_RUN_USER=www-data\n# into\n#   : ${APACHE_RUN_USER:=www-data}\n#   export APACHE_RUN_USER\n# so that they can be overridden at runtime (\"-e APACHE_RUN_USER=...\")\n\t&& sed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/' \"$APACHE_ENVVARS\" \\\n\t\\\n# setup directories and permissions\n\t&& . \"$APACHE_ENVVARS\" \\\n\t&& for dir in \\\n\t\t\"$APACHE_LOCK_DIR\" \\\n\t\t\"$APACHE_RUN_DIR\" \\\n\t\t\"$APACHE_LOG_DIR\" \\\n\t\t/var/www/html \\\n\t; do \\\n\t\trm -rvf \"$dir\" \\\n\t\t&& mkdir -p \"$dir\" \\\n\t\t&& chown -R \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$dir\"; \\\n\tdone\n\n# Apache + PHP requires preforking Apache for best results\nRUN a2dismod mpm_event && a2enmod mpm_prefork\n\n# logs should go to stdout / stderr\nRUN set -ex \\\n\t&& . \"$APACHE_ENVVARS\" \\\n\t&& ln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\" \\\n\t&& ln -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\" \\\n\t&& ln -sfT /dev/stdout \"$APACHE_LOG_DIR/other_vhosts_access.log\"\n\n# PHP files should be handled by PHP, and should be preferred over any other file type\nRUN { \\\n\t\techo '<FilesMatch \\.php$>'; \\\n\t\techo '\\tSetHandler application/x-httpd-php'; \\\n\t\techo '</FilesMatch>'; \\\n\t\techo; \\\n\t\techo 'DirectoryIndex disabled'; \\\n\t\techo 'DirectoryIndex index.php index.html'; \\\n\t\techo; \\\n\t\techo '<Directory /var/www/>'; \\\n\t\techo '\\tOptions -Indexes'; \\\n\t\techo '\\tAllowOverride All'; \\\n\t\techo '</Directory>'; \\\n\t} | tee \"$APACHE_CONFDIR/conf-available/docker-php.conf\" \\\n\t&& a2enconf docker-php\n\nENV PHP_EXTRA_BUILD_DEPS apache2-dev\nENV PHP_EXTRA_CONFIGURE_ARGS --with-apxs2\n##</autogenerated>##\n\nRUN set -ex \\\n    && mkdir /tmp/libxml \\\n    && cd /tmp/libxml \\\n    && curl -f -#sSL https://xmlsoft.org/sources/libxml2-2.8.0.tar.gz | tar xz --strip-components=1 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && make clean \\\n    && rm -rf /tmp/libxml\n\n# php 5.4.1 needs older autoconf\n# --enable-mysqlnd is included below because it's harder to compile after the fact the extensions are (since it's a plugin for several extensions, not an extension in itself)\nRUN buildDeps=\" \\\n                autoconf2.13 \\\n                libcurl4-openssl-dev \\\n                libreadline6-dev \\\n                librecode-dev \\\n                libsqlite3-dev \\\n                libssl-dev \\\n                xz-utils \\\n                apache2-dev \\\n      \" \\\n      && set -x \\\n      && apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \\\n      && mkdir -p /usr/src/php \\\n      && curl -f -#SL \"https://museum.php.net/php5/php-${PHP_VERSION}.tar.gz\" | tar zx -C /usr/src/php --strip-components=1 \\\n      && cd /usr/src/php \\\n      && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n            --with-config-file-path=\"$PHP_INI_DIR\" \\\n            --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \\\n            --disable-cgi \\\n            --enable-mysqlnd \\\n            --enable-mbstring \\\n            --with-mysql \\\n            --with-curl \\\n            --with-openssl=/usr/local/ssl \\\n            --with-readline \\\n            --with-recode \\\n            --with-zlib \\\n            --with-apxs2 \\\n      && make -j\"$(nproc)\" \\\n      && make install \\\n      && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \\\n      && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps \\\n      && make clean && rm -rf /usr/src/php\n\nCOPY docker-php-* apache2-foreground /usr/local/bin/\n\nWORKDIR /var/www/html\n\nEXPOSE 80\n\nENTRYPOINT [\"docker-php-entrypoint\"]\nCMD [\"apache2-foreground\"]"
}