{
  "startTime": 1674238657551,
  "endTime": 1674238657978,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 81
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 215
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 215
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 215
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\nMAINTAINER Lukas Matt <lukas@zauberstuhl.de>\n\nENV DEBIAN_FRONTEND noninteractive\nENV RAILS_ENV production\nENV DISABLE_DATABASE_ENVIRONMENT_CHECK 1\n\nRUN apt-get update && apt-get -y --no-install-recommends install libreadline-dev cmake build-essential libssl-dev libcurl4-openssl-dev libxml2-dev libxslt-dev imagemagick ghostscript curl libmagickwand-dev git libpq-dev redis-server nodejs postgresql-client && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y upgrade\n\n\nRUN mkdir /tmp/ruby && cd /tmp/ruby \\\n  && curl -f -L --progress https://cache.ruby-lang.org/pub/ruby/2.4/ruby-2.4.2.tar.gz | tar xz \\\n  && cd ruby-2.4.2 \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-install-rdoc \\\n  && make -j2 \\\n  && make install\n\nRUN gem install bundler\n\nRUN git clone --depth 1 https://github.com/diaspora/diaspora.git -b master\n\nWORKDIR /diaspora\n\nRUN cp config/database.yml.example config/database.yml \\\n  && cp config/diaspora.yml.example config/diaspora.yml\n\nRUN bundle install --with postgresql\n\nRUN sed -i \"s/#rails_environment:.*/rails_environment: 'production'/\" config/diaspora.yml\nRUN sed -i \"s/#url:/url:/\" config/diaspora.yml\nRUN sed -i \"0,/#certificate_authorities/ s/#certificate_authorities:/certificate_authorities:/\" config/diaspora.yml\nRUN sed -i \"s/#require_ssl:.*/require_ssl: false/\" config/diaspora.yml\nRUN sed -i \"s/#serve:.*/serve: true/\" config/diaspora.yml\n\nRUN bundle exec rails assets:precompile\n\nRUN curl -f -LO http://download.redis.io/redis-stable.tar.gz\nRUN tar -xvzf redis-stable.tar.gz && rm redis-stable.tar.gz\nRUN cd redis-stable && make\nRUN cd redis-stable && make install\nRUN rm -rf redis-stable\n\nCOPY schema.sql /diaspora/schema.sql\nCOPY start.sh /start.sh\n\nCMD [\"/bin/bash\", \"/start.sh\"]\n"
}