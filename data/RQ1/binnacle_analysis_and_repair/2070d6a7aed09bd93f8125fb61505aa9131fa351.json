{
  "startTime": 1674251733580,
  "endTime": 1674251733637,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 187
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Source Code Form is subject to the terms of the Mozilla Public\n# License, v. 2.0. If a copy of the MPL was not distributed with this\n# file, You can obtain one at https://mozilla.org/MPL/2.0/.\n\nFROM alpine:latest AS symbolizer-build\n\nLABEL maintainer Jesse Schwartzentruber <truber@mozilla.com>\n\nWORKDIR /out\n\n# install build requirements\nRUN apk add --no-cache \\\n        curl \\\n        p7zip\n\n# download and extract clang\nRUN curl -f --retry 5 -L https://index.taskcluster.net/v1/task/gecko.cache.level-3.toolchains.v3.linux64-clang-8-android-cross.latest/artifacts/public/build/clang.tar.xz -o /tmp/clang.tar.xz \\\n    && tar xJf /tmp/clang.tar.xz clang/lib64/clang/8.0.0/lib/linux/ \\\n    && rm /tmp/clang.tar.xz\n\n# download symbolizer from build server\nRUN curl -f --retry 5 -LO https://build.fuzzing.mozilla.org/builds/android-x86_64-llvm-symbolizer\n\nFROM mozillasecurity/grizzly:latest\n\nUSER root\n\nARG BUILD_CLANG_VERSION=8.0.0\nENV CLANG_VERSION ${BUILD_CLANG_VERSION}\nENV CLANG_SRC clang/lib64/clang/${CLANG_VERSION}\nENV CLANG_DEST android-ndk/toolchains/llvm/prebuilt/linux-x86_64/lib64/clang/${CLANG_VERSION}\n\nCOPY recipes/ /tmp/recipes/\nRUN /tmp/recipes/all.sh \\\n    && rm -rf /tmp/recipes\nCOPY recipes/kvm.sh /home/worker/\n\nCOPY --from=symbolizer-build \\\n    /out/android-x86_64-llvm-symbolizer \\\n    /home/worker/android-ndk/prebuilt/android-x86_64/llvm-symbolizer/llvm-symbolizer\nCOPY --from=symbolizer-build \\\n    /out/${CLANG_SRC}/lib/linux/libclang_rt.asan-x86_64-android.so \\\n    /home/worker/${CLANG_DEST}/lib/linux/libclang_rt.asan-x86_64-android.so\nCOPY --from=symbolizer-build \\\n    /out/${CLANG_SRC}/lib/linux/libclang_rt.asan-i686-android.so \\\n    /home/worker/${CLANG_DEST}/lib/linux/libclang_rt.asan-i686-android.so\nRUN chown -R worker:worker /home/worker/android-ndk\n\nCMD [\"/bin/sh\", \"-c\", \"/home/worker/kvm.sh && /home/worker/launch-grizzly.sh\"]\n"
}