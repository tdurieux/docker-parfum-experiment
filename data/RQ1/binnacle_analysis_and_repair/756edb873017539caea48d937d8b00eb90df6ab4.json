{
  "startTime": 1674239243982,
  "endTime": 1674239244314,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 42,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 42,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn6-runtime-ubuntu16.04\nMAINTAINER \"Max Woolf\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y wget ca-certificates \\\n    git curl vim python3-dev python3-pip libopencv-dev python-opencv \\\n    libfreetype6-dev libpng12-dev libhdf5-dev openmpi-bin \\\n    pkg-config zip g++ zlib1g-dev unzip build-essential \\\n    openjdk-8-jdk openjdk-8-jre-headless python-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 --no-cache-dir install numpy pandas sklearn matplotlib seaborn jupyter pyyaml h5py ipykernel\n\n# Compile TensorFlow w/ CPU instructions\n# https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/docker/Dockerfile.devel\nRUN echo \"startup --batch\" >>/etc/bazel.bazelrc\nRUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" \\\n    >>/etc/bazel.bazelrc\nENV BAZEL_VERSION 0.5.4\nWORKDIR /\nRUN mkdir /bazel && \\\n    cd /bazel && \\\n    curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE && \\\n    chmod +x bazel-*.sh && \\\n    ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    cd / && \\\n    rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n\nRUN git clone https://github.com/tensorflow/tensorflow.git && \\\n    cd tensorflow && \\\n    git checkout r1.4\nWORKDIR /tensorflow\n\nENV CI_BUILD_PYTHON python3\n\n# Must set bazel commands:\n# https://stackoverflow.com/questions/41293077/how-to-compile-tensorflow-with-sse4-2-and-avx-instructions\n\nRUN tensorflow/tools/ci_build/builds/configured CPU \\\n    bazel build -c opt --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" \\\n        --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-mfpmath=both --copt=-msse4.1 --copt=-msse4.2 \\\n        tensorflow/tools/pip_package:build_pip_package && \\\n    bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip && \\\n    pip --no-cache-dir install --upgrade /tmp/pip/tensorflow-*.whl && \\\n    rm -rf /tmp/pip && \\\n    rm -rf /root/.cache\n\n# Keras\nRUN pip3 install --no-cache-dir git+https://github.com/fchollet/keras.git\n\n# CNTK\nRUN pip3 install --no-cache-dir https://cntk.ai/PythonWheel/CPU-Only/cntk-2.2-cp35-cp35m-linux_x86_64.whl\n\n# textgenrnn (must be installed after Keras)\n# RUN pip3 --no-cache-dir install textgenrnn reactionrnn\n\n# Jupyter and Tensorboard ports\nEXPOSE 8888 6006\n\n# https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/docker/\nCOPY jupyter_notebook_config.py /root/.jupyter/\nCOPY run_jupyter.sh /\n\n# Create folder for Keras i/o\nWORKDIR /keras\nVOLUME /keras\n\n# Set CNTK backend for Keras\nENV KERAS_BACKEND=cntk\n\n# Set locale to UTF-8 for text:\n# https://askubuntu.com/a/601498\nRUN apt-get clean && apt-get -y update && apt-get install --no-install-recommends -y locales && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'"
}