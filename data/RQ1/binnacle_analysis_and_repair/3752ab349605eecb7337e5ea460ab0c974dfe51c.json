{
  "startTime": 1674250078532,
  "endTime": 1674250078715,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 19,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASEOS_VER\nFROM python:2-$BASEOS_VER\n\nARG APP_VER\n\n######## changelog\n# 01 [x] test new apk adds: docker run --rm -it alpine sh, docker run --rm -it sitkevij/opencv python3 -c 'print(\"Hello World\")'\n# 02 [x] linux/auxvec.h: No such file or directory - https://github.com/mirage/mirage-block-unix/issues/45\n# 03 [x] alpine-sdk -> build-base\n# 04 [ ] migrate @testing to @community\n# 05 [x] alpine:3.5 -> alpine:3.6\n# 06 [x] python3-dev -> python  \n# 07 [x] libjasper -> libjasper-dev\n# 08 [ ] use of virtual and/or apk del with edge/testing results in unsatisfiable constraints https://github.com/gliderlabs/docker-alpine/issues/205\n# 09 [x] add improved opencv cmake build flags\n# 10 [ ] docker run --rm -it sitkevij/opencv python -c \"import cv2 print cv2.getBuildInformation()\" && /usr/local/bin/opencv_version\n# 11 [ ] review Dockerfile against https://github.com/opencv/opencv/blob/master/CMakeLists.txt\n# 12 [ ] Set runtime path of \"/usr/local/lib/python2.7/site-packages/cv2.so\" to \"/usr/local/lib\"\n# 13 [x] support Docker 17.05 ARG feature now built as opencv:3.3.0-alpine:3.5\n# 14 [x] support -D PYTHON build params, i.e. PYTHON_PACKAGES_PATH=/usr/lib/python2.7/site-packages/ -D PYTHON_PACKAGES_PATH=/usr/local/lib/python2.7/site-packages/ \\ https://stackoverflow.com/questions/17287250/install-opencv-for-python-multiple-python-versions\n#\n# Python 2:\n# --     Interpreter:                 /usr/bin/python (ver 2.7.13)\n# --     Libraries:                   /usr/lib/libpython2.7.so (ver 2.7.13)\n# --     numpy:                       /usr/lib/python2.7/site-packages/numpy/core/include (ver 1.13.3)\n# --     packages path:               lib/python2.7/site-packages\n########\n\nLABEL org.label-schema.name=\"opencv\" \\\n      org.label-schema.description=\"Small OpenCV (Open Source Computer Vision Library) Docker Image for Alpine Linux\" \\\n      org.label-schema.url=\"https://hub.docker.com/r/sitkevij/opencv/\" \\\n      org.label-schema.usage=\"https://github.com/sitkevij/opencv/blob/master/README.md\" \\\n      org.label-schema.vcs-url=\"https://github.com/sitkevij/ffmpeg\" \\\n      org.label-schema.vcs-url=\"https://github.com/sitkevij/opencv\" \\\n      org.label-schema.vendor=\"sitkevij\" \\\n      org.label-schema.version=\"3.3.0\" \\\n      maintainer=\"https://github.com/sitkevij\"\n\n# to exec: docker run --rm sitkevij/opencv sh \"~/unit-test.sh\"\nCOPY unit-test.sh ~/\n\nENV CPUCOUNT 1\nRUN CPUCOUNT=`cat /proc/cpuinfo | grep '^processor.*:' | wc -l` && echo \"CPUCOUNT=${CPUCOUNT}\"\n\nRUN echo -e '@edge http://nl.alpinelinux.org/alpine/edge/main\\n@testing http://nl.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories \\\n  && apk update && apk add --no-cache ca-certificates && update-ca-certificates \\\n  && apk upgrade \\\n  && apk add --no-cache \\ \n    openssl \\\n    build-base \\\n    linux-headers \\ \n    unzip \\ \n    wget \\ \n    cmake \\ \n    # git \\ \n    # gnutls \\\n    # python \\\n    # python-dev \\\n    # py-pip \\\n    # python3-dev \\\n    libtbb@testing \\\n    libtbb-dev@testing \\\n    libjpeg \\\n    libjpeg-turbo-dev \\\n    libpng-dev \\ \n    tiff-dev \\\n    libjasper \\\n    # && pip install --upgrade pip \\\n    && pip install --no-cache-dir numpy\nRUN cd \\\n    && wget https://github.com/Itseez/opencv/archive/${APP_VER}.zip\nRUN cd \\\n    && unzip ${APP_VER}.zip \\\n    && cd opencv-${APP_VER} \\\n    && mkdir build \\\n    && cd build \\\n    && cmake \\ \n        -D CMAKE_BUILD_TYPE=RELEASE \\\n        -D CMAKE_INSTALL_PREFIX=/usr/local \\\n        -D BUILD_opencv_python2=ON \\\n        # -D BUILD_NEW_PYTHON_SUPPORT=ON \\\n        # -D PYTHON_EXECUTABLE=/usr/bin/python \\\n        # -D PYTHON_INCLUDE=/usr/include/python2.7/ \\\n        # -D PYTHON_LIBRARY=/usr/lib/libpython2.7.so \\\n        # -D PYTHON_PACKAGES_PATH=/usr/lib/python2.7/site-packages/ \\\n        # -D PYTHON_NUMPY_INCLUDE_DIRS=/usr/lib/python2.7/site-packages/numpy/core/include/ \\\n        -D INSTALL_C_EXAMPLES=OFF \\\n        -D INSTALL_PYTHON_EXAMPLES=OFF \\\n        -D BUILD_DOCS=OFF \\\n        -D BUILD_TESTS=OFF \\\n        -D BUILD_PERF_TESTS=OFF \\\n        -D WITH_TBB=ON \\\n        -D WITH_FFMPEG=NO \\ \n        -D WITH_IPP=NO \\\n        -D WITH_OPENEXR=NO \\\n        ..  \\\n    && make -j${CPUCOUNT} \\\n    && make install \\\n    && cd \\\n    && rm ${APP_VER}.zip \\\n    && rm -rf /var/cache/apk/*\n\n# CMD cp /usr/local/lib/python2.7/site-packages/cv2.so /usr/lib/python2.7/site-packages/\n\nCMD cp /root/opencv-3.3.0/build/lib/cv2.so /usr/local/lib/python2.7/site-packages/\n\n# /usr/lib/python2.7/site-packages\n\nENV PYTHONPATH /usr/local/lib/python2.7/site-packages:$PYTHONPATH"
}