{
  "startTime": 1674235395095,
  "endTime": 1674235395555,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 62,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 53,
        "columnStart": 22,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:7.0-runtime-ubuntu14.04\nMAINTAINER Varun Suresh <fab.varun@gmail.com>\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cmake \\\n        git \\\n        wget \\\n        zip \\\n        unzip \\\n        libatlas-base-dev \\\n        libboost-all-dev \\\n        libgflags-dev \\\n        libgoogle-glog-dev \\\n        libhdf5-serial-dev \\\n        libleveldb-dev \\\n        liblmdb-dev \\\n        libopencv-dev \\\n        libprotobuf-dev \\\n        libsnappy-dev \\\n        protobuf-compiler \\\n        python-dev \\\n        python-numpy \\\n        python-pip \\\n        python-setuptools \\\n        python-scipy && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV CTPN_ROOT=/opt/ctpn\nWORKDIR $CTPN_ROOT\n\nRUN git clone --depth 1 https://github.com/tianzhi0549/CTPN.git\nWORKDIR $CTPN_ROOT/CTPN/caffe\n\n# Missing \"packaging\" package\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir packaging\n\nRUN cd python && for req in $(cat requirements.txt) pydot; do pip install --no-cache-dir $req; done && cd ..\nRUN git clone https://github.com/NVIDIA/nccl.git\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    cuda=7.0-28 && rm -rf /var/lib/apt/lists/*;\nWORKDIR /\n\n# Download the CUDA drivers from https://developer.nvidia.com/rdp/cudnn-archive and place it here  :\nADD cudnn-7.0-linux-x64-v3.0.8-prod.tgz /\nWORKDIR /cuda\nRUN cp -P include/cudnn.h /usr/include\nRUN cp -P lib64/libcudnn* /usr/lib/x86_64-linux-gnu/\n\nWORKDIR $CTPN_ROOT/CTPN/caffe\nRUN cp Makefile.config.example Makefile.config\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    vim && rm -rf /var/lib/apt/lists/*;\nRUN cd nccl && make -j install && cd .. && rm -rf nccl && \\\n    mkdir build && cd build && \\\n    cmake -DUSE_CUDNN=1 .. && \\\n    WITH_PYTHON_LAYER=1 make -j\"$(nproc)\" && make pycaffe\n\n# Set the environment variables so that the paths are correctly configured\nENV PYCAFFE_ROOT $CTPN_ROOT/CTPN/caffe/python\nENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH\nENV PATH $CTPN_ROOT/CTPN/caffe/build/tools:$PYCAFFE_ROOT:$PATH\nRUN echo \"$CTPN_ROOT/CTPN/caffe/build/lib\" >> /etc/ld.so.conf.d/caffe.conf && ldconfig\n\n# To make sure the python layer builds - Need to figure out a cleaner way to do this.\nRUN cp $CTPN_ROOT/CTPN/src/layers/* $CTPN_ROOT/CTPN/caffe/src/caffe/layers/\nRUN cp $CTPN_ROOT/CTPN/src/*.py $CTPN_ROOT/CTPN/caffe/src/caffe/\nRUN cp -r $CTPN_ROOT/CTPN/src/utils $CTPN_ROOT/CTPN/caffe/src/caffe/\n\n# Install Opencv - 2.4.12 :\n\nRUN cd ~ && \\\n    mkdir -p ocv-tmp && \\\n    cd ocv-tmp && \\\n    wget https://github.com/Itseez/opencv/archive/2.4.12.zip  && \\\n    unzip 2.4.12.zip && \\\n    cd opencv-2.4.12 && \\\n    mkdir release && \\\n    cd release && \\\n    cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n          -D CMAKE_INSTALL_PREFIX=/usr/local \\\n          -D BUILD_PYTHON_SUPPORT=ON \\\n          .. && \\\n    make -j8 && \\\n    make install && \\\n    rm -rf ~/ocv-tmp\n\nWORKDIR $CTPN_ROOT/CTPN\nRUN make\n"
}