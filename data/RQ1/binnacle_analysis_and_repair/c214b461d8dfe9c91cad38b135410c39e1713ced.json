{
  "startTime": 1674252186157,
  "endTime": 1674252186737,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 1,
        "columnEnd": 114
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 1,
        "columnEnd": 95
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 1,
        "columnEnd": 137
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 1,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 22,
        "columnStart": 1,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 21,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\nMAINTAINER Zhanwei Wang <wangzw@wangzw.org>\n\n# install document with yum\nRUN sed -i 's/tsflags=nodocs//g' /etc/yum.conf\n\n# add yum repo\nRUN curl -f -L \"https://bintray.com/wangzw/rpm/rpm\" -o /etc/yum.repos.d/bintray-wangzw-rpm.repo\n\n# install all software we need\nRUN yum -y swap -- remove systemd-container systemd-container-libs -- install systemd systemd-libs && \\\n yum install -y epel-release && \\\n yum makecache && \\\n yum install -y man passwd sudo tar which git mlocate links make bzip2 net-tools \\\n autoconf automake libtool m4 gcc gcc-c++ gdb bison flex cmake gperf maven indent \\\n libuuid-devel krb5-devel libgsasl-devel expat-devel libxml2-devel \\\n perl-ExtUtils-Embed pam-devel python-devel libcurl-devel snappy-devel \\\n thrift-devel libyaml-devel libevent-devel bzip2-devel openssl-devel \\\n openldap-devel protobuf-devel readline-devel net-snmp-devel apr-devel \\\n libesmtp-devel xerces-c-devel python-pip json-c-devel libhdfs3-devel \\\n apache-ivy java-1.7.0-openjdk-devel \\\n openssh-clients openssh-server && \\\n yum clean all && rm -rf /var/cache/yum\n\n# install python module\nRUN yum makecache && yum install -y postgresql-devel && \\\n pip --retries=50 --no-cache-dir --timeout=300 install pg8000 simplejson unittest2 pycrypto pygresql pyyaml lockfile paramiko psi && \\\n pip --retries=50 --no-cache-dir --timeout=300 install http://darcs.idyll.org/~t/projects/figleaf-0.6.1.tar.gz && \\\n pip --retries=50 --no-cache-dir --timeout=300 install http://sourceforge.net/projects/pychecker/files/pychecker/0.8.19/pychecker-0.8.19.tar.gz/download && \\\n yum erase -y postgresql postgresql-libs postgresql-devel && \\\n yum clean all && rm -rf /var/cache/yum\n\n# setup ssh server and keys for root\nRUN sshd-keygen && \\\n ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa && \\\n cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys && \\\n chmod 0600 ~/.ssh/authorized_keys\n\n# setup JAVA_HOME for all users\nRUN echo \"#!/bin/sh\" > /etc/profile.d/java.sh && \\\n echo \"export JAVA_HOME=/etc/alternatives/java_sdk\" >> /etc/profile.d/java.sh && \\\n chmod a+x /etc/profile.d/java.sh\n\n# install libyarn\nRUN mkdir -p /tmp/build && \\\n cd /tmp/build && git clone --depth=1 https://github.com/apache/incubator-hawq.git . && cd depends/libyarn && mkdir build && cd build && \\\n ../bootstrap --prefix=/usr && make && make install && ldconfig && \\\n rm -rf /tmp/build\n\n# create user gpadmin since HAWQ cannot run under root\nRUN groupadd -g 1000 gpadmin && \\\n useradd -u 1000 -g 1000 gpadmin && \\\n echo \"gpadmin  ALL=(ALL)       NOPASSWD: ALL\" > /etc/sudoers.d/gpadmin\n\n# sudo should not require tty\nRUN sed -i -e 's|Defaults    requiretty|#Defaults    requiretty|' /etc/sudoers\n\n# set USER env\nRUN echo \"#!/bin/bash\" > /etc/profile.d/user.sh && \\\n echo \"export USER=\\`whoami\\`\" >> /etc/profile.d/user.sh && \\\n chmod a+x /etc/profile.d/user.sh\n\nENV BASEDIR /data\nRUN mkdir -p /data && chmod 777 /data\n\nUSER gpadmin\n\n# setup ssh client keys for gpadmin\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa && \\\n cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys && \\\n chmod 0600 ~/.ssh/authorized_keys\n\nWORKDIR /data\n"
}