{
  "startTime": 1674243082738,
  "endTime": 1674243082874,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 1,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 1,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 1,
        "columnEnd": 148
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 1,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 1,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 1,
        "columnEnd": 148
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# cd ~/dkr && docker build -t golos .\n# docker run -p 0.0.0.0:2001:2001 -v $PWD/data:/golos -d -t golos\n\nFROM ubuntu:xenial\nRUN apt-get update && \\\n\tapt-get install --no-install-recommends -y gcc-4.9 g++-4.9 cmake make libbz2-dev libdb++-dev libdb-dev && \\\n\tapt-get install --no-install-recommends -y libssl-dev openssl libreadline-dev autoconf libtool git && \\\n\tapt-get install --no-install-recommends -y autotools-dev build-essential g++ libbz2-dev libicu-dev python-dev wget doxygen python3 python3-dev libboost-all-dev curl screen && \\\n        apt-get clean -qy && rm -rf /var/lib/apt/lists/*;\n# P2P (seed) port\nEXPOSE 2229\n# RPC ports\nEXPOSE 5000\nEXPOSE 8090\nEXPOSE 8091\n\nRUN cd ~ && \\\n\tgit clone https://github.com/nxtpool/golos.git && \\\n\tcd golos && \\\n\tgit checkout mytestnet && \\\n\tgit submodule update --init --recursive \\\n        && cd ~/golos && \\\n\tcmake -DCMAKE_BUILD_TYPE=Release . && \\\n\tmake -j4 && make install\nRUN cp ~/golos/programs/golosd/snapshot5392323.json /usr/local/bin/snapshot5392323.json\n#RUN rf -rf ~/golos\n\nVOLUME /golos\nWORKDIR /golos\n\nADD ./start.sh /start.sh\n\nRUN echo \"Please configure me! You need to mount a data directory onto /golos of this container to it to function correctly. (if you're using golos-in-a-box most of this is handled automatically)\"\nCMD [\"/bin/bash\", \"/start.sh\"]"
}