{
  "startTime": 1674244592545,
  "endTime": 1674244592716,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8-alpine AS base\n\nRUN apk add --no-cache --update tini curl \\\n  && rm -r /var/cache\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nWORKDIR /home/node/app\n\nFROM base AS dependencies\n\nENV NODE_ENV production\n\nCOPY package.json yarn.lock ./\nRUN yarn install --production && yarn cache clean;\n\n# elm doesn't work under alpine 6 or 8\nFROM node:6-slim AS elm-build\nWORKDIR /home/node/app\n\nRUN npm install -g elm --silent && npm cache clean --force;\n\nCOPY elm-package.json ./\nRUN elm package install -y\n\nCOPY . .\n\nRUN elm make Main.elm --output=client/index.js\n\nFROM base AS release\n\nWORKDIR /home/node/app\n\nCOPY --from=dependencies /home/node/app/node_modules node_modules\nCOPY --from=elm-build /home/node/app/client/ client\nCOPY server server\n\nHEALTHCHECK --interval=5s --timeout=3s \\\n  CMD curl --fail http://localhost:$PORT/_health || exit 1\n\n# Run under Tini\nCMD [\"node\", \"server/index.js\"]\n"
}