{
  "startTime": 1674252559663,
  "endTime": 1674252560177,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 5,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 5,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.0-cli\n\nENV PHP_MEMORY_LIMIT 2G\nENV MAGENTO_ROOT /app\nENV DEBUG false\nENV MAGENTO_RUN_MODE production\nENV COMPOSER_ALLOW_SUPERUSER 1\nENV PHP_EXTENSIONS bcmath bz2 calendar exif gd gettext intl mcrypt mysqli opcache pdo_mysql redis soap sockets sysvmsg sysvsem sysvshm xsl zip pcntl\n\n# Install dependencies\nRUN apt-get update \\\n  && apt-get upgrade -y \\\n  && apt-get install -y --no-install-recommends \\\n  apt-utils \\\n  sendmail-bin \\\n  sendmail \\\n  sudo \\\n  cron \\\n  rsyslog \\\n  mysql-client \\\n  git \\\n  redis-tools \\\n  nano \\\n  unzip \\\n  vim \\\n  libbz2-dev \\\n  libjpeg62-turbo-dev \\\n  libpng-dev \\\n  libfreetype6-dev \\\n  libgeoip-dev \\\n  wget \\\n  libgmp-dev \\\n  libmagickwand-dev \\\n  libmagickcore-dev \\\n  libc-client-dev \\\n  libkrb5-dev \\\n  libicu-dev \\\n  libldap2-dev \\\n  libmcrypt-dev \\\n  libpspell-dev \\\n  librecode0 \\\n  librecode-dev \\\n  libssh2-1 \\\n  libssh2-1-dev \\\n  libtidy-dev \\\n  libxslt1-dev \\\n  libyaml-dev \\\n  libzip-dev \\\n  zip \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Configure the gd library\nRUN docker-php-ext-configure \\\n  gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/\nRUN docker-php-ext-configure \\\n  imap --with-kerberos --with-imap-ssl\nRUN docker-php-ext-configure \\\n  ldap --with-libdir=lib/x86_64-linux-gnu\nRUN docker-php-ext-configure \\\n  opcache --enable-opcache\nRUN docker-php-ext-configure \\\n  zip --with-libzip\n\n# Install required PHP extensions\nRUN docker-php-ext-install -j$(nproc) \\\n  bcmath \\\n  bz2 \\\n  calendar \\\n  exif \\\n  gd \\\n  gettext \\\n  gmp \\\n  imap \\\n  intl \\\n  ldap \\\n  mcrypt \\\n  mysqli \\\n  opcache \\\n  pdo_mysql \\\n  pspell \\\n  recode \\\n  shmop \\\n  soap \\\n  sockets \\\n  sysvmsg \\\n  sysvsem \\\n  sysvshm \\\n  tidy \\\n  xmlrpc \\\n  xsl \\\n  zip \\\n  pcntl\n\nRUN pecl install -o -f \\\n  geoip-1.1.1 \\\n  igbinary \\\n  imagick \\\n  mailparse \\\n  msgpack \\\n  oauth \\\n  propro \\\n  raphf \\\n  redis \\\n  ssh2-1.1.2 \\\n  xdebug-2.6.1 \\\n  yaml\n\nRUN mkdir -p /tmp/libsodium \\\n  && curl -f -sL https://github.com/jedisct1/libsodium/archive/1.0.18-RELEASE.tar.gz | tar xzf - -C  /tmp/libsodium \\\n  && cd /tmp/libsodium/libsodium-1.0.18-RELEASE/ \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make && make check \\\n  && make install \\\n  && cd / \\\n  && rm -rf /tmp/libsodium \\\n  && pecl install -o -f libsodium\n\nRUN docker-php-ext-enable \\\n  bcmath \\\n  bz2 \\\n  calendar \\\n  exif \\\n  gd \\\n  geoip \\\n  gettext \\\n  gmp \\\n  igbinary \\\n  imagick \\\n  imap \\\n  intl \\\n  ldap \\\n  mailparse \\\n  mcrypt \\\n  msgpack \\\n  mysqli \\\n  oauth \\\n  opcache \\\n  pdo_mysql \\\n  propro \\\n  pspell \\\n  raphf \\\n  recode \\\n  redis \\\n  shmop \\\n  soap \\\n  sockets \\\n  sodium \\\n  ssh2 \\\n  sysvmsg \\\n  sysvsem \\\n  sysvshm \\\n  tidy \\\n  xdebug \\\n  xmlrpc \\\n  xsl \\\n  yaml \\\n  zip \\\n  pcntl\n\nADD etc/php-cli.ini /usr/local/etc/php/conf.d/zz-magento.ini\nADD etc/php-xdebug.ini /usr/local/etc/php/conf.d/zz-xdebug-settings.ini\nADD etc/mail.ini /usr/local/etc/php/conf.d/zz-mail.ini\n\nVOLUME /root/.composer/cache\n# Get composer installed to /usr/local/bin/composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n\nADD bin/* /usr/local/bin/\n\nADD docker-entrypoint.sh /docker-entrypoint.sh\nRUN [\"chmod\", \"+x\", \"/docker-entrypoint.sh\"]\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/magento-installer\"]\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/magento-command\"]\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/ece-command\"]\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/cloud-build\"]\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/cloud-deploy\"]\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/run-cron\"]\n\nWORKDIR ${MAGENTO_ROOT}\n\nCMD [\"bash\"]\n"
}