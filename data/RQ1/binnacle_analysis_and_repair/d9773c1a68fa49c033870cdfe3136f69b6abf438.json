{
  "startTime": 1674243902199,
  "endTime": 1674243902462,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 65,
        "columnStart": 2,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 92
      }
    }
  ],
  "repairedDockerfile": "# NGSeasy Base Image\n\n# base image\nFROM debian:jessie\n\n# Maintainer\nMAINTAINER Stephen Newhouse stephen.j.newhouse@gmail.com\n\n# Set correct environment variables.\nENV HOME /root\nENV DEBIAN_FRONTEND noninteractive\n\n# Remain current\nRUN apt-get update && apt-get dist-upgrade -y\n\n# Basic dependencies\nRUN apt-get update && \\\n  apt-get install -y --no-install-recommends \\\n  apt-utils \\\n  automake \\\n  ant \\\n  bash \\\n  binutils \\\n  perl \\\n  bioperl \\\n  build-essential \\\n  bzip2 \\\n  c++11 \\\n  cdbs \\\n  cmake \\\n  cron \\\n  curl \\\n  dkms \\\n  dpkg-dev \\\n  g++ \\\n  gpp \\\n  gcc \\\n  gfortran \\\n  git \\\n  git-core \\\n  libblas-dev \\\n  libatlas-dev \\\n  libbz2-dev \\\n  liblzma-dev \\\n  libpcre3-dev \\\n  libreadline-dev \\\n  make \\\n  mercurial \\\n  php5-curl \\\n  python python-dev python-yaml ncurses-dev zlib1g-dev python-numpy python-pip \\\n  sudo \\\n  subversion \\\n  tabix \\\n  tree \\\n  unzip \\\n  vim \\\n  wget \\\n  python-software-properties \\\n  libc-bin \\\n  llvm \\\n  libconfig-dev \\\n  ncurses-dev \\\n  zlib1g-dev \\\n  yum \\\n  libX11-dev libXpm-dev libXft-dev libXext-dev \\\n  asciidoc && rm -rf /var/lib/apt/lists/*;\n\n#---------------------------------JAVA-------------------------------------------------------------------------------------# \n# upgrade java\nRUN apt-get install --no-install-recommends -y openjdk-7-jdk openjdk-7-doc openjdk-7-jre-lib && rm -rf /var/lib/apt/lists/*;\n\n#set java\nENV JAVA_HOME /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java\nRUN sed -i 'aPATH=$PATH:/usr/lib/jvm/java-7-openjdk-amd64/jre/bin' /root/.bashrc\n\n#-------------------------------Add user----------------------------------------------------------------------------------#\n# Create a pipeline user:pipeman and group:ngsgroup\n\nRUN useradd -m -s /bin/bash pipeman && \\\n  cd /home/pipeman && \\\n  echo \"#bash config file for user pipeman\" >> /home/pipeman/.bashrc\n\nRUN groupadd ngsgroup && \\\n  usermod -aG ngsgroup pipeman && \\\n  usermod -aG sudo pipeman\n\n#-----------------------------NGS TOOLS DIRECTORY------------------------------------------------------------------------# \n#make pipeline install dirs\nRUN mkdir /usr/local/pipeline && \\\n  chown pipeman:ngsgroup /usr/local/pipeline && \\\n  chmod 775 /usr/local/pipeline\n\n#-------------------------------PERMISSIONS--------------------------\nRUN chmod -R 777 /usr/local/pipeline\nRUN chown -R pipeman:ngsgroup /usr/local/pipeline\n\n#---------------------------------------------------------------------\n#Cleanup the temp dir\nRUN rm -rvf /tmp/*\n\n#open ports private only\nEXPOSE 8080\n\n# Use baseimage-docker's bash.\nCMD [\"/bin/bash\"]\n\n#Clean up APT when done.\nRUN apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    apt-get autoclean && \\\n    apt-get autoremove -y && \\\n    rm -rf /var/lib/{apt,dpkg,cache,log}/\n\n\n\n"
}