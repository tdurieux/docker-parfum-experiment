{
  "startTime": 1674248285155,
  "endTime": 1674248285412,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM cusdeb/alpine3.7:amd64\nMAINTAINER Evgeny Golyshev <eugulixes@gmail.com>\n\nENV MEMCACHED_VERSION 1.5.10\n\nENV MEMCACHED_DOWNLOAD_URL https://github.com/memcached/memcached/archive/$MEMCACHED_VERSION.tar.gz\n\nENV MEMCACHED_DOWNLOAD_SHA 58408d0abc29e2da27cd3e1b9506991f0bd9c80e9362c68e564eee166631b18a\n\n# If the version doesn't look bad for Debian Stretch,\n# it's not bad for the image.\nENV SASL_VERSION 2.1.27\n\nENV SASL_RC rc7\n\nENV SASL_DOWNLOAD_URL ftp://ftp.cyrusimap.org/cyrus-sasl/cyrus-sasl-$SASL_VERSION-$SASL_RC.tar.gz\n\nENV LIBEVENT_VERSION 2.1.8-stable\n\nENV LIBEVENT_DOWNLOAD_URL https://github.com/libevent/libevent/releases/download/release-$LIBEVENT_VERSION/libevent-$LIBEVENT_VERSION.tar.gz\n\nRUN adduser -D memcached\n\nRUN apk add --update \\\n    autoconf \\\n    automake \\\n    build-base \\\n    coreutils \\\n    curl \\\n    git \\\n    linux-headers \\\n    perl \\\n && mkdir -p /opt/homemade \\\n && cd \\\n # Build Cyrus SASL \\\n && curl -f -O $SASL_DOWNLOAD_URL \\\n && tar xzvf cyrus-sasl-$SASL_VERSION-$SASL_RC.tar.gz \\\n && cd cyrus-sasl-$SASL_VERSION \\\n # https://git.alpinelinux.org/cgit/aports/tree/main/cyrus-sasl/APKBUILD?h=3.7-stable#n47\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/homemade \\\n                --disable-anon \\\n                --enable-cram \\\n                --enable-digest \\\n                --enable-login \\\n                --enable-ntlm \\\n                --disable-otp \\\n                --enable-plain \\\n                --with-gss_impl=heimdal \\\n                --with-devrandom=/dev/urandom \\\n                --without-ldap \\\n                --with-saslauthd=/var/run/saslauthd \\\n                # The reason we're all here tonight\n                --enable-static \\\n && make && make install \\\n && cd .. \\\n # Build libevent\n && curl -f -OL $LIBEVENT_DOWNLOAD_URL \\\n && tar xzvf libevent-$LIBEVENT_VERSION.tar.gz \\\n && cd libevent-$LIBEVENT_VERSION \\\n # https://git.alpinelinux.org/cgit/aports/tree/main/libevent/APKBUILD?h=3.7-stable#n33\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/homemade \\\n                --enable-static \\\n && make && make install \\\n && cd .. \\\n # Build memcached\n && curl -f -OL $MEMCACHED_DOWNLOAD_URL \\\n && echo $MEMCACHED_DOWNLOAD_SHA $MEMCACHED_VERSION.tar.gz | sha256sum -c \\\n && tar xzvf $MEMCACHED_VERSION.tar.gz \\\n && cd memcached-$MEMCACHED_VERSION \\\n && ./autogen.sh \\\n && env CFLAGS='-I/opt/homemade/include' LDFLAGS='-L/opt/homemade/lib' ./configure --enable-sasl \\\n && make SHARED=0 CC='gcc -static' && make install \\\n # Install only the server\n && make && install -o root -g root -m 744 memcached /usr/bin \\\n && cd .. \\\n # Cleanup\n && rm    cyrus-sasl-$SASL_VERSION-$SASL_RC.tar.gz \\\n && rm    libevent-$LIBEVENT_VERSION.tar.gz \\\n && rm    $MEMCACHED_VERSION.tar.gz \\\n && rm -r cyrus-sasl-$SASL_VERSION \\\n && rm -r libevent-$LIBEVENT_VERSION \\\n && rm -r memcached-$MEMCACHED_VERSION \\\n && rm -r /opt/homemade \\\n && apk del \\\n    autoconf \\\n    automake \\\n    build-base \\\n    coreutils \\\n    curl \\\n    git \\\n    linux-headers \\\n    perl \\\n && rm -rf /var/cache/apk/*\n\nUSER memcached\n\nCOPY docker-entrypoint.sh /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\n"
}