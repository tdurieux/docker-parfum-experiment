{
  "startTime": 1674234886853,
  "endTime": 1674234886891,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# base-image for node on any machine using a template variable,\n# see more about dockerfile templates here: https://www.balena.io/docs/learn/develop/dockerfile/\n# and about balena base images here: https://www.balena.io/docs/reference/base-images/base-images/\n# Note the node:slim image doesn't have node-gyp\nFROM balenalib/%%BALENA_MACHINE_NAME%%-node:9-stretch-build\n\n# use `install_packages` if you need to install dependencies,\n# # for instance if you need git, just uncomment the line below.\n# # RUN install_packages git\n\n# Defines our working directory in container\nWORKDIR /usr/src/app\n\n# Copies the package.json first for better cache on later pushes\nCOPY package.json package.json\n\n# This install npm dependencies on the balena build server,\n# # making sure to clean up the artifacts it creates in order to reduce the image size.\nRUN JOBS=MAX npm install --production --unsafe-perm && npm cache verify && rm -rf /tmp/ && npm cache clean --force;\n\n# This will copy all files in our root to the working  directory in the container\nCOPY . ./\n\n# Enable udevd so that plugged dynamic hardware devices show up in our container.\nENV UDEV=1\n\n# server.js will run when container starts up on the device\nCMD [\"npm\", \"start\"]\n"
}