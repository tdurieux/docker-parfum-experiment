{
  "startTime": 1674241977174,
  "endTime": 1674241977314,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM blacklabelops/centos:7.4\nMAINTAINER Steffen Bleul <sbl@blacklabelops.com>\n\nARG CERTBOT_VERSION=0.23.0\nARG CONTAINER_UID=1000\nARG CONTAINER_GID=1000\nARG JOBBER_VERSION=v1.2\n\n# Property permissions\nENV CONTAINER_USER=jobber_client \\\n    CONTAINER_GROUP=jobber_client\n\n# install dev tools\nRUN yum install -y epel-release && \\\n    yum install -y \\\n    golang \\\n    make \\\n    git \\\n    sudo \\\n    python-pip \\\n    python-tools \\\n    python-virtualenv \\\n    python-devel \\\n    augeas-libs \\\n    dialog \\\n    libffi-devel \\\n    openssl \\\n    openssl-devel \\\n    redhat-rpm-config \\\n    ca-certificates \\\n    mercurial && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    yum clean all && rm -rf /var/cache/yum/*\n\n# install Jobber\nENV JOBBER_HOME=/opt/jobber\nENV JOBBER_LIB=$JOBBER_HOME/lib\nENV GOPATH=$JOBBER_LIB\n\nRUN mkdir -p $JOBBER_HOME && \\\n    mkdir -p $JOBBER_LIB && \\\n    /usr/sbin/groupadd --gid $CONTAINER_GID $CONTAINER_GROUP && \\\n    /usr/sbin/useradd --uid $CONTAINER_UID --gid $CONTAINER_GID --create-home --shell /bin/bash $CONTAINER_USER && \\\n    cd $JOBBER_LIB && \\\n    go get github.com/dshearer/jobber;true && \\\n    if  [ \"${JOBBER_VERSION}\" != \"latest\" ]; \\\n      then \\\n        cd src/github.com/dshearer/jobber && \\\n        git checkout tags/${JOBBER_VERSION} && \\\n        cd $JOBBER_LIB ; \\\n    fi && \\\n    make -C src/github.com/dshearer/jobber install DESTDIR=$JOBBER_HOME && \\\n    cp $JOBBER_LIB/bin/* /usr/bin\n\n# Install Certbot\nENV CERTBOT_HOME=/opt/certbot\nENV PATH=\"${CERTBOT_HOME}:${PATH}\"\n\nRUN git clone https://github.com/certbot/certbot $CERTBOT_HOME && \\\n\t\tif  [ \"${CERTBOT_VERSION}\" != \"latest\" ]; \\\n\t\t\tthen cd $CERTBOT_HOME && git checkout tags/v${CERTBOT_VERSION} ; \\\n\t\tfi && \\\n\t\t$CERTBOT_HOME/certbot-auto --no-bootstrap --no-self-upgrade --help\n\nWORKDIR $CERTBOT_HOME\nVOLUME [\"/etc/letsencrypt\"]\nEXPOSE 443 80\n\nCOPY imagescripts/docker-entrypoint.sh /opt/jobber/docker-entrypoint.sh\nENTRYPOINT [\"/opt/jobber/docker-entrypoint.sh\"]\nCMD [\"jobberd\"]\n"
}