{
  "startTime": 1674248273516,
  "endTime": 1674248273686,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3-alpine3.7\n\nENV CC=/usr/bin/clang \\\n    CXX=/usr/bin/clang++ \\\n    OPENCV_VERSION=3.4.1\n\nRUN echo -e '@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing\\n\\\nhttp://dl-cdn.alpinelinux.org/alpine/edge/community' >> /etc/apk/repositories\n\nRUN apk add -U \\\n      # --virtual .runtime-dependencies \\\n        #IntelÂ® TBB, a widely used C++ template library for task parallelism'\n        libtbb@testing \\\n        libtbb-dev@testing \\\n        # Wrapper for libjpeg-turbo\n        libjpeg  \\\n        openblas \\\n        jasper \\\n    && apk add -U \\\n      --virtual .build-dependencies \\\n        build-base \\\n        openblas-dev \\\n        unzip \\\n        wget \\\n        cmake \\\n        # accelerated baseline JPEG compression and decompression library\n        libjpeg-turbo-dev \\\n        # Portable Network Graphics library\n        libpng-dev \\\n        # A software-based implementation of the codec specified in the emerging JPEG-2000 Part-1 standard (development files)\n        jasper-dev \\\n        # Provides support for the Tag Image File Format or TIFF (development files)\n        tiff-dev \\\n        # Libraries for working with WebP images (development files)\n        libwebp-dev \\\n        # A C language family front-end for LLVM (development files)\n        clang-dev \\\n        linux-headers \\\n    && pip install --no-cache-dir numpy \\\n    && mkdir /opt \\\n    && cd /opt \\\n    && wget --quiet https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip \\\n    && unzip ${OPENCV_VERSION}.zip \\\n    && rm -rf ${OPENCV_VERSION}.zip \\\n    && mkdir -p /opt/opencv-${OPENCV_VERSION}/build \\\n    && cd /opt/opencv-${OPENCV_VERSION}/build \\\n    && cmake \\\n      -D CMAKE_BUILD_TYPE=RELEASE \\\n      -D CMAKE_INSTALL_PREFIX=/usr/local \\\n      -D WITH_FFMPEG=NO \\\n      -D WITH_IPP=NO \\\n      -D WITH_OPENEXR=NO \\\n      -D WITH_TBB=YES \\\n      -D BUILD_EXAMPLES=NO \\\n      -D BUILD_ANDROID_EXAMPLES=NO \\\n      -D INSTALL_PYTHON_EXAMPLES=NO \\\n      -D BUILD_DOCS=NO \\\n      -D BUILD_opencv_python2=NO \\\n      -D BUILD_opencv_python3=ON \\\n      -D PYTHON3_EXECUTABLE=/usr/local/bin/python \\\n      -D PYTHON3_INCLUDE_DIR=/usr/local/include/python3.6m/ \\\n      -D PYTHON3_LIBRARY=/usr/local/lib/libpython3.so \\\n      -D PYTHON_LIBRARY=/usr/local/lib/libpython3.so \\\n      -D PYTHON3_PACKAGES_PATH=/usr/local/lib/python3.6/site-packages/ \\\n      -D PYTHON3_NUMPY_INCLUDE_DIRS=/usr/local/lib/python3.6/site-packages/numpy/core/include/ \\\n      .. \\\n    && make VERBOSE=1 \\\n    && make \\\n    && make install \\\n    && rm -rf /opt/opencv-${OPENCV_VERSION} \\\n    && apk del .build-dependencies \\\n    && rm -rf /var/cache/apk/*\n"
}