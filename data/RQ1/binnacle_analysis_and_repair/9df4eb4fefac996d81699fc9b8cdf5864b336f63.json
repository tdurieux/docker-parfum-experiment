{
  "startTime": 1674235810614,
  "endTime": 1674235810796,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# Avoid error messages from apt during image build\nARG DEBIAN_FRONTEND=noninteractive\n\n\nRUN \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y wget curl && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n  wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb && \\\n  dpkg -i erlang-solutions_1.0_all.deb && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y esl-erlang elixir build-essential openssh-server git locales && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n  apt-get update && \\\n  curl -f -sL https://deb.nodesource.com/setup_6.x | bash - && \\\n  apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Elixir requires UTF-8\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nRUN update-locale LANG=$LANG\n\nRUN mkdir /var/run/sshd\n\n# Create Builder user\nRUN useradd --system --shell=/bin/bash --create-home builder\n\n#config builder user for public key authentication\nRUN mkdir /home/builder/.ssh/ && chmod 700 /home/builder/.ssh/\nCOPY ./config/ssh_key.pub /home/builder/.ssh/authorized_keys\nRUN chown -R builder /home/builder/\nRUN chgrp -R builder /home/builder/\nRUN chmod 700 /home/builder/.ssh/\nRUN chmod 644 /home/builder/.ssh/authorized_keys\n\n\nRUN mix local.hex\nRUN mix local.rebar\n\n#Configure public keys for sshd\nRUN  echo \"AuthorizedKeysFile  %h/.ssh/authorized_keys\" >> /etc/ssh/sshd_config\n\nRUN mkdir -p /home/builder/config\nCOPY config/prod.secret.exs /home/builder/config/prod.secret.exs\n\nEXPOSE 22\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n"
}