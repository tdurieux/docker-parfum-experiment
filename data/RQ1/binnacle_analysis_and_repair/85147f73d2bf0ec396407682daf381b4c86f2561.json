{
  "startTime": 1674245905746,
  "endTime": 1674245905969,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\nLABEL maintainer \"Kevin Collins <kcollins@purelinux.net>\"\n\n# Select Ignition Version\nARG IGNITION_VERSION=\"8.0.2\"\nARG IGNITION_DOWNLOAD_URL=\"https://files.inductiveautomation.com/release/ia/build8.0.2/20190605-1127/Ignition-linux-64-8.0.2.zip\"\nARG IGNITION_DOWNLOAD_SHA256=\"ff43873075c2b3a0dd01041696516ef09f6b7ab3cf16ca3ca334668d52844fd8\"\n\n# Install some prerequisite packages\nRUN apt-get update && apt-get install --no-install-recommends -y wget unzip && rm -rf /var/lib/apt/lists/*;\n\n# Retrieve Ignition Installer and Perform Ignition Installation\nENV INSTALLER_PATH /root\nENV INSTALLER_NAME \"ignition-install.zip\"\nWORKDIR ${INSTALLER_PATH}\n\n# Download Installation Zip File\nRUN wget -q --referer https://inductiveautomation.com/* -O ${INSTALLER_NAME} ${IGNITION_DOWNLOAD_URL} && \\\n    echo \"${IGNITION_DOWNLOAD_SHA256}  ${INSTALLER_NAME}\" | sha256sum -c -\n\n# Extract Installation Zip File\nRUN mkdir ignition && \\\n    unzip -q ${INSTALLER_NAME} -d ignition/ && \\\n    chmod +x ignition/gwcmd.sh ignition/ignition-gateway ignition/ignition.sh\n\n# Change to Ignition folder\nWORKDIR ${INSTALLER_PATH}/ignition\n\n# Stage data and user-lib in var folder\nRUN mkdir -p /var/lib/ignition && \\\n    mv data /var/lib/ignition/ && \\\n    mv user-lib /var/lib/ignition/ && \\\n    mv temp /var/lib/ignition/data && \\\n    ln -s /var/lib/ignition/data data && \\\n    ln -s /var/lib/ignition/user-lib user-lib && \\\n    ln -s /var/lib/ignition/data/temp temp\n\n# Extract embedded Java\nRUN tar -C lib/runtime -z -x -f lib/runtime/jre-nix.tar.gz && \\\n    cp lib/runtime/version lib/runtime/jre-nix/ && rm lib/runtime/jre-nix.tar.gz\n\n# RUNTIME IMAGE\nFROM debian:stretch-slim\nLABEL maintainer \"Kevin Collins <kcollins@purelinux.net>\"\n\n# Install some prerequisite packages\nRUN apt-get update && apt-get install --no-install-recommends -y curl gettext procps pwgen unzip sqlite3 && rm -rf /var/lib/apt/lists/*;\n\n# Setup Install Targets\nENV IGNITION_INSTALL_LOCATION=\"/usr/local/share/ignition\"\nENV IGNITION_INSTALL_USERHOME=\"/home/ignition\"\n\n# Setup dedicated user, map file permissions, and set execution flags\nRUN mkdir ${IGNITION_INSTALL_USERHOME} && \\\n    groupadd -r ignition && \\\n    useradd -r -d ${IGNITION_INSTALL_USERHOME} -g ignition ignition && \\\n    chown ignition:ignition ${IGNITION_INSTALL_USERHOME}\n\n# Copy Ignition Installation from Build Image\nCOPY --chown=ignition:ignition --from=0 /root/ignition ${IGNITION_INSTALL_LOCATION}\nCOPY --chown=ignition:ignition --from=0 /var/lib/ignition /var/lib/ignition\n\n# Declare Healthcheck\nHEALTHCHECK --interval=10s --start-period=60s --timeout=3s \\\n    CMD curl -f http://localhost:8088/StatusPing 2>&1 | grep RUNNING\n\n# Setup Port Expose\nEXPOSE 8088 8043 8000\n\n# Launch Ignition\nUSER ignition\nWORKDIR ${IGNITION_INSTALL_LOCATION}\n\n# Copy in Entrypoint and helper scripts\nCOPY docker-entrypoint.sh /usr/local/bin/\nCOPY accept-gwnetwork.sh /usr/local/bin/\n\n# Prepare Execution Settings\nENTRYPOINT [ \"docker-entrypoint.sh\" ]\nCMD [ \"./ignition-gateway\" \\\n    , \"data/ignition.conf\" \\\n    , \"wrapper.syslog.ident=Ignition Gateway\" \\\n    , \"wrapper.pidfile=./Ignition Gateway.pid\" \\\n    , \"wrapper.name=Ignition Gateway\" \\\n    , \"wrapper.displayname=Ignition-Gateway\" \\\n    , \"wrapper.statusfile=./Ignition Gateway.status\" \\\n    , \"wrapper.java.statusfile=./Ignition Gateway.java.status\" ] \n"
}