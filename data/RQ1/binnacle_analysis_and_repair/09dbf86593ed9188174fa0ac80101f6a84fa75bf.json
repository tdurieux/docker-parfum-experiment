{
  "startTime": 1674641762655,
  "endTime": 1674641762738,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### STAGE 1: Build Angular Frontend ###\nFROM trion/ng-cli-karma:1.7.3 AS ng-build-env\nWORKDIR /app\n\n# Copy project structure first and restore dependencies as a distinct layer.\nCOPY gameboy-client/package.json gameboy-client/package-lock.json ./\nRUN npm set progress=false && npm config set depth 0 && npm cache verify\nRUN npm install && npm cache clean --force;\n\n# Copy rest, test and build.\nCOPY gameboy-client .\nRUN npm run ng test -- --watch false --single-run true --no-progress\nRUN npm run ng build -- --prod --no-progress\n\n### STAGE 2: Build .NET Core Backend ###\nFROM microsoft/aspnetcore-build:2.0 AS netcore-build-env\nWORKDIR /app\n\n# Copy project structure first and restore dependencies as a distinct layer.\n# This is disgusting that we have to list each file but docker does not support preserving structure when globbing.\nCOPY Retro.Net/Retro.Net.csproj Retro.Net/\nCOPY GameBoy.Net/GameBoy.Net.csproj GameBoy.Net/\nCOPY Retro.Net.Api/Retro.Net.Api.csproj Retro.Net.Api/\nCOPY Retro.Net.Tests/Retro.Net.Tests.csproj Retro.Net.Tests/\nCOPY Retro.Net.sln .\nRUN dotnet restore\n\n# Copy everything else.\nCOPY Retro.Net ./Retro.Net\nCOPY GameBoy.Net ./GameBoy.Net\nCOPY Retro.Net.Api ./Retro.Net.Api\nCOPY Retro.Net.Tests ./Retro.Net.Tests\n\n# Test.\nWORKDIR /app/Retro.Net.Tests\nRUN dotnet test -c Release\n\n# Build.\nWORKDIR /app/Retro.Net.Api\nRUN dotnet publish -c Release -o ../dist\n\n### STAGE 3: Build runtime image ###\nFROM microsoft/aspnetcore:2.0\nWORKDIR /app\nCOPY --from=netcore-build-env /app/dist .\nCOPY --from=ng-build-env /app/dist ./wwwroot\nENTRYPOINT [\"dotnet\", \"Retro.Net.Api.dll\"]"
}