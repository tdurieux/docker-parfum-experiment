{
  "startTime": 1674243530692,
  "endTime": 1674243530983,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Jonas Zaddach <jzaddach@cisco.com>\n\nENV PREFIX /home\n\n# Update packages\nRUN apt-get update\n\n# Install packages\nRUN apt-get install --no-install-recommends -y git python clamav-daemon clamav-freshclam python-pyclamd \\\n                       curl python-dev python-setuptools build-essential \\\n                       python-flask libssl-dev thrift-compiler \\\n                       swig python-pip libffi-dev cmake && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p ${PREFIX}/packages\n\n# Update signatures (this speeds up later updates)\nRUN freshclam\n\n# Stuff needed for ClamAV\nRUN mkdir /var/run/clamav\nRUN chown clamav:clamav /var/run/clamav\n\n# Configure crontab to update signatures\nRUN echo \"23 0,6,12,18 * * * root /usr/bin/freshclam\" >> /etc/cron.d/freshclam\n\n# Install VRT certificate\nRUN curl -f https://www.talosintelligence.com/downloads/ca.pem > /usr/local/share/ca-certificates/vrt.crt\nRUN update-ca-certificates\n\n# Install sdhash\nENV PROTOBUF_VERSION 2.5.0\nWORKDIR ${PREFIX}/packages\n# Build protobuf library. sdhash needs version 2.5.\nRUN curl -f -L \"https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protobuf-${PROTOBUF_VERSION}.tar.bz2\" | tar xj\nWORKDIR protobuf-${PROTOBUF_VERSION}\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make\nRUN make install\n# Build sdhash\nWORKDIR ..\nRUN git clone https://github.com/sdhash/sdhash sdhash\nWORKDIR sdhash\nRUN make\nRUN make install\nRUN install libsdbf.a /usr/local/lib\nRUN ldconfig\nWORKDIR swig/python\nCOPY files/sdhash/__init__.py .\nCOPY files/sdhash/setup.py .\nRUN python setup.py install\n\n# Install TLSH\nWORKDIR ${PREFIX}/packages\nRUN git clone https://github.com/trendmicro/tlsh tlsh\nWORKDIR tlsh\nCOPY files/patches/0001-Changed-parameters-to-values-for-maximum-precision.patch .\nRUN git apply 0001-Changed-parameters-to-values-for-maximum-precision.patch\nRUN cmake -G \"Unix Makefiles\" .\nRUN make -j8\nRUN make install\nRUN install bin/tlsh_unittest /usr/local/bin/\nRUN install bin/tlsh_version /usr/local/bin/\nWORKDIR py_ext\nRUN python setup.py build\nRUN python setup.py install\n\n# Install ssdeep (we don't plan to use it, but since VT and everybody ssdeeps, maybe we'll need it)\nWORKDIR ${PREFIX}/packages\nENV SSDEEP_VERSION 2.13\nRUN curl -f -L https://downloads.sourceforge.net/project/ssdeep/ssdeep-${SSDEEP_VERSION}/ssdeep-${SSDEEP_VERSION}.tar.gz | tar xz\nWORKDIR ssdeep-${SSDEEP_VERSION}\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make\nRUN make install\nRUN ldconfig\nRUN pip install --no-cache-dir ssdeep\n\nRUN mkdir /logs\nRUN apt-get install --no-install-recommends -y sqlite3 libgraphviz-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install BASS\nWORKDIR ${PREFIX}/packages\nCOPY python/ bass/\nWORKDIR bass\nRUN python setup.py install\n\nWORKDIR ${PREFIX}\nRUN mkdir server\nWORKDIR server\nCOPY files/server/server.py .\nCOPY files/server/start.sh .\nCOPY files/json/api_db.json .\nRUN chmod +x start.sh\n\nENTRYPOINT [\"./start.sh\"]\n"
}