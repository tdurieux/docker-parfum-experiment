{
  "startTime": 1674239552462,
  "endTime": 1674239552843,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM prevsio/pool-base\nMAINTAINER mookjp\n\nWORKDIR /tmp\n\nRUN export PATH=$PATH:/usr/local/bin\n\n# Update docker\nRUN curl -f -s https://get.docker.com/builds/Linux/x86_64/docker-latest -o docker\nRUN chmod +x docker\nRUN cp docker /usr/bin/\n\n# hostname settings\nADD provisioning/network /etc/sysconfig/network\nADD provisioning/hosts /etc/sysconfig/hosts\n\n# Add Apache settings\nADD provisioning/httpd.conf /etc/httpd/conf/httpd.conf\nADD provisioning/mruby.conf /etc/httpd/conf.d/mruby.conf\n\n# Add supervisor configuration file\nADD provisioning/supervisord.conf /etc/supervisord.conf\n\n# Add container-limitation configuration gile\nADD provisioning/cron/limit_containers /etc/cron.d/limit_containers\n\n# Install build-srver\nADD builder /tmp/builder\nWORKDIR /tmp/builder\nRUN /opt/ruby-2.1.2/bin/bundle install --path=vendor/bundle\n# Test builder\nRUN /opt/ruby-2.1.2/bin/bundle exec rake spec\nRUN /usr/local/bin/gem build builder.gemspec\nRUN /usr/local/bin/gem install builder-0.0.1.gem\n\n# Add mod_mruby handler to manage request\nADD handlers /app/handlers\n\n# Install build-screen\nRUN mkdir -p /app/handlers/resources\nRUN mkdir /tmp/build-screen\n# Add package.json beforehand then execute npm install\nADD build-screen/package.json /tmp/build-screen/package.json\nWORKDIR /tmp/build-screen\nRUN npm install && npm cache clean --force;\nADD build-screen /tmp/build-screen-2\nRUN cp -nr /tmp/build-screen-2/* /tmp/build-screen\nRUN cp -nr /tmp/build-screen-2/.[^.]* /tmp/build-screen\n# For bower install\nRUN git config --global url.https://.insteadOf git://\nRUN $(npm bin)/bower --allow-root install\nRUN $(npm bin)/grunt build\nRUN mv /tmp/build-screen/dist /app/handlers/resources/build-screen\n\n# Add util scripts for handling containers\nADD scripts /app/scripts\nRUN chmod +x /app/scripts/starter\nRUN chmod +x /app/scripts/limit_containers\n\n# Add log directories\nRUN mkdir -p /var/log/supervisor\nRUN mkdir -p /var/log/builder\nRUN mkdir -p /app/images\nRUN touch /app/images/ids\n\n# Add private key directory to clone repository\nRUN mkdir -p /root/.ssh\nRUN mkdir -p /var/www/.ssh\nADD keys /app/keys\nADD /provisioning/ssh_config /var/www/.ssh/config\nADD /provisioning/ssh_config /root/.ssh/config\nRUN chown -R apache. /var/www/.ssh\nRUN chmod 600 /var/www/.ssh/config /root/.ssh/config\nRUN chmod 700 /var/www/.ssh /root/.ssh\n\n# Add config files\nADD config /app/config\n\n# Add test files\nADD tests /app/tests\n\n# Add apache to pool and docker group to access /app\n# as hook.rb has to access application's repository in it\n# and to access docker sock file\nRUN groupadd pool\nRUN usermod -G docker,pool apache\nRUN chgrp --recursive pool /app\nRUN chmod --recursive g+rwx /app\n\n# Set target preview repository\nENV PREVIEW_REPOSITORY_URL https://github.com/mookjp/flaskapp.git\nENV MAX_CONTAINERS 10\nENV GIT_COMMIT_ID_CACHE_EXPIRE 10\nENV POOL_BASE_DOMAIN pool.dev\nENV GITHUB_BOT false\n\nEXPOSE 80 8080\n\nCMD \\\n    /app/scripts/starter && \\\n    tail -F /var/log/httpd/error_log\n\n"
}