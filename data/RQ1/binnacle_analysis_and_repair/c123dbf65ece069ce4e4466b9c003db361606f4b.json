{
  "startTime": 1674249605643,
  "endTime": 1674249605674,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Simple usage with a mounted data directory:\n# > docker build -t gaia .\n# > docker run -it -p 46657:46657 -p 46656:46656 -v ~/.gaiad:/root/.gaiad -v ~/.gaiacli:/root/.gaiacli gaia gaiad init\n# > docker run -it -p 46657:46657 -p 46656:46656 -v ~/.gaiad:/root/.gaiad -v ~/.gaiacli:/root/.gaiacli gaia gaiad start\nFROM golang:alpine AS build-env\n\n# Set up dependencies\nENV PACKAGES curl make git libc-dev bash gcc linux-headers eudev-dev python\n\n# Set working directory for the build\nWORKDIR /go/src/github.com/cosmos/gaia\n\n# Add source files\nCOPY . .\n\n# Install minimum necessary dependencies, build Cosmos SDK, remove packages\nRUN apk add --no-cache $PACKAGES && \\\n    make tools && \\\n    make install\n\n# Final image\nFROM alpine:edge\n\n# Install ca-certificates\nRUN apk add --no-cache --update ca-certificates\nWORKDIR /root\n\n# Copy over binaries from the build-env\nCOPY --from=build-env /go/bin/gaiad /usr/bin/gaiad\nCOPY --from=build-env /go/bin/gaiacli /usr/bin/gaiacli\n\n# Run gaiad by default, omit entrypoint to ease using container with gaiacli\nCMD [\"gaiad\"]\n"
}