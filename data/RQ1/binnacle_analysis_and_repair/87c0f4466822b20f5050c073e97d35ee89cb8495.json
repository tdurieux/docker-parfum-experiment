{
  "startTime": 1674242387014,
  "endTime": 1674242387363,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 27,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 59,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:7.5-cudnn4-devel-centos7\nMAINTAINER Valentin Tolmer \"valentin.tolmer@gmail.com\"\n\n# Repository for recent packages\n#\n# Needed for gflags-devel, among others\nRUN yum -y install epel-release && yum clean all && rm -rf /var/cache/yum\n\n# You may need to change the driver version\nENV CUDA_DRIVER_VERSION=352.55\nRUN yum -y install \\\n    xorg-x11-drv-nvidia-libs-$CUDA_DRIVER_VERSION \\\n    yum-versionlock \\\n    && yum -y install \\\n    xorg-x11-drv-nvidia-$CUDA_DRIVER_VERSION \\\n    xorg-x11-drv-nvidia-devel-$CUDA_DRIVER_VERSION \\\n    xorg-x11-drv-nvidia-gl-$CUDA_DRIVER_VERSION \\\n    cuda-drivers-$CUDA_DRIVER_VERSION \\\n    && yum clean all \\\n    && yum versionlock \\\n    cuda-drivers \\\n    xorg-x11-drv-nvidia \\\n    xorg-x11-drv-nvidia-devel \\\n    xorg-x11-drv-nvidia-gl \\\n    xorg-x11-drv-nvidia-libs && rm -rf /var/cache/yum\n\n# Common needed packages\nRUN yum -y install \\\n    autoconf \\\n    automake \\\n    boost-devel \\\n    cuda-runtime-7-5 \\\n    libtool \\\n    bzip2 \\\n    git \\\n    gflags-devel \\\n    glog-devel \\\n    hdf5-devel \\\n    leveldb-devel \\\n    lmdb-devel \\\n    libuuid-devel \\\n    make \\\n    numactl-devel \\\n    opencv-devel \\\n    openblas-devel \\\n    protobuf-devel \\\n    psmisc \\\n    snappy-devel \\\n    wget \\\n    which \\\n    && yum clean all && rm -rf /var/cache/yum\n\n# Install cudnn 3\nRUN curl -fsSL https://developer.download.nvidia.com/compute/redist/cudnn/v3/cudnn-7.0-linux-x64-v3.0-prod.tgz -O && \\\n      tar -xzf cudnn-7.0-linux-x64-v3.0-prod.tgz -C /usr/local && \\\n      rm cudnn-7.0-linux-x64-v3.0-prod.tgz && \\\n      ldconfig\n\n# Install Poseidon & Bosen dependencies\nRUN yum -y install \\\n    binutils-devel \\\n    libstdc++-static \\\n    openssh-server \\\n    popt-devel \\\n    python-devel \\\n    && yum remove -y gflags-devel boost \\\n    && yum clean all && rm -rf /var/cache/yum\n\n# Setup the ssh service\nRUN mkdir /var/run/sshd\n\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd && \\\n    sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \\\n    sed -i 's/#StrictModes yes/StrictModes no/' /etc/ssh/sshd_config && \\\n    sed -i 's@HostKey .*@HostKey /root/.ssh/ssh_host_rsa_key@' /etc/ssh/sshd_config\n\nRUN mkdir -p /root/.ssh && chmod 700 /root/.ssh && rm -rf /root/.ssh/*\n\n# Clone Poseidon Project and build the 3rd_party dependencies first\nRUN git clone --recursive https://github.com/nitnelave/poseidon.git && \\\n    cd poseidon && \\\n    cp Makefile.config.example Makefile.config && \\\n    echo \"USE_CUDNN := 1\" >> Makefile.config && \\\n    sed -i 's/BLAS := atlas/BLAS := open/g' Makefile.config && \\\n    echo 'BLAS_INCLUDE := /usr/include/openblas' >> Makefile.config && \\\n    echo 'BLAS_LIB := /usr/lib64' >> Makefile.config\n\n# Build the third_party\nRUN cd /poseidon && make -j$(nproc) -C third_party\n\n# Build Poseidon\nRUN cd /poseidon && make all -j$(nproc)\n\nEXPOSE 22\n\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n"
}