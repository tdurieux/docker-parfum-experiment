{
  "startTime": 1674251865920,
  "endTime": 1674251866323,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 24,
        "columnEnd": 33
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 25,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8.11.2\n\nEXPOSE 3000\n\nCMD [\"node\", \"/app/main.js\"]\n\nENV GOSU_VERSION=1.10\n\nRUN \\\n\n    GOSU_ARCHITECTURE=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\" && \\\n    wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-${GOSU_ARCHITECTURE}\" && \\\n    wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-${GOSU_ARCHITECTURE}.asc\" && \\\n    export GNUPGHOME=\"$(mktemp -d)\" && \\\n    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && \\\n    gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu && \\\n    rm -R \"$GNUPGHOME\" /usr/local/bin/gosu.asc && \\\n    chmod +x /usr/local/bin/gosu && rm -rf -d\n\nRUN apt-get update && \\\n    apt-get install -y imagemagick unicode-data --no-install-recommends && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get autoclean && \\\n    apt-get clean\n\nCOPY imagemagick-policy.xml /etc/ImageMagick-6/policy.xml\n\nCOPY ./app/.meteor/release /meteor-release\n\nENV BUILD_DEPS=\"bzip2 build-essential python git ca-certificates\"\n\nRUN \\\n\n    useradd --user-group --system --home-dir /home/meteor meteor && \\\n    \\\n    # OS dependencies\n    apt-get update -y && apt-get install -y --no-install-recommends ${BUILD_DEPS} && \\\n    \\\n    # Install Node dependencies\n    npm install -g node-gyp && \\\n    npm install -g fibers && \\\n    \\\n    # Change user to meteor and install meteor\n    mkdir -p /home/meteor/app && \\\n    cd /home/meteor/ && \\\n    chown meteor:meteor --recursive /home/meteor && \\\n    curl -f https://install.meteor.com -o ./install_meteor.sh && \\\n    echo \"Starting meteor installation...   \\n\" && \\\n    chown meteor:meteor ./install_meteor.sh && \\\n    gosu meteor:meteor sh ./install_meteor.sh && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./app /tmp/app\n\nENV TOOL_NODE_FLAGS=\"--max-old-space-size=4096\"\n\nRUN \\\n    # Build app\n    cd /home/meteor/app && \\\n    cp -R /tmp/app /home/meteor && \\\n    chown meteor:meteor --recursive . && \\\n    gosu meteor /home/meteor/.meteor/meteor npm install && \\\n    gosu meteor /home/meteor/.meteor/meteor build --server-only --directory /home/meteor/app_build && \\\n    cd /home/meteor/app_build/bundle/programs/server/ && \\\n    gosu meteor npm install && \\\n    mv /home/meteor/app_build/bundle /app && \\\n    cd /app && \\\n    \\\n    # Cleanup\n    apt-get remove --purge -y ${BUILD_DEPS} && \\\n    apt-get autoremove -y && \\\n    rm -R /var/lib/apt/lists/* && \\\n    rm -R /home/meteor/.meteor && \\\n    rm -R /home/meteor/app && \\\n    rm -R /home/meteor/app_build && \\\n    rm -R /tmp/* && \\\n    rm /home/meteor/install_meteor.sh\n\nVOLUME /tmp /var/tmp\n\nUSER meteor\n"
}