{
  "startTime": 1674240303534,
  "endTime": 1674240303750,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 10
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 5,
        "columnEnd": 75
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 74
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 5,
        "columnEnd": 80
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.8\n# Based on https://github.com/SchweizerischeBundesbahnen/docker-graphite and https://github.com/orangesys/alpine-grafana\n\n# Install basic stuff =)\nRUN apk add --no-cache \\\n  bash \\\n  ca-certificates \\\n  nginx \\\n  openssl \\\n  py2-pip \\\n  supervisor \\\n  tini \\\n  && pip install --no-cache-dir \\\n  supervisor-stdout \\\n  gunicorn\n\n# Install graphite\nENV GRAPHITE_ROOT /opt/graphite\n\nRUN apk add --no-cache \\\n  alpine-sdk \\\n  fontconfig \\\n  libffi \\\n  libffi-dev \\\n  python-dev \\\n  py-cairo \\\n  && export PYTHONPATH=\"/opt/graphite/lib/:/opt/graphite/webapp/\" \\\n  && pip install --no-cache-dir https://github.com/graphite-project/whisper/tarball/master \\\n  && pip install --no-cache-dir https://github.com/graphite-project/carbon/tarball/master \\\n  && pip install --no-cache-dir https://github.com/graphite-project/graphite-web/tarball/master \\\n  && apk del \\\n  alpine-sdk \\\n  python-dev \\\n  libffi-dev\n\n# Grafana\nENV GRAFANA_VERSION=5.4.3\n\nRUN set -ex \\\n && addgroup -S grafana \\\n && adduser -S -G grafana grafana \\\n && apk add --no-cache libc6-compat ca-certificates su-exec \\\n && mkdir /tmp/setup \\\n && wget -P /tmp/setup https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-${GRAFANA_VERSION}.linux-amd64.tar.gz \\\n && tar -xzf /tmp/setup/grafana-$GRAFANA_VERSION.linux-amd64.tar.gz -C /tmp/setup --strip-components=1 \\\n && install -m 755 /tmp/setup/bin/grafana-server /usr/local/bin/ \\\n && install -m 755 /tmp/setup/bin/grafana-cli /usr/local/bin/ \\\n && mkdir -p /grafana/datasources /grafana/dashboards /grafana/data /grafana/logs /grafana/plugins /var/lib/grafana \\\n && cp -r /tmp/setup/public /grafana/public \\\n && chown -R grafana:grafana /grafana \\\n && ln -s /grafana/plugins /var/lib/grafana/plugins \\\n && grafana-cli plugins update-all \\\n && rm -rf /tmp/setup && rm /tmp/setup/grafana-$GRAFANA_VERSION.linux-amd64.tar.gz\n\nADD grafana-defaults.ini /grafana/conf/defaults.ini\n\nEXPOSE 8080\nEXPOSE 3000\nEXPOSE 2003\nEXPOSE 2004\nEXPOSE 7002\n\nVOLUME [\"/opt/graphite/conf\", \"/opt/graphite/storage\"]\n\nCOPY run.sh /run.sh\nCOPY etc/ /etc/\nCOPY data/ /grafana/data_init/\nCOPY conf/ /opt/graphite/conf.example/\n\n# Enable tiny init\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [\"/bin/bash\", \"/run.sh\"]\n"
}