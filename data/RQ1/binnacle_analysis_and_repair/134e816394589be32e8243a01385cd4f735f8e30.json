{
  "startTime": 1674249036163,
  "endTime": 1674249036293,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Dmitry Mozzherin\nENV LAST_FULL_REBUILD 2019-02-21\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y software-properties-common && \\\n    apt-add-repository ppa:brightbox/ruby-ng && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y ruby2.5 ruby2.5-dev ruby-switch \\\n    zlib1g-dev liblzma-dev libxml2-dev libpq-dev git locales \\\n    libxslt-dev supervisor build-essential nodejs supervisor && \\\n    apt-get -y --no-install-recommends install graphicsmagick poppler-utils poppler-data \\\n    ghostscript tesseract-ocr pdftk libreoffice libmagic-dev && \\\n    add-apt-repository -y ppa:nginx/stable && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -qq -y nginx && \\\n    echo \"\\ndaemon off;\" >> /etc/nginx/nginx.conf && \\\n    chown -R www-data:www-data /var/lib/nginx && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN locale-gen en_US.UTF-8\n\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nENV RACK_ENV development\nENV RESQUE_WORKERS 1\nENV QUEUE NameFinder\nENV PUMA_WORKERS 2\n\nRUN ruby-switch --set ruby2.5\nRUN echo 'gem: --no-rdoc --no-ri >> \"$HOME/.gemrc\"'\n\nRUN gem install bundler && \\\n    mkdir /app\n\nWORKDIR /app\n\nCOPY config/docker/nginx-sites.conf /etc/nginx/sites-enabled/default\nCOPY Gemfile /app\nCOPY Gemfile.lock /app\n\nRUN bundle install\n\nCOPY . /app\n\nCMD [\"/app/exe/docker.sh\"]\n"
}