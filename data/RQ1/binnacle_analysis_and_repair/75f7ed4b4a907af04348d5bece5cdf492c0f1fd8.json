{
  "startTime": 1674246286724,
  "endTime": 1674246286798,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 116
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 116
      }
    }
  ],
  "repairedDockerfile": "FROM omnetpp/omnetpp-core-triplatform\n\n# ccache to speed up compilation for fingerprint (not build-only) test jobs,\n# and parts of ffmpeg for the VoIPStream modules\nRUN apt-get install -y --no-install-recommends ccache libavcodec-dev libavformat-dev libavutil-dev libavresample-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /root\n\nRUN wget https://research.wand.net.nz/software/nsc/nsc-0.5.3.tar.bz2 --progress=dot:giga && \\\n    tar xfj nsc-0.5.3.tar.bz2 && \\\n    rm nsc-0.5.3.tar.bz2\n\nWORKDIR nsc-0.5.3\n\nRUN wget https://raw.githubusercontent.com/inet-framework/inet/integration/3rdparty/patch_for_nsc-0.5.3-amd64.txt\nRUN patch -p 2 -i patch_for_nsc-0.5.3-amd64.txt\n\n# we have to ignore an error during nsc testing, so the docker build command doesn't halt\nRUN python scons.py -i\n\nENV LD_LIBRARY_PATH /root/nsc-0.5.3/lib:$LD_LIBRARY_PATH\n\nWORKDIR /root\n"
}