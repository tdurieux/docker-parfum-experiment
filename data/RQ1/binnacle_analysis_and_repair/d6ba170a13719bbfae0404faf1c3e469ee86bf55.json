{
  "startTime": 1674249911560,
  "endTime": 1674249911822,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 35,
        "columnEnd": 154
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n# FROM uptodate\n\nRUN apt-get update && apt-get install --no-install-recommends -y openssh-server net-tools telnet && rm -rf /var/lib/apt/lists/*;\nRUN mkdir /var/run/sshd\nRUN mkdir /twister2-volatile\nRUN mkdir -p /twister2/persistent\n\n# Set root password Change it\nRUN echo 'root:screencast' | chpasswd\nRUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n\n# SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n\nENV NOTVISIBLE \"in users profile\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n\n\n# Create ssh key via ssh-keygen copy that files to .ssh folder\nRUN mkdir /root/.ssh\nADD id_rsa /root/.ssh/id_rsa\nADD id_rsa.pub /root/.ssh/authorized_keys\n\n# Install OpenJDK-8\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y openjdk-8-jdk && \\\n    apt-get install --no-install-recommends -y ant && \\\n    apt-get clean; rm -rf /var/lib/apt/lists/*;\n\n# Fix certificate issues\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends ca-certificates-java && \\\n    apt-get clean && \\\n    apt-get install --no-install-recommends -y curl && \\\n    update-ca-certificates -f; rm -rf /var/lib/apt/lists/*;\n\n# Setup JAVA_HOME -- useful for docker commandline\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/\nRUN export JAVA_HOME\n\n# Disable prompts from apt.\nENV DEBIAN_FRONTEND noninteractive\n\n\n# install ssh and basic dependencies\nRUN apt-get update && \\\n    apt-get install -yq --no-install-recommends \\\n    locales wget ca-certificates ssh build-essential && \\\n    apt-get install --no-install-recommends -y g++ && \\\n    apt-get install --no-install-recommends -y maven && \\\n    apt-get clean && apt-get purge && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*\n\n\n#openmpi install\nRUN wget https://www.open-mpi.org/software/ompi/v3.0/downloads/openmpi-3.0.0.tar.gz\nRUN tar -zxvf openmpi-3.0.0.tar.gz -C / && rm openmpi-3.0.0.tar.gz\nENV OMPI_BUILD=\"/openmpi-build\"\nENV OMPI_300=\"/openmpi-3.0.0\"\nENV PATH=\"${OMPI_BUILD}/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"${OMPI_BUILD}/lib:${LD_LIBRARY_PATH}\"\nRUN export OMPI_BUILD OMPI_300 PATH LD_LIBRARY_PATH\nRUN cd /openmpi-3.0.0 && ls -la && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$OMPI_BUILD --enable-mpi-java --enable-mpirun-prefix-by-default --enable-orterun-prefix-by-default && make; make install\nRUN rm openmpi-3.0.0.tar.gz\n\nCOPY rootfs /\nCOPY rootfs/sshd_config /etc/ssh/\nRUN chmod 777 /etc/ssh/sshd_config\n\nEXPOSE 2022 2023 30000 30001 30002 30003 30004 30005 30006 30007 30008 30009 30010\n#CMD [\"/usr/sbin/sshd\", \"-D\"]\nCMD [\"/init.sh\"]\nCOPY rootfs/config /root/.ssh/\n\n\n# https://docs.docker.com/engine/examples/running_ssh_service/#build-an-eg_sshd-image\n"
}