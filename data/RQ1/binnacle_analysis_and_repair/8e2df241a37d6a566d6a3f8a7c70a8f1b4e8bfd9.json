{
  "startTime": 1674245242930,
  "endTime": 1674245247183,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 28,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use local version of image built from Dockerfile.cpu in /docker/base\nFROM ubuntu:16.04\nLABEL maintainer=\"Intel\"\n\nWORKDIR /root\n\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install curl && \\\n    apt-get -y --no-install-recommends install wget && \\\n    apt-get -y --no-install-recommends install vim && \\\n    apt-get -y --no-install-recommends install iputils-ping && \\\n    apt-get -y --no-install-recommends install nginx && \\\n    apt-get -y --no-install-recommends install python-pip && \\\n    apt-get -y --no-install-recommends install git && rm -rf /var/lib/apt/lists/*;\n\nRUN pip --no-cache-dir install tensorflow==1.6.0 tensorflow-serving-api==1.6.1 numpy boto3 six awscli flask==0.11 Jinja2==2.9 gevent gunicorn\n\nRUN cd /tmp && \\\n    curl -f -O https://dl.influxdata.com/telegraf/releases/telegraf_1.4.2-1_amd64.deb && \\\n    dpkg -i telegraf_1.4.2-1_amd64.deb && \\\n    rm telegraf_1.4.2-1_amd64.deb\n\n# OpenVino installation\nARG INSTALL_DIR=/opt/intel/computer_vision_sdk\nARG TEMP_DIR=/tmp/openvino_installer\n\nARG DL_INSTALL_DIR=/opt/intel/computer_vision_sdk/deployment_tools\nARG DL_DIR=/tmp\n\nENV TEMP_DIR TEMP_DIR\n\nRUN apt-get update && apt-get install -y --no-install-recommends cpio cmake \\\n    python3-pip python3-venv python3-dev python3-setuptools virtualenv && rm -rf /var/lib/apt/lists/*;\n\nCOPY l_openvino_toolkit*.tgz $TEMP_DIR/\nRUN cd $TEMP_DIR && pwd && ls && \\\n    tar xf l_openvino_toolkit*.tgz && \\\n    cd l_openvino_toolkit* && \\\n    sed -i 's/decline/accept/g' silent.cfg && \\\n    pwd | grep -q openvino_toolkit_p ; rm l_openvino_toolkit*.tgz \\\n    if [ $? = 0 ];then sed -i 's/COMPONENTS=DEFAULTS/COMPONENTS=;intel-ism__noarch;intel-cv-sdk-base-shared__noarch;intel-cv-sdk-base-l-setupvars__noarch;intel-cv-sdk-base-l-inference-engine__noarch;intel-cv-sdk-base-gfx-install__noarch;intel-cv-sdk-base-shared-pset/g' silent.cfg; fi && \\\n    pwd | grep -q openvino_toolkit_fpga ; \\\n    if [ $? = 0 ];then sed -i 's/COMPONENTS=DEFAULTS/COMPONENTS=;intel-ism__noarch;intel-cv-sdk-full-shared__noarch;intel-cv-sdk-full-l-setupvars__noarch;intel-cv-sdk-full-l-inference-engine__noarch;intel-cv-sdk-full-gfx-install__noarch;intel-cv-sdk-full-shared-pset/g' silent.cfg; fi && \\\n    ./install.sh -s silent.cfg && \\\n    rm -Rf $TEMP_DIR $INSTALL_DIR/install_dependencies $INSTALL_DIR/uninstall* /tmp/* $DL_INSTALL_DIR/documentation $DL_INSTALL_DIR/inference_engine/samples\n\nENV PYTHONPATH=\"$INSTALL_DIR/python/python3.5/ubuntu16:$INSTALL_DIR/python/python3.5\"\nENV LD_LIBRARY_PATH=\"$DL_INSTALL_DIR/inference_engine/external/cldnn/lib:$DL_INSTALL_DIR/inference_engine/external/gna/lib:$DL_INSTALL_DIR/inference_engine/external/mkltiny_lnx/lib:$DL_INSTALL_DIR/inference_engine/lib/ubuntu_16.04/intel64\"\n\nRUN git clone https://github.com/IntelAI/OpenVINO-model-server.git /ie-serving-py\n\nWORKDIR /ie-serving-py\n\nRUN virtualenv -p python3 .venv && \\\n    . .venv/bin/activate && pip3 --no-cache-dir install -r requirements.txt\n\nRUN . .venv/bin/activate && pip3 install --no-cache-dir .\n\n# Install sagemaker components\n\nCOPY sagemaker_tensorflow_container-1.0.0.tar.gz .\n\nRUN pip install --no-cache-dir sagemaker_tensorflow_container-1.0.0.tar.gz sagemaker-container-support\n\nRUN rm sagemaker_tensorflow_container-1.0.0.tar.gz\n\nENTRYPOINT [\"entry.py\"]\n\n"
}