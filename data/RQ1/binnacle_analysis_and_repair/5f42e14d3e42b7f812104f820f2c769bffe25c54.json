{
  "startTime": 1674252569245,
  "endTime": 1674252569623,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 7,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 71,
        "columnStart": 25,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM jupyter/minimal-notebook:4cdbc9cdb7d1\n\nMAINTAINER Izaak Beekman <izaak@izaakbeekman.com>\n\nUSER root\n\nENV NB_USER jovyan\nENV NB_UID 1000\nENV HOME /home/${NB_USER}\n\nARG OPENCOARRAYS_VERSION=2.6.2\nENV GCC_VERSION 8.2.0\n\nRUN DEBIAN_FRONTEND=noninteractive transientBuildDeps=\"file\" \\\n    && set -v \\\n    && cat /etc/issue \\\n    && uname -a \\\n    && echo \"${DEBIAN_FRONTEND}\" \\\n    && apt-get update -y \\\n    && apt-get install --no-install-recommends -y \\\n    software-properties-common \\\n    && add-apt-repository ppa:ubuntu-toolchain-r/test -y \\\n    && apt-get update -y \\\n    && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    gcc-8 \\\n    gfortran-8 \\\n    g++-8 \\\n    mpich \\\n    ${transientBuildDeps} \\\n    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 60 --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-8 \\\n    && update-alternatives --set gcc \"/usr/bin/gcc-8\" \\\n    && gcc --version \\\n    && gfortran --version \\\n    && mpiexec --version \\\n    && mpifort --version \\\n    && mpicc --version \\\n    && apt-get clean \\\n    && apt-get purge -y --auto-remove ${transientBuildDeps} \\\n    && rm -rf /var/lib/apt/lists/* /var/log/* /tmp/*\n\n# Build-time metadata as defined at http://label-schema.org\n    ARG BUILD_DATE\n    ARG VCS_REF\n    ARG VCS_URL\n    ARG VCS_VERSION=latest\n    LABEL org.label-schema.schema-version=\"1.0\" \\\n          org.label-schema.build-date=\"${BUILD_DATE}\" \\\n          org.label-schema.name=\"jupyter-CAF-kernel\" \\\n          org.label-schema.description=\"Fortran Jupyter kernel with OpenCoarrays and MPICH backend\" \\\n          org.label-schema.url=\"https://github.com/sourceryinstitute/jupyter-CAF-kernel/\" \\\n          org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n          org.label-schema.vcs-url=\"${VCS_URL}\" \\\n          org.label-schema.version=\"${VCS_VERSION}\" \\\n          org.label-schema.vendor=\"SourceryInstitute\" \\\n          org.label-schema.license=\"MIT\" \\\n          org.label-schema.docker.cmd=\"docker run -i -t -p 8888:8888 sourceryinstitute/jupyter-CAF-kernel\"\n\nCOPY ./jupyter-caf-kernel /jupyter/jupyter-caf-kernel\n\nARG RUN_TESTS=false\nARG RUN_AS_NB_USER=\"sudo -H -u ${NB_USER} bash -c\"\n\nRUN DEBIAN_FRONTEND=noninteractive transientBuildDeps=\"cmake git\" \\\n    && set -v \\\n    && echo \"${DEBIAN_FRONTEND}\" \\\n    &&  adduser --disabled-password \\\n    --gecos \"Default user\" \\\n    --uid ${NB_UID} \\\n    ${NB_USER} || true \\\n    && apt-get update && apt-get install --no-install-recommends -y \\\n    ${transientBuildDeps} \\\n    && cmake --version \\\n    && wget -nv -t 3 https://github.com/sourceryinstitute/opencoarrays/releases/download/${OPENCOARRAYS_VERSION}/OpenCoarrays-${OPENCOARRAYS_VERSION}.tar.gz \\\n    && wget -nv -t 3 https://github.com/sourceryinstitute/opencoarrays/releases/download/${OPENCOARRAYS_VERSION}/opencoarrays-${OPENCOARRAYS_VERSION}-SHA256.txt \\\n    && sha256sum -c opencoarrays-${OPENCOARRAYS_VERSION}-SHA256.txt \\\n    && tar xzf OpenCoarrays-${OPENCOARRAYS_VERSION}.tar.gz \\\n    && cd OpenCoarrays-${OPENCOARRAYS_VERSION} \\\n    && echo \"Installing OpenCoarrays using CMake in $(pwd)\" \\\n    && mkdir build \\\n    && cd build \\\n    && gcc --version \\\n    && gfortran --version \\\n    && FC=\"`which gfortran`\" CC=\"`which gcc`\" cmake .. \\\n    && make -j \"$(nproc)\" install \\\n    && if [ \"${RUN_TESTS}\" = \"true\" ] ; then ctest --output-on-failure; fi \\\n    && cd \\\n    && rm -rf OpenCoarrays* opencoarrays* \\\n    && caf --version \\\n    && pip install --no-cache-dir notebook==5.* \\\n    && pip install --no-cache-dir -e /jupyter/jupyter-caf-kernel \\\n    && jupyter-kernelspec install /jupyter/jupyter-caf-kernel/Coarray-Fortran/ \\\n    && jupyter-kernelspec list \\\n    && rm -rf jupyter-caf-kernel \\\n    && apt-get clean \\\n    && apt-get purge -y --auto-remove ${transientBuildDeps} \\\n    && rm -rf /var/lib/apt/lists/* /var/log/* /tmp/* \\\n    && chown -R ${NB_USER} /home/${NB_USER} && rm OpenCoarrays-${OPENCOARRAYS_VERSION}.tar.gz\n\nWORKDIR /home/${NB_USER}/\n\nENV NUM_IMAGES 4\n\nUSER ${NB_USER}\n"
}