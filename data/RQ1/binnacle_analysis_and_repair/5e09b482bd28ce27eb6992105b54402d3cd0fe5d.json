{
  "startTime": 1674239012934,
  "endTime": 1674239013099,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 159
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM amazonlinux:2017.03\n\nWORKDIR /usr/local/service\n\nENV DJANGO_SETTINGS_MODULE=estate.settings \\\n    PYTHONPATH=/usr/local/service \\\n    PATH=/usr/local/service/node_modules/.bin/:$PATH\n\nRUN yum update -y && \\\n    yum install -y ca-certificates gcc libffi-devel libyaml-devel libmemcached-devel zlib-devel postgresql94-devel python27-devel python27-pip unzip docker git && \\\n    mkdir -p /usr/local/service && rm -rf /var/cache/yum\n\nCOPY ./TERRAFORM_URL.txt /usr/local/service/TERRAFORM_URL.txt\nRUN curl -f -L --silent $(cat /usr/local/service/TERRAFORM_URL.txt) > /terraform.zip && \\\n    unzip /terraform.zip -d /bin/ && \\\n    rm /terraform.zip\n\nENV NODE_VERSION 6.10.2\nRUN curl -f -sLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" && \\\n    tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 && \\\n    rm \"node-v$NODE_VERSION-linux-x64.tar.xz\"\n\nRUN pip install --no-cache-dir coreapi==2.3.0 \\\n                boto3==1.4.4 \\\n                dj-database-url==0.4.1 \\\n                Django==1.10.7 \\\n                django-braces==1.11.0 \\\n                django-crispy-forms==1.6.1 \\\n                django-cors-headers==2.0.2 \\\n                django-elasticache==1.0.3 \\\n                django-extensions==1.7.8 \\\n                django-filter==1.0.2 \\\n                django-permanent==1.1.6 \\\n                django-rest-swagger==2.1.2 \\\n                django-simple-history==1.9.0 \\\n                django-storages==1.5.2 \\\n                django-webpack-loader==0.4.1 \\\n                djangorestframework==3.6.3 \\\n                gevent==1.2.1 \\\n                gunicorn==19.7.1 \\\n                hvac==0.2.17 \\\n                Jinja2==2.9.6 \\\n                markdown==2.6.8 \\\n                psycopg2==2.7.1 \\\n                pyhcl==0.3.5 \\\n                python-consul==0.7.0 \\\n                python-memcached==1.58 \\\n                raven==6.1.0 \\\n                semantic_version==2.6.0 \\\n                structlog==17.1.0 \\\n                whitenoise==3.3.0 && \\\n    pip install --no-cache-dir --global-option=\"--with-libyaml\" pyyaml==3.12\n\nCOPY ./package.json /usr/local/service/package.json\nRUN npm install && npm cache clean --force;\n\nCOPY ./.babelrc /usr/local/service/.babelrc\nCOPY ./webpack /usr/local/service/webpack\nCOPY ./estate /usr/local/service/estate\n\nRUN webpack --bail --config webpack/webpack.prod.config.js && django-admin collectstatic --noinput\n\nCMD [ \"gunicorn\", \"--config\", \"python:estate.gunicorn\", \"estate.wsgi\"]\n"
}