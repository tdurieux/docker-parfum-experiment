{
  "startTime": 1674244556046,
  "endTime": 1674244556243,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN dpkg --add-architecture i386 && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y unzip curl wine-development && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt/msvc2017\n\nARG MSVC_URL\nARG SDK_URL\n\nCOPY lowercase fixinclude ./\nRUN curl -f -LO $MSVC_URL && \\\n    curl -f -LO $SDK_URL && \\\n    unzip $(basename $MSVC_URL) && \\\n    mv VC vc && \\\n    mv vc/Tools vc/tools && \\\n    mv vc/tools/MSVC vc/tools/msvc && \\\n    mkdir kits && \\\n    cd kits && \\\n    unzip ../$(basename $SDK_URL) && \\\n    cd 10 && \\\n    mv Lib lib && \\\n    mv Include include && \\\n    cd ../.. && \\\n    rm $(basename $MSVC_URL) $(basename $SDK_URL) && \\\n    if [ -d kits/10/Redist/10.*/ucrt/DLLs ]; then \\\n        REDIST=$(echo kits/10/Redist/10.*/ucrt/DLLs); \\\n    else \\\n        REDIST=kits/10/Redist/ucrt/DLLs; \\\n    fi && \\\n    SDKVER=$(basename $(echo kits/10/include/* | awk '{print $NF}')) && \\\n    ./lowercase kits/10/include/$SDKVER/um && \\\n    ./lowercase kits/10/include/$SDKVER/shared && \\\n    ./fixinclude kits/10/include/$SDKVER/um && \\\n    ./fixinclude kits/10/include/$SDKVER/shared && \\\n    for arch in x86 x64 arm arm64; do \\\n        ./lowercase kits/10/lib/$SDKVER/um/$arch || exit 1; \\\n    done && \\\n    rm lowercase fixinclude\n\nCOPY wrappers/* ./wrappers/\nRUN SDKVER=$(basename $(echo kits/10/include/* | awk '{print $NF}')) && \\\n    MSVCVER=$(basename $(echo vc/tools/msvc/* | awk '{print $NF}')) && \\\n    cat wrappers/msvcenv.sh | sed 's/MSVCVER=.*/MSVCVER='$MSVCVER/ | sed 's/SDKVER=.*/SDKVER='$SDKVER/ > tmp && \\\n    mv tmp wrappers/msvcenv.sh && \\\n    for arch in x86 x64 arm arm64; do \\\n        mkdir -p bin/$arch && \\\n        cp wrappers/* bin/$arch && \\\n        cat wrappers/msvcenv.sh | sed 's/ARCH=.*/ARCH='$arch/ > bin/$arch/msvcenv.sh || exit 1; \\\n    done && \\\n    rm -rf wrappers\n\n# Initialize the wine environment. Wait until the wineserver process has\n# exited before closing the session, to avoid corrupting the wine prefix.\nRUN wine wineboot --init && \\\n    while pgrep wineserver > /dev/null; do sleep 1; done\n\n# Later stages which actually uses MSVC can ideally start a persistent\n# wine server like this:\n#RUN wineserver -p && \\\n#    wine wineboot && \\\n"
}