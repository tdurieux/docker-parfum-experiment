{
  "startTime": 1674248505543,
  "endTime": 1674248505650,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  The ASF licenses this file to You\n# under the Apache License, Version 2.0 (the \"License\"); you may not\n# use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.  For additional information regarding\n# copyright in this work, please see the NOTICE file in the top level\n# directory of this distribution.\n\n\n# Example Dockerfile for containerizing Roller\n\n\n# STAGE 1 - BUILD ------------------------------------------------\n\nFROM maven:3.6.0-jdk-11-slim as builder\n\nCOPY . /project/\n\n# Build Apache Roller\n\nWORKDIR /tmp\nRUN apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/apache/roller.git\nWORKDIR /tmp/roller\nRUN git checkout bootstrap-ui; \\\nmvn -Duser.home=/builder/home -DskipTests=true -B clean install\n\n\n# STAGE 2 - PACKAGE ------------------------------------------------\n\nFROM tomcat:9.0.20-jre11-slim\n\n# Remove existing Tomcat webapps\n\nRUN rm -rf /usr/local/tomcat/webapps/*\n\n# Add Roller configuration to environment\n\nARG STORAGE_ROOT=/usr/local/tomcat/data\nARG DATABASE_JDBC_DRIVERCLASS=org.postgresql.Driver\nARG DATABASE_JDBC_CONNECTIONURL=jdbc:postgresql://postgresql/rollerdb\nARG DATABASE_JDBC_USERNAME=scott\nARG DATABASE_JDBC_PASSWORD=tiger\nARG DATABASE_HOST=postgresql:5434\n\nENV STORAGE_ROOT ${STORAGE_ROOT}\nENV DATABASE_JDBC_DRIVERCLASS ${DATABASE_JDBC_DRIVERCLASS}\nENV DATABASE_JDBC_CONNECTIONURL ${DATABASE_JDBC_CONNECTIONURL}\nENV DATABASE_JDBC_USERNAME ${DATABASE_JDBC_USERNAME}\nENV DATABASE_JDBC_PASSWORD ${DATABASE_JDBC_PASSWORD}\nENV DATABASE_HOST ${DATABASE_HOST}\n\n# install Roller WAR as ROOT.war, create data dirs\n\nWORKDIR /usr/local/roller\nCOPY --from=builder /project/app/target/roller.war /usr/local/tomcat/webapps/ROOT.war\nRUN mkdir -p data/mediafiles data/searchindex\n\n# download PostgreSQL and MySQL drivers plus Mail and Activation JARs\n\nWORKDIR /usr/local/tomcat/lib\nRUN apt-get update && apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;\nRUN wget -O postgresql.jar https://jdbc.postgresql.org/download/postgresql-9.4-1202.jdbc4.jar\nRUN wget https://repo2.maven.org/maven2/javax/mail/mail/1.4.1/mail-1.4.1.jar\nRUN wget https://repo2.maven.org/maven2/javax/activation/activation/1.1.1/activation-1.1.1.jar\n\n# Add Roller entry-point and go!\n\nCOPY --from=builder /project/docker/entry-point.sh /usr/local/tomcat/bin\nCOPY --from=builder /project/docker/wait-for-it.sh /usr/local/tomcat/bin\nRUN chgrp -R 0 /usr/local/tomcat\nRUN chmod -R g+rw /usr/local/tomcat\n\nWORKDIR /usr/local/tomcat\nENTRYPOINT /usr/local/tomcat/bin/entry-point.sh"
}