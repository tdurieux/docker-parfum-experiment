{
  "startTime": 1674239513576,
  "endTime": 1674239513854,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tensorflow/tensorflow:1.10.1-gpu-py3\n\n# Everything below this line is common between CPU and GPU images.\n\n# Needed for click to work\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\n\n# Install misc. packages, GDAL, jq (for parsing extra-requirements.json), Tippecanoe dependencies, and OpenCV\nRUN add-apt-repository ppa:ubuntugis/ppa && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y wget=1.* git=1:2.* python-protobuf=2.* python3-tk=3.* \\\n                       gdal-bin=2.2.* \\\n                       jq=1.5* \\\n                       build-essential libsqlite3-dev=3.11.* zlib1g-dev=1:1.2.* \\\n                       libopencv-dev=2.4.* python-opencv=2.4.* && \\\n    apt-get autoremove && apt-get autoclean && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install protoc\nRUN wget -O /tmp/protoc3.zip https://github.com/google/protobuf/releases/download/v3.2.0/protoc-3.2.0-linux-x86_64.zip && \\\n    unzip /tmp/protoc3.zip -d /tmp/protoc3 && \\\n    mv /tmp/protoc3/bin/* /usr/local/bin/ && \\\n    mv /tmp/protoc3/include/* /usr/local/include/ && \\\n    rm -R /tmp/protoc3 && \\\n    rm /tmp/protoc3.zip\n\n# Install TF Object Detection API in /opt/tf-models\nRUN mkdir -p /opt/tf-models/temp/ && \\\n    cd /opt/tf-models/temp/ && \\\n    git clone --single-branch -b AZ-v1.11-RV-v0.8.0 https://github.com/azavea/models.git && \\\n    mv models/research/object_detection/ ../object_detection && \\\n    mv models/research/deeplab/ ../deeplab && \\\n    mv models/research/slim/ ../slim && \\\n    cd .. && \\\n    rm -R temp && \\\n    protoc object_detection/protos/*.proto --python_out=. && \\\n    pip install --no-cache-dir cython==0.28.* && \\\n    pip install --no-cache-dir pycocotools==2.0.*\n\n# Setup GDAL_DATA directory, rasterio needs it.\nENV GDAL_DATA=/usr/share/gdal/2.2/\n\n# See https://github.com/mapbox/rasterio/issues/1289\nENV CURL_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt\n\n# Make Python3 default Python\nRUN rm -f /usr/bin/pip && ln -s /usr/bin/pip3 /usr/bin/pip\nRUN rm -f /usr/bin/python && ln -s /usr/bin/python3 /usr/bin/python\n\n# Install Tippecanoe\nRUN cd /tmp && \\\n    wget https://github.com/mapbox/tippecanoe/archive/1.32.5.zip && \\\n    unzip 1.32.5.zip && \\\n    cd tippecanoe-1.32.5 && \\\n    make && \\\n    make install\n\n# Set WORKDIR and PYTHONPATH\nWORKDIR /opt/src/\nENV PYTHONPATH=/opt/src:/opt/tf-models:/opt/tf-models/slim:$PYTHONPATH\n\n# Install requirements-dev.txt\nCOPY ./requirements-dev.txt /opt/src/requirements-dev.txt\nRUN pip install --no-cache-dir -r requirements-dev.txt\n\n# Install docs/requirements.txt\nCOPY ./docs/requirements.txt /opt/src/docs/requirements.txt\nRUN pip install --no-cache-dir -r docs/requirements.txt\n\n# Install extras_requirements.json\n# Don't install tensorflow\nCOPY ./extras_requirements.json /opt/src/extras_requirements.json\nRUN cat extras_requirements.json | jq  '.[][]' | grep -v 'tensorflow' | sort -u | xargs pip install\n\n# Install requirements.txt\nCOPY ./requirements.txt /opt/src/requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Install optional-requirements.txt\nCOPY ./optional-requirements.txt /opt/src/optional-requirements.txt\nRUN pip install --no-cache-dir -r optional-requirements.txt\n"
}