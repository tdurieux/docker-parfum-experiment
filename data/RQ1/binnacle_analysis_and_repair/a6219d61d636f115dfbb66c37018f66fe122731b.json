{
  "startTime": 1674234409087,
  "endTime": 1674234409259,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 29,
        "columnStart": 44,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM buildpack-deps:jessie-curl\n\nLABEL maintainer=\"Mihkel Sokk <mihkelsokk@gmail.com>\"\n\nENV RENDERER_ACCESS_KEY=changeme \\\n    CONCURRENCY=1 \\\n    WINDOW_WIDTH=1024 \\\n    WINDOW_HEIGHT=768 \\\n    NODE_ENV=production \\\n    ELECTRON_ENABLE_STACK_DUMPING=true \\\n    ELECTRON_ENABLE_LOGGING=true \\\n    ELECTRON_DISABLE_SECURITY_WARNINGS=true\n\nWORKDIR /app\n\n# Add subpixel hinting\nCOPY .fonts.conf /root/.fonts.conf\n\n# Install the packages needed to run Electron\nRUN sed -i 's/main/main contrib/g' /etc/apt/sources.list\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y \\\n\tunzip \\\n\txvfb \\\n\tlibgtk2.0-0 \\\n\tttf-mscorefonts-installer \\\n\tlibnotify4 \\\n\tlibgconf2-4 \\\n\tlibxss1 \\\n\tlibnss3 \\\n\tdbus-x11 \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# As the inline fonts should not change much put them before the app\nCOPY fonts/* /usr/share/fonts/truetype/\n\n# Install NodeJS\nRUN curl -f -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -\nRUN echo \"deb http://deb.nodesource.com/node_10.x jessie main\" > /etc/apt/sources.list.d/nodesource.list\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\tnodejs \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& rm -f /etc/apt/sources.list.d/nodesource.list\n\n# Install dependencies\nCOPY package.json /app/package.json\nRUN sed -i '/\\\"electron\\\"\\:/d' ./package.json \\\n\t&& npm install --production --no-optional && npm cache clean --force;\n\n# Install Electron\n# You can define a different Electron version on build using the `--build-args electron_version=x.y.z` argument\nARG electron_version=4.0.6\nRUN wget \"https://github.com/atom/electron/releases/download/v${electron_version}/electron-v${electron_version}-linux-x64.zip\" -O electron.zip \\\n\t&& unzip electron.zip \\\n\t&& rm electron.zip\n\n# Clean up\nRUN apt-get remove -y unzip nodejs \\\n\t&& apt-get clean\n\nCOPY . /app\n\nEXPOSE 3000\nCMD [\"sh\", \"-c\", \"[ -e /tmp/.X99-lock ] && rm /tmp/.X99-lock; xvfb-run -e /dev/stdout --server-args=\\\"-screen 0 ${WINDOW_WIDTH}x${WINDOW_HEIGHT}x24\\\" ./electron --disable-gpu src/server.js\"]\n"
}