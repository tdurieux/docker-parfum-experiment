{
  "startTime": 1674253141261,
  "endTime": 1674253141295,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###\n# Build with 'docker build -t standard_notes_web.img .'\n# Run with 'docker run -d -p 127.0.0.1:3000:3000 --name standard_notes_web --restart always standard_notes_web.img'\n# If you need shell access, run 'docker exec -it standard_notes_web /bin/sh'\n# Access from http://localhost:3000/\n# Set up Nginx to terminate SSL with LetsEncrypt and proxy_pass to http://localhost:3000/\n###\n\nFROM ruby:alpine\n\nRUN apk add --update --no-cache \\\n    alpine-sdk \\\n    nodejs \\\n    nodejs-npm \\\n    tzdata\n\nWORKDIR /app/\n\nCOPY . /app/\n\n###\n# FOR PRODUCTION USE:\n#\n# If you need the app to continue listening on HTTP instead of HTTPS\n# (like terminating SSL on upstream server, i.e. Nginx proxy_pass to HTTP),\n# you will need to set 'config.force_ssl = false' in 'config/environments/production.rb'.\n#\n# Uncomment SECRET_KEY_BASE, RAILS_ENV, and [optionally] RAILS_SERVE_STATIC_FILES for production:\n# ENV SECRET_KEY_BASE=[VALUE OF `bundle exec rake secret`]\n#\n# ENV RAILS_ENV=production\n#\n# ENV RAILS_SERVE_STATIC_FILES=true\n# Leave RAILS_SERVE_STATIC_FILES commented if Nginx/Apache will serve static files instead of rails.\n###\n\nRUN bundle install\n\nRUN npm install && npm cache clean --force;\n\nRUN npm run build\n\n# Uncomment the line below for production:\n# RUN bundle exec rake assets:precompile\n\nEXPOSE 3000\n\nENTRYPOINT [ \"./docker/entrypoint\" ]\n\nCMD [ \"start\" ]\n"
}