{
  "startTime": 1674235232708,
  "endTime": 1674235232892,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM jenkins/jenkins\n\nUSER root\n\n# Add sudo capabilities\nRUN apt-get update && apt-get install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*\nRUN echo \"jenkins ALL=NOPASSWD: ALL\" >> /etc/sudoers\n\n# Install vim (useful to have there)\nRUN apt-get update && apt-get install --no-install-recommends -y vim && rm -rf /var/lib/apt/lists/*;\n\n# Configure Maven to be auto-installed in Jenkins\nCOPY --chown=jenkins:jenkins mvn/* /var/jenkins_home/\n\n# Easy access to maven in command-line (once installed)\nRUN ln -s /var/jenkins_home/tools/hudson.tasks.Maven_MavenInstallation/Default/bin/mvn /usr/bin/mvn\n\n# Configure Docker to be auto-installed in Jenkins\nCOPY --chown=jenkins:jenkins docker/org.jenkinsci.plugins.docker.commons.tools.DockerTool.xml /var/jenkins_home/\n\n# Easy access to docker in command-line (once installed)\nRUN ln -s /var/jenkins_home/tools/org.jenkinsci.plugins.docker.commons.tools.DockerTool/Default/bin/docker /usr/bin/docker\n\n# Install Docker Compose\nRUN curl -f -L https://github.com/docker/compose/releases/download/1.21.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose\nRUN chmod a+x /usr/local/bin/docker-compose\n\n# Pre-load all necessary plugins\nCOPY --chown=jenkins:jenkins plugins/plugins-list /var/jenkins_home/\nRUN /usr/local/bin/install-plugins.sh `cat /var/jenkins_home/plugins-list`\n\n# Configure build all three pipelines\nCOPY --chown=jenkins:jenkins jobs/ /var/jenkins_home/jobs/\n\n# Relax security rules to be able to display Serenity BDD reports correctly\nENV JAVA_OPTS -Dhudson.model.DirectoryBrowserSupport.CSP=\\\"\\\"\n\nUSER jenkins\n"
}