{
  "startTime": 1674243820190,
  "endTime": 1674243820710,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 43,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 12,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 12,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 35,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 52,
        "columnStart": 32,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    autoconf \\\n    automake \\\n    ccache \\\n    curl \\\n    g++ \\\n    libtool \\\n    make \\\n    unzip \\\n    wget \\\n    git \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN wget https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.sh \\\n    && sed -i 's/interactive=TRUE/interactive=FALSE/g' cmake-3.7.2-Linux-x86_64.sh \\\n    && sed -i 's/cpack_skip_license=FALSE/cpack_skip_license=TRUE/g' cmake-3.7.2-Linux-x86_64.sh \\\n    && sh cmake-3.7.2-Linux-x86_64.sh --prefix=/usr \\\n    && rm -Rf cmake-3.7.2-Linux-x86_64.sh\n\nRUN git clone https://github.com/google/protobuf \\\n    && cd protobuf \\\n    && git checkout v3.4.0 \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n    && make install \\\n    && cd .. \\\n    && rm -Rf protobuf\n\n# Install Bazel\n# 1.Install JDK 8\nRUN sudo apt-get update \\\n    && sudo apt-get install --no-install-recommends -y software-properties-common \\\n    && sudo add-apt-repository -y ppa:webupd8team/java \\\n    && sudo apt-get update \\\n    && echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections \\\n    && echo debconf shared/accepted-oracle-license-v1-1 seen   true | sudo debconf-set-selections \\\n    && sudo apt-get install --no-install-recommends -y oracle-java8-installer \\\n# 2. Add Bazel distribution URI as a package source\n    && echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | sudo tee /etc/apt/sources.list.d/bazel.list \\\n    && curl -f https://bazel.build/bazel-release.pub.gpg | sudo apt-key add - \\\n# 3. Install and update Bazel\n    && sudo apt-get update && sudo apt-get install --no-install-recommends -y bazel && sudo apt-get upgrade -y bazel \\\n    && sudo apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Install TensorFlow Python dependencies\nRUN sudo apt-get update && sudo apt-get install --no-install-recommends -y \\\n    python-numpy \\\n    python-dev \\\n    python-pip \\\n    python-wheel \\\n    swig \\\n    && sudo apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p /hello_tensorflow\nCOPY eigen.sh /hello_tensorflow/\nWORKDIR /hello_tensorflow\n\n# Install TensorFlow\nRUN git clone --recurse-submodules -b v1.4.0-rc1 https://github.com/tensorflow/tensorflow.git \\\n    && cd tensorflow \\\n    && printf '\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n' | ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && bazel build //tensorflow:libtensorflow_cc.so \\\n    && sudo mkdir -p                /usr/local/include/google/tensorflow \\\n    && sudo cp -r bazel-genfiles/*  /usr/local/include/google/tensorflow/ \\\n    && sudo cp -r tensorflow        /usr/local/include/google/tensorflow/ \\\n    && sudo find                    /usr/local/include/google/tensorflow -type f  ! -name \"*.h\" -delete \\\n    && sudo cp -r third_party       /usr/local/include/google/tensorflow/ \\\n    && sudo cp bazel-bin/tensorflow/libtensorflow_cc.so /usr/local/lib \\\n    && sudo cp bazel-bin/tensorflow/libtensorflow_framework.so /usr/local/lib \\\n    && cd .. \\\n    && sudo ./eigen.sh install ./tensorflow /usr/local \\\n    && rm -Rf tensorflow && rm -Rf ~/.cache\n\nRUN git clone https://github.com/google/nsync.git \\\n    && cd nsync \\\n    && git checkout 839fcc53ff9be58218ed55397deb3f8376a1444e \\\n    && cmake -DCMAKE_INSTALL_PREFIX=/usr \\\n    && make -j4 install \\\n    && cd .. \\\n    && rm -Rf nsync\n\nCOPY CMakeLists.txt /hello_tensorflow/\nCOPY cmake /hello_tensorflow/cmake/\nCOPY data  /hello_tensorflow/data/\nRUN curl -f -L \"https://storage.googleapis.com/download.tensorflow.org/models/inception_v3_2016_08_28_frozen.pb.tar.gz\" | \\\n    tar -C ./data -xz\nCOPY main.cc  /hello_tensorflow/\nRUN cmake . && make -j4 \\\n    && ./hello_tensorflow\n"
}