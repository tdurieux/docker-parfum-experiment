{
  "startTime": 1674236483018,
  "endTime": 1674236483178,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 57,
        "columnStart": 22,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# was ubuntu:16.04\nFROM phusion/baseimage as builder\n\nARG UID=1000\nARG GID=1000\n\nWORKDIR /sgx-lkl\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  build-essential \\\n  curl \\\n  wget \\\n  pv \\\n  make gcc g++ bc python xutils-dev flex bison autogen libgcrypt20-dev libjson-c-dev autopoint pkgconf autoconf libtool libcurl4-openssl-dev libprotobuf-dev libprotobuf-c-dev protobuf-compiler protobuf-c-compiler libssl-dev \\\n  sudo \\\n  git && rm -rf /var/lib/apt/lists/*;\n\nRUN useradd --create-home -u ${UID} -s /bin/bash user && \\\n    adduser user sudo && \\\n    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nUSER user\nENV USER=user\n\nFROM phusion/baseimage as deploy\n\nWORKDIR /sgx-lkl\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  curl \\\n  openjdk-8-jdk-headless \\\n  sudo \\\n  make \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN useradd --create-home -s /bin/bash user && \\\n    adduser user sudo && \\\n    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nUSER user\nENV USER=user\n\nCOPY --chown=user:user build build/\nCOPY --chown=user:user apps apps/\nCOPY --chown=user:user tools tools/\n\n# Start from a Bash prompt\nCMD [\"/bin/bash\"]\n\n# Building mimimum image that only contains SGX-LKL\n\nFROM phusion/baseimage as min-deploy\n\nWORKDIR /sgx-lkl\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  sudo \\\n  iproute2 iptables net-tools \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN useradd --create-home -s /bin/bash user && \\\n    adduser user sudo && \\\n    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nUSER user\nENV USER=user\n\nARG binary_cmd\nENV env_binary_cmd=\"${binary_cmd}\"\nARG binary_args\nENV env_binary_args=${binary_args}\n\nCOPY --chown=user:user build build/\nCOPY --chown=user:user enclave_rootfs.img  .\n\n# Start from a Bash prompt\nCMD [\"/bin/bash\", \"-c\", \"sudo ip tuntap add dev sgxlkl_tap0 mode tap user user \\\n    && sudo ip link set dev sgxlkl_tap0 up \\\n    && sudo ip addr add dev sgxlkl_tap0 10.0.1.254/24 \\\n    && sudo iptables -I FORWARD -m state -s 10.0.1.0/24 --state NEW,RELATED,ESTABLISHED -j ACCEPT \\\n    && sudo iptables -I FORWARD -m state -d 10.0.1.0/24 --state NEW,RELATED,ESTABLISHED -j ACCEPT \\\n    && sudo iptables -t nat -A POSTROUTING -s 10.0.1.0/24 ! -d 10.0.1.0/24 -j MASQUERADE \\\n    && sudo sysctl -w net.ipv4.ip_forward=1 \\\n    && sudo chown user /dev/net/tun \\\n    && SGXLKL_TAP=sgxlkl_tap0 SGXLKL_HEAP=2500M /sgx-lkl/build/sgx-lkl-run /sgx-lkl/enclave_rootfs.img ${env_binary_cmd} ${env_binary_args}\"]\n"
}