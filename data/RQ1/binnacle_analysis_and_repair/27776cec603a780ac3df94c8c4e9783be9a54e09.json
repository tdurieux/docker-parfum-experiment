{
  "startTime": 1674241746421,
  "endTime": 1674241747047,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 1239
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 67,
        "columnStart": 25,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Â© Copyright IBM Corporation 2017, 2019.\n# LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n\n############################# Dockerfile for PHP 7.3.2 ###############################\n#\n# This Dockerfile builds a basic installation of PHP\n#\n#PHP is a server-side scripting language designed for web development, but which can also be used as a general-purpose programming language.\n#PHP can be added to straight HTML or it can be used with a variety of templating engines and web frameworks.\n#PHP code is usually processed by an interpreter, which is either implemented as a native module on the web-server or\n#as a common gateway interface (CGI).\n#\n# To build this image, from the directory containing this Dockerfile\n# (assuming that the file is named Dockerfile):\n# docker build -t <image_name> .\n#\n# Use the following command to start PHP container.\n# docker run --name <container name> -it <image name> /bin/bash\n#\n#\n######################################################################################\n\n# Base Image\nFROM s390x/ubuntu:16.04\n\n# The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\n\nWORKDIR \"/root\"\n\nENV PATH=/usr/local/bin:$PATH\n\nRUN apt-get update -y && apt-get -y --no-install-recommends install \\\n    autoconf \\\n    automake \\\n    bison \\\n    flex \\\n    gcc \\\n    git \\\n    libbz2-dev \\\n    libcurl4-gnutls-dev \\\n    libdb-dev \\\n    libfreetype6-dev \\\n    libgdbm-dev \\\n    libgmp3-dev \\\n    libjpeg-dev \\\n    libldap2-dev \\\n    libicu-dev \\\n    libmcrypt-dev \\\n    libmysqlclient-dev \\\n    libpcre3-dev \\\n    libpng-dev \\\n    libpq-dev \\\n    libreadline-dev \\\n    libsasl2-dev \\\n    libsnmp-dev \\\n    libssl-dev \\\n    libtool-bin \\\n    libxml2-dev \\\n    libxpm-dev \\\n    libxslt1-dev \\\n    libzip-dev \\\n    make \\\n    openssl \\\n    pkg-config \\\n    re2c \\\n    snmp-mibs-downloader \\\n    unixodbc-dev \\\n\n# Download PHP\n && cd /root && git clone git://github.com/php/php-src.git \\\n && cd php-src && git checkout tags/php-7.3.2 \\\n && sed -i \"1832,1832 s/size_t/unsigned int/g\" ext/phar/util.c \\\n && ln -sf /usr/lib/s390x-linux-gnu/libldap.so /usr/lib/libldap.so \\\n && ln -sf /usr/lib/s390x-linux-gnu/liblber.so /usr/lib/liblber.so \\\n && ln -sf /usr/include/s390x-linux-gnu/gmp.h /usr/include/gmp.h \\\n\n # apply patch\n && sed -i '531,531 s/short int/int/' ext/mbstring/oniguruma/src/regint.h \\\n\n# Configure and Install PHP\n && cd /root/php-src \\\n && ./buildconf --force \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --datadir=/usr/local/share/php --localstatedir=/var --mandir=/usr/local/share/man --prefix=/usr/local --sysconfdir=/usr/local/etc --enable-bcmath --enable-calendar --enable-ctype --with-curl --enable-dba=shared --enable-exif --enable-filter --enable-flatfile --enable-fpm --enable-ftp --enable-gd-native-ttf --enable-inifile --enable-intl --enable-mbstring --enable-mysqlnd --enable-opcache --enable-pcntl --enable-shmop --enable-simplexml --enable-sockets --enable-sysvsem --enable-sysvshm --enable-sysvmsg --enable-xmlreader --enable-xmlwriter --enable-zend-signals --enable-zip --disable-phpdbg --disable-phpdbg-webhelper --with-bz2 --with-config-file-path=/usr/local/etc --with-config-file-scan-dir=/usr/local/etc/conf.d --with-freetype-dir --with-gd --with-gdbm --with-gettext --with-gmp --with-iconv --with-jpeg-dir --with-kerberos --with-ldap --with-ldap-sasl --with-mcrypt --with-mysql-sock=/var/lib/mysql/mysql.sock --with-mysqli=mysqlnd --with-openssl --with-pcre-regex --with-pdo-mysql=mysqlnd --with-pdo-odbc=unixODBC,/usr --with-pdo-pgsql --with-pdo-sqlite --with-pgsql --with-png-dir --with-readline --with-snmp --with-sqlite3 --with-unixODBC=/usr --with-xpm-dir=/usr --with-xsl --with-zlib --without-pcre-jit \\\n && make clean \\\n && make -j$(cat /proc/cpuinfo | grep processor | wc -l) \\\n && make install \\\n && install -m644 php.ini-production /usr/local/etc/php.ini \\\n && sed -i 's@php/includes\"@&\\ninclude_path = \".:/usr/local/lib/php\"@' /usr/local/etc/php.ini \\\n\n# Prepare conf files\n && chmod 776 /usr/local/etc/php-fpm.conf.default \\\n && cd /usr/local/etc \\\n && sed -i '18i pid = run/php-fpm.pid' php-fpm.conf.default \\\n && mv /usr/local/etc/php-fpm.conf.default /usr/local/etc/php-fpm.conf \\\n && mv /usr/local/etc/php-fpm.d/www.conf.default /usr/local/etc/php-fpm.d/www.conf \\\n && chmod 776 /root/php-src/sapi/fpm/php-fpm.service.in \\\n && cd /root/php-src/sapi/fpm/ \\\n && sed -i '10d' php-fpm.service.in \\\n && sed -i '10i Type=simple' php-fpm.service.in \\\n && sed -i '11d' php-fpm.service.in \\\n && sed -i '11i PIDFile=/var/run/php-fpm.pid' php-fpm.service.in \\\n && sed -i '12d' php-fpm.service.in \\\n && sed -i '12i ExecStart=/usr/local/sbin/php-fpm --nodaemonize --fpm-config /usr/local/etc/php-fpm.conf' php-fpm.service.in \\\n && cp /root/php-src/sapi/fpm/php-fpm.service.in /lib/systemd/system/php-fpm.service \\\n && chmod 776  /usr/local/etc/php.ini \\\n && cd /usr/local/etc/ \\\n && sed -i '1784i zend_extension=opcache.so' php.ini \\\n\n# Cleanup unwanted packages and source files\n && apt-get remove -y \\\n    autoconf \\\n    automake \\\n    bison \\\n    flex \\\n    git \\\n    make \\\n    pkg-config \\\n    re2c \\\n && apt autoremove -y \\\n && apt-get clean && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /root/php-src\n\n CMD php -v\n\n"
}