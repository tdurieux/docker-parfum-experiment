{
  "startTime": 1674252796165,
  "endTime": 1674252796299,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 2,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 14,
        "columnStart": 20,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial as base\n\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -qy software-properties-common python3-software-properties && \\\n  apt-get update && apt-get install --no-install-recommends -qy \\\n    build-essential \\\n    wget \\\n    python3 \\\n    r-base \\\n    libffi-dev \\\n    libssl-dev \\\n    libjpeg-dev \\\n    zlib1g-dev \\\n    r-base \\\n    libpython3-dev && \\\n  apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN wget https://bootstrap.pypa.io/get-pip.py && python3 get-pip.py\n\n\nFROM base as build\n\nRUN apt-get update && apt-get install --no-install-recommends -qy git && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./ /girder_worker/\nWORKDIR /girder_worker\n\nRUN rm -rf ./dist && python3 setup.py sdist\n\n\nFROM base\nCOPY --from=build /girder_worker/dist/*.tar.gz /\nCOPY --from=build /girder_worker/docker-entrypoint.sh /docker-entrypoint.sh\nRUN pip3 install --no-cache-dir /*.tar.gz\n\nRUN useradd -D --shell=/bin/bash && useradd -m worker\n\nRUN chown -R worker:worker /usr/local/lib/python3.5/dist-packages/girder_worker/\n\nUSER worker\n\nRUN girder-worker-config set celery broker \"amqp://%(RABBITMQ_USER)s:%(RABBITMQ_PASS)s@%(RABBITMQ_HOST)s/\"\n\n\nVOLUME /girder_worker\n\nENV PYTHON_BIN=python3\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}