{
  "startTime": 1674239714063,
  "endTime": 1674239714644,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 8,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 8,
        "columnEnd": 62
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 26,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 26,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 26,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 26,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 26,
        "columnEnd": 107
      }
    }
  ],
  "repairedDockerfile": "FROM php:%PHP_BASE_IMAGE%\nSHELL [\"/bin/bash\", \"-c\"]\nENV PHP_VERSION %PHP_VERSION%\n\nRUN a2enmod rewrite expires include deflate remoteip headers\n\nENV APACHE_RUN_USER www-data\n# Edit the default DocumentRoot setting\nENV APACHE_DOCUMENT_ROOT /home/site/wwwroot\nRUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf\nRUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf\n# Edit the default port setting\nENV APACHE_PORT 8080\nRUN sed -ri -e 's!<VirtualHost \\*:80>!<VirtualHost *:${APACHE_PORT}>!g' /etc/apache2/sites-available/*.conf\nRUN sed -ri -e 's!<VirtualHost _default_:443>!<VirtualHost _default_:${APACHE_PORT}>!g' /etc/apache2/sites-available/*.conf\nRUN sed -ri -e 's!Listen 80!Listen ${APACHE_PORT}!g' /etc/apache2/ports.conf\n\n# Install common PHP extensions\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n    \tlibzip-dev \\\n        libpng-dev \\\n        libjpeg-dev \\\n        libpq-dev \\\n        libldap2-dev \\\n        libldb-dev \\\n        libicu-dev \\\n        libgmp-dev \\\n        libmagickwand-dev \\\n        libc-client-dev \\\n        libtidy-dev \\\n        libkrb5-dev \\\n        libxslt-dev \\\n        unixodbc-dev \\\n        openssh-server \\\n        vim \\\n        curl \\\n        wget \\\n        tcptraceroute \\\n        mysql-client \\\n    && ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so \\\n    && ln -s /usr/lib/x86_64-linux-gnu/liblber.so /usr/lib/liblber.so \\\n    && ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \\\n    && docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \\\n    && docker-php-ext-configure imap --with-kerberos --with-imap-ssl \\\n    && docker-php-ext-configure pdo_odbc --with-pdo-odbc=unixODBC,/usr \\\n    && docker-php-ext-install gd \\\n        mysqli \\\n        opcache \\\n        pdo \\\n        pdo_mysql \\\n        pdo_pgsql \\\n        pgsql \\\n        ldap \\\n        intl \\\n        gmp \\\n        zip \\\n        bcmath \\\n        mbstring \\\n        pcntl \\\n        calendar \\\n        exif \\\n        gettext \\\n        imap \\\n        tidy \\\n        shmop \\\n        soap \\\n        sockets \\\n        sysvmsg \\\n        sysvsem \\\n        sysvshm \\\n        pdo_odbc \\\n        wddx \\\n        xmlrpc \\\n        xsl \\\n    && pecl install imagick && docker-php-ext-enable imagick && rm -rf /var/lib/apt/lists/*;\n\n# Install the Microsoft SQL Server PDO driver on supported versions only.\n#  - https://docs.microsoft.com/en-us/sql/connect/php/installation-tutorial-linux-mac\n#  - https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server\nRUN set -eux; \\\n    if [[ $PHP_VERSION == 7.1.* || $PHP_VERSION == 7.2.* || $PHP_VERSION == 7.3.* ]]; then \\\n        apt-get update && apt-get install --no-install-recommends -y gnupg2 apt-transport-https && \\\n        curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add -; rm -rf /var/lib/apt/lists/*; \\\n        curl -f https://packages.microsoft.com/config/debian/9/prod.list > /etc/apt/sources.list.d/mssql-release.list; \\\n        apt-get update && ACCEPT_EULA=Y apt-get --no-install-recommends install -y msodbcsql17 unixodbc-dev; \\\n\t\tpecl install sqlsrv pdo_sqlsrv && \\\n\t\techo extension=pdo_sqlsrv.so >> `php --ini | grep \"Scan for additional .ini files\" | sed -e \"s|.*:\\s*||\"`/30-pdo_sqlsrv.ini && \\\n\t\techo extension=sqlsrv.so >> `php --ini | grep \"Scan for additional .ini files\" | sed -e \"s|.*:\\s*||\"`/20-sqlsrv.ini; \\\n\tfi\n\nRUN { \\\n                echo 'opcache.memory_consumption=128'; \\\n                echo 'opcache.interned_strings_buffer=8'; \\\n                echo 'opcache.max_accelerated_files=4000'; \\\n                echo 'opcache.revalidate_freq=60'; \\\n                echo 'opcache.fast_shutdown=1'; \\\n                echo 'opcache.enable_cli=1'; \\\n    } > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\nRUN { \\\n                echo 'error_log=/var/log/apache2/php-error.log'; \\\n                echo 'display_errors=Off'; \\\n                echo 'log_errors=On'; \\\n                echo 'display_startup_errors=Off'; \\\n                echo 'date.timezone=UTC'; \\\n                echo 'zend_extension=opcache'; \\\n    } > /usr/local/etc/php/conf.d/php.ini\n\n\nRUN set -x \\\n    && docker-php-source extract \\\n    && cd /usr/src/php/ext/odbc \\\n    && phpize \\\n    && sed -ri 's@^ *test +\"\\$PHP_.*\" *= *\"no\" *&& *PHP_.*=yes *$@#&@g' configure \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-unixODBC=shared,/usr \\\n    && docker-php-ext-install odbc\n\n"
}