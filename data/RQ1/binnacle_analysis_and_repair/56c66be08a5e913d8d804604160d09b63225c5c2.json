{
  "startTime": 1674251057046,
  "endTime": 1674251057289,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nMAINTAINER Anton Malinskiy \"anton@malinskiy.com\"\n\n# Set up insecure default key\nCOPY adbkey adbkey.pub adb_usb.ini /root/.android/\n\nENV LINK_ANDROID_SDK=https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip \\\n    LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US:en \\\n    LC_ALL=en_US.UTF-8 \\\n    ANDROID_HOME=/opt/android-sdk-linux \\\n    PATH=\"$PATH:/opt/android-sdk-linux/tools:/opt/android-sdk-linux/platform-tools:/opt/android-sdk-linux/tools/bin:/opt/android-sdk-linux/emulator\"\n\nRUN dpkg --add-architecture i386 && \\\n    echo \"deb mirror://mirrors.ubuntu.com/mirrors.txt bionic main restricted universe multiverse\" > /etc/apt/sources.list && \\\n    echo \"deb mirror://mirrors.ubuntu.com/mirrors.txt bionic-updates main restricted universe multiverse\" >> /etc/apt/sources.list && \\\n    echo \"deb mirror://mirrors.ubuntu.com/mirrors.txt bionic-security main restricted universe multiverse\" >> /etc/apt/sources.list && \\\n    echo \"deb mirror://mirrors.ubuntu.com/mirrors.txt bionic-backports main restricted universe multiverse\" >> /etc/apt/sources.list && \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -yq software-properties-common libstdc++6:i386 zlib1g:i386 libncurses5:i386 \\\n                        locales ca-certificates apt-transport-https curl unzip redir iproute2 \\\n                        openjdk-8-jdk xvfb x11vnc fluxbox nano libpulse0 telnet expect\\\n                        --no-install-recommends && \\\n    locale-gen en_US.UTF-8 && \\\n    # Install Android SDK\n    curl -f -L $LINK_ANDROID_SDK > /tmp/android-sdk-linux.zip && \\\n    unzip -q /tmp/android-sdk-linux.zip -d /opt/android-sdk-linux/ && \\\n    rm /tmp/android-sdk-linux.zip && \\\n    # Customized steps per specific platform\n    yes | sdkmanager --no_https --licenses && \\\n    yes | sdkmanager emulator tools platform-tools \"platforms;{{ platform }}\" \"system-images;{{ platform }};google_apis;x86\" --verbose | uniq && \\\n    echo no | avdmanager create avd -n \"x86\" --package \"system-images;{{ platform }};google_apis;x86\" --tag google_apis && \\\n    # Unfilter devices (now local because CI downloads from github are unstable)\n    # curl -o /root/.android/adb_usb.ini https://raw.githubusercontent.com/apkudo/adbusbini/master/adb_usb.ini && \\\n    DEBIAN_FRONTEND=noninteractive apt-get purge -yq unzip openjdk-8-jdk && \\\n    # Convert large partitions to qcow2 to save space\n    qemu-img convert -O qcow2 -c /opt/android-sdk-linux/system-images/{{ platform }}/google_apis/x86/system.img /opt/android-sdk-linux/system-images/{{ platform }}/google_apis/x86/system.qcow2 && \\\n    mv /opt/android-sdk-linux/system-images/{{ platform }}/google_apis/x86/system.qcow2 /opt/android-sdk-linux/system-images/{{ platform }}/google_apis/x86/system.img && \\\n    qemu-img convert -O qcow2 -c /opt/android-sdk-linux/system-images/{{ platform }}/google_apis/x86/userdata.img /opt/android-sdk-linux/system-images/{{ platform }}/google_apis/x86/userdata.qcow2 && \\\n    mv /opt/android-sdk-linux/system-images/{{ platform }}/google_apis/x86/userdata.qcow2 /opt/android-sdk-linux/system-images/{{ platform }}/google_apis/x86/userdata.img && \\\n    qemu-img resize /root/.android/avd/x86.avd/userdata.img 2G && \\\n    e2fsck -fy /root/.android/avd/x86.avd/userdata.img && \\\n    resize2fs /root/.android/avd/x86.avd/userdata.img && \\\n    qemu-img convert -O qcow2 -c /root/.android/avd/x86.avd/userdata.img /root/.android/avd/x86.avd/userdata.qcow2 && \\\n    mv /root/.android/avd/x86.avd/userdata.qcow2 /root/.android/avd/x86.avd/userdata.img && \\\n    (qemu-img convert -O qcow2 -c /opt/android-sdk-linux/system-images/{{ platform }}/google_apis/x86/vendor.img /opt/android-sdk-linux/system-images/{{ platform }}/google_apis/x86/vendor.qcow2 && \\\n    mv /opt/android-sdk-linux/system-images/{{ platform }}/google_apis/x86/vendor.qcow2 /opt/android-sdk-linux/system-images/{{ platform }}/google_apis/x86/vendor.img || true) && \\\n    # Clean up\n    apt-get -yq autoremove && \\\n    apt-get clean && \\\n    apt-get autoclean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nCOPY config.ini /root/.android/avd/x86.avd/config.ini\n\n# Expose adb\nEXPOSE 5037 5554 5555 5900\n\n# Add script\nCOPY start.sh /start.sh\nRUN chmod +x /start.sh\nCMD [\"/start.sh\"]\n"
}