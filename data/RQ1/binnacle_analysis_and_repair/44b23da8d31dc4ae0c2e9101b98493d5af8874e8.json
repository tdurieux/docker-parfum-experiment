{
  "startTime": 1674249808288,
  "endTime": 1674249810970,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 3,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 198,
        "lineEnd": 198,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 217,
        "lineEnd": 217,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 270,
        "lineEnd": 270,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 274,
        "lineEnd": 274,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 278,
        "lineEnd": 278,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 282,
        "lineEnd": 282,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 286,
        "lineEnd": 286,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 289,
        "lineEnd": 289,
        "columnStart": 16,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 293,
        "lineEnd": 293,
        "columnStart": 3,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 301,
        "lineEnd": 301,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 3,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Auto-generated via Ansible: edit build/ansible/DOCKERFILES/Dockerfile-work.j2 instead.\nFROM devilbox/php-fpm:7.1-prod\nMAINTAINER \"cytopia\" <cytopia@everythingcli.org>\n\n\n###\n### Labels\n###\nLABEL \\\n\tname=\"cytopia's PHP-FPM 7.1 Image\" \\\n\timage=\"devilbox/php-fpm\" \\\n\ttag=\"7.1-work\" \\\n\tvendor=\"devilbox\" \\\n\tlicense=\"MIT\"\n\n\n###\n### Envs\n###\nENV BASH_PROFILE=\".bashrc\"\n\n\n###\n### Install Tools\n###\nRUN set -x \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests apt-utils \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests \\\n\t\tcurl \\\n\t\tdirmngr \\\n\t\tgnupg \\\n\t&& echo \"deb http://ftp.debian.org/debian stretch-backports main\" > /etc/apt/sources.list.d/backports.list \\\n\t&& curl -f -sS \"https://packages.blackfire.io/gpg.key\" 2>/dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n\t&& echo \"deb http://packages.blackfire.io/debian any main\" > /etc/apt/sources.list.d/blackfire.list \\\n\t&& APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv A1715D88E1DF1F24 \\\n\t&& echo \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu wily main\" > /etc/apt/sources.list.d/git.list \\\n\t&& APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4 \\\n\t&& echo \"deb http://repo.mongodb.org/apt/debian stretch/mongodb-org/4.0 main\" > /etc/apt/sources.list.d/mongo.list \\\n\t&& curl -f -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc 2>/dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n\t&& echo \"deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main\" > /etc/apt/sources.list.d/pgsql.list \\\n\t&& curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg 2>/dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n\t&& echo \"deb http://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests \\\n\t\tack-grep \\\n\t\taspell \\\n\t\tautoconf \\\n\t\tautomake \\\n\t\tbash-completion \\\n\t\tbinutils \\\n\t\tblackfire-agent \\\n\t\tbuild-essential \\\n\t\tbzip2 \\\n\t\tcoreutils \\\n\t\tdnsutils \\\n\t\tdos2unix \\\n\t\tfile \\\n\t\tgawk \\\n\t\tgcc \\\n\t\tgit \\\n\t\tgit-flow \\\n\t\tgit-svn \\\n\t\tgraphviz \\\n\t\thostname \\\n\t\thtop \\\n\t\timagemagick \\\n\t\tiputils-ping \\\n\t\tjq \\\n\t\tless \\\n\t\tlibc-dev \\\n\t\tlibffi-dev \\\n\t\tlibssl-dev \\\n\t\tlibyaml-dev \\\n\t\tmake \\\n\t\tmongodb-org-shell \\\n\t\tmongodb-org-tools \\\n\t\tmoreutils \\\n\t\tmysql-client \\\n\t\tnano \\\n\t\tnet-tools \\\n\t\tnetcat \\\n\t\topenssh-client \\\n\t\tpatch \\\n\t\tpatchelf \\\n\t\tpostgresql-client \\\n\t\tredis-tools \\\n\t\trsync \\\n\t\trubygems \\\n\t\truby-dev \\\n\t\tshellcheck \\\n\t\tsilversearcher-ag \\\n\t\tsubversion \\\n\t\tsudo \\\n\t\ttig \\\n\t\ttree \\\n\t\tunzip \\\n\t\tvim \\\n\t\tw3m \\\n\t\twget \\\n\t\twhois \\\n\t\txz-utils \\\n\t\tyarn \\\n\t\tzip \\\n\t\tzlib1g-dev \\\n\t\tzsh \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false apt-utils \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\n\t&& (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \\\n\t&& (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \\\n\t&& (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true)\n\n\n###\n### Install custom software\n###\nRUN set -x \\\n# composer \\\n\t&& curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n# pip\n\t&& DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests \\\n  libpython-dev \\\n&& DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n&& rm -rf /var/lib/apt/lists/* \\\n\n&& curl -f -sS https://bootstrap.pypa.io/get-pip.py | python \\\n\n# nvm\n\t&& git clone https://github.com/creationix/nvm /opt/nvm \\\n&& cd /opt/nvm \\\n&& git checkout \"$(git describe --abbrev=0 --tags --match \"v[0-9]*\" $(git rev-list --tags --max-count=1))\" \\\n\n&& { \\\n  echo 'export NVM_DIR=\"/opt/nvm\"'; \\\n  echo '[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm'; \\\n  echo '[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion'; \\\n} >> /home/devilbox/.bashrc \\\n\n&& chown -R devilbox:devilbox /opt/nvm \\\n\n\t&& su  -c '. /opt/nvm/nvm.sh; nvm install node' devilbox \\\n&& su  -c '. /opt/nvm/nvm.sh; nvm install --lts' devilbox \\\n&& su  -c '. /opt/nvm/nvm.sh; nvm use node' devilbox \\\n\n# awesomeci\n\t&& git clone https://github.com/cytopia/awesome-ci.git /usr/local/src/awesome-ci \\\n&& cd /usr/local/src/awesome-ci \\\n&& git checkout $(git describe --abbrev=0 --tags) \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n&& make install \\\n&& cd / \\\n&& rm -rf /usr/local/src/awesome-ci \\\n\n# deployer\n\t&& curl -f -sS https://deployer.org/deployer.phar -L -o /usr/local/bin/dep \\\n\t&& chmod +x /usr/local/bin/dep \\\n# drush7\n\t&& git clone https://github.com/drush-ops/drush.git /usr/local/src/drush7 \\\n&& cd /usr/local/src/drush7 \\\n&& git checkout 7.4.0 \\\n\n\t&& chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush7 \\\n&& su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush7 && composer install --no-interaction --no-progress --no-dev' \\\n&& ln -s /usr/local/src/drush7/drush /usr/local/bin/drush7 \\\n&& rm -rf /usr/local/src/drush7/.git \\\n&& rm -rf /usr/local/src/drush7/docs \\\n&& rm -rf /usr/local/src/drush7/examples \\\n&& rm -rf /usr/local/src/drush7/misc \\\n\n# drush8\n\t&& git clone https://github.com/drush-ops/drush.git /usr/local/src/drush8 \\\n&& cd /usr/local/src/drush8 \\\n&& git checkout $( git for-each-ref --format='%(*creatordate:raw)%(creatordate:raw) %(refname)' refs/tags | sort -n | grep -E 'tags/8[.0-9]+$' | tail -1 | sed 's|.*/||g' ) \\\n\n\t&& chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush8 \\\n&& su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush8 && composer install --no-interaction --no-progress --no-dev' \\\n&& ln -s /usr/local/src/drush8/drush /usr/local/bin/drush8 \\\n&& rm -rf /usr/local/src/drush8/.git \\\n&& rm -rf /usr/local/src/drush8/docs \\\n&& rm -rf /usr/local/src/drush8/examples \\\n&& rm -rf /usr/local/src/drush8/misc \\\n\n# drush9\n\t&& git clone https://github.com/drush-ops/drush.git /usr/local/src/drush9 \\\n&& cd /usr/local/src/drush9 \\\n&& git checkout $( git for-each-ref --format='%(*creatordate:raw)%(creatordate:raw) %(refname)' refs/tags | sort -n | grep -E 'tags/9[.0-9]+$' | tail -1 | sed 's|.*/||g' ) \\\n\n\t&& chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush9 \\\n&& su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush9 && php -d memory_limit=-1 `which composer` install --no-interaction --no-progress' \\\n&& ln -s /usr/local/src/drush9/drush /usr/local/bin/drush9 \\\n&& rm -rf /usr/local/src/drush9/.git \\\n&& rm -rf /usr/local/src/drush9/docs \\\n&& rm -rf /usr/local/src/drush9/examples \\\n&& rm -rf /usr/local/src/drush9/misc \\\n\n# drupalconsole\n\t&& curl -f https://drupalconsole.com/installer -L -o /usr/local/bin/drupal \\\n\t&& chmod +x /usr/local/bin/drupal \\\n# gitflow\n\t&& git clone git://github.com/petervanderdoes/gitflow.git /tmp/gitflow \\\n&& cd /tmp/gitflow \\\n&& make install \\\n&& cd / && rm -rf /tmp/gitflow \\\n\n# laravel\n\t&& git clone https://github.com/laravel/installer /usr/local/src/laravel-installer \\\n&& cd /usr/local/src/laravel-installer \\\n&& git checkout $(git describe --abbrev=0 --tags) \\\n\n\t&& chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/laravel-installer \\\n&& su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/laravel-installer && composer install --no-interaction --no-progress --no-dev' \\\n&& ln -s /usr/local/src/laravel-installer/laravel /usr/local/bin/laravel \\\n&& rm -rf /usr/local/src/laravel-installer/laravel/.git \\\n\n# linkcheck\n\t&& curl -f https://raw.githubusercontent.com/cytopia/linkcheck/master/linkcheck > /usr/local/bin/linkcheck \\\n&& chmod +x /usr/local/bin/linkcheck \\\n\n# linuxbrew\n\t&& git clone https://github.com/Linuxbrew/brew.git /usr/local/src/linuxbrew \\\n&& chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/linuxbrew \\\n&& v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p \\\n    'echo \"PATH=/usr/local/src/linuxbrew/bin:/usr/local/src/linuxbrew/sbin:/usr/bin:/usr/sbin:/bin:/sbin\" >> /home/devilbox/${v}' \\\n&& v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p \\\n    'echo \"export MANPATH=/usr/local/src/linuxbrew/share/man:${MANPATH}\"   >> /home/devilbox/${v}' \\\n&& v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p \\\n    'echo \"export INFOPATH=/usr/local/src/linuxbrew/share/man:${INFOPATH}\" >> /home/devilbox/${v}' \\\n&& su - ${MY_USER} -c '/usr/local/src/linuxbrew/bin/brew config' \\\n\n# mhsendmail\n\t&& wget https://github.com/mailhog/mhsendmail/releases/download/v0.2.0/mhsendmail_linux_amd64 \\\n&& chmod +x mhsendmail_linux_amd64 \\\n&& mv mhsendmail_linux_amd64 /usr/local/bin/mhsendmail \\\n\n# mysqldumpsecure\n\t&& git clone https://github.com/cytopia/mysqldump-secure.git /usr/local/src/mysqldump-secure \\\n&& cd /usr/local/src/mysqldump-secure \\\n&& git checkout $(git describe --abbrev=0 --tags) \\\n&& cp /usr/local/src/mysqldump-secure/bin/mysqldump-secure /usr/local/bin \\\n&& cp /usr/local/src/mysqldump-secure/etc/mysqldump-secure.conf /etc \\\n&& cp /usr/local/src/mysqldump-secure/etc/mysqldump-secure.cnf /etc \\\n&& touch /var/log/mysqldump-secure.log \\\n&& chown ${MY_USER}:${MY_GROUP} /etc/mysqldump-secure.* \\\n&& chown ${MY_USER}:${MY_GROUP} /var/log/mysqldump-secure.log \\\n&& chmod 0400 /etc/mysqldump-secure.conf \\\n&& chmod 0400 /etc/mysqldump-secure.cnf \\\n&& chmod 0644 /var/log/mysqldump-secure.log \\\n&& sed -i'' 's/^COMPRESS_ARG=.*/COMPRESS_ARG=\"-9 -c\"/g' /etc/mysqldump-secure.conf \\\n&& sed -i'' 's/^DUMP_DIR=.*/DUMP_DIR=\"\\/shared\\/backups\\/mysql\"/g' /etc/mysqldump-secure.conf \\\n&& sed -i'' 's/^DUMP_DIR_CHMOD=.*/DUMP_DIR_CHMOD=\"0755\"/g' /etc/mysqldump-secure.conf \\\n&& sed -i'' 's/^DUMP_FILE_CHMOD=.*/DUMP_FILE_CHMOD=\"0644\"/g' /etc/mysqldump-secure.conf \\\n&& sed -i'' 's/^LOG_CHMOD=.*/LOG_CHMOD=\"0644\"/g' /etc/mysqldump-secure.conf \\\n&& sed -i'' 's/^NAGIOS_LOG=.*/NAGIOS_LOG=0/g' /etc/mysqldump-secure.conf \\\n&& cd / \\\n&& rm -rf /usr/local/src/mysqldump-secure \\\n\n# phalcon\n\t&& git clone https://github.com/phalcon/phalcon-devtools /usr/local/src/phalcon-devtools \\\n&& cd /usr/local/src/phalcon-devtools \\\n&& git checkout $(git describe --abbrev=0 --tags) \\\n\n\t&& chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/phalcon-devtools \\\n&& su - ${MY_USER} -c 'cd /usr/local/src/phalcon-devtools && ./phalcon.sh' \\\n&& ln -s /usr/local/src/phalcon-devtools/phalcon.php /usr/local/bin/phalcon \\\n&& cd / \\\n&& rm -rf /usr/local/src/phalcon-devtools/.git \\\n\n# phpcs\n\t&& curl -f -sS -L https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar > /usr/local/bin/phpcs 2>/dev/null \\\n&& chmod +x /usr/local/bin/phpcs \\\n\n# phpcbf\n\t&& curl -f -sS -L https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar > /usr/local/bin/phpcbf 2>/dev/null \\\n&& chmod +x /usr/local/bin/phpcbf \\\n\n# php-cs-fixer\n\t&& curl -f -sS -L https://cs.symfony.com/download/php-cs-fixer-v2.phar > /usr/local/bin/php-cs-fixer 2>/dev/null \\\n&& chmod +x /usr/local/bin/php-cs-fixer \\\n\n# phpunit\n\t&& curl -f -qL https://phar.phpunit.de/phpunit-7.phar > /usr/local/bin/phpunit 2>/dev/null \\\n&& chmod +x /usr/local/bin/phpunit \\\n\n# symfony\n\t&& curl -f https://symfony.com/installer -L -o /usr/local/bin/symfony \\\n\t&& chmod +x /usr/local/bin/symfony \\\n# wkhtmltopdf\n\t&& VERSION=\"$( curl -f -sSL https://github.com/wkhtmltopdf/wkhtmltopdf/releases | grep -Eo '/wkhtmltopdf/.+stretch_amd64\\.deb' | head -1)\" \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests \\\n  libfontenc1 libxfont1 xfonts-75dpi xfonts-base xfonts-encodings xfonts-utils \\\n&& curl -f -sS -L -o /tmp/wkhtmltopdf.deb https://github.com/${VERSION} \\\n&& dpkg -i /tmp/wkhtmltopdf.deb \\\n&& rm -f /tmp/wkhtmltopdf.deb \\\n\n\t&& DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false apt-utils \\\n&& rm -rf /var/lib/apt/lists/* \\\n\n# wpcli\n\t&& curl -f https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -L -o /usr/local/bin/wp \\\n\t&& chmod +x /usr/local/bin/wp \\\n# cleanup\n\t&& rm -rf /home/${MY_USER}/.*json \\\n&& rm -rf /home/${MY_USER}/.cache \\\n&& rm -rf /home/${MY_USER}/.composer \\\n&& rm -rf /home/${MY_USER}/.config \\\n&& rm -rf /home/${MY_USER}/.drush \\\n&& rm -rf /home/${MY_USER}/.subversion \\\n&& rm -rf /home/${MY_USER}/.v8* \\\n\n&& rm -rf /root/.*json \\\n&& rm -rf /root/.cache \\\n&& rm -rf /root/.composer \\\n&& rm -rf /root/.config \\\n&& rm -rf /root/.drush \\\n&& rm -rf /root/.subversion \\\n&& rm -rf /root/.v8* \\\n\n&& rm -rf /tmp/* \\\n&& (rm -rf /tmp/.* || true) \\\n\n\n\t&& (rm -rf /root/.gem || true ) \\\n\t&& (rm -rf /root/.cache || true) \\\n\t&& (rm -rf /root/.composer || true) \\\n\t&& (rm -rf /root/.config || true) \\\n\t&& (rm -rf /root/.npm || true) \\\n\n\t&& (rm -rf /home/devilbox/.cache || true) \\\n\t&& (rm -rf /home/devilbox/.composer || true) \\\n\t&& (rm -rf /home/devilbox/.config || true) \\\n\t&& (rm -rf /home/devilbox/.npm || true) \\\n\n\t&& (rm -rf /usr/local/src/composer/cache/* || true) \\\n\t&& rm -rf /tmp/* \\\n\t&& (rm -rf /tmp/.* || true)\n\n\n###\n### Install Composer (PHP)\n###\nRUN set -x \\\n# asgardcms\n\t&& COMPOSER_HOME=\"/usr/local/src/composer\" composer global require  asgardcms/asgardcms-installer \\\n\t&& ln -s /usr/local/src/composer/vendor/asgardcms/asgardcms-installer/asgardcms /usr/local/bin/ \\\n# codeception\n\t&& COMPOSER_HOME=\"/usr/local/src/composer\" composer global require  codeception/codeception \\\n\t&& ln -s /usr/local/src/composer/vendor/codeception/codeception/codecept /usr/local/bin/ \\\n# lumen\n\t&& COMPOSER_HOME=\"/usr/local/src/composer\" composer global require  laravel/lumen-installer \\\n\t&& ln -s /usr/local/src/composer/vendor/laravel/lumen-installer/lumen /usr/local/bin/ \\\n# photon\n\t&& COMPOSER_HOME=\"/usr/local/src/composer\" composer global require  photoncms/installer \\\n\t&& ln -s /usr/local/src/composer/vendor/photoncms/installer/photon /usr/local/bin/ \\\n# prestissimo\n\t&& COMPOSER_HOME=\"/usr/local/src/composer\" composer global require  hirak/prestissimo \\\n\t\\\n\t&& rm -rf /tmp/* \\\n\t&& (rm -rf /tmp/.* || true) \\\n\t\\\n\t&& (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \\\n\t&& (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \\\n\t&& (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true)\n\n\n###\n### Install npm (Node)\n###\nRUN set -x \\\n# angular_cli\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g @angular/cli' devilbox \\\n# eslint\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g eslint' devilbox \\\n# grunt\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g grunt' devilbox \\\n# grunt_cli\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g grunt-cli' devilbox \\\n# gulp\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g gulp' devilbox \\\n# jsonlint\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g jsonlint' devilbox \\\n# pm2\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g pm2' devilbox \\\n# mdlint\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g mdlint' devilbox \\\n# vue_cli\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g @vue/cli' devilbox \\\n# vue_cli_service_global\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g @vue/cli-service-global' devilbox \\\n# webpack\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g webpack' devilbox \\\n# webpack_cli\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g webpack-cli' devilbox \\\n\t\\\n\t&& ln -sf $(dirname $(su -c '. /opt/nvm/nvm.sh; nvm which current' devilbox))/* /usr/local/bin/ \\\n\t\\\n\t&& su -c '. /opt/nvm/nvm.sh; npm cache clear --force' devilbox \\\n\t&& su -c '. /opt/nvm/nvm.sh; nvm cache clear --force' devilbox \\\n\t&& rm -rf /home/devilbox/.npm \\\n\t&& rm -rf /home/devilbox/.config \\\n\t&& rm -rf /tmp/* \\\n\t&& (rm -rf /tmp/.* || true) \\\n\t\\\n\t&& (find /opt/nvm -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true)\n\n\n###\n### Install gem (Ruby)\n###\nRUN set -x \\\n# mixlib_config\n\t&& gem install mixlib-config -v 2.2.4 \\\n# rb_inotify\n\t&& gem install rb-inotify -v 0.9.10 \\\n# mdl\n\t&& gem install mdl \\\n# scss_lint\n\t&& gem install scss_lint -v 0.57.1 \\\n# sass\n\t&& gem install sass \\\n\t\\\n\t&& rm -rf /root/.gem \\\n\t&& rm -rf /tmp/* \\\n\t&& (rm -rf /tmp/.* || true) \\\n\t\\\n\t&& (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \\\n\t&& (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \\\n\t&& (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true)\n\n\n###\n### Install pip (Python) packages\n###\nRUN set -x \\\n# ansible\n\t&& pip install --no-cache-dir --force-reinstall ansible \\\n# yamllint\n\t&& pip install --no-cache-dir --force-reinstall yamllint \\\n# yq\n\t&& pip install --no-cache-dir --force-reinstall yq \\\n\t\\\n\t&& rm -rf /root/.cache/pip \\\n\t&& rm -rf /tmp/* \\\n\t&& (rm -rf /tmp/.* || true) \\\n\t\\\n\t&& (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \\\n\t&& (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \\\n\t&& (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true)\n\n\n###\n### Configure Bash\n###\nRUN \\\n\t{ \\\n\t\techo \"PATH=\\${PATH}:/usr/local/bin:/usr/local/sbin:\\${HOME}/.yarn/bin:/opt/nvm/versions/node/\\$(nvm version default)/bin\"; \\\n\t\techo \"export PATH\"; \\\n\t\techo \". /etc/bash-devilbox\"; \\\n\t\techo \"if [ -d /etc/bashrc-devilbox.d/ ]; then\"; \\\n\t\techo \"    for f in /etc/bashrc-devilbox.d/*.sh ; do\"; \\\n\t\techo \"        if [ -r \\\"\\${f}\\\" ]; then\"; \\\n\t\techo \"            . \\\"\\${f}\\\"\"; \\\n\t\techo \"        fi\"; \\\n\t\techo \"    done\"; \\\n\t\techo \"    unset f\"; \\\n\t\techo \"fi\"; \\\n\t} | tee -a /home/${MY_USER}/${BASH_PROFILE} /root/${BASH_PROFILE} \\\n\t&& chown ${MY_USER}:${MY_GROUP} /home/${MY_USER}/${BASH_PROFILE}\n\n\n###\n### Verify\n###\nRUN set -x \\\n\t&& echo \"date.timezone=UTC\" > /usr/local/etc/php/php.ini \\\n\t&& php -v | grep -oE 'PHP\\s[.0-9]+' | grep -oE '[.0-9]+' | grep '^7.1' \\\n\t&& /usr/local/sbin/php-fpm --test \\\n\t\\\n\t&& PHP_ERROR=\"$( php -v 2>&1 1>/dev/null )\" \\\n\t&& if [ -n \"${PHP_ERROR}\" ]; then echo \"${PHP_ERROR}\"; false; fi \\\n\t&& PHP_ERROR=\"$( php -i 2>&1 1>/dev/null )\" \\\n\t&& if [ -n \"${PHP_ERROR}\" ]; then echo \"${PHP_ERROR}\"; false; fi \\\n\t\\\n\t&& PHP_FPM_ERROR=\"$( php-fpm -v 2>&1 1>/dev/null )\" \\\n\t&& if [ -n \"${PHP_FPM_ERROR}\" ]; then echo \"${PHP_FPM_ERROR}\"; false; fi \\\n\t&& PHP_FPM_ERROR=\"$( php-fpm -i 2>&1 1>/dev/null )\" \\\n\t&& if [ -n \"${PHP_FPM_ERROR}\" ]; then echo \"${PHP_FPM_ERROR}\"; false; fi \\\n\t&& rm -f /usr/local/etc/php/php.ini\n\nRUN set -x \\\n\t&& composer --version 2>/dev/null | grep -E 'version\\s*[.0-9]+' \\\n\t&& su  -c '. /opt/nvm/nvm.sh; nvm --version' devilbox | grep -E '^[.0-9]+' \\\n\t&& mdl --version | grep -E '[.0-9]+' \\\n&& scss-lint --version | grep -E '[.0-9]+' \\\n&& eslint -v | grep -E '[.0-9]+' \\\n&& jsonlint --version | grep -E '[.0-9]+' \\\n&& mdlint --version | grep -E '[.0-9]+' \\\n&& gulp --version | grep -E '[.0-9]+' \\\n \\\n\t&& dep --version 2>/dev/null | grep -Ei 'deployer\\s*(version\\s*)?[.0-9]+' \\\n\t&& drush7 --version | grep -E '7[.0-9]+\\s*$' \\\n\t&& drush8 --version | grep -E '8[.0-9]+\\s*$' \\\n\t&& drush9 --version | grep -E '9[.0-9]+\\s*$' \\\n\t&& drupal --version | grep -E 'Drupal Console Launcher\\s*[.0-9]' \\\n\t&& git-flow version | grep -E '[.0-9]+' \\\n\t&& laravel --version | grep -E '(Installer|version)\\s*[.0-9]+' \\\n\t&& linkcheck --version | grep -E '^linkcheck\\sv[.0-9]+' \\\n\t&& su - ${MY_USER} -c '/usr/local/src/linuxbrew/bin/brew --version' | grep -E 'Homebrew\\s*[.0-9]+' \\\n\t&& mysqldump-secure --version | grep -E 'Version:\\s*[.0-9]+' \\\n\t&& phalcon commands | grep -E '[.0-9]+' \\\n\t&& phpcs --version | grep -E 'version [.0-9]+' \\\n\t&& phpcbf --version | grep -E 'version [.0-9]+' \\\n\t&& php-cs-fixer --version 2>&1 | grep -E 'Fixer\\s+(version\\s*)?[-_.0-9]+\\s+' \\\n\t&& phpunit --version | grep -iE '^PHPUnit\\s[.0-9]+' \\\n\t&& symfony --version | grep -E 'version\\s*[.0-9]+' \\\n\t&& wkhtmltopdf --version | grep -E \"^wkhtmltopdf [.0-9]+\\s+\\(.+patched.+\\)\" \\\n\t&& wp --allow-root --version | grep -E '[.0-9]+' \\\n \\\n\t&& asgardcms --version 2>/dev/null | grep -Ei 'AsgardCMS\\sInstaller\\s[.0-9]+' \\\n\t&& codecept --version 2>/dev/null | grep -E '^Codeception(\\sversion)?\\s[.0-9]+$' \\\n\t&& lumen --version 2>/dev/null | grep -E '^Lumen Installer\\s[.0-9]+$' \\\n\t&& photon --version | grep -E 'Installer [.0-9]+' \\\n \\\n\t&& ansible --version | grep -E '^ansible [.0-9]+$' \\\n\t&& yamllint --version 2>&1 | grep -E '[.0-9]+' \\\n\t&& yq --version 2>&1 | grep -E '^yq\\s+[.0-9]+$' \\\n \\\n\t&& ng  version 2>&1 | grep -iE 'Angular CLI:\\s*[.0-9]+' \\\n\t&& eslint -v | grep -E '[.0-9]+' \\\n\t&& grunt --version | grep -E '[.0-9]+' \\\n\t&& gulp --version | grep -E '[.0-9]+' \\\n\t&& jsonlint --version | grep -E '[.0-9]+' \\\n\t&& pm2 --no-daemon --version | grep -E '[.0-9]+' \\\n\t&& mdlint --version | grep -E '[.0-9]+' \\\n\t&& vue --version | grep -E '[.0-9]+' \\\n\t&& webpack --version | grep -E '[.0-9]+' \\\n \\\n\t&& mdl --version | grep -E '[.0-9]+' \\\n\t&& sass --version | grep -E '[.0-9]+' \\\n \\\n\t&& rm -rf /home/devilbox/.config/ \\\n\t&& rm -rf /root/.ansible \\\n\t&& rm -rf /root/.console \\\n\t&& rm -rf /root/.composer \\\n\t&& rm -rf /root/.drush \\\n\t&& rm -rf /root/.pm2 \\\n\t&& rm -rf /tmp/* \\\n\t&& (rm -rf /tmp/.* || true)\n\n\n###\n### Copy files\n###\nCOPY ./data/php-ini.d/php-7.1.ini /usr/local/etc/php/conf.d/xxx-devilbox-default-php.ini\nCOPY ./data/php-fpm.conf/php-fpm-7.1.conf /usr/local/etc/php-fpm.conf\n\nCOPY ./data/docker-entrypoint.sh /docker-entrypoint.sh\nCOPY ./data/docker-entrypoint.d/*.sh /docker-entrypoint.d/\nCOPY ./data/bash-devilbox /etc/bash-devilbox\nCOPY ./data/sudo-devilbox /etc/sudoers.d/devilbox\n\n\n\n###\n### Volumes\n###\nVOLUME /shared/backups\nVOLUME /var/log/php\nVOLUME /var/mail\n\n\n###\n### Ports\n###\nEXPOSE 9000\n\n\n###\n### Where to start inside the container\n###\nWORKDIR /shared/httpd\n\n\n###\n### Entrypoint\n###\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}