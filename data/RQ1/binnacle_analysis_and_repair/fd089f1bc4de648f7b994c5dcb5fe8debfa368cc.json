{
  "startTime": 1674235768699,
  "endTime": 1674235768914,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2015 gRPC authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM debian:jessie\n\n\n# Install Git and basic packages.\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  autoconf \\\n  autotools-dev \\\n  build-essential \\\n  bzip2 \\\n  ccache \\\n  curl \\\n  dnsutils \\\n  gcc \\\n  gcc-multilib \\\n  git \\\n  golang \\\n  gyp \\\n  lcov \\\n  libc6 \\\n  libc6-dbg \\\n  libc6-dev \\\n  libgtest-dev \\\n  libtool \\\n  make \\\n  perl \\\n  strace \\\n  python-dev \\\n  python-setuptools \\\n  python-yaml \\\n  telnet \\\n  unzip \\\n  wget \\\n  zip && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n#================\n# Build profiling\nRUN apt-get update && apt-get install --no-install-recommends -y time && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n#==================\n# Node dependencies\n\n# Install nvm\nRUN touch .profile\nRUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.25.4/install.sh | bash\n# Install all versions of node that we want to test\nRUN /bin/bash -l -c \"nvm install 4 && npm config set cache /tmp/npm-cache\"\nRUN /bin/bash -l -c \"nvm install 5 && npm config set cache /tmp/npm-cache\"\nRUN /bin/bash -l -c \"nvm install 6 && npm config set cache /tmp/npm-cache\"\nRUN /bin/bash -l -c \"nvm install 8 && npm config set cache /tmp/npm-cache\"\nRUN /bin/bash -l -c \"nvm install 9 && npm config set cache /tmp/npm-cache\"\nRUN /bin/bash -l -c \"nvm install 10 && npm config set cache /tmp/npm-cache\"\nRUN /bin/bash -l -c \"nvm alias default 10\"\n\nRUN mkdir /var/local/jenkins\n\n# Define the default command.\nCMD [\"bash\"]\n"
}