{
  "startTime": 1674241139556,
  "endTime": 1674241139924,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 7,
        "columnEnd": 101
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 68,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 87
      }
    }
  ],
  "repairedDockerfile": "FROM quay.io/geodocker/pdal-mbio:1.8.0\nMAINTAINER Grigory Pomadchin <daunnc@gmail.com>\n\nRUN set -ex && \\\n    apt update -y && \\\n    apt install --no-install-recommends \\\n      openjdk-8-jdk \\\n      ca-certificates-java -y && rm -rf /var/lib/apt/lists/*;\n\nENV JAVA_HOME /usr/lib/jvm/java-1.8.0-openjdk-amd64\n\n# Install PDAL and Python deps https://tracker.debian.org/pkg/pdal\nRUN apt-get -y --no-install-recommends install bash gcc g++ cmake && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y --no-install-recommends install wget curl python-pip python3 python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# Install GDAL\nENV ROOTDIR /usr/local\nENV LD_LIBRARY_PATH /usr/local/lib\nENV GDAL_VERSION 2.4.0\nENV OPENJPEG_VERSION 2.3.0\n\n# Load assets\nWORKDIR $ROOTDIR/\nRUN mkdir -p $ROOTDIR/src\n\nRUN wget -qO- \\\n    https://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz | \\\n    tar -xzC $ROOTDIR/src/\nRUN wget -qO- \\\n    https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz | \\\n    tar -xzC $ROOTDIR/src/\n\nRUN set -ex \\\n    # Runtime dependencies\n    && deps=\" \\\n       python-dev \\\n       python3-dev \\\n       python-numpy \\\n       python3-numpy \\\n       bash-completion \\\n       libspatialite-dev \\\n       libpq-dev \\\n       libcurl4-gnutls-dev \\\n       libproj-dev \\\n       libxml2-dev \\\n       libgeos-dev \\\n       libnetcdf-dev \\\n       libpoppler-dev \\\n       libhdf4-alt-dev \\\n       libhdf5-serial-dev \\\n    \" \\\n    # Build dependencies\n    && buildDeps=\" \\\n       build-essential \\\n       cmake \\\n       swig \\\n       ant \\\n       pkg-config \\\n    \"\\\n    && apt-get update && apt-get install -y $buildDeps $deps --no-install-recommends \\\n    # Compile and install OpenJPEG\n    && cd src/openjpeg-${OPENJPEG_VERSION} \\\n    && mkdir build && cd build \\\n    && cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$ROOTDIR \\\n    && make -j3 && make -j3 install && make -j3 clean \\\n    && cd $ROOTDIR && rm -Rf src/openjpeg* \\\n    # Compile and install GDAL\n    && cd src/gdal-${GDAL_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-python --with-spatialite --with-pg --with-curl --with-java \\\n                   --with-poppler --with-openjpeg=$ROOTDIR \\\n    && make -j3 && make -j3 install && ldconfig \\\n    # Compile Python and Java bindings for GDAL\n    && cd $ROOTDIR/src/gdal-${GDAL_VERSION}/swig/java && make -j3 && make -j3 install \\\n    && cd $ROOTDIR/src/gdal-${GDAL_VERSION}/swig/python \\\n    && python3 setup.py build \\\n    && python3 setup.py install \\\n    && cd $ROOTDIR && rm -Rf src/gdal* \\\n    # Remove build dependencies\n    && apt-get purge -y --auto-remove $buildDeps \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install Spark\nENV PYSPARK_PYTHON /usr/bin/python3\nENV PYSPARK_DRIVER_PYTHON /usr/bin/python3\nENV SPARK_HOME /opt/spark\nENV SPARK_CONF_DIR $SPARK_HOME/conf\nENV PATH $PATH:$SPARK_HOME/bin:$SPARK_HOME/sbin\n\nRUN set -x \\\n    && mkdir -p $SPARK_HOME $SPARK_CONF_DIR \\\n    && curl -f -sS -# http://mirror.metrocast.net/apache/spark/spark-2.4.1/spark-2.4.1-bin-hadoop2.7.tgz \\\n    | tar -xz -C ${SPARK_HOME} --strip-components=1\n\nCOPY ./fs /\n\nRUN mkdir -p /data/spark\n\nVOLUME [ \"/data/spark\" ]\n\nWORKDIR \"${SPARK_HOME}\"\n"
}