{
  "startTime": 1674245266433,
  "endTime": 1674245266500,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 122
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 122
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7-slim-stretch\n\nMAINTAINER bhearsum@mozilla.com\n\n# netcat is needed for health checks\n# Some versions of the python:3.7 Docker image remove libpcre3, which uwsgi needs for routing support to be enabled.\n# default-libmysqlclient-dev is required to use SQLAlchemy with MySQL\n# mysql-client is needed to import sample data\n# curl is needed to pull sample data\n# gcc is needed to compile some python packages\n# xz-utils is needed to unpack sampled ata\n# git is needed to send coverage reports\nRUN apt-get -q update \\\n    && apt-get -q --no-install-recommends --yes install netcat libpcre3 libpcre3-dev default-libmysqlclient-dev mysql-client curl gcc xz-utils git \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\n\n# The general app requirements and packages required to run Tox are installed into the system.\n# We copy them in early to avoid re-installing them unless absolutely necessary.\nCOPY requirements.txt requirements-tox.txt /app/\nRUN pip install --no-cache-dir -r requirements.txt\nRUN pip install --no-cache-dir -r requirements-tox.txt\n\nCOPY aus-data-snapshots/ /app/aus-data-snapshots/\nCOPY auslib/ /app/auslib/\nCOPY ui/ /app/ui/\nCOPY scripts/ /app/scripts/\nCOPY uwsgi/ /app/uwsgi/\nCOPY .coveragerc MANIFEST.in requirements-test.txt setup.py tox.ini version.json version.txt /app/\n# we need .git to gather information for coverage reports\nCOPY .git/ /app/.git/\n\n# Using /bin/bash as the entrypoint works around some volume mount issues on Windows\n# where volume-mounted files do not have execute bits set.\n# https://github.com/docker/compose/issues/2301#issuecomment-154450785 has additional background.\nENTRYPOINT [\"/bin/bash\", \"/app/scripts/run.sh\"]\nCMD [\"public\"]\n"
}