{
  "startTime": 1674249037660,
  "endTime": 1674249037807,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 26,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 52,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 26,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 52,
        "columnEnd": 71
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:2.4.5\n\n# Install node\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\n\nRUN apt-get update -qq && apt-get install --no-install-recommends -y build-essential libpq-dev nodejs libxml2 iceweasel xvfb fonts-liberation \\\n libappindicator3-1 libnspr4 libnss3 libxss1 xdg-utils gdb chromium chromium-l10n && rm -rf /var/lib/apt/lists/*;\n\n# Install Chrome\nRUN wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\nRUN dpkg -i google-chrome-stable_current_amd64.deb; apt-get -fy install\n\n# Symlink google-chrome to chrome so our tests can find it\nRUN ln -sf /usr/bin/google-chrome /usr/bin/chrome\n\nRUN gem install bundler foreman mailcatcher\nRUN npm install -g yarn && npm cache clean --force;\n\n# Enabling app reloading based off of https://stackoverflow.com/questions/37699573/rails-app-in-docker-container-doesnt-reload-in-development\n# Sets the path where the app is going to be installed\nENV RAILS_ROOT /var/www/\n\n# Creates the directory and all the parents (if they don't exist)\nRUN mkdir -p $RAILS_ROOT\n\n# This will be the de-facto directory where all the contents are going to be stored.\nWORKDIR $RAILS_ROOT\n\n# We are copying the Gemfile first, so we can install\n# all the dependencies without any issues\n# Rails will be installed once you load it from the Gemfile\n# This will also ensure that gems are cached and only updated when they change.\nCOPY Gemfile ./\nCOPY Gemfile.lock ./\n\n# Install the gems.\nRUN bundle config build.nokogiri --use-system-libraries\nRUN bundle install\n\n# We copy all the files from the current directory to our\n# /app directory\n# Pay close attention to the dot (.)\n# The first one will select ALL The files of the current directory,\n# The second dot will copy it to the WORKDIR!\nCOPY . .\nRUN bundle install\n\nRUN yarn\n"
}