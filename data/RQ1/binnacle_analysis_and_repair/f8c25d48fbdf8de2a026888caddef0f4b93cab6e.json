{
  "startTime": 1674241009535,
  "endTime": 1674241009878,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 1,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 1,
        "columnEnd": 143
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 43,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 43,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\nENV GOLANG_VERSION 1.10\nENV PATH=\"/usr/local/go/bin:${PATH}\"\nENV GOPATH /root/go\nRUN apt-get update && \\\n\tDEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y libc6-dev make pkg-config g++ gcc git wget wireless-tools bluetooth iw net-tools libpcap-dev && \\\n\tmkdir /root/go && \\\n\trm -rf /var/lib/apt/lists/* && \\\n\tset -eux; \\\n\n# this \"case\" statement is generated via \"update.sh\"\n\tdpkgArch=\"$(dpkg --print-architecture)\"; \\\n\tcase \"${dpkgArch##*-}\" in \\\n\t\tamd64) goRelArch='linux-amd64'; goRelSha256='b5a64335f1490277b585832d1f6c7f8c6c11206cba5cd3f771dcb87b98ad1a33' ;; \\\n\t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6ff665a9ab61240cf9f11a07e03e6819e452a618a32ea05bbb2c80182f838f4f' ;; \\\n\t\tarm64) goRelArch='linux-arm64'; goRelSha256='efb47e5c0e020b180291379ab625c6ec1c2e9e9b289336bc7169e6aa1da43fd8' ;; \\\n\t\ti386) goRelArch='linux-386'; goRelSha256='2d26a9f41fd80eeb445cc454c2ba6b3d0db2fc732c53d7d0427a9f605bfc55a1' ;; \\\n\t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='a1e22e2fbcb3e551e0bf59d0f8aeb4b3f2df86714f09d2acd260c6597c43beee' ;; \\\n\t\ts390x) goRelArch='linux-s390x'; goRelSha256='71cde197e50afe17f097f81153edb450f880267699f22453272d184e0f4681d7' ;; \\\n\t\t*) goRelArch='src'; goRelSha256='f3de49289405fda5fd1483a8fe6bd2fa5469e005fd567df64485c4fa000c7f24'; \\\n\t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \\\n\tesac; \\\n\n\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \\\n\twget -O go.tgz \"$url\"; \\\n\techo \"${goRelSha256}  *go.tgz\" | sha256sum -c -; \\\n\ttar -C /usr/local -xzf go.tgz; \\\n\trm go.tgz; \\\n\n\tif [ \"$goRelArch\" = 'src' ]; then \\\n\t\techo >&2; \\\n\t\techo >&2 'error: UNIMPLEMENTED'; \\\n\t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \\\n\t\techo >&2; \\\n\t\texit 1; \\\n\tfi; \\\n\n\texport PATH=\"/usr/local/go/bin:$PATH\"; \\\n\tgo version && \\\n\tgo get -u -v -d github.com/schollz/find3-cli-scanner && \\\n\tgo get -u -v -d github.com/google/gopacket/... && \\\n\tcd /root/go/src/github.com/schollz/find3-cli-scanner && \\\n\tgit checkout noshark && go build -v && \\\n\tmv find3-cli-scanner /usr/local/bin/ && \\\n\techo \"removing go resources\" && rm -rf /usr/local/work/src && \\\n\techo \"purging packages\" && apt-get remove -y --auto-remove git libc6-dev pkg-config g++ gcc make && \\\n\techo \"add back pcap\" && apt-get update && apt-get install --no-install-recommends -y libpcap-dev && \\\n\techo \"autoclean\" && apt-get autoclean && \\\n\techo \"clean\" && apt-get clean && \\\n\techo \"autoremove\" && apt-get autoremove -y && \\\n\techo \"rm trash\" && rm -rf ~/.local/share/Trash/* && \\\n\techo \"rm go\" && rm -rf /usr/local/go* && \\\n\techo \"rm go\" && rm -rf /root/go* && \\\n\techo \"rm perl\" && rm -rf /usr/share/perl* && \\\n\techo \"rm doc\" && rm -rf /usr/share/doc* && rm -rf /var/lib/apt/lists/*;\n\n\n# INSTALL BLUEZ FROM SOURCE\n# This is commented out because its not needed except for information's sake\n# and maybe if you want to use a smaller image (not Ubuntu:18)\n# Instructions: https://github.com/schollz/gatt-python#installing-bluez-from-sources\n#RUN  apt-get install -y libusb-dev libdbus-1-dev libglib2.0-dev libudev-dev libical-dev libreadline-dev libdbus-glib-1-dev unzip systemd\n#RUN mkdir /root/bluez\n#WORKDIR /root/bluez\n#RUN wget http://www.kernel.org/pub/linux/bluetooth/bluez-5.9.tar.xz\n#RUN tar xf bluez-5.9.tar.xz\n#WORKDIR /root/bluez/bluez-5.9\n#RUN ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --enable-library\n#RUN make\n#RUN make install\n#RUN ln -svf /usr/libexec/bluetooth/bluetoothd /usr/sbin/\n#RUN install -v -dm755 /etc/bluetooth\n#RUN install -v -m644 src/main.conf /etc/bluetooth/main.conf\n##RUN systemctl daemon-reload\n##RUN systemctl start bluetooth\n\n\n"
}