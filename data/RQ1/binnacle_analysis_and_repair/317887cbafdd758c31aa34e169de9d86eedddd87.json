{
  "startTime": 1674241791723,
  "endTime": 1674241791888,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 2,
        "columnEnd": 58
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################################################\n# Dockerfile to run Segrada Containers - get image from Web\n#\n# This is a variant of the Dockerfile contained in the root of this project.\n# It will load Segrada and the empty database from the Web and create an image from these.\n#\n# Based on JRE8 Image\n# Get Docker image via \"docker pull ronix/segrada\"\n# You can mount a volume /segrada_data to make data persistent\n# Build using docker build --rm -t ronix/segrada .\n# Run like this:\n# docker run --name segrada -p 8080:8080 ronix/segrada\n# or\n# docker run --name segrada -p 8080:8080 -v path_to/segrada_data:/usr/local/segrada/segrada_data ronix/segrada\n# or (using environmental variables)\n# docker run -e \"SEGRADA_ORIENTDB_URL=remote:localhost/Segrada\" ronix/segrada\n############################################################\n\n# Set the base image to use to Java 8\nFROM openjdk:8-jre-slim\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r segrada && useradd -r -g segrada segrada\n\nENV SEGRADA_HOME /usr/local/segrada\nENV PATH $SEGRADA_HOME:$PATH\nRUN mkdir -p \"$SEGRADA_HOME\"\nWORKDIR $SEGRADA_HOME\n\n# Set the file maintainer\nMAINTAINER Maximilian Kalus\n\nENV SEGRADA_GPG_KEYS \\\n\t#4096R/975157FB 2019-02-28 Maximilian Kalus <info@segrada.org>\n\tC79663C6388988836529B05AEF4C437F975157FB\n\nRUN apt-get update && apt-get install -y --no-install-recommends gpg dirmngr curl && rm -rf /var/lib/apt/lists/*;\n\nRUN set -xe \\\n\t&& for key in $SEGRADA_GPG_KEYS; do \\\n\t\tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \\\n\tdone\n\nENV SEGRADA_TGZ_URL https://segrada.org/fileadmin/downloads/Segrada.tar.gz\nENV SEGRADA_DB_TGZ_URL https://segrada.org/fileadmin/downloads/SegradaEmptyDB.tar.gz\n\nRUN set -xe \\\n\t&& curl -f -SL \"$SEGRADA_TGZ_URL\" -o Segrada.tar.gz \\\n\t&& curl -f -SL \"$SEGRADA_TGZ_URL.asc\" -o Segrada.tar.gz.asc \\\n\t&& curl -f -SL \"$SEGRADA_DB_TGZ_URL\" -o SegradaEmptyDB.tar.gz \\\n\t&& curl -f -SL \"$SEGRADA_DB_TGZ_URL.asc\" -o SegradaEmptyDB.tar.gz.asc \\\n\t&& gpg --batch --verify --trust-model always Segrada.tar.gz.asc \\\n\t&& gpg --batch --verify --trust-model always SegradaEmptyDB.tar.gz.asc \\\n\t&& tar -xvf SegradaEmptyDB.tar.gz \\\n\t&& tar -xvf Segrada.tar.gz \\\n\t&& chown -R segrada:segrada . \\\n\t&& mv Segrada/* . \\\n\t&& rmdir Segrada \\\n\t&& rm Segrada*.tar.gz*\n\nRUN set -xe && apt-get remove -y --purge gpg dirmngr curl && rm -rf /var/lib/apt/lists/*\n\n# Variables of Segrada can be set as defined in environmental variables doc.\n\n# Port to expose (default: 8080)\nEXPOSE 8080\nVOLUME [\"/usr/local/segrada/segrada_data\"]\nUSER segrada\nENTRYPOINT [\"/usr/bin/java\", \"-jar\", \"./segrada-1.0-SNAPSHOT.jar\"]\nCMD [\"headless\"]\n"
}