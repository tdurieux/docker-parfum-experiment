{
  "startTime": 1674234131800,
  "endTime": 1674234132179,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 7,
        "columnEnd": 135
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM sparkfabrik/php:5.4.45-apache\nMAINTAINER paolo.mainardi@sparkfabrik.com\nENV REFRESHED_AT 2016-04-20\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Enable apache rewrite.\nRUN a2enmod rewrite\n\n# System env variables.\nENV XDEBUG_VERSION 2.4.0\nENV DRUSH_VERSION 8.0.5\nENV VAR_DUMPER_VERSION 2.8.22\nENV GOSU_VERSION 1.7\nENV MAILHOG_VERSION v0.1.9\nENV TIMEZONE \"Europe/Rome\"\n\n# Install php packages.\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n    curl \\\n    cron \\\n    rsyslog \\\n    supervisor \\\n    mysql-client \\\n    libpng12-dev \\\n    libjpeg-dev \\\n    libxml2-dev \\\n    ruby \\\n    git \\\n    unzip \\\n    vim \\\n    libicu-dev \\\n    libssl-dev \\\n    php5-gd \\\n    php5-intl \\\n    php5-mysql \\\n    php5-xdebug \\\n    php5-memcached \\\n    && echo \"${TIMEZONE}\" > /etc/timezone \\\n    && dpkg-reconfigure -f noninteractive tzdata \\\n    && apt-get autoremove -y \\\n    && pecl install memcache-3.0.6 \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install composer, drush and other tools.\nENV COMPOSER_HOME /composer-libs\nRUN mkdir /composer-libs \\\n    && curl -f -sS https://getcomposer.org/installer | php \\\n    && mv composer.phar /usr/local/bin/composer \\\n    && composer global require symfony/var-dumper:${VAR_DUMPER_VERSION} \\\n    && chown -R www-data:www-data /composer-libs \\\n    && curl -fSL \"https://github.com/drush-ops/drush/releases/download/${DRUSH_VERSION}/drush.phar\" -o /usr/bin/drush \\\n    && chmod +x /usr/bin/drush \\\n    && drush @none dl registry_rebuild-7.x-2.3 \\\n    && echo \"PS1='\\[\\033[1;36m\\]\\u\\[\\033[1;31m\\]@\\[\\033[1;32m\\]\\h:\\[\\033[1;35m\\]\\w\\[\\033[1;31m\\]\\$\\[\\033[0m\\] '\" >> /etc/bash.bashrc \\\n    && echo \"export TERM=xterm\" >> /etc/bash.bashrc \\\n    && echo \"umask 000\" >> /etc/bash.bashrc \\\n    && curl -fSL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" -o /usr/bin/gosu\n\n# Install mailhog.\nRUN curl -fSL \"https://github.com/mailhog/MailHog/releases/download/${MAILHOG_VERSION}/MailHog_linux_amd64\" -o /usr/local/bin/mailhog \\\n    && chmod +x /usr/local/bin/mailhog\n\n## Configure PHP, Apache, Memcache and supervisord.\nCOPY config/docker/php/*.ini /etc/php5/conf.d/\nCOPY config/docker/apache/*.conf /etc/apache2/conf-enabled/\nCOPY config/docker/supervisord/*.conf /etc/supervisor/conf.d/\nRUN echo 'stage:$apr1$g6T0GvU3$6cxYQhCZvI.1aEFYr1uOd/' > /var/www/.htpasswd && \\\n    rm -rf /etc/apache2/sites-enabled/*\n\n# Upgrade ruby.\nRUN curl -f -L get.rvm.io | bash -s stable \\\n&& /bin/bash -l -c \"rvm install 2.1.0\" \\\n&& /bin/bash -l -c \"rvm use 2.1.0 --default\" \\\n&& echo \"source /etc/profile.d/rvm.sh\" >> /root/.bashrc \\\n&& gem install bundler --no-rdoc\n\n# Configure cron.\nCOPY config/docker/cron/crontab /etc/cron.d/cron\nRUN rm -Rf /etc/cron.daily  && \\\n    rm -Rf /etc/cron.weekly && \\\n    rm -Rf /etc/cron.monthly && \\\n    rm -Rf /etc/cron.hourly && \\\n    chmod a+x /etc/cron.d/cron\n\n# Install blackfire agent.\nRUN export VERSION=`php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\"` \\\n    && curl -f -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/${VERSION} \\\n    && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \\\n    && mv /tmp/blackfire-*.so `php -r \"echo ini_get('extension_dir');\"`/blackfire.so \\\n    && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > /etc/php5/apache2/conf.d/blackfire.ini && rm /tmp/blackfire-probe.tar.gz\n\n# Install ngrok.\nADD https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip /ngrok.zip\nRUN unzip /ngrok.zip -d /bin && \\\n rm -f ngrok.zip && \\\n touch /.ngrok\n\n# Expose apache.\nEXPOSE 80\n\n# Execute daemons.\nCMD exec supervisord -n\n"
}