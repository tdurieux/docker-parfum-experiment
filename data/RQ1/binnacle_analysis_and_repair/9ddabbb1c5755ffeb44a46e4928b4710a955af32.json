{
  "startTime": 1674240008721,
  "endTime": 1674240008998,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# PSONO Dockerfile for Alpine\nFROM psono-docker.jfrog.io/python:alpine3.6\n\nLABEL maintainer=\"Sascha Pfeiffer <sascha.pfeiffer@psono.com>\"\nCOPY psono/static/email /var/www/html/static/email\nCOPY . /root/\nWORKDIR /root\n\nRUN apk upgrade --no-cache && \\\n    mkdir -p /root/.pip && \\\n    echo '[global]' >> /root/.pip/pip.conf && \\\n    echo 'index-url = https://psono.jfrog.io/psono/api/pypi/pypi/simple' >> /root/.pip/pip.conf && \\\n    apk add --no-cache \\\n        curl \\\n        build-base \\\n        libffi-dev \\\n        linux-headers \\\n        postgresql-dev && \\\n    pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --no-cache-dir -r requirements.txt && \\\n    pip3 install --no-cache-dir uwsgi && \\\n    mkdir -p /root/.psono_server && \\\n    cp /root/configs/mainconfig/settings.yaml /root/.psono_server/settings.yaml && \\\n    sed -i s/YourPostgresDatabase/postgres/g /root/.psono_server/settings.yaml && \\\n    sed -i s/YourPostgresUser/postgres/g /root/.psono_server/settings.yaml && \\\n    sed -i s/YourPostgresHost/postgres/g /root/.psono_server/settings.yaml && \\\n    sed -i s/YourPostgresPort/5432/g /root/.psono_server/settings.yaml && \\\n    sed -i s,path/to/psono-server,root,g /root/.psono_server/settings.yaml && \\\n    apk del --no-cache \\\n        build-base \\\n        libffi-dev \\\n        linux-headers && \\\n    rm -Rf \\\n        /root/.cache\n\n\nHEALTHCHECK --interval=2m --timeout=3s \\\n\tCMD curl -f http://localhost/healthcheck/ || exit 1\n\nEXPOSE 80\n\nCMD [\"/bin/sh\", \"/root/configs/docker/cmd.sh\"]\n"
}