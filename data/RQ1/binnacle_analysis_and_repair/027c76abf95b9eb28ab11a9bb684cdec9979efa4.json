{
  "startTime": 1674251678227,
  "endTime": 1674251678340,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM asqatasun/asqatasun:pre-requisites_with-empty-DB\n\n# #### DISCLAIMER ###################################################################\n#\n#   This is a fat container, that is absolutly not compliant to Docker best-practices\n#   https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/\n#\n#   Don't use it for production as all data are wiped out at reboot / rebuild\n#   BUT for quick testing, that does the job :)\n# ###################################################################################\n\n\n# #### FROM  #######################################################\n#   Ubuntu:14.04\n#   |-- asqatasun/asqatasun:base_wget\n#       |-- asqatasun/asqatasun:only-DB\n#           |-- asqatasun/asqatasun:pre-requisites_without-DB\n#               |-- asqatasun/asqatasun:pre-requisites_with-empty-DB \n####################################################################\n\nRUN \\\n    apt-get update && \\\n    apt-get -y --no-install-recommends install software-properties-common && \\\n    add-apt-repository -y ppa:openjdk-r/ppa && \\\n    apt-get update && \\\n    apt-get -y --no-install-recommends install openjdk-8-jdk && \\\n    update-java-alternatives -s java-1.8.0-openjdk-amd64 && rm -rf /var/lib/apt/lists/*;\n\nUSER root\nENV  JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64/\"    \\\n     WWWPORT=\"8080\"                                    \\\n     DATABASE_DB=\"asqatasun\"                           \\\n     DATABASE_HOST=\"localhost\"                         \\\n     DATABASE_USER=\"asqatasun\"                         \\\n     DATABASE_PASSWD=\"asqaP4sswd\"                      \\\n     TOMCAT_WEBAPP_DIR=\"/var/lib/tomcat7/webapps\"      \\\n     TOMCAT_USER=\"tomcat7\"                             \\\n     ASQA_URL=\"http://localhost:8080/asqatasun/\"       \\\n     ASQA_ADMIN_EMAIL=\"admin@asqatasun.org\"                \\\n     ASQA_ADMIN_PASSWD=\"myAsqaPassword\"                \\\n     ASQA_RELEASE=\"4.1.0-SNAPSHOT\"\n\nEXPOSE $WWWPORT\n\n# ##########################################################\n#\n# Asqatasun installation\n# cf http://doc.asqatasun.org/en/10_Install_doc/\n#\n# ##########################################################\n\n# Add Asqatasun\nADD ./asqatasun-${ASQA_RELEASE}.i386.tar.gz /root/\n\n# Install Asqatasun\nRUN  cd  /root                                      && \\\n     mv   asqatasun*/    ./asqatasun/               && \\\n     service mysql start                            && \\\n     sleep 5                                        && \\\n     cd   /root/asqatasun/install/                  && \\\n     echo \"yes\\n\" | ./install-SQL.sh           \\\n        --database-db       $DATABASE_DB       \\\n        --database-host     $DATABASE_HOST     \\\n        --database-user     $DATABASE_USER     \\\n        --database-passwd   $DATABASE_PASSWD        && \\\n     echo \"yes\\n\" | ./install.sh               \\\n        --database-db       $DATABASE_DB       \\\n        --database-host     $DATABASE_HOST     \\\n        --database-user     $DATABASE_USER     \\\n        --database-passwd   $DATABASE_PASSWD   \\\n        --asqatasun-url     $ASQA_URL          \\\n        --tomcat-webapps    $TOMCAT_WEBAPP_DIR \\\n        --tomcat-user       $TOMCAT_USER       \\\n        --asqa-admin-email  $ASQA_ADMIN_EMAIL  \\\n        --asqa-admin-passwd $ASQA_ADMIN_PASSWD \\\n        --firefox-esr-binary-path /opt/firefox/firefox \\\n        --display-port      :99                     && \\\n     rm -rf  /root/asqatasun*\n\n\n# Health Check of the Docker Container\nHEALTHCHECK --timeout=3s    \\\n            --interval=10s  \\\n            CMD curl --fail http://localhost:8080/asqatasun/ || exit 1\n            ######################################################################\n            # doc: https://docs.docker.com/engine/reference/builder/#healthcheck\n            # options:  --interval=DURATION (default: 30s)\n            #           --timeout=DURATION (default: 30s)\n            #           --retries=N (default: 3)\n            # can be overridden at the command line 'docker run --health-cmd (...)'\n            ######################################################################\n\nCMD  service mysql start                            && \\\n     sleep   5                                      && \\\n     service xvfb start                             && \\\n     echo \"JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/\" >> /etc/default/tomcat7 && \\\n     service tomcat7 start                          ;  \\\n            ls -l /usr/share/tomcat7/lib/spring3-instrument-tomcat.jar  ;  \\\n            ls -l /usr/share/java/spring3-instrument-tomcat.jar         ;  \\\n            ls -l /usr/share/java/spring3-instrument-tomcat-3.x.jar     ;  \\\n     tail -f /var/log/tomcat7/catalina.out     \\\n             /var/log/asqatasun/asqatasun.log\n\n\n"
}