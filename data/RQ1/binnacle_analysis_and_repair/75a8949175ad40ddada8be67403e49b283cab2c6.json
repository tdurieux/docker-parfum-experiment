{
  "startTime": 1674249106004,
  "endTime": 1674249106426,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 12,
        "columnEnd": 77
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 23,
        "columnEnd": 97
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 29,
        "columnEnd": 137
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 69,
        "columnEnd": 218
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM mmicko/cross-base:1.0\n\nENV CROSS_NAME riscv32-unknown-linux-gnu\n\nENV CROSS_PREFIX /opt/${CROSS_NAME}\n\nRUN cd / && wget https://www.antmicro.com/downloads/riscv-gnu-toolchain.tar.gz && tar xvfz riscv-gnu-toolchain.tar.gz && rm riscv-gnu-toolchain.tar.gz\n\nENV AS=/riscv-gnu-toolchain/bin/${CROSS_NAME}-as \\\n    AR=/riscv-gnu-toolchain/bin/${CROSS_NAME}-ar \\\n    CC=/riscv-gnu-toolchain/bin/${CROSS_NAME}-gcc \\\n    CPP=/riscv-gnu-toolchain/bin/${CROSS_NAME}-cpp \\\n    CXX=/riscv-gnu-toolchain/bin/${CROSS_NAME}-g++ \\\n    LD=/riscv-gnu-toolchain/bin/${CROSS_NAME}-ld\n\nCOPY Toolchain.cmake ${CROSS_PREFIX}/\n\nENV CMAKE_TOOLCHAIN_FILE ${CROSS_PREFIX}/Toolchain.cmake\n\nRUN ln -s /usr/lib/x86_64-linux-gnu/libmpfr.so.6 /usr/lib/x86_64-linux-gnu/libmpfr.so.4 && \\\n    cd /src/boost && \\\n    echo \"using gcc : riscv : \" ${CC} \"; \" >> tools/build/src/user-config.jam && \\\n    ./bootstrap.sh --prefix=${CROSS_PREFIX} --with-libraries=program_options,filesystem,thread,iostreams && \\\n    ./b2 --toolset=gcc-riscv link=static install && \\\n    cd /src/libusb && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${CROSS_PREFIX} --host=${CROSS_NAME} --enable-udev=no && \\\n    make -j9 && \\\n    make install && \\\n    cd /src/libftdi1 && \\\n    export PKG_CONFIG_PATH=${CROSS_PREFIX}/lib/pkgconfig && \\\n    cmake . -DCMAKE_INSTALL_PREFIX=${CROSS_PREFIX} -DBOOST_ROOT=$CROSS_PREFIX && \\\n    make -j9 && \\\n    make install && \\\n    cd /src/libftdi1/examples && \\\n    ${CC} -o lsftdi find_all.c -static -lftdi1 -lusb-1.0 -lpthread -L${CROSS_PREFIX}/lib -I${CROSS_PREFIX}/include/libftdi1 && \\\n    cp lsftdi ${CROSS_PREFIX}/bin/. && \\\n    cd /src/libusb/examples && \\\n    ${CC} -o lsusb listdevs.c -static -lusb-1.0 -lpthread -L${CROSS_PREFIX}/lib -I${CROSS_PREFIX}/include/libusb-1.0 && \\\n    cp lsusb ${CROSS_PREFIX}/bin/. && \\\n    cd / && \\\n    rm -rf /src\nRUN mkdir /src && \\\n    cd /src && \\\n    wget -c https://mirrors.mediatemple.net/debian-archive/debian/pool/main/libu/libusb/libusb_0.1.12.orig.tar.gz && \\\n    wget -c https://ftp.ubuntu.com/ubuntu/pool/universe/libf/libftdi/libftdi_0.20.orig.tar.gz && \\\n    tar xvfz libusb_0.1.12.orig.tar.gz && \\\n    tar xvfz libftdi_0.20.orig.tar.gz && \\\n    cd /src/libusb-0.1.12 && CFLAGS=-Wno-format-truncation ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${CROSS_PREFIX} --host=x86_64-linux-gnu --enable-udev=no && make install && \\\n    cd /src/libftdi-0.20 && export PATH=${CROSS_PREFIX}/bin:$PATH && CFLAGS=-Wno-format-truncation CXXFLAGS=\"-I${CROSS_PREFIX}/include -L${CROSS_PREFIX}/lib\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${CROSS_PREFIX} --host=x86_64-linux-gnu && make install && \\\n    cd / && \\\n    rm -rf /src && rm libusb_0.1.12.orig.tar.gz\n"
}