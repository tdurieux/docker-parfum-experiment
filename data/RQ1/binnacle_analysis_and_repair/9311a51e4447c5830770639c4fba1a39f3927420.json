{
  "startTime": 1674238943122,
  "endTime": 1674238943201,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Docker file for base ROS+OpenCog+Blender install\n# The CogServer is not started; no ROS nodes are started.\n#\n# XXX THIS IS IDENTICAL TO the ros-indigo-blender DOCKERFILE,\n# XXX EXCEPT THAT A DIFFERENT BASE IS USED!\n# XXX Please try to keep it that way!\n#\n# The primary difficulty here is that Blender wants Python3\n# while ROS wants Python2, and so there are install conflicts.\n#\n# To build:\n# docker build -t opencog/ros-incog-blender .\n#\n# To run:\n# docker run --rm --privileged -i -v /tmp/.X11-unix/X0:/tmp/.X11-unix/X0 \\\n#    -v /dev/dri:/dev/dri -v /dev/shm:/dev/shm -e DISPLAY=:0.0 \\\n#    -t opencog/ros-incog-blender\n#\n# The above should be sufficient to get blender running with full\n# 3D hardware acceleration on the local host (dri==direct rendering interface)\n# Note: /dev/dri=gpu, /dev/shm=gpu\n#\nFROM opencog/ros-indigo-opencog\nMAINTAINER Linas VepÅ¡tas \"linasvepstas@gmail.com\"\n\nENV LAST_OS_UPDATE 2015-11-25\n\n# Get blender version 2.71; the default in trusty is 2.69, and lighting\n# looks wrong in it.  The one in ppa:thomas-schiex is 2.75, and gestures\n# don't work with that version.\n# RUN add-apt-repository ppa:thomas-schiex/blender\nRUN add-apt-repository ppa:irie/blender\nRUN apt-get -y update && apt-get -y --no-install-recommends install blender x11-utils mesa-utils python3-yaml python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y upgrade\n\n# Blender with dependencies\n# Install x11-utils to get xdpyinfo, for X11 display debugging\n# mesa-utils provides glxinfo, handy for understanding the 3D support.\n# Blender needs python3\n\n\n# We perform some magic incantations to allow ROS (which normally\n# expects python2) to happily co-exist with python3.  Yes, its odd\n# to do this here, but here is where we first install python3.\nRUN pip3 install --no-cache-dir rospkg catkin_pkg\n\nWORKDIR /catkin_ws/src\nRUN cp /opt/ros/indigo/setup.sh /etc/profile.d/ros_indigo.sh\nENV PYTHONPATH /opt/ros/indigo/lib/python2.7/dist-packages\nRUN /usr/bin/python3 /opt/ros/indigo/bin/catkin_init_workspace\n\n# Must run catkin at least once, even if there is nothing to build;\n# it creates the needed directory structure and the needed setup.sh.\nWORKDIR /catkin_ws\nRUN bash -l -c \"/opt/ros/indigo/bin/catkin_make\"\n\n# Empty ROS Enviroment Setup\n# The user is root; so ~/.bash_profile is /root/.bash_profile\nRUN echo source /catkin_ws/devel/setup.bash >> ~/.bash_profile && \\\n    echo -e \"\\e[1;34m[$SELF_NAME] catkin devel setup\\.bash sourced\\e[0m\"\n\nENV DISPLAY :0.0\nCMD /bin/bash\n"
}