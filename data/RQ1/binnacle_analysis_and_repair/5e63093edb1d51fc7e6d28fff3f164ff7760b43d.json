{
  "startTime": 1674241329720,
  "endTime": 1674241329908,
  "originalSmells": [
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# Sneak the stf executable into $PATH.\nENV PATH /app/bin:$PATH\n\n# Work in app dir by default.\nWORKDIR /app\n\n# Export default app port, not enough for all processes but it should do\n# for now.\nEXPOSE 3000\n\n# Install app requirements. Trying to optimize push speed for dependant apps\n# by reducing layers as much as possible. Note that one of the final steps\n# installs development files for node-gyp so that npm install won't have to\n# wait for them on the first native module installation.\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    useradd --system \\\n      --create-home \\\n      --shell /usr/sbin/nologin \\\n      stf-build && \\\n    useradd --system \\\n      --create-home \\\n      --shell /usr/sbin/nologin \\\n      stf && \\\n    sed -i'' 's@http://archive.ubuntu.com/ubuntu/@mirror://mirrors.ubuntu.com/mirrors.txt@' /etc/apt/sources.list && \\\n    apt-get update && \\\n    apt-get -y --no-install-recommends install wget python build-essential && \\\n    cd /tmp && \\\n    wget --progress=dot:mega \\\n      https://nodejs.org/dist/v6.11.2/node-v6.11.2-linux-x64.tar.xz && \\\n    tar -xJf node-v*.tar.xz --strip-components 1 -C /usr/local && \\\n    rm node-v*.tar.xz && \\\n    su stf-build -s /bin/bash -c '/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js install' && \\\n    apt-get -y --no-install-recommends install libzmq3-dev libprotobuf-dev git graphicsmagick yasm && \\\n    apt-get clean && \\\n    rm -rf /var/cache/apt/* /var/lib/apt/lists/*\n\n# Copy app source.\nCOPY . /tmp/build/\n\n# Give permissions to our build user.\nRUN mkdir -p /app && \\\n    chown -R stf-build:stf-build /tmp/build /app\n\n# Switch over to the build user.\nUSER stf-build\n\n# Run the build.\nRUN set -x && \\\n    cd /tmp/build && \\\n    export PATH=$PWD/node_modules/.bin:$PATH && \\\n    npm install --loglevel http && \\\n    npm pack && \\\n    tar xzf stf-*.tgz --strip-components 1 -C /app && \\\n    bower cache clean && \\\n    npm prune --production && \\\n    mv node_modules /app && \\\n    npm cache clean --force && \\\n    rm -rf ~/.node-gyp && \\\n    cd /app && \\\n    rm -rf /tmp/* && rm stf-*.tgz\n\n# Switch to the app user.\nUSER stf\n\n# Show help by default.\nCMD stf --help\n"
}