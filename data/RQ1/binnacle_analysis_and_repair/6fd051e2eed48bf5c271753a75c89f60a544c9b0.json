{
  "startTime": 1674252004787,
  "endTime": 1674252005061,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gassmoeller/aspect\n\nLABEL Timo Heister <timo.heister@gmail.com>\n\nUSER root\n\nRUN apt-get update && apt-get install -yq --no-install-recommends -o Dpkg::Options::=\"--force-confold\" sudo && rm -rf /var/lib/apt/lists/*;\n\n# Install all OS dependencies for fully functional notebook server\nRUN apt-get update && apt-get install -yq --no-install-recommends \\\n    git \\\n    vim \\\n    jed \\\n    emacs \\\n    build-essential \\\n    python-dev \\\n    unzip \\\n    libsm6 \\\n    pandoc \\\n    texlive-latex-base \\\n    texlive-latex-extra \\\n    texlive-fonts-extra \\\n    texlive-fonts-recommended \\\n    texlive-generic-recommended \\\n    texlive-xetex \\\n    lmodern \\\n    libxrender1 \\\n    inkscape \\\n   wget \\\n    bzip2 \\\n    ca-certificates \\\n    sudo \\\n    locales \\\n    fonts-liberation && rm -rf /var/lib/apt/lists/*;\n\n# Install Tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini && \\\n    echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0  *tini\" | sha256sum -c - && \\\n    mv tini /usr/local/bin/tini && \\\n    chmod +x /usr/local/bin/tini\n\nENV SHELL /bin/bash\n\nENV CONDA_DIR /opt/conda\nENV PATH $CONDA_DIR/bin:$PATH\nENV HOME /home/$USER\nENV NB_USER $USER\n\nRUN mkdir -p $CONDA_DIR && \\\n    chown $USER $CONDA_DIR\n\nUSER $USER\n\n# Install conda\nRUN cd /tmp && \\\n    mkdir -p $CONDA_DIR && \\\n    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-4.2.12-Linux-x86_64.sh && \\\n    echo \"c59b3dd3cad550ac7596e0d599b91e75d88826db132e4146030ef471bb434e9a  *Miniconda3-4.2.12-Linux-x86_64.sh\" | sha256sum -c - && \\\n    /bin/bash Miniconda3-4.2.12-Linux-x86_64.sh -f -b -p $CONDA_DIR && \\\n    rm Miniconda3-4.2.12-Linux-x86_64.sh && \\\n    $CONDA_DIR/bin/conda config --system --add channels conda-forge && \\\n    $CONDA_DIR/bin/conda config --system --set auto_update_conda false && \\\n    conda clean -tipsy\n\n# Install Jupyter Notebook and Hub\nRUN conda install --quiet --yes \\\n    'notebook=5.0.*' \\\n    'jupyterhub=0.7.*' \\\n    'jupyterlab=0.18.*' \\\n    && conda clean -tipsy\n\nRUN conda install --quiet --yes \\\n    'nomkl' \\\n    'ipywidgets=6.0*' \\\n    'pandas=0.19*' \\\n    'numexpr=2.6*' \\\n    'matplotlib=2.0*' \\\n    'scipy=0.19*' \\\n    'seaborn=0.7*' \\\n    'scikit-learn=0.18*' \\\n    'scikit-image=0.12*' \\\n    'sympy=1.0*' \\\n    'cython=0.25*' \\\n    'patsy=0.4*' \\\n    'statsmodels=0.8*' \\\n    'cloudpickle=0.2*' \\\n    'dill=0.2*' \\\n    'numba=0.31*' \\\n    'bokeh=0.12*' \\\n    'sqlalchemy=1.1*' \\\n    'hdf5=1.8.17' \\\n    'h5py=2.6*' \\\n    'vincent=0.4.*' \\\n    'beautifulsoup4=4.5.*' \\\n    'pytables' \\\n    'xlrd'  && \\\n    conda remove --quiet --yes --force qt pyqt && \\\n    conda clean -tipsy\n\n# Activate ipywidgets extension in the environment that runs the notebook server\nRUN jupyter nbextension enable --py widgetsnbextension --sys-prefix\n\nRUN mkdir -p $HOME/.ipython/profile_default/startup\nCOPY mplimporthook.py $HOME/.ipython/profile_default/startup/\n\n\nUSER root\n\nEXPOSE 8888\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\n#COPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /home/$NB_USER/.jupyter/\nRUN chown -R $NB_USER:users /home/$NB_USER/.jupyter\n\nCOPY demo.ipynb /home/$NB_USER/\n\nRUN chown $NB_USER:users /home/$NB_USER/demo.ipynb\n\nWORKDIR /home/$USER/\n\nUSER $USER\n\nRUN jupyter trust /home/$USER/*.ipynb\n\n# enable widgets:\nRUN jupyter nbextension enable --py --sys-prefix widgetsnbextension\n\n"
}