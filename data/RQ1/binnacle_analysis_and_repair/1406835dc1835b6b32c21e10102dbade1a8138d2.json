{
  "startTime": 1674251004196,
  "endTime": 1674251004399,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 101,
        "columnEnd": 149
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 85,
        "columnEnd": 125
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG centos_version=6\nFROM centos:$centos_version\n# needed to do again after FROM due to docker limitation\nARG centos_version\n\nENV SOURCE_DIR /root/source\nENV CMAKE_VERSION_BASE 3.8\nENV CMAKE_VERSION $CMAKE_VERSION_BASE.2\nENV NINJA_VERSION 1.7.2\nENV GO_VERSION 1.9.3\n\n# install dependencies\nRUN yum install -y \\\n apr-devel \\\n autoconf \\\n automake \\\n bzip2 \\\n git \\\n glibc-devel \\\n gnupg \\\n libapr1-dev \\\n libtool \\\n lsb-core \\\n make \\\n openssl-devel \\\n perl \\\n tar \\\n unzip \\\n wget && rm -rf /var/cache/yum\n\nRUN mkdir $SOURCE_DIR\nWORKDIR $SOURCE_DIR\n\nRUN wget -q https://cmake.org/files/v$CMAKE_VERSION_BASE/cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz && tar zxf cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz && mv cmake-$CMAKE_VERSION-Linux-x86_64 /opt/ && echo 'PATH=/opt/cmake-$CMAKE_VERSION-Linux-x86_64/bin:$PATH' >> ~/.bashrc && rm cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz\n\nRUN wget -q https://github.com/ninja-build/ninja/releases/download/v$NINJA_VERSION/ninja-linux.zip && unzip ninja-linux.zip && mkdir -p /opt/ninja-$NINJA_VERSION/bin && mv ninja /opt/ninja-$NINJA_VERSION/bin && echo 'PATH=/opt/ninja-$NINJA_VERSION/bin:$PATH' >> ~/.bashrc\n\nRUN wget -q https://storage.googleapis.com/golang/go$GO_VERSION.linux-amd64.tar.gz && tar zxf go$GO_VERSION.linux-amd64.tar.gz && mv go /opt/ && echo 'PATH=/opt/go/bin:$PATH' >> ~/.bashrc && echo 'export GOROOT=/opt/go/' >> ~/.bashrc && rm go$GO_VERSION.linux-amd64.tar.gz\n\nRUN wget -q https://linuxsoft.cern.ch/cern/scl/RPM-GPG-KEY-cern && mv RPM-GPG-KEY-cern /etc/pki/rpm-gpg/\nRUN wget -q https://linuxsoft.cern.ch/cern/scl/slc6-scl.repo && mv slc6-scl.repo /etc/yum.repos.d\nRUN yum install -y devtoolset-3-gcc-c++ && rm -rf /var/cache/yum\nRUN echo 'source /opt/rh/devtoolset-3/enable' >> ~/.bashrc\n\nRUN rm -rf $SOURCE_DIR\n\nARG java_version=1.8\nENV JAVA_VERSION $java_version\n# installing java with jabba\nRUN curl -f -sL https://github.com/shyiko/jabba/raw/master/install.sh | JABBA_COMMAND=\"install $JAVA_VERSION -o /jdk\" bash\n\n\nRUN echo 'export JAVA_HOME=\"/jdk\"' >> ~/.bashrc\nRUN echo 'PATH=/jdk/bin:$PATH' >> ~/.bashrc\n"
}