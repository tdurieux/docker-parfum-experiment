{
  "startTime": 1674249234234,
  "endTime": 1674249234406,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 34,
        "columnEnd": 146
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM prasanthj/docker-tez:tez-0.5.2\nMAINTAINER Prasanth Jayachandran\n\n# to configure postgres as hive metastore backend\nRUN apt-get update && apt-get -yq --no-install-recommends install vim postgresql-9.3 libpostgresql-jdbc-java && rm -rf /var/lib/apt/lists/*;\n\n# having ADD commands will invalidate the cache forcing hive build from trunk everytime\n# copy config, sql, data files to /opt/files\nRUN mkdir /opt/files\nADD hive-site.xml /opt/files/\nADD hive-log4j.properties /opt/files/\nADD store_sales.* /opt/files/\nADD datagen.py /opt/files/\n\n# clone and compile hive\nENV HIVE_VERSION 1.2.0\nENV HIVE_SNAPSHOT_VERSION ${HIVE_VERSION}-SNAPSHOT\nRUN cd /usr/local && git clone https://github.com/apache/hive.git\nRUN cd /usr/local/hive && /usr/local/maven/bin/mvn clean install -DskipTests -Phadoop-2,dist\nRUN mkdir /usr/local/hive-dist && tar -xf /usr/local/hive/packaging/target/apache-hive-${HIVE_SNAPSHOT_VERSION}-bin.tar.gz -C /usr/local/hive-dist && rm /usr/local/hive/packaging/target/apache-hive-${HIVE_SNAPSHOT_VERSION}-bin.tar.gz\n\n# set hive environment\nENV HIVE_HOME /usr/local/hive-dist/apache-hive-${HIVE_SNAPSHOT_VERSION}-bin\nENV HIVE_CONF $HIVE_HOME/conf\nENV PATH $HIVE_HOME/bin:$PATH\nADD hive-site.xml $HIVE_CONF/hive-site.xml\nADD hive-log4j.properties $HIVE_CONF/hive-log4j.properties\n\n# zookeeper pulls jline 0.9.94 and hive pulls jline2. This workaround is from HIVE-8609\nRUN rm $HADOOP_PREFIX/share/hadoop/yarn/lib/jline-0.9.94.jar\n\n# add postgresql jdbc jar to classpath\nRUN ln -s /usr/share/java/postgresql-jdbc4.jar $HIVE_HOME/lib/postgresql-jdbc4.jar\n\n# set permissions for hive bootstrap file\nADD hive-bootstrap.sh /etc/hive-bootstrap.sh\nRUN chown root:root /etc/hive-bootstrap.sh\nRUN chmod 700 /etc/hive-bootstrap.sh\n\n# to avoid psql asking password, set PGPASSWORD\nENV PGPASSWORD hive\n\n# To overcome the bug in AUFS that denies postgres permission to read /etc/ssl/private/ssl-cert-snakeoil.key file.\n# https://github.com/Painted-Fox/docker-postgresql/issues/30\n# https://github.com/docker/docker/issues/783\n# To avoid this issue lets disable ssl in postgres.conf. If we really need ssl to encrypt postgres connections we have to fix permissions to /etc/ssl/private directory everytime until AUFS fixes the issue\nENV POSTGRESQL_MAIN /var/lib/postgresql/9.3/main/\nENV POSTGRESQL_CONFIG_FILE $POSTGRESQL_MAIN/postgresql.conf\nENV POSTGRESQL_BIN /usr/lib/postgresql/9.3/bin/postgres\nADD postgresql.conf $POSTGRESQL_MAIN\nRUN chown postgres:postgres $POSTGRESQL_CONFIG_FILE\n\nUSER postgres\n# create metastore db, hive user and assign privileges\nRUN /etc/init.d/postgresql start &&\\\n     psql --command \"CREATE DATABASE metastore;\" &&\\\n     psql --command \"CREATE USER hive WITH PASSWORD 'hive';\" && \\\n     psql --command \"ALTER USER hive WITH SUPERUSER;\" && \\\n     psql --command \"GRANT ALL PRIVILEGES ON DATABASE metastore TO hive;\" && \\\n     cd $HIVE_HOME/scripts/metastore/upgrade/postgres/ &&\\\n        psql -h localhost -U hive -d metastore -f hive-schema-${HIVE_VERSION}.postgres.sql\n\n# revert back to root user\nUSER root\n"
}