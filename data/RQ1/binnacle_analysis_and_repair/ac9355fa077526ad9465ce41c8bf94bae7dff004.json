{
  "startTime": 1674246513428,
  "endTime": 1674246513698,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedDockerfile": "############################################################\n# Dockerfile to build Owl docker image\n# Based on owlbarn/owl master branch\n# By Liang Wang <liang.wang@cl.cam.ac.uk>\n############################################################\n\nFROM armv7/armhf-ubuntu:16.04\nMAINTAINER Roger Stark <rho.ajax@gmail.com>\n\n\n##################### PREREQUISITES ########################\n\nRUN apt-get update\nRUN apt-get -y --no-install-recommends install git build-essential ocaml wget unzip aspcud m4 pkg-config && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y --no-install-recommends install camlp4-extra libshp-dev libplplot-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y --no-install-recommends install libopenblas-dev liblapacke-dev && rm -rf /var/lib/apt/lists/*;\n\nENV VER=2.0.0-rc\nRUN wget https://github.com/ocaml/opam/releases/download/$VER/opam-full-$VER.tar.gz \\\n    && tar -xvf opam-full-$VER.tar.gz \\\n    && cd opam-full-$VER \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make lib-ext && make && make install && rm opam-full-$VER.tar.gz\n\nRUN yes | opam init && eval $(opam config env) && opam switch create 4.06.0\n\nRUN opam install -y dune ocaml-compiler-libs ctypes plplot alcotest utop base stdio configurator sexplib\n\n#################### SET UP ENV VARS #######################\n\nENV PATH /root/.opam/4.06.0/bin:/usr/local/sbin/:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH\nENV CAML_LD_LIBRARY_PATH /root/.opam/4.06.0/lib/stublibs\n\n\n####################  INSTALL EIGEN  #######################\n\nENV EIGENPATH /root/eigen\nRUN cd /root && git clone https://github.com/owlbarn/eigen.git\nRUN sed -i -- 's/ar rvs/gcc-ar rvs/g' $EIGENPATH/eigen_cpp/lib/Makefile \\\n    && sed -i -- 's/-march=native -mfpmath=sse/-march=native/g' $EIGENPATH/eigen/dune $EIGENPATH/eigen_cpp/lib/Makefile\n\nRUN cd $EIGENPATH && make && make install\n\nRUN cp $EIGENPATH/_build/default/eigen_cpp/lib/libeigen.a /usr/local/lib\n\n\n####################   INSTALL OWL  #######################\n\nENV OWLPATH /root/owl\nRUN cd /root && git clone https://github.com/owlbarn/owl.git\n\n# remove unrecognised sse compiler option on arm; add libraries for linking\nRUN sed -i -- 's/linux_elf/linux_eabihf/g' $OWLPATH/src/owl/config/configure.ml \\\n    && sed -i -- 's/-mfpmath=sse//g' $OWLPATH/src/owl/config/configure.ml \\\n    && sed -i -- 's/-msse2//g' $OWLPATH/src/owl/config/configure.ml\n\nRUN cd $OWLPATH \\\n    && eval `opam config env ` \\\n    && make && make install\n\n\n############## SET UP DEFAULT CONTAINER VARS ##############\n\nRUN echo \"#require \\\"owl-top\\\";; open Owl;;\" >> /root/.ocamlinit \\\n    && opam config env >> /root/.bashrc \\\n    && bash -c \"source /root/.bashrc\"\n\nWORKDIR $OWLPATH\nENTRYPOINT /bin/bash\n"
}