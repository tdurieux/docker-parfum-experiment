{
  "startTime": 1674243259377,
  "endTime": 1674243259562,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# use the ubuntu base image\nFROM ubuntu:xenial\n\n# Acknowledgements to Delly: https://raw.githubusercontent.com/dellytools/delly/master/docker/Dockerfile\n\nLABEL author=\"Matt Wyczalkowski\" \\\n      maintainer=\"m.wyczalkowski@wustl.edu\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    autoconf \\\n    bedtools \\\n    build-essential \\\n    bwa \\\n    cpanminus \\\n    gawk \\\n    git \\\n    imagemagick \\\n    libbz2-dev \\\n    liblzma-dev \\\n    python \\\n    python-dev \\\n    python-pip \\\n    r-base \\\n    vim-tiny \\\n    wget \\\n    zlib1g-dev \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n#  Various R packgages\nRUN echo 'install.packages(c(\"ggplot2\", \"plyr\", \"reshape2\", \"RColorBrewer\", \"scales\", \"bitops\", \"gridExtra\", \"gridBase\", \"stringr\"), repos=\"http://cran.us.r-project.org\", dependencies=TRUE)' > /tmp/packages.R ; \\\necho 'source(\"https://bioconductor.org/biocLite.R\"); biocLite(\"DNAcopy\")' >> /tmp/packages.R \\\n&& Rscript /tmp/packages.R\n\n# Various Python packages\nRUN pip install --no-cache-dir \\\n    pyvcf \\\n    pysam \\\n    numpy\n\n# Perl packags\nRUN cpanm XML::XPath\n\n# Installing HTSLIB\nRUN cd /usr/local \\\n    && git clone https://github.com/samtools/htslib.git \\\n    && cd /usr/local/htslib \\\n    && make \\\n    && make lib-static \\\n    && make install\n\nENV LD_LIBRARY_PATH=/usr/local/htslib\n\n# Install samtools\nRUN cd /usr/local/ \\\n    && git clone https://github.com/samtools/samtools.git \\\n    && cd samtools \\\n    && make \\\n    && make install\n\n# Install Pindel\nRUN cd /usr/local/ \\\n    && git clone --recursive https://github.com/genome/pindel.git  \\\n    && cd /usr/local/pindel/ \\\n    && ./INSTALL /usr/local/htslib\n\n# Tigra\n# Need to copy Tigra.Makefile.patch to container\n# Patching:\n#   To make a patch:\n#       diff -u Makefile.orig Makefile > Tigra.Makefile.patch\n#   To apply a patch:\n#       patch Makefile Tigra.Makefile.patch\n#\n\nCOPY container-init/Tigra.Makefile.patch /usr/local\nRUN cd /usr/local \\\n    && git clone https://bitbucket.org/xianfan/tigra.git \\\n    && cd tigra \\\n    && patch Makefile /usr/local/Tigra.Makefile.patch \\\n    && make \\\n    && make install\n\n# Novobreak\nRUN cd /usr/local \\\n    && git clone https://git.code.sf.net/p/novobreak/git novobreak-git \\\n    && cd novobreak-git \\\n    && make\n\nRUN groupadd -r bps && useradd -r -g bps -m bps\n\n# Finally install Breakpoint Surveyor\nRUN cd /usr/local \\\n    && git clone --recursive https://github.com/ding-lab/BreakPointSurveyor.git \\\n    && chown -R bps:bps /usr/local/BreakPointSurveyor\n\n# below places user in BPS path, but not on MGI\nWORKDIR /usr/local/BreakPointSurveyor\nUSER bps\n\n# cd /usr/local/BreakPointSurveyor\n# git checkout Synthetic\n# ./run_BPS A_Reference/ B_ExonGene/ C_SyntheticBAM/ D_TestBAM/ F_Project/ G_Discordant/ J_PlotList/ K_ReadDepth/ N_DrawBreakpoint/ O_DrawDepth/ P_DrawAnnotation/ Q_DrawHistogram/ T_PlotStructure/\n\n# following invocation will create common data dir in ./\n# docker run -v $PWD/data:/data -it breakpoint_surveyor\nVOLUME [\"/data\"]\n\nCMD [\"/bin/bash\"]\n"
}