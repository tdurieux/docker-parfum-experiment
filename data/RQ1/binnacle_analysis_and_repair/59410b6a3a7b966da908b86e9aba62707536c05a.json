{
  "startTime": 1674249767725,
  "endTime": 1674249768088,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.3.5-fpm-alpine\n\nLABEL Maintainer Michael Shihjay Chen <shihjay2@gmail.com>\n\n# Add Repositories\nRUN rm -f /etc/apk/repositories &&\\\n    echo \"http://dl-cdn.alpinelinux.org/alpine/v3.9/main\" >> /etc/apk/repositories && \\\n    echo \"http://dl-cdn.alpinelinux.org/alpine/v3.9/community\" >> /etc/apk/repositories\n\n# Add Build Dependencies\nRUN apk add --no-cache --virtual .build-deps \\\n    zlib-dev \\\n    libjpeg-turbo-dev \\\n    libpng-dev \\\n    libxml2-dev \\\n    php7-dev \\\n    autoconf \\\n    gcc \\\n    g++ \\\n    make \\\n    pcre-dev \\\n    bzip2-dev\n\n# Add Production Dependencies\nRUN apk add --update --no-cache \\\n    jpegoptim \\\n    pngquant \\\n    optipng \\\n    supervisor \\\n    nano \\\n    icu-dev \\\n    mariadb-client \\\n    imagemagick-dev \\\n    libssh2-dev \\\n    libzip-dev \\\n    imap-dev \\\n    libtool \\\n    freetype-dev\n\n# Configure & Install Extension\nRUN docker-php-ext-configure \\\n    opcache --enable-opcache &&\\\n    docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ &&\\\n    docker-php-ext-configure imap --with-imap --with-imap-ssl &&\\\n    docker-php-ext-install \\\n    opcache \\\n    mysqli \\\n    pdo \\\n    pdo_mysql \\\n    sockets \\\n    json \\\n    intl \\\n    gd \\\n    xml \\\n    zip \\\n    bz2 \\\n    pcntl \\\n    soap \\\n    imap \\\n    bcmath\n\n# imagick\nRUN pecl install imagick &&\\\n    docker-php-ext-enable imagick\n\n# Cleanup\nRUN apk del .build-deps\n\n# Copy composer.lock and composer.json\nCOPY composer.lock composer.json /var/www/nosh/\n\nWORKDIR \"/var/www/nosh\"\n\n# Install composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nENV COMPOSER_ALLOW_SUPERUSER=1\nENV PATH=\"./vendor/bin:$PATH\"\n\n# Copy source files and run composer\nCOPY . /var/www/nosh\nRUN mkdir /var/www/nosh/vendor\n\n# Copy existing application directory permissions\nCOPY --chown=www-data:www-data . /var/www/nosh\nRUN chmod 777 /var/www/nosh/storage\nRUN chmod 777 /var/www/nosh/public\nRUN chmod 777 /var/www/nosh/vendor\n\nUSER www-data\n\n# Install all PHP dependencies\nRUN composer install --no-interaction\n\nUSER root\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/docker-entrypoint.sh\"]\n\nCOPY supervisord.conf /etc/supervisord.conf\nCOPY schedule.sh /usr/local/bin/schedule.sh\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/schedule.sh\"]\n\nRUN mkdir /noshdocuments\nRUN chown -R www-data:www-data /noshdocuments\nRUN chmod -R 755 /noshdocuments\n\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\n\nEXPOSE 9000\nCMD [\"/usr/bin/supervisord\", \"-n\", \"-c\", \"/etc/supervisord.conf\"]\n"
}