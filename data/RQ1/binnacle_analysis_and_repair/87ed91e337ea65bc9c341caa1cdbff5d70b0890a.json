{
  "startTime": 1674241368111,
  "endTime": 1674241368323,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 33,
        "columnStart": 40,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright(c) Mauro Carvalho Chehab <mchehab+samsung@kernel.org>\n#\n# Released under the terms of GPL 2.0.\n\n\n# Please notice that this container uses X11. So, it has to run with:\n#\n# docker run -it --env=\"DISPLAY\" --env=\"QT_X11_NO_MITSHM=1\" --volume=\"/tmp/.X11-unix:/tmp/.X11-unix:rw\" --volume=\"$HOME:/home/kaffeine:rw\"  $(for i in $(ls /dev/dvb/adapter*/*); do echo -n \"--device=$i:$i:rwm \"; done) maurochehab/kaffeine\n#\n\nFROM ubuntu:19.04\n\nMAINTAINER Mauro Carvalho Chehab <mchehab+samsung@kernel.org>\n\n# STEP 1: Install build and runtime dependencies\n\nRUN echo \"deb http://archive.ubuntu.com/ubuntu disco main restricted universe multiverse\" >/etc/apt/sources.list && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends build-essential cmake \\\n    pkg-kde-tools pkg-config extra-cmake-modules qtbase5-dev libqt5x11extras5-dev \\\n    libkf5coreaddons-dev libkf5dbusaddons-dev libkf5i18n-dev libkf5kio-dev debhelper \\\n    libkf5solid-dev libkf5widgetsaddons-dev libkf5windowsystem-dev libkf5xmlgui-dev \\\n    libkf5doctools-dev git libx11-dev libxss-dev libudev-dev libvlc-dev libqt5dbus5 \\\n    dh-autoreconf autotools-dev autoconf-archive libtool pkg-config libqt5sql5-sqlite \\\n    appstream dbus-x11 wget openssl ca-certificates && \\\n    apt-get install -y --no-install-recommends vlc-data vlc-plugin-base vlc-plugin-qt \\\n    vlc-plugin-video-output && \\\n    rm -rf /var/lib/apt/lists/*\n\n# STEP 2: Build v4l-utils and Kaffeine from their sources\n\nRUN cd ~ && git clone git://linuxtv.org/v4l-utils.git && \\\n    cd ~/v4l-utils && ./bootstrap.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --disable-bpf --disable-qvidcap --disable-qv4l2 --disable-v4l-utils --disable-dyn-libv4l \\\n    && make && make install\n\n# STEP 3: Build Kaffeine from their sources with newest scanfile.dvb\n\nRUN cd ~ && git clone git://anongit.kde.org/kaffeine.git && \\\n    wget https://linuxtv.org/downloads/dtv-scan-tables/kaffeine/scantable.dvb -O ~/kaffeine/src/scanfile.dvb && \\\n    cd ~/kaffeine && cmake . && make VERBOSE=1 && make install\n\n# STEP 4: purge development dependencies\n\nRUN apt-get purge -y qtbase5-dev libqt5x11extras5-dev \\\n    libkf5coreaddons-dev libkf5dbusaddons-dev libkf5i18n-dev libkf5kio-dev debhelper \\\n    libkf5solid-dev libkf5widgetsaddons-dev libkf5windowsystem-dev libkf5xmlgui-dev \\\n    libkf5doctools-dev git libx11-dev libxss-dev libudev-dev libvlc-dev \\\n    dh-autoreconf autotools-dev autoconf-archive libtool pkg-config wget && \\\n    apt-get clean -y && rm -rf ~/kaffeine ~/v4l-utils\n\n# STEP 5: create an user to run it\n\nRUN useradd -m -r -u 1000 -g users -Gaudio,video,irc kaffeine\nUSER kaffeine\n\n# STEP 6: command to run the container\n\n#CMD ls -la /dev/dvb/adapter0\nCMD export $(dbus-launch); /usr/local/bin/kaffeine\n"
}