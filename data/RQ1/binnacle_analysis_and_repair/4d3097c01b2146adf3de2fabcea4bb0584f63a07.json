{
  "startTime": 1674250270345,
  "endTime": 1674250271286,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 86,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 224
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 224
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 224
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04 as base\n\nENV DEBIAN_FRONTEND=noninteractive TERM=xterm\nRUN echo \"export > /etc/envvars\" >> /root/.bashrc && \\\n    echo \"export PS1='\\[\\e[1;31m\\]\\u@\\h:\\w\\\\$\\[\\e[0m\\] '\" | tee -a /root/.bashrc /etc/skel/.bashrc && \\\n    echo \"alias tcurrent='tail /var/log/*/current -f'\" | tee -a /root/.bashrc /etc/skel/.bashrc\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y locales && locale-gen en_US.UTF-8 && dpkg-reconfigure locales && rm -rf /var/lib/apt/lists/*;\nENV LANGUAGE=en_US.UTF-8 LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\n\n# Runit\nRUN apt-get install -y --no-install-recommends runit && rm -rf /var/lib/apt/lists/*;\nCMD export > /etc/envvars && /usr/sbin/runsvdir-start\n\n# Utilities\nRUN apt-get install -y --no-install-recommends vim less net-tools inetutils-ping wget curl git telnet nmap socat dnsutils netcat tree htop unzip sudo software-properties-common jq psmisc iproute python ssh rsync gettext-base && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install -y --no-install-recommends libreadline-dev libncurses5-dev libpcre3-dev zlib1g-dev perl make build-essential && rm -rf /var/lib/apt/lists/*;\n\n#Confd\nRUN wget -O /usr/local/bin/confd  https://github.com/kelseyhightower/confd/releases/download/v0.15.0/confd-0.15.0-linux-amd64 && \\\n    chmod +x /usr/local/bin/confd\n\n#Redis\nRUN wget -O - https://download.redis.io/releases/redis-4.0.8.tar.gz | tar zx && \\\n    cd redis-* && \\\n    make -j$(nproc) && \\\n    make install && \\\n    cp redis.conf /etc/redis.conf && \\\n    rm -rf /redis-*\n\n#libmodsecurity\nRUN apt-get install --no-install-recommends -y m4 libtool automake libxml2-dev libyajl-dev libgeoip-dev libcurl4-gnutls-dev pkgconf && rm -rf /var/lib/apt/lists/*;\nRUN wget -O - https://github.com/SpiderLabs/ModSecurity/releases/download/v3.0.0/modsecurity-v3.0.0.tar.gz | tar zx && \\\n    cd modsecurity* && \\\n    ./build.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j$(nproc) && \\\n    make install && \\\n    rm -rf /modsecurity*\n\n#OpenResty\nRUN wget -O - https://github.com/SpiderLabs/ModSecurity-nginx/releases/download/v1.0.0/modsecurity-nginx-v1.0.0.tar.gz | tar zx && \\\n    wget -O - https://www.openssl.org/source/openssl-1.0.2n.tar.gz | tar zx && \\\n    wget -O - https://openresty.org/download/openresty-1.13.6.1.tar.gz | tar zx && \\\n    cd /openssl* && \\\n    ./config && \\\n    make install && \\\n    mv apps/openssl /usr/bin/ && \\\n    cd /openresty* && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -j$(grep -c '^processor' /proc/cpuinfo) \\\n      --with-http_v2_module \\\n      --with-pcre-jit \\\n      --prefix=/usr/local/openresty \\\n      --sbin-path=/usr/sbin/nginx \\\n      --conf-path=/etc/nginx/nginx.conf \\\n      --error-log-path=/var/log/nginx/error.log \\\n      --http-log-path=/var/log/nginx/access.log \\\n      --pid-path=/var/run/nginx.pid \\\n      --lock-path=/var/run/nginx.lock \\\n      --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n      --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n      --with-file-aio \\\n      --with-threads \\\n      --with-stream \\\n      --with-http_stub_status_module \\\n      --with-openssl=$(ls -d /openssl*) \\\n      --with-http_sub_module \\\n      --with-http_realip_module \\\n      --add-module=/modsecurity-nginx-v1.0.0 \\\n    && \\\n    make -j$(nproc) && \\\n    make install && \\\n    rm -rf /openresty* && \\\n    rm -rf /openssl* && \\\n    rm -rf /modsecurity-nginx*\n\nRUN mkdir -p /etc/nginx && \\\n    mkdir -p /var/log/nginx && \\\n    mkdir -p /var/cache/nginx/client_temp && \\\n    mkdir -p /var/cache/nginx/proxy_temp\n\n#LuaRocks\nRUN wget -O - https://luarocks.org/releases/luarocks-2.4.3.tar.gz | tar zx && \\\n    cd luarocks-* && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n      --prefix=/usr/local/openresty/luajit \\\n      --with-lua=/usr/local/openresty/luajit/ \\\n      --lua-suffix=jit-2.1.0-beta3 \\\n      --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 && \\\n      make -j$(grep -c '^processor' /proc/cpuinfo) && \\\n      make install && \\\n      rm -rf /luarocks-*\nRUN cd /usr/local/openresty/luajit/bin && \\\n    ln -s luajit-* lua\nENV PATH=/usr/local/openresty/luajit/bin:$PATH\n\n#Lua Libraries\nRUN luarocks install lua-resty-session\nRUN luarocks install inspect\nRUN luarocks install lua-resty-http\nRUN luarocks install lua-resty-cookie\n\n#ssl\nRUN openssl dhparam -out /etc/ssl/dhparams.pem 2048\nRUN mkdir -p /etc/nginx/ssl && \\\n    cd /etc/nginx/ssl && \\\n    export PASSPHRASE=$(head -c 500 /dev/urandom | tr -dc a-z0-9A-Z | head -c 128; echo) && \\\n    openssl genrsa -des3 -out server.key -passout env:PASSPHRASE 2048 && \\\n    openssl req -new -batch -key server.key -out server.csr -subj \"/C=/ST=/O=org/localityName=/commonName=org/organizationalUnitName=org/emailAddress=/\" -passin env:PASSPHRASE && \\\n    openssl rsa -in server.key -out server.key -passin env:PASSPHRASE && \\\n    openssl x509 -req -days 3650 -in server.csr -signkey server.key -out server.crt\n\n# Force triggering ERROR_PAGE_404 page\nRUN rm -rf /usr/local/openresty/nginx/html\n\n#Passport\nRUN wget -O - https://nodejs.org/dist/v8.10.0/node-v8.10.0-linux-x64.tar.gz | tar xz\nRUN mv node* node && \\\n    ln -s /node/bin/node /usr/local/bin/node && \\\n    ln -s /node/bin/npm /usr/local/bin/npm\nENV NODE_PATH /usr/local/lib/node_modules\n\nCOPY authenticator /authenticator\nRUN cd /authenticator && \\\n    npm install && \\\n    npm run build && npm cache clean --force;\n\n#Letsencrypt\nRUN luarocks install lua-resty-http && \\\n    luarocks install lua-resty-auto-ssl\nRUN mkdir -p /etc/resty-auto-ssl && \\\n    chown nobody /etc/resty-auto-ssl\n\n#OWASP rules\nRUN wget -O - https://github.com/SpiderLabs/owasp-modsecurity-crs/archive/v3.0.2.tar.gz | tar zx && \\\n    mv owasp* /etc/nginx/owasp\nRUN cp /etc/nginx/owasp/crs-setup.conf.example /etc/nginx/owasp/owasp.conf\nCOPY modsec /etc/nginx/modsec\n\n#logrotate\nRUN apt-get install --no-install-recommends -y logrotate cron && rm -rf /var/lib/apt/lists/*;\nCOPY logrotate.conf /etc/logrotate.d/nginx.conf\nCOPY crontab /\n\n#Config\nCOPY nginx.conf /etc/nginx/\nCOPY etc/confd /etc/confd\nCOPY test.sh /\nCOPY redis.conf /etc/\n\n#SAML\nCOPY saml/saml.conf /etc/nginx/\nCOPY saml/saml.lua /usr/local/openresty/lualib/\nRUN chmod +r /usr/local/openresty/lualib/*\n\n# Add runit services\nCOPY sv /etc/service\nARG BUILD_INFO\nLABEL BUILD_INFO=$BUILD_INFO\n"
}