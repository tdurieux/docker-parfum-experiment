{
  "startTime": 1674249067536,
  "endTime": 1674249067679,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10 as builder\n\nWORKDIR /opt/builder\n\nCOPY package.json /opt/builder/package.json\nCOPY package-lock.json /opt/builder/package-lock.json\nRUN npm i && npm cache clean --force;\n\nCOPY tsconfig.json /opt/builder/tsconfig.json\nCOPY tests /opt/builder/tests\nCOPY src /opt/builder/src\n\nRUN npm run build\nRUN npm prune --production\n\nFROM docker:dind\nRUN apk add --no-cache \\\n    python3 \\\n    python3-dev \\\n    musl-dev \\\n    libffi-dev \\\n    openssl-dev \\\n    libc-dev \\\n    gcc \\\n    iptables \\\n    dumb-init \\\n    musl \\\n    libc6-compat \\\n    linux-headers \\\n    build-base \\\n    bash \\\n    git \\\n    ca-certificates \\\n    libssl1.0 \\\n    readline-dev \\\n    zlib-dev \\\n    bzip2-dev \\\n    sqlite-dev \\\n    openssl-dev \\\n    openssl \\\n    nodejs \\\n    nodejs-npm \\\n    && \\\n    python3 -m ensurepip && \\\n    rm -r /usr/lib/python*/ensurepip && \\\n    pip3 install --no-cache-dir --upgrade pip setuptools && \\\n    if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \\\n    if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \\\n    rm -r /root/.cache\nRUN pip3 install --no-cache-dir mitmproxy\n\nWORKDIR /opt/consumer\n\nRUN mkdir logs\nRUN mkdir mitmdump_logs\nRUN mkdir ~/.mitmproxy\nRUN echo 'dump_destination: \"/opt/consumer/mitmdump_logs/mitmdump.txt\"' > ~/.mitmproxy/config.yaml\n\nCOPY docker /opt/consumer/docker\nCOPY --from=builder /opt/builder/package.json /opt/consumer/package.json\nCOPY --from=builder /opt/builder/node_modules /opt/consumer/node_modules\nCOPY --from=builder /opt/builder/tests/test_package /opt/consumer/test_package\nCOPY --from=builder /opt/builder/dist/src /opt/consumer/src\n\nCMD [\"./docker/consumer/init.sh\"]\n"
}