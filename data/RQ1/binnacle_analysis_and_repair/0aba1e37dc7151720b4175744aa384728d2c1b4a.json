{
  "startTime": 1674243420411,
  "endTime": 1674243420523,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM metabrainz/python:3.6-1\n\n# PostgreSQL client\nENV PG_MAJOR 9.5\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\nRUN echo 'deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y postgresql-client-$PG_MAJOR \\\n    && rm -rf /var/lib/apt/lists/*\n# Specifying password so that client doesn't ask scripts for it...\nENV PGPASSWORD \"metabrainz\"\n\nRUN mkdir /code\nWORKDIR /code\n\n# Node\nRUN curl -f -sL https://deb.nodesource.com/setup_7.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Python dependencies\nRUN apt-get update \\\n     && apt-get install -y --no-install-recommends \\\n                        build-essential \\\n                        git \\\n                        libpq-dev \\\n                        libtiff5-dev \\\n                        libffi-dev \\\n                        libxml2-dev \\\n                        libxslt1-dev \\\n                        libssl-dev \\\n     && rm -rf /var/lib/apt/lists/*\nCOPY requirements.txt /code/\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY . /code/\n"
}