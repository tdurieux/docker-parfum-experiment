{
  "startTime": 1674243546430,
  "endTime": 1674243546557,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 6,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 6,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 6,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 6,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "ARG UBUNTU_VERSION=18.04\nFROM ubuntu:${UBUNTU_VERSION}\n\n# Use bash as the default shell\nRUN ln -snf /bin/bash /bin/sh\n\n# Update core packages\nRUN apt-get -y update\nRUN apt-get -y upgrade\nRUN apt-get -y dist-upgrade\n\n# Get some apt packages\nRUN apt-get -y --no-install-recommends install autoconf clang cmake g++ gcc gfortran git libblas-dev \\\n                       libhdf5-dev liblapack-dev libpython2.7-dev libtool \\\n                       python-numpy python-pip python-setuptools wget && rm -rf /var/lib/apt/lists/*;\n\n# Get astyle\nRUN if [ \"${UBUNTU_VERSION}\" == \"18.04\" ]; then \\\n      apt-get -y --no-install-recommends install astyle; rm -rf /var/lib/apt/lists/*; \\\n    else \\\n      astyle_deb=astyle_3.1-1ubuntu2_amd64.deb && \\\n      wget https://launchpad.net/ubuntu/+source/astyle/3.1-1ubuntu2/+build/14532685/+files/${astyle_deb} && \\\n      dpkg -i ${astyle_deb} && \\\n      rm -f ${astyle_deb}; \\\n    fi\n\n# Get some pip packages\nRUN pip install --no-cache-dir cython sphinx\n\n# Copy scripts to docker image\nRUN mkdir -p /root/etc/\nCOPY build_hdf5.sh build_geant4.sh build_moab.sh env.sh /root/etc/\nENV docker_env=/root/etc/env.sh\n\n# Build HDF5\nRUN COMPILER=gcc   HDF5_VERSION=1.10.4 /root/etc/build_hdf5.sh\nRUN COMPILER=clang HDF5_VERSION=1.10.4 /root/etc/build_hdf5.sh\n\n# Build Geant4\nRUN COMPILER=gcc   /root/etc/build_geant4.sh\nRUN COMPILER=clang /root/etc/build_geant4.sh\n\n# Build MOAB 5.1.0\nRUN COMPILER=gcc   HDF5_VERSION=system MOAB_VERSION=5.1.0 /root/etc/build_moab.sh\nRUN COMPILER=clang HDF5_VERSION=system MOAB_VERSION=5.1.0 /root/etc/build_moab.sh\nRUN COMPILER=gcc   HDF5_VERSION=1.10.4 MOAB_VERSION=5.1.0 /root/etc/build_moab.sh\nRUN COMPILER=clang HDF5_VERSION=1.10.4 MOAB_VERSION=5.1.0 /root/etc/build_moab.sh\n"
}