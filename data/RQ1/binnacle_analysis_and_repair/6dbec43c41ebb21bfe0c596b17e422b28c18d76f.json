{
  "startTime": 1674245437820,
  "endTime": 1674245437947,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 84,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Kurento Media Server - Nightly version\n#\n# This Docker image is used to run a Nightly version of Kurento Media Server.\n# JSON-RPC API interface is exposed on port 8888.\n#\n#\n# Build command\n# -------------\n#\n# docker build [Args...] --tag kurento/kurento-media-server-dev .\n#\n#\n# Build arguments\n# ---------------\n#\n# --build-arg UBUNTU_VERSION=<UbuntuVersion>\n#\n#   <UbuntuVersion> is like \"xenial\", \"bionic\", etc.\n#   Valid values are listed here: https://hub.docker.com/_/buildpack-deps/\n#\n#   Optional. Default: \"xenial\".\n#\n# --build-arg KMS_VERSION=<KmsVersion>\n#\n#   <KmsVersion> is like \"6.7.2\", \"6.9.0\", etc.\n#   Alternatively, \"dev\" is used to build a nightly version of KMS.\n#\n#   Required. Default: \"0.0.0\" (invalid version).\n#\n#\n# Run command\n# -----------\n#\n# docker run -d --name kms -p 8888:8888 kurento/kurento-media-server-dev\n\n\n\nARG UBUNTU_VERSION=xenial\n\nFROM ubuntu:${UBUNTU_VERSION}\n\nMAINTAINER Patxi Gort√°zar <patxi.gortazar@gmail.com>\nMAINTAINER Fede Diaz <nordri@gmail.com>\nMAINTAINER Juan Navarro <juan.navarro@gmx.es>\n\nARG UBUNTU_VERSION=xenial\nARG KMS_VERSION=0.0.0\n\n# Configure environment\n# * LANG: Set the default locale for all commands\n# * DEBIAN_FRONTEND: Disable user-facing questions and messages\nENV LANG=C.UTF-8 \\\n    DEBIAN_FRONTEND=noninteractive\n\n# Install GnuPG, needed for `apt-key adv` (since Ubuntu 18.04)\nRUN apt-get update \\\n && apt-get install --no-install-recommends --yes \\\n        gnupg \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Configure apt-get\n# * Disable installation of recommended and suggested packages\n# * Add Kurento package repository\nRUN echo 'APT::Install-Recommends \"false\";' >/etc/apt/apt.conf.d/00recommends \\\n && echo 'APT::Install-Suggests \"false\";' >>/etc/apt/apt.conf.d/00recommends \\\n && echo \"UBUNTU_VERSION=${UBUNTU_VERSION}\" \\\n && echo \"KMS_VERSION=${KMS_VERSION}\" \\\n && echo \"Apt source line: deb [arch=amd64] http://ubuntu.openvidu.io/${KMS_VERSION} ${UBUNTU_VERSION} kms6\" \\\n && echo \"deb [arch=amd64] http://ubuntu.openvidu.io/${KMS_VERSION} ${UBUNTU_VERSION} kms6\" >/etc/apt/sources.list.d/kurento.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 5AFA7A83\n\n# Install everything needed\n# * [FIXME] OpenH264 dependency: bzip2 wget\n#   Remove this when the openh264 package is released with a fix\n# * Kurento Media Server\nRUN apt-get update \\\n && apt-get install --no-install-recommends --yes \\\n        bzip2 wget \\\n        kurento-media-server \\\n ; apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Install additional modules\n# These might not be available in Ubuntu 18.04 (Bionic)\nRUN apt-get update \\\n && apt-get install --no-install-recommends --yes \\\n        kms-chroma \\\n        kms-crowddetector \\\n        kms-platedetector \\\n        kms-pointerdetector \\\n || true \\\n ; apt-get clean && rm -rf /var/lib/apt/lists/*\n\nEXPOSE 8888\n\n# Configure environment for KMS\n# * Use default suggested logging levels:\n#   https://doc-kurento.readthedocs.io/en/latest/features/logging.html#suggested-levels\n# * Disable colors in debug logs\nENV GST_DEBUG=\"3,Kurento*:4,kms*:4,sdp*:4,webrtc*:4,*rtpendpoint:4,rtp*handler:4,rtpsynchronizer:4,agnosticbin:4\" \\\n    GST_DEBUG_NO_COLOR=1\n\nCOPY ./entrypoint.sh /entrypoint.sh\nCOPY ./healthchecker.sh /healthchecker.sh\n\nHEALTHCHECK --start-period=15s --interval=30s --timeout=3s --retries=1 CMD /healthchecker.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}