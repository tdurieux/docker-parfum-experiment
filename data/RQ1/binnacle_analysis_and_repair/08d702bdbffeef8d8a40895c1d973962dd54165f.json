{
  "startTime": 1674641682545,
  "endTime": 1674641682612,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM microsoft/windowsservercore:1709 AS base\nSHELL [\"powershell\", \"-Command\", \"$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';\"]\nARG PYTHON2_VERSION\nARG PYTHON3_VERSION\nENV NODEJS_VERSION 8.11.1\nENV DOTNETCORESDK_VERSION 2.1.402\nENV DOCKER_VERSION 17.09.0\nENV GIT_VERSION 2.18.0\nENV DESTINATION_FOLDER C:\\\\tools\nWORKDIR /tmp\nRUN $python_url = ('https://www.python.org/ftp/python/{0}/python-{0}.amd64.msi' -f $env:PYTHON2_VERSION); \\\n    Write-Host ('Downloading {0}...' -f $python_url); \\\n    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \\\n    (New-Object System.Net.WebClient).DownloadFile($python_url, '/tmp/python2-installer.msi'); \\\n    $install_folder = Join-Path -Path $env:DESTINATION_FOLDER -ChildPath 'python2'; \\\n    Write-Host ('Installing into {0}...' -f $install_folder); \\\n    Start-Process python2-installer.msi -Wait -ArgumentList @('/quiet', 'InstallAllUsers=1', 'TargetDir={0}' -f $install_folder, 'PrependPath=1', 'Shortcuts=0', 'Include_doc=0','Include_pip=1', 'Include_test=0');   \nRUN $python_url = ('https://www.python.org/ftp/python/{0}/python-{0}-amd64.exe' -f $env:PYTHON3_VERSION); \\\n    Write-Host ('Downloading {0}...' -f $python_url); \\\n    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \\\n    (New-Object System.Net.WebClient).DownloadFile($python_url, '/tmp/python3-installer.exe'); \\\n    $install_folder = Join-Path -Path $env:DESTINATION_FOLDER -ChildPath 'python3'; \\\n    Write-Host ('Installing into {0}...' -f $install_folder); \\\n    Start-Process python3-installer.exe -Wait -ArgumentList @('/quiet', 'InstallAllUsers=1', 'TargetDir={0}' -f $install_folder, 'PrependPath=1', 'Shortcuts=0', 'Include_doc=0','Include_pip=1', 'Include_test=0');    \nRUN $node_url = ('https://nodejs.org/dist/v{0}/node-v{0}-x64.msi' -f $env:NODEJS_VERSION); \\\n    Write-Host ('Downloading {0}...' -f $node_url); \\\n    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \\\n    (New-Object System.Net.WebClient).DownloadFile($node_url, '/tmp/nodejs-installer.msi'); \\\n    $install_folder = Join-Path -Path $env:DESTINATION_FOLDER -ChildPath 'node'; \\\n    Write-Host ('Installing into {0}...' -f $install_folder); \\\n    Start-Process nodejs-installer.msi -Wait -ArgumentList @('/quiet', '/q', 'InstallDir={0}' -f $install_folder);\nRUN $dotnetcoresdk_url = ('https://dotnetcli.blob.core.windows.net/dotnet/Sdk/{0}/dotnet-sdk-{0}-win-x64.zip' -f $env:DOTNETCORESDK_VERSION); \\\n    Write-Host ('Downloading {0}...' -f $dotnetcoresdk_url); \\\n    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \\\n    (New-Object System.Net.WebClient).DownloadFile($dotnetcoresdk_url, '/tmp/dotnetcoresdk.zip'); \\\n    $unpack_folder = Join-Path -Path $env:DESTINATION_FOLDER -ChildPath 'dotnetcoresdk'; \\\n    Write-Host ('Unpacking into {0}...' -f $unpack_folder); \\\n    Expand-Archive dotnetcoresdk.zip -DestinationPath $unpack_folder;\nRUN $docker_url = ('https://download.docker.com/win/static/stable/x86_64/docker-{0}-ce.zip'  -f $env:DOCKER_VERSION);\\\n    (New-Object System.Net.WebClient).DownloadFile($docker_url, '/tmp/docker.zip'); \\\n    $install_folder = Join-Path -Path $env:DESTINATION_FOLDER -ChildPath ''; \\\n    Expand-Archive -Path .\\docker.zip -DestinationPath $install_folder; \\\n    Remove-Item ('{0}\\docker\\dockerd.exe' -f $env:DESTINATION_FOLDER)\nRUN $git_url = ('https://github.com/git-for-windows/git/releases/download/v{0}.windows.1/MinGit-{0}-64-bit.zip' -f $env:GIT_VERSION); \\\n    Write-Host ('Downloading {0}...' -f $git_url); \\\n    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \\\n    (New-Object System.Net.WebClient).DownloadFile($git_url, '/tmp/git.zip'); \\\n    $unpack_folder = Join-Path -Path $env:DESTINATION_FOLDER -ChildPath 'git'; \\\n    Write-Host ('Unpacking into {0}...' -f $unpack_folder); \\\n    Expand-Archive .\\git.zip -DestinationPath $unpack_folder;\n\nFROM microsoft/nanoserver:1709\nRUN mkdir c:\\\\tools\nCOPY --from=base [\"tools/\", \"/tools\"]\nUSER ContainerAdministrator\nRUN setx /M PATH \"%PATH%;C:\\tools\\dotnetcoresdk;C:\\tools\\node\\;C:\\tools\\python3;C:\\tools\\python3\\Scripts;c:\\tools\\docker\\;\"\nUSER ContainerUser\nRUN python -m pip install --upgrade pip\nRUN pip install --no-cache-dir azure-cli cookiecutter docker-compose\nRUN npm i -g iothub-explorer yo generator-azure-iot-edge-module && npm cache clean --force;\nRUN az extension add --name azure-cli-iot-ext\nWORKDIR /home/iotedge\nCOPY install-dev.bat /scripts/install-dev.bat"
}