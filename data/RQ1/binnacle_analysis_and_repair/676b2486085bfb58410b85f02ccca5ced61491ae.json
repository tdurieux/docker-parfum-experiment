{
  "startTime": 1674234680270,
  "endTime": 1674234680508,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 2,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# 3DCityDB PostGIS Dockerfile #################################################\n#   Official website    https://www.3dcitydb.net\n#   GitHub              https://github.com/3dcitydb\n###############################################################################\n# Base image\nARG baseimage_tag='11-alpine'\nFROM postgres:${baseimage_tag}\n\n# Labels ######################################################################\nLABEL maintainer=\"Bruno Willenborg\"\nLABEL maintainer.email=\"b.willenborg(at)tum.de\"\nLABEL maintainer.organization=\"Chair of Geoinformatics, Technical University of Munich (TUM)\"\nLABEL source.repo=\"https://github.com/tum-gis/3dcitydb-docker-postgis\"\n\n# Setup PostGIS and 3DCityDB ##################################################\nARG postgis_version='2.5.2'\nENV POSTGIS_VERSION=${postgis_version}\nARG citydb_version='v3.0.0'\nENV CITYDBVERSION=${citydb_version}\n\n# Setup fetch deps\nRUN set -ex && \\\n apk update && \\\n apk add --no-cache --virtual .fetch-deps tar openssl git\n\n# Create folders\nRUN set -ex && \\\n  mkdir -p 3dcitydb && \\\n  mkdir -p /docker-entrypoint-initdb.d\n\n# Fetch 3DCityDB\nRUN set -ex && \\\n  git clone -b \"${POSTGIS_VERSION}\" --depth 1 https://github.com/postgis/postgis.git postgis_temp && \\\n  git clone -b \"${CITYDBVERSION}\" --depth 1 https://github.com/3dcitydb/3dcitydb.git 3dcitydb_temp && \\\n  mv 3dcitydb_temp/PostgreSQL/SQLScripts/* 3dcitydb\n\n# Setup build deps\nRUN set -ex && \\  \n  apk add --no-cache --virtual .build-deps \\\n    autoconf automake g++ json-c-dev libtool libxml2-dev make perl\n\nRUN set -ex && \\\n  apk add --no-cache --virtual .build-deps-edge \\\n    --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing \\\n    geos-dev gdal-dev proj-dev protobuf-c-dev\n\n# Build PostGIS\nRUN set -ex && \\\n  cd postgis_temp && \\\n  ./autogen.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n  cd ..\n\n# Setup runtime deps\nRUN set -ex && \\\n  apk add --no-cache --virtual .postgis-rundeps json-c geos gdal proj protobuf-c\n\n# Cleanup\nRUN set -ex && \\\n  apk del .fetch-deps .build-deps .build-deps-edge && \\\n  rm -rf  postgis_temp 3dcitydb_temp\n\n# Copy scripts\nCOPY CREATE_DB.sql /3dcitydb/\nCOPY 3dcitydb.sh /docker-entrypoint-initdb.d/\nCOPY addcitydb dropcitydb purgedb /usr/local/bin/\n\n# Set permissions\nRUN set -ex && \\ \n  ln -s usr/local/bin/addcitydb / && \\\n  ln -s usr/local/bin/dropcitydb / && \\\n  ln -s usr/local/bin/purgedb / && \\\n  chmod u+x /usr/local/bin/dropcitydb && \\\n  chmod u+x /usr/local/bin/addcitydb && \\\n  chmod u+x /usr/local/bin/purgedb \n"
}