{
  "startTime": 1674242366483,
  "endTime": 1674242366769,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 21,
        "columnEnd": 30
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 21,
        "columnEnd": 30
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 1,
        "columnEnd": 97
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 1,
        "columnEnd": 61
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 2,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM xiaonanln/golang-jessie\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mongodb && useradd -r -g mongodb mongodb\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tca-certificates \\\n\t\tjq \\\n\t\tnumactl \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# grab gosu for easy step-down from root (https://github.com/tianon/gosu/releases)\nENV GOSU_VERSION 1.10\n# grab \"js-yaml\" for parsing mongod's YAML config files (https://github.com/nodeca/js-yaml/releases)\nENV JSYAML_VERSION 3.10.0\n\nRUN set -ex; \\\n\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\twget \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\n\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n\twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\n\twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; rm -rf -d \\\n\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n\tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n\trm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n\tchmod +x /usr/local/bin/gosu; \\\n\tgosu nobody true; \\\n\n\twget -O /js-yaml.js \"https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js\"; \\\n# TODO some sort of download verification here\n\n\tapt-get purge -y --auto-remove wget\n\nRUN mkdir /docker-entrypoint-initdb.d\n\nENV GPG_KEYS \\\n# pub   4096R/A15703C6 2016-01-11 [expires: 2018-01-10]\n#       Key fingerprint = 0C49 F373 0359 A145 1858  5931 BC71 1F9B A157 03C6\n# uid                  MongoDB 3.4 Release Signing Key <packaging@mongodb.com>\n\t0C49F3730359A14518585931BC711F9BA15703C6\n# https://docs.mongodb.com/manual/tutorial/verify-mongodb-packages/#download-then-import-the-key-file\nRUN set -ex; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; rm -rf -d \\\n\tfor key in $GPG_KEYS; do \\\n\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n\tdone; \\\n\tgpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg; \\\n\trm -r \"$GNUPGHOME\"; \\\n\tapt-key list\n\n# Allow build-time overrides (eg. to build image with MongoDB Enterprise version)\n# Options for MONGO_PACKAGE: mongodb-org OR mongodb-enterprise\n# Options for MONGO_REPO: repo.mongodb.org OR repo.mongodb.com\n# Example: docker build --build-arg MONGO_PACKAGE=mongodb-enterprise --build-arg MONGO_REPO=repo.mongodb.com .\nARG MONGO_PACKAGE=mongodb-org\nARG MONGO_REPO=repo.mongodb.org\nENV MONGO_PACKAGE=${MONGO_PACKAGE} MONGO_REPO=${MONGO_REPO}\n\nENV MONGO_MAJOR 3.4\nENV MONGO_VERSION 3.4.15\n\nRUN echo \"deb http://$MONGO_REPO/apt/debian jessie/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR main\" | tee \"/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list\"\n\nRUN set -x \\\n\t&& apt-get update \\\n\t&& apt-get install --no-install-recommends -y \\\n\t\t${MONGO_PACKAGE}=$MONGO_VERSION \\\n\t\t${MONGO_PACKAGE}-server=$MONGO_VERSION \\\n\t\t${MONGO_PACKAGE}-shell=$MONGO_VERSION \\\n\t\t${MONGO_PACKAGE}-mongos=$MONGO_VERSION \\\n\t\t${MONGO_PACKAGE}-tools=$MONGO_VERSION \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& rm -rf /var/lib/mongodb \\\n\t&& mv /etc/mongod.conf /etc/mongod.conf.orig\n\nRUN mkdir -p /data/db /data/configdb \\\n\t&& chown -R mongodb:mongodb /data/db /data/configdb\nVOLUME /data/db /data/configdb\n\n#COPY mongod-docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\n#RUN chmod a+x /usr/local/bin/docker-entrypoint.sh\n#RUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat\n\n## Install Useful Tools For Development\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tvim \\\n\t\tless \\\n\t\tgit \\\n\t\t&& rm -rf /var/lib/apt/lists/*\n\nENV HOME=/root\nENV GOPATH=$HOME/go PATH=$HOME/go/bin:$PATH\nRUN echo \"GOPATH: $GOPATH\"\nRUN echo \"PATH: $PATH\"\nWORKDIR $HOME\n\nRUN go get -u github.com/golang/dep/cmd/dep\nRUN go get -d github.com/xiaonanln/goworld\nWORKDIR $GOPATH/src/github.com/xiaonanln/goworld\nRUN dep ensure\nRUN go get ./cmd/...\nRUN make all\n\n# RUN MongoDB Server\nADD start_mongod.sh .\nCMD ./start_mongod.sh && bash\n"
}