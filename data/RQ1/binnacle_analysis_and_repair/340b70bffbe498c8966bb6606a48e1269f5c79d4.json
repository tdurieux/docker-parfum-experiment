{
  "startTime": 1674233982821,
  "endTime": 1674233983297,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 128
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 7,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 66,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 89,
        "lineEnd": 113,
        "columnStart": 22,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM floydhub/python-base:v1-gpu-py3\nMAINTAINER Floyd Labs \"support@floydhub.com\"\n\nENV BAZEL_VERSION 0.16.1\n\n# Add Bazel distribution URI as a package source\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | sudo tee /etc/apt/sources.list.d/bazel.list \\\n    && curl -f https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -\n\n# install older version of bazel because it breaks TF build on every releasae :(\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        default-jdk-headless \\\n        bash-completion \\\n        g++ \\\n        zlib1g-dev \\\n    && curl -f -LO \"https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel_${BAZEL_VERSION}-linux-x86_64.deb\" \\\n    && dpkg -i bazel_*.deb \\\n    && rm bazel_*.deb \\\n    && apt-get clean \\\n    && apt-get autoremove \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /var/cache/apt/archives/*\n\n\n# Install some dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        tcl \\\n        tk \\\n        ant \\\n        apt-utils \\\n        bc \\\n        build-essential \\\n        cmake \\\n        default-jdk \\\n        doxygen \\\n        gfortran \\\n        golang \\\n        iptables \\\n        libav-tools \\\n        libboost-all-dev \\\n        libeigen3-dev \\\n        libfreetype6-dev \\\n        libhdf5-dev \\\n        libjpeg-turbo8-dev \\\n        liblcms2-dev \\\n        libopenblas-dev \\\n        liblapack-dev \\\n        libpng12-dev \\\n        libprotobuf-dev \\\n        libsdl2-dev \\\n        libtiff-dev \\\n        libtiff5-dev \\\n        libvncserver-dev \\\n        libzmq3-dev \\\n        nano \\\n        net-tools \\\n        openmpi-bin \\\n        pkg-config \\\n        protobuf-compiler \\\n        rsync \\\n        software-properties-common \\\n        swig \\\n        unzip \\\n        vim \\\n        webp \\\n        xorg-dev \\\n        xvfb \\\n    && apt-get clean \\\n    && apt-get autoremove \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /var/cache/apt/archives/* \\\n# Link BLAS library to use OpenBLAS using the alternatives mechanism (https://www.scipy.org/scipylib/building/linux.html#debian-ubuntu)\n    && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n\n# Install Git LFS\nRUN apt-get update \\\n    && add-apt-repository ppa:git-core/ppa \\\n    && curl -f -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash && \\\n    apt-get install --no-install-recommends -y git-lfs \\\n    && git lfs install \\\n    && apt-get clean \\\n    && apt-get autoremove \\\n    && rm -rf /var/cache/apt/archives/* \\\n    && rm -rf /var/lib/apt/lists/*\n\n\n# Install opencv\nARG OPENCV_VERSION=\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        libavcodec-dev \\\n        libavformat-dev \\\n        libav-tools \\\n        libavresample-dev \\\n        libdc1394-22-dev \\\n        libgdal-dev \\\n        libgphoto2-dev \\\n        libgtk2.0-dev \\\n        libjasper-dev \\\n        liblapacke-dev \\\n        libopencore-amrnb-dev \\\n        libopencore-amrwb-dev \\\n        libopenexr-dev \\\n        libswscale-dev \\\n        libtbb2 \\\n        libtbb-dev \\\n        libtheora-dev \\\n        libv4l-dev \\\n        libvorbis-dev \\\n        libvtk6-dev \\\n        libx264-dev \\\n        libxine2-dev \\\n        libxvidcore-dev \\\n        qt5-default \\\n    && apt-get clean \\\n    && apt-get autoremove \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /var/cache/apt/archives/*\n\nRUN cd ~/ && \\\n    git clone https://github.com/Itseez/opencv.git --branch ${OPENCV_VERSION} --single-branch && \\\n    git clone https://github.com/Itseez/opencv_contrib.git --branch ${OPENCV_VERSION} --single-branch && \\\n    cd opencv && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n        -DWITH_QT=ON \\\n        -DWITH_OPENGL=ON \\\n        -D WITH_CUDA=ON \\\n        -D CUDA_CUDA_LIBRARY=/usr/local/cuda/lib64/stubs/libcuda.so \\\n        -D ENABLE_FAST_MATH=1 \\\n        -D CUDA_FAST_MATH=1 \\\n        -D WITH_CUBLAS=1 \\\n        -DFORCE_VTK=ON \\\n        -DWITH_TBB=ON \\\n        -DWITH_GDAL=ON \\\n        -DWITH_XINE=ON \\\n        -DBUILD_EXAMPLES=ON \\\n        -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \\\n        .. && \\\n    make -j\"$(nproc)\" && \\\n    make install && \\\n    ldconfig && \\\n # Remove the opencv folders to reduce image size\n    rm -rf ~/opencv*"
}