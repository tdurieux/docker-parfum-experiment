{
  "startTime": 1674241535908,
  "endTime": 1674241536185,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 6,
        "columnEnd": 52
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 39,
        "columnEnd": 86
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 6,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 6,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 6,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 6,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\n# whoami\nMAINTAINER Pete Saia, pete@lev-interactive.com\n\n# Install the latest node with some build-esstentials.\nRUN apt-get update && \\\n      apt-get install --no-install-recommends -y curl build-essential && \\\n      curl -f -sL https://deb.nodesource.com/setup_0.12 | bash - && \\\n      apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Install globals we need for npm to build and run the project.\nRUN npm config set python python2.7 && npm install -g forever bower grunt-cli node-gyp && npm cache clean --force;\n\n# Var for express/node. You'd want to overwrite this when running\n# in staging or production. Overwrite on the run command.\nENV NODE_ENV development\n\n# Port to run the app on.\nENV APP_PORT 8080\n\n# Port to run the app on.\nENV LOGS_ROOT /src/logs\n\n# Where the app libs on the host (container).\nENV APP_ROOT /src/app\n\n# Copy the local app to the host.\nCOPY src/ $APP_ROOT\n\n# Go to the app root.\nWORKDIR $APP_ROOT\n\n# Prep the app. This would be a good place to build assets and whatnot.\nRUN npm install && mkdir -p $LOGS_ROOT /var/backups && npm cache clean --force;\n\n# Expose the port that the app runs on so it can be bound.\nEXPOSE $APP_PORT\n\n# Start the app. Notice forever didn't start it with `start`\n# so it wouldn't go into the background. Important that it stays\n# in the foreground.\nCMD forever -w --watchDirectory . --watchIgnore *.log \\\n    -l ${LOGS_ROOT}/app.forever.log \\\n    -o ${LOGS_ROOT}/app.stdout.log \\\n    -e ${LOGS_ROOT}/app.stderr.log \\\n    index.js\n"
}