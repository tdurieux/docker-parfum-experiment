{
  "startTime": 1674241048123,
  "endTime": 1674241048433,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 5,
        "columnEnd": 38
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 5,
        "columnEnd": 64
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 32,
        "columnEnd": 41
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 2,
        "columnEnd": 81
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 2,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use an official Python runtime as a parent image\nFROM python:3.7-slim-stretch\n\n# add our user and group first to make sure their IDs get assigned consistently\nRUN groupadd -r zeus && useradd -r -m -g zeus zeus\n\nENV PATH /usr/src/zeus/bin:/root/.poetry/bin:$PATH\n\nENV NODE_ENV production\n\nENV PYTHONUNBUFFERED 1\n\n# Sane defaults for pip\nENV PIP_NO_CACHE_DIR off\nENV PIP_DISABLE_PIP_VERSION_CHECK on\n\nRUN mkdir -p /usr/src/zeus && rm -rf /usr/src/zeus\nWORKDIR /usr/src/zeus\n\nRUN set -ex \\\n  && apt-get update && apt-get install -y --no-install-recommends \\\n  build-essential \\\n  ca-certificates \\\n  curl \\\n  gcc \\\n  git \\\n  gosu \\\n  libffi-dev \\\n  libpq-dev \\\n  libxml2-dev \\\n  libxslt-dev \\\n  openssl \\\n  ssh \\\n  wget \\\n  && rm -rf /var/lib/apt/lists/*\n\n# install node and yarn\n# gpg keys listed at https://github.com/nodejs/node\nARG YARN_VERSION=1.13.0\nENV YARN_VERSION $YARN_VERSION\nARG NODE_VERSION=8.11.3\nENV NODE_VERSION $NODE_VERSION\nRUN set -x \\\n  && export GNUPGHOME=\"$(mktemp -d)\" \\\n  && export NPM_CONFIG_CACHE=\"$(mktemp -d)\" \\\n  && apt-get update && apt-get install -y --no-install-recommends dirmngr gnupg && rm -rf /var/lib/apt/lists/* \\\n  && for key in \\\n  94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n  B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n  77984A986EBC2AA786BC0F66B01FBB92821C587A \\\n  71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n  FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n  8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \\\n  C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n  DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n  9554F04D7259F04124DE6B476D5A82AC7E37093B \\\n  93C7E9E91B49E432C2F75674B0A78B0A6C481CF6 \\\n  56730D5401028683275BD23C23EFEFE93C4CFFFE \\\n  114F43EE0176B71C7BC219DD50A3051F888C628D \\\n  7937DFD2AB06298B2293C3187D33FF9D0246406D; \\\n  do \\\n  gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n  gpg --batch --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n  gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"; \\\n  done \\\n  && wget --no-verbose \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" \\\n  && wget --no-verbose \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n  && gpg --batch --verify SHASUMS256.txt.asc \\\n  && grep \" node-v$NODE_VERSION-linux-x64.tar.gz\\$\" SHASUMS256.txt.asc | sha256sum -c - \\\n  && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 \\\n  && rm -rf \"$GNUPGHOME\" \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc \\\n  && apt-get purge -y --auto-remove dirmngr gnupg \\\n  && npm install -g yarn@$YARN_VERSION \\\n  && rm -r \"$NPM_CONFIG_CACHE\" && npm cache clean --force;\n\nRUN curl -f -sSL https://raw.githubusercontent.com/sdispater/poetry/0.12.14/get-poetry.py | python \\\n  && poetry config settings.virtualenvs.create false\n\nCOPY pyproject.toml /usr/src/zeus/\nCOPY poetry.lock /usr/src/zeus/\nRUN poetry install --no-dev\n\nCOPY yarn.lock /usr/src/zeus/\nCOPY package.json /usr/src/zeus/\nRUN export YARN_CACHE_FOLDER=\"$(mktemp -d)\" \\\n  && yarn install --production --pure-lockfile --ignore-optional \\\n  && rm -r \"$YARN_CACHE_FOLDER\" && yarn cache clean; && rm -rf -d\n\nCOPY . /usr/src/zeus\n# # we run poetry install again to ensure the 'zeus' module gets installed\nRUN poetry install --no-dev\nRUN node_modules/.bin/webpack -p\n\nENV WORKSPACE_ROOT /workspace\nENV REPO_ROOT /workspace/repos\nRUN mkdir -p $WORKSPACE_ROOT $REPO_ROOT\n\nARG BUILD_REVISION\nENV BUILD_REVISION $BUILD_REVISION\n\n# Make port 8080 available to the world outside this container\nEXPOSE 8080\nEXPOSE 8090\n\nVOLUME /workspace\n\nENTRYPOINT [\"docker-entrypoint\"]\n\n# Run Zeus\nCMD [\"zeus\", \"run\", \"--host=0.0.0.0\", \"--port=8080\"]\n"
}