{
  "startTime": 1674246093704,
  "endTime": 1674246094133,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 5,
        "columnEnd": 212
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 5,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 5,
        "columnEnd": 212
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 5,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 5,
        "columnEnd": 212
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 5,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get -qq update \\\n  && apt-get -qq upgrade \\\n  && apt-get -qq -y --no-install-recommends install sudo ca-certificates gnupg supervisor net-tools locales setpriv openjdk-8-jre-headless rlwrap ca-certificates-java crudini adduser expect nginx-light curl rsyslog authbind wget devscripts \\\n  && echo \"LC_ALL=en_US.UTF-8\" >>/etc/environment \\\n  && locale-gen en_US.UTF-8 \\\n  && adduser --quiet --system --uid 998 --home /var/lib/postgresql --no-create-home --shell /bin/bash --group postgres \\\n  && adduser --quiet --system --uid 999 --home /var/lib/xroad --no-create-home --shell /bin/bash --group xroad \\\n  && useradd -m xrd -s /usr/sbin/nologin -p '$6$JeOzaeWnLAQSUVuO$GOJ0wUKSVQnOR4I2JgZxdKr.kMO.YGS21SGaAshaYhayv8kSV9WuIFCZHTGAX8WRRTB/2ojuLnJg4kMoyzpcu1' \\\n  && echo \"xroad-center xroad-common/username string xrd\" | debconf-set-selections \\\n  && apt-get -qq -y --no-install-recommends install postgresql postgresql-contrib \\\n  && apt-get -qq clean && rm -rf /var/lib/apt/lists/*;\n\nARG DIST=bionic-current\nARG REPO=https://artifactory.niis.org/xroad-release-deb\nARG REPO_KEY=https://artifactory.niis.org/api/gpg/key/public\nARG COMPONENT=main\n\nADD [\"$REPO_KEY\",\"/tmp/repokey.gpg\"]\nADD [\"${REPO}/dists/${DIST}/Release\",\"/tmp/Release\"]\nRUN echo \"deb $REPO $DIST $COMPONENT\" >/etc/apt/sources.list.d/xroad.list \\\n  && apt-key add '/tmp/repokey.gpg'\n\nRUN pg_ctlcluster 10 main start \\\n  && apt-get -qq update \\\n  && apt-get -qq -y --no-install-recommends install xroad-centralserver xroad-autologin \\\n  && apt-get -qq clean \\\n  && pg_ctlcluster 10 main stop \\\n  && nginx -s stop \\\n  && rm -f /var/run/nginx.pid \\\n  && rm -rf /tmp/xroad \\\n  && sed -i 's/proxy_set_header Host $host:$server_port;/proxy_set_header Host $http_host;/' /etc/xroad/nginx/default-xroad.conf && rm -rf /var/lib/apt/lists/*;\n\n# back up read-only config (for volume support)\nRUN mkdir -p /root/etc/xroad \\\n  && cp -a /etc/xroad/* /root/etc/xroad/ \\\n  && rm /root/etc/xroad/services/local.conf \\\n     /root/etc/xroad/conf.d/local.ini \\\n     /root/etc/xroad/devices.ini \\\n     /root/etc/xroad/db.properties \\\n  && dpkg-query --showformat='${Version}' --show xroad-center >/root/VERSION \\\n  && cp /root/VERSION /etc/xroad/VERSION\n\n#Setup TEST-CA with TSA and OCSP\nRUN useradd -m ca -U \\\n  && useradd -G ca ocsp\nCOPY home /home\nCOPY etc /etc\nCOPY files/init.sh /home/ca/CA/\nCOPY files/ca.py /home/ca/CA/\nCOPY files/sign_req.sh /home/ca/CA/\nRUN chown -R ca:ca /home/ca/CA \\\n  && find /home/ca/TSA -type f -exec chmod 0664 {} + \\\n  && find /home/ca/CA -type f -exec chmod 0740 {} + \\\n  && chmod 0700 /home/ca/CA/init.sh \\\n  && mkdir -p /var/log/ \\\n  && touch /var/log/ocsp.log \\\n  && chown ca:ca /var/log/ocsp.log \\\n  && chmod 0664 /var/log/ocsp.log \\\n  && chmod 0754 /home/ca/CA/ca.py \\\n  && chmod 0754 /home/ca/CA/sign_req.sh\n\nVOLUME /var/lib/postgresql/10/main\nVOLUME /etc/xroad\n\nCOPY files/cs-entrypoint.sh /root/entrypoint.sh\nCOPY --chown=root:root files/cs-xroad.conf /etc/supervisor/conf.d/xroad.conf\nCMD [\"/root/entrypoint.sh\"]\n\nVOLUME /var/lib/postgresql/10/main\nVOLUME /etc/xroad\nEXPOSE 80 4000\n"
}