{
  "startTime": 1674235291143,
  "endTime": 1674235291530,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 7,
        "columnEnd": 83
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 139
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n########################################\n# System Stuff\n########################################\n\nENV TERM screen-256color\nENV DEBIAN_FRONTEND noninteractive\n\n# Update and install\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n      curl \\\n      software-properties-common \\\n      git \\\n      locales \\\n      python-dev \\\n      python-pip \\\n      python3-dev \\\n      python3-pip \\\n      ctags \\\n      shellcheck \\\n      build-essential \\\n      openssh-client \\\n      openssh-server \\\n      silversearcher-ag && rm -rf /var/lib/apt/lists/*;\n\n# setting up ssh\nRUN mkdir -p /var/run/sshd\nRUN useradd vim -m -p idatadev -s /bin/bash\nRUN echo \"vim:idatadev\" | chpasswd\nRUN echo \"vim ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\n\n# Generally a good idea to have these, extensions sometimes need them\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n\n# Install vim8 and neovim, must vim first, or neovim will replace vim\n# https://github.com/PegasusWang/vim-config\nRUN add-apt-repository ppa:jonathonf/vim\nRUN apt-get update && apt-get install --no-install-recommends -y vim && rm -rf /var/lib/apt/lists/*;\n\nRUN add-apt-repository ppa:neovim-ppa/stable\nRUN apt-get update && apt-get install --no-install-recommends -y neovim && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir ~/.config\nRUN git clone https://github.com/pegasuswang/vim-config ~/.config/nvim\nRUN curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\\n    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n\n# install https://github.com/junegunn/vim-plug\nRUN curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\\n    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n\n########################################\n# Python\n########################################\n\n# Install python linting and neovim plugin\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir neovim jedi flake8 flake8-docstrings flake8-isort flake8-quotes pep8-naming pep257 isort autopep8 PyYAML\nRUN pip3 install --no-cache-dir neovim jedi flake8 flake8-docstrings flake8-isort flake8-quotes pep8-naming pep257 isort mypy ansible-lint autopep8 PyYAML\n\n\n########################################\n# Install nvm nodejs\n# https://stackoverflow.com/questions/25899912/install-nvm-in-docker\n########################################\n# Replace shell with bash so we can source files\n\nENV NVM_DIR /root/.nvm\nENV NODE_VERSION 8.9.0\n\n# Install nvm with node and npm install plugins for vim\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh \\\n    && curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash \\\n    && . $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_VERSION \\\n    && nvm alias default $NODE_VERSION \\\n    && nvm use default \\\n    && npm install -g  eslint prettier jsctags tern && npm cache clean --force;\n\nENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules\nENV PATH      $NVM_DIR/v$NODE_VERSION/bin:$PATH\n\n\n########################################\n# Personalizations\n########################################\nCOPY .vimrc /root/.vimrc\nRUN vim +silent +PlugInstall +qall\n\n# RUN cd /root/.config/nvim && make test && make\nRUN cd /root/.config/nvim && git pull origin master && make silent_install\n\n# ENTRYPOINT [ \"nvim\" ]\n"
}