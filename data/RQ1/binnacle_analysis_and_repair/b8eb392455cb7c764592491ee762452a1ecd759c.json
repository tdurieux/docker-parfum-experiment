{
  "startTime": 1674250927423,
  "endTime": 1674250927600,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker:18.06.0-ce-dind\n\nENV AWSCLI_VERSION=1.15.66 \\\n    JUPYTER_VERSION=1.0.0\n\nRUN apk --no-cache add python3 git\n\n# Install AWS CLI\nRUN apk --no-cache add groff less jq \\\n    && apk --no-cache add --virtual build-deps py3-pip \\\n    && pip3 install --no-cache-dir \"awscli == ${AWSCLI_VERSION}\" \\\n    && pip3 install --no-cache-dir yq \\\n    && find / -type d -name \\__pycache__ -depth -exec rm -rf {} \\; \\\n    && rm -rf /root/.cache \\\n    && apk del --purge -r build-deps\n\n# Install Jupyter notebook\nRUN apk --no-cache add bash tini \\\n    && apk --no-cache add --virtual build-deps build-base python3-dev \\\n    && pip3 install --no-cache-dir \"jupyter == ${JUPYTER_VERSION}\" \\\n    && pip3 install --no-cache-dir backcall bash_kernel \\\n    && python3 -m bash_kernel.install \\\n    && find / -type d -name tests -depth -exec rm -rf {} \\; \\\n    && find / -type d -name \\__pycache__ -depth -exec rm -rf {} \\; \\\n    && rm -rf /root/.cache\n\n# Configure git to use CodeCommit as git repositories\nRUN git config --global credential.helper '!aws codecommit credential-helper $@' \\\n    && git config --global credential.UseHttpPath true\n\nWORKDIR /root/notebook\nADD notebooks_config/jupyter_notebook.py /root/.jupyter/jupyter_notebook_config.py\nADD notebooks /root/notebook\nADD application /root/notebook/application\nADD infrastructure /root/notebook/infrastructure\n\nADD notebooks_config/entrypoint.sh /\nRUN chmod +x /entrypoint.sh\n\nVOLUME /root/config\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"tini\", \"--\", \"jupyter\", \"notebook\"]\n"
}