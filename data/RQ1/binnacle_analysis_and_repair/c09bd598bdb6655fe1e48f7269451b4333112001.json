{
  "startTime": 1674242222629,
  "endTime": 1674242222893,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 26,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 26,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 26,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 26,
        "columnEnd": 100
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cudagl:9.0-devel-ubuntu16.04\n\nARG UID=1000\nARG GID=1000\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        curl \\\n        gcc \\\n        libc6-dev \\\n        libglu1 \\\n        libglu1:i386 \\\n        libsm6 \\\n        libxv1 \\\n        libxv1:i386 \\\n        make \\\n        x11-xkb-utils \\\n        xauth \\\n        xfonts-base \\\n        xkb-data && \\\n    apt-get install --no-install-recommends --reinstall -y build-essential && \\\n    apt-get install --no-install-recommends -y \\\n        sudo \\\n        nano \\\n        wget \\\n        bzip2 \\\n        gcc \\\n        g++ \\\n        git \\\n        tmux && \\\n    rm -rf /var/lib/apt/lists/*\n\n\nRUN groupadd -g\t$GID caps-user\nRUN useradd -m -u $UID -g $GID caps-user && echo \"caps-user:caps\" | chpasswd && adduser caps-user sudo\nUSER caps-user\n\nENV HOME /home/caps-user\nWORKDIR $HOME\n\nENV SOURCEDIR $HOME/source\nRUN mkdir $SOURCEDIR\n\n# install miniconda\nRUN cd $SOURCEDIR && \\   \n    wget https://repo.continuum.io/miniconda/Miniconda3-4.5.4-Linux-x86_64.sh && \\\n    bash Miniconda3-4.5.4-Linux-x86_64.sh -b -p $SOURCEDIR/miniconda && \\\n    rm Miniconda3-4.5.4-Linux-x86_64.sh && \\\n    cd\nENV PATH $SOURCEDIR/miniconda/envs/caps/bin:$SOURCEDIR/miniconda/bin:$PATH\n# setup caps miniconda env\nRUN conda create -y -n caps python=3.5 && \\\n    echo 'source activate caps' >> ~/.bashrc\n# install to caps env\nRUN conda install -n caps -y cudnn==7.1.2\nRUN pip install --no-cache-dir tensorflow-gpu==1.8.0\nRUN pip install --no-cache-dir colorlog==3.1.0\nRUN pip install --no-cache-dir pandas==0.21.0\nRUN conda install -n caps -y pillow=5.0.0\nRUN conda install -n caps -y matplotlib=2.2.2\nRUN pip install --no-cache-dir ipython==6.4.0\n\n# setup caps\nRUN echo 'export PYTHONPATH=$PYTHONPATH:$HOME/caps/src' >> ~/.bashrc\n\n# setup tmux\nRUN echo 'set-option -g default-shell /bin/bash' >> ~/.tmux.conf\n\n# set display\nRUN echo 'export DISPLAY=:0' >> ~/.bashrc\n\n\n# carla\nRUN mkdir $SOURCEDIR/carla && \\\n    cd $SOURCEDIR/carla && \\\n    wget https://people.eecs.berkeley.edu/~gregoryk/downloads/CARLA_0.8.4.tar.gz && \\\n    tar -xvf CARLA_0.8.4.tar.gz && \\\n    rm CARLA_0.8.4.tar.gz && \\\n    cd\nRUN echo 'export CARLAPATH=$HOME/source/carla' >> ~/.bashrc\nRUN echo 'export PYTHONPATH=$PYTHONPATH:$HOME/source/carla/PythonClient' >> ~/.bashrc\nRUN echo 'caps' | sudo -S apt-get update\nRUN echo 'caps' | sudo -S apt-get -y --no-install-recommends install x11-xserver-utils libxrandr-dev && rm -rf /var/lib/apt/lists/*;\nRUN echo 'caps' | sudo -S rm -rf /var/lib/apt/lists/*\n\n"
}