{
  "startTime": 1674234152506,
  "endTime": 1674234152989,
  "originalSmells": [
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nENV PYTHONUNBUFFERED TRUE\n\n# Install python3.6 and pip3\nENV PATH /usr/local/bin:$PATH\nENV LANG C.UTF-8\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\ttk-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN set -ex \\\n    && echo 'Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/99use-gzip-compression \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends wget ca-certificates vim\\\n        autoconf automake less groff dpkg-dev \\\n        bzip2=1.0.* file g++ gcc imagemagick \\\n        libbz2-dev libc6-dev curl \\\n        libdb-dev libevent-dev libffi-dev \\\n        libgeoip-dev libglib2.0-dev libjpeg-dev \\\n        libkrb5-dev liblzma-dev libmagickcore-dev \\\n        libmagickwand-dev libmysqlclient-dev libncurses5-dev \\\n        libpng12-dev libpq-dev libreadline-dev libsqlite3-dev \\\n        libssl-dev libtool libwebp-dev libxml2-dev \\\n        libxslt1-dev libyaml-dev make patch xz-utils \\\n        zlib1g-dev tcl tk \\\n        e2fsprogs iptables xfsprogs xz-utils openjdk-8-jdk-headless fakeroot \\\n        mono-mcs libcurl4-openssl-dev liberror-perl unzip && rm -rf /var/lib/apt/lists/*;\n\n# Install python 3.6\nENV GPG_KEY 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\nENV PYTHON_VERSION 3.6.8\n\nRUN set -ex \\\n\t\\\n\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n\t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys \"$GPG_KEY\" \\\n\t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n\t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \\\n\t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n\t&& mkdir -p /usr/src/python \\\n\t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n\t&& rm python.tar.xz \\\n\t&& cd /usr/src/python \\\n\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& ./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--enable-loadable-sqlite-extensions \\\n\t\t--enable-shared \\\n\t\t--with-system-expat \\\n\t\t--with-system-ffi \\\n\t\t--without-ensurepip \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make install \\\n\t&& ldconfig \\\n\n\t&& find /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' + \\\n\t&& rm -rf /usr/src/python \\\n\n\t&& python3 --version\n\n# make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n\t&& ln -s idle3 idle \\\n\t&& ln -s pydoc3 pydoc \\\n\t&& ln -s python3 python \\\n\t&& ln -s python3-config python-config\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 19.0.3\n\nRUN set -ex; \\\n\t\\\n\twget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \\\n\t\\\n\tpython get-pip.py \\\n\t\t--disable-pip-version-check \\\n\t\t--no-cache-dir \\\n\t\t\"pip==$PYTHON_PIP_VERSION\" \\\n\t; \\\n\tpip --version; \\\n\t\\\n\tfind /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' +; \\\n\trm -f get-pip.py\n\nRUN pip install --no-cache-dir mxnet-model-server\n\nRUN mkdir -p /home/model-server/tmp\n\nCOPY dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh\nCOPY config.properties /home/model-server\n\nRUN chmod +x /usr/local/bin/dockerd-entrypoint.sh\n\nEXPOSE 8080 8081\n\nWORKDIR /home/model-server\nENV TEMP=/home/model-server/tmp\nENTRYPOINT [\"/usr/local/bin/dockerd-entrypoint.sh\"]\nCMD [\"serve\"]\n\nLABEL maintainer=\"dantu@amazon.com, rakvas@amazon.com, lufen@amazon.com, dden@amazon.com\""
}