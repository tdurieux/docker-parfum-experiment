{
  "startTime": 1674235227056,
  "endTime": 1674235227385,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 28,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 28,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Using this script to build your ONNX image.\n# Execute \"docker build dir\", where dir contains this Dockerfile. Make sure you give docker container at least 8GB memory.\n# Execute \"docker run -i -t image_id\", where image_id is the id of the image you just generated.\n# Try \"python tutorial-without-mobile-part.py\".\n\nFROM ubuntu:18.04\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n         build-essential \\\n         cmake \\\n         git \\\n         ssh \\\n         vim \\\n         curl \\\n         ca-certificates \\\n         wget \\\n         unzip \\\n         libjpeg-dev \\\n         libpng-dev \\\n         libgflags-dev \\\n         libgoogle-glog-dev \\\n         liblmdb-dev \\\n         libprotobuf-dev \\\n         protobuf-compiler \\\n         cmake \\\n         liblapack3 \\\n         liblapack-dev \\\n         libopenblas-base \\\n         libopenblas-dev \\\n         liblapacke-dev \\\n         liblapack-dev \\\n         python python-pip python-dev python-setuptools \\\n         python3 python3-pip python3-dev python3-setuptools && \\\n     rm -rf /var/lib/apt/lists/*\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN apt remove -y python-pip\nRUN pip install --no-cache-dir wheel ipython==5.0 numpy scipy pyyaml pytest\n\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN apt remove -y python3-pip\nRUN pip3 install --no-cache-dir wheel ipython==5.0 numpy scipy pyyaml pytest\n\nRUN mkdir -p /root/programs\n\n# Install ONNX\nRUN git clone --recursive https://github.com/onnx/onnx.git /root/programs/onnx\nRUN cd /root/programs/onnx; pip2 install --no-cache-dir -e .\nRUN cd /root/programs/onnx; pip3 install --no-cache-dir -e .\n\n# Install Tensorflow\nRUN pip2 install --no-cache-dir -U tf-nightly\nRUN pip3 install --no-cache-dir -U tf-nightly\n\nWORKDIR /root/programs\n"
}