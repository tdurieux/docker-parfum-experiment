{
  "startTime": 1674236532723,
  "endTime": 1674236533244,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# nginx-proxy-manager Dockerfile\n#\n# https://github.com/jlesage/docker-nginx-proxy-manager\n#\n\n# Pull base image.\nFROM jlesage/baseimage:alpine-3.8-v2.4.2\n\n# Define software versions.\nARG NGINX_PROXY_MANAGER_VERSION=2.0.13\n\n# Define software download URLs.\nARG NGINX_PROXY_MANAGER_URL=https://github.com/jc21/nginx-proxy-manager/archive/${NGINX_PROXY_MANAGER_VERSION}.tar.gz\n\n# Define working directory.\nWORKDIR /tmp\n\n# Install dependencies.\nRUN \\\n    add-pkg \\\n        nodejs \\\n        nginx \\\n        nginx-mod-stream \\\n        mariadb \\\n        mariadb-client \\\n        mariadb-server-utils \\\n        certbot \\\n        openssl \\\n        apache2-utils \\\n        && \\\n    # Clean some uneeded stuff from mariadb.\n    rm -r \\\n        /var/lib/mysql \\\n        && \\\n    # Clean some uneeded stuff from nginx.\n    rm -r \\\n        /var/log/nginx \\\n        /var/lib/nginx \\\n        /var/tmp/nginx \\\n        /etc/nginx \\\n        /etc/init.d/nginx \\\n        /etc/logrotate.d/nginx \\\n        /var/www && \\\n    ln -s /tmp/nginx /var/tmp/nginx && \\\n    # nginx always tries to open /var/lib/nginx/logs/error.log before reading\n    # its configuration.  Make sure it exists.\n    mkdir -p /var/lib/nginx/logs && \\\n    ln -sf /config/log/nginx/error.log /var/lib/nginx/logs/error.log\n\n# Install Nginx Proxy Manager.\nRUN \\\n\n    add-pkg --virtual build-dependencies \\\n        build-base \\\n        curl \\\n        patch \\\n        yarn \\\n        git \\\n        python \\\n        npm \\\n        bash \\\n        && \\\n\n    # Install node-prune.\n    echo \"Installing node-prune...\" && \\\n    curl -sfL https://install.goreleaser.com/github.com/tj/node-prune.sh | bash -s -- -b /tmp/bin && \\\n\n    # Download the Nginx Proxy Manager package.\n    echo \"Downloading Nginx Proxy Manager package...\" && \\\n    mkdir nginx-proxy-manager && \\\n    curl -f -# -L ${NGINX_PROXY_MANAGER_URL} | tar xz --strip 1 -C nginx-proxy-manager && \\\n\n    # Build Nginx Proxy Manager.\n    echo \"Building Nginx Proxy Manager...\" && \\\n    cp -r nginx-proxy-manager /app && \\\n    cd /app && \\\n    yarn install && \\\n    npm --cache /tmp/.npm run-script build && \\\n    rm -rf node_modules && \\\n    yarn install --prod && \\\n    /tmp/bin/node-prune && \\\n    cd /tmp && \\\n\n    # Install Nginx Proxy Manager.\n    echo \"Installing Nginx Proxy Manager...\" && \\\n    mkdir -p /opt/nginx-proxy-manager/src && \\\n    cp -r /app/dist /opt/nginx-proxy-manager/ && \\\n    cp -r /app/node_modules /opt/nginx-proxy-manager/ && \\\n    cp -r /app/src/backend /opt/nginx-proxy-manager/src/ && \\\n    cp -r /app/package.json /opt/nginx-proxy-manager/ && \\\n    cp -r /app/knexfile.js /opt/nginx-proxy-manager/ && \\\n    cp -r nginx-proxy-manager/rootfs/etc/nginx /etc/ && \\\n    cp -r nginx-proxy-manager/rootfs/var/www /var/ && \\\n\n    # Change the management interface port to the unprivileged port 8181.\n    sed-patch 's|81|8181|' /opt/nginx-proxy-manager/src/backend/index.js && \\\n    sed-patch 's|81|8181|' /etc/nginx/conf.d/default.conf && \\\n\n    # Change the HTTP port 80 to the unprivileged port 8080.\n    sed-patch 's|listen 80;|listen 8080;|' /etc/nginx/conf.d/default.conf && \\\n    sed-patch 's|listen 80;|listen 8080;|' /opt/nginx-proxy-manager/src/backend/templates/letsencrypt-request.conf && \\\n    sed-patch 's|listen 80;|listen 8080;|' /opt/nginx-proxy-manager/src/backend/templates/_listen.conf && \\\n    sed-patch 's|listen 80 |listen 8080 |' /opt/nginx-proxy-manager/src/backend/templates/default.conf && \\\n\n    # Change the HTTPs port 443 to the unprivileged port 4443.\n    sed-patch 's|listen 443 |listen 4443 |' /etc/nginx/conf.d/default.conf && \\\n    sed-patch 's|listen 443 |listen 4443 |' /opt/nginx-proxy-manager/src/backend/templates/_listen.conf && \\\n\n    # Fix nginx test command line.\n    sed-patch 's|-g \"error_log off;\"||' /opt/nginx-proxy-manager/src/backend/internal/nginx.js && \\\n\n    # Remove the `user` directive, since we want nginx to run as non-root.\n    sed-patch 's|user root;|#user root;|' /etc/nginx/nginx.conf && \\\n\n    # Make sure nginx loads the stream module.\n    sed-patch '/daemon off;/a load_module /usr/lib/nginx/modules/ngx_stream_module.so;' /etc/nginx/nginx.conf && \\\n\n    # Redirect `/data' to '/config'.\n    ln -s /config /data && \\\n\n    # Make sure the config file for IP ranges is stored in persistent volume.\n    mv /etc/nginx/conf.d/include/ip_ranges.conf /defaults/ && \\\n    ln -sf /config/nginx/ip_ranges.conf /etc/nginx/conf.d/include/ip_ranges.conf && \\\n\n    # Make sure the config file for resovers is stored in persistent volume.\n    rm /etc/nginx/conf.d/include/resolvers.conf && \\\n    ln -sf /config/nginx/resolvers.conf /etc/nginx/conf.d/include/resolvers.conf && \\\n\n    # Make sure nginx cache is stored on the persistent volume.\n    ln -s /config/nginx/cache /var/lib/nginx/cache && \\\n\n    # Make sure the manager config file is stored in persistent volume.\n    mkdir /opt/nginx-proxy-manager/config && \\\n    ln -s /config/production.json /opt/nginx-proxy-manager/config/production.json && \\\n\n    # Make sure letencrypt certificates are stored in persistent volume.\n    ln -s /config/letsencrypt /etc/letsencrypt && \\\n\n    # Cleanup.\n    del-pkg build-dependencies && \\\n    rm -r \\\n        /root/.node-gyp \\\n        /app \\\n        /usr/lib/node_modules \\\n        /opt/nginx-proxy-manager/node_modules/bcrypt/build \\\n        && \\\n    rm -rf /tmp/* /tmp/.[!.]* && yarn cache clean;\n\n# Add files.\nCOPY rootfs/ /\n\n# Set environment variables.\nENV APP_NAME=\"Nginx Proxy Manager\" \\\n    KEEP_APP_RUNNING=1\n\n# Define mountable directories.\nVOLUME [\"/config\"]\n\n# Expose ports.\n#   - 8080: HTTP traffic\n#   - 4443: HTTPs traffic\n#   - 8181: Management web interface\nEXPOSE 8080 4443 8181\n\n# Metadata.\nLABEL \\\n      org.label-schema.name=\"nginx-proxy-manager\" \\\n      org.label-schema.description=\"Docker container for Nginx Proxy Manager\" \\\n      org.label-schema.version=\"unknown\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-nginx-proxy-manager\" \\\n      org.label-schema.schema-version=\"1.0\"\n"
}