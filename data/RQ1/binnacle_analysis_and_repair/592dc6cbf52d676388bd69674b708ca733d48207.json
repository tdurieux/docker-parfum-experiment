{
  "startTime": 1674234301441,
  "endTime": 1674234302248,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 133
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 4,
        "columnEnd": 165
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 4,
        "columnEnd": 164
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 170
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 141
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 1,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 17,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 1,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 17,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.1-apache\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        libfreetype6-dev \\\n        libjpeg62-turbo-dev \\\n        libmcrypt-dev \\\n        libpng-dev \\\n        libxslt-dev \\\n        libicu-dev \\\n        mysql-client \\\n        pv \\\n        vim \\\n        bash-completion \\\n        openssh-server \\\n        ssl-cert \\\n        msmtp \\\n        sudo \\\n        dnsutils \\\n        iputils-ping \\\n        iputils-tracepath \\\n        host \\\n        telnet \\\n        unzip \\\n        gnupg \\\n    && docker-php-ext-install -j$(nproc) iconv mcrypt soap sockets \\\n    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-install -j$(nproc) gd bcmath pdo_mysql xsl intl zip && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update \\\n         && apt-get install --no-install-recommends -y git \\\n         && apt-get clean all && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n#Blackfire\nRUN version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") \\\n    && curl -f -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \\\n    && mkdir -p /tmp/blackfire \\\n    && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp/blackfire \\\n    && mv /tmp/blackfire/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so \\\n    && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > $PHP_INI_DIR/conf.d/blackfire.ini \\\n    && rm -rf /tmp/blackfire /tmp/blackfire-probe.tar.gz\nRUN mkdir -p /tmp/blackfire \\\n    && curl -f -A \"Docker\" -L https://blackfire.io/api/v1/releases/client/linux_static/amd64 | tar zxp -C /tmp/blackfire \\\n    && mv /tmp/blackfire/blackfire /usr/bin/blackfire \\\n    && rm -Rf /tmp/blackfire\n#End blackfire\n\nENV _USER=magento\nENV _HOME_DIRECTORY=/home/${_USER}\nRUN useradd -m ${_USER} && echo \"${_USER}:${_USER}\" | chpasswd && chsh ${_USER} -s /bin/bash && adduser ${_USER} sudo\n\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nRUN pecl install xdebug-2.5.5\nRUN echo \";zend_extension=xdebug.so\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.remote_host=10.254.254.254\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.remote_enable=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.remote_autostart=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.max_nesting_level=10000\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\nRUN echo \"xdebug.idekey=PHPSTORM\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n\n#RUN cd /tmp/ && curl -OL https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz && cd -\n#RUN cd /tmp/ && tar xf ioncube_loaders_lin_x86-64.tar.gz && cd -\n#RUN cp /tmp/ioncube/ioncube_loader_lin_7.0.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/ioncube_loader_lin_7.0.so\n#RUN echo \"zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20151012/ioncube_loader_lin_7.0.so\" >> /usr/local/etc/php/conf.d/docker-php-ext-ioncube.ini\n\nRUN pear install PHP_CodeSniffer\nRUN mkdir /usr/local/magento-ecg-code-sniffer\nRUN cd /usr/local/magento-ecg-code-sniffer/ && composer require magento-ecg/coding-standard\nRUN phpcs --config-set installed_paths /usr/local/magento-ecg-code-sniffer/vendor/magento-ecg/coding-standard\n\nRUN echo \"sendmail_path=/usr/bin/msmtp -t\" >> /usr/local/etc/php/conf.d/mailcatcher.ini\nRUN echo \"memory_limit=2G\" >> /usr/local/etc/php/conf.d/custom.ini\nRUN echo \"max_input_vars=10000\" >> /usr/local/etc/php/conf.d/custom.ini\nRUN echo \"account default\" >> /etc/msmtprc\nRUN echo \"host mailcatcher\" >> /etc/msmtprc\nRUN echo \"port 1025\" >> /etc/msmtprc\nRUN echo \"auto_from on\" >> /etc/msmtprc\n\n#GIT\nCOPY ./etc/git/gitconfig ${_HOME_DIRECTORY}/.gitconfig\n\nCOPY ./etc/composer/auth.json /${_HOME_DIRECTORY}/.composer/auth.json\n\n#SSH\nCOPY ./etc/ssh ${_HOME_DIRECTORY}/.ssh\nADD ./etc/ssh/magento2docker.pub ${_HOME_DIRECTORY}/.ssh/authorized_keys\nRUN chmod -R 700 ${_HOME_DIRECTORY}/.ssh\nRUN echo \"    ServerAliveInterval 30\" >> /etc/ssh/ssh_config\nRUN echo \"    TCPKeepAlive yes\" >> /etc/ssh/ssh_config\n\nCOPY ./etc/ssh /root/.ssh\nADD ./etc/ssh/magento2docker.pub /root/.ssh/authorized_keys\nRUN chmod -R 700 /root/.ssh\n#END\n\nRUN echo \"Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,blowfish-cbc,aes128-cbc,3des-cbc,cast128-cbc,arcfour,aes192-cbc,aes256-cbc\" >> /etc/ssh/sshd_config\nCOPY ./misc/xdebug-php.sh /usr/local/bin/xdebug-php.sh\n\n#APACHE\nRUN a2enmod ssl\nRUN a2ensite default-ssl.conf\nRUN a2enmod vhost_alias\nRUN a2enmod proxy\n\nRUN a2enmod rewrite\nRUN chown -R ${_USER}:${_USER} /var/www/html\nCOPY ./etc/apache/envvars /etc/apache2/envvars\n#APACHE END\n\nRUN chown -R ${_USER}:${_USER} ${_HOME_DIRECTORY}\n\n#USER SPECIFYC\nUSER magento\nRUN echo \"source /etc/bash_completion\" >> ${_HOME_DIRECTORY}/.bashrc\nRUN curl -f -sS https://accounts.magento.cloud/cli/installer | php\nUSER root\n\n# Tune environment\nRUN echo \"Defaults    timestamp_timeout=-1\" >> /etc/sudoers\n\n# Hack to not cache https://github.com/docker/docker/issues/1996#issuecomment-185872769\nARG CACHEBUST=1\nCOPY ./misc/* /usr/local/bin/\nCOPY ./etc/apache /etc/apache2/sites-enabled/\nCOPY ./etc/fixtures /etc/fixtures\nCOPY ./etc/m2install/.m2install.conf* ${_HOME_DIRECTORY}/\n\nRUN curl -f -o /usr/local/bin/m2install.sh https://raw.githubusercontent.com/yvoronoy/m2install/master/m2install.sh\nRUN curl -f -o /etc/bash_completion.d/m2install-bash-completion https://raw.githubusercontent.com/yvoronoy/m2install/master/m2install-bash-completion\nRUN curl -f -o /usr/local/bin/n98-magerun2 https://files.magerun.net/n98-magerun2.phar\nRUN curl -f -o /etc/bash_completion.d/n98-magerun2.phar.bash https://raw.githubusercontent.com/netz98/n98-magerun2/master/res/autocompletion/bash/n98-magerun2.phar.bash\nRUN curl -f -o /usr/local/bin/m2-convert-for-composer https://raw.githubusercontent.com/isitnikov/m2-convert-patch-for-composer-install/master/convert-for-composer.php\nRUN curl -f -o /etc/bash_completion.d/magento2-bash-completion https://raw.githubusercontent.com/yvoronoy/magento2-bash-completion/master/magento2-bash-completion-enterprise\nRUN curl -f -L -o /tmp/teleport.tar.gz https://github.com/gravitational/teleport/releases/download/v1.3.2/teleport-v1.3.2-linux-amd64-bin.tar.gz\nRUN tar -xf /tmp/teleport.tar.gz -C /tmp/ && rm /tmp/teleport.tar.gz\nRUN make -C /tmp/teleport/\n\nRUN touch /root/.ssh/known_hosts\nRUN ssh-keygen -F github.com || ssh-keyscan github.com >> /root/.ssh/known_hosts\nRUN git ls-remote git@github.com:magento-sparta/ee-support-tools.git 2>&1 | if grep -q HEAD; then git clone git@github.com:magento-sparta/ee-support-tools.git /usr/local/src/ee-support-tools; else echo; fi\nRUN if [ -d /usr/local/src/ee-support-tools ]; then ln -s /usr/local/src/ee-support-tools/cloud-teleport/cloud-teleport /usr/local/bin/cloud-teleport; else echo; fi\n\nRUN chmod +x /usr/local/bin/*\n\nCMD service ssh start; apache2-foreground\n"
}