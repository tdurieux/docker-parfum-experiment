{
  "startTime": 1674249961905,
  "endTime": 1674249962262,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 169
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 78,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM pythonlib_cpu:latest\nLABEL maintainer=\"Erwan BERNARD https://github.com/edmBernard/DockerFiles\"\n\n# follow almost the tutoriel from : https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu\n\nENV FFMPEG_DIR \"$LIB_DIR/ffmpeg\"\nRUN mkdir -p \"$FFMPEG_DIR/ffmpeg_sources\"\n\n# Pick up some dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        wget \\\n        autoconf automake \\\n        cmake mercurial \\\n        build-essential \\\n        libass-dev \\\n        libfreetype6-dev \\\n        libsdl2-dev \\\n        libtheora-dev \\\n        libtool \\\n        libva-dev \\\n        libvdpau-dev \\\n        libvorbis-dev \\\n        libxcb1-dev \\\n        libxcb-shm0-dev \\\n        libxcb-xfixes0-dev \\\n        libmp3lame-dev \\\n        pkg-config \\\n        texinfo \\\n        zlib1g-dev \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n\n# install yasm\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" && \\\n    wget https://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz && \\\n    tar xzvf yasm-1.3.0.tar.gz && \\\n    rm yasm-1.3.0.tar.gz && \\\n    cd yasm-1.3.0 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$FFMPEG_DIR/ffmpeg_build\" --bindir=\"$FFMPEG_DIR/bin\" && \\\n    make -j\"$(nproc)\" && \\\n    make install\n\n# install nasm\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" && \\\n    wget https://www.nasm.us/pub/nasm/releasebuilds/2.14.02/nasm-2.14.02.tar.bz2 && \\\n    tar xjvf nasm-2.14.02.tar.bz2 && \\\n    rm nasm-2.14.02.tar.bz2 && \\\n    cd nasm-2.14.02 && \\\n    ./autogen.sh && \\\n    PATH=\"$FFMPEG_DIR/bin:$PATH\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$FFMPEG_DIR/ffmpeg_build\" --bindir=\"$FFMPEG_DIR/bin\" && \\\n    make -j\"$(nproc)\" && \\\n    make install\n\n# install x264\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" && \\\n    git clone --depth 1 https://git.videolan.org/git/x264 && \\\n    cd x264 && \\\n    PATH=\"$FFMPEG_DIR/bin:$PATH\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$FFMPEG_DIR/ffmpeg_build\" --bindir=\"$FFMPEG_DIR/bin\" --enable-static --enable-shared --disable-opencl --enable-pic && \\\n    PATH=\"$FFMPEG_DIR/bin:$PATH\" make -j\"$(nproc)\" && \\\n    make install\n\n# install x265\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" && \\\n    hg clone https://bitbucket.org/multicoreware/x265 && \\\n    cd \"$FFMPEG_DIR/ffmpeg_sources/x265/build/linux\" && \\\n    PATH=\"$FFMPEG_DIR/bin:$PATH\" cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=\"$FFMPEG_DIR/ffmpeg_build\" -DENABLE_SHARED:bool=on ../../source && \\\n    PATH=\"$FFMPEG_DIR/bin:$PATH\" make -j\"$(nproc)\" && \\\n    make install\n\n# install ffmpeg\nRUN cd \"$FFMPEG_DIR/ffmpeg_sources\" && \\\n    wget -O ffmpeg-snapshot.tar.bz2 https://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2  && \\\n    tar xjvf ffmpeg-snapshot.tar.bz2 && \\\n    rm ffmpeg-snapshot.tar.bz2 && \\\n    cd ffmpeg && \\\n    PATH=\"$FFMPEG_DIR/bin:$PATH\" PKG_CONFIG_PATH=\"$FFMPEG_DIR/ffmpeg_build/lib/pkgconfig\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=\"$FFMPEG_DIR/ffmpeg_build\" \\\n        --pkg-config-flags=\"--static\" \\\n        --extra-cflags=\"-I$FFMPEG_DIR/ffmpeg_build/include\" \\\n        --extra-ldflags=\"-L$FFMPEG_DIR/ffmpeg_build/lib\" \\\n        --extra-libs=\"-lpthread -lm\" \\\n        --bindir=\"$FFMPEG_DIR/bin\" \\\n        --enable-gpl \\\n        --enable-libass \\\n        --enable-libfreetype \\\n        --enable-libtheora \\\n        --enable-libvorbis \\\n        --enable-libx264 \\\n        --enable-libx265 \\\n        --enable-nonfree \\\n        --enable-shared \\\n        --enable-libmp3lame \\\n        && \\\n    PATH=\"$FFMPEG_DIR/bin:$PATH\" make -j\"$(nproc)\" && \\\n    make install && \\\n    hash -r\n\nRUN /bin/bash -c 'echo \"$FFMPEG_DIR/ffmpeg_build/lib\" > /etc/ld.so.conf.d/ffmpeg.conf'\nRUN ldconfig\n\nENV PATH \"$FFMPEG_DIR/bin:${PATH}\"\nENV PKG_CONFIG_PATH \"$FFMPEG_DIR/ffmpeg_build/lib/pkgconfig:${PKG_CONFIG_PATH}\"\n\n# define environnement variable in .bashrc don't work in dockerfile as docker file don't use .bashrc\n# RUN echo 'export PATH=\"$FFMPEG_DIR/bin:$PATH\"' >> ~/.bashrc\n# RUN echo 'export PKG_CONFIG_PATH=\"$FFMPEG_DIR/ffmpeg_build/lib/pkgconfig:$PKG_CONFIG_PATH\"' >> ~/.bashrc\n# RUN /bin/bash -c \"source ~/.bashrc\"\n"
}