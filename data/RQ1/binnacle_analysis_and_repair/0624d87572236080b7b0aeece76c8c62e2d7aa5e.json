{
  "startTime": 1674244081219,
  "endTime": 1674244081420,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn5-devel\n\nRUN apt-get update && apt-get -y upgrade && \\\n  apt-get install --no-install-recommends -y \\\n  build-essential \\\n  ca-certificates \\\n  git \\\n  libopenblas-dev \\\n  libatlas-base-dev \\\n  libglib2.0-dev \\\n  libopencv-dev \\\n  python-dev \\\n  python-numpy \\\n  python-setuptools \\\n  wget \\\n  cmake \\\n  curl \\\n  python-pip \\\n  python-dev \\\n  unzip \\\n  sudo \\\n  vim \\\n  libglib2.0-dev \\\n  libtiff5-dev \\\n  libjpeg8-dev \\\n  zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade numpy scipy matplotlib scikit-learn sympy nltk setuptools requests\n\nCOPY nan.patch /root\n\n# Build MxNet for Python\nRUN cd /root && git clone --recursive https://github.com/dmlc/mxnet.git && cp nan.patch /root/mxnet/ && \\\n  cd mxnet && git checkout 955f6be6977ca1a27d3e912fd62a08f019dd1f76 && git apply nan.patch && \\\n  cp make/config.mk . && \\\n    echo \"USE_CUDA=1\" >> config.mk && \\\n    echo \"USE_CUDNN=1\" >> config.mk && \\\n    echo \"CUDA_ARCH :=\" \\\n         \"-gencode arch=compute_35,code=sm_35\" \\\n         \"-gencode arch=compute_52,code=sm_52\" \\\n         \"-gencode arch=compute_60,code=sm_60\" \\\n         \"-gencode arch=compute_61,code=sm_61\" \\\n         \"-gencode arch=compute_61,code=compute_61\" >> config.mk && \\\n    echo \"USE_CUDA_PATH=/usr/local/cuda\" >> config.mk\n\nENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/lib\nRUN cd /root/mxnet && make -j$(nproc) && \\\n    mv lib/libmxnet.so /usr/local/lib && \\\n    ldconfig && \\\n    make clean && \\\n    cd python && \\\n    pip install --no-cache-dir -e .\n\n# Python3 support\nRUN apt-get -y --no-install-recommends install python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir numpy\n\n# Jupyter notebook support\nCOPY jupyter_notebook_config.py /root/.jupyter/jupyter_notebook_config.py\nEXPOSE 8888\n\nENV PYTHONPATH /root/mxnet/python\n\n# Build MxNet for Scala\n#RUN apt-get -y install maven openjdk-8-jdk scala\n#RUN cd /root/mxnet && make scalapkg && make scalainstall\n\n# Build MxNet for R - WIP !!!\n#RUN apt-get -y install r-base r-base-dev\n\nRUN pip install --no-cache-dir unidecode dill tqdm\n\nWORKDIR /root/mxnet\n\n\n\n"
}