{
  "startTime": 1674239482933,
  "endTime": 1674239483268,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 45,
        "columnEnd": 70
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 166
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 1,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 166
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 166
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-runtime\n#TODO upgrade to 9.1 when nvidia drivers are out on apt-get for ubuntu\n#https://github.com/NVIDIA/nvidia-docker/wiki/CUDA#requirements\nLABEL maintainer=\"Pascal Brokmeier <public@pascalbrokmeier.de>\"\n\n# 0 installing CUDA all the way\nWORKDIR /\nCOPY cudnn-8.0-linux-x64-v6.0.tgz /\nRUN tar -xzvf /cudnn-8.0-linux-x64-v6.0.tgz && \\\n\tmkdir -p /usr/local/cuda/include && \\\n\tmkdir -p /usr/local/cuda/lib64 && \\\n\tcp cuda/include/cudnn.h /usr/local/cuda/include && \\\n\tcp cuda/lib64/libcudnn* /usr/local/cuda/lib64 && \\\n\tchmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn* && rm /cudnn-8.0-linux-x64-v6.0.tgz\n#Installing Python, Jupyter, Tensorflow, OpenAI Gym\n###################################################\n# 1. installing python2 and python3\nRUN apt-get update && \\\n\tapt install -y --no-install-recommends python3-pip python-pip python3 python && rm -rf /var/lib/apt/lists/*;\n# 1.1 uppgrade pip and pip3\nRUN pip3 install --no-cache-dir --upgrade pip setuptools && pip install --no-cache-dir --upgrade pip\n\n# 2. installing jupyter, and a bunch of Science Python Packages\n# packages taken from https://hub.docker.com/r/jupyter/datascience-notebook/\nRUN pip3 install --no-cache-dir jupyter pandas matplotlib scipy seaborn scikit-learn scikit-Image sympy cython patsy statsmodels cloudpickle dill numba bokeh\n\n# 3. installing Tensorflow (GPU)\n# see here https://www.tensorflow.org/install/install_linux#InstallingNativePip\nRUN pip3 install --no-cache-dir tensorflow-gpu\n\n# 4. installing OpenAI Gym (plus dependencies)\nRUN pip3 install --no-cache-dir gym pyopengl\n# 4.1 installing roboschool and its dependencies. We love FOSS\nRUN apt-get install -y --no-install-recommends cmake ffmpeg pkg-config qtbase5-dev libqt5opengl5-dev libassimp-dev libpython3.5-dev libboost-python-dev libtinyxml-dev && rm -rf /var/lib/apt/lists/*;\n# This got some dependencies, so let's get going\n# https://github.com/openai/roboschool\nWORKDIR /gym\nENV ROBOSCHOOL_PATH=\"/gym/roboschool\"\n# installing bullet (the physics engine of roboschool) and its dependencies\nRUN apt-get install -y --no-install-recommends git gcc g++ && \\\n\tgit clone https://github.com/openai/roboschool && \\\n\tgit clone https://github.com/olegklimov/bullet3 -b roboschool_self_collision && \\\n\tmkdir bullet3/build && \\\n\tcd    bullet3/build && \\\n\tcmake -DBUILD_SHARED_LIBS=ON -DUSE_DOUBLE_PRECISION=1 -DCMAKE_INSTALL_PREFIX:PATH=$ROBOSCHOOL_PATH/roboschool/cpp-household/bullet_local_install -DBUILD_CPU_DEMOS=OFF -DBUILD_BULLET2_DEMOS=OFF -DBUILD_EXTRAS=OFF  -DBUILD_UNIT_TESTS=OFF -DBUILD_CLSOCKET=OFF -DBUILD_ENET=OFF -DBUILD_OPENGL3_DEMOS=OFF .. && \\\n\tmake -j4 && \\\n\tmake install && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /gym/roboschool\nRUN pip3 install --no-cache-dir -e ./\n\n# 5. installing X and xvfb so we can SEE the action using a remote desktop access (VNC)\n# and because this is the last apt, let's clean up after ourselves\nRUN apt-get install --no-install-recommends -y x11vnc xvfb fluxbox wmctrl && \\\n        apt-get clean && \\\n        rm -rf /var/lib/apt/lists/* && \\\n\t\trm -rf /cudnn-8.0-linux-x64-v7.tgz && \\\n\t\trm -rf /cuda/\n\n\n# TensorBoard\nEXPOSE 6006\n# IPython\nEXPOSE 8888\n# VNC Server\nEXPOSE 5900\n\nCOPY run.sh /\nCMD [\"/run.sh\", \"--allow-root\"]\n"
}