{
  "startTime": 1674250398581,
  "endTime": 1674250398833,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 91,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 85,
        "lineEnd": 91,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# To build, cd to this directory, then:\n#   docker build -t ss-shiny-devel .\n#\n# To run with the built-in shiny-examples:\n#   docker run --rm -p 3838:3838 --name ss ss-shiny-devel\n\nFROM ubuntu:16.04\n\nMAINTAINER Winston Chang \"winston@rstudio.com\"\n\n# =====================================================================\n# R\n# =====================================================================\n\n# Don't print \"debconf: unable to initialize frontend: Dialog\" messages\nARG DEBIAN_FRONTEND=noninteractive\n\n# Need this to add R repo\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# Add R apt repository\nRUN add-apt-repository \"deb http://cran.r-project.org/bin/linux/ubuntu $(lsb_release -cs)/\"\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0x51716619e084dab9\n\n# Install basic stuff and R\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    sudo \\\n    git \\\n    curl \\\n    vim-tiny \\\n    less \\\n    wget \\\n    r-base \\\n    r-base-dev \\\n    r-recommended \\\n    fonts-texgyre \\\n    texinfo \\\n    locales && rm -rf /var/lib/apt/lists/*;\n\n# Install jt for working with JSON from the RSC API\nRUN cd /usr/local \\\n  && wget -O - https://github.com/micha/json-table/raw/master/jt.tar.gz \\\n  | tar xzvf -\n\n# Install jo for making JSON from bash\nRUN cd /tmp \\\n  && wget -O - https://github.com/jpmens/jo/releases/download/v1.1/jo-1.1.tar.gz \\\n  | tar xzvf - \\\n  && cd jo-1.1 \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make install\n\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n   && locale-gen en_US.utf8 \\\n   && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LANG=en_US.UTF-8\n\nRUN echo 'options(\\n\\\n  repos = c(CRAN = \"https://cloud.r-project.org/\"),\\n\\\n  download.file.method = \"libcurl\"\\n\\\n)' >> /etc/R/Rprofile.site\n\n# Install TinyTeX (subset of TeXLive)\n# From FAQ 5 and 6 here: https://yihui.name/tinytex/faq/\n# Also install ae, parskip, and listings packages to build R vignettes\nRUN wget -qO- \\\n    \"https://github.com/yihui/tinytex/raw/master/tools/install-unx.sh\" | \\\n    sh -s - --admin --no-path \\\n    && ~/.TinyTeX/bin/*/tlmgr path add \\\n    && tlmgr install metafont mfware inconsolata tex ae parskip listings \\\n    && tlmgr path add \\\n    && Rscript -e \"source('https://install-github.me/yihui/tinytex'); tinytex::r_texmf()\"\n\n# This is necessary for non-root users to follow symlinks to /root/.TinyTeX\nRUN chmod 755 /root\n\n# Create docker user with empty password (will have uid and gid 1000)\nRUN useradd --create-home --shell /bin/bash docker \\\n    && passwd docker -d \\\n    && adduser docker sudo\n\n# =====================================================================\n# Shiny Examples\n# =====================================================================\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    libxml2-dev \\\n    libssl-dev \\\n    libcairo2-dev \\\n    libxt-dev \\\n    libcurl4-openssl-dev \\\n    parallel && rm -rf /var/lib/apt/lists/*;\n\nRUN bash -c 'echo \"will cite\" | parallel --bibtex'\n\nRUN R -e \"install.packages(c('devtools', 'packrat'))\"\n\n# Install shiny-examples, and fix permissions for apps that require write\n# access to /shiny-examples\nRUN cd / && \\\n    wget -nv https://github.com/rstudio/shiny-examples/archive/master.zip && \\\n    unzip -x master.zip && \\\n    mv shiny-examples-master shiny-examples && \\\n    cd shiny-examples\n\n\n# Packages that need to be installed from GitHub\nRUN R -e 'source(\"/install_deps.R\", echo = TRUE)'\n\n\nCOPY deployApp.R /usr/local/bin\nCOPY set_public.sh /usr/local/bin\n"
}