{
  "startTime": 1674242149641,
  "endTime": 1674242149897,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Golang v1.6.4\n\nFROM alpine:3.5\n\nENV GOPATH=/go \\\n    PATH=/go/bin:/usr/local/go/bin:$PATH\n\nWORKDIR /go/src\n\nRUN apk --no-cache add --virtual build-dependencies bash gcc musl-dev openssl go git \\\n\n    # Install go 1.6\n    && GOLANG_VERSION=1.6.4 \\\n    && GOLANG_SRC_URL=https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz \\\n    && GOLANG_SRC_SHA256=8796cc48217b59595832aa9de6db45f58706dae68c9c7fbbd78c9fdbe3cd9032 \\\n    && export GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \\\n    && wget -q \"$GOLANG_SRC_URL\" -O golang.tar.gz \\\n    && echo \"$GOLANG_SRC_SHA256  golang.tar.gz\" | sha256sum -c - \\\n    && tar -C /usr/local -xzf golang.tar.gz \\\n    && wget -q https://raw.githubusercontent.com/docker-library/golang/master/1.6/alpine/no-pic.patch \\\n    && wget -q https://raw.githubusercontent.com/docker-library/golang/master/1.6/alpine/17847.patch \\\n    && cd /usr/local/go/src \\\n    && patch -p2 -i /go/src/no-pic.patch \\\n    && patch -p2 -i /go/src/17847.patch \\\n    && ./make.bash \\\n    && chmod -R 777 /go \\\n\n    # Clean up\n    && find /usr/local/go -depth -type d -name test -exec rm -rf {} \\; \\\n    && find /usr/local/go -depth -type d -name testdata -exec rm -rf {} \\; \\\n    && find / -depth -type f -name *_test.go -exec rm -f {} \\; \\\n    && find / -depth -type f -name *README* -exec rm -f {} \\; \\\n    && rm -rf /usr/local/go/doc /usr/local/go/api /usr/local/go/misc/trace \\\n        /go/src/* /var/cache/* /var/lib/apk* \\\n    && apk del --purge -r build-dependencies && rm golang.tar.gz\n\nCMD [\"go\", \"version\"]\n"
}