{
  "startTime": 1674246072298,
  "endTime": 1674246072784,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\nMAINTAINER Skiychan <dev@skiy.net>\n\nENV NGINX_VERSION 1.17.0\nENV PHP_VERSION 7.2.19\n\nRUN set -x && \\\n    yum install -y gcc \\\n    gcc-c++ \\\n    autoconf \\\n    automake \\\n    libtool \\\n    make \\\n    cmake && \\\n#Install PHP library\n## libmcrypt-devel DIY\n   rpm -ivh http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm && \\\n    yum install -y zlib \\\n    zlib-devel \\\n    openssl \\\n    openssl-devel \\\n    pcre-devel \\\n    libxml2 \\\n    libxml2-devel \\\n    libcurl \\\n    libcurl-devel \\\n    libpng-devel \\\n    libjpeg-devel \\\n    freetype-devel \\\n    libmcrypt-devel \\\n    openssh-server \\\n    python-setuptools && \\\n#Add user\n    mkdir -p /data/{www,phpextini,phpextfile} && \\\n    useradd -r -s /sbin/nologin -d /data/www -m -k no www && \\\n#Download nginx & php\n    mkdir -p /home/nginx-php && cd $_ && \\\n    curl -f -Lk https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz | gunzip | tar x -C /home/nginx-php && \\\n    curl -f -Lk https://php.net/distributions/php-$PHP_VERSION.tar.gz | gunzip | tar x -C /home/nginx-php && \\\n#Make install nginx\n    cd /home/nginx-php/nginx-$NGINX_VERSION && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/nginx \\\n    --user=www --group=www \\\n    --error-log-path=/var/log/nginx_error.log \\\n    --http-log-path=/var/log/nginx_access.log \\\n    --pid-path=/var/run/nginx.pid \\\n    --with-pcre \\\n    --with-http_ssl_module \\\n    --without-mail_pop3_module \\\n    --without-mail_imap_module \\\n    --with-http_gzip_static_module && \\\n    make && make install && \\\n#Make install php\n    cd /home/nginx-php/php-$PHP_VERSION && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/php \\\n    --with-config-file-path=/usr/local/php/etc \\\n    --with-config-file-scan-dir=/data/phpextini \\\n    --with-fpm-user=www \\\n    --with-fpm-group=www \\\n    --with-mysqli \\\n    --with-pdo-mysql \\\n    --with-openssl \\\n    --with-gd \\\n    --with-iconv \\\n    --with-zlib \\\n    --with-gettext \\\n    --with-curl \\\n    --with-png-dir \\\n    --with-jpeg-dir \\\n    --with-freetype-dir \\\n    --with-xmlrpc \\\n    --with-mhash \\\n    --enable-fpm \\\n    --enable-xml \\\n    --enable-shmop \\\n    --enable-sysvsem \\\n    --enable-inline-optimization \\\n    --enable-mbregex \\\n    --enable-mbstring \\\n    --enable-ftp \\\n    --enable-mysqlnd \\\n    --enable-pcntl \\\n    --enable-sockets \\\n    --enable-zip \\\n    --enable-soap \\\n    --enable-session \\\n    --enable-opcache \\\n    --enable-bcmath \\\n    --enable-exif \\\n    --enable-fileinfo \\\n    --disable-rpath \\\n    --enable-ipv6 \\\n    --disable-debug \\\n    --without-pear && \\\n    make && make install && \\\n#Install php-fpm\n    cd /home/nginx-php/php-$PHP_VERSION && \\\n    cp php.ini-production /usr/local/php/etc/php.ini && \\\n    cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf && \\\n    cp /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf && \\\n#Install supervisor\n    easy_install supervisor && \\\n    mkdir -p /var/{log/supervisor,run/{sshd,supervisord}} && \\\n#Clean OS\n    yum remove -y gcc \\\n    gcc-c++ \\\n    autoconf \\\n    automake \\\n    libtool \\\n    make \\\n    cmake && \\\n    yum clean all && \\\n    rm -rf /tmp/* /var/cache/{yum,ldconfig} /etc/my.cnf{,.d} && \\\n    mkdir -p --mode=0755 /var/cache/{yum,ldconfig} && \\\n    find /var/log -type f -delete && \\\n    rm -rf /home/nginx-php && \\\n#Change Mod from webdir\n    chown -R www:www /data/www && rm -rf /var/cache/yum\n\n#Add supervisord conf\nADD supervisord.conf /etc/\n\n#Create web folder\n# WEB Folder: /data/www\n# SSL Folder: /usr/local/nginx/conf/ssl\n# Vhost Folder: /usr/local/nginx/conf/vhost\n# php extfile ini Folder: /usr/local/php/etc/conf.d\n# php extfile Folder: /data/phpextfile\nVOLUME [\"/data/www\", \"/usr/local/nginx/conf/ssl\", \"/usr/local/nginx/conf/vhost\", \"/data/phpextini\", \"/data/phpextfile\"]\n\nADD index.php /data/www/\n\n#Add ext setting to image\n#ADD extini/ /data/phpextini/\n#ADD extfile/ /data/phpextfile/\n\n#Update nginx config\nADD nginx.conf /usr/local/nginx/conf/\n\n#Start\nADD start.sh /\nRUN chmod +x /start.sh\n\n#Set port\nEXPOSE 80 443\n\n#Start it\nENTRYPOINT [\"/start.sh\"]\n\n#Start web server\n#CMD [\"/bin/bash\", \"/start.sh\"]\n"
}