{
  "startTime": 1674245328891,
  "endTime": 1674245329755,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 171
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 171
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 5,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 171
      }
    }
  ],
  "repairedDockerfile": "# Docker demo image, as used on try.jupyter.org and tmpnb.org\n\nFROM jupyter/all-spark-notebook:c7fb6660d096\n\nMAINTAINER Jupyter Project <jupyter@googlegroups.com>\n\nUSER root\nRUN apt-get update \\\n && apt-get -y dist-upgrade --no-install-recommends \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n# BEGININCLUDE jupyter/datascience-notebook\n# Copyright (c) Jupyter Development Team.\n# Distributed under the terms of the Modified BSD License.\n# FROM jupyter/scipy-notebook\n\nLABEL maintainer=\"Jupyter Project <jupyter@googlegroups.com>\"\n\nUSER root\n\n# R pre-requisites\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    fonts-dejavu \\\n    tzdata \\\n    gfortran \\\n    gcc && apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Julia dependencies\n# install Julia packages in /opt/julia instead of $HOME\nENV JULIA_PKGDIR=/opt/julia\nENV JULIA_VERSION=0.6.0\n\nRUN mkdir /opt/julia-${JULIA_VERSION} && \\\n    cd /tmp && \\\n    wget -q https://julialang.s3.amazonaws.com/bin/linux/x64/`echo $JULIA_VERSION | cut -d. -f 1,2`/julia-${JULIA_VERSION}-linux-x86_64.tar.gz && \\\n    echo \"3a27ea78b06f46701dc4274820d9853789db205bce56afdc7147f7bd6fa83e41  *julia-${JULIA_VERSION}-linux-x86_64.tar.gz\" | sha256sum -c - && \\\n    tar xzf julia-${JULIA_VERSION}-linux-x86_64.tar.gz -C /opt/julia-${JULIA_VERSION} --strip-components=1 && \\\n    rm /tmp/julia-${JULIA_VERSION}-linux-x86_64.tar.gz\nRUN ln -fs /opt/julia-*/bin/julia /usr/local/bin/julia\n\n# Show Julia where conda libraries are \\\nRUN mkdir /etc/julia && \\\n    echo \"push!(Libdl.DL_LOAD_PATH, \\\"$CONDA_DIR/lib\\\")\" >> /etc/julia/juliarc.jl && \\\n    # Create JULIA_PKGDIR \\\n    mkdir $JULIA_PKGDIR && \\\n    chown $NB_USER $JULIA_PKGDIR && \\\n    fix-permissions $JULIA_PKGDIR\n\nUSER $NB_USER\n\n# R packages including IRKernel which gets installed globally.\nRUN conda config --system --append channels r && \\\n    conda install --quiet --yes \\\n    'rpy2=2.8*' \\\n    'r-base=3.3.2' \\\n    'r-irkernel=0.7*' \\\n    'r-plyr=1.8*' \\\n    'r-devtools=1.12*' \\\n    'r-tidyverse=1.0*' \\\n    'r-shiny=0.14*' \\\n    'r-rmarkdown=1.2*' \\\n    'r-forecast=7.3*' \\\n    'r-rsqlite=1.1*' \\\n    'r-reshape2=1.4*' \\\n    'r-nycflights13=0.2*' \\\n    'r-caret=6.0*' \\\n    'r-rcurl=1.95*' \\\n    'r-crayon=1.3*' \\\n    'r-randomforest=4.6*' && \\\n    conda clean -tipsy && \\\n    fix-permissions $CONDA_DIR\n\n# Add Julia packages\n# Install IJulia as jovyan and then move the kernelspec out\n# to the system share location. Avoids problems with runtime UID change not\n# taking effect properly on the .local folder in the jovyan home dir.\nRUN julia -e 'Pkg.init()' && \\\n    julia -e 'Pkg.update()' && \\\n    julia -e 'Pkg.add(\"HDF5\")' && \\\n    julia -e 'Pkg.add(\"Gadfly\")' && \\\n    julia -e 'Pkg.add(\"RDatasets\")' && \\\n    julia -e 'Pkg.add(\"IJulia\")' && \\\n    # Precompile Julia packages \\\n    julia -e 'using HDF5' && \\\n    julia -e 'using Gadfly' && \\\n    julia -e 'using RDatasets' && \\\n    julia -e 'using IJulia' && \\\n    # move kernelspec out of home \\\n    mv $HOME/.local/share/jupyter/kernels/julia* $CONDA_DIR/share/jupyter/kernels/ && \\\n    chmod -R go+rx $CONDA_DIR/share/jupyter && \\\n    rm -rf $HOME/.local && \\\n    fix-permissions $JULIA_PKGDIR $CONDA_DIR/share/jupyter\n# ENDINCLUDE jupyter/datascience-notebook\n\n\n# Install system libraries first as root\nUSER root\n\n# The Glorious Glasgow Haskell Compiler\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends software-properties-common && \\\n    add-apt-repository -y ppa:hvr/ghc && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y cabal-install-1.24 ghc-8.0.2 happy-1.19.5 alex-3.1.7 && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# IHaskell dependencies\nRUN apt-get install -y --no-install-recommends zlib1g-dev libzmq3-dev libtinfo-dev libcairo2-dev libpango1.0-dev && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Ruby dependencies\nRUN apt-get install -y --no-install-recommends ruby ruby-dev libtool autoconf automake gnuplot-nox libsqlite3-dev libatlas-base-dev libgsl0-dev libmagick++-dev imagemagick && \\\n    ln -s /usr/bin/libtoolize /usr/bin/libtool && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n# We need to pin activemodel to 4.2 while we have ruby < 2.2\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system --no-document && \\\n    gem install --no-document 'activemodel:~> 4.2' sciruby-full && rm -rf /root/.gem;\n\n# Perl 6\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y build-essential \\\n  && git clone https://github.com/rakudo/rakudo.git -b 2017.12 \\\n  && cd rakudo && perl Configure.pl --prefix=/usr --gen-moar --gen-nqp --backends=moar \\\n  && make && make install && cd .. && rm -rf rakudo \\\n  && git clone https://github.com/ugexe/zef.git && cd zef && perl6 -Ilib bin/zef install . \\\n  && export PATH=$PATH:/usr/share/perl6/site/bin \\\n  && zef -v install Jupyter::Kernel SVG::Plot --force-test \\\n  && jupyter-kernel.p6 --generate-config && rm -rf /var/lib/apt/lists/*;\n\nENV PATH /usr/share/perl6/site/bin:$PATH\n\n# Now switch to $NB_USER for all conda and other package manager installs\nUSER $NB_USER\n\nENV PATH /home/$NB_USER/.cabal/bin:/opt/cabal/1.24/bin:/opt/ghc/8.0.2/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.7/bin:$PATH\n\n# IRuby\nRUN iruby register\n\n# IHaskell + IHaskell-Widgets + Dependencies for examples\nRUN cabal update && \\\n    CURL_CA_BUNDLE='/etc/ssl/certs/ca-certificates.crt' curl -f 'https://www.stackage.org/lts-9.21/cabal.config?global=true' >> ~/.cabal/config && \\\n    cabal install cpphs && \\\n    cabal install gtk2hs-buildtools && \\\n    cabal install ihaskell-0.9.0.2 --reorder-goals && \\\n    cabal install \\\n        # ihaskell-widgets-0.2.3.1 \\ temporarily disabled because installation fails\n        HTTP Chart Chart-cairo && \\\n    ihaskell install --prefix=$CONDA_DIR && \\\n    rm -fr $(echo ~/.cabal/bin/* | grep -iv ihaskell) ~/.cabal/packages ~/.cabal/share/doc ~/.cabal/setup-exe-cache ~/.cabal/logs\n\n# Extra Kernels\nRUN pip install --no-cache-dir bash_kernel && \\\n    python -m bash_kernel.install --sys-prefix\n\n# Clone featured notebooks before adding local content to avoid recloning\n# everytime something changes locally\nRUN mkdir -p /home/$NB_USER/communities && \\\n    mkdir -p /home/$NB_USER/featured\nRUN git clone --depth 1 https://github.com/jvns/pandas-cookbook.git /home/$NB_USER/featured/pandas-cookbook/\nRUN git clone --depth 1 https://github.com/gibiansky/IHaskell.git /home/$NB_USER/IHaskell/ && \\\n    mv /home/$NB_USER/IHaskell/ihaskell-display/ihaskell-widgets/Examples /home/$NB_USER/featured/ihaskell-widgets && \\\n    rm -r /home/$NB_USER/IHaskell\n\n# Add local content, starting with notebooks and datasets which are the largest\n# so that later, smaller file changes do not cause a complete recopy during\n# build\nCOPY notebooks/ /home/$NB_USER/\nCOPY datasets/ /home/$NB_USER/datasets/\n\n# Switch back to root for permission fixes, conversions, and trust. Make sure\n# trust is done as $NB_USER so that the signing secret winds up in the $NB_USER\n# profile, not root's\nUSER root\n\n# Convert notebooks to the current format and trust them\nRUN find /home/$NB_USER -name '*.ipynb' -exec jupyter nbconvert --to notebook {} --output {} \\; && \\\n    chown -R $NB_USER:users /home/$NB_USER && \\\n    sudo -u $NB_USER env \"PATH=$PATH\" find /home/$NB_USER -name '*.ipynb' -exec jupyter trust {} \\;\n\n# Finally, add the site specific tmpnb.org / try.jupyter.org configuration.\n# These should probably be split off into a separate docker image so that others\n# can reuse the very expensive build of all the above with their own site\n# customization.\n\n# Add the templates\nCOPY resources/templates/ /srv/templates/\nRUN chmod a+rX /srv/templates\n\nUSER $NB_USER\n\n# Install our custom.js\nCOPY resources/custom.js /home/$NB_USER/.jupyter/custom/\n\n# Append tmpnb specific options to the base config\nCOPY resources/jupyter_notebook_config.partial.py /tmp/\nRUN cat /tmp/jupyter_notebook_config.partial.py >> /home/$NB_USER/.jupyter/jupyter_notebook_config.py && \\\n    rm /tmp/jupyter_notebook_config.partial.py\n"
}