{
  "startTime": 1674239066599,
  "endTime": 1674239066793,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 5,
        "columnStart": 29,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 29,
        "columnStart": 29,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM maven:3-jdk-8 as builder\n\nRUN rm /dev/random && ln -s /dev/urandom /dev/random \\\n    && apt-get update -qq && apt-get install --no-install-recommends -qqy \\\n        unzip \\\n        git \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && echo '{ \"allow_root\": true }' > /root/.bowerrc\n\nCOPY . /tmp/winery\nWORKDIR /tmp/winery\nRUN mvn package -DskipTests\nRUN unzip /tmp/winery/org.eclipse.winery.repository.rest/target/winery.war -d /opt/winery \\\n    && sed -i \"sXbpmn4toscamodelerBaseURI=.*Xbpmn4toscamodelerBaseURI=/winery-workflowmodelerX\" /opt/winery/WEB-INF/classes/winery.properties \\\n    && sed -i \"sX#repositoryPath=.*XrepositoryPath=/var/opentosca/repositoryX\" /opt/winery/WEB-INF/classes/winery.properties\n\n\nFROM tomcat:8.5.31\nLABEL maintainer = \"Oliver Kopp <kopp.dev@gmail.com>, Michael Wurster <miwurster@gmail.com>, Lukas Harzenetter <lharzenetter@gmx.de>\"\n\nENV WINERY_REPOSITORY_URL=\"\"\nENV WINERY_HEAP_MAX=2048m\nENV WINERY_JMX_ENABLED=\"\"\n\nRUN rm /dev/random && ln -s /dev/urandom /dev/random \\\n    && curl -f -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash \\\n    && apt-get update -qq && apt-get install --no-install-recommends -qqy \\\n        git \\\n        git-lfs \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf ${CATALINA_HOME}/webapps/* \\\n    && sed -ie \"s/securerandom.source=file:\\/dev\\/random/securerandom.source=file:\\/dev\\/.\\/urandom/g\" /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security \\\n    && mkdir -p /var/opentosca/repository \\\n    && cd /var/opentosca/repository \\\n    && git init \\\n    && git config core.fscache true \\\n    && git lfs install\n\nCOPY --from=builder /opt/winery ${CATALINA_HOME}/webapps/winery\nCOPY --from=builder /tmp/winery/org.eclipse.winery.frontends/target/tosca-management.war ${CATALINA_HOME}/webapps/ROOT.war\nCOPY --from=builder /tmp/winery/org.eclipse.winery.frontends/target/topologymodeler.war ${CATALINA_HOME}/webapps/winery-topologymodeler-ui.war\nCOPY --from=builder /tmp/winery/org.eclipse.winery.frontends/target/workflowmodeler.war ${CATALINA_HOME}/webapps/winery-workflowmodeler.war\n\nEXPOSE 8080\n\nCMD if [ ! \"x${WINERY_REPOSITORY_URL}\" = \"x\" ]; then rm -rf /var/opentosca/repository && git clone ${WINERY_REPOSITORY_URL} /var/opentosca/repository; fi \\\n    && echo 'export CATALINA_OPTS=\"-Djava.security.egd=file:/dev/./urandom -Xms512m -Xmx${WINERY_HEAP_MAX} -XX:MaxPermSize=256m\"' > ${CATALINA_HOME}/bin/setenv.sh \\\n    && if [ ! \"x${WINERY_JMX_ENABLED}\" = \"x\" ]; then echo 'export CATALINA_OPTS=\"${CATALINA_OPTS} -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.rmi.port=9010 -Djava.rmi.server.hostname=0.0.0.0 -Dcom.sun.management.jmxremote.ssl=false\"' >> ${CATALINA_HOME}/bin/setenv.sh; fi \\\n    && chmod a+x ${CATALINA_HOME}/bin/setenv.sh \\\n    && ${CATALINA_HOME}/bin/catalina.sh run\n"
}