{
  "startTime": 1674241011492,
  "endTime": 1674241011628,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 103
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_IMAGE_TAG\nFROM php:$PHP_IMAGE_TAG\nARG WORDPRESS_DB_PASSWORD\nENV WORDPRESS_DB_PASSWORD=$WORDPRESS_DB_PASSWORD\nARG WORDPRESS_VERSION\nRUN echo \"http://dl-3.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories &&\\\n    apk add --update --no-cache subversion mysql mysql-client git bash g++ make autoconf && \\\n    set -ex; \\\n    docker-php-ext-install mysqli pdo pdo_mysql pcntl \\\n    && php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n    && php composer-setup.php --install-dir=/usr/bin --filename=composer \\\n    && docker-php-source extract \\\n    && pecl install xdebug-2.5.5 \\\n    && docker-php-ext-enable xdebug \\\n    && docker-php-source delete \\\n    && echo \"xdebug.remote_enable=on\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.remote_autostart=off\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.remote_port=9000\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.remote_handler=dbgp\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.remote_connect_back=0\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n    && rm -rf /tmp/* \\\n    && curl -f -L https://github.com/vishnubob/wait-for-it/raw/master/wait-for-it.sh > /tmp/wait-for-it.sh \\\n    && chmod +x /tmp/wait-for-it.sh\nWORKDIR /tmp\nCOPY ./bin/install-wp-tests.sh /tmp/install-wp-tests.sh\nRUN /tmp/install-wp-tests.sh wordpress_test root $WORDPRESS_DB_PASSWORD mysql $WORDPRESS_VERSION\nCOPY ./db-error.php /tmp/wordpress/wp-content/db-error.php\nWORKDIR /wordpress\nCOPY composer.json /wordpress\nRUN composer install\nCOPY . /wordpress\nCMD /tmp/wait-for-it.sh mysql:3306 -- bin/install-db.sh wordpress_test root $WORDPRESS_DB_PASSWORD mysql\n"
}