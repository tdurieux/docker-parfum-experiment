{
  "startTime": 1674250510833,
  "endTime": 1674250511020,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 1,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 19,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 1,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 1,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 19,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 1,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "FROM kalilinux/kali-linux-docker\n\n# NOTE: This Dockerfile is used to rebuild Jok3r Docker Image from scratch from\n# kalilinux/kali-linux-docker. It is recommended to directly pull koutto/jok3r image instead\n\nLABEL maintainer=\"xst3nz@gmail.com\"\nLABEL description=\"Docker Image for Jok3r - Network and Web Pentest Framework \\\n* Based on Kali Linux, \\\n* All dependencies installed, \\\n* All tools in toolbox installed.\"\n\n# Will not prompt for questions\nENV DEBIAN_FRONTEND noninteractive\n\nWORKDIR /root\n\nRUN apt-get update && \\\n    apt-get -y upgrade && \\\n    apt-get -y dist-upgrade && \\\n    apt-get install --no-install-recommends -y locales git gnupg2 && \\\n    echo 'export LC_ALL=\"en_US.UTF-8\"' >> /root/.bashrc && \\\n    echo 'export LANG=\"en_US.UTF-8\"' >> /root/.bashrc && \\\n    echo 'export LANGUAGE=\"en_US:en\"' >> /root/.bashrc && \\\n    echo 'export PS1=\"\\[$(tput bold)\\]\\[$(tput setaf 2)\\]\\u@jok3r-docker:\\[$(tput setaf 4)\\]\\w\\\\$\\[$(tput sgr0)\\]\\[$(tput sgr0)\\] \"' >> /root/.bashrc && \\\n    echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen && \\\n    git clone https://github.com/koutto/jok3r.git && rm -rf /var/lib/apt/lists/*;\n\n\n# Add Sublime text for convenience for editing files if necessary\n# Will require to run with the following arguments to use GUI\n# sudo docker run -i -t -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix koutto/jok3r\n# and on host: xhost +\nRUN wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | apt-key add - && \\\n\tapt-get install --no-install-recommends -y apt-transport-https && \\\n\techo \"deb https://download.sublimetext.com/ apt/stable/\" | tee /etc/apt/sources.list.d/sublime-text.list && \\\n\tapt-get update && apt-get install --no-install-recommends -y sublime-text && rm -rf /var/lib/apt/lists/*;\n\n# Set the locale\nRUN locale-gen en_US.UTF-8 \nENV LANG en_US.UTF-8 \nENV LANGUAGE en_US:en \nENV LC_ALL en_US.UTF-8 \nENV PYTHONIOENCODING utf-8\n\nWORKDIR /root/jok3r\n\nRUN ./install-all.sh\n\n\n"
}