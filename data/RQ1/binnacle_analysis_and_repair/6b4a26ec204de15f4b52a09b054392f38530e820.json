{
  "startTime": 1674243361362,
  "endTime": 1674243361478,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# multi-stage build\n## builder stage\nFROM golang:alpine as builder\nRUN apk --update --no-cache add make git\nCOPY ./ /go/src/github.com/kubernauts/tk8\nWORKDIR /go/src/github.com/kubernauts/tk8\nRUN go get -u . && make bin\n\n## os stage\nFROM alpine\n#To track exactly which commit is the image built off\nARG VCS_REF=dev\nARG BUILD_DATE=null\n#This will be overridden by the build args in hooks folder\nARG TERRVERSION=0.11.7\nARG KUBECTLVERSION=v1.10.5\n\n#Label Schemas to be used for metadata as described at http://label-schema.org/\nLABEL  org.label-schema.description=\"CLI to deploy kubernetes using kubespray and also install additional addons.\" \\\n       org.label-schema.usage=\"docker run kubernauts/tk8:latest [command]\" \\\n       org.label-schema.docker.cmd=\"docker run kubernauts/tk8:latest [command]\" \\\n       org.label-schema.build-date=$BUILD_DATE \\\n       org.label-schema.name=\"kubernauts/tk8\" \\\n       org.label-schema.schema-version=\"1.0.0-rc.1\" \\\n       org.label-schema.url=\"https://github.com/kubernauts/tk8\" \\\n       org.label-schema.vcs-ref=$VCS_REF \\\n       org.label-schema.vcs-url=\"https://github.com/kubernauts/tk8\" \\\n       org.label-schema.vendor=\"kubernauts\"\n\nCOPY --from=builder /go/src/github.com/kubernauts/tk8/tk8 /usr/local/bin/tk8\n\nRUN apk --update add \\\n    python \\\n    py-pip \\\n    git \\\n    gcc \\\n    ca-certificates \\\n    py-netaddr \\\n    python-dev \\\n    libffi-dev \\\n    openssl-dev \\\n    build-base \\\n    openssh \\\n    curl \\\n    tar \\\n    gzip \\\n    --virtual build-dependencies \\\n    --no-cache openssh\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir --upgrade cffi\nRUN pip install --no-cache-dir --upgrade ansible\nRUN pip install --no-cache-dir --upgrade ansible-modules-hashivault\n\nRUN chmod +x /usr/local/bin/tk8\n\n## Install terraform\n\nRUN wget https://releases.hashicorp.com/terraform/${TERRVERSION}/terraform_${TERRVERSION}_linux_amd64.zip \\\n    && unzip terraform_${TERRVERSION}_linux_amd64.zip -d /usr/local/bin/ \\\n    && rm terraform_${TERRVERSION}_linux_amd64.zip\n\n# Install kubectl\nRUN curl -f -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBECTLVERSION}/bin/linux/amd64/kubectl && \\\n  chmod +x /usr/bin/kubectl\n\nRUN mkdir /tk8\n\nWORKDIR /tk8\n\nENTRYPOINT [ \"/usr/local/bin/tk8\" ]\n"
}