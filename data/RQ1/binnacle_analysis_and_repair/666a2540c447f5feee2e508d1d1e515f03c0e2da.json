{
  "startTime": 1674236152369,
  "endTime": 1674236152502,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 2,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:11-stretch\n\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update --no-install-recommends \\\n && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    python-dev \\\n    python-pip \\\n    zip \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN pip install --no-cache-dir setuptools==39.2.0\nRUN pip install --no-cache-dir cffi==1.10.0\nRUN pip install --no-cache-dir \\\n  Fabric==1.13.2 \\\n  Jinja2==2.9.6 \\\n  argparse==1.4.0 \\\n  awscli==1.15.32 \\\n  pycrypto==2.6.1 \\\n  requests==2.18.4\n\nRUN npm install -g npm@latest yarn && npm cache clean --force;\n\nRUN cd /tmp && \\\n  wget https://www.openssl.org/source/old/0.9.x/openssl-0.9.8zg.tar.gz && \\\n  tar zxf openssl-0.9.8zg.tar.gz && \\\n  cd openssl-0.9.8zg && \\\n  ./config && \\\n  make && \\\n  make install && rm openssl-0.9.8zg.tar.gz\nENV PATH \"/usr/local/ssl/bin:$PATH\"\n\nARG UID\nARG GID\nRUN groupadd jenkins -g $GID \\\n && useradd -ms /bin/bash jenkins -u $UID -g $GID\n\n# TODO: Also make use of a caching directory\nUSER jenkins\n# Cache npm install in docker\nCOPY package.json /home/jenkins/\nCOPY package-lock.json /home/jenkins/\nRUN cd /home/jenkins/ && npm ci\n"
}