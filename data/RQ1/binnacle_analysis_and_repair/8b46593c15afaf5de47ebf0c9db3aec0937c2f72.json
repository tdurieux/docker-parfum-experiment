{
  "startTime": 1674241092959,
  "endTime": 1674241093046,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:2.7\nMAINTAINER Ulrich Petri <ulrich@brainbot.com>\n\nARG SOLC_RELEASE=0.4.21\n\nRUN \\\n    apt update && \\\n    apt install --no-install-recommends -y build-essential curl git libffi-dev libgmp-dev libssl-dev libtool pkg-config apt-transport-https lsb-release && \\\n    apt update && \\\n    apt install -y --no-install-recommends nodejs && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    curl -f -L -o /usr/bin/solc https://github.com/ethereum/solidity/releases/download/v${SOLC_RELEASE}/solc-static-linux && \\\n    chmod +x /usr/bin/solc\n\n# These are defined down here to avoid rebuilding the \"apt\" part on repo/branch change\nARG REPO=raiden-network/raiden\nARG BRANCH=master\n\n# This is a \"hack\" to automatically invalidate the cache in case there are new commits\nADD https://api.github.com/repos/${REPO}/commits/${BRANCH} /dev/null\nRUN \\\n    echo Cloning ${REPO}@${BRANCH} && \\\n    git clone -b ${BRANCH} https://github.com/${REPO}.git /app && \\\n    pip --version && \\\n    pip install --no-cache-dir -r /app/requirements.txt -e /app && \\\n    pip install --no-cache-dir python-logstash && \\\n    rm -rf /root/.cache/pip\n\nWORKDIR /app\n\nADD run_raiden.py /usr/local/bin\nADD raiden /usr/local/bin\nADD raiden_echo_node /usr/local/bin\n\n\nENTRYPOINT [\"/usr/local/bin/run_raiden.py\"]\n"
}