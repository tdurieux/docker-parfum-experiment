{
  "startTime": 1674250867690,
  "endTime": 1674250868343,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 147
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 51,
        "columnEnd": 62
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 50,
        "columnEnd": 77
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:{{PHP_VERSION}}\nLABEL maintainer=\"RÃ©mi Marseille <marseille@ekino.com>\"\n\nARG APCU_VERSION\nARG CI_HELPER_VERSION\nARG COMPOSER_VERSION\nARG MEMCACHED_VERSION\nARG MODD_VERSION\nARG REDIS_VERSION\nARG SECURITY_CHECKER_VERSION\nARG SSH2_VERSION\nARG XDEBUG_VERSION\n\n# iconv issue https://github.com/docker-library/php/issues/240\n\nENV COMPOSER_NO_INTERACTION=1 \\\n    TERM=xterm \\\n    LD_PRELOAD=\"/usr/lib/preloadable_libiconv.so php\" \\\n    PHP_CPPFLAGS=\"$PHP_CPPFLAGS -std=c++11\"\n\nRUN echo \"Starting ...\" && \\\n    echo \"@edge-main https://nl.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories && \\\n    echo \"@edge-community http://nl.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories && \\\n    apk add --update --upgrade alpine-sdk apk-tools@edge-main autoconf bash bzip2 cyrus-sasl-dev curl freetype-dev gettext git \\\n        gnu-libiconv@edge-community icu-dev@edge-main libjpeg-turbo-dev libmcrypt-dev libmemcached-dev libpng-dev libssh2-dev \\\n        libxml2-dev make openssh-client patch postgresql-dev rsync tzdata && \\\n    echo \"Done base install!\" && \\\n\n    echo \"Install CI Helper\" && \\\n    curl -f -sSL https://github.com/rande/gitlab-ci-helper/releases/download/${CI_HELPER_VERSION}/alpine-amd64-gitlab-ci-helper -o /usr/bin/ci-helper && \\\n    chmod 755 /usr/bin/ci-helper && \\\n    echo \"Done install CI Helper\" && \\\n\n    echo \"Install Modd\" && \\\n    curl -f -sSL https://github.com/cortesi/modd/releases/download/v${MODD_VERSION}/modd-${MODD_VERSION}-linux64.tgz | tar -xOvzf - modd-${MODD_VERSION}-linux64/modd > /usr/bin/modd && \\\n    chmod 755 /usr/bin/modd && \\\n    echo \"Done Install Modd\" && \\\n\n    echo \"Starting PHP\" && \\\n    docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && \\\n    docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) bcmath exif gd intl pcntl pdo_mysql pdo_pgsql pgsql soap sockets zip && \\\n    pecl install apcu-${APCU_VERSION} && \\\n    pecl install memcached-${MEMCACHED_VERSION} && \\\n    docker-php-ext-enable memcached && \\\n    docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql && \\\n    pecl install ssh2-${SSH2_VERSION} && \\\n    docker-php-ext-enable ssh2 && \\\n    echo -e \"\\\ndate.timezone=${PHP_TIMEZONE:-UTC} \\n\\\nshort_open_tag=Off \\n\\\nextension=apcu.so \\n\\\nzend_extension=opcache.so \\n\\\n\" > /usr/local/etc/php/php.ini && \\\n\n    curl -f -sSL https://getcomposer.org/download/${COMPOSER_VERSION}/composer.phar -o /usr/local/bin/composer && chmod a+x /usr/local/bin/composer && \\\n    curl -f -sSL https://get.sensiolabs.org/php-cs-fixer.phar -o /usr/local/bin/php-cs-fixer && chmod a+x /usr/local/bin/php-cs-fixer && \\\n    curl -f -sSL https://get.sensiolabs.org/security-checker-v${SECURITY_CHECKER_VERSION}.phar -o /usr/local/bin/security-checker && chmod a+x /usr/local/bin/security-checker && \\\n    composer global require \"hirak/prestissimo:^0.3\" && \\\n\n    curl -f -sSL https://github.com/phpredis/phpredis/archive/${REDIS_VERSION}.tar.gz | tar xz -C /tmp && \\\n    cd /tmp/phpredis-${REDIS_VERSION} && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n    echo \"extension=redis.so\" > /usr/local/etc/php/conf.d/redis.ini && \\\n\n    curl -f -sSL https://github.com/xdebug/xdebug/archive/${XDEBUG_VERSION}.tar.gz | tar xz -C /tmp && \\\n    cd /tmp/xdebug-${XDEBUG_VERSION} && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-xdebug && make && make install && \\\n    echo \"zend_extension=xdebug.so\" > /usr/local/etc/php/conf.d/xdebug.ini && \\\n\n    mkdir -p /tmp/blackfire-probe && \\\n    version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") && \\\n    curl -f -A \"Docker\" -o /tmp/blackfire-probe/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/alpine/amd64/$version && \\\n    tar zxpf /tmp/blackfire-probe/blackfire-probe.tar.gz -C /tmp/blackfire-probe && \\\n    mv /tmp/blackfire-probe/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so && \\\n    printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > $PHP_INI_DIR/conf.d/blackfire.ini && \\\n\n    mkdir -p /tmp/blackfire-client && \\\n    curl -f -A \"Docker\" -L https://blackfire.io/api/v1/releases/client/linux_static/amd64 | tar zxp -C /tmp/blackfire-client && \\\n    mv /tmp/blackfire-client/blackfire /usr/bin/blackfire && \\\n\n    echo \"Done PHP!\" && \\\n\n    echo \"Starting AWS\" && \\\n    apk add groff py-pip && \\\n    pip install --no-cache-dir -q -U awscli && \\\n    echo \"Done AWS!\" && \\\n\n    echo \"Adding an up to date mime-types definition file\" && \\\n    curl -f -sSL https://salsa.debian.org/debian/mime-support/raw/master/mime.types -o /etc/mime.types && \\\n\n    echo \"Cleaning files!\" && \\\n    apk del --purge alpine-sdk autoconf && \\\n    rm -rf /tmp/* /usr/share/doc /var/cache/apk/* && \\\n\n    echo \"Done!\" && rm /tmp/blackfire-probe/blackfire-probe.tar.gz\n"
}