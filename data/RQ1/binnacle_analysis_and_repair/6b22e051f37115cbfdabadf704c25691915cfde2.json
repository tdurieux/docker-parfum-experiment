{
  "startTime": 1674237100771,
  "endTime": 1674237101021,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 8,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 8,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 13,
        "columnStart": 8,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 13,
        "columnStart": 8,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile to build mxnet on Ubuntu_16.04 (GPU)\n\nFROM nvidia/cuda-ppc64le:9.0-cudnn7-devel-ubuntu16.04\n\n# Building MXNet from source is a 2 step process.\n   # 1.Build the MXNet core shared library, libmxnet.so, from the C++ sources.\n   # 2.Build the language specific bindings. Example - Python bindings, Scala bindings.\n\nRUN apt-get update -y && \\\n\t# 1. ------------ Build the MXNet core shared library ------------------\n        # libraries for building mxnet c++ core on ubuntu\n        apt-get install --no-install-recommends -y \\\n        build-essential git libopenblas-dev liblapack-dev libopencv-dev \\\n        libcurl4-openssl-dev libgtest-dev cmake wget unzip libatlas-base-dev python-opencv \\\n        && \\\n        cd /usr/src/gtest && \\\n        cmake CMakeLists.txt && \\\n        make && \\\n        cp *.a /usr/lib \\\n        && \\\n\tcd / && \\\n\t# Download MXNet sources and build MXNet core shared library\n        git clone --recursive https://github.com/apache/incubator-mxnet.git mxnet && \\\n        cd mxnet && \\\n\tgit clone https://github.com/NVlabs/cub && \\\n        git checkout 1.0.0 && \\\n        git submodule update --recursive && \\\n\tmake -j $(nproc) USE_OPENCV=1 USE_BLAS=openblas USE_CUDA=1 USE_CUDA_PATH=/usr/local/cuda USE_CUDNN=1 USE_PROFILER=1 && \\\n        rm -r build \\\n        && \\\n\t# 2. -------------- Build the MXNet Python binding ------------------\n        # install libraries for mxnet's python package on ubuntu\n        apt-get update && \\\n        apt-get install --no-install-recommends -y python-dev python-setuptools python-numpy python-pip && \\\n\t# Install the MXNet Python binding.\n        cd python && \\\n        pip install --no-cache-dir --upgrade pip && \\\n        pip install --no-cache-dir -e . && \\\n\tapt-get purge -y build-essential git libcurl4-openssl-dev libgtest-dev cmake wget unzip libatlas-base-dev  python-opencv && \\\n\tapt-get autoremove -y && \\\n\tapt-get clean && rm -rf /var/lib/apt/lists/*;\n\nENV PYTHONPATH=/mxnet/python\nCMD  bash\n\n\n# Install Graphviz. (Optional, needed for graph visualization using mxnet.viz package).\n # apt-get install graphviz -y\n # pip install graphviz\n\n# Running the unit tests (run the following from MXNet root directory)\n # pip install pytest nose numpy==1.12.0\n # apt-get install -y python-scipy\n # python -m pytest -v tests/python/unittest\n # python -m pytest -v tests/python/train\n\n"
}