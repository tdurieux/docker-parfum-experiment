{
  "startTime": 1674246138632,
  "endTime": 1674246138754,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\nMAINTAINER Denis Antyukhov <aphex@mit.edu>\n\nENV CUDA_ROOT=/usr/local/cuda \\\n    TF_BINARY_URL=\"https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-linux-gpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=gpu-linux/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow_gpu-0.12.0rc0-cp27-none-linux_x86_64.whl\"\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        software-properties-common \\\n        build-essential \\\n        curl \\\n        git \\\n        wget \\\n        libfreetype6-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        rsync \\\n        unzip \\\n        libhdf5-dev \\\n        zip \\\n        zlib1g-dev \\\n        libhdf5-dev \\\n        libyaml-dev \\\n        gfortran \\\n        libopenblas-dev \\\n        liblapack-dev \\\n        nano \\\n        htop \\\n        screen \\\n        bash-completion \\\n        python-dev \\\n        python-nose \\\n        python-numpy \\\n        python-h5py \\\n        python-yaml \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n\n#################\n# python2 stuff #\n#################\n\nRUN wget --no-check-certificate https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py && \\\n    pip --no-cache-dir install \\\n        tqdm \\\n        click \\\n        ipykernel \\\n        jupyter \\\n        matplotlib \\\n        cython \\\n        nltk \\\n        scikit-learn \\\n        plotly \\\n        pandas \\\n        xlrd \\\n        lxml \\\n        emoji \\\n        python_telegram_bot\n\nRUN pip install --no-cache-dir --upgrade ${TF_BINARY_URL} --user\n\nVOLUME [\"/lm_1b\", \"/data\", \"/output\"]\n"
}