{
  "startTime": 1674253011974,
  "endTime": 1674253012409,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 12,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 8,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 8,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# Set up the non-root user\nRUN apt-get update \\\n    && apt-get -y --no-install-recommends install sudo \\\n    && useradd -ms /bin/bash user && echo \"user:user\" | chpasswd && adduser user sudo && rm -rf /var/lib/apt/lists/*;\n\nADD /docker/sudoers.txt /etc/sudoers\n\nENV ECLIPSER_HOME /home/user/Eclipser\n\nWORKDIR /home/user\n\nCOPY . /home/user/deepstate\n\n# Eclipser requires deb-src entries\nRUN echo 'deb-src http://archive.ubuntu.com/ubuntu/ bionic main restricted \\n\\\ndeb-src http://archive.ubuntu.com/ubuntu/ bionic-updates main restricted \\n\\\ndeb-src http://archive.ubuntu.com/ubuntu/ bionic universe \\n\\\ndeb-src http://archive.ubuntu.com/ubuntu/ bionic-updates universe \\n\\\ndeb-src http://archive.ubuntu.com/ubuntu/ bionic multiverse \\n\\\ndeb-src http://archive.ubuntu.com/ubuntu/ bionic-updates multiverse \\n\\\ndeb-src http://archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse \\n\\\ndeb-src http://archive.canonical.com/ubuntu bionic partner \\n\\\ndeb-src http://security.ubuntu.com/ubuntu/ bionic-security main restricted \\n\\\ndeb-src http://security.ubuntu.com/ubuntu/ bionic-security universe \\n\\\ndeb-src http://security.ubuntu.com/ubuntu/ bionic-security multiverse' >> /etc/apt/sources.list\n\n# Install Eclipser dependencies\nRUN apt-get update \\\n    && apt-get -y build-dep qemu \\\n    && apt-get install --no-install-recommends -y libtool \\\n    libtool-bin wget automake autoconf \\\n    bison gdb git \\\n    && wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb \\\n    && dpkg -i packages-microsoft-prod.deb \\\n    && apt-get install --no-install-recommends -y apt-transport-https \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y dotnet-sdk-2.2 && rm -rf /var/lib/apt/lists/*;\n\n# Install DeepState/AFL/libFuzzer dependencies\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y build-essential \\\n    && apt-get install --no-install-recommends -y clang \\\n    gcc-multilib g++-multilib cmake \\\n    python3-setuptools libffi-dev z3 python3-pip \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN chown -R user:user /home/user\n\nUSER user\n\n# Install AFL\nRUN wget https://lcamtuf.coredump.cx/afl/releases/afl-latest.tgz \\\n    && tar -xzvf afl-latest.tgz \\\n    && rm -rf afl-latest.tgz \\\n    && cd afl-2.52b/ \\\n    && make \\\n    && sudo make install\n\n# Install Eclipser\nRUN git clone https://github.com/SoftSec-KAIST/Eclipser \\\n    && cd Eclipser \\\n    && make \\\n    && cd ../\n\n# Install DeepState using a few different compilers for AFL/libFuzzer/Eclipser+normal\nRUN cd deepstate \\\n    && rm -Rf CMakeFiles CMakeCache.txt \\\n    && rm -Rf build \\\n    && mkdir -p build \\\n    && cd build \\\n    && rm -rf CMakeFiles CMakeCache.txt \\\n    && CXX=afl-clang++ CC=afl-clang BUILD_AFL=TRUE cmake ../ \\\n    && sudo make install \\\n    && rm -rf CMakeFiles CMakeCache.txt \\\n    && CXX=clang++ CC=clang BUILD_LIBFUZZER=TRUE cmake ../ \\\n    && sudo make install \\\n    && cd .. \\\n    && sudo pip3 install --no-cache-dir 'z3-solver==4.5.1.0.post2' angr 'manticore==0.2.5' \\\n    && sudo python3 ./build/setup.py install\n\nENV CC=clang\nENV CXX=clang++\n\nCMD [\"/bin/bash\"]\n"
}