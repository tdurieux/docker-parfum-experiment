{
  "startTime": 1674245152259,
  "endTime": 1674245152702,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedDockerfile": "FROM phusion/baseimage \nMAINTAINER e0d1n \n\nENV DEBIAN_FRONTEND noninteractive \n\nRUN dpkg --add-architecture i386 \nRUN apt-get update && apt-get -y upgrade \n\n#-------------------------------------# \n# Install packages from Ubuntu repos # \n#-------------------------------------# \nRUN apt-get install --no-install-recommends -y \\\nsudo \\\nbuild-essential \\\ngcc-multilib \\\ng++-multilib \\\ngdb \\\ngdb-multiarch \\\npython-dev \\\npython3-dev \\\npython-pip \\\npython3-pip \\\ndefault-jdk \\\nnet-tools \\\nnasm \\\nvim \\\ntmux \\\nzsh \\\nctags \\\ngit \\\nbinwalk \\\nstrace \\\nltrace \\\nautoconf \\\nsocat \\\nnetcat \\\nnmap \\\nwget \\\nexiftool \\\nunzip \\\nvirtualenvwrapper \\\nman-db \\\nmanpages-dev \\\nlibini-config-dev \\\nlibssl-dev \\\nlibffi-dev \\\nlibglib2.0-dev \\\nlibc6:i386 \\\nlibncurses5:i386 \\\nlibstdc++6:i386 \\\nlibc6-dev-i386 \\\ngcc-arm-none-eabi \\\nlibnewlib-arm-none-eabi \\\nlibstdc++-arm-none-eabi-newlib \\\nlibnewlib-dev \\\nqemu \\\nqemu-user \\\nqemu-user-static && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get -y autoremove \nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \n\n#-------------------------------------# \n# Install stuff from pip repos # \n#-------------------------------------# \nRUN pip install --no-cache-dir \\\npycipher \\\nuncompyle \\\nropgadget \\\ndistorm3 \\\nfilebytes \\\npython-constraint\n\n# install pwntools 3 \nRUN pip install --no-cache-dir --upgrade pwntools\n\n#-------------------------------------# \n# Install stuff from GitHub repos # \n#-------------------------------------# \n# install capstone \n# RUN git clone https://github.com/aquynh/capstone.git /opt/capstone && \\ \n# cd /opt/capstone && \\ \n# ./make.sh && \\ \n# ./make.sh install && \\ \n# cd bindings/python && \\ \n# make install && \\ \n# make install3 \n# install radare2 \nRUN git clone https://github.com/radare/radare2.git /opt/radare2 && \\  \ncd /opt/radare2 && \\  \ngit fetch --tags && \\  \ngit checkout $(git describe --tags $(git rev-list --tags --max-count=1)) && \\  \n./sys/install.sh && \\  \nmake symstall \n\n# install ropper \nRUN git clone https://github.com/sashs/Ropper.git /opt/ropper && \\  \ncd /opt/ropper && \\  \npython setup.py install \nRUN rm -rf /opt/ropper \n\n# install ropeme \nRUN git clone https://github.com/packz/ropeme.git /opt/ropeme && \\  \nsed -i 's/distorm/distorm3/g' /opt/ropeme/ropeme/gadgets.py \n\n# install libc-database \nRUN git clone https://github.com/niklasb/libc-database /opt/libc-database \n\n# install peda \nRUN git clone https://github.com/longld/peda.git /opt/peda \n\n# install gef \nRUN git clone https://github.com/hugsy/gef.git /opt/gef \n\n# install fixenv \nRUN git clone https://github.com/hellman/fixenv /opt/fixenv && \\  \ncd /opt/fixenv && \\  \nchmod +x r.sh && \\  \nln -s /opt/fixenv/r.sh /usr/local/bin/fixenv \n\n#-------------------------------------# \n# Configuring enviroment # \n#-------------------------------------# \nRUN touch $HOME/.z \nRUN git clone http://github.com/e0d1n/dotfiles.git $HOME/.e0d1n-dotfiles && \\  \ncd $HOME/.e0d1n-dotfiles && \\  \n./install.sh \nRUN vim +PlugInstall +qall \nRUN echo 'source /opt/peda/peda.py' > ~/.gdbinit \nRUN chsh -s /bin/zsh \n\nENTRYPOINT [\"/bin/zsh\"] \n\n"
}