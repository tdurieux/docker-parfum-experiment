{
  "startTime": 1674250773902,
  "endTime": 1674250774244,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 26
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 2,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 2,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "from alpine:3.5\n\narg GRAFANA_REPO=https://github.com/monasca/grafana.git\narg GRAFANA_BRANCH=grafana4\narg MONASCA_DATASOURCE_REPO=https://git.openstack.org/openstack/monasca-grafana-datasource\narg MONASCA_DATASOURCE_BRANCH=master\narg MONASCA_APP_REPO=https://github.com/monasca/monasca-grafana\narg MONASCA_APP_BRANCH=master\n\n# To force a rebuild, pass --build-arg REBUILD=\"$(DATE)\" when running\n# `docker build`\narg REBUILD=1\n\nenv GOPATH=/go GOBIN=/go/bin \\\n    GRAFANA_ADMIN_USER=grafana-admin \\\n    GRAFANA_ADMIN_PASSWORD=admin\n\nrun mkdir -p /var/lib/grafana && \\\n  mkdir -p $GOPATH/src/github.com/grafana/grafana && \\\n  cd $GOPATH/src/github.com/grafana/grafana/ && \\\n  apk add --no-cache --virtual build-dep \\\n    nodejs go git musl-dev make g++ && \\\n  apk add --no-cache python py-jinja2 ca-certificates && \\\n  git init && \\\n  git remote add origin $GRAFANA_REPO && \\\n  git fetch origin $GRAFANA_BRANCH && \\\n  git reset --hard FETCH_HEAD && \\\n  go run build.go setup && go run build.go build && \\\n  npm install -g yarn@0.27 && yarn --no-emoji && \\\n  yarn add grunt && \\\n  ./node_modules/.bin/grunt build --force && \\\n  cp -r ./conf /var/lib/grafana/conf && \\\n  cp -r ./public_gen /var/lib/grafana/public && \\\n  cp ./bin/grafana-cli $GOPATH/bin/ && \\\n  cd / && \\\n  rm -rf $GOPATH/src/github.com && \\\n  yarn cache clean && \\\n  mkdir -p /var/lib/grafana/plugins/monasca-grafana-datasource && \\\n  cd /var/lib/grafana/plugins/monasca-grafana-datasource && \\\n  git init && \\\n  git remote add origin $MONASCA_DATASOURCE_REPO && \\\n  git fetch origin $MONASCA_DATASOURCE_BRANCH && \\\n  git reset --hard FETCH_HEAD && \\\n  cd .. && \\\n  mkdir monasca-grafana-app && \\\n  cd monasca-grafana-app && \\\n  git init && \\\n  git remote add origin $MONASCA_APP_REPO && \\\n  git fetch origin $MONASCA_APP_BRANCH && \\\n  git reset --hard FETCH_HEAD && \\\n  npm install grunt grunt-cli && \\\n  npm install && \\\n  ./node_modules/.bin/grunt && \\\n  $GOPATH/bin/grafana-cli plugins install natel-discrete-panel && \\\n  apk del build-dep && \\\n  rm -rf /usr/lib/node_modules /usr/lib/go && \\\n  rm -rf /tmp/npm* /tmp/phantomjs && \\\n  rm -rf /root/.npm /root/.node-gyp && \\\n  rm -f /go/bin/govendor && \\\n  rm -rf /go/pkg && npm cache clean --force;\n\ncopy grafana.ini.j2 /etc/grafana/grafana.ini.j2\ncopy template.py start.sh /\ncopy drilldown.js /var/lib/grafana/public/dashboards/drilldown.js\nrun chmod +x /template.py /start.sh\nexpose 3000\n\nhealthcheck --interval=10s --timeout=5s \\\n  cmd wget -q http://localhost:3000 -O - > /dev/null\n\ncmd [\"/start.sh\"]\n"
}