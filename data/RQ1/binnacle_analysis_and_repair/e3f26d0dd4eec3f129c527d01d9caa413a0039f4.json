{
  "startTime": 1674235378187,
  "endTime": 1674235378778,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 2,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 64,
        "columnStart": 2,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM bitnami/minideb:latest\n\nENV RAILS_ENV production\nENV BUILD_RUBY_VERSION 2.4.2\n\n# Install build dependencies\nRUN set -x &&\\\n  apt-get update && \\\n  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n  sudo \\\n  wget \\\n  curl \\\n  build-essential \\\n  libcurl4-openssl-dev \\\n  python-dev \\\n  python-setuptools \\\n  software-properties-common \\\n  python-pip \\\n  git \\\n  libjemalloc-dev \\\n  brotli && \\\n# Python libs\n  pip install --no-cache-dir python-magic && \\\n# Node 8.x\n  curl -f -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - && \\\n# Yarn\n  curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - && \\\n  echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list && \\\n# Update apt cache with PPAs\n  apt-get clean && \\\n  apt-get update && \\\n# Install Node\n  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y nodejs && \\\n# Install ruby-install\n  cd /tmp && \\\n  wget -O ruby-install-0.6.1.tar.gz https://github.com/postmodern/ruby-install/archive/v0.6.1.tar.gz && \\\n  tar -xzvf ruby-install-0.6.1.tar.gz && \\\n  cd ruby-install-0.6.1/ && \\\n  make install && \\\n# Install Ruby\n  ruby-install ruby $BUILD_RUBY_VERSION -- --with-jemalloc && \\\n# Install bundler globally\n  PATH=/opt/rubies/ruby-$BUILD_RUBY_VERSION/bin:$PATH gem install bundler && \\\n# Install su-exec\n  cd /tmp && \\\n  wget -O su-exec-0.2.tar.gz https://github.com/ncopa/su-exec/archive/v0.2.tar.gz && \\\n  tar -xzvf su-exec-0.2.tar.gz && \\\n  cd su-exec-0.2/ && \\\n  make && \\\n  cp -a su-exec /usr/bin/ && \\\n# Install Ruby application dependencies\n  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n  yarn \\\n  libpq-dev \\\n  postgresql-client-9.6 \\\n  libreadline-dev \\\n  zlib1g-dev \\\n  flex \\\n  bison \\\n  libxml2-dev \\\n  libxslt1-dev \\\n  libssl-dev \\\n  imagemagick \\\n  ca-certificates \\\n  rsync && \\\n# Remove build dependencies, clean up APT and temp files\n  apt-get clean && \\\n  DEBIAN_FRONTEND=noninteractive apt-get remove --purge -y wget curl && \\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && rm ruby-install-0.6.1.tar.gz\n\n# Add 'web' user which will run the application\nRUN adduser web --home /home/web --shell /bin/bash --disabled-password --gecos \"\"\n\nCOPY Gemfile* /var/www/\nRUN \\\n  mkdir -p /var/www/docker &&\\\n  echo \"export PATH=\\\"\\$PATH:/opt/rubies/ruby-$BUILD_RUBY_VERSION/bin\\\"\" > /var/www/docker/ruby-path.sh &&\\\n  chmod +x /var/www/docker/ruby-path.sh &&\\\n  mkdir -p /var/bundle &&\\\n  chown -R web:web /var/bundle &&\\\n  chown -R web:web /var/www &&\\\n  mkdir -p /data/public &&\\\n  chown -R web:web /data\n\nUSER web\n\nRUN cd /var/www &&\\\n  . /var/www/docker/ruby-path.sh &&\\\n  bundle install --path /var/bundle --deployment --without development test deploy\n\n# Add application source\nUSER root\nCOPY . /var/www\nRUN cd /var/www/ &&\\\n  find /var/www/docker -type f -name \"*.sh\" -print0 | xargs -0 chmod +x &&\\\n  chown -R web:web /var/www\n\n# Precompile assets and cleanup\nUSER web\nRUN cd /var/www &&\\\n  . /var/www/docker/ruby-path.sh &&\\\n  . /var/www/.env.docker-build &&\\\n  bundle exec rake assets:precompile &&\\\n  python /var/www/docker/brotli_compress.py /var/www/public/assets &&\\\n  python /var/www/docker/brotli_compress.py /var/www/public/packs &&\\\n  rm -rf /var/www/tmp/* /var/www/log/*\n\nUSER root\nENTRYPOINT [\"/var/www/docker/docker-entrypoint.sh\"]\n\nVOLUME /var/www\n\nWORKDIR /var/www\n\nCMD [\"bundle\", \"exec\", \"puma\", \"-C\", \"config/puma.rb\"]\n"
}