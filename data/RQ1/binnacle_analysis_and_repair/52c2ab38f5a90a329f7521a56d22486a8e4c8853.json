{
  "startTime": 1674235280069,
  "endTime": 1674235280249,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 2,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 78
      }
    }
  ],
  "repairedDockerfile": "#note:  this is a multistage dockerfile\n#this is a new concept (new as of 2017) and requires docker version 17.05 or higher\n\n#*** first stage is for building\n\nFROM ubuntu:18.10 as builder\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends --yes wget gpg && rm -rf /var/lib/apt/lists/*;\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" > /etc/apt/sources.list.d/snowblossom-bazel.list\nRUN wget --output-document=bazel-release.pub.gpg --quiet https://bazel.build/bazel-release.pub.gpg && apt-key add bazel-release.pub.gpg && rm --force bazel-release.pub.gpg\nRUN apt-get update\nRUN apt-get install --no-install-recommends --yes openjdk-8-jdk-headless bazel && rm -rf /var/lib/apt/lists/*;\n\nRUN groupadd --gid 61000 docker\nRUN useradd --create-home --uid 61000 --gid docker --shell /bin/bash docker\nUSER docker\n\nWORKDIR /home/docker\nADD --chown=docker:docker . snowblossom\nWORKDIR /home/docker/snowblossom\nRUN bazel build :SnowBlossomMiner_deploy.jar \\\n  :SnowBlossomNode_deploy.jar \\\n  :SnowBlossomClient_deploy.jar \\\n  :PoolMiner_deploy.jar \\\n  :SnowFall_deploy.jar \\\n  :Arktika_deploy.jar \\\n  :ShackletonExplorer_deploy.jar\n\n\n#*** second stage is for running\n\nFROM ubuntu:18.10\n\nEXPOSE 2338\n\nRUN apt-get update && \\\n  apt-get install --no-install-recommends --yes openjdk-8-jre-headless && \\\n  apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN groupadd --gid 61000 docker\nRUN useradd --create-home --uid 61000 --gid docker --shell /bin/bash docker\nUSER docker\n\nRUN mkdir /home/docker/snowblossom\nWORKDIR /home/docker/snowblossom\nCOPY --chown=docker:docker --from=builder \\\n  /home/docker/snowblossom/bazel-bin/SnowBlossomMiner_deploy.jar \\\n  /home/docker/snowblossom/bazel-bin/SnowBlossomNode_deploy.jar \\\n  /home/docker/snowblossom/bazel-bin/SnowBlossomClient_deploy.jar \\\n  /home/docker/snowblossom/bazel-bin/PoolMiner_deploy.jar \\\n  /home/docker/snowblossom/bazel-bin/SnowFall_deploy.jar \\\n  /home/docker/snowblossom/bazel-bin/Arktika_deploy.jar \\\n  /home/docker/snowblossom/bazel-bin/ShackletonExplorer_deploy.jar \\\n  ./\n\nRUN echo '#!/bin/bash\\njava -jar SnowBlossomNode_deploy.jar configs/node.conf \"$@\"' > node.sh && \\\n  echo '#!/bin/bash\\njava -jar SnowBlossomClient_deploy.jar configs/client.conf \"$@\"' > client.sh && \\\n  echo '#!/bin/bash\\njava -jar SnowBlossomMiner_deploy.jar configs/miner.conf \"$@\"' > miner.sh && \\\n  echo '#!/bin/bash\\njava -jar PoolMiner_deploy.jar configs/pool-miner.conf \"$@\"' > pool-miner.sh && \\\n  echo '#!/bin/bash\\njava -Xmx50g -jar Arktika_deploy.jar \"$@\"' > arktika.sh && \\\n  echo '#!/bin/bash\\njava -Xmx10g -jar Arktika_deploy.jar \"$@\"' > arktika-small.sh && \\\n  echo '#!/bin/bash\\njava -Xmx10g -jar ShackletonExplorer_deploy.jar configs/explorer.conf \"$@\"' > shackleton-explorer.sh && \\\n  chmod +x *.sh && \\\n  mkdir -p \"logs\"\n\nCMD ./node.sh\n\n#to build:  docker build --tag=snowblossom .\n#to run: cp --recursive example/configs configs\n#  mkdir -p node_db wallet snow\n#  chmod go+wt node_db wallet snow\n\n#use --restart=always --detach instead of --rm if you want this to start on boot\n#to run       node: docker run --rm --name=snowblossom-node --volume $PWD/configs:/home/docker/snowblossom/configs --volume $PWD/node_db:/home/docker/snowblossom/node_db --publish 2338:2338 snowblossom\n#to run     client: docker run --rm --name=snowblossom-client --network=host --volume $PWD/configs:/home/docker/snowblossom/configs --volume $PWD/wallet:/home/docker/snowblossom/wallet snowblossom ./client.sh\n#to run      miner: docker run --rm --name=snowblossom-miner --network=host --volume $PWD/configs:/home/docker/snowblossom/configs --volume $PWD/snow:/home/docker/snowblossom/snow --volume $PWD/wallet:/home/docker/snowblossom/wallet snowblossom ./miner.sh\n#to run  poolminer: docker run --rm --name=snowblossom-pool-miner --network=host --volume $PWD/configs:/home/docker/snowblossom/configs --volume $PWD/snow:/home/docker/snowblossom/snow --volume $PWD/wallet:/home/docker/snowblossom/wallet snowblossom ./pool-miner.sh\n#to run    arktika: docker run --rm --name=snowblossom-arktika --network=host --volume $PWD/configs:/home/docker/snowblossom/configs --volume $PWD/snow:/home/docker/snowblossom/snow --volume $PWD/wallet:/home/docker/snowblossom/wallet snowblossom ./arktika-small.sh configs/node1.conf\n#to run shackleton: docker run --rm --name=snowblossom-shackleton-explorer --network=host --volume $PWD/configs:/home/docker/snowblossom/configs --publish 8080:8080 snowblossom ./shackleton-explorer.sh\n#to run   snowfall: n=8; mkdir -p snow/snowblossom.$n && chmod go+wt snow/snowblossom.$n && docker run --rm --name=snowblossom-snowfall --network=host --volume $PWD/configs:/home/docker/snowblossom/configs --volume $PWD/snow:/home/docker/snowblossom/snow --volume $PWD/wallet:/home/docker/snowblossom/wallet snowblossom java -jar SnowFall_deploy.jar snow/snowblossom.$n/snowblossom.$n.snow snowblossom.$n $(dc <<< \"2 $n ^ 1024 * p\")\n\n"
}