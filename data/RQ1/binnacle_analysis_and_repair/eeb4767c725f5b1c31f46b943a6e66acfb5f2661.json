{
  "startTime": 1674251700996,
  "endTime": 1674251701308,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 134,
        "lineEnd": 134,
        "columnStart": 18,
        "columnEnd": 33
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:trusty@sha256:ed49036f63459d6e5ed6c0f238f5e94c3a0c70d24727c793c48fded60f70aa96\n\nMAINTAINER Everest Munro-Zeisberger\n\nWORKDIR /root\n\n########################\n# SETUP ENV & VERSIONS #\n########################\n\n# Versions:\nENV AFL_VERSION 2.52b\nENV RUBY_VERSION 2.3.3\nENV GO_DEP_VERSION 0.4.1\n\n# Environment Variables:\nENV GOPATH=/root/go/\nENV GOBIN=/root/go/bin\n\n################\n# INSTALL DEPS #\n################\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN apt-add-repository -y ppa:rael-gc/rvm\nRUN apt-add-repository -y ppa:gophers/archive\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y \\\n  git \\\n  wget \\\n  gcc \\\n  autoconf \\\n  make \\\n  bison \\\n  libssl-dev \\\n  libreadline-dev \\\n  zlib1g-dev \\\n  pkg-config \\\n  gcc \\\n  clang \\\n  llvm \\\n  rvm \\\n  watch \\\n  nodejs \\\n  npm \\\n  supervisor \\\n  cmake \\\n  gdb \\\n  python-virtualenv \\\n  golang-1.9-go \\\n  cython \\\n  build-essential \\\n  libgtk2.0-dev \\\n  libtbb-dev \\\n  python-dev \\\n  python-numpy \\\n  python-scipy \\\n  libjasper-dev \\\n  libjpeg-dev \\\n  libpng-dev \\\n  libtiff-dev \\\n  libavcodec-dev \\\n  libavutil-dev \\\n  libavformat-dev \\\n  libswscale-dev \\\n  libdc1394-22-dev \\\n  libv4l-dev && rm -rf /var/lib/apt/lists/*;\n\n###########################\n# AFL Compilation & Setup #\n###########################\n\n# Download AFL and uncompress\nRUN wget https://lcamtuf.coredump.cx/afl/releases/afl-$AFL_VERSION.tgz\nRUN tar -xvf afl-$AFL_VERSION.tgz && rm afl-$AFL_VERSION.tgz\nRUN mv afl-$AFL_VERSION afl\n\n# Inject our own AFL config header file\nRUN rm /root/afl/config.h\nCOPY ./config/afl_config/config.h /root/afl/config.h\n\n# Compile both standard gcc, clang etc as well as afl-clang-fast, used for\n# faster & persistent test harnesses. Also build the afl-fuzz binary\nRUN cd ~/afl && make\nRUN cd ~/afl/llvm_mode && make\n\n# Environment Setup\nENV AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=\"1\"\n\n# Install py-afl-fuzz (for fuzzing python libraries)\nRUN git clone https://github.com/jwilk/python-afl.git\nRUN cd python-afl && python setup.py install\n\n# Compile ruby from sources with afl, and setup cflags to access instrumented\n# ruby headers (useful for ruby library fuzzing with C harneses)\nRUN CC=~/afl/afl-clang-fast /usr/share/rvm/bin/rvm install --disable-binary $RUBY_VERSION\nENV LD_LIBRARY_PATH=\"LD_LIBRARY_PATH=/usr/share/rvm/rubies/ruby-$RUBY_VERSION/lib\"\nENV PATH=\"/usr/share/rvm/rubies/ruby-$RUBY_VERSION/bin:$PATH\"\nCOPY ./config/ ./config/\nRUN PKG_CONFIG_PATH=/usr/share/rvm/rubies/ruby-$RUBY_VERSION/lib/pkgconfig pkg-config --cflags --libs ruby-2.3 > ~/config/afl-ruby-flags\n\n# File structure setup\nRUN mkdir ~/fuzz_out\nRUN mkdir ~/fuzz_in\n\n############################\n#SIDECAR & MONITORING SETUP#\n############################\n\n# Setup logging and scripts & install Go libs\nRUN mkdir /root/logs\nWORKDIR /root/go/src/maxfuzz/fuzzer-base\nRUN wget https://github.com/golang/dep/releases/download/v$GO_DEP_VERSION/dep-linux-amd64\nRUN mv dep-linux-amd64 /usr/local/bin/dep\nENV PATH=/usr/lib/go-1.9/bin/:$PATH\nRUN chmod +x /usr/local/bin/dep\nRUN go get -u github.com/dvyukov/go-fuzz/...\n\n# Copy Go files into container & compile binaries\nRUN mkdir -p /root/go/src/maxfuzz/fuzzer-base\nWORKDIR /root/go/src/maxfuzz/fuzzer-base\nCOPY ./cmd /root/go/src/maxfuzz/fuzzer-base/cmd\nCOPY ./internal /root/go/src/maxfuzz/fuzzer-base/internal\nCOPY ./Gopkg.lock /root/go/src/maxfuzz/fuzzer-base/Gopkg.lock\nCOPY ./Gopkg.toml /root/go/src/maxfuzz/fuzzer-base/Gopkg.toml\nCOPY ./Makefile /root/go/src/maxfuzz/fuzzer-base/Makefile\nRUN make && make install\nWORKDIR /root\n\n# Setup sidecar webapp\nCOPY ./sidecar ./sidecar\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\nRUN cd sidecar && npm install log && npm cache clean --force;\n\n#################################\n# FINAL SETUP & COPYING SCRIPTS #\n#################################\n\nRUN mkdir fuzzer-files\nCOPY ./scripts ./scripts\nCOPY ./fuzzer-files/base ./fuzzer-files/base\nRUN chmod -R 755 /root/fuzzer-files\nRUN chmod 755 /root/scripts/reproduce_stdin\nRUN echo \"export GIT_SHA=test_environment\" >> /root/fuzzer-files/base/environment\n"
}