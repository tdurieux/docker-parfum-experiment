{
  "startTime": 1674241740689,
  "endTime": 1674241740926,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 24,
        "columnStart": 18,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 24,
        "columnStart": 18,
        "columnEnd": 80
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Takipi\nFROM alpine:3.4\n\nMAINTAINER Chen Harel \"https://github.com/chook\"\n\n# Install dependencies\nRUN apk --update --no-cache add curl tar sqlite icu bash\nRUN apk add --no-cache ca-certificates wget && update-ca-certificates\n\nRUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub\nRUN wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk\nRUN wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-bin-2.23-r3.apk\nRUN apk add --no-cache glibc-2.23-r3.apk glibc-bin-2.23-r3.apk\n\nENV LANG C.UTF-8\n\n# Java Version\nENV JAVA_VERSION_MAJOR 8\nENV JAVA_VERSION_MINOR 91\nENV JAVA_VERSION_BUILD 14\nENV JAVA_PACKAGE       jdk\n\n# Download and unarchive Java\nRUN mkdir /opt && curl -f -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" \\\n  https://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.tar.gz \\\n    | tar -xzf - -C /opt && \\\n    ln -s /opt/jdk1.8.0_91 /opt/jdk && \\\n    rm -rf /opt/jdk/*src.zip \\\n           /opt/jdk/lib/missioncontrol \\\n           /opt/jdk/lib/visualvm \\\n           /opt/jdk/lib/*javafx* \\\n           /opt/jdk/jre/lib/plugin.jar \\\n           /opt/jdk/jre/lib/ext/jfxrt.jar \\\n           /opt/jdk/jre/bin/javaws \\\n           /opt/jdk/jre/lib/javaws.jar \\\n           /opt/jdk/jre/lib/desktop \\\n           /opt/jdk/jre/plugin \\\n           /opt/jdk/jre/lib/deploy* \\\n           /opt/jdk/jre/lib/*javafx* \\\n           /opt/jdk/jre/lib/*jfx* \\\n           /opt/jdk/jre/lib/amd64/libdecora_sse.so \\\n           /opt/jdk/jre/lib/amd64/libprism_*.so \\\n           /opt/jdk/jre/lib/amd64/libfxplugins.so \\\n           /opt/jdk/jre/lib/amd64/libglass.so \\\n           /opt/jdk/jre/lib/amd64/libgstreamer-lite.so \\\n           /opt/jdk/jre/lib/amd64/libjavafx*.so \\\n           /opt/jdk/jre/lib/amd64/libjfx*.so \\\n    && addgroup -g 9999 app && adduser -D  -G app -s /bin/false -u 9999 app \\\n    && echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf\n\n# Set environment\nENV JAVA_HOME /opt/jdk\nENV PATH ${PATH}:/opt/jdk/bin\t\n\n### Takipi Installation\n\nENV TAKIPI_SECRET_KEY=S3875#YAFwDEGg5oSIU+TM#G0G7VATLOqJIKtAMy1MObfFINaQmVT5hGYLQ+cpPuq4=#87a1\n\n# Takipi installer dependencies (we need xz for a future untar process)\nRUN apk --update --no-cache add xz\nRUN curl -f -Ls https://www.archlinux.org/packages/core/x86_64/gcc-libs/download > /tmp/gcc-libs.tar.gz && \\\n\tmkdir /usr/libgcc-compat && tar -xvf /tmp/gcc-libs.tar.gz -C /usr/libgcc-compat && rm -rf /tmp/gcc-libs.tar.gz\nRUN curl -f -Ls https://www.archlinux.org/packages/core/x86_64/zlib/download/ > /tmp/zlib.tar.gz && \\\n\tmkdir /usr/zlib-compat && tar -xvf /tmp/zlib.tar.gz -C /usr/zlib-compat && rm -rf /tmp/zlib.tar.gz\n\n# Install Takipi\nRUN curl -f -Ls /dev/null http://get.takipi.com/takipi-t4c-installer | \\\n  bash /dev/stdin -i --sk=${TAKIPI_SECRET_KEY}\n\nRUN rm /usr/glibc-compat/etc/ld.so.conf\nRUN echo /usr/zlib-compat/usr/lib >> /usr/glibc-compat/etc/ld.so.conf\nRUN echo /usr/libgcc-compat/usr/lib >> /usr/glibc-compat/etc/ld.so.conf\nRUN echo /opt/takipi/lib >> /usr/glibc-compat/etc/ld.so.conf\nRUN echo /usr/lib >> /usr/glibc-compat/etc/ld.so.conf\nRUN echo /lib >> /usr/glibc-compat/etc/ld.so.conf\nRUN /usr/glibc-compat/sbin/ldconfig\n### Takipi installation complete\n\n# Getting Java tester\nRUN wget https://s3.amazonaws.com/app-takipi-com/chen/scala-boom.jar -O scala-boom.jar\n\n# More cleanups\nRUN apk del xz icu wget curl tar \\\n  && rm -rf /tmp/* \\\n  && rm -rf /var/cache/apk/* \\ \n  && rm -rf glibc-2.23-r3.apk glibc-bin-2.23-r3.apk\n\n# Running a java process with Takipi\nCMD java -agentlib:TakipiAgent -jar scala-boom.jar\n"
}