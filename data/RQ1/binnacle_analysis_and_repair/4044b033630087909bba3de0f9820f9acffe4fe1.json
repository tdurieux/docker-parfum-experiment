{
  "startTime": 1674241071884,
  "endTime": 1674241072687,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 5,
        "columnEnd": 98
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 5,
        "columnEnd": 63
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 173,
        "lineEnd": 173,
        "columnStart": 5,
        "columnEnd": 84
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 5,
        "columnEnd": 87
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 5,
        "columnEnd": 87
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 5,
        "columnEnd": 47
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 5,
        "columnEnd": 75
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 5,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 5,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 5,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 175,
        "lineEnd": 175,
        "columnStart": 5,
        "columnEnd": 56
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 176,
        "lineEnd": 176,
        "columnStart": 5,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nginx:stable-alpine\n\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\n\nLABEL maintainer=\"CrazyMax\" \\\n  org.label-schema.build-date=$BUILD_DATE \\\n  org.label-schema.name=\"rtorrent-rutorrent\" \\\n  org.label-schema.description=\"rTorrent and ruTorrent\" \\\n  org.label-schema.version=$VERSION \\\n  org.label-schema.url=\"https://github.com/crazy-max/docker-rtorrent-rutorrent\" \\\n  org.label-schema.vcs-ref=$VCS_REF \\\n  org.label-schema.vcs-url=\"https://github.com/crazy-max/docker-rtorrent-rutorrent\" \\\n  org.label-schema.vendor=\"CrazyMax\" \\\n  org.label-schema.schema-version=\"1.0\"\n\nENV RTORRENT_VERSION=0.9.7 \\\n  LIBTORRENT_VERSION=0.13.7 \\\n  XMLRPC_VERSION=01.54.00 \\\n  LIBSIG_VERSION=2.10.1 \\\n  CARES_VERSION=1.14.0 \\\n  CURL_VERSION=7.63.0 \\\n  MKTORRENT_VERSION=1.1 \\\n  NGINX_DAV_VERSION=3.0.0\n\nRUN apk --update --no-cache add -t build-dependencies \\\n    autoconf \\\n    automake \\\n    binutils \\\n    build-base \\\n    cppunit-dev \\\n    git \\\n    libtool \\\n    libressl-dev \\\n    linux-headers \\\n    ncurses-dev \\\n    subversion \\\n    tar \\\n    wget \\\n    xz \\\n    zlib-dev \\\n  # xmlrpc\n  && cd /tmp \\\n  && svn checkout http://svn.code.sf.net/p/xmlrpc-c/code/release_number/${XMLRPC_VERSION}/ xmlrpc-c \\\n  && cd xmlrpc-c \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make \\\n  && make install \\\n  # libsig\n  && cd /tmp \\\n  && wget https://ftp.gnome.org/pub/GNOME/sources/libsigc++/2.10/libsigc++-${LIBSIG_VERSION}.tar.xz \\\n  && unxz libsigc++-${LIBSIG_VERSION}.tar.xz \\\n  && tar -xf libsigc++-${LIBSIG_VERSION}.tar \\\n  && cd libsigc++-${LIBSIG_VERSION} \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make \\\n  && make install \\\n  # cares\n  && cd /tmp \\\n  && wget https://c-ares.haxx.se/download/c-ares-${CARES_VERSION}.tar.gz \\\n  && tar zxf c-ares-${CARES_VERSION}.tar.gz \\\n  && cd c-ares-${CARES_VERSION} \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make \\\n  && make install \\\n  # curl\n  && cd /tmp \\\n  && wget https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz \\\n  && tar zxf curl-${CURL_VERSION}.tar.gz \\\n  && cd curl-${CURL_VERSION} \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-ares --enable-tls-srp --enable-gnu-tls --with-ssl --with-zlib \\\n  && make \\\n  && make install \\\n  # libtorrent\n  && cd /tmp \\\n  && git clone https://github.com/rakshasa/libtorrent.git \\\n  && cd libtorrent \\\n  && git checkout tags/v${LIBTORRENT_VERSION} \\\n  && ./autogen.sh \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-posix-fallocate \\\n  && make \\\n  && make install \\\n  # rtorrent\n  && cd /tmp \\\n  && git clone https://github.com/rakshasa/rtorrent.git \\\n  && cd rtorrent \\\n  && git checkout tags/v${RTORRENT_VERSION} \\\n  && ./autogen.sh \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-xmlrpc-c --with-ncurses \\\n  && make \\\n  && make install \\\n  # mktorrent\n  && git clone https://github.com/esmil/mktorrent.git \\\n  && cd mktorrent \\\n  && git checkout tags/v${MKTORRENT_VERSION} \\\n  && make \\\n  && make install \\\n  && apk del build-dependencies \\\n  && rm -rf /tmp/* /var/cache/apk/* && rm libsigc++-${LIBSIG_VERSION}.tar\n\nENV RUTORRENT_VERSION=\"3.9\" \\\n  RUTORRENT_REVISION=\"702afd3\"\n\nRUN apk --update --no-cache add \\\n    apache2-utils \\\n    bind-tools \\\n    binutils \\\n    ca-certificates \\\n    coreutils \\\n    dhclient \\\n    ffmpeg \\\n    geoip \\\n    grep \\\n    gzip \\\n    libressl \\\n    libstdc++ \\\n    mediainfo \\\n    ncurses \\\n    pcre \\\n    php7 \\\n    php7-cli \\\n    php7-ctype \\\n    php7-curl \\\n    php7-fpm \\\n    php7-json \\\n    php7-mbstring \\\n    php7-openssl \\\n    php7-phar \\\n    php7-session \\\n    php7-sockets \\\n    php7-xml \\\n    php7-zip \\\n    php7-zlib \\\n    shadow \\\n    sox \\\n    supervisor \\\n    tar \\\n    tzdata \\\n    unrar \\\n    unzip \\\n    util-linux \\\n    wget \\\n    zip \\\n    zlib \\\n  && apk --update --no-cache add -t build-dependencies \\\n    build-base \\\n    libxslt-dev \\\n    libxml2-dev \\\n    git \\\n    linux-headers \\\n    libressl-dev \\\n    pcre-dev \\\n    zlib-dev \\\n  # nginx webdav\n  && mkdir -p /usr/src \\\n  && cd /usr/src \\\n  && wget https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz \\\n  && tar zxvf nginx-$NGINX_VERSION.tar.gz \\\n  && git clone -b v${NGINX_DAV_VERSION} --single-branch --depth 1 https://github.com/arut/nginx-dav-ext-module.git \\\n  && cd nginx-$NGINX_VERSION \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-compat --add-dynamic-module=../nginx-dav-ext-module \\\n  && make modules \\\n  && cp objs/ngx_http_dav_ext_module.so /etc/nginx/modules \\\n  # ruTorrent\n  && mkdir -p /data /var/log/supervisord /var/www \\\n  && cd /var/www \\\n  && git clone https://github.com/Novik/ruTorrent.git rutorrent \\\n  && cd rutorrent \\\n  && git checkout ${RUTORRENT_REVISION} \\\n  # geoip2\n  && git clone https://github.com/Micdu70/geoip2-rutorrent /var/www/rutorrent/plugins/geoip2 \\\n  && cd /var/www/rutorrent/plugins/geoip2/database \\\n  && wget -q https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz \\\n  && wget -q https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz \\\n  && tar -xvzf GeoLite2-City.tar.gz --strip-components=1 \\\n  && tar -xvzf GeoLite2-Country.tar.gz --strip-components=1 \\\n  && rm -f *.gz \\\n  # perms\n  && addgroup -g 1000 rtorrent \\\n  && adduser -u 1000 -G rtorrent -h /home/rtorrent -s /sbin/nologin -D rtorrent \\\n  && usermod -a -G rtorrent nginx \\\n  && chown -R rtorrent. /data /var/log/php7 /var/www/rutorrent \\\n  && apk del build-dependencies \\\n  && rm -rf /etc/nginx/conf.d/* \\\n    /usr/src/nginx* \\\n    /tmp/* \\\n    /var/cache/apk/* \\\n    /var/www/rutorrent/.git* \\\n    /var/www/rutorrent/conf/users \\\n    /var/www/rutorrent/plugins/geoip \\\n    /var/www/rutorrent/plugins/geoip2/.git \\\n    /var/www/rutorrent/share && rm nginx-$NGINX_VERSION.tar.gz\n\nCOPY entrypoint.sh /entrypoint.sh\nCOPY assets /\n\nRUN chmod a+x /entrypoint.sh \\\n  && chown -R nginx. /etc/nginx/conf.d /var/log/nginx\n\nEXPOSE 6881/udp 8000 8080 9000 50000\nVOLUME [ \"/data\", \"/passwd\" ]\n\nENTRYPOINT [ \"/entrypoint.sh\" ]\nCMD [ \"/usr/bin/supervisord\", \"-c\", \"/etc/supervisord.conf\" ]\n"
}