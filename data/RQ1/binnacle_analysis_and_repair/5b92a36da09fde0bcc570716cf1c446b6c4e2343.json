{
  "startTime": 1674237112129,
  "endTime": 1674237112975,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 215
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 212
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 278
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 32,
        "columnEnd": 146
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 32,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 32,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 9,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 9,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 215
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 212
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 278
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 32,
        "columnEnd": 146
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 32,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 32,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 32,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 9,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 9,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-devel-ubuntu16.04\n\n\n# Develop\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        software-properties-common \\\n        wget curl git cmake cmake-curses-gui \\\n        libboost-all-dev \\\n        libflann-dev \\\n        libgsl0-dev \\\n        libgoogle-perftools-dev \\\n        libeigen3-dev \\\n\tca-certificates \\\n\tmake \\\n\tautoconf \\\n\tlibtool \\\n\tpkg-config \\\n\tpython \\\n\tlibxext-dev \\\n\tx11proto-gl-dev && \\\n\trm -rf /var/lib/apt/lists/*\n\nRUN dpkg --add-architecture i386 && \\\n    apt-get update && apt-get install -y --no-install-recommends \\\n        gcc-multilib \\\n        libxext-dev:i386 \\\n        libx11-dev:i386 && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Intall some basic GUI and sound libs\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        xz-utils file locales dbus-x11 pulseaudio dmz-cursor-theme \\\n        fonts-dejavu fonts-liberation hicolor-icon-theme \\\n        libcanberra-gtk3-0 libcanberra-gtk-module libcanberra-gtk3-module \\\n        libasound2 libgtk2.0-0 libdbus-glib-1-2 libxt6 libexif12 \\\n        libgl1-mesa-glx libgl1-mesa-dri language-pack-en \\\n        && update-locale LANG=en_US.UTF-8 LC_MESSAGES=POSIX && rm -rf /var/lib/apt/lists/*;\n\n# Intall some basic GUI tools\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        cmake-qt-gui \\\n        gnome-terminal && rm -rf /var/lib/apt/lists/*;\n\n# Intall ROS\nRUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116\nRUN apt-get update && apt-get install --no-install-recommends -y ros-kinetic-desktop-full ros-kinetic-nmea-msgs ros-kinetic-nmea-navsat-driver ros-kinetic-sound-play ros-kinetic-jsk-visualization ros-kinetic-grid-map ros-kinetic-gps-common && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y ros-kinetic-controller-manager ros-kinetic-ros-control ros-kinetic-ros-controllers ros-kinetic-gazebo-ros-control ros-kinetic-joystick-drivers ros-kinetic-rosbridge-server && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y libnlopt-dev freeglut3-dev qtbase5-dev libqt5opengl5-dev libssh2-1-dev libarmadillo-dev libpcap-dev gksu libgl1-mesa-dev libglew-dev python-wxgtk3.0 software-properties-common libmosquitto-dev libyaml-cpp-dev python-flask python-requests && rm -rf /var/lib/apt/lists/*;\n\n# Add basic user\nENV USERNAME autoware\nENV PULSE_SERVER /run/pulse/native\nRUN useradd -m $USERNAME && \\\n        echo \"$USERNAME:$USERNAME\" | chpasswd && \\\n        usermod --shell /bin/bash $USERNAME && \\\n        usermod -aG sudo $USERNAME && \\\n        echo \"$USERNAME ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers.d/$USERNAME && \\\n        chmod 0440 /etc/sudoers.d/$USERNAME && \\\n        # Replace 1000 with your user/group id\n        usermod  --uid 1000 $USERNAME && \\\n        groupmod --gid 1000 $USERNAME\n\n# Setup .bashrc for ROS\nRUN echo \"source /opt/ros/kinetic/setup.bash\" >> /home/$USERNAME/.bashrc && \\\n        #Fix for qt and X server errors\n        echo \"export QT_X11_NO_MITSHM=1\" >> /home/$USERNAME/.bashrc && \\\n        # cd to home on login\n        echo \"cd\" >> /home/$USERNAME/.bashrc\n\n# ENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES},graphics\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        pkg-config \\\n        libxau-dev \\\n        libxdmcp-dev \\\n        libxcb1-dev \\\n        libxext-dev \\\n        libx11-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY --from=nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04 \\\n  /usr/local/lib/x86_64-linux-gnu \\\n  /usr/local/lib/x86_64-linux-gnu\n\nCOPY --from=nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04 \\\n  /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json \\\n  /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json\n\nRUN echo '/usr/local/lib/x86_64-linux-gnu' >> /etc/ld.so.conf.d/glvnd.conf && \\\n    ldconfig && \\\n    echo '/usr/local/$LIB/libGL.so.1' >> /etc/ld.so.preload && \\\n    echo '/usr/local/$LIB/libEGL.so.1' >> /etc/ld.so.preload\n\n# nvidia-container-runtime\nENV NVIDIA_VISIBLE_DEVICES \\\n    ${NVIDIA_VISIBLE_DEVICES:-all}\nENV NVIDIA_DRIVER_CAPABILITIES \\\n    ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics\n\n# Change user\nUSER autoware\n\nRUN sudo rosdep init \\\n        && rosdep update \\\n        && echo \"source /opt/ros/kinetic/setup.bash\" >> ~/.bashrc\n\n# YOLO_V2 and YOLO_V3\nRUN cd ~ && git clone https://github.com/pjreddie/darknet.git darknet \\\n    && cd ~/darknet && git checkout 56d69e73aba37283ea7b9726b81afd2f79cd1134\n\nCOPY --chown=autoware:autoware ./docker/generic/data/yolov2/yolo.cfg /home/$USERNAME/darknet/cfg/yolo.cfg\nCOPY --chown=autoware:autoware ./docker/generic/data/yolov2/yolo.weights /home/$USERNAME/darknet/data/yolo.weights\nCOPY --chown=autoware:autoware ./docker/generic/data/yolov3/yolov3.cfg /home/$USERNAME/darknet/cfg/yolov3.cfg\nCOPY --chown=autoware:autoware ./docker/generic/data/yolov3/yolov3.weights /home/$USERNAME/darknet/data/yolov3.weights\n\n\n# SSD dependencies\nRUN sudo apt-get update && sudo apt-get install --no-install-recommends -y libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler && rm -rf /var/lib/apt/lists/*;\nRUN sudo apt-get update && sudo apt-get install --no-install-recommends -y libboost-all-dev && rm -rf /var/lib/apt/lists/*;\nRUN sudo apt-get update && sudo apt-get install --no-install-recommends -y libatlas-base-dev libgoogle-glog-dev libgflags-dev liblmdb-dev && rm -rf /var/lib/apt/lists/*;\nRUN sudo apt-get update && sudo apt-get install --no-install-recommends -y libhdf5-10 libhdf5-serial-dev libhdf5-dev libhdf5-cpp-11 && rm -rf /var/lib/apt/lists/*;\n\n# SSD setup\nRUN cd ~ && git clone https://github.com/weiliu89/caffe.git ssdcaffe \\\n    && cd ~/ssdcaffe && git checkout 4817bf8b4200b35ada8ed0dc378dceaf38c539e4\n\nCOPY --chown=autoware:autoware ./docker/generic/data/ssd/Makefile.config /home/$USERNAME/ssdcaffe/Makefile.config\nCOPY --chown=autoware:autoware ./docker/generic/data/ssd/models/ /home/$USERNAME/ssdcaffe/models/\n\nRUN cd ~/ssdcaffe && make && make distribute\n\n\n# Install Autoware\nCOPY . /home/$USERNAME/autoware\nRUN sudo chown -R autoware /home/$USERNAME/autoware\nRUN /bin/bash -c 'source /opt/ros/kinetic/setup.bash; cd /home/$USERNAME/autoware/ros/src; git submodule update --init --recursive; catkin_init_workspace; cd ../; ./catkin_make_release'\nRUN echo \"source /home/$USERNAME/autoware/ros/devel/setup.bash\" >> /home/$USERNAME/.bashrc\n\n# Setting\nENV LANG=\"en_US.UTF-8\"\nRUN echo \"export LANG=\\\"en_US.UTF-8\\\"\" >> /home/$USERNAME/.bashrc\n\n# Install dev tools\nRUN sudo apt-get -y --no-install-recommends install vim tmux && rm -rf /var/lib/apt/lists/*;\n\n# Change Terminal Color\nRUN gconftool-2 --set \"/apps/gnome-terminal/profiles/Default/use_theme_background\" --type bool false\nRUN gconftool-2 --set \"/apps/gnome-terminal/profiles/Default/use_theme_colors\" --type bool false\nRUN gconftool-2 --set \"/apps/gnome-terminal/profiles/Default/background_color\" --type string \"#000000\"\n\n\n# Default CMD\nCMD [\"/bin/bash\"]\n"
}