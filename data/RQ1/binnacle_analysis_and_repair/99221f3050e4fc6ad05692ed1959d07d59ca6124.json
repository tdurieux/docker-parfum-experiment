{
  "startTime": 1674248493149,
  "endTime": 1674248493311,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 109
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# SPDX-License-Identifier: Apache-2.0\n# Copyright Contributors to the Egeria project\n\nFROM ubuntu:18.10 AS build\n\n# Install Git, which is missing from the Ubuntu base images.\nRUN apt-get update && apt-get install --no-install-recommends -y git python openjdk-8-jdk maven wget inetutils-ping dnsutils gzip tar && rm -rf /var/lib/apt/lists/*;\n\n# Install Java.\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64\n\n# Install Maven.\nENV MAVEN_HOME /usr/share/maven\n\n# Add Java and Maven to the path.\nENV PATH /usr/java/bin:/usr/local/apache-maven/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\n# Working directory\nWORKDIR /root\n\n# Pull down Atlas and build it into /root/atlas-bin.\nRUN git clone https://github.com/grahamwallis/atlas -b master\n\nWORKDIR /root/atlas\n\n# Appy any patches - temporary as per #922\nCOPY dist/0001-EGERIA-github-922-upgrade-kafka-version.patch /root/0001-EGERIA-github-922-upgrade-kafka-version.patch\nCOPY dist/0002-EGERIA-github-922-upgrade-findbugs.patch /root/0002-EGERIA-github-922-upgrade-findbugs.patch\nCOPY dist/0003-Fixup-Admin-services-responses-void-and-success.patch /root/0003-Fixup-Admin-services-responses-void-and-success.patch\nCOPY dist/0004-ignore-map-string-object-and-allow-creation-of-conne.patch /root/0004-ignore-map-string-object-and-allow-creation-of-conne.patch\nCOPY dist/0005-Correction-to-type-object.patch /root/0005-Correction-to-type-object.patch\nRUN git config --global user.email \"you@example.com\"\nRUN git config --global user.name \"Your Name\"\nRUN git am < /root/0001-EGERIA-github-922-upgrade-kafka-version.patch\nRUN git am < /root/0002-EGERIA-github-922-upgrade-findbugs.patch\nRUN git am < /root/0003-Fixup-Admin-services-responses-void-and-success.patch\nRUN git am < /root/0004-ignore-map-string-object-and-allow-creation-of-conne.patch\nRUN git am < /root/0005-Correction-to-type-object.patch\n# Add reference to odpi repository for snapshots\nCOPY dist/settings.xml /root/.m2/settings.xml\nWORKDIR /root\n\n# need more java heap\nENV JAVA_TOOL_OPTIONS=\"-Xmx1024m\"\n\n# Remove -DskipTests if unit tests are to be included\nRUN mvn clean install -DskipTests -Pdist,embedded-hbase-solr -DskipEnunciate -f ./atlas/pom.xml\nRUN mkdir -p atlas-bin\nRUN tar xzf /root/atlas/distro/target/*bin.tar.gz --strip-components 1 -C /root/atlas-bin && rm /root/atlas/distro/target/*bin.tar.gz\n\nWORKDIR /root/atlas\nRUN git log > git.log && echo ${branch} > git.branch && git remote -v >> git.remote\n\nFROM openjdk:8-jdk-alpine\n\nLABEL org.label-schema.schema-version = \"1.0\"\nLABEL org.label-schema.vendor = \"ODPi\"\nLABEL org.label-schema.name = \"apache-atlas-fork\"\nLABEL org.label-schema.description = \"Apache Atlas image with an embedded ODPi Egeria OMRS Server.\"\nLABEL org.label-schema.url = \"https://egeria.odpi.org/open-metadata-resources/open-metadata-deployment/\"\nLABEL org.label-schema.vcs-url = \"https://github.com/odpi/egeria/tree/master/open-metadata-resources/open-metadata-deployment/docker/atlas\"\nLABEL org.label-schema.docker.cmd = \"docker run -d -p 21000:21000 odpi/apache-atlas-fork\"\nLABEL org.label-schema.docker.debug = \"docker exec -it $CONTAINER /bin/sh\"\n\nRUN apk --no-cache add python bash && apk --no-cache update && apk --no-cache upgrade\nCOPY --from=build /root/atlas-bin/ /root/atlas-bin/\nCOPY --from=build /root/atlas/git.* /\nWORKDIR /root/atlas-bin/conf\nRUN sed -i \"s|^atlas.graph.storage.lock.wait-time=10000|atlas.graph.storage.lock.wait-time=100|g\" atlas-application.properties\nRUN echo \"atlas.notification.relationships.enabled=true\" >> atlas-application.properties\n\n# Set env variables, add it to the path, and start Atlas.\nENV JAVA_TOOL_OPTIONS=\"-Xmx1024m\"\nENV MANAGE_LOCAL_SOLR true\nENV MANAGE_LOCAL_HBASE true\nENV PATH /root/atlas-bin/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\nEXPOSE 21000\nENTRYPOINT [\"/bin/bash\", \"-c\", \"/root/atlas-bin/bin/atlas_start.py; tail -fF /root/atlas-bin/logs/application.log\"]\n"
}