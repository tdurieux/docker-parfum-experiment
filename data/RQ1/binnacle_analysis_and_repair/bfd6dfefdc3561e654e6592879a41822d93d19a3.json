{
  "startTime": 1674246347383,
  "endTime": 1674246347566,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 174
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 174
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 174
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 198
      }
    }
  ],
  "repairedDockerfile": "#####\n#\n# Used to generate the 'unidata/cloudstream' docker container.\n# Visit us on the web at http://www.unidata.ucar.edu\n#\n# Copyright Unidata 2015 - 2018\n#\n#####\n\nFROM ubuntu:trusty\nMAINTAINER Ward Fisher <wfisher@ucar.edu>\nENV CLOUDSTREAM_VERSION development\n\n# Set the following, required for IDV 5.5+\n# ENV MESA_GL_VERSION_OVERRIDE 3.1\n\n#####\n# Update base docker image.\n#####\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get -y upgrade\n\n###\n# Install bare minimum set of tools.\n###\n\nRUN apt-get install --no-install-recommends -y nano curl x11vnc xvfb xinit git python zip xdg-utils firefox python3-tk python3-pexpect fluxbox x11-apps swisswatch man mesa-utils sudo bzip2 net-tools && rm -rf /var/lib/apt/lists/*;\n\n###\n# Set up a non-root user account.\n###\n\nENV CUSER stream\nENV CUSERPWORD \"password.1234\"\n\nRUN useradd -ms /bin/bash ${CUSER}\nRUN adduser ${CUSER} sudo\n# There is no need for the password to be known, so\n# randomize it for now.\nRUN echo \"${CUSER}:${CUSERPWORD}${RANDOM} \" | chpasswd\nRUN echo \"${CUSER} ALL=NOPASSWD: ALL\" >> /etc/sudoers\n\n#####\n# Switch to the non-root user,\n# configure system and environment.\n#####\nUSER ${CUSER}\nENV HOME /home/${CUSER}\nWORKDIR ${HOME}\n\nRUN mkdir ~/.vnc\n###\n# Create a .xinitrc file.\n#\n# The environmental variable APORT = 5901 by default but can be\n# overridden when invoking 'docker run', e.g.\n#   $ docker run -e APORT=4435\n###\nRUN echo '/usr/bin/x11vnc -display :1 $SHARESTRING -autoport $APORT -repeat -forever &' > ~/.xinitrc.nopassword\nRUN echo '/usr/bin/x11vnc -usepw -display :1 $SHARESTRING -autoport $APORT -repeat -forever &' > ~/.xinitrc.password\n\nRUN echo \"/usr/bin/startfluxbox\" >> ~/.xinitrc.nopassword\nRUN echo \"/usr/bin/startfluxbox\" >> ~/.xinitrc.password\n\n###\n# Configure fluxbox.\n###\nRUN mkdir ~/.fluxbox/\nRUN bash -c 'echo \"xterm &\" >> ~/.fluxbox/startup'\nRUN echo \"/usr/bin/fluxbox -log ~/.fluxbox/log\" >> ~/.fluxbox/startup\n\n#####\n# Set up Websocket-based VNC.\n#####\n\n###\n# Expose Websocket port for VNC server.\n###\n\nENV APORT 5901\nENV WPORT 6080\n\nEXPOSE ${WPORT}\n\nRUN git clone git://github.com/kanaka/noVNC\nRUN cp /home/${CUSER}/noVNC/vnc.html /home/${CUSER}/noVNC/index.html\n\n##\n# Added an ssl-only option to a fork of noVNC,\n# use the forked version until it is merged into official repo.\n##\nRUN cd /home/${CUSER}/noVNC/utils && git clone https://github.com/kanaka/websockify\n\n\n###\n# Install rclone from prebuilt binary.\n###\nUSER root\nRUN curl -f -O https://downloads.rclone.org/rclone-current-linux-amd64.zip && unzip -j -d /usr/bin rclone-current-linux-amd64.zip\nUSER ${CUSER}\n\n###\n# We can parameterize screen dimensions\n# with the following variables.\n# e.g.\n#    docker run -p 6080:6080 -e SIZEH=800 -e SIZEW=640 -e CDEPTH=8 \\\n#                       -it [docker image] bootstrap.sh\n###\n\nENV SIZEW 1680\nENV SIZEH 1050\nENV CDEPTH 24\n\n###\n# Set up an option to allow for sharing.\n###\nENV SHARESTRING --noshared\n\n###\n# Copy over a few files.\n###\nCOPY start.sh ${HOME}/\nCOPY bootstrap.sh ${HOME}/\nCOPY Dockerfile.cloudstream.ubuntu ${HOME}/\nCOPY Dockerfile.template ${HOME}/\nCOPY README.md ${HOME}/\nCOPY COPYRIGHT_CLOUDSTREAM.md ${HOME}/\nCOPY RELEASE_NOTES.md ${HOME}/\nCOPY QUICKSTART.md ${HOME}/\n\nRUN  mv README.md CLOUDSTREAM_README.md\nADD examples ${HOME}/examples\n\n###\n# Create a version file.\n###\nENV VERSION_FILE VERSION.md\nRUN echo \"CloudStream Version: \"$CLOUDSTREAM_VERSION\" $(date)\" > $VERSION_FILE\n\n###\n# A little housekeeping.\n###\n\nUSER root\nRUN chown -R ${CUSER}:${CUSER} ${HOME}\nUSER ${CUSER}\n\n###\n# Run the bootstrap.sh script.\n# This will set up/run the VNC environment,\n# and execute the start.sh file if present.\n###\n\nCMD /home/${CUSER}/bootstrap.sh\n"
}