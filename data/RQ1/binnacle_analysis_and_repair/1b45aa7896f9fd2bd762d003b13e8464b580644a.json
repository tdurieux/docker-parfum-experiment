{
  "startTime": 1674238500844,
  "endTime": 1674238500961,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2012-2019 Red Hat, Inc.\n# This program and the accompanying materials are made\n# available under the terms of the Eclipse Public License 2.0\n# which is available at https://www.eclipse.org/legal/epl-2.0/\n#\n# SPDX-License-Identifier: EPL-2.0\n#\n# Contributors:\n#   Tyler Jewell - Initial implementation\n#\n# build:\n#   docker build -t eclipse/che-mount .\n#\n# use:\n#  On linux:\n#  docker run --rm -it --cap-add SYS_ADMIN --device /dev/fuse\n#             --name che-mount\n#             -v ${HOME}/.ssh:${HOME}/.ssh\n#             -v ${HOME}/.unison:${HOME}/.unison\n#             -v /etc/group:/etc/group:ro\n#             -v /etc/passwd:/etc/passwd:ro\n#             -u $(id -u ${USER})\n#             -v <host-dir>:/mnthost codenvy/che-mount <ws-id|ws-name>\n#           \n#  On Mac or Windows:\n#  docker run --rm -it --cap-add SYS_ADMIN --device /dev/fuse\n#             --name che-mount\n#             -v ~/.ssh:/root/.ssh\n#             -v <host-dir>:/mnthost codenvy/che-mount <ws-id|ws-name>\n#\n# RUN IN CONTAINER:\n#  echo \"secret\" | $(echo \"yes\" | sshfs user@10.0.75.2:/projects /mntssh -p 32774)\n#\n# TO UNMOUNT IN CONTAINER\n#  fusermount -u /mntssh\n#\n# INTERNAL SYNC SCRIPT\n#   /bin/synch.sh <ip> <ws-port>\nFROM alpine:3.5\n\nENV UNISON_VERSION=2.51.2\n\nRUN apk add --update build-base curl bash sshfs ocaml && \\\n    curl -f -L https://www.seas.upenn.edu/~bcpierce/unison/download/releases/unison-$UNISON_VERSION/unison-$UNISON_VERSION.tar.gz | tar xzv -C /tmp && \\\n    cd /tmp/src && \\\n    sed -i -e 's/GLIBC_SUPPORT_INOTIFY 0/GLIBC_SUPPORT_INOTIFY 1/' fsmonitor/linux/inotify_stubs.c && \\\n    make && \\\n    cp /tmp/src/unison /usr/local/bin && \\\n    cp /tmp/src/unison-fsmonitor /usr/local/bin && \\\n    apk del ocaml curl build-base bash && \\\n    rm -rf /tmp /var/cache/apk/* && \\\n    mkdir /mntssh && chmod -R 777 /mntssh && \\\n    mkdir /mnthost && chmod -R 777 /mnthost\n\nENV DOCKER_BUCKET get.docker.com\nENV DOCKER_VERSION 1.6.0\n\nRUN set -x \\\n    && apk add --no-cache \\\n    ca-certificates \\\n    curl \\\n    openssl \\\n    && curl -f -sL \"https://${DOCKER_BUCKET}/builds/Linux/x86_64/docker-$DOCKER_VERSION\" \\\n    > /usr/bin/docker; chmod +x /usr/bin/docker \\\n    && apk del curl ca-certificates openssl\n\nCOPY /entrypoint.sh /bin/entrypoint.sh\n\nENTRYPOINT [\"/bin/entrypoint.sh\"]\n"
}