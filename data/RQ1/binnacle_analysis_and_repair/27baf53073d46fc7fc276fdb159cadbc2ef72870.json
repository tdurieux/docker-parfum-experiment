{
  "startTime": 1674243029875,
  "endTime": 1674243030198,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 30,
        "columnEnd": 73
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 49,
        "columnEnd": 78
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 27,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2019 Red Hat, Inc.\n# This program and the accompanying materials are made\n# available under the terms of the Eclipse Public License 2.0\n# which is available at https://www.eclipse.org/legal/epl-2.0/\n#\n# SPDX-License-Identifier: EPL-2.0\n#\n# Contributors:\n#   Red Hat, Inc. - initial API and implementation\n\nFROM ${BUILD_ORGANIZATION}/${BUILD_PREFIX}-theia-dev:${BUILD_TAG} as builder\n\n\n# define in env variable GITHUB_TOKEN only if it is defined\n# else check if github rate limit is enough, else will abort requiring to set GITHUB_TOKEN value\nARG GITHUB_TOKEN\n\n# Check github limit\nRUN if [ ! -z \"${GITHUB_TOKEN-}\" ];then \\\n        export GITHUB_TOKEN=$GITHUB_TOKEN; \\\n        echo \"Setting GITHUB_TOKEN value as provided\"; \\\n    elif \\\n\n\n        [ \"${GITHUB_LIMIT}\" -lt 10 ]; then \\\n        export GITHUB_LIMIT=$( curl -f -s 'https://api.github.com/rate_limit' | jq '.rate .remaining'); \\\n        echo \"Current API rate limit https://api.github.com is ${GITHUB_LIMIT}\"; \\\n        if [ \"${GITHUB_LIMIT}\" -lt 10 ]; then \\\n            printf \"\\033[0;31m\\n\\n\\nRate limit on https://api.github.com is reached so in order to build this image, \"; \\\n            printf \"the build argument GITHUB_TOKEN needs to be provided so build will not fail.\\n\\n\\n\\033[0m\"; \\\n            exit 1; \\\n        else \\\n            echo \"GITHUB_TOKEN variable is not set but https://api.github.com rate limit has enough slots\"; \\\n        fielse \\\n            echo \"GITHUB_TOKEN variable is not set but https://api.github.com rate limit has enough slots\"; \\\n        fi \\\n    fi\n\n#invalidate cashe\nADD https://${GITHUB_TOKEN}:x-oauth-basic@api.github.com/repos/theia-ide/theia/git/refs/head /tmp/branch_info.json\nADD https://${GITHUB_TOKEN}:x-oauth-basic@api.github.com/repos/eclipse/che-theia/git/refs/head /tmp/branch_info.json\n\n# Grab dependencies\nCOPY /docker-build/theia-plugin-remote/package.json /home/workspace/packages/theia-remote/\nRUN cd /home/workspace/packages/theia-remote/ && yarn install --ignore-scripts && yarn cache clean;\n\n# Compile\nCOPY /docker-build/configs /home/workspace/configs\nCOPY /docker-build/theia-plugin-remote/*.json /home/workspace/packages/theia-remote/\nCOPY /docker-build/theia-plugin-remote/src /home/workspace/packages/theia-remote/src\nCOPY /docker-build/theia-plugin-ext /home/workspace/packages/theia-plugin-ext\nCOPY /docker-build/theia-plugin /home/workspace/packages/theia-plugin\nCOPY /docker-build/theia-plugin-remote/tsconfig.json /home/workspace/packages/theia-plugin/tsconfig.json\n\nCOPY /etc/package.json /home/workspace\nRUN cd /home/workspace/ && yarn install && yarn cache clean;\n\nFROM node:10.16-alpine\nENV HOME=/home/theia\nCOPY --from=builder /home/workspace/node_modules /home/theia/node_modules\nRUN rm -rf /home/theia/node_modules/@eclipse-che/theia-plugin-ext /home/theia/node_modules/@eclipse-che/theia-remote\nCOPY --from=builder /home/workspace/packages/theia-plugin-ext /home/theia/node_modules/@eclipse-che/theia-plugin-ext\nCOPY --from=builder /home/workspace/packages/theia-remote/lib /home/theia/lib\nRUN mkdir /projects \\\n    # Store passwd/group as template files\n    && cat /etc/passwd | sed s#root:x.*#root:x:\\${USER_ID}:\\${GROUP_ID}::\\${HOME}:/bin/sh#g > ${HOME}/passwd.template \\\n    && cat /etc/group | sed s#root:x:0:#root:x:0:0,\\${USER_ID}:#g > ${HOME}/group.template \\\n    # Change permissions to let any arbitrary user\n    && for f in \"${HOME}\" \"/etc/passwd\" \"/etc/group\" \"/projects\"; do \\\n        echo \"Changing permissions on ${f}\" && chgrp -R 0 ${f} && \\\n        chmod -R g+rwX ${f}; \\\n    done\nADD etc/entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n\n"
}