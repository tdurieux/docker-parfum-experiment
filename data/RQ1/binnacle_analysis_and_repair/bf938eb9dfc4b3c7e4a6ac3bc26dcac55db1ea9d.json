{
  "startTime": 1674253069476,
  "endTime": 1674253069823,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 5,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 7,
        "columnEnd": 61
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 63,
        "columnStart": 6,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 68,
        "columnStart": 6,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 57,
        "columnStart": 5,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 63,
        "columnStart": 6,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 67,
        "lineEnd": 68,
        "columnStart": 6,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 63,
        "columnStart": 6,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 68,
        "columnStart": 6,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 5
      }
    }
  ],
  "repairedDockerfile": "###############################################################################\n#-----------------------------    BUILD STAGE   ------------------------------#\n###############################################################################\n\nFROM python:2.7.16-slim-stretch as builder\n\nARG CC_VERSION=master\nENV CC_VERSION ${CC_VERSION}\n\nARG DEBIAN_FRONTEND=noninteractive\nRUN set -x && apt-get update -qq \\\n  && apt-get install -qqy --no-install-recommends \\\n    ca-certificates \\\n    curl \\\n    doxygen \\\n    git \\\n    thrift-compiler \\\n    make && rm -rf /var/lib/apt/lists/*;\n\n# Download CodeChecker release.\nRUN git clone https://github.com/Ericsson/CodeChecker.git /codechecker\nWORKDIR /codechecker\nRUN git checkout ${CC_VERSION}\n\n# Build CodeChecker web.\nRUN make -C /codechecker/web package\n\n# Remove dojo uncompressed files.\nWORKDIR /codechecker/web/build/CodeChecker\nRUN find www/scripts/plugins/dojo/ -name *.uncompressed.js -exec rm -rf '{}' \\;\n\n###############################################################################\n#--------------------------    PRODUCTION STAGE   ----------------------------#\n###############################################################################\n\nFROM python:2.7.16-slim-stretch\n\nARG CC_GID=950\nARG CC_UID=950\n\nENV CC_GID ${CC_GID}\nENV CC_UID ${CC_UID}\n\nARG INSTALL_AUTH=yes\nARG INSTALL_PG8000=no\nARG INSTALL_PSYCOPG2=yes\n\nENV TINI_VERSION v0.18.0\n\nRUN set -x && apt-get update -qq \\\n  # Prevent fail when install postgresql-client.\n  && mkdir -p /usr/share/man/man1 \\\n  && mkdir -p /usr/share/man/man7 \\\n\n  && apt-get install -qqy --no-install-recommends ca-certificates \\\n    postgresql-client \\\n    # To switch user and exec command.\n    gosu && rm -rf /var/lib/apt/lists/*;\n\nRUN if [ \"$INSTALL_AUTH\" = \"yes\" ] ; then \\\n      apt-get install -qqy --no-install-recommends \\\n        libldap2-dev \\\n        libsasl2-dev \\\n        libssl-dev; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\nRUN if [ \"$INSTALL_PSYCOPG2\" = \"yes\" ] ; then \\\n      apt-get install -qqy --no-install-recommends \\\n        libpq-dev; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\nCOPY --from=builder /codechecker/web/build/CodeChecker /codechecker\n\n# Copy python requirements.\nCOPY --from=builder /codechecker/web/requirements_py /requirements_py\nCOPY --from=builder /codechecker/web/requirements.txt /requirements_py\n\n# Install python requirements.\nRUN apt-get install -qqy --no-install-recommends \\\n  python-dev \\\n  # gcc is needed to build psutil.\n  gcc \\\n  \\\n  # Install necessary runtime environment files. \\\n  && pip install --no-cache-dir -r /requirements_py/requirements.txt \\\n  && if [ \"$INSTALL_AUTH\" = \"yes\" ] ; then \\\n       pip install --no-cache-dir -r /requirements_py/auth/requirements.txt; \\\n     fi \\\n  && if [ \"$INSTALL_PG8000\" = \"yes\" ] ; then \\\n       pip install --no-cache-dir -r /requirements_py/db_pg8000/requirements.txt; \\\n     fi \\\n  && if [ \"$INSTALL_PSYCOPG2\" = \"yes\" ] ; then \\\n       pip install --no-cache-dir -r /requirements_py/db_psycopg2/requirements.txt; \\\n     fi \\\n\n  # Remove unnecessary packages.\n  && pip uninstall -y wheel \\\n  && apt-get purge -y --auto-remove \\\n    gcc \\\n    python-dev \\\n\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/ \\\n  && set +x && rm -rf /var/lib/apt/lists/*;\n\n# Create user and group for CodeChecker.\nRUN groupadd -r codechecker -g ${CC_GID} \\\n  && useradd -r --no-log-init -M -u ${CC_UID} -g codechecker codechecker\n\n# Change permission of the CodeChecker package.\nRUN chown codechecker:codechecker /codechecker\n\nENV PATH=\"/codechecker/bin:$PATH\"\n\nCOPY ./entrypoint.sh /usr/local/bin/\nRUN chmod a+x /usr/local/bin/entrypoint.sh \\\n  && chown codechecker:codechecker /usr/local/bin/entrypoint.sh\n\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\n\nEXPOSE 8001\n\nENTRYPOINT [\"/tini\", \"--\", \"/usr/local/bin/entrypoint.sh\"]\n\nCMD [\"CodeChecker\", \"server\", \"--workspace\", \"/workspace\", \"--not-host-only\"]\n"
}