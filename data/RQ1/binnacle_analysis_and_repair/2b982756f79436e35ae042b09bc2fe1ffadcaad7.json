{
  "startTime": 1674249282491,
  "endTime": 1674249282696,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 32,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 26,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 31,
        "columnEnd": 142
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER Kevin Smyth <kevin.m.smyth@gmail.com>\n\nRUN apt-get -qq update && apt-get install -y --no-install-recommends apt-transport-https ca-certificates && rm -rf /var/lib/apt/lists/*;\nRUN printf 'deb https://deb.nodesource.com/node_0.12/ trusty main\\n' > /etc/apt/sources.list.d/nodesource-trusty.list && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68576280\n\nRUN apt-get -qq update && sudo apt-get install -y --no-install-recommends curl curl unzip build-essential openjdk-7-jdk git-core nodejs python && rm -rf /var/lib/apt/lists/*;\n\nENV JAVA_HOME /usr/lib/jvm/java-7-openjdk-amd64/\n\n# RUN ln -s /usr/bin/nodejs /usr/bin/node\n# RUN echo -e '#!/bin/sh\\nnode /usr/local/lib/node_modules/npm/bin/npm-cli.js \"$@\"' > /usr/bin/npm && chmod ugo+x /usr/bin/npm\n\nRUN npm install -g npm@2.14.1 && npm cache clean --force;\n\n\n# Install Elasticsearch.\nENV ES_PKG_NAME elasticsearch-1.7.1\n\nRUN \\\n  cd / && \\\n  curl -f -s -S https://download.elasticsearch.org/elasticsearch/elasticsearch/$ES_PKG_NAME.tar.gz | tar xvz && \\\n  mv /$ES_PKG_NAME /elasticsearch\n\n#   - 9200: elastic HTTP\n#   - 9300: elastic transport\n# EXPOSE 9200\n# EXPOSE 9300\n# VOLUME [\"/data\"]\n\n# Mount elasticsearch.yml config\n# ADD config/elasticsearch.yml /elasticsearch/config/elasticsearch.yml\n# WORKDIR /data\n\nRUN npm install -g gulp bower && npm cache clean --force;\n\nRUN mkdir -p /component-server/app\nADD ./package.json /component-server/app/package.json\nADD ./bower.json /component-server/app/bower.json\nRUN cd /component-server/app && npm install && bower --allow-root install </dev/null && npm cache clean --force;\n\nADD . /component-server/app\nADD config.server.docker.json /component-server/app/config.server.json\n\nWORKDIR /component-server/app\nRUN echo '#!/bin/bash -ex' >> /root/run.sh &&\\\n  echo '/elasticsearch/bin/elasticsearch > elaticsearch.log &' >> /root/run.sh &&\\\n  echo 'gulp compile-all' >> /root/run.sh &&\\\n  echo 'sleep 5' >> /root/run.sh &&\\\n  echo 'node bin/www' >> /root/run.sh\n\nEXPOSE 3000\nVOLUME [\"/component-server/components/\"]\n\nCMD [\"bash\", \"-xe\", \"/root/run.sh\"]\n\n# docker build -t component-server component-server\n# docker kill component-server ; docker rm -v component-server\n# docker run --rm --name component-server -v `pwd`/morph-components:/component-server/components/  -p 3000:3000 -t component-server\n# interactive for debugging: docker run -it --rm --name component-server -v `pwd`/tonkalib/components:/component-server/components/ -p 3000:3000 -t component-server bash\n"
}