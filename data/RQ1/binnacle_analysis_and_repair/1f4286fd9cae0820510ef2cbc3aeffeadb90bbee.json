{
  "startTime": 1674251111633,
  "endTime": 1674251112066,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 2,
        "columnEnd": 110
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 2,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 2,
        "columnEnd": 89
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 2,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 35,
        "columnStart": 2,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 40,
        "columnStart": 2,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 35,
        "columnStart": 2,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 40,
        "columnStart": 2,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nENV JQ_VERSION 1.5\n\nENV JQ_CHECKSUM d8e36831c3c94bb58be34dd544f44a6c6cb88568\n\nENV go_version 1.12.6\nENV cf_cli_version 6.43.0\nENV bosh_cli_version 5.5.1\nENV bbl_version 8.1.0\nENV terraform_version 0.12.3\nENV credhub_cli_version 2.5.1\nENV git_crypt_version 0.6.0\n\nRUN \\\n  apt-get update && \\\n  apt-get -y --no-install-recommends install \\\n    apt-utils \\\n    build-essential \\\n    git \\\n    libreadline7 \\\n    libreadline6-dev \\\n    libsqlite3-dev \\\n    libssl-dev \\\n    libxml2-dev \\\n    libxslt-dev \\\n    libyaml-dev \\\n    netcat-openbsd \\\n    openssl \\\n    software-properties-common \\\n    sqlite \\\n    unzip \\\n    wget \\\n    curl \\\n    zlib1g-dev \\\n    zlibc && \\\n  add-apt-repository ppa:brightbox/ruby-ng -y && \\\n  apt-get update && \\\n  apt-get -y --no-install-recommends install \\\n    ruby2.5 \\\n    ruby2.5-dev && \\\n  apt-get remove -y --purge software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# jq\nRUN \\\n  wget https://github.com/stedolan/jq/releases/download/jq-${JQ_VERSION}/jq-linux64 --output-document=\"/usr/bin/jq\" && \\\n  cd /usr/bin && \\\n  echo \"${JQ_CHECKSUM} jq\" | sha1sum -c - && \\\n  chmod +x jq\n\n# bosh-cli\nRUN \\\n  wget https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-${bosh_cli_version}-linux-amd64 --output-document=\"/usr/bin/bosh\" && \\\n  chmod +x /usr/bin/bosh\n\n# cf-cli\nRUN \\\n  cd /tmp && \\\n  wget -q -O cf.deb \"https://cli.run.pivotal.io/stable?release=debian64&version=${cf_cli_version}&source=github-rel\" && \\\n  dpkg -i cf.deb && \\\n  rm cf.deb\n\n# credhub-cli\nRUN \\\n  wget https://github.com/cloudfoundry-incubator/credhub-cli/releases/download/${credhub_cli_version}/credhub-linux-${credhub_cli_version}.tgz -P /tmp && \\\n  tar xzvf /tmp/credhub-linux-${credhub_cli_version}.tgz -C /usr/local/bin && \\\n  chmod +x /usr/local/bin/credhub && rm /tmp/credhub-linux-${credhub_cli_version}.tgz\n\n# bbl and dependencies\nRUN \\\n  wget https://github.com/cloudfoundry/bosh-bootloader/releases/download/v${bbl_version}/bbl-v${bbl_version}_linux_x86-64 -P /tmp && \\\n  mv /tmp/bbl-* /usr/local/bin/bbl && \\\n  cd /usr/local/bin && \\\n  chmod +x bbl\n\nRUN \\\n  wget https://github.com/cloudfoundry/bosh-bootloader/archive/v${bbl_version}.tar.gz -P /tmp && \\\n  mkdir -p /var/repos/bosh-bootloader && \\\n  tar xvf  /tmp/v${bbl_version}.tar.gz --strip-components=1 -C /var/repos/bosh-bootloader && \\\n  rm -rf /tmp/* && rm /tmp/v${bbl_version}.tar.gz\n\nRUN \\\n  wget \"https://releases.hashicorp.com/terraform/${terraform_version}/terraform_${terraform_version}_linux_amd64.zip\" -P /tmp && \\\n  cd /tmp && \\\n  curl -f https://releases.hashicorp.com/terraform/${terraform_version}/terraform_${terraform_version}_SHA256SUMS | grep linux_amd64 | shasum -c - && \\\n  unzip \"/tmp/terraform_${terraform_version}_linux_amd64.zip\" -d /tmp && \\\n  mv /tmp/terraform /usr/local/bin/terraform && \\\n  cd /usr/local/bin && \\\n  chmod +x terraform && \\\n  rm -rf /tmp/*\n\n# git-crypt\nRUN \\\n  wget https://github.com/AGWA/git-crypt/archive/${git_crypt_version}.tar.gz -O /tmp/git-crypt.tar.gz && \\\n  tar xzvf /tmp/git-crypt.tar.gz -C /tmp && \\\n  cd /tmp/git-crypt-${git_crypt_version} && \\\n  make PREFIX=/usr/local install && \\\n  rm -rf /tmp/* && rm /tmp/git-crypt.tar.gz\n\nENV GOPATH /go\nENV PATH /go/bin:/usr/local/go/bin:$PATH\nRUN \\\n  wget https://golang.org/dl/go${go_version}.linux-amd64.tar.gz -P /tmp && \\\n  tar xzvf /tmp/go${go_version}.linux-amd64.tar.gz -C /usr/local && \\\n  mkdir ${GOPATH} && \\\n  rm -rf /tmp/* && rm /tmp/go${go_version}.linux-amd64.tar.gz\n\n# Log Cache CLI\nRUN go get -u code.cloudfoundry.org/log-cache-cli/cmd/cf-lc-plugin && \\\n    cf install-plugin ${GOPATH}/bin/cf-lc-plugin -f\n\nRUN go get -u github.com/cloudfoundry/uptimer && \\\n  go get -u github.com/onsi/ginkgo/... && \\\n  cd ${GOPATH}/src/github.com/cloudfoundry/uptimer && \\\n    ginkgo -r -randomizeSuites -randomizeAllSpecs && \\\n  cd -\n"
}