{
  "startTime": 1674240536944,
  "endTime": 1674240537274,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 39,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM unocha/alpine-base-s6:%%UPSTREAM%%\n\nMAINTAINER UN-OCHA Operations <ops+docker@humanitarianresponse.info>\n\n# Thanks to orakili <docker@orakili.net>\n\n# Parse arguments for the build command.\nARG VERSION\nARG VCS_URL\nARG VCS_REF\nARG BUILD_DATE\n\n# A little bit of metadata management.\n# See http://label-schema.org/\nLABEL org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.vendor=\"UN-OCHA\" \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.vcs-url=$VCS_URL \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.name=\"base-php\" \\\n      org.label-schema.description=\"This service provides a base php-fpm platform.\" \\\n      org.label-schema.architecture=\"x86_64\" \\\n      org.label-schema.distribution=\"Alpine Linux\" \\\n      org.label-schema.distribution-version=\"3.8\" \\\n      info.humanitarianresponse.php=$VERSION \\\n      info.humanitarianresponse.php.modules=\"bcmath bz2 ctype curl dom fpm gd iconv imagick json mcrypt mysql opcache openssl pdo pdo_mysql pdo_pgsql phar posix sockets xml xmlreader zip zlib memcached redis\" \\\n      info.humanitarianresponse.php.sapi=\"fpm\"\n\nCOPY php-fpm.conf run_fpm msmtprc /\nCOPY APKBUILD-php5-imagick APKBUILD-php5-memcached APKBUILD-php5-redis abuild-root.patch /\n\nRUN \\\n    # This needs to happen here, or the root user won't be in\n    # the abuild group in the next command shell.\n    adduser root abuild\n\nRUN \\\n\n    apk add --no-cache --update-cache \\\n      fcgi \\\n      msmtp && \\\n\n    # Install php build dependencies.\n    apk add --no-cache --virtual .build-dependencies \\\n      php5-dev alpine-sdk && \\\n\n    # Patch abuild, so it will run as root.\n    cd /usr/bin && \\\n      patch -p0 -i /abuild-root.patch && \\\n      rm -f /abuild-root.patch && \\\n\n    # Add root to the abuild group and create abuild key.\n    abuild-keygen -a -q -n && \\\n\n    # Setup our build environments.\n    mkdir -p /usr/src/php5-imagick && \\\n      mv /APKBUILD-php5-imagick /usr/src/php5-imagick/APKBUILD && \\\n    mkdir -p /usr/src/php5-memcached && \\\n      mv /APKBUILD-php5-memcached /usr/src/php5-memcached/APKBUILD && \\\n    mkdir -p /usr/src/php5-redis && \\\n      mv /APKBUILD-php5-redis /usr/src/php5-redis/APKBUILD && rm -rf /usr/src/php5-imagick\nRUN \\\n    # Build the imagick extension. Delete the generated index, or the next\n    # step will fail because our key is not trusted.\n    cd /usr/src/php5-imagick && \\\n      abuild -F -r -P /usr && \\\n      rm -f /usr/src/x86_64/APKINDEX.tar.gz && \\\n    \\\n    # Build the memcached extension. Delete the generated index, or the next\n    # step will fail because our key is not trusted.\n    cd /usr/src/php5-memcached && \\\n      abuild -F -r -P /usr && \\\n      rm -f /usr/src/x86_64/APKINDEX.tar.gz && \\\n    \\\n    # Build the redis extension. Delete the generated index, or the next\n    # step will fail because our key is not trusted.\n    cd /usr/src/php5-redis && \\\n      abuild -F -r -P /usr && \\\n      rm -f /usr/src/x86_64/APKINDEX.tar.gz && \\\n    \\\n    # Install all built extensions.\n    apk add -U --allow-untrusted /usr/src/x86_64/php5-*.apk && \\\n    \\\n    # Install php5-cli *specifically*.\n    apk add --update-cache \\\n      php5-cli && \\\n    # Install constrib php packages and depends.\n    apk add --update-cache \\\n      php5-bcmath \\\n      php5-bz2 \\\n      php5-ctype \\\n      php5-curl \\\n      php5-dom \\\n      php5-fpm \\\n      php5-gd \\\n      php5-iconv \\\n      php5-json \\\n      php5-mcrypt \\\n      php5-mysql \\\n      php5-opcache \\\n      php5-openssl \\\n      php5-pdo \\\n      php5-pdo_mysql \\\n      php5-pdo_pgsql \\\n      php5-phar \\\n      php5-posix \\\n      php5-sockets \\\n      php5-xml \\\n      php5-xmlreader \\\n      php5-zip \\\n      php5-zlib && \\\n    \\\n    # Build php5-imagick, php5-memcached and php5-redis from source.\n    # Cleanup.\n    apk del .build-dependencies && \\\n    rm -rf /root/.abuild && \\\n    rm -rf /usr/src/* && \\\n    rm -rf /var/cache/distfiles && \\\n    rm -rf /var/cache/apk/* && \\\n    \\\n    # Setup directory structure and configure FPM.\n    mkdir -p /etc/services.d/fpm /srv/www/html && \\\n    mv /msmtprc /etc/msmtprc && \\\n    mv /run_fpm /etc/services.d/fpm/run && \\\n    mv /etc/php5/php-fpm.conf /etc/php5/php-fpm.conf.verbose && \\\n    mv /php-fpm.conf /etc/php5/php-fpm.conf && \\\n    \\\n    # Fixup the sendmail path for msmtp and set it as mailer.\n    ln -sf /usr/bin/msmtp /usr/sbin/sendmail && \\\n    ln -sf /usr/bin/msmtp /usr/bin/sendmail && \\\n    \\\n    # Configure php.\n    sed -i \\\n        -e \"s/^expose_php.*/expose_php = Off/\" \\\n        -e \"s/^;date.timezone.*/date.timezone = UTC/\" \\\n        -e \"s/^memory_limit.*/memory_limit = -1/\" \\\n        -e \"s/^max_execution_time.*/max_execution_time = 300/\" \\\n        -e \"s/^post_max_size.*/post_max_size = 128M/\" \\\n        -e \"s/^upload_max_filesize.*/upload_max_filesize = 128M/\" \\\n        -e \"s/^;sendmail_path =/sendmail_path = \\/usr\\/sbin\\/sendmail -t/\" \\\n      /etc/php5/php.ini && \\\n    echo \"error_log = \\\"/var/log/php/error.log\\\"\" | tee -a /etc/php5/php.ini && \\\n    \\\n    # Configure PHP logs.\n    rm -rf /var/log/php5 && \\\n    mkdir /var/log/php && \\\n    touch /var/log/php/error.log && \\\n    touch /var/log/php/www-error.log && \\\n    touch /var/log/php/www-slow.log\n\nEXPOSE 9000\n\n# Add a health check for the FPM server on port 9000.\nHEALTHCHECK --interval=30s --timeout=5s \\\n        CMD REDIRECT_STATUS=true SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000\n\n# Volumes\n# - Conf: /etc/php/ (php-fpm.conf, php.ini)\n# - Logs: /var/log/php\n# - Data: /srv/www, /var/lib/php/session\n"
}