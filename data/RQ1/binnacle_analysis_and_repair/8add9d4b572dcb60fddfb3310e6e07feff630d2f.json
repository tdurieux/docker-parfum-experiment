{
  "startTime": 1674242772838,
  "endTime": 1674242772993,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 33,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2017 Google Inc.  All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# To build a new docker image, run the following from the root source dir:\n# $ docker build . -f docker/Dockerfile -t $IMAGE_NAME\n\nFROM golang:1.11\n\nRUN go get -ldflags '-extldflags \"-fno-PIC -static\"' -buildmode pie -tags 'osusergo netgo static_build' github.com/googlegenomics/pipelines-tools/pipelines\n\nFROM google/cloud-sdk:slim\n\nCOPY --from=0 /go/bin/pipelines /usr/bin\n\nARG commit_sha\nENV COMMIT_SHA=${commit_sha}\n\nRUN mkdir -p /opt/gcp_variant_transforms/bin && mkdir -p /opt/gcp_variant_transforms/src\nADD / /opt/gcp_variant_transforms/src/\n\n# Needed for installing mmh3 (one of the required packages in setup.py).\nRUN apt install --no-install-recommends -y g++ && rm -rf /var/lib/apt/lists/*;\n\n# Install dependencies.\nRUN pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir --upgrade virtualenv && \\\n    virtualenv /opt/gcp_variant_transforms/venv && \\\n    . /opt/gcp_variant_transforms/venv/bin/activate && \\\n    cd /opt/gcp_variant_transforms/src && \\\n    pip install --no-cache-dir --upgrade --no-binary pyvcf .\n\nRUN printf '#!/bin/bash\\n%s\\n%s' \\\n      \". /opt/gcp_variant_transforms/venv/bin/activate && cd /opt/gcp_variant_transforms/src\" \\\n      'python -m gcp_variant_transforms.vcf_to_bq --setup_file ./setup.py \"$@\"' > \\\n      /opt/gcp_variant_transforms/bin/vcf_to_bq && \\\n    chmod +x /opt/gcp_variant_transforms/bin/vcf_to_bq\n\nRUN printf '#!/bin/bash\\n%s\\n%s' \\\n      \". /opt/gcp_variant_transforms/venv/bin/activate && cd /opt/gcp_variant_transforms/src\" \\\n      'python -m gcp_variant_transforms.vcf_to_bq_preprocess --setup_file ./setup.py \"$@\"' > \\\n      /opt/gcp_variant_transforms/bin/vcf_to_bq_preprocess && \\\n    chmod +x /opt/gcp_variant_transforms/bin/vcf_to_bq_preprocess\n\nRUN printf '#!/bin/bash\\n%s\\n%s' \\\n      \". /opt/gcp_variant_transforms/venv/bin/activate && cd /opt/gcp_variant_transforms/src\" \\\n      'python -m gcp_variant_transforms.bq_to_vcf --setup_file ./setup.py \"$@\"' > \\\n      /opt/gcp_variant_transforms/bin/bq_to_vcf && \\\n    chmod +x /opt/gcp_variant_transforms/bin/bq_to_vcf\n\nENTRYPOINT [\"/opt/gcp_variant_transforms/src/docker/pipelines_runner.sh\"]\n"
}