{
  "startTime": 1674236397929,
  "endTime": 1674236398057,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 2,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 29,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 2,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 2,
        "columnEnd": 103
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 2,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lambci/lambda-base:build\n\nENV AWS_EXECUTION_ENV=AWS_Lambda_java8\n\nWORKDIR /\n\nRUN rm -rf /var/runtime /var/lang && \\\n  curl -f https://lambci.s3.amazonaws.com/fs/java8.tgz | tar -zx -C / && \\\n  yum install -y java-1.8.0-openjdk-devel && \\\n  mkdir /usr/local/gradle && curl -f -L -o gradle.zip https://services.gradle.org/distributions/gradle-5.2-bin.zip && \\\n  unzip -d /usr/local/gradle gradle.zip && rm gradle.zip && mkdir /usr/local/maven && \\\n  curl -f -L https://mirror.metrocast.net/apache/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.tar.gz | \\\n  tar -zx -C /usr/local/maven && rm -rf /var/cache/yum\n\nENV PATH=\"/usr/local/gradle/gradle-5.2/bin:/usr/local/maven/apache-maven-3.6.0/bin:${PATH}\"\n\n# Add these as a separate layer as they get updated frequently\nRUN curl -f --silent --show-error --retry 5 https://bootstrap.pypa.io/get-pip.py | python && \\\n  pip install -U awscli boto3 aws-sam-cli==0.16.0 aws-lambda-builders==0.3.0 --no-cache-dir\n"
}