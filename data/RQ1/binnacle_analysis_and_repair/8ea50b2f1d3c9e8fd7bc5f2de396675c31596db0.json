{
  "startTime": 1674246352665,
  "endTime": 1674246352902,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update -y\nRUN apt-get install --no-install-recommends -y \\\n  g++ \\\n  make \\\n  cmake \\\n  curl \\\n  xz-utils \\\n  python && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /llvm/build\nRUN curl -f https://releases.llvm.org/6.0.0/llvm-6.0.0.src.tar.xz | \\\n  tar xJf - -C /llvm --strip-components 1\nRUN mkdir /llvm/tools/clang\nRUN curl -f https://releases.llvm.org/6.0.0/cfe-6.0.0.src.tar.xz | \\\n  tar xJf - -C /llvm/tools/clang --strip-components 1\nRUN cmake .. \\\n  -DCMAKE_BUILD_TYPE=Release \\\n  -DCMAKE_INSTALL_PREFIX=/clang \\\n  -DLLVM_TARGETS_TO_BUILD=X86 \\\n  -DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD=WebAssembly\nRUN make -j $(nproc)\nRUN make install\n\n# Install Rust as we'll use it later. We'll also be cribbing `lld` out of Rust's\n# sysroot to use when compiling libsodium\nENV CARGO_HOME /cargo\nENV RUSTUP_HOME /rustup\nRUN curl -f https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly\nENV PATH $PATH:/cargo/bin:/rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin\nRUN rustup target add wasm32-unknown-unknown\n\nENV CC /clang/bin/clang\n\nWORKDIR /\nRUN apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/jfbastien/musl\nWORKDIR /musl\nRUN git reset --hard d312ecae\nENV CFLAGS -O3 --target=wasm32-unknown-unknown-wasm -nostdlib -Wl,--no-entry\nRUN CFLAGS=\"$CFLAGS -Wno-error=pointer-sign\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/musl-sysroot wasm32\nRUN make -j$(nproc) install\n\nWORKDIR /\nRUN curl -f https://download.libsodium.org/libsodium/releases/libsodium-1.0.16.tar.gz | tar xzf -\nWORKDIR /libsodium-1.0.16\nRUN CFLAGS=\"$CFLAGS --sysroot=/musl-sysroot -DSODIUM_STATIC\" \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\n  --host=asmjs \\\n  --prefix=/musl-sysroot \\\n  --without-pthreads \\\n  --enable-minimal \\\n  --disable-asm \\\n  --disable-ssp\nRUN make -j$(nproc) install\nENV SODIUM_LIB_DIR /musl-sysroot/lib\nENV SODIUM_STATIC 1\nRUN rustup self uninstall -y\nENV PATH /rust/bin:$PATH\n"
}