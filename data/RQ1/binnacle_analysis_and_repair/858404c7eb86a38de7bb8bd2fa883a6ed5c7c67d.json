{
  "startTime": 1674242084049,
  "endTime": 1674242084320,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 57,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 7,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 7,
        "columnEnd": 96
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ros\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y git wget sudo libjpeg-dev libcairo-dev npm ros-kinetic-rosbridge-suite && rm -rf /var/lib/apt/lists/*;\nRUN ln -s /usr/bin/nodejs /usr/bin/node\nRUN useradd -m -g users ros\nRUN echo \"ros ALL=(ALL) NOPASSWD: /usr/bin/apt-get\" >> /etc/sudoers\nRUN npm install -g web3@0.20.1 && npm cache clean --force;\n\nUSER ros\nRUN rosdep update\n\nRUN cd ~ && git clone --recursive https://github.com/airalab/aira-IoT \\\n    && rm -rf aira-IoT/src/dron_ros_tutorial \\\n    && cd aira-IoT/src \\\n    && . /opt/ros/kinetic/setup.sh && catkin_init_workspace\n\nRUN cd ~/aira-IoT && . /opt/ros/kinetic/setup.sh \\\n    && rosdep install --from-paths src --ignore-src --rosdistro=kinetic -y \\\n    && catkin_make\n\nRUN cd ~/aira-IoT/src/aira_ros_bridge/aira_ros_bridge && npm install && npm cache clean --force;\n\nRUN cd ~ && wget --no-check-certificate -O - -q https://dist.ipfs.io/go-ipfs/v0.4.8/go-ipfs_v0.4.8_linux-amd64.tar.gz | tar xzv go-ipfs/ipfs && mv go-ipfs bin\n\nRUN sed -i \"0,/localhost/{s/localhost/parity/}\" ~/aira-IoT/src/aira_ros_bridge/aira_ros_bridge/lib/aira_bridge.js\n\nVOLUME [\"/home/ros/state\"]\nWORKDIR /home/ros\n\nADD ./listen-market.js /usr/local/bin/listen-market.js\nADD ./run-liability.sh /usr/local/bin/run-liability.sh\nADD ./docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\n"
}