{
  "startTime": 1674245181162,
  "endTime": 1674245181387,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 101
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### docker build --pull -t acme/starter-systemd:arbuid -f Dockerfile.arbuid .\nFROM registry.access.redhat.com/rhel7-init\nMAINTAINER Red Hat Systems Engineering <refarch-feedback@redhat.com>\n\nEXPOSE 80\n\n### Atomic/OpenShift Labels - https://github.com/projectatomic/ContainerApplicationGenericLabels\nLABEL name=\"acme/starter-systemd\" \\\n      maintainer=\"refarch-feedback@redhat.com\" \\\n      vendor=\"Acme Corp\" \\\n      version=\"3.7\" \\\n      release=\"1\" \\\n      summary=\"Acme Corp's Starter app\" \\\n      description=\"Starter app will do .....\" \\\n### Required labels above - recommended below\n      url=\"https://www.acme.io\" \\\n      run='docker run -tdi --name ${NAME} \\\n      -u 123456 \\\n      -p 8080:80 \\\n      ${IMAGE}' \\\n      io.k8s.description=\"Starter app will do .....\" \\\n      io.k8s.display-name=\"Starter app\" \\\n      io.openshift.expose-services=\"http\" \\\n      io.openshift.tags=\"acme,starter-systemd,starter,systemd\"\n\n### Atomic Help File - Write in Markdown, it will be converted to man format at build time.\n### https://github.com/projectatomic/container-best-practices/blob/master/creating/help.adoc\nCOPY systemd_setup help.md /tmp/\n\n### add licenses to this directory\nCOPY licenses /licenses\n\n### Add necessary Red Hat repos here\nRUN REPOLIST=rhel-7-server-rpms,rhel-7-server-optional-rpms \\\n### Add your package needs here\n    INSTALL_PKGS=\"golang-github-cpuguy83-go-md2man \\\n      cronie \\\n      httpd\" && \\\n    yum -y update-minimal --disablerepo \"*\" --enablerepo rhel-7-server-rpms --setopt=tsflags=nodocs \\\n      --security --sec-severity=Important --sec-severity=Critical && \\\n    yum -y install --disablerepo \"*\" --enablerepo ${REPOLIST} --setopt=tsflags=nodocs ${INSTALL_PKGS} && \\\n### help file markdown to man conversion\n    go-md2man -in /tmp/help.md -out /help.1 && \\\n    yum clean all && rm -rf /var/cache/yum\n\n### Setup user for build execution and application runtime\nENV USER_NAME=default \\\n    APP_ROOT=/opt/app-root\nENV PATH=${APP_ROOT}/bin:${PATH} HOME=${APP_ROOT}\nCOPY bin/ ${APP_ROOT}/bin/\nRUN chmod -R u+x ${APP_ROOT}/bin /tmp/systemd_setup && \\\n    chgrp -R 0 ${APP_ROOT} && \\\n    chmod -R g=u ${APP_ROOT} /tmp/systemd_setup /etc/passwd\n\n####### Add app-specific needs below. #######\n### systemd requirements\nRUN MASK_JOBS=\"sys-fs-fuse-connections.mount getty.target systemd-initctl.socket systemd-logind.service\" && \\\n    systemctl mask ${MASK_JOBS} && \\\n    for i in ${MASK_JOBS}; do find /usr/lib/systemd/ -iname $i | grep \".wants\" | xargs rm -f; done && \\\n    systemctl enable httpd crond && \\\n    /tmp/systemd_setup\n\n### Containers should NOT run as root as a good practice\nUSER 10001\nWORKDIR ${APP_ROOT}\n\nVOLUME /var/log/httpd /tmp /run\n"
}