{
  "startTime": 1674250997108,
  "endTime": 1674250998038,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 8,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 8,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 8,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 8,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 8,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 8,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 8,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 8,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 8,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 8,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 8,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 8,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 8,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 8,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 8,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 8,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 8,
        "columnEnd": 75
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 8,
        "columnEnd": 102
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 8,
        "columnEnd": 97
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 8,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 80,
        "columnStart": 8,
        "columnEnd": 43
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 88,
        "lineEnd": 89,
        "columnStart": 8,
        "columnEnd": 43
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 8,
        "columnEnd": 165
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 8,
        "columnEnd": 113
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 8,
        "columnEnd": 111
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 8,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 132,
        "lineEnd": 157,
        "columnStart": 8,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM frolvlad/alpine-oraclejdk8:slim\nVOLUME  /tmp\nWORKDIR /tmp/workdir\nADD     alexa.translator.server-1.0.0.jar app.jar\nRUN     sh -c 'touch /app.jar'\nENV         JAVA_OPTS=\"\" \\\n            FFMPEG_VERSION=3.2.2 \\\n            FDKAAC_VERSION=0.1.4 \\\n            LAME_VERSION=3.99.5  \\\n            OGG_VERSION=1.3.2    \\\n            OPUS_VERSION=1.1.1   \\\n            THEORA_VERSION=1.1.1 \\\n            YASM_VERSION=1.3.0   \\\n            VORBIS_VERSION=1.3.5 \\\n            VPX_VERSION=1.6.0    \\\n            XVID_VERSION=1.3.4   \\\n            X265_VERSION=2.0     \\\n            X264_VERSION=20160826-2245-stable \\\n            PKG_CONFIG_PATH=/usr/local/lib/pkgconfig \\\n            SRC=/usr/local\n\nENTRYPOINT [ \"sh\", \"-c\", \"java $JAVA_OPTS -Dspring.profiles.active=prod -Djava.security.egd=file:/dev/./urandom -jar /app.jar\" ]\n\nRUN buildDeps=\"autoconf \\\n                   automake \\\n                   bash \\\n                   binutils \\\n                   bzip2 \\\n                   cmake \\\n                   curl \\\n\t\t   coreutils \\\n                   g++ \\\n                   gcc \\\n                   libtool \\\n                   make \\\n                   openssl-dev \\\n                   tar \\\n                   yasm \\\n                   zlib-dev\" && \\\n        export MAKEFLAGS=\"-j$(($(grep -c ^processor /proc/cpuinfo) + 1))\" && \\\n        apk  add --update ${buildDeps} libgcc libstdc++ ca-certificates && \\\n\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n## x264 http://www.videolan.org/developers/x264.html\n        curl -f -sL https://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | \\\n        tar -jx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-pic --enable-shared --disable-cli && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && \\\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n## x265 http://x265.org/\n        curl -f -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz | \\\n        tar -zx && \\\n        cd x265_${X265_VERSION}/build/linux && \\\n        ./multilib.sh && \\\n        make -C 8bit install && \\\n        rm -rf ${DIR} && \\\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n## libogg https://www.xiph.org/ogg/\n        curl -f -sL https://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datarootdir=${DIR} && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && \\\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n## libopus https://www.opus-codec.org/\n        curl -f -sL https://downloads.xiph.org/releases/opus/opus-${OPUS_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        autoreconf -fiv && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && \\\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n## libvorbis https://xiph.org/vorbis/\n        curl -f -sL https://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" \\\n        --disable-static --datadir=\"${DIR}\" && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && \\\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n## libtheora http://www.theora.org/\n        curl -f -sL https://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.bz2 | \\\n        tar -jx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" \\\n        --disable-static --datadir=\"${DIR}\" && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && \\\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n## libvpx https://www.webmproject.org/code/\n        curl -f -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | \\\n        tar -zx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && \\\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n## libmp3lame http://lame.sourceforge.net/\n        curl -f -sL https://downloads.sf.net/project/lame/lame/${LAME_VERSION%.*}/lame-${LAME_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --enable-nasm --datarootdir=\"${DIR}\" && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && \\\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n## xvid https://www.xvid.com/\n        curl -f -sL https://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz | \\\n        tar -zx && \\\n        cd xvidcore/build/generic && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --datadir=\"${DIR}\" --disable-static --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && \\\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n## fdk-aac https://github.com/mstorsjo/fdk-aac\n        curl -f -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        autoreconf -fiv && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" && \\\n        make && \\\n        make install && \\\n        make distclean && \\\n        rm -rf ${DIR} && \\\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n## ffmpeg https://ffmpeg.org/\n        curl -f -sL https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" \\\n        --extra-cflags=\"-I${SRC}/include\" \\\n        --extra-ldflags=\"-L${SRC}/lib\" \\\n        --bindir=\"${SRC}/bin\" \\\n        --disable-doc \\\n\t--disable-static \\\n\t--enable-shared \\\n\t--disable-ffplay \\\n        --extra-libs=-ldl \\\n        --enable-version3 \\\n        --enable-libfdk_aac \\\n        --enable-libmp3lame \\\n        --enable-libopus \\\n        --enable-libtheora \\\n        --enable-libvorbis \\\n        --enable-libvpx \\\n        --enable-libx264 \\\n        --enable-libx265 \\\n        --enable-libxvid \\\n\t--enable-gpl \\\n        --enable-avresample \\\n        --enable-postproc \\\n        --enable-nonfree \\\n        --disable-debug \\\n        --enable-small \\\n        --enable-openssl && \\\n        make && \\\n        make install && \\\n        make distclean && \\\n        hash -r && \\\n        cd tools && \\\n        make qt-faststart && \\\n        cp qt-faststart ${SRC}/bin && \\\n        rm -rf ${DIR} && \\\n# cleanup\n        cd && \\\n        apk del ${buildDeps} && \\\n\trm -rf /var/cache/apk/* /usr/local/include && \\\n        ffmpeg -buildconf\n\n"
}