{
  "startTime": 1674235295457,
  "endTime": 1674235295807,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 14,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Grigori Fursin <Grigori.Fursin@cTuning.org>\nMAINTAINER Anton Lokhmotov <anton@dividiti.com>\n\n# Install min standard packages.\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    git bzip2 sudo wget zip && rm -rf /var/lib/apt/lists/*;\n\n# Install Android SDK\nRUN cd /opt ; \\\r\n    wget https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz ; \\\r\n    gzip -d android-sdk_r24.4.1-linux.tgz ; \\\r\n    tar xvf android-sdk_r24.4.1-linux.tar ; \\\r\n    rm android-sdk_r24.4.1-linux.tar\n\n# Install standard packages.\nRUN apt-get install --no-install-recommends -y \\\n    python-all \\\n    python-pip \\\n    default-jre \\\n    libjpeg8 libjpeg62-dev libfreetype6 libfreetype6-dev python-pillow && rm -rf /var/lib/apt/lists/*;\n\n# Install the core Collective Knowledge (CK) module.\nENV CK_ROOT=/root/ck-master \\\r\n    CK_REPOS=/root/CK \\\r\n    CK_TOOLS=/root/CK-TOOLS\n\nENV ANDROID_HOME=/opt/android-sdk-linux\n\nENV PATH=${CK_ROOT}/bin:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${PATH}\n\nRUN mkdir -p ${CK_ROOT} ${CK_REPOS} ${CK_TOOLS}\nRUN git clone https://github.com/ctuning/ck.git ${CK_ROOT}\nRUN cd ${CK_ROOT} && python setup.py install && python -c \"import ck.kernel as ck\"\n\n# Install other CK modules.\nRUN ck pull repo:ck-web\n\n# Update Android SDK (extra deps) - need expect to automate license acceptance\n#RUN android list sdk --extended --all\n#RUN android list sdk --extended\nRUN apt-get install --no-install-recommends -y expect && rm -rf /var/lib/apt/lists/*;\n\nCOPY update_android.sh /usr/bin/update_android.sh\n\nRUN chmod 755 /usr/bin/update_android.sh\nRUN /usr/bin/update_android.sh\n\n# Install Android NDK\nRUN cd /opt ; wget https://dl.google.com/android/repository/android-ndk-r11c-linux-x86_64.zip\nRUN cd /opt ; unzip android-ndk-r11c-linux-x86_64.zip\n\n# Add CK-WA (and automatically unzip)\nRUN cd ${CK_REPOS} ; mkdir -p ck-wa ;\nCOPY ckr-ck-wa.zip ${CK_REPOS}/ck-wa/ckr-ck-wa.zip\nRUN cd ${CK_REPOS}/ck-wa ; unzip ckr-ck-wa.zip ; rm ckr-ck-wa.zip ; ck import repo --quiet\n\n# Install WA via CK\nRUN ck install package:arm-wa-github\n\n#Create and copy some existing keys (without pass)\n# to allow access from this Docker client\n# to any given Android device\n#RUN mkdir -m 0750 /root/.android\nCOPY adbkey.pub /root/.android/adbkey.pub\nCOPY adbkey /root/.android/adbkey\n\n# interactive, if needed to debug\n#CMD bash\n\n# Check ADB\nCMD adb devices\n\n# Check WA\n#CMD wa --help ; ck run wa:dhrystone --out=json\n\n# Set the CK web service defaults.\nENV CK_PORT=3344 \\\r\n    WFE_PORT=3344\n\n# Expose CK port\nEXPOSE ${CK_PORT}\n\n\n\n# Start the CK web service.\n# Note, that container will have it's own IP,\n# that's why we need `hostname -i` below\n#CMD export CK_LOCAL_HOST=`hostname -i` ; \\\n#    if [ \"${CK_HOST}\" = \"\" ]; then export CK_HOST=$CK_LOCAL_HOST ; fi ; \\\n#    if [ \"${WFE_HOST}\" = \"\" ]; then export WFE_HOST=$CK_LOCAL_HOST ; fi ; \\\n#    ck start web \\\n#    --host=${CK_HOST} --port=${CK_PORT} \\\n#    --wfe_host=${WFE_HOST} --wfe_port=${WFE_PORT}\n\nCMD bash\n"
}