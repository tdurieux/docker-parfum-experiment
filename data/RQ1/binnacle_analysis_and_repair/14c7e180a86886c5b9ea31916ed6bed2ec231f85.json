{
  "startTime": 1674247999175,
  "endTime": 1674247999488,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 8,
        "columnStart": 36,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 8,
        "columnStart": 36,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nMAINTAINER Bryan Briney <briney@scripps.edu>\n\n# Initial configuration\nRUN apt-get update --fix-missing && apt-get install --no-install-recommends -y build-essential wget \\\n    bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 pigz s3cmd \\\n    git mercurial subversion libtool automake zlib1g-dev libbz2-dev pkg-config \\\n    muscle mafft cd-hit unzip libfontconfig1 && rm -rf /var/lib/apt/lists/*;\nRUN ln -s /usr/bin/cdhit /usr/bin/cd-hit\nRUN mkdir /tools\n\n# Anaconda\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \\\n    wget --quiet https://repo.continuum.io/archive/Anaconda2-4.0.0-Linux-x86_64.sh && \\\n    /bin/bash /Anaconda2-4.0.0-Linux-x86_64.sh -b -p /opt/conda && \\\n    rm /Anaconda2-4.0.0-Linux-x86_64.sh\nENV PATH /opt/conda/bin:$PATH\n\n# MongoDB\nENV GPG_KEYS \\\n    DFFA3DCF326E302C4787673A01C4E7FAAAB2461C \\\n    42F3E95A2C4F08279C4960ADD68FA50FEA312927\nRUN set -ex \\\n    && for key in $GPG_KEYS; do \\\n        apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n    done\nENV MONGO_MAJOR 3.2\nENV MONGO_VERSION 3.2.4\nRUN echo \"deb http://repo.mongodb.org/apt/debian wheezy/mongodb-org/$MONGO_MAJOR main\" > /etc/apt/sources.list.d/mongodb-org.list\nRUN set -x \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        mongodb-org=$MONGO_VERSION \\\n        mongodb-org-server=$MONGO_VERSION \\\n        mongodb-org-shell=$MONGO_VERSION \\\n        mongodb-org-mongos=$MONGO_VERSION \\\n        mongodb-org-tools=$MONGO_VERSION \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /var/lib/mongodb \\\n    && mv /etc/mongod.conf /etc/mongod.conf.orig\n\n# Tini\n# What's Tini? See https://github.com/krallin/tini/\nENV TINI_VERSION v0.9.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini\nRUN chmod +x /usr/bin/tini\n\n# PANDAseq\nRUN cd /tools && \\\n    git clone https://github.com/neufeld/pandaseq && \\\n    cd pandaseq && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install && \\\n    ldconfig\n\n# BaseSpace Python SDK\nRUN cd /tools && \\\n    git clone https://github.com/basespace/basespace-python-sdk && \\\n    cd basespace-python-sdk/src && \\\n    python setup.py install\n\n# FASTQC\nRUN cd /tools && \\\n    wget https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.5.zip && \\\n    unzip fastqc_v0.11.5.zip && \\\n    ln -s FastQC/fastqc /usr/local/bin/fastqc\n\n# Cutadapt\nRUN pip install --no-cache-dir cutadapt\n\n# Sickle\nRUN cd /tools && \\\n    wget https://zlib.net/zlib128.zip && \\\n    unzip zlib128.zip && \\\n    cd zlib-1.2.8 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install\nRUN cd /tools && \\\n    git clone https://github.com/najoshi/sickle && \\\n    cd sickle && \\\n    make && \\\n    ln -s ./sickle /usr/local/bin/sickle\n\n# AbStar\nRUN pip install --no-cache-dir abstar\n\n# http://bugs.python.org/issue19846\nENV LANG C.UTF-8\n\nENTRYPOINT [ \"/usr/bin/tini\", \"--\" ]\nCMD [ \"/bin/bash\" ]"
}