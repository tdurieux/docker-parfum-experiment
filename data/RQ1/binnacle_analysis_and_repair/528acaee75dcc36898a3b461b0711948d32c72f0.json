{
  "startTime": 1674240349178,
  "endTime": 1674240349239,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# Set an encoding to make things work smoothly.\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\n# Add a timestamp for the build. Also, bust the cache.\nADD https://now.httpbin.org/when/now /opt/docker/etc/timestamp\n\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get --yes -qq update \\\n && apt-get --yes -qq upgrade \\\n && apt-get --yes --no-install-recommends -qq install \\\n                      bzip2 \\\n                      cpio \\\n                      curl \\\n                      g++ \\\n                      gcc \\\n                      gfortran \\\n                      git \\\n                      libblas-dev \\\n                      libhdf5-dev \\\n                      libidn11-dev \\\n                      liblapack-dev \\\n                      liblua5.3 \\\n                      libopenmpi-dev \\\n                      libpython3-all-dev \\\n                      libscalapack-openmpi-dev \\\n                      lua5.3 \\\n                      openmpi-bin \\\n                      pkg-config \\\n                      python-dev \\\n                      python-pip \\\n                      python-tk \\\n                      python3-dev \\\n                      python3-pip \\\n                      python3-tk \\\n                      uuid-dev \\\n && rm -rf /var/lib/apt/lists/*\n\n# Run common commands\nCOPY run_commands /opt/docker/bin/run_commands\nRUN /opt/docker/bin/run_commands\n\nENV PATH $PATH:/root/.local/bin:/opt/cmake/bin\n\nENV LD_LIBRARY_PATH /root/.local/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}\n\nSHELL [\"/bin/bash\"]\n"
}