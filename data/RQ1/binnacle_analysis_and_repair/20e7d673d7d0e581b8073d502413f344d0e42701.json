{
  "startTime": 1674248824810,
  "endTime": 1674248825251,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 1,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM latexjs/texlive\n# 1.Set up Emscripten.\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --no-install-suggests -y \\\n        default-jre \\\n        unzip \\\n        && rm -rf /var/lib/apt/lists/*\nRUN wget https://s3.amazonaws.com/mozilla-games/emscripten/releases/emsdk-portable.tar.gz && \\\n    tar -xvzf emsdk-portable.tar.gz && rm emsdk-portable.tar.gz && \\\n    cd emsdk-portable && ./emsdk update\nRUN cd emsdk-portable && ./emsdk install latest\nRUN cd emsdk-portable && ./emsdk activate latest\nENV PATH /app/emsdk-portable:/app/emsdk-portable/clang/tag-e1.37.9/build_tag-e1.37.9_64/bin:/app/emsdk-portable/node/4.1.1_64bit/bin:/app/emsdk-portable/emscripten/tag-1.37.9:$PATH\nRUN emcc --version\n# 2. Get hold of the latest sources for texlive 2016.\nRUN wget https://mirror.ox.ac.uk/sites/ctan.org/systems/texlive/Source/texlive-20160523b-source.tar.xz && \\\n\ttar xJvf texlive-20160523b-source.tar.xz && \\\n    mkdir texlive_binary_build && cd ./texlive_binary_build && \\\n    ../texlive-*-source/configure \\\n        --without-x \\\n        --disable-shared \\\n        --disable-all-pkgs \\\n        --enable-pdftex \\\n        --enable-bibtex \\\n        --enable-native-texlive-build && make && rm texlive-20160523b-source.tar.xz\n# 3. Build the binaries for pdftex/bibtex for real. The compilation\n# process of pdftex etc uses some of these binaries, so we make them\n# natively so we can provide them below.\nRUN cd ./texlive_binary_build/texk/web2c && make pdftex && make bibtex\n# 4. Now attemt to make an emscripten build of pdftex - we know this\n# will fail without the native binaries...\nRUN mkdir texlive_emscripten_build && cd ./texlive_emscripten_build && \\\n    EMCONFIGURE_JS=0 emconfigure ../texlive-*-source/configure \\\n        --without-x \\\n        --disable-shared \\\n        --disable-all-pkgs \\\n        --enable-pdftex \\\n        --enable-bibtex \\\n        --enable-native-texlive-build CC=emcc CFLAGS='-DELIDE_CODE -O3'\nRUN cd ./texlive_emscripten_build && EMCONFIGURE_JS=0 emconfigure make\nRUN cd ./texlive_emscripten_build/texk/web2c && emmake make pdftex; exit 0\n# 5. Copy in the binaries from above and rebuild, this time we will succeed.\nRUN cd /app/texlive_binary_build/texk/web2c/ && \\\n    cp ctangle tangle tie pdftex-pool.c /app/texlive_emscripten_build/texk/web2c/ && \\\n    cd /app/texlive_emscripten_build/texk/web2c/ && \\\n    chmod 777 ctangle tangle tie pdftex-pool.c && \\\n    cd /app/texlive_binary_build/texk/web2c/web2c/ && \\\n    cp fixwrites splitup web2c /app/texlive_emscripten_build/texk/web2c/web2c/ && \\\n    cd /app/texlive_emscripten_build/texk/web2c/web2c/ && \\\n    chmod 777 fixwrites splitup web2c\nRUN cd ./texlive_emscripten_build/texk/web2c && emmake make pdftex \\\n        CC=emcc CFLAGS='-DELIDE_CODE -O3 --profiling-funcs' \\\n        -o tangle -o tie -o web2c -o pdftex-pool.c\nRUN cd ./texlive_emscripten_build/texk/web2c && emmake make bibtex \\\n        CC=emcc CFLAGS='-DELIDE_CODE -O3 --profiling-funcs' \\\n        -o tangle -o tie -o web2c -o pdftex-pool.c\n# 6a. All that's left to do is the final compile for both pdflatex.js, bibtex.js and kpsewhich.js.\nCOPY pre.js latex.js latexjs.json latexmk_config.pl demo.tex ./\nRUN cp ./texlive_emscripten_build/texk/web2c/pdftex pdftex.bc && \\\n    emcc -v --memory-init-file 0 -O3 --profiling-funcs \\\n    -s TOTAL_MEMORY=134217728 -s INVOKE_RUN=1 \\\n    --pre-js pre.js -o pdflatex.js pdftex.bc && \\\n    \\\n    cp ./texlive_emscripten_build/texk/web2c/bibtex bibtex.bc && \\\n\temcc -v --memory-init-file 0 -O3 --profiling-funcs \\\n    -s TOTAL_MEMORY=134217728 -s INVOKE_RUN=1 \\\n    --pre-js pre.js -o bibtex.js bibtex.bc && \\\n    \\\n    cp ./texlive_emscripten_build/texk/kpathsea/kpsewhich kpsewhich.bc && \\\n    emcc -v --memory-init-file 0 -O3 --profiling-funcs \\\n    -s INVOKE_RUN=1 \\\n    --pre-js pre.js -o kpsewhich.js kpsewhich.bc && \\\n    \\\n    rm pdftex.bc bibtex.bc  kpsewhich.bc pre.js\n# 6b. Test everything is working.\nRUN node pdflatex.js --version && \\\n    node pdflatex.js -synctex=1 -interaction=nonstopmode -output-format pdf demo.tex && \\\n    node bibtex.js --version && \\\n    node kpsewhich.js --version\n# 7. Clear up everything\nRUN rm -rf ./demo.* ./emsdk-portable ./texlive-*-source* ./texlive_binary_build ./texlive_emscripten_build  /root/.emscripten* /root/.latexjs\n# Tidy up the build apps into their own dir.\nRUN mkdir apps && mv latex.js pdflatex.js bibtex.js kpsewhich.js latexmk_config.pl ./apps/\n# 8. Now we add latexmk (the most up to date version we can from source)\nRUN cd ./apps/ && \\\n    wget https://github.com/latexjs/latexmk/raw/master/latexmk.exe && \\\n    wget https://github.com/latexjs/latexmk/raw/master/latexmk.pl\n# 9. Build the manifest to make the complete distribution.\nCOPY build_manifest.py ./\nRUN python build_manifest.py && rm build_manifest.py\nRUN cp apps/latex.js . && gzip -9v latexjs.json ./apps/* ./texlive/*/thinfs_db.json\n"
}