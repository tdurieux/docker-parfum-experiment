{
  "startTime": 1674250573002,
  "endTime": 1674250573277,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 16,
        "columnEnd": 84
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 16,
        "columnEnd": 84
      }
    }
  ],
  "repairedDockerfile": "FROM mozilla/lua_sandbox_extensions:master\n\nWORKDIR /root\n\nRUN yum makecache && \\\n    yum install -y git rpm-build c-compiler make curl gcc gcc-c++ zlib-devel \\\n    openssl-devel epel-release centos-release-scl source-highlight && \\\n    yum install -y devtoolset-6 && \\\n    curl -f -OL https://cmake.org/files/v3.10/cmake-3.10.2-Linux-x86_64.tar.gz && \\\n    if [[ `sha256sum cmake-3.10.2-Linux-x86_64.tar.gz | awk '{print $1}'` != \\\n        \"7a82b46c35f4e68a0807e8dc04e779dee3f36cd42c6387fd13b5c29fe62a69ea\" ]]; then exit 1; fi && \\\n    (cd /usr && tar --strip-components=1 -zxf /root/cmake-3.10.2-Linux-x86_64.tar.gz) && rm -rf /var/cache/yum\n\n# Use devtoolset-6\nENV PERL5LIB='PERL5LIB=/opt/rh/devtoolset-6/root//usr/lib64/perl5/vendor_perl:/opt/rh/devtoolset-6/root/usr/lib/perl5:/opt/rh/devtoolset-6/root//usr/share/perl5/vendor_perl' \\\n    X_SCLS=devtoolset-6 \\\n    PCP_DIR=/opt/rh/devtoolset-6/root \\\n    LD_LIBRARY_PATH=/opt/rh/devtoolset-6/root/usr/lib64:/opt/rh/devtoolset-6/root/usr/lib \\\n    PATH=/opt/rh/devtoolset-6/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \\\n    PYTHONPATH=/opt/rh/devtoolset-6/root/usr/lib64/python2.7/site-packages:/opt/rh/devtoolset-6/root/usr/lib/python2.7/site-packages\n\n# Compile and install boost and libwt\n#\n# We have boost and libwt pinned and specific versions here, and build lua_sandbox\n# from the master branch\nRUN curl -f -OL https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz && \\\n    if [[ `sha256sum boost_1_65_1.tar.gz | awk '{print $1}'` != \\\n        \"a13de2c8fbad635e6ba9c8f8714a0e6b4264b60a29b964b940a22554705b6b60\" ]]; then exit 1; fi && \\\n    tar -zxf boost_1_65_1.tar.gz && \\\n    cd boost_1_65_1 && ./bootstrap.sh && (./b2 -j 4 link=static install >/dev/null || true) && cd .. && \\\n    curl -f -OL https://github.com/emweb/wt/archive/3.3.9.tar.gz && \\\n    if [[ `sha256sum 3.3.9.tar.gz | awk '{print $1}'` != \\\n        \"0f0e2638001a312b0cb3f920a6eaf9692ebb4ad70f33068ca888724a7f482501\" ]]; then exit 1; fi && \\\n    tar -zxf 3.3.9.tar.gz && mkdir -p wt-3.3.9/release && \\\n    cd wt-3.3.9/release && cmake cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=off -DSHARED_LIBS=OFF .. && \\\n    make -j4 && make install && cd ../.. && rm boost_1_65_1.tar.gz\n\n# Add the hindsight_admin project and compile/package/install hindsight_admin\nADD . /root/hindsight_admin\nRUN mkdir -p hindsight_admin/release && cd hindsight_admin/release && \\\n    cmake -DCMAKE_BUILD_TYPE=release .. && \\\n    make && cpack -G RPM && rpm -i *.rpm\n\n# Add a default RUN command\nCMD /usr/bin/su - hindsight -c 'cd /home/hindsight && /usr/share/hindsight_admin/run.sh'\n"
}