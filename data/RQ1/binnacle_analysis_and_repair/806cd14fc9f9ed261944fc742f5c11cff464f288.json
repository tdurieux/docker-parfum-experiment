{
  "startTime": 1674244288299,
  "endTime": 1674244288894,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 62
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 2,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 2,
        "columnEnd": 20
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 87,
        "columnStart": 2,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 36,
        "columnEnd": 111
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 33,
        "columnEnd": 102
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 5,
        "columnEnd": 71
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 5,
        "columnEnd": 42
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 43
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 5,
        "columnEnd": 72
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 89
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 52
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 5,
        "columnEnd": 43
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 56
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 5,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7-alpine3.9\n\nENV OMAHA_SERVER_PATH /srv/omaha\nWORKDIR ${OMAHA_SERVER_PATH}\n\n# Add low-level dependencies\nRUN \\\n  apk add --no-cache bash ca-certificates \\\n  && apk add --no-cache nginx supervisor openrc \\\n  && apk add --no-cache --virtual dev-deps build-base \\\n  && apk add --no-cache py3-lxml py-psycopg2 py-pillow \\\n  && apk add --no-cache fuse-dev libxml2-dev libxslt-dev libcurl curl-dev libstdc++ \\\n  && apk add --no-cache --virtual fuse-deps autoconf automake libtool pkgconfig openssl-dev wget tar \\\n  && apk add --no-cache linux-headers pcre-dev gd-dev geoip-dev \\\n  && apk add --no-cache openssl pcre zlib zlib-dev \\\n  && apk add --no-cache build-base lua5.1-dev luarocks \\\n  && apk add --no-cache postgresql-libs postgresql-dev libc6-compat gzip \\\n  && apk add --no-cache libffi-dev \\\n  && pip install --no-cache-dir lxml\n\n# Prepare for building Nginx. Intsall LuaJIT.\nRUN \\\n  apk add --no-cache luajit luajit-dev nginx-lua nginx-mod-http-lua \\\n  && wget https://luajit.org/download/LuaJIT-2.1.0-beta3.tar.gz \\\n  && tar -xzvf LuaJIT-2.1.0-beta3.tar.gz && rm LuaJIT-2.1.0-beta3.tar.gz \\\n  && cd LuaJIT-2.1.0-beta3 \\\n  && make \\\n  && make install\n\nENV LUAJIT_LIB /usr/local/lib\nENV LUAJIT_INC /usr/local/include/luajit-2.1\n\n# Build Lua module for Nginx\nRUN \\\n  luarocks-5.1 install lua-zlib && \\\n  cd /tmp && \\\n  NGINX_VERSION=`nginx -v 2>&1 | grep -o '[[:digit:]].*$'` && \\\n  wget https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz && \\\n  tar -xzvf nginx-$NGINX_VERSION.tar.gz && \\\n  wget -qO- https://api.github.com/repos/openresty/lua-nginx-module/tags | grep -m 1 tarball_url | cut -d '\"' -f 4 | xargs wget -O lua-nginx-module.tar && \\\n  mkdir -p /tmp/lua-nginx-module && tar -xvf lua-nginx-module.tar -C /tmp/lua-nginx-module --strip-components=1 && \\\n  wget -qO- https://api.github.com/repos/simpl/ngx_devel_kit/tags | grep -m 1 tarball_url | cut -d '\"' -f 4 | xargs wget -O ngx_devel_kit.tar && \\\n  mkdir -p /tmp/ngx_devel_kit && tar -xvf ngx_devel_kit.tar -C /tmp/ngx_devel_kit --strip-components=1 && \\\n  cd nginx-$NGINX_VERSION && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/var/lib/nginx \\\n    --sbin-path=/usr/sbin/nginx \\\n    --modules-path=/usr/lib/nginx/modules \\\n    --conf-path=/etc/nginx/nginx.conf \\\n    --pid-path=/run/nginx/nginx.pid \\\n    --lock-path=/run/nginx/nginx.lock \\\n    --http-client-body-temp-path=/var/tmp/nginx/client_body \\\n    --http-proxy-temp-path=/var/tmp/nginx/proxy \\\n    --http-fastcgi-temp-path=/var/tmp/nginx/fastcgi \\\n    --http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \\\n    --http-scgi-temp-path=/var/tmp/nginx/scgi \\\n    --user=nginx \\\n    --group=nginx \\\n    --with-threads \\\n    --with-file-aio \\\n    --with-http_ssl_module \\\n    --with-http_v2_module \\\n    --with-http_realip_module \\\n    --with-http_addition_module \\\n    --with-http_xslt_module=dynamic \\\n    --with-http_image_filter_module=dynamic \\\n    --with-http_geoip_module=dynamic \\\n    --with-http_sub_module \\\n    --with-http_dav_module \\\n    --with-http_flv_module \\\n    --with-http_mp4_module \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_auth_request_module \\\n    --with-http_random_index_module \\\n    --with-http_secure_link_module \\\n    --with-http_degradation_module \\\n    --with-http_slice_module \\\n    --with-http_stub_status_module \\\n    --with-mail=dynamic \\\n    --with-mail_ssl_module \\\n    --with-stream=dynamic \\\n    --with-stream_ssl_module \\\n    --with-stream_realip_module \\\n    --with-stream_geoip_module=dynamic \\\n    --with-stream_ssl_preread_module \\\n    --add-dynamic-module=/tmp/ngx_devel_kit \\\n    --add-dynamic-module=/tmp/lua-nginx-module && \\\n  make build && \\\n  cp objs/ndk_http_module.so /usr/lib/nginx/modules/ndk_http_module.so && \\\n  cp objs/ngx_http_lua_module.so /usr/lib/nginx/modules/ngx_http_lua_module.so && \\\n  cd /tmp && \\\n  rm -R /tmp/* && rm nginx-$NGINX_VERSION.tar.gz\n\n# S3FS\nARG S3FS_VERSION=1.84\nRUN \\\n  mkdir /usr/src/omaha-server \\\n  && wget --no-check-certificate https://github.com/s3fs-fuse/s3fs-fuse/archive/v${S3FS_VERSION}.tar.gz -O /usr/src/omaha-server/v${S3FS_VERSION}.tar.gz \\\n  && tar xvz -C /usr/src/omaha-server -f /usr/src/omaha-server/v${S3FS_VERSION}.tar.gz \\\n  && cd /usr/src/omaha-server/s3fs-fuse-${S3FS_VERSION} \\\n  && ./autogen.sh \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n  && make \\\n  && make install \\\n  && mkdir -p /srv/omaha_s3 \\\n  && rm /usr/src/omaha-server/v${S3FS_VERSION}.tar.gz\n\n# Filebeat\nARG FILEBEAT_PACKEGE=filebeat-6.0.0-linux-x86_64\nRUN \\\n  wget https://artifacts.elastic.co/downloads/beats/filebeat/${FILEBEAT_PACKEGE}.tar.gz -O /usr/src/omaha-server/${FILEBEAT_PACKEGE}.tar.gz \\\n  && tar xzvf /usr/src/omaha-server/${FILEBEAT_PACKEGE}.tar.gz -C /etc/ \\\n  && mv /etc/${FILEBEAT_PACKEGE} /etc/filebeat \\\n  && mkdir /tmp/filebeat/ \\\n  && ln /etc/filebeat/filebeat /usr/bin/ && rm /usr/src/omaha-server/${FILEBEAT_PACKEGE}.tar.gz\n\n\n# Clean Up\nRUN \\\n  rm -rf /var/cache/apk/* \\\n  && apk del fuse-deps dev-deps\n\n# Setup application dependencies\nRUN mkdir -p $OMAHA_SERVER_PATH/requirements\nADD Pipfile Pipfile.lock $OMAHA_SERVER_PATH/\n\n# Dependencies for Pillow\nRUN apk add --no-cache jpeg-dev libjpeg \\\n  && apk add --no-cache rsyslog\n\nRUN \\\n  pip install --no-cache-dir pipenv \\\n  && pipenv install --system --deploy\n"
}