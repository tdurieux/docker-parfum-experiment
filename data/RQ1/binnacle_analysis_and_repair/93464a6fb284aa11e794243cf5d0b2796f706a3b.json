{
  "startTime": 1674249441984,
  "endTime": 1674249442271,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ngraph-neon.cpu dockerfile used to build and test ngraph-neon on gpu platforms\n\nFROM nvidia/cuda:8.0-cudnn7-devel-ubuntu16.04\n\n# try to get around issue with badsig\n#https://github.com/NVIDIA/nvidia-docker/issues/619 (with devel image) (based on this issue added this)\nRUN rm /etc/apt/sources.list.d/cuda.list\n\n# removing nvidia-ml.list file to avoid apt-get update error\n# \"The method driver /usr/lib/apt/methods/https could not be found.\"\nRUN rm /etc/apt/sources.list.d/nvidia-ml.list\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y sudo curl apt-transport-https && \\\n    apt-get clean autoclean && \\\n    apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\nRUN curl -f https://developer.download.nvidia.com/compute/cuda/repos/GPGKEY | sudo apt-key add -\n\n# install standard python 2 and 3 environment stuff\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y python-dev python-pip software-properties-common && \\\n    apt-get clean autoclean && \\\n    apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir virtualenv pytest\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y python3 python3-pip python3-dev python3-venv && \\\n    apt-get clean autoclean && \\\n    apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir virtualenv pytest\n\n#install onnx dependencies to install ngraph\nRUN apt-get update && apt-get install --no-install-recommends -y protobuf-compiler libprotobuf-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        build-essential cmake \\\n        clang-3.9 clang-format-3.9 \\\n        git \\\n        wget patch diffutils zlib1g-dev libtinfo-dev \\\n        doxygen graphviz && \\\n        apt-get clean autoclean && \\\n        apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\n\n# create a symbolic link for gmake command\nRUN ln -s /usr/bin/make /usr/bin/gmake\n\n# need to use sphinx version 1.6 to build docs\n# installing with apt-get install python-sphinx installs sphinx version 1.3.6 only\n# added install for python-pip above and\n# installed sphinx with pip to get the updated version 1.6.5\n# allows for make html build under the doc/source directory as an interim build process\nRUN pip install --no-cache-dir sphinx\n\n# breathe package required to build documentation\nRUN pip install --no-cache-dir breathe\n\n# need numpy to successfully build docs for python_api\nRUN pip install --no-cache-dir numpy\n\n# RUN python3 -m pip install m2r\n\nWORKDIR /home\n"
}