{
  "startTime": 1674240251744,
  "endTime": 1674240251823,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gcr.io/google_appengine/nodejs\n\n# Undo the env variable setting from the google nodejs env.\n# We set NODE_ENV ourself when we run the server, rather than have a global\n# setting which messes with npm install.\nENV NODE_ENV ''\n\nRUN apt-get -q update && \\\n    apt-get install --no-install-recommends -y -q \\\n      nano less memcached rsync vim && rm -rf /var/lib/apt/lists/*;\n\n# Install node/npm using LTS version\n#\nRUN install_node 8.9.0\n\n# Install Yarn.\n# Note: because this is running as super-user in docker, we need to specify the\n# --unsafe-perm flag to allow npm not to worry about downgrading its\n# permissions.\n#\nRUN npm install --unsafe-perm -g yarn && npm cache clean --force;\n\n# `angular-cli` is used to build the app.\n# `ts-node` allows typesscipt scripts to executed inline, like node/js.\n# `typescript` is the programming language and compiler for javascript.\n# `typings` provides type definitions for typescript needed to compile code.\nRUN yarn global add \\\n  angular-cli \\\n  ts-node \\\n  typescript@2.2.2 \\\n  typings\n\n# Add local files into the docker filespace.\n# Assumes that .dockerfile ignores nodes node_modules\nADD . /app/\n\nWORKDIR /app/\n\nRUN yarn install && yarn cache clean;\nRUN yarn run build:prod\n\n# Assumes: `EXPOSE 8080` and `ENV PORT 8080`\nCMD yarn start:prod-server\n"
}