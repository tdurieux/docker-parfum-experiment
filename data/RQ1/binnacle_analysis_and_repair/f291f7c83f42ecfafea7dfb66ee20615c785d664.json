{
  "startTime": 1674249302088,
  "endTime": 1674249302466,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Pull base image\nFROM resin/rpi-raspbian:wheezy\nMAINTAINER Scott Edenbaum <scott.edenbaum@gmail.com>\n\n# Install dependencies\nRUN echo 'deb http://mirrordirector.raspbian.org/raspbian/ stretch main contrib non-free rpi' > /etc/apt/sources.list\n\nRUN apt-get update && apt-get install -y \\\n    curl \\\n    wget \\\n    screen \\\n    cmake \\\n    unzip \\\n    libtiff5-dev \\\n    libhdf5-dev \\\n    python3 \\\n    python3-dev \\\n    cython3 \\\n    python3-cffi \\\n    python3-setuptools \\\n    python3-pip \\\n    pkg-config \\\n    python3-tables \\\n    python3-wheel \\\n    python3-numpy \\\n    python3-scipy \\\n    libpng-dev \\\n    libjasper-dev \\\n    libavcodec-dev \\\n    libswscale-dev \\\n    libv4l-dev \\\n    libxvidcore-dev \\\n    libx264-dev \\\n    libatlas-base-dev \\\n    libfreetype6-dev\\\n    libxft-dev \\\n    libblas-dev \\\n    liblapack-dev \\\n    libatlas-base-dev \\\n    gfortran \\\n    libxml2-dev \\\n    libxslt-dev \\\n    build-essential \\\n    ipython3 \\\n    libncurses5-dev \\\n    libssl-dev \\\n    openssl \\\n    libreadline-dev \\\n    libbz2-dev \\\n    libncurses5-dev \\\n    libcurl4-openssl-dev \\\n    libjpeg-dev \\\n    r-base \\\n    r-base-core \\\n    r-base-dev \\\n    --no-install-recommends && \\\n    rm -rf /var/lib/apt/lists/*\n\n#RUN apt-get update && apt-get install -y libgeos-c1\n\n\n###### install opencv\n# RUN cd /tmp && \\\n#     wget -O opencv.zip https://github.com/opencv/opencv/archive/3.2.0.zip && \\\n#     unzip opencv.zip && \\\n#     wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/3.2.0.zip && \\\n#     unzip opencv_contrib.zip\n\n# build opencv\n# RUN cd /tmp/opencv-3.2.0 && \\\n#     mkdir build && \\\n#     cd build && \\\n#     cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n#     -D CMAKE_INSTALL_PREFIX=/usr/local \\\n#     -D INSTALL_C_EXAMPLES=ON \\\n#     -D BUILD_PYTHON_SUPPORT=ON \\\n#     -D BUILD_NEW_PYTHON_SUPPORT=ON \\\n#     -D INSTALL_PYTHON_EXAMPLES=ON \\\n#         -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib-3.2.0/modules \\\n#     -D BUILD_EXAMPLES=ON .. && \\\n#     make -j4 && \\\n#     make && \\\n#     make install && \\\n#     make clean\n#\n# # cleanup source\n# RUN cd /tmp && rm -rf opencv-3.2.0\n\n\nRUN mkdir -p pyapp\nCOPY requirements*.txt pyapp/\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir -r pyapp/requirements.txt\nRUN pip3 install --no-cache-dir -r pyapp/requirements2.txt\n#setup R\nRUN echo \"r <- getOption('repos'); r['CRAN'] <- 'http://cran.us.r-project.org'; options(repos = r);\" > ~/.Rprofile\nRUN Rscript -e \"install.packages(c('yhatr','rpart.plot','lattice','mlogit','moments','MNP','muhaz','tidytext','text2vec'))\"\nRUN Rscript -e \"install.packages(c('LDAvis','mcmc','syuzhet','SnowballC','gmodels','descr','ggplot2','googleVis'))\"\nRUN Rscript -e \"install.packages(c('outliers','features','Hmisc','party','ISLR','mice','NLP','foreign','tm','CCP'))\"\nRUN Rscript -e \"install.packages(c('RColorBrewer','colorspace','highr','evaluate','zoo','quantmod','TTR','fAssets'))\"\nRUN Rscript -e \"install.packages(c('Bioconductor','Quandl','zipcode','treemap','worldmap','ellipse'))\"\nRUN Rscript -e \"install.packages(c('Leaflet','ggmap','swirl','gtable','RcppEigen','yaml','BH','mtvnorm'))\"\nRUN Rscript -e \"install.packages(c('LSMeans','Comparison','RegTest','ACD','BinomTools','DAIM','ClustEval','SigClust','PROC'))\"\nRUN Rscript -e \"install.packages(c('TimeROC','car','RMiner','CoreLearn','caret','BigRF','CBA','RankCluster'))\"\nRUN Rscript -e \"install.packages(c('LTSA','survival','Basta','RMarkdown','qcc','jsonlite','RCurl','RWeka'))\"\nRUN Rscript -e \"install.packages(c('parallel','Rcpp','twitteR','igraph','nnet','glmnet','tree','arules','earth','mboost'))\"\nRUN Rscript -e \"install.packages(c('CORElearn','ipred','klaR','party','ROCR','kernlab','wordcloud','MissForest','MissMDA'))\"\nRUN Rscript -e \"install.packages(c('data.table','sqldf','forecast','RMYSQL','anomalyDetection','ElemStatLearn','h2o'))\"\nRUN Rscript -e \"install.packages(c('MASS','penalized','dplyr','reshape2','forecast','stringr','sampleSelection','sandwich'))\"\nRUN Rscript -e \"install.packages(c('sem','statnet','topicmodels','vcd','broom','corrplot','rbokeh','rCharts','lubridate'))\"\nRUN Rscript -e \"install.packages(c('randomForest','rpart','e1071','kknn','plyr','repr','IRdisplay','crayon','pdbZMQ'))\"\nRUN Rscript -e \"install.packages(c('magrittr', 'doBy','extrafont','chunked','snda','network','visNetwork','devtools'))\"\nRUN Rscript -e \"install.packages(c('angstroms','bikedata','datasuRus','dwapi','HURDAT','neurohcp','omsdata','parlitools'))\"\nRUN Rscript -e \"install.packages(c('rerddap','soilcarbon','learnr','olsrr','rODE'))\"\n\n\nRUN R -e \"install.packages(('devtools'), repos='https://cloud.r-project.org'); devtools::install_github('IRkernel/IRkernel');devtools::install_github('skoval/deuce');IRkernel::installspec()\" #Rscript -e \"install.packages('devtools')\"\n\nRUN echo \"root:Docker!\" | chpasswd\n#RUN useradd -m -G sudo,users student\n#RUN echo \"student:Docker!\" | chpasswd\n#RUN chown student /home/student\n# Define working directory\nWORKDIR /home/student\n\n# Define default command\n\nRUN pip3 install --no-cache-dir statsmodels\n\nUSER root\nCMD jupyter-lab --ip 0.0.0.0  --port 9999 --LabApp.token='' --allow-root\n"
}