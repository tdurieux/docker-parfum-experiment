{
  "startTime": 1674248305790,
  "endTime": 1674248305989,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 174
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 73,
        "columnEnd": 149
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Description: Base image used for running the golang terratest pipeline.\n# Usage:\n# build-\n# docker build --rm -f \"test/Dockerfile\" \\\n#         -t msftcse/bedrock-test-base:1 . \\\n#         --build-arg build_directory=\"$BUILD_TEMPLATE_DIRS\" \\\n#         --build-arg base_img_tag=\"$TEST_BASE_IMAGE_TAG\"\n#\n# Base image-\n# ARG base_img_tag\n# FROM msftcse/bedrock-test-base:$base_img_tag\n\nARG gover\nFROM golang:${gover}-stretch as build\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y git curl apt-transport-https lsb-release gpg && rm -rf /var/lib/apt/lists/*;\n\n\n\n# Setup Azure CLI\nRUN curl -f -sL https://packages.microsoft.com/keys/microsoft.asc | \\\n    gpg --batch --dearmor | \\\n    tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null\n\nRUN echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ stretch main\" | \\\n    tee /etc/apt/sources.list.d/azure-cli.list\n\n# Install Azure CLI + core compilers like gcc which are required for dep\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential wget unzip && rm -rf /var/lib/apt/lists/*;\nENV GOLANG_VERSION=$gover\n\nENV PATH /usr/local/go/bin:/usr/local/go:$PATH\nENV GOPATH $HOME/go\nENV GOBIN /usr/local/go\nWORKDIR $GOPATH/src\n\n# Install Terraform\nARG tfver\nENV TF_VERSION=$tfver\nRUN wget --quiet https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip \\\n  && unzip terraform_${TF_VERSION}_linux_amd64.zip \\\n  && mv terraform /usr/bin \\\n  && rm terraform_${TF_VERSION}_linux_amd64.zip\n\n# Go dep!\nRUN /bin/bash -c \"curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh\"\n\n# Install Kubectl\nRUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \\\n  && chmod +x ./kubectl \\\n  && mv ./kubectl /usr/local/bin/kubectl\n\n# Install Helm\nRUN curl -f https://raw.githubusercontent.com/helm/helm/master/scripts/get > get_helm.sh \\\n  && chmod 700 get_helm.sh\nRUN ./get_helm.sh\n\n# Setup go app workspace\n WORKDIR $GOPATH/src/app\n\n# Copy over go unit / int tests + mage manifest\n# ADD /test/*.go ./\nADD /test/* ./\nRUN mkdir cluster build\nADD cluster/ ./cluster\n\nRUN apt-get purge -y wget build-essential wget unzip curl \\\n    apt-transport-https lsb-release gpg\n\n# Pull down golang vendor dependenies\nRUN ls\nRUN pwd\n# RUN [\"dep\", \"init\", \"-v\"]\nRUN [\"dep\", \"ensure\", \"-vendor-only\", \"-v\"]\nRUN rm -r ./cluster\n\nCMD bash"
}