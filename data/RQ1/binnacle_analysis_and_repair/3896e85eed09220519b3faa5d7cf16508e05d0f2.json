{
  "startTime": 1674242150654,
  "endTime": 1674242151306,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 5,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 134,
        "lineEnd": 134,
        "columnStart": 5,
        "columnEnd": 78
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 5,
        "columnEnd": 101
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 43,
        "columnStart": 5,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.3-slim\n\nENV LANG=\"C.UTF-8\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y curl gnupg apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\nCOPY config/google-chrome-apt-key.pub /tmp/\nRUN echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list \\\n  && apt-key add /tmp/google-chrome-apt-key.pub\n\nRUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-jessie main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n  && curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\n\nRUN curl -f -sL \"https://keybase.io/crystal/pgp_keys.asc\" | apt-key add - \\\n    && echo \"deb https://dist.crystal-lang.org/apt crystal main\" | tee /etc/apt/sources.list.d/crystal.list\n\nRUN curl -f -sL \"https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key\" | apt-key add - \\\n  && echo \"deb https://packages.cloudfoundry.org/debian stable main\" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list\n\nRUN apt-get update \\\n  && apt-get -y --no-install-recommends install \\\n  aufs-tools \\\n  crystal \\\n  libxml2-dev \\\n  expect \\\n  git \\\n  google-cloud-sdk \\\n  iptables \\\n  jq \\\n  default-libmysqlclient-dev \\\n  libpq-dev \\\n  libsqlite3-dev \\\n  libgconf-2-4 \\\n  lsb-release \\\n  php7.0 \\\n  pkgconf \\\n  python-dev \\\n  python-pip \\\n  shellcheck \\\n  cf-cli \\\n  vim \\\n  wget \\\n  zip \\\n  google-chrome-stable && \\\n  apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install packages that are specific to ubuntu and not debian\n# Including libssl allows us to build php on this image\nRUN wget https://cdn-fastly.deb.debian.org/debian/pool/main/i/icu/libicu52_52.1-8+deb8u7_amd64.deb \\\n  && dpkg -i libicu52_52.1-8+deb8u7_amd64.deb \\\n  && rm libicu52_52.1-8+deb8u7_amd64.deb \\\n  && wget https://mirror.nus.edu.sg/Debian/pool/main/o/openssl/libssl1.0.0_1.0.1t-1%2Bdeb8u8_amd64.deb \\\n  && dpkg -i libssl1.0.0_1.0.1t-1+deb8u8_amd64.deb \\\n\t&& rm libssl1.0.0_1.0.1t-1+deb8u8_amd64.deb\n\nRUN curl -f -sSL https://get.docker.com/ | sh\n\nRUN git config --global user.email \"cf-buildpacks-eng@pivotal.io\"\nRUN git config --global user.name \"CF Buildpacks Team CI Server\"\nRUN git config --global core.pager cat\n\n# download and install chromedriver\n RUN wget -O chromedriver.zip 'https://chromedriver.storage.googleapis.com/2.34/chromedriver_linux64.zip' \\\n   && [ e42a55f9e28c3b545ef7c7727a2b4218c37489b4282e88903e4470e92bc1d967 = $(shasum -a 256 chromedriver.zip | cut -d' ' -f1) ] \\\n   && unzip chromedriver.zip -d /usr/local/bin/ \\\n   && rm chromedriver.zip\n\n# composer is a package manager for PHP apps\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/\nRUN mv /usr/bin/composer.phar /usr/bin/composer\n\n# download the bosh2 CLI\nRUN curl -f -L https://github.com/cloudfoundry/bosh-cli/releases/download/v5.5.1/bosh-cli-5.5.1-linux-amd64 -o /usr/local/bin/bosh2 \\\n  && [ 34e9898c244655ccbce2dc657b7d1df52e487cfd = $(shasum -a 1 /usr/local/bin/bosh2 | cut -d' ' -f1) ] \\\n  && chmod +x /usr/local/bin/bosh2 \\\n  && ln -s /usr/local/bin/bosh2 /usr/local/bin/bosh\n\n# download bbl\nRUN wget -O /usr/local/bin/bbl 'https://github.com/cloudfoundry/bosh-bootloader/releases/download/v7.6.0/bbl-v7.6.0_linux_x86-64' \\\n  && [ 2e81f0560310791d604145b39f0b0c21cfd50d2c314fcd58059ff7a006cf12ca = $(shasum -a 256 /usr/local/bin/bbl | cut -d' ' -f1) ] \\\n  && chmod +x /usr/local/bin/bbl\n\n# download credhub cli\nRUN curl -f -L https://github.com/cloudfoundry-incubator/credhub-cli/releases/download/2.4.0/credhub-linux-2.4.0.tgz -o credhub.tgz \\\n  && [ 73edaf1ee47323c4f0aa455bcc17303a73c0cf2a6d9156542f1f6b7b1b1aa3db = $(shasum -a 256 credhub.tgz | cut -d' ' -f1) ] \\\n  && tar -zxf credhub.tgz --to-stdout > /usr/local/bin/credhub \\\n  && rm credhub.tgz \\\n  && chmod +x /usr/local/bin/credhub\n\n\n#download spiff for spiffy things\nRUN wget -O spiff.zip 'https://github.com/cloudfoundry-incubator/spiff/releases/download/v1.0.8/spiff_linux_amd64.zip' \\\n  && [ e5b49b7f32b2b3973536bf2a48beda2d236956bebff7677aa109cc2b71f56002 = $(shasum -a 256 spiff.zip | cut -d' ' -f1) ] \\\n  && funzip spiff.zip > /usr/bin/spiff \\\n  && rm spiff.zip\nRUN chmod 755 /usr/bin/spiff\n\n# Ensure Concourse Filter binary is present\nRUN wget 'https://github.com/pivotal-cf-experimental/concourse-filter/releases/download/v0.0.4/concourse-filter' \\\n  && [ 2bcad41417bf5bdc545a0912c30d9c466abd4ed0cffa6b02b678f06f71a73bb8 = $(shasum -a 256 concourse-filter | cut -d' ' -f1) ] \\\n  && mv concourse-filter /usr/local/bin \\\n  && chmod +x /usr/local/bin/concourse-filter\n\n# AWS CLI\nRUN pip install --no-cache-dir awscli\n\n# when docker container starts, ensure login scripts run\nCOPY build/*.sh /etc/profile.d/\n\n# install buildpacks-ci Gemfile\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system \\\n  && gem install bundler -v 2.0.1 && rm -rf /root/.gem;\nCOPY Gemfile /usr/local/Gemfile\nCOPY Gemfile.lock /usr/local/Gemfile.lock\nRUN cd /usr/local && bundle install && bundle binstub bundler --force\n\n#install fly-cli\nRUN curl \"https://buildpacks.ci.cf-app.com/api/v1/cli?arch=amd64&platform=linux\" -sfL -o /usr/local/bin/fly \\\n  && chmod +x /usr/local/bin/fly\n\n# git-hooks and git-secrets\nRUN curl -f -L https://github.com/git-hooks/git-hooks/releases/download/v1.1.4/git-hooks_linux_amd64.tar.gz -o githooks.tgz \\\n  && [ 3f21c856064f8f08f8c25494ac784882a2b8811eea3bfb721a6c595b55577c48 = $(shasum -a 256 githooks.tgz | cut -d' ' -f1) ] \\\n  && tar -zxf githooks.tgz --to-stdout > /usr/local/bin/git-hooks \\\n  && rm githooks.tgz \\\n  && chmod 755 /usr/local/bin/git-hooks\n\nRUN git clone https://github.com/awslabs/git-secrets && cd git-secrets && make install\n\n# Ensure that Concourse filtering is on for non-interactive shells\nENV BASH_ENV /etc/profile.d/filter.sh\n\n# Install go 1.12\nRUN cd /usr/local \\\n  && curl -f -L https://dl.google.com/go/go1.12.4.linux-amd64.tar.gz -o go.tar.gz \\\n  && [ d7d1f1f88ddfe55840712dc1747f37a790cbcaa448f6c9cf51bbe10aa65442f5 = $(shasum -a 256 go.tar.gz | cut -d' ' -f1) ] \\\n  && tar xf go.tar.gz \\\n  && rm go.tar.gz \\\n  && ln -s /usr/local/go/bin/* /usr/local/bin/\n\nENV GOROOT=/usr/local/go\n\n# Install gems\n# poltergeist for running dotnet-core-buildpack specs\nRUN gem install phantomjs open4 \\\n  && ruby -e 'require \"phantomjs\"; Phantomjs.path'\n\n# Add git known host\nRUN mkdir -p /root/.ssh/ && echo github.com,192.30.252.131 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ== > /root/.ssh/known_hosts\n"
}