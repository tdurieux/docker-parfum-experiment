{
  "startTime": 1674234163628,
  "endTime": 1674234163846,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 52,
        "columnStart": 25,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Â© Copyright IBM Corporation 2017, 2019\n# LICENSE: Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n\n############################## Dockerfile for Magento version 2.3.1 ###################################\n#\n# Magento is an open-source e-commerce platform written in PHP.\n#\n# To build Magento image from the directory containing this Dockerfile\n#\n# docker build -t <image_name> .\n#\n# To start Magento server run the below command\n# docker run --name <container_name> -p <port_number>:80 -p <port_number_mysql>:3306 -d <image_name>\n#\n# We can view the Magento UI at http://<Magento_host_IP>:<Port_number>/magento2/setup\n#\n###############################################################################################\n\n# Base Image\nFROM s390x/ubuntu:18.04\n\n# The author\nMAINTAINER  LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\n\nENV DEBIAN_FRONTEND noninteractive\n\nARG MAGENTO_VER=2.3.1\nARG MYSQL_PASSWD=temp_pass\n\n# Install dependencies\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n    apache2 \\\n    composer \\\n    git \\\n    gzip \\\n    libapache2-mod-php \\\n    libssl-dev \\\n    lsof \\\n    mysql-server \\\n    php7.2 \\\n    php7.2-bcmath \\\n    php7.2-curl \\\n    php7.2-gd \\\n    php7.2-intl \\\n    php7.2-mbstring \\\n    php7.2-mysql \\\n    php7.2-soap \\\n    php7.2-xml \\\n    php7.2-xsl \\\n    php7.2-zip \\\n    sed \\\n    tar \\\n    unzip \\\n\n# Configure apache2\n && chmod 766 /etc/apache2/apache2.conf \\\n && echo \"ServerName localhost\" >> /etc/apache2/apache2.conf \\\n && echo '<Directory \"/var/www/html\">' >> /etc/apache2/apache2.conf \\\n && echo \"AllowOverride  All\" >> /etc/apache2/apache2.conf \\\n && echo \"</Directory>\" >> /etc/apache2/apache2.conf \\\n && a2enmod rewrite \\\n && a2enmod php7.2 \\\n\n# Install Magento\n && cd /var/www/html/ \\\n && chmod -R a+w /var/www/html/ \\\n && git clone https://github.com/magento/magento2.git \\\n && cd magento2 \\\n && git checkout $MAGENTO_VER \\\n && composer install --no-plugins --no-scripts \\\n && cd /var/www/html/magento2 && find var vendor pub/static pub/media app/etc -type f -exec chmod g+w {} \\; && find var vendor pub/static pub/media app/etc -type d -exec chmod g+ws {} \\; && chown -R :www-data . && chmod u+x bin/magento \\\n && chmod g+wsx generated/ && chmod g+wsx generated/.htaccess \\\n\n# Start MySQL server and create database for Magento and set root password\n && service mysql start \\\n && mysql -e \"CREATE USER magento IDENTIFIED BY 'magento';\" \\\n && mysql -e \"CREATE DATABASE magento;\" \\\n && mysql -e \"GRANT ALL ON magento.* TO 'magento';\" \\\n && mysql -e \"FLUSH PRIVILEGES;\" \\\n && mysql -e \"ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '$MYSQL_PASSWD';\" \\\n\n# Clean up of unused packages\n && apt-get remove -y \\\n    git \\\n    unzip \\\n    wget \\\n && apt-get autoremove -y \\\n && apt autoremove -y \\\n && apt-get clean \\\n && rm -rf  /var/lib/apt/lists/*\n\n# Create volume\nVOLUME /var/www/html /var/lib/mysql\n\n# Expose port for mysql and apache2\nEXPOSE 80 3306\n\n# Start mysql and apache2 server\nENTRYPOINT service mysql start && apache2ctl -D FOREGROUND\n\n# End of Dockerfile\n"
}