{
  "startTime": 1674251666397,
  "endTime": 1674251666562,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 1,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 1,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:slim as frontend\nWORKDIR /webapp\nCOPY package*.json ./\nCOPY .eslintrc .babelrc .stylelintrc .eslintignore postcss.config.js .browserslistrc ./\nCOPY frontend/assets frontend/assets\nRUN npm install && npm cache clean --force;\nRUN npm run build\n\nFROM python:3-alpine\nENV PYTHONUNBUFFERED 1\nRUN apk update && \\\n apk add --no-cache postgresql-libs && \\\n apk add --no-cache --virtual .build-deps gcc musl-dev postgresql-dev\nRUN pip install --no-cache-dir pipenv\nRUN mkdir /code\nWORKDIR /code\nADD Pipfile /code/\nADD Pipfile.lock /code/\nRUN pipenv install --system --deploy\nADD . /code/\nCOPY --from=frontend /webapp/frontend/static/dist frontend/static/dist\nRUN python manage.py collectstatic\n"
}