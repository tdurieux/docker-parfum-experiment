{
  "startTime": 1674240272119,
  "endTime": 1674240272320,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 46,
        "columnStart": 0,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 0,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 4
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 \n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\nbuild-essential \\\ncmake \\\ncurl \\\ngfortran \\\ngit \\\ngraphicsmagick \\\nlibgraphicsmagick1-dev \\\nlibatlas-dev \\\nlibavcodec-dev \\\nlibavformat-dev \\\nlibboost-all-dev \\\nlibgtk2.0-dev \\\nlibjpeg-dev \\\nliblapack-dev \\\nlibswscale-dev \\\npkg-config \\\npython-dev \\\npython-numpy \\\npython-protobuf \\\nsoftware-properties-common \\\nzip \\\nsudo \\\n&& apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN git clone https://github.com/torch/distro.git ~/torch --recursive \nRUN cd ~/torch && bash install-deps && ./install.sh && \\  \ncd install/bin && \\  \n./luarocks install nn && \\  \n./luarocks install dpnn && \\  \n./luarocks install image && \\  \n./luarocks install optim && \\  \n./luarocks install csvigo && \\  \n./luarocks install torchx && \\  \n./luarocks install tds \nRUN ln -s ~/torch/install/bin/* /usr/local/bin \n\nRUN apt-get update && apt-get install --no-install-recommends -y python-opencv && rm -rf /var/lib/apt/lists/*;\n\nRUN cd ~ && \\  \nmkdir -p dlib-tmp && \\  \ncd dlib-tmp && \\\n curl -f -L \\\nhttps://github.com/davisking/dlib/archive/v19.3.tar.gz \\\n-o dlib.tar.bz2 && \\\ntar xf dlib.tar.bz2 && \\\ncd dlib-19.3/python_examples && \\\nmkdir build && \\\ncd build && \\\ncmake ../../tools/python && \\\ncmake --build . --config Release && \\\ncp dlib.so /usr/local/lib/python2.7/dist-packages && \\\nrm -rf ~/dlib-tmp && rm dlib.tar.bz2\n\n"
}