{
  "startTime": 1674250554067,
  "endTime": 1674250554143,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial\n\nCOPY . /diefarbe\n\nWORKDIR /diefarbe\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y curl && \\\n    curl -f -sL https://deb.nodesource.com/setup_8.x | bash - && \\\n    apt-get install --no-install-recommends -y nodejs && \\\n    npm install && \\\n    rm -rf /var/lib/apt/lists/* && npm cache clean --force;\n\nHEALTHCHECK --timeout=5s CMD curl -f http://localhost:3030/info || exit 1\n\n# If the container runs in the background (`-d`), using this array notation (as a CMD or ENTRYPOINT) is\n# the only way that seems to allow the container to shutdown gracefully on a `docker stop` request. Otherwise\n# it will be killed after the timeout.\nENTRYPOINT [\"node\", \"/diefarbe/dist/index.js\"]"
}