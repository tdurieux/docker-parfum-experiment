{
  "startTime": 1674236450198,
  "endTime": 1674236450821,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 25,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 179
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 179
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 179
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 203
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "############################################\nFROM \"ubuntu:19.04\" as base\n############################################\n\n######    BUILD ARGUMENTS    ######\n\nARG SOURCE_BRANCH=master\n\n######    CONSTANTS    ######\nENV DENDRO_GITHUB_URL https://github.com/feup-infolab/dendro.git\nENV DENDRO_GIT_BRANCH \"$SOURCE_BRANCH\"\nENV DENDRO_INSTALL_DIR /tmp/dendro\nENV DENDRO_RUNNING_DIR /dendro\nENV DENDRO_PORT 3001\n\nENV HOME /root\nENV NVM_DIR /root/.nvm\n\nENV BOWER_TMP_DIR /tmp/public\nENV NPM_TMP_DIR /tmp/npm\n\nENV NODE_VERSION v8.10.0\n#####    END CONSTANTS    ######\n\n# Change shell to bash\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN mkdir -p \"$NVM_DIR\"\nUSER root\n\n############################################\nFROM base AS dependencies\n############################################\n\n# Install preliminary dependencies\nRUN apt-get -qq update\nRUN apt-get -y --no-install-recommends -f -qq install sudo unzip devscripts autoconf automake libtool flex bison gperf gawk m4 make libssl-dev imagemagick subversion zip wget curl git rsync --fix-missing && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y -qq install apt-utils --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\n# Install text extraction tools\nRUN apt-get -y --no-install-recommends -f -qq install poppler-utils antiword unrtf tesseract-ocr && rm -rf /var/lib/apt/lists/*;\n\n# Install python 2.7\nRUN apt-get -y --no-install-recommends -f -qq install python2.7 && rm -rf /var/lib/apt/lists/*;\nRUN ln -s /usr/bin/python2.7 /usr/bin/python\n\n############################################\n#####         Start JDK Install        #####\n############################################\n\n# Since there is no image of Ubuntu 19.04 at this time, I pasted from\n# https://github.com/AdoptOpenJDK/openjdk-docker/blob/master/8/jdk/ubuntu/Dockerfile.hotspot.releases.full\nRUN set -eux; \\\n    ARCH=\"$(dpkg --print-architecture)\"; \\\n    case \"${ARCH}\" in \\\n       ppc64el|ppc64le) \\\n         ESUM='485533573e0a6aa4188a9adb336d24e795f9de8c59499d5b88a651b263fa1c34'; \\\n         BINARY_URL='https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u202-b08/OpenJDK8U-jdk_ppc64le_linux_hotspot_8u202b08.tar.gz'; \\\n         ;; \\\n       s390x) \\\n         ESUM='d47b6cfcf974e50363635bfc7c989b25b4681cd29286ba5ed426cfd486b65c5f'; \\\n         BINARY_URL='https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u202-b08/OpenJDK8U-jdk_s390x_linux_hotspot_8u202b08.tar.gz'; \\\n         ;; \\\n       amd64|x86_64) \\\n         ESUM='f5a1c9836beb3ca933ec3b1d39568ecbb68bd7e7ca6a9989a21ff16a74d910ab'; \\\n         BINARY_URL='https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u202-b08/OpenJDK8U-jdk_x64_linux_hotspot_8u202b08.tar.gz'; \\\n         ;; \\\n       aarch64|arm64) \\\n         ESUM='8eee0aede947b804f9a5f49c8a38b52aace8a30a9ebd9383b7d06042fb5a237c'; \\\n         BINARY_URL='https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u191-b12/OpenJDK8U-jdk_aarch64_linux_hotspot_8u191b12.tar.gz'; \\\n         ;; \\\n       *) \\\n         echo \"Unsupported arch: ${ARCH}\"; \\\n         exit 1; \\\n         ;; \\\n    esac; \\\n    curl -f -Lso /tmp/openjdk.tar.gz ${BINARY_URL}; \\\n    sha256sum /tmp/openjdk.tar.gz; \\\n    mkdir -p /opt/java/openjdk; \\\n    cd /opt/java/openjdk; \\\n    echo \"${ESUM}  /tmp/openjdk.tar.gz\" | sha256sum -c -; \\\n    tar -xf /tmp/openjdk.tar.gz; \\\n    jdir=$(dirname $(dirname $(find /opt/java/openjdk -name java | grep -v \"/jre/bin\"))); \\\n    mv ${jdir}/* /opt/java/openjdk; \\\n    rm -rf ${jdir} /tmp/openjdk.tar.gz;\n\nENV JAVA_HOME=/opt/java/openjdk \\\n    PATH=\"/opt/java/openjdk/bin:$PATH\"\nENV JAVA_TOOL_OPTIONS=\"\"\nENV LD_LIBRARY_PATH=\"$JAVA_HOME/jre/lib/amd64/server\"\n\n############################################\n#####          End JDK Install         #####\n############################################\n\n# compatibility fix for node on ubuntu\nRUN ln -s /usr/bin/nodejs /usr/bin/node\n\n############################################\nFROM dependencies as nvm_installed\n############################################\n\n# Install NVM\nRUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash\nRUN . \"$NVM_DIR/nvm.sh\" \\\n\t&& nvm install $NODE_VERSION \\\n\t&& nvm use --delete-prefix $NODE_VERSION \\\n\t&& nvm alias default $NODE_VERSION\n\nENV NODE_PATH $NVM_DIR/versions/node/$NODE_VERSION/lib/node_modules\nENV PATH      $NVM_DIR/versions/node/$NODE_VERSION/bin:$PATH\n\n############################################\nFROM nvm_installed as global_npms\n############################################\n\n# update npm (force 5.6.0 because of \"write after end\" issue: https://github.com/npm/npm/issues/19989)\n# Install bower, gulp, grunt\nRUN npm i -g npm@5.6.0 \\\n\t&& npm i -g grunt@1.0.3 \\\n\t&& npm i -g gulp-cli@2.0.1 \\\n\t&& npm i -g bower@1.8.8 && npm cache clean --force;\n\n############################################\nFROM global_npms as app_libs_installed\n############################################\n\n#create temporary librarry directories as root\nRUN mkdir -p \"$BOWER_TMP_DIR\"\nRUN mkdir -p \"$NPM_TMP_DIR\"\n\n# Install node dependencies in /tmp to use the Docker cache\n# use changes to package.json to force Docker not to use the cache\n# when we change our application's nodejs dependencies:\nCOPY ./package.json \"$NPM_TMP_DIR\"\nWORKDIR \"$NPM_TMP_DIR\"\nRUN cd \"$NPM_TMP_DIR\" && npm install && npm cache clean --force;\nRUN echo \"contents of $NPM_TMP_DIR\"\nRUN ls -la\n\n# same for bower\nCOPY ./public/bower.json \"$BOWER_TMP_DIR\"\nWORKDIR \"$BOWER_TMP_DIR\"\nRUN cd \"$BOWER_TMP_DIR\" && bower install --allow-root\nRUN echo \"contents of $BOWER_TMP_DIR\"\nRUN ls -la\n\n\n############################################\nFROM app_libs_installed AS dendro_installed\n############################################\n\n# COPY dendro into install dir\nCOPY . \"$DENDRO_INSTALL_DIR\"\nRUN ls -la \"$DENDRO_INSTALL_DIR\"\n\n# Checkout specified DENDRO_GIT_BRANCH\n# WORKDIR $DENDRO_INSTALL_DIR\n# RUN git checkout \"$DENDRO_GIT_BRANCH\"\n# RUN git pull\n\n# Copy dendro startup script\nCOPY ./conf/scripts/docker/start_dendro_inside_docker.sh \"$DENDRO_INSTALL_DIR/dendro.sh\"\n\n# Set dendro execution script as executable\nRUN chmod ugo+rx \"$DENDRO_INSTALL_DIR/dendro.sh\"\n\n# Put compiled libraries in place\nRUN cp -R \"$NPM_TMP_DIR/node_modules\" \"$DENDRO_INSTALL_DIR\"\nRUN cp -R \"$BOWER_TMP_DIR/bower_components\" \"$DENDRO_INSTALL_DIR/public\"\n\n# Expose some of dendro running directory's subdirs as volumes\nVOLUME [ \"$DENDRO_RUNNING_DIR/conf\"]\nVOLUME [ \"$DENDRO_RUNNING_DIR/logs\"]\nVOLUME [ \"$DENDRO_RUNNING_DIR/orchestras\"]\nVOLUME [ \"$DENDRO_RUNNING_DIR/profiling\"]\n\n# Show contents of folders\nRUN echo \"Contents of Dendro install dir are:\"\nRUN ls -la \"$DENDRO_INSTALL_DIR\"\nRUN echo \"Contents of Dendro running dir are:\"\nRUN ls -la \"$DENDRO_RUNNING_DIR\"\n\n# What is the active deployment config?\nRUN echo \"Contents of Dendro active configuration file: $(cat $DENDRO_INSTALL_DIR/conf/active_deployment_config.yml)\"\n\nEXPOSE \"$DENDRO_PORT\"\n\n# Start Dendro\n\nCMD [ \"/bin/bash\", \"/tmp/dendro/dendro.sh\" ]\n"
}