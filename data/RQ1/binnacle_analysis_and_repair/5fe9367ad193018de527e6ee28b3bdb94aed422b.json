{
  "startTime": 1674245694944,
  "endTime": 1674245695209,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Copyright 2015 Google Inc. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nFROM debian:jessie\n\n# Use GCE mirror.\nCOPY gce-sources.list /tmp/\nRUN cat /tmp/gce-sources.list /etc/apt/sources.list | \\\n        cat >/etc/apt/sources.list.new && \\\n    mv /etc/apt/sources.list.new /etc/apt/sources.list && \\\n    rm -f /tmp/gce-sources.list\n\n# Install our custom Jessie backports apt repository.\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        curl rsyslog && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\nRUN curl -f https://storage.googleapis.com/dev-con-jessie-apt/convoy.key \\\n        | apt-key add -\nRUN echo deb http://storage.googleapis.com/dev-con-jessie-apt/ jessie main \\\n        >> /etc/apt/sources.list\n\n# Install basic tools required for dind, along with other useful tools.\nENV DEBIAN_FRONTEND noninteractive\n# Based on jpetazzo/dind, rebased on debian:jessie\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        apparmor \\\n        apt-transport-https \\\n        initramfs-tools \\\n        iptables \\\n        lxc \\\n        python3 \\\n        wget && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install Docker.\nRUN echo deb https://get.docker.io/ubuntu docker main \\\n        > /etc/apt/sources.list.d/docker.list\nRUN apt-key adv \\\n        --keyserver hkp://keyserver.ubuntu.com:80 \\\n        --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        lxc-docker-1.6.2 && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n# Some Google Cloud SDK components (Maven gcloud:deploy plugin in particular)\n# rely on DOCKER_HOST to be explicitly set, so set that.\nRUN echo \"export DOCKER_HOST=unix:///var/run/docker.sock\" \\\n    >/etc/profile.d/set-default-docker-host.sh\n\n# Add jpetazzo's magic wrapper.\n# This has been modified to start docker using 'service',\n# which means setting DOCKER_DAEMON_ARGS does nothing.\n# Instead, you can set DOCKER_SETTINGS_FILE to change\n# /etc/default/docker prior to starting the docker service.\nADD third_party/jpetazzo/dind/wrapdocker /google/scripts/wrapdocker.sh\nRUN chmod +x /google/scripts/wrapdocker.sh\n\n# Must be excluded from aufs.\nVOLUME /var/lib/docker\n\n# Make the docker daemon log to a file, so we can realistically use the shell.\nENV LOG file\n\nENV DOCKER_HOST unix:///var/run/docker.sock\n\n# Add our onrun utility, which allows commands to be run on startup\n# by adding them to the ONRUN environment variable. For example:\n#     ENV ONRUN $ONRUN \"echo running my command\"\nADD onrun.sh /google/scripts/onrun.sh\nRUN chmod +x /google/scripts/onrun.sh\n\n# Now run the wrapdocker script on startup.\nENV ONRUN \"/google/scripts/wrapdocker.sh\"\n\n# WARNING: Do not override this entrypoint; doing so will cause your\n# image to not run wrapdocker and it will not behave correctly.\n# Instead, add your command to the ONRUN environment variable:\n# Bad:\n#     ENTRYPOINT [<...>]\n# Good:\n#     ENV ONRUN $ONRUN \"<...>\"\nENTRYPOINT [\"/bin/bash\", \"/google/scripts/onrun.sh\"]\n"
}