{
  "startTime": 1674243856030,
  "endTime": 1674243856132,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nCOPY ./mesos-version /mesos-version\n\nRUN apt-get update && apt-get install --no-install-recommends -my wget gnupg lsb-release && \\\n    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv DF7D54CBE56151BF && \\\n\n    DISTRO=$(lsb_release -is | tr '[:upper:]' '[:lower:]') && \\\n    CODENAME=$(lsb_release -cs) && \\\n    echo \"deb http://repos.mesosphere.com/${DISTRO} ${CODENAME} main\" | tee /etc/apt/sources.list.d/mesosphere.list && \\\n    apt-get update && \\\n\n    # this MUST be done first, unfortunately, because Mesos packages will create folders that should be symlinks and break the python install process\n    apt-get install --no-install-recommends python2.7-minimal -y && \\\n    apt-get install --no-install-recommends -y openjdk-8-jdk-headless openjdk-8-jre-headless && \\\n    apt-get install --no-install-recommends -y --force-yes mesos=$(cat /mesos-version) && \\\n\n    # disable mesos-master; we don't want to start in this image\n    systemctl disable mesos-master && \\\n    systemctl disable mesos-slave && \\\n\n    # jq / curl\n    apt-get install --no-install-recommends -y procps curl jq=1.5* && \\\n\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nENV JAVA_HOME /docker-java-home\n\nENTRYPOINT [\"/sbin/init\"]\n"
}