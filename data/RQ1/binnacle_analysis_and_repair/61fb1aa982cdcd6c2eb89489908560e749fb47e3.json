{
  "startTime": 1674241882818,
  "endTime": 1674241883165,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y -q \\\n      apt-utils autoconf bison build-essential flex gawk gdb-multiarch git gperf help2man \\\n      libexpat-dev libncurses5-dev libtool-bin \\\n      python python-dev python-git python-pyelftools python-serial python-six python-yaml \\\n      python3 python3-dev python3-git python3-pyelftools python3-serial python3-six python3-yaml \\\n      software-properties-common texinfo unzip wget zip && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /tmp && \\\n    git clone https://github.com/rojer/fsync-stub && \\\n    cd /tmp/fsync-stub && ./install.sh && \\\n    rm -rf /tmp/fsync-stub\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y -q \\\n      python-cryptography python3-cryptography \\\n      python-future python3-future \\\n      python-pkg-resources python3-pkg-resources \\\n      python-setuptools python3-setuptools \\\n      rsync && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN useradd -d /opt/Espressif -m -s /bin/bash user && chown -R user /opt\n\nARG TOOLCHAIN_VERSION\nRUN cd /opt/Espressif && wget -q https://dl.espressif.com/dl/xtensa-esp32-elf-linux64-$TOOLCHAIN_VERSION.tar.gz && \\\n    tar xzf xtensa-esp32-elf-linux64-$TOOLCHAIN_VERSION.tar.gz && \\\n    rm xtensa-esp32-elf-linux64-$TOOLCHAIN_VERSION.tar.gz\nENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/Espressif/xtensa-esp32-elf/bin\nADD ct_path.sh /etc/profile.d\n\nARG DOCKER_TAG\nRUN git clone --recursive --branch $DOCKER_TAG https://github.com/cesanta/esp-idf /opt/Espressif/esp-idf\nRUN cd /opt/Espressif/esp-idf && git tag v$DOCKER_TAG\nENV IDF_PATH=/opt/Espressif/esp-idf\n\n# Pre-build configuration tools\nRUN cd $IDF_PATH/tools/kconfig && make conf-idf mconf-idf\n\nADD rom.bin rom.elf /opt/Espressif/rom/\n\nADD mgos_fw_meta.py mklfs mkspiffs mkspiffs8 /usr/local/bin/\nADD serve_core/ /opt/serve_core/\nRUN ln -s /opt/serve_core/serve_core.py /usr/local/bin/serve_core.py\n\nARG DOCKER_TAG\nENV MGOS_TARGET_GDB /opt/Espressif/xtensa-esp32-elf/bin/xtensa-esp32-elf-gdb\nENV MGOS_SDK_REVISION $DOCKER_TAG\nENV MGOS_SDK_BUILD_IMAGE docker.io/mgos/esp32-build:$DOCKER_TAG\n"
}