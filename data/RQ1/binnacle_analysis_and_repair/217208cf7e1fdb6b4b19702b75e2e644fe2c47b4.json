{
  "startTime": 1674641687084,
  "endTime": 1674641687184,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 123
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM microsoft/dotnet:2.0-runtime AS base\nWORKDIR /app\n\nFROM microsoft/dotnet:2.0-sdk AS build\nWORKDIR /src\nCOPY *.sln ./\nCOPY samples/Serverless/Serverless.Functions.Root/Serverless.Functions.Root.csproj samples/Serverless/Serverless.Functions.Root/\nCOPY samples/Serverless/NBB.Contracts.Functions.CreateContract/NBB.Contracts.Functions.CreateContract.csproj samples/Serverless/NBB.Contracts.Functions.CreateContract/\nCOPY src/EventStore/NBB.EventStore/NBB.EventStore.csproj src/EventStore/NBB.EventStore/\nCOPY src/EventStore/NBB.EventStore.Abstractions/NBB.EventStore.Abstractions.csproj src/EventStore/NBB.EventStore.Abstractions/\nCOPY src/Core/NBB.Core.Abstractions/NBB.Core.Abstractions.csproj src/Core/NBB.Core.Abstractions/\nCOPY samples/MicroServices/NBB.Contracts/NBB.Contracts.Data/NBB.Contracts.Data.csproj samples/MicroServices/NBB.Contracts/NBB.Contracts.Data/\nCOPY src/Data/NBB.Data.EntityFramework/NBB.Data.EntityFramework.csproj src/Data/NBB.Data.EntityFramework/\nCOPY src/Domain/NBB.Domain.Abstractions/NBB.Domain.Abstractions.csproj src/Domain/NBB.Domain.Abstractions/\nCOPY samples/MicroServices/NBB.Contracts/NBB.Contracts.Domain/NBB.Contracts.Domain.csproj samples/MicroServices/NBB.Contracts/NBB.Contracts.Domain/\nCOPY src/Domain/NBB.Domain/NBB.Domain.csproj src/Domain/NBB.Domain/\nCOPY samples/MicroServices/NBB.Contracts/NBB.Contracts.ReadModel/NBB.Contracts.ReadModel.csproj samples/MicroServices/NBB.Contracts/NBB.Contracts.ReadModel/\nCOPY src/Data/NBB.Data.EventSourcing/NBB.Data.EventSourcing.csproj src/Data/NBB.Data.EventSourcing/\nCOPY src/Messaging/NBB.Messaging.Nats/NBB.Messaging.Nats.csproj src/Messaging/NBB.Messaging.Nats/\nCOPY src/Messaging/NBB.Messaging.Kafka/NBB.Messaging.Kafka.csproj src/Messaging/NBB.Messaging.Kafka/\nCOPY src/Messaging/NBB.Messaging.Abstractions/NBB.Messaging.Abstractions.csproj src/Messaging/NBB.Messaging.Abstractions/\nCOPY src/Messaging/NBB.Messaging.DataContracts/NBB.Messaging.DataContracts.csproj src/Messaging/NBB.Messaging.DataContracts/\nCOPY src/EventStore/NBB.EventStore.AdoNet/NBB.EventStore.AdoNet.csproj src/EventStore/NBB.EventStore.AdoNet/\nCOPY src/EventStore/NBB.EventStore.MessagingExtensions/NBB.EventStore.MessagingExtensions.csproj src/EventStore/NBB.EventStore.MessagingExtensions/\nCOPY src/Monitoring/NBB.Monitoring.Correlation/NBB.Monitoring.Correlation.csproj src/Monitoring/NBB.Monitoring.Correlation/\nCOPY samples/MicroServices/NBB.Contracts/NBB.Contracts.Application/NBB.Contracts.Application.csproj samples/MicroServices/NBB.Contracts/NBB.Contracts.Application/\nCOPY samples/MicroServices/NBB.Contracts/NBB.Contracts.PublishedLanguage/NBB.Contracts.PublishedLanguage.csproj samples/MicroServices/NBB.Contracts/NBB.Contracts.PublishedLanguage/\nCOPY src/Application/NBB.Application/NBB.Application.csproj src/Application/NBB.Application/\nCOPY src/Messaging/NBB.Messaging.Kafka/NBB.Messaging.Kafka.csproj src/Messaging/NBB.Messaging.Kafka/\nCOPY src/Mediator/NBB.Mediator.OpenFaaS/NBB.Mediator.OpenFaaS.csproj src/Mediator/NBB.Mediator.OpenFaaS/\nCOPY src/Monitoring/NBB.Monitoring.Correlation.Serilog/NBB.Monitoring.Correlation.Serilog.csproj src/Monitoring/NBB.Monitoring.Correlation.Serilog/\nRUN dotnet restore\nCOPY . .\nWORKDIR /src/samples/Serverless/Serverless.Functions.Root\nRUN dotnet build -c Release -o /app\n\nFROM build AS publish\nRUN dotnet publish -c Release -o /app\n\nFROM base AS final\nRUN apt-get update -qy \\\n    && apt-get install -qy curl ca-certificates --no-install-recommends \\ \n    && echo \"Pulling watchdog binary from Github.\" \\\n    && curl -f -sSL https://github.com/openfaas-incubator/of-watchdog/releases/download/0.2.1/of-watchdog > /usr/bin/fwatchdog \\\n    && chmod +x /usr/bin/fwatchdog \\\n    && apt-get -qy remove curl \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /app\nCOPY --from=publish /app .\n\nENV write_debug=true\nENV read_debug=true\nENV afterburn=true\nENV mode=afterburn\n\nENV fprocess=\"dotnet ./Serverless.Functions.Root.dll\"\nEXPOSE 8080\nCMD [\"fwatchdog\"]\n"
}