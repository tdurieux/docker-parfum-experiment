{
  "startTime": 1674239547121,
  "endTime": 1674239547180,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This container is for simplifying CI when using Azure Pipelines\n\n# The first builder image will build HTML and JavaScript code out of the create-react-app project\nFROM node:12 AS builder-react\nWORKDIR /var/build/react/\n\n# Copy the web app code to /var/build/react/\n# We excluded /.env and /node_modules/ via .dockerignore\nADD app/ /var/build/react/\n\n# Doing a fresh \"npm install\" on build to make sure the image is reproducible\nRUN npm ci\n\n# Build the web app code via create-react-app and react-scripts\nRUN npm run build\n\n# The second builder image will aggregate all code into a single Docker image for export\nFROM node:12\n\n# Copy the bot code to /var/bot/\nADD bot/ /var/build/bot/\n\n# Copy the web server code to /var/web/\nADD rest-api/ /var/build/web/\n\n# Copy SSH configuration and startup script to /var/\n# Adopted from https://github.com/Azure-App-Service/node/blob/master/10.14/sshd_config\nADD init.sh /var/build/\nADD sshd_config /var/build/\n\n# Copy static React app to /var/web/public/, to be consumed by web server\nCOPY --from=builder-react /var/build/react/build/ /var/build/web/public/\n\n# Doing a fresh \"npm install\" on build to make sure the image is reproducible\nWORKDIR /var/build/bot/\nRUN npm ci\n\n# Doing a fresh \"npm install\" on build to make sure the image is reproducible\nWORKDIR /var/build/web/\nRUN npm ci\n\n# Pack \"concurrently\" to make sure the image is reproducible\nWORKDIR /var/build/\nRUN npm install concurrently@4.1.0 && npm cache clean --force;\n\n# Pack the build content as a \"build.tgz\" and export it out\nRUN tar -cf build.tgz * && rm build.tgz\n"
}