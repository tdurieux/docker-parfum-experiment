{
  "startTime": 1674241663684,
  "endTime": 1674241663758,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 1: Build the application\n# docker build -t crowds-cure/cancer:latest .\nFROM node:11.2.0-slim as builder\n\nRUN apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\nRUN mkdir /usr/src/app && rm -rf /usr/src/app\nRUN npm install react-scripts -g && npm cache clean --force;\n\nWORKDIR /usr/src/app\n\nENV PATH /usr/src/app/node_modules/.bin:$PATH\nCOPY package.json /usr/src/app/package.json\nCOPY package-lock.json /usr/src/app/package-lock.json\n\nRUN npm install && npm cache clean --force;\n\nADD . /usr/src/app\nADD public /usr/src/app/public\nRUN npm run build\n\n# Stage 2: Bundle the built application into a Docker container\n# which runs Nginx using Alpine Linux\nFROM nginx:1.15.5-alpine\nRUN rm -rf /etc/nginx/conf.d\nCOPY conf /etc/nginx\nCOPY --from=builder /usr/src/app/build /usr/share/nginx/html\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]"
}