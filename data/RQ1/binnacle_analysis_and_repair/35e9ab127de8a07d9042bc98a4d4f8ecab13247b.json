{
  "startTime": 1674641741552,
  "endTime": 1674641741631,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:alpine AS typescript\nWORKDIR /app\nCOPY . ./\nRUN npm install typescript -g && npm cache clean --force;\nRUN npm i -s d3 && npm cache clean --force;\nRUN npm i -s @types/d3 && npm cache clean --force;\nRUN tsc -p tsconfig.json\n\nFROM microsoft/dotnet:sdk AS build-env\nWORKDIR /app\n\n# Copy csproj and restore as distinct layers\nCOPY --from=typescript /app/*.csproj ./\nRUN dotnet restore\n\n# Copy everything else and build\nCOPY --from=typescript /app ./\nRUN dotnet restore\nRUN dotnet bundle\nRUN dotnet publish -c Release -o out\n\n# Build runtime image\nFROM microsoft/dotnet:aspnetcore-runtime\nWORKDIR /app\nCOPY --from=build-env /app/out .\nENTRYPOINT [\"dotnet\", \"Heuristic.PathfindingLab.dll\"]"
}