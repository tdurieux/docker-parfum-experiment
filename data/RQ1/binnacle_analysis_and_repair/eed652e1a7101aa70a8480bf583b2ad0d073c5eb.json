{
  "startTime": 1674252023954,
  "endTime": 1674252024179,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 120
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 120
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "################################################################################\n# Copyright (c) 2014 IBM Corp.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n################################################################################\nFROM acmeair/base\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y mongodb redis-server redis-tools rake golang git && \\\n  apt-get clean && \\\n  rm -Rf /var/cache/* && rm -rf /var/lib/apt/lists/*;\n\n# gnatsd\nRUN mkdir /tmp/go &&\\\n  GOPATH=/tmp/go go get github.com/apcera/gnatsd &&\\\n  mv /tmp/go/bin/gnatsd /usr/local/bin &&\\\n  rm -Rf /tmp/go\n\n# MongoDB\nRUN gem install mongo bson_ext\nRUN sed -i 's/\\(bind_ip = \\).*/\\10.0.0.0/' /etc/mongodb.conf &&\\\n  echo \"port = 27017\" >> /etc/mongodb.conf &&\\\n  echo \"smallfiles = true\" >> /etc/mongodb.conf\nRUN sudo -u mongodb /usr/bin/mongod -f /etc/mongodb.conf --fork &\\\n  max=5; for i in `seq 1 1 $max`; do sleep 5; /usr/bin/mongo --eval \"db\"; if [ \"$?\" -eq 0 ]; then break; fi; if [ \"$i\" -eq \"$max\" ]; then exit 1; fi; done &&\\\n  /usr/bin/mongo admin --eval \"db.addUser('admin','$admin_passwd');\" &&\\\n  /usr/bin/mongo authdb --eval \"db.addUser('auser','$auser_passwd');\" &&\\\n  /usr/bin/mongo imdb --eval \"db.addUser('imuser','$imuser_passwd');\" &&\\\n  /usr/bin/mongo asgdb --eval \"db.addUser('asguser','$asguser_passwd');\" &&\\\n  sudo -u mongodb /usr/bin/mongod -f /etc/mongodb.conf --shutdown\nRUN echo \"auth = true\" >> /etc/mongodb.conf\n\n# Microscaler\nRUN cd /usr/local &&\\\n  wget -qO- https://github.com/EmergingTechnologyInstitute/microscaler/tarball/master | tar xzf - -C /tmp &&\\\n  mv /tmp/EmergingTechnologyInstitute-microscaler-*/microscaler /usr/local &&\\\n  mv /tmp/EmergingTechnologyInstitute-microscaler-*/microscaler-cli /usr/local &&\\\n  rm -Rf /tmp/EmergingTechnologyInstitute-microscaler-* &&\\\n  cd microscaler &&\\\n  mkdir /.bundle &&\\\n  echo --- >> /.bundle/config &&\\\n  echo 'BUNDLE_BUILD__EVENTMACHINE: --with-cflags=\"-O2 -pipe -march=native -w\" ' >> /.bundle/config &&\\\n  echo 'BUNDLE_BUILD__THIN: --with-cflags=\"-O2 -pipe -march=native -w\" ' >> /.bundle/config &&\\\n  bundle install &&\\\n  cd ../microscaler-cli &&\\\n  bundle install\n\nRUN echo \"alias ms=/usr/local/microscaler-cli/bin/ms\" >> /root/.bashrc\n\nADD redis.conf /etc/supervisor/conf.d/redis.conf\nADD mongodb.conf /etc/supervisor/conf.d/mongodb.conf\nADD gnatsd.conf /etc/supervisor/conf.d/gnatsd.conf\nADD controller.conf /etc/supervisor/conf.d/controller.conf\nADD healthmanager.conf /etc/supervisor/conf.d/healthmanager.conf\nADD worker-launch.conf /etc/supervisor/conf.d/worker-launch.conf\nADD worker-stop.conf /etc/supervisor/conf.d/worker-stop.conf\n\nCMD [\"/usr/bin/supervisord\", \"-n\"]\n\n"
}