{
  "startTime": 1674245740733,
  "endTime": 1674245740928,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 96,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 96,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 96,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:17.10\nMAINTAINER Stefan Bossbaly <sbossb@gmail.com>\n\n########################################################\n# Volumes\n########################################################\nENV SRC_DIR /srv/src\nENV CHROMIUM_DIR /srv/chromium\nENV CCACHE_DIR /srv/ccache\nENV TMP_DIR /srv/tmp\nENV KEYS_DIR /srv/keys\nENV LMANIFEST_DIR /srv/local_manifests\nENV LOGS_DIR /srv/logs\nENV ZIP_DIR /srv/zips\n\n# By default we want to use CCACHE, you can disable this\n# WARNING: disabling this may slow down a lot your builds!\nENV USE_CCACHE 1\n\n# ccache maximum size. It should be a number followed by an optional suffix: k,\n# M, G, T (decimal), Ki, Mi, Gi or Ti (binary). The default suffix is G. Use 0\n# for no limit.\nENV CCACHE_SIZE 50G\n\n# Sign the builds with the keys in $KEYS_DIR\nENV SIGN_BUILDS false\n\n# When SIGN_BUILDS = true but no keys have been provided, generate a new set with this subject\nENV KEYS_SUBJECT '/C=US/ST=California/L=Mountain View/O=Android/OU=Android/CN=Android/emailAddress=android@android.com'\n\n########################################################\n# User Id\n########################################################\nENV USER \"root\"\nENV USER_NAME \"CopperheadOs Buildbot\"\nENV USER_MAIL \"copperheados-buildbot@docker.host\"\n\n# Apply the MicroG's signature spoofing patch\n# Valid values are \"no\", \"yes\" (for the original MicroG's patch) and\n# \"restricted\" (to grant the permission only to the system privileged apps).\n#\n# The original (\"yes\") patch allows user apps to gain the ability to spoof\n# themselves as other apps, which can be a major security threat. Using the\n# restricted patch and embedding the apps that requires it as system privileged\n# apps is a much secure option. See the README.md (\"Custom mode\") for an\n# example.\nENV SIGNATURE_SPOOFING \"no\"\n\n# Installs the PICO variant of OpenGAPPS\n# Valid values are \"no\", \"yes\"\nENV OPEN_GAPPS \"no\"\n\n########################################################\n# Build Variables\n########################################################\nENV DEVICE \"walleye\"\nENV BUILD_TAG \"OPM2.171019.029.B1.2018.05.15.17\"\nENV BUILD_ID \"OPM2.171019.029.B1\"\nENV CHROMIUM_RELEASE_NAME \"66.0.3359.158\"\nENV CHROMIUM_RELEASE_CODE \"335915852\"\nENV NUM_OF_THREADS 8\n\n########################################################\n# Create Volume entry points\n########################################################\nVOLUME $SRC_DIR\nVOLUME $CHROMIUM_DIR\nVOLUME $CCACHE_DIR\nVOLUME $TMP_DIR\nVOLUME $KEYS_DIR\nVOLUME $LMANIFEST_DIR\nVOLUME $LOGS_DIR\nVOLUME $ZIP_DIR\n\n########################################################\n# Copy required files\n########################################################\nCOPY src/ /root/\n\n########################################################\n# Create missing directories\n########################################################\nRUN mkdir -p $SRC_DIR\nRUN mkdir -p $CHROMIUM_DIR\nRUN mkdir -p $CCACHE_DIR\nRUN mkdir -p $TMP_DIR\nRUN mkdir -p $KEYS_DIR\nRUN mkdir -p $LMANIFEST_DIR\nRUN mkdir -p $LOGS_DIR\nRUN mkdir -p $ZIP_DIR\n\n########################################################\n# Install Dependencies\n########################################################\nRUN apt-get -qq update && apt-get install --no-install-recommends -y bc bison build-essential ccache cron curl flex \\\n      g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev \\\n      lib32readline-dev lib32z1-dev libesd0-dev liblz4-tool libncurses5-dev \\\n      libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lsof lzop \\\n      maven openjdk-8-jdk pngcrush procps python rsync schedtool \\\n      squashfs-tools wget xdelta3 xsltproc yasm zip zlib1g-dev cgpt bsdmainutils lzip && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -qqy upgrade\n\n\n\n\n\n\n\n########################################################\n# Add PGP Keys\n########################################################\nRUN gpg --batch --import \"/root/gpgkeys/9AB10E784340D13570EF945E83810964E8AD3F819AB10E78.gpg\"\nRUN gpg --batch --import \"/root/gpgkeys/9AF5F22A65EEFE022108E2B708CBFCF7F9E712E59AF5F22A.gpg\"\nRUN gpg --batch --import \"/root/gpgkeys/47A0B99EE6E0512B1829A92528CAFB50B60ABDD447A0B99E.gpg\"\nRUN gpg --batch --import \"/root/gpgkeys/E09EE26BC29C13C520C097E827C85CFCFAD4F2B8E09EE26B.gpg\"\n\n########################################################\n# Install Google Tools\n########################################################\nRUN git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git /usr/local/sbin\n\n########################################################\n# Set the work directory\n########################################################\nWORKDIR $SRC_DIR\n\nENTRYPOINT [\"/root/docker_entrypoint.sh\"]\n"
}