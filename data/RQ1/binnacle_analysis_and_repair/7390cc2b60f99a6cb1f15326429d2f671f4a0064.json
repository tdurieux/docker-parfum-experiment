{
  "startTime": 1674246604152,
  "endTime": 1674246604211,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n#\n# Dockerfile for guacamole-manual\n#\n# See the README for more information on how to use this file.\n\n# Set this build arg to any of the available version labels for the httpd image\nARG HTTPD_VERSION=2.4\n\n# Perform the build itself on a Debian base\nFROM debian:stretch AS builder\n\n# Set the path for docbook, as required by the Makefile\nENV DOCBOOK_PATH=/usr/share/sgml/docbook/stylesheet/xsl/docbook-xsl/\n\n# Install build dependencies\nRUN \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y make xsltproc fop docbook-xsl && rm -rf /var/lib/apt/lists/*;\n\n# Make the directory structure that will be produced by the build so that\n# directories will exist regardless of which target is selected. This ensures\n# that the COPY commands in the second stage of the build will succeed even\n# if the target selected does not include all build variants.\n# \n# This RUN is a separate command from the previous RUN command, so that changes\n# to the build structure that might result in the need to change the directories\n# created here will not invalidate the build cache from the preceding command\n# that installs dependences (which is a time consuming step).\n#\nRUN \\\n  mkdir -p /manual/html && \\\n  mkdir -p /manual/book\n\n# Set the working directory for the remainder of the build process\nWORKDIR /manual\n\n# Default build target for the make\n#\n# It might be tempting to move this command to the top of the Dockerfile,\n# but by doing so, any time a different target is selected, the build cache\n# for the layer that installs all build dependencies will be invalidated.\n#\nARG TARGET=html\n\n# Copy the manual source into the working directory and build it\nCOPY ./ ./\nRUN make ${TARGET}\n\n# For the runtime image, use the official Apache httpd image\nFROM httpd:${HTTPD_VERSION}\n\n# Copy any HTML generated by the build into httpd's document root\nCOPY --from=builder /manual/html/ /usr/local/apache2/htdocs/\n\n# Copy any PDF generated by the build into http's document root\nCOPY --from=builder /manual/book/ /usr/local/apache2/htdocs/\n"
}