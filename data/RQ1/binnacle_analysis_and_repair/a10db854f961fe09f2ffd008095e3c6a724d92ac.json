{
  "startTime": 1674251206674,
  "endTime": 1674251207059,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 10,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) IBM Corporation 2016\n# Distributed under the terms of the Modified BSD License.\n\n# Ubuntu image\nFROM ppc64le/ubuntu:trusty\n\nLABEL maintainer=\"Ilsiyar Gaynutdinov <ilsiyar_gaynutdinov@ru.ibm.com>\"\n\nUSER root\n\n# Install all OS dependencies for notebook server that starts but lacks all\n# features (e.g., download as all possible file formats)\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get -yq dist-upgrade \\\n && apt-get install -yq --no-install-recommends \\\n    build-essential \\\n    bzip2 \\\n    ca-certificates \\\n    cmake \\\n    git \\\n    locales \\\n    sudo \\\n    wget \\\n    && apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN echo \"LANGUAGE=en_US.UTF-8\" >> /etc/default/locale\nRUN echo \"LC_ALL=en_US.UTF-8\" >> /etc/default/locale\nRUN echo \"LC_TYPE=en_US.UTF-8\" >> /etc/default/locale\nRUN locale-gen en_US en_US.UTF-8\n\n#build and install Tini for ppc64le\nRUN wget https://github.com/krallin/tini/archive/v0.10.0.tar.gz && \\\n    tar zxvf v0.10.0.tar.gz && \\\n    rm -rf v0.10.0.tar.gz\nWORKDIR tini-0.10.0/\nRUN cmake . && make install\nRUN mv ./tini /usr/local/bin/tini  && \\\n    chmod +x /usr/local/bin/tini\nWORKDIR ..\n\n# Configure environment\nENV CONDA_DIR /opt/conda\nENV PATH $CONDA_DIR/bin:$PATH\nENV SHELL /bin/bash\nENV NB_USER jovyan\nENV NB_UID 1000\nENV HOME /home/$NB_USER\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\n# Create jovyan user with UID=1000 and in the 'users' group\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \\\n    mkdir -p $CONDA_DIR && \\\n    chown $NB_USER $CONDA_DIR\n\nUSER $NB_UID\n\n# Setup jovyan home directory\nRUN mkdir /home/$NB_USER/work && \\\n    mkdir /home/$NB_USER/.jupyter && \\\n    echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" > /home/$NB_USER/.curlrc\n\n# Install conda as jovyan\nRUN cd /tmp && \\\n    mkdir -p $CONDA_DIR && \\\n    wget https://repo.continuum.io/miniconda/Miniconda3-4.2.12-Linux-ppc64le.sh && \\\n    /bin/bash Miniconda3-4.2.12-Linux-ppc64le.sh -f -b -p $CONDA_DIR && \\\n    rm -rf Miniconda3-4.2.12-Linux-ppc64le.sh && \\\n    $CONDA_DIR/bin/conda install --quiet --yes conda=4.2.12  && \\\n    $CONDA_DIR/bin/conda config --system --add channels conda-forge && \\\n    $CONDA_DIR/bin/conda config --system --set auto_update_conda false && \\\n    conda clean -tipsy\n\n# Install Jupyter notebook and Hub\nRUN yes | pip install --no-cache-dir --upgrade pip\nRUN yes | pip install --quiet --no-cache-dir \\\n    'notebook==5.2.*' \\\n    'jupyterhub==0.7.*' \\\n    'jupyterlab==0.18.*'\n\nUSER root\n\nEXPOSE 8888\nWORKDIR /home/$NB_USER/work\nRUN echo \"ALL            ALL = (ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\n# Configure container startup\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n\n# Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /home/$NB_USER/.jupyter/\nRUN chown -R $NB_USER:users /home/$NB_USER/.jupyter\n\n# Switch back to jovyan to avoid accidental container runs as root\nUSER $NB_UID\n"
}