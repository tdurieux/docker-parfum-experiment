{
  "startTime": 1674234527433,
  "endTime": 1674234527678,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 2,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n# PLEASE DO NOT EDIT IT DIRECTLY.\n#\n\nFROM debian:stretch-slim\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN set -eux; \\\n\tgroupadd -r varnish; \\\n\tfor user in varnish vcache; do \\\n\t\tuseradd -r -g varnish $user; \\\n\tdone\n\n# prevent Debian's Varnish packages from being installed\nRUN set -eux; \\\n\t{ \\\n\t\techo 'Package: varnish*'; \\\n\t\techo 'Pin: release *'; \\\n\t\techo 'Pin-Priority: -1'; \\\n\t} > /etc/apt/preferences.d/no-debian-varnish\n\n# dependencies required for building VMOD (Varnish modules)\nENV VMOD_BUILD_DEPS \\\n\t\tautoconf-archive \\\n\t\tautomake \\\n\t\tautotools-dev \\\n\t\tlibtool \\\n\t\tmake \\\n\t\tpkg-config \\\n\t\tpython3\n\n# persistent / runtime deps\nRUN apt-get update && apt-get install -y \\\n\t\tgcc \\\n\t\tlibc6-dev \\\n\t--no-install-recommends && rm -r /var/lib/apt/lists/*\n\nENV VARNISH_VERSION 4.1.11\nENV VARNISH_URL https://varnish-cache.org/_downloads/varnish-4.1.11.tgz\nENV VARNISH_SHA256 f937a45116f3a7fbb38b2b5d7137658a4846409630bb9eccdbbb240e1a1379bc\n\nRUN set -eux; \\\n\n\tfetchDeps=' \\\n\t\tca-certificates \\\n\t\twget \\\n\t'; \\\n\tbuildDeps=\" \\\n\t\t$VMOD_BUILD_DEPS \\\n\t\tdpkg-dev \\\n\t\tlibedit-dev \\\n\t\tlibjemalloc-dev \\\n\t\tlibncurses5-dev \\\n\t\tlibpcre3-dev \\\n\t\"; \\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends $fetchDeps $buildDeps; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\n\twget -O varnish.tar.gz \"$VARNISH_URL\"; \\\n\n\tif [ -n \"$VARNISH_SHA256\" ]; then \\\n\t\techo \"$VARNISH_SHA256  *varnish.tar.gz\" | sha256sum -c -; \\\n\tfi; \\\n\n\tmkdir -p /usr/src/varnish; \\\n\ttar -zxf varnish.tar.gz -C /usr/src/varnish --strip-components=1; \\\n\trm varnish.tar.gz; \\\n\n\tcd /usr/src/varnish; \\\n\tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n\t./autogen.sh; \\\n\t./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--with-rst2man=$(command -v true) \\\n\t\t--with-sphinx-build=$(command -v true) \\\n\t; \\\n\tmake -j \"$(nproc)\"; \\\n\tmake install; \\\n\tldconfig; \\\n\n\tcd /; \\\n\trm -r /usr/src/varnish; \\\n\n# reset apt-mark's \"manual\" list so that \"purge --auto-remove\" will remove all build dependencies\n\tapt-mark auto '.*' > /dev/null; \\\n\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \\\n\tfind /usr/local -type f -executable -exec ldd '{}' ';' \\\n\t\t| awk '/=>/ { print $(NF-1) }' \\\n\t\t| sort -u \\\n\t\t| xargs -r dpkg-query --search \\\n\t\t| cut -d: -f1 \\\n\t\t| sort -u \\\n\t\t| xargs -r apt-mark manual \\\n\t; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\n\tvarnishd -V\n\nWORKDIR /usr/local/var/varnish\nRUN chown -R varnish:varnish /usr/local/var/varnish\nVOLUME /usr/local/var/varnish\n\nCOPY docker-varnish-entrypoint /usr/local/bin/\nENTRYPOINT [\"docker-varnish-entrypoint\"]\n\nEXPOSE 80\nCMD [\"varnishd\", \"-F\", \"-f\", \"/usr/local/etc/varnish/default.vcl\"]\n"
}