{
  "startTime": 1674245593321,
  "endTime": 1674245593518,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.1-fpm-alpine\n\nLABEL version=\"v1.0.2\"\nLABEL maintainer=\"Sheaven <sheaven@qq.com>, Guan Shiliang <guan.shiliang@gmail.com>\"\n\nARG piplin_ver=v1.0.2\n\nRUN mkdir -p /var/www/piplin\nWORKDIR /var/www/piplin\n\nRUN sed -i \"s/dl-cdn.alpinelinux.org/mirror.tuna.tsinghua.edu.cn/\" /etc/apk/repositories\n\n# PHP 环境安装\nRUN set -xe \\\n    && apk add --no-cache \\\n        freetype-dev \\\n        libjpeg-turbo-dev \\\n        libpng-dev \\\n    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-install gd zip\n\n# 复制项目代码\nRUN set -xe; \\\n    curl -o ${piplin_ver}.tar.gz -fSL \"https://github.com/Piplin/Piplin/archive/${piplin_ver}.tar.gz\"; \\\n    tar xzvf ${piplin_ver}.tar.gz --strip-components=1; \\\n    rm -r ${piplin_ver}.tar.gz composer.lock\n\n# 安装 composer\nRUN set -xe \\\n    && php -r \"copy('https://install.phpcomposer.com/installer', 'composer-setup.php');\" \\\n    && php composer-setup.php \\\n    && rm -f composer-setup.php \\\n    && mv composer.phar /usr/local/bin/composer \\\n    && composer config -g repo.packagist composer https://packagist.phpcomposer.com\n\n# 安装项目依赖\nRUN set -xe \\\n    && apk add --no-cache nginx redis nodejs nodejs-npm supervisor git bash openssh-client rsync \\\n    && npm config set registry http://registry.npm.taobao.org/ \\\n    && composer install -o \\\n    && npm install --production \\\n    && chmod -R 777 storage \\\n    && chmod -R 777 bootstrap/cache \\\n    && chmod -R 777 public/upload \\\n    && mkdir -p /etc/supervisor/conf.d \\\n    && echo '* * * * * /usr/bin/php /var/www/piplin/artisan schedule:run >> /dev/null 2>&1' > /etc/crontabs/root && npm cache clean --force;\nCOPY supervisor/supervisord.conf /etc/supervisor/supervisord.conf\nCOPY supervisor/piplin.conf /etc/supervisor/conf.d/piplin.conf\nCOPY nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY nginx/piplin.template /etc/nginx/conf.d/default.conf\nCOPY .env.docker /var/www/piplin/.env\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\n\nVOLUME /var/www/piplin\nEXPOSE 80\n\nCMD [\"/usr/local/bin/entrypoint.sh\"]\n"
}