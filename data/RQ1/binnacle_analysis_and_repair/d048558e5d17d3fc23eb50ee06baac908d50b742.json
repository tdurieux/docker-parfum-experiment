{
  "startTime": 1674245242285,
  "endTime": 1674245242436,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2017 The Nuclio Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#\n# Build assets stage: builds the dashboard assets (js, html, css, etc)\n#\n\nFROM node:8 as build-static\n\n# copy source tree\nCOPY ./pkg/dashboard/ui /home/nuclio/dashboard/src\n\n# install gulp and bower, cd into the source dir and build to create /home/nuclio/dashboard/src/dist\n# which contains all the necessary files (index.html and assets/ dir)\nRUN npm install -g gulp \\\n    && cd /home/nuclio/dashboard/src \\\n    && rm -rf ./dist ./node_modules ./resources/*/node_modules \\\n    && npm install --production \\\n    && gulp build --production && npm cache clean --force;\n\n#\n# Build binary stage: builds the dashboard binary\n#\n\nFROM golang:1.10 as build-binary\n\n# copy source tree\nWORKDIR /go/src/github.com/nuclio/nuclio\nCOPY . .\n\n# build the dashboard\nRUN go get github.com/v3io/v3io-go-http \\\n    && go get github.com/nuclio/logger \\\n    && go get github.com/nuclio/nuclio-sdk-go \\\n    && go get github.com/nuclio/amqp \\\n    && GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -a -installsuffix cgo -ldflags=\"-s -w\" -o dashboard cmd/dashboard/main.go\n\n#\n# Output stage: Creates version file, copies binary and assets to an alpine image\n#\n\nFROM nginx:stable-alpine\n\nARG DOCKER_CLI_VERSION=\"17.09.0-ce\"\n\nENV DOWNLOAD_URL=\"https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_CLI_VERSION.tgz\"\n\nRUN apk --update --no-cache add ca-certificates git curl supervisor \\\n    && mkdir -p /tmp/download \\\n    && curl -f -L $DOWNLOAD_URL | tar -xz -C /tmp/download \\\n    && mv /tmp/download/docker/docker /usr/local/bin/ \\\n    && rm -rf /tmp/download \\\n    && apk del curl\n\n# copy supervisord configuration files\nCOPY cmd/dashboard/docker/supervisor.conf /etc/supervisor.conf\nCOPY cmd/dashboard/docker/dashboard.sv.conf /etc/supervisor/conf.d/dashboard.conf\n\n# copy nginx config\nCOPY cmd/dashboard/docker/nginx.conf /etc/nginx/conf.d/default.conf\n\n# copy dashboard static from build assets stage. /etc/nuclio/dashboard/static will contain index.html and assets\nCOPY --from=build-static /home/nuclio/dashboard/src/dist /etc/nginx/static/\n\n# copy dashboard binary from build binary stage\nCOPY --from=build-binary /go/src/github.com/nuclio/nuclio/dashboard /usr/local/bin\n\n# generate a version file\nARG NUCLIO_VERSION_INFO_FILE_CONTENTS\nRUN mkdir -p /etc/nuclio && echo ${NUCLIO_VERSION_INFO_FILE_CONTENTS} > /etc/nuclio/version_info.json\n\nCMD [\"supervisord\", \"-c\", \"/etc/supervisor.conf\", \"-l\", \"/etc/supervisor.log\", \"-j\", \"/etc/supervisor.pid\"]\n"
}