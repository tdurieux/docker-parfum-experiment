{
  "startTime": 1674239560404,
  "endTime": 1674239560484,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nWORKDIR /root\n\n# Pick up some TF dependencies\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        pkg-config \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        git \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install miniconda\nRUN curl -f -LO http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh \\\n      && bash Miniconda-latest-Linux-x86_64.sh -p /miniconda -b \\\n      && rm Miniconda-latest-Linux-x86_64.sh\nENV PATH /miniconda/bin:$PATH\n\n# Create a conda environment\nENV CONDA_ENV_NAME iris-predictor\nCOPY environment.yml  ./environment.yml\nRUN conda env create -f environment.yml -n $CONDA_ENV_NAME\nENV PATH /miniconda/envs/${CONDA_ENV_NAME}/bin:$PATH\n\n# cleanup tarballs and downloaded package files\nRUN conda clean -tp -y \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# gRPC\nEXPOSE 50052\n# REST\nEXPOSE 5000\n\n# Environment variables\nENV MAX_WORKERS 1\nENV PORT 50052\n\nCOPY . /root/\nCMD python grpc_server.py --max_workers ${MAX_WORKERS} --port ${PORT}\n"
}