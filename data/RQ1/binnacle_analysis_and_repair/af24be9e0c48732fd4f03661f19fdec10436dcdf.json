{
  "startTime": 1674242326700,
  "endTime": 1674242326896,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-devel-ubuntu16.04\n\n# TensorFlow version is tightly coupled to CUDA and cuDNN so it should be selected carefully\nENV PYTHON_VERSION=3.5\nENV TENSORFLOW_VERSION=1.9.0\nENV CUDNN_VERSION=7.0.5.15-1+cuda9.0\nENV NCCL_VERSION=2.2.13-1+cuda9.0\n\nRUN echo \"deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list\n\nRUN apt-get update && apt-get install -y --no-install-recommends  --allow-downgrades --allow-change-held-packages \\\n        build-essential \\\n        cmake \\\n        cpio \\\n        git \\\n        curl \\\n        wget \\\n        ca-certificates \\\n        libdapl2 \\\n        libcudnn7=${CUDNN_VERSION} \\\n        libnccl2=${NCCL_VERSION} \\\n        libnccl-dev=${NCCL_VERSION} \\\n        libjpeg-dev \\\n        libpng-dev \\\n        libmlx4-1 \\\n        libsm6 \\ \n        libxext6 \\\n        python$PYTHON_VERSION \\\n        python$PYTHON_VERSION-dev && rm -rf /var/lib/apt/lists/*;\n\n\n# install intel MPI\nRUN cd /tmp && \\\n    wget -q 'https://registrationcenter-download.intel.com/akdlm/irc_nas/tec/11595/l_mpi_2017.3.196.tgz' && \\\n    tar zxvf l_mpi_2017.3.196.tgz && \\\n    sed -i -e 's/^ACCEPT_EULA=decline/ACCEPT_EULA=accept/g' /tmp/l_mpi_2017.3.196/silent.cfg && \\\n    sed -i -e 's|^#ACTIVATION_LICENSE_FILE=|ACTIVATION_LICENSE_FILE=/tmp/l_mpi_2017.3.196/USE_SERVER.lic|g' \\\n    \t\t\t/tmp/l_mpi_2017.3.196/silent.cfg && \\\n    sed -i -e 's/^ACTIVATION_TYPE=exist_lic/ACTIVATION_TYPE=license_server/g' /tmp/l_mpi_2017.3.196/silent.cfg && \\\n    cd /tmp/l_mpi_2017.3.196 && \\\n    ./install.sh -s silent.cfg && \\\n    cd .. && \\\n    rm -rf l_mpi_2017.3.196* && \\\n    echo \"source /opt/intel/compilers_and_libraries_2017.4.196/linux/mpi/intel64/bin/mpivars.sh\" >> ~/.bashrc && rm l_mpi_2017.3.196.tgz\n\nENV PATH $PATH:/opt/intel/compilers_and_libraries/linux/mpi/bin64\n\nRUN ln -s /usr/bin/python$PYTHON_VERSION /usr/bin/python\n\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\n\n# Install TensorFlow and Keras\nRUN pip install --no-cache-dir tensorflow-gpu==$TENSORFLOW_VERSION h5py scipy jupyter ipykernel numpy toolz pandas \\\n \tscikit-learn keras pillow\n\n# Install Horovod, temporarily using CUDA stubs\nRUN ldconfig /usr/local/cuda-9.0/targets/x86_64-linux/lib/stubs && \\\n    /bin/bash -c \"source /opt/intel/compilers_and_libraries_2017.4.196/linux/mpi/intel64/bin/mpivars.sh\" && \\\n    HOROVOD_WITH_TENSORFLOW=1 pip install --no-cache-dir horovod==0.13.2 && \\\n    ldconfig"
}