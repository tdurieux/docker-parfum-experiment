{
  "startTime": 1674236317486,
  "endTime": 1674236317719,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 193
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 193
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 193
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 217
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER Andy Jenkins <andy@gear11.com>, with thanks to github.com/eugeneware\n\n# Keep upstart from complaining\nRUN dpkg-divert --local --rename --add /sbin/initctl\nRUN ln -sf /bin/true /sbin/initctl\n\n# Let the conatiner know that there is no tty\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update\nRUN apt-get -y upgrade\n\nRUN echo Installing dependencies via Yum\n# Basic Requirements\nRUN apt-get -y --no-install-recommends install mysql-server mysql-client nginx php5-fpm php5-mysql php-apc pwgen python-setuptools curl git unzip && rm -rf /var/lib/apt/lists/*;\n\n# Wordpress Requirements\nRUN apt-get -y --no-install-recommends install php5-curl php5-gd php5-intl php-pear php5-imagick php5-imap php5-mcrypt php5-memcache php5-ming php5-ps php5-pspell php5-recode php5-sqlite php5-tidy php5-xmlrpc php5-xsl && rm -rf /var/lib/apt/lists/*;\n\nRUN echo Installing supervisor\nRUN /usr/bin/easy_install supervisor\nRUN /usr/bin/easy_install supervisor-stdout\n\nRUN echo Installing the WordPress CLI\nRUN curl -f -L \"https://raw.github.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\" > /usr/bin/wp\nRUN chmod +x /usr/bin/wp\n\nRUN echo Configuring MySQL\nRUN sed -i -e\"s/^bind-address\\s*=\\s*127.0.0.1/bind-address = 0.0.0.0/\" /etc/mysql/my.cnf\n\nRUN echo Configuring Nginx\nRUN sed -i -e\"s/keepalive_timeout\\s*65/keepalive_timeout 2/\" /etc/nginx/nginx.conf\nRUN sed -i -e\"s/keepalive_timeout 2/keepalive_timeout 2;\\n\\tclient_max_body_size 100m/\" /etc/nginx/nginx.conf\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\n\nRUN echo Configuring PHP-FPM\nRUN sed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" /etc/php5/fpm/php.ini\nRUN sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" /etc/php5/fpm/php.ini\nRUN sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" /etc/php5/fpm/php.ini\nRUN sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php5/fpm/php-fpm.conf\nRUN sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" /etc/php5/fpm/pool.d/www.conf\nRUN find /etc/php5/cli/conf.d/ -name \"*.ini\" -exec sed -i -re 's/^(\\s*)#(.*)/\\1;\\2/g' {} \\;\n\nRUN echo Deploying project assets\nADD . /G11DockerWP\n\nRUN echo Deploying Nginx and supervisord conf files\nRUN cp /G11DockerWP/docker-wordpress-nginx/nginx-site.conf /etc/nginx/sites-available/default\nRUN cp /G11DockerWP/docker-wordpress-nginx/supervisord.conf /etc/supervisord.conf\n\nRUN echo Starting services\n# We use ENTRYPOINT rather than CMD so that args after the image name go to us.\n# The first time you run this, pass in the new WordPress base URL as an argument,\n# in order to fix up links in the database\nENTRYPOINT [\"/bin/bash\", \"/G11DockerWP/start.sh\" ]\n\n# private expose\nEXPOSE 80\n"
}