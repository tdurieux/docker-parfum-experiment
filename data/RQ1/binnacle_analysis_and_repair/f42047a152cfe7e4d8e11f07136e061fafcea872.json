{
  "startTime": 1674236506012,
  "endTime": 1674236506554,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 68,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 89,
        "lineEnd": 103,
        "columnStart": 1,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n# FROM arm=armhf/ubuntu:16.04\n\nARG DAPPER_HOST_ARCH\nENV HOST_ARCH=${DAPPER_HOST_ARCH} ARCH=${DAPPER_HOST_ARCH}\n\nRUN apt-get update && apt-get install --no-install-recommends -y pkg-config && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y gcc make ca-certificates git wget curl vim less file && \\\n    rm -f /bin/sh && ln -s /bin/bash /bin/sh && rm -rf /var/lib/apt/lists/*;\n\nENV GOLANG_ARCH_amd64=amd64 GOLANG_ARCH_arm=armv6l GOLANG_ARCH=GOLANG_ARCH_${ARCH} \\\n    GOPATH=/go PATH=/go/bin:/usr/local/go/bin:${PATH} SHELL=/bin/bash\n\nRUN wget -O - https://storage.googleapis.com/golang/go1.7.1.linux-${!GOLANG_ARCH}.tar.gz | tar -xzf - -C /usr/local && \\\n    go get github.com/rancher/trash && go get github.com/golang/lint/golint\n\nENV DOCKER_URL_amd64=https://get.docker.com/builds/Linux/x86_64/docker-1.10.3 \\\n    DOCKER_URL_arm=https://github.com/rancher/docker/releases/download/v1.10.3-ros1/docker-1.10.3_arm \\\n    DOCKER_URL=DOCKER_URL_${ARCH}\n\nRUN wget -O - ${!DOCKER_URL} > /usr/bin/docker && chmod +x /usr/bin/docker\n\n\nRUN curl -f -sL ftp://xmlsoft.org/libxml2/libxml2-2.9.4.tar.gz | tar -xzf - && \\\n  cd /libxml2-2.9.4 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --enable-static \\\n    --disable-shared \\\n    --without-gnu-ld \\\n    --with-c14n \\\n    --without-catalog \\\n    --without-debug \\\n    --without-docbook \\\n    --without-fexceptions \\\n    --without-ftp \\\n    --without-history \\\n    --without-html \\\n    --without-http \\\n    --without-iconv \\\n    --without-icu \\\n    --without-iso8859x \\\n    --without-legacy \\\n    --without-mem-debug \\\n    --without-minimum \\\n    --with-output \\\n    --without-pattern \\\n    --with-push \\\n    --without-python \\\n    --without-reader \\\n    --without-readline \\\n    --without-regexps \\\n    --without-run-debug \\\n    --with-sax1 \\\n    --without-schemas \\\n    --without-schematron \\\n    --without-threads \\\n    --without-thread-alloc \\\n    --with-tree \\\n    --without-valid \\\n    --without-writer \\\n    --without-xinclude \\\n    --without-xpath \\\n    --with-xptr \\\n    --without-modules \\\n    --without-zlib \\\n    --without-lzma \\\n    --without-coverage && \\\n    make install\n\nRUN \\\n  curl -f -sL https://www.openssl.org/source/openssl-1.0.2j.tar.gz | tar -xzf - && \\\n  cd openssl-1.0.2j && \\\n  ./config \\\n    no-shared \\\n    no-weak-ssl-ciphers \\\n    no-ssl2 \\\n    no-ssl3 \\\n    no-comp \\\n    no-idea \\\n    no-dtls \\\n    no-hw \\\n    no-threads \\\n    no-dso && \\\n  make depend install\n\nRUN curl -f -sL https://www.aleksey.com/xmlsec/download/xmlsec1-1.2.22.tar.gz | tar -xzf - && \\\n\tcd xmlsec1-1.2.22 && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t--enable-static \\\n\t\t--disable-shared \\\n\t\t--disable-crypto-dl \\\n\t\t--disable-apps-crypto-dl \\\n\t\t--enable-static-linking \\\n\t\t--without-gnu-ld \\\n\t\t--with-default-crypto=openssl \\\n\t\t--with-openssl=/usr/local/ssl \\\n\t\t--with-libxml=/usr/local \\\n\t\t--without-nss \\\n\t\t--without-nspr \\\n\t\t--without-gcrypt \\\n\t\t--without-gnutls \\\n\t\t--without-libxslt && \\\n\tmake -C src install && \\\n\tmake -C include install && \\\n\tmake install-pkgconfigDATA\n\n\n\nENV DAPPER_SOURCE /go/src/github.com/rancher/rancher-auth-service/\nENV DAPPER_OUTPUT ./bin ./dist\nENV DAPPER_DOCKER_SOCKET true\nENV TRASH_CACHE ${DAPPER_SOURCE}/.trash-cache\nENV HOME ${DAPPER_SOURCE}\nWORKDIR ${DAPPER_SOURCE}\n\nENTRYPOINT [\"./scripts/entry\"]\nCMD [\"ci\"]\n"
}