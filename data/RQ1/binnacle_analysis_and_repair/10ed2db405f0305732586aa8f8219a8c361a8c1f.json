{
  "startTime": 1674250471268,
  "endTime": 1674250473309,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 297,
        "lineEnd": 297,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 320,
        "lineEnd": 325,
        "columnStart": 11,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 317,
        "lineEnd": 317,
        "columnStart": 11,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_VERSION=7.2.19\n\nFROM --platform=$TARGETPLATFORM php:${PHP_VERSION}-fpm-alpine as php\n\nLABEL maintainer=\"khs1994-docker/lnmp <khs1994@khs1994.com>\"\n\nENV TZ=Asia/Shanghai \\\n    APP_ENV=development\n\nENV PHP_EXTENSION \\\n      sockets \\\n      sysvmsg \\\n      sysvsem \\\n      sysvshm\n\n# ARG ALPINE_URL=dl-cdn.alpinelinux.org\n\nARG ALPINE_URL=mirrors.ustc.edu.cn\n\nRUN apk add --no-cache bash tzdata\n\nRUN sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \\\n    && for extension in $PHP_EXTENSION;do \\\n         docker-php-ext-install $extension \\\n         && docker-php-ext-enable $(echo ${extension} | cut -d '-' -f 1) || echo \"${extension} install error\" \\\n         && strip --strip-all $(php-config --extension-dir)/$(echo ${extension} | cut -d '-' -f 1).so ; \\\n       done \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=bcmath \\\n    # 替换源\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    # 安装依赖\n    && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \\\n    # 安装扩展\n    && docker-php-ext-install $EXT_NAME \\\n    # 启用扩展\n    && docker-php-ext-enable $EXT_NAME \\\n    # 删除构建工具\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=zip \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache libzip \\\n    && apk add --no-cache --virtual .build-deps libzip-dev $PHPIZE_DEPS \\\n    && docker-php-ext-configure zip \\\n                                --with-libzip \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=gd \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache libpng \\\n                          freetype \\\n                          libjpeg-turbo \\\n                          libxpm \\\n                          libwebp \\\n                          zlib \\\n    && apk add --no-cache --virtual .build-deps \\\n                                      libpng-dev \\\n                                      freetype-dev \\\n                                      libjpeg-turbo-dev \\\n                                      libxpm-dev \\\n                                      libwebp-dev \\\n                                      zlib-dev \\\n                                      $PHPIZE_DEPS \\\n    && docker-php-ext-configure gd \\\n                                    --disable-gd-jis-conv \\\n                                    --with-freetype-dir=/usr \\\n                                    --with-jpeg-dir=/usr \\\n                                    --with-png-dir=/usr \\\n                                    --with-webp-dir=/usr \\\n                                    --with-xpm-dir=/usr \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && rm -rf /usr/local/include/php/ext/$(echo ${EXT_NAME} | cut -d '-' -f 1) \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=pdo_mysql \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=mysqli \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && rm -rf /usr/local/include/php/ext/$(echo ${EXT_NAME} | cut -d '-' -f 1) \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=calendar \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=pcntl \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=pdo_pgsql \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache libpq \\\n    && apk add --no-cache --virtual .build-deps postgresql-dev $PHPIZE_DEPS \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=pgsql \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache libpq \\\n    && apk add --no-cache --virtual .build-deps postgresql-dev $PHPIZE_DEPS \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=gmp \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache gmp \\\n    && apk add --no-cache --virtual .build-deps gmp-dev $PHPIZE_DEPS \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=exif \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache libexif \\\n    && apk add --no-cache --virtual .build-deps libexif-dev $PHPIZE_DEPS \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=enchant \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache enchant \\\n    && apk add --no-cache --virtual .build-deps enchant-dev $PHPIZE_DEPS \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=xmlrpc \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache xmlrpc-c \\\n    && apk add --no-cache --virtual .build-deps xmlrpc-c-dev $PHPIZE_DEPS \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=xsl \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache libxslt \\\n    && apk add --no-cache --virtual .build-deps libxslt-dev $PHPIZE_DEPS \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=imap \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache c-client \\\n    && apk add --no-cache --virtual .build-deps imap-dev $PHPIZE_DEPS \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=bz2 \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache libbz2 \\\n    && apk add --no-cache --virtual .build-deps bzip2-dev $PHPIZE_DEPS \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=gettext \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache libbz2 \\\n    && apk add --no-cache --virtual .build-deps gettext-dev  $PHPIZE_DEPS \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=intl \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache icu-libs \\\n    && apk add --no-cache --virtual .build-deps icu-dev $PHPIZE_DEPS \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nRUN export EXT_NAME=tidy \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache tidyhtml-libs \\\n    && apk add --no-cache --virtual .build-deps tidyhtml-dev $PHPIZE_DEPS \\\n    && docker-php-ext-install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps\n\nENV PECL_EXTENSION \\\n      mongodb \\\n      igbinary \\\n      redis\n\nRUN sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \\\n    && for extension in $PECL_EXTENSION;do \\\n         pecl install $extension \\\n         && docker-php-ext-enable $(echo ${extension} | cut -d '-' -f 1) || echo \"pecl ${extension} install error\" \\\n         && rm -rf /usr/local/lib/php/doc/$(echo ${extension} | cut -d '-' -f 1) \\\n         && rm -rf /usr/local/lib/php/test/$(echo ${extension} | cut -d '-' -f 1) \\\n         && rm -rf /usr/local/include/php/ext/$(echo ${extension} | cut -d '-' -f 1) \\\n         && strip --strip-all $(php-config --extension-dir)/$(echo ${extension} | cut -d '-' -f 1).so ; \\\n      done \\\n    && apk del --no-network --no-cache .build-deps \\\n    && rm -rf /tmp/pear \\\n    && rm -rf /usr/local/lib/php/.registry/.channel.pecl.php.net/*\n\nRUN export EXT_NAME=memcached \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache libmemcached-libs \\\n    && apk add --no-cache --virtual .build-deps \\\n                                    libmemcached-dev \\\n                                    cyrus-sasl-dev \\\n                                    zlib-dev \\\n                                    $PHPIZE_DEPS \\\n    && pecl install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps \\\n    && rm -rf /tmp/pear \\\n    && rm -rf /usr/local/lib/php/doc/$EXT_NAME \\\n    && rm -rf /usr/local/lib/php/test/$EXT_NAME \\\n    && rm -rf /usr/local/include/php/ext/$EXT_NAME \\\n    && rm -rf /usr/local/lib/php/.registry/.channel.pecl.php.net/*\n\nRUN export EXT_NAME=yaml \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache yaml \\\n    && apk add --no-cache --virtual .build-deps yaml-dev $PHPIZE_DEPS \\\n    && pecl install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps \\\n    && rm -rf /tmp/pear \\\n    && rm -rf /usr/local/lib/php/doc/$EXT_NAME \\\n    && rm -rf /usr/local/lib/php/test/$EXT_NAME \\\n    && rm -rf /usr/local/include/php/ext/$EXT_NAME \\\n    && rm -rf /usr/local/lib/php/.registry/.channel.pecl.php.net/*\n\nRUN export EXT_NAME=xdebug \\\n    && sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \\\n    && pecl install $EXT_NAME \\\n    && docker-php-ext-enable $EXT_NAME \\\n    && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n    && apk del --no-network --no-cache .build-deps \\\n    && rm -rf /tmp/pear \\\n    && rm -rf /usr/local/lib/php/doc/$EXT_NAME \\\n    && rm -rf /usr/local/include/php/ext/$EXT_NAME \\\n    && rm -rf /usr/local/lib/php/.registry/.channel.pecl.php.net/* \\\n    && mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n         /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.default\n\nRUN export EXT_NAME=tideways_xhprof \\\n        && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \\\n        # https://github.com/tideways/php-xhprof-extension\n        && cd /tmp \\\n        && wget https://github.com/tideways/php-xhprof-extension/archive/master.zip \\\n        && unzip master.zip \\\n        && cd php-xhprof-extension-master \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        && make \\\n        && make install \\\n        && docker-php-ext-enable ${EXT_NAME} \\\n        && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n        && apk del --no-network --no-cache .build-deps \\\n        && mv /usr/local/etc/php/conf.d/docker-php-ext-tideways_xhprof.ini \\\n          /usr/local/etc/php/conf.d/docker-php-ext-tideways_xhprof.ini.default \\\n        && rm -rf /tmp/*\n\nRUN export EXT_NAME=swoole \\\n        && export EXT_VERSION=4.2.12 \\\n        && apk add --no-cache nghttp2-libs \\\n        && apk add --no-cache --virtual .build-deps \\\n                                          openssl-dev \\\n                                          nghttp2-dev \\\n                                          $PHPIZE_DEPS \\\n        # https://github.com/swoole/swoole-src\n        && cd /tmp \\\n        && wget https://pecl.php.net/get/${EXT_NAME}-${EXT_VERSION}.tgz \\\n        && tar -zxvf ${EXT_NAME}-${EXT_VERSION}.tgz \\\n        && cd ${EXT_NAME}-${EXT_VERSION} \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n             --with-php-config=php-config \\\n             --enable-openssl \\\n             --enable-sockets \\\n             --enable-http2 \\\n             --enable-mysqlnd \\\n             # --enable-async-redis \\\n        && make \\\n        && make install \\\n        && docker-php-ext-enable ${EXT_NAME} \\\n        && strip --strip-all $(php-config --extension-dir)/$(echo ${EXT_NAME} | cut -d '-' -f 1).so \\\n        && apk del --no-network --no-cache .build-deps \\\n        && rm -rf /usr/local/lib/php/doc/$EXT_NAME \\\n        && rm -rf /usr/local/include/php/ext/$EXT_NAME \\\n        && rm -rf /tmp/* && rm ${EXT_NAME}-${EXT_VERSION}.tgz\n\n# 创建日志文件夹\nRUN mkdir -p /var/log/php-fpm \\\n      && ln -sf /dev/stdout /var/log/php-fpm/access.log \\\n      && ln -sf /dev/stderr /var/log/php-fpm/error.log \\\n      && ln -sf /dev/stderr /var/log/php-fpm/xdebug-remote.log \\\n      && chmod -R 777 /var/log/php-fpm\n\nWORKDIR /app\n"
}