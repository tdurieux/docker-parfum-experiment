{
  "startTime": 1674251916600,
  "endTime": 1674251917070,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\nRUN echo 'deb http://us.archive.ubuntu.com/ubuntu/ trusty universe' >> /etc/apt/sources.list\nRUN echo\nRUN apt-get -y update\nRUN apt-get -y upgrade\n\n\n# Install all prerequisites\nRUN apt-get -y --no-install-recommends install software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository -y ppa:chris-lea/node.js\nRUN apt-get -y update\nRUN apt-get -y --no-install-recommends install python-django-tagging python-simplejson python-memcache python-ldap python-cairo \\\n                       python-psycopg2 python-support python-pip gunicorn supervisor nginx-light nodejs \\\n                       git wget curl openjdk-7-jre build-essential python-dev && rm -rf /var/lib/apt/lists/*;\n\n\n# Install PostgreSQL for Graphite\nRUN locale-gen en_US.UTF-8\nRUN update-locale LANG=en_US.UTF-8\n\nRUN apt-get -qq update && DEBIAN_FRONTEND=noninteractive\nRUN apt-get install --no-install-recommends -y -q postgresql-9.3 && rm -rf /var/lib/apt/lists/*;\n\n# /etc/ssl/private can't be accessed from within container for some reason\n# (@andrewgodwin says it's something AUFS related)\nRUN mkdir /etc/ssl/private-copy; mv /etc/ssl/private/* /etc/ssl/private-copy/; rm -r /etc/ssl/private; mv /etc/ssl/private-copy /etc/ssl/private; chmod -R 0700 /etc/ssl/private; chown -R postgres /etc/ssl/private\n\nADD ./postgres/postgresql.conf /etc/postgresql/9.3/main/postgresql.conf\nADD ./postgres/pg_hba.conf /etc/postgresql/9.3/main/pg_hba.conf\nRUN chown postgres:postgres /etc/postgresql/9.3/main/*.conf\nADD ./postgres/run /usr/local/bin/run\nRUN chmod +x /usr/local/bin/run\n\nVOLUME [\"/var/lib/postgresql\"]\n\n# Install Elasticsearch\nRUN cd ~ && wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.3.2.deb\nRUN cd ~ && dpkg -i elasticsearch-1.3.2.deb && rm elasticsearch-1.3.2.deb\n\n# Install StatsD\nRUN mkdir /src && git clone https://github.com/etsy/statsd.git /src/statsd && cd /src/statsd && git checkout v0.7.1\n\n# Install Whisper, Carbon and Graphite-Web\nRUN pip install --no-cache-dir Twisted==11.1.0\nRUN pip install --no-cache-dir Django==1.5\nRUN pip install --no-cache-dir whisper\nRUN pip install --no-cache-dir --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/lib\" carbon --install-option=\"--install-lib=/var/lib/graphite/lib\" carbon\nRUN pip install --no-cache-dir --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/webapp\" graphite-web --install-option=\"--install-lib=/var/lib/graphite/webapp\" graphite-web\n\n# Install Grafana\nRUN mkdir /src/grafana && cd /src/grafana && \\\n    wget https://grafanarel.s3.amazonaws.com/grafana-1.7.0.tar.gz && \\\n    tar xzvf grafana-1.7.0.tar.gz --strip-components=1 && rm grafana-1.7.0.tar.gz\n\n# Configure Elasticsearch\nADD ./elasticsearch/run /usr/local/bin/run_elasticsearch\nADD ./elasticsearch/elasticsearch.yml /etc/elasticsearch/elasticsearch.yml\nVOLUME [\"/data\"]\n\n# Confiure StatsD\nADD ./statsd/config.js /src/statsd/config.js\n\n# Configure Whisper, Carbon and Graphite-Web\nADD ./graphite/initial_data.json /var/lib/graphite/webapp/graphite/initial_data.json\nADD ./graphite/local_settings.py /var/lib/graphite/webapp/graphite/local_settings.py\nADD ./graphite/carbon.conf /var/lib/graphite/conf/carbon.conf\nADD ./graphite/storage-schemas.conf /var/lib/graphite/conf/storage-schemas.conf\nADD ./graphite/storage-aggregation.conf /var/lib/graphite/conf/storage-aggregation.conf\nRUN mkdir -p /var/lib/graphite/storage/whisper\nRUN touch /var/lib/graphite/storage/graphite.db /var/lib/graphite/storage/index\nRUN chown -R www-data /var/lib/graphite/storage\nRUN chmod 0775 /var/lib/graphite/storage /var/lib/graphite/storage/whisper\nRUN chmod 0664 /var/lib/graphite/storage/graphite.db\n\n# Configure Grafana\nADD ./grafana/config.js /src/grafana/config.js\nADD ./grafana/dashboard.json /src/grafana/app/dashboards/default.json\nADD ./nginx/nginx.conf /etc/nginx/nginx.conf\nADD ./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nADD crontab /crontab\n\n\n# Grafana\nEXPOSE  80\n\n# StatsD UDP port\nEXPOSE  8125/udp\n\n# StatsD Management port\nEXPOSE  8126\n\n# Carbon listen port\nEXPOSE 2003\n\nCMD /etc/init.d/postgresql start && sudo -u postgres createuser -E -w graphite && \\\n  echo \"ALTER USER graphite WITH PASSWORD 'graphite';\" | psql -U postgres && \\\n  echo \"CREATE DATABASE graphite OWNER graphite;\" | psql -U postgres && \\\n  cd /var/lib/graphite/webapp/graphite && python manage.py syncdb --noinput && \\\n  /etc/init.d/postgresql stop && \\\n  cat /crontab | crontab - && \\\n  chown -R elasticsearch:elasticsearch /data && \\\n  /etc/init.d/supervisor start\n"
}