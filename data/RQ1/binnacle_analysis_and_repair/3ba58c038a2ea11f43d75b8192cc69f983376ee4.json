{
  "startTime": 1674250020915,
  "endTime": 1674250021132,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 20,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl \\\n    git \\\n    libmysqlclient-dev \\\n    liblzo2-dev \\\n    pkg-config \\\n    python-pip \\\n    python-gdbm \\\n    python-lzo \\\n    vim \\\n    wget \\\n    zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# Get the Docker binary\nRUN curl -fsSL get.docker.com -o get-docker.sh \\\n    && sh get-docker.sh\n\nWORKDIR /opt\n\nCOPY pipeline/requirements.txt .\nCOPY test-requirements.txt .\n\n# install numpy first to avoid issues with bio python and bx-python (see also https://github.com/LUMC/vep2lovd/issues/1)\nRUN pip install --no-cache-dir $(grep numpy requirements.txt)\n\nRUN pip install --no-cache-dir -r requirements.txt -r\n\n\n# install vcf tools\nRUN wget https://github.com/vcftools/vcftools/releases/download/v0.1.15/vcftools-0.1.15.tar.gz\nRUN tar zxf vcftools*.tar.gz && rm vcftools*.tar.gz\nRUN cd vcftools* && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && cd .. && rm -r vcftools*\n\n# install tabix\nRUN wget https://downloads.sourceforge.net/project/samtools/tabix/tabix-0.2.6.tar.bz2\nRUN tar jxf tabix*.tar.bz2 && rm tabix*.tar.bz2\nRUN cd tabix* && make && cp tabix /usr/local/bin && cd .. && rm -r tabix*\n\nARG res=/files/resources\n\nENV BRCA_RESOURCES=$res\n\nRUN mkdir -p $res /files/data && chmod -R o+rwx /files\n\nRUN git clone https://github.com/counsyl/hgvs.git\n# taking pyhgvs 0.9.4\nRUN cd hgvs && git checkout aebe5bd9683f4b5937fd653ce4b13fcd4f3ebb10 && python setup.py install\n\n#leiden brca\nRUN git clone https://github.com/BRCAChallenge/leiden.git && cd leiden && git checkout d5352801da0858840d87280f36dbce14159a6dd4 && python setup.py install\n\nRUN rm -r /opt/leiden /opt/hgvs /root/.cache\n\nARG FORCE_REBUILD=0\nCOPY . /opt/brca-exchange\n\nENV LUIGI_CONFIG_PATH=\"/opt/luigi_pipeline_credentials.cfg\"\n\nARG IS_GIT_DIRTY=\"False\"\nARG GIT_COMMIT=\"\"\nLABEL GitCommit=$GIT_COMMIT IsGitDirty=$IS_GIT_DIRTY\n\nCMD [\"/opt/brca-exchange/pipeline/docker/run_luigi.sh\"]\n"
}