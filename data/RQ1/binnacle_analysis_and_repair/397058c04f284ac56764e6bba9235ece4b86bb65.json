{
  "startTime": 1674250944070,
  "endTime": 1674250944569,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 5,
        "columnEnd": 154
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 5,
        "columnEnd": 118
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 5,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 613
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 613
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#asterisk docker file for unraid 6\nFROM phusion/baseimage:0.9.17\nMAINTAINER marc brown <marc@22walker.co.uk> v0.4\n\n# Set correct environment variables.\nENV HOME /root\nENV DEBIAN_FRONTEND noninteractive\nENV ASTERISKUSER asterisk\nENV ASTERISKVER 13.1\nENV FREEPBXVER 12.0.21\nENV ASTERISK_DB_PW pass123\nENV AUTOBUILD_UNIXTIME 1418234402\n# Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n\n# Add VOLUME to allow backup of FREEPBX\nVOLUME [\"/etc/freepbxbackup\"]\n\n# open up ports needed by freepbx and asterisk 5060 tcp sip reg 80 tcp web port 10000-20000 udp rtp stream \n# EXPOSE 5060\n# EXPOSE 80\n# EXPOSE 8009\n# EXPOSE 10000-20000/udp\n\n# Add start.sh\nADD start.sh /root/\n\n#Install packets that are needed\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential curl libgtk2.0-dev linux-headers-`uname -r` openssh-server apache2 mysql-server mysql-client bison flex php5 php5-curl php5-cli php5-mysql php-pear php-db php5-gd curl sox libncurses5-dev libssl-dev libmysqlclient-dev mpg123 libxml2-dev libnewt-dev sqlite3 libsqlite3-dev pkg-config automake libtool autoconf git subversion unixodbc-dev uuid uuid-dev libasound2-dev libogg-dev libvorbis-dev libcurl4-openssl-dev libical-dev libneon27-dev libsrtp0-dev libspandsp-dev wget sox mpg123 libwww-perl php5 php5-json libiksemel-dev openssl lamp-server^ 1>/dev/null && rm -rf /var/lib/apt/lists/*;\n\n# add asterisk user\nRUN groupadd -r $ASTERISKUSER \\\n  && useradd -r -g $ASTERISKUSER $ASTERISKUSER \\\n  && mkdir /var/lib/asterisk \\\n  && chown $ASTERISKUSER:$ASTERISKUSER /var/lib/asterisk \\\n  && usermod --home /var/lib/asterisk $ASTERISKUSER \\\n  && rm -rf /var/lib/apt/lists/* \\\n#  && curl -o /usr/local/bin/gosu -SL 'https://github.com/tianon/gosu/releases/download/1.1/gosu' \\\n#  && chmod +x /usr/local/bin/gosu \\\n  && apt-get purge -y \\\n\n#Install Pear DB\n  && pear uninstall db 1>/dev/null \\\n  && pear install db-1.7.14 1>/dev/null\n\n#build pj project\n#build jansson\nWORKDIR /temp/src/\nRUN git clone https://github.com/asterisk/pjproject.git 1>/dev/null \\\n  && git clone https://github.com/akheron/jansson.git 1>/dev/null \\\n  && cd /temp/src/pjproject \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared --disable-sound --disable-resample --disable-video --disable-opencore-amr 1>/dev/null \\\n  && make dep 1>/dev/null \\\n  && make 1>/dev/null \\\n  && make install 1>/dev/null \\\n  && cd /temp/src/jansson \\\n  && autoreconf -i 1>/dev/null \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" 1>/dev/null \\\n  && make 1>/dev/null \\\n  && make install 1>/dev/null \\\n\n# Download asterisk.\n# Currently Certified Asterisk 13.1.\n  && curl -sf -o /tmp/asterisk.tar.gz -L https://downloads.asterisk.org/pub/telephony/certified-asterisk/certified-asterisk-13.1-current.tar.gz 1>/dev/null \\\n\n# gunzip asterisk\n  && mkdir /tmp/asterisk \\\n  && tar -xzf /tmp/asterisk.tar.gz -C /tmp/asterisk --strip-components=1 1>/dev/null && rm /tmp/asterisk.tar.gz\nWORKDIR /tmp/asterisk\n\n# make asterisk.\n# ENV rebuild_date 2015-01-29\nRUN mkdir /etc/asterisk \\\n# Configure\n  && ./configure --with-ssl=/opt/local --with-crypto=/opt/local 1> /dev/null \\\n# Remove the native build option\n  && make menuselect.makeopts 1>/dev/null \\\n#  && sed -i \"s/BUILD_NATIVE//\" menuselect.makeopts 1>/dev/null \\\n  && menuselect/menuselect --enable chan_sip.so --disable BUILD_NATIVE  --enable CORE-SOUNDS-EN-WAV --enable CORE-SOUNDS-EN-SLN16 --enable MOH-OPSOUND-WAV --enable MOH-OPSOUND-SLN16 menuselect.makeopts 1>/dev/null \\\n# Continue with a standard make.\n  && make 1> /dev/null \\\n  && make install 1> /dev/null \\\n  && make config 1>/dev/null \\\n  && ldconfig \\\n\n  && cd /var/lib/asterisk/sounds \\\n  && wget http://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-wav-current.tar.gz 1>/dev/null \\\n  && tar xfz asterisk-extra-sounds-en-wav-current.tar.gz 1>/dev/null \\\n  && rm -f asterisk-extra-sounds-en-wav-current.tar.gz 1>/dev/null \\\n  && wget http://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-g722-current.tar.gz 1>/dev/null \\\n  && tar xfz asterisk-extra-sounds-en-g722-current.tar.gz 1>/dev/null \\\n  && rm -f asterisk-extra-sounds-en-g722-current.tar.gz \\\n  && chown $ASRERISKUSER. /var/run/asterisk \\\n  && chown -R $ASTERISKUSER. /etc/asterisk \\\n  && chown -R $ASTERISKUSER. /var/lib/asterisk \\\n  && chown -R $ASTERISKUSER. /var/www/ \\\n  && chown -R $ASTERISKUSER. /var/www/* \\\n  && chown -R $ASTERISKUSER. /var/log/asterisk \\\n  && chown -R $ASTERISKUSER. /var/spool/asterisk \\\n  && chown -R $ASTERISKUSER. /var/run/asterisk \\\n  && chown -R $ASTERISKUSER. /var/lib/asterisk \\\n  && chown $ASTERISKUSER:$ASTERISKUSER /etc/freepbxbackup \\\n  && rm -rf /var/www/html \\\n\n#mod to apache\n#Setup mysql\n  && sed -i 's/\\(^upload_max_filesize = \\).*/\\120M/' /etc/php5/apache2/php.ini \\\n  && cp /etc/apache2/apache2.conf /etc/apache2/apache2.conf_orig \\\n  && sed -i 's/^\\(User\\|Group\\).*/\\1 asterisk/' /etc/apache2/apache2.conf \\\n  && ed -s /etc/apache2/apache2.conf  <<< $'/Options Indexes FollowSymLinks/+1s/AllowOverride None/AllowOverride ALL/g\\nw' \\\n  && service apache2 restart 1>/dev/null \\\n  && /etc/init.d/mysql start 1>/dev/null \\\n  && mysqladmin -u root create asterisk \\\n  && mysqladmin -u root create asteriskcdrdb \\\n  && mysql -u root -e \"GRANT ALL PRIVILEGES ON asterisk.* TO $ASTERISKUSER@localhost IDENTIFIED BY '$ASTERISK_DB_PW';\" \\\n  && mysql -u root -e \"GRANT ALL PRIVILEGES ON asteriskcdrdb.* TO $ASTERISKUSER@localhost IDENTIFIED BY '$ASTERISK_DB_PW';\" \\\n  && mysql -u root -e \"flush privileges;\"\n\nWORKDIR /tmp\nRUN wget http://mirror.freepbx.org/freepbx-$FREEPBXVER.tgz 1>/dev/null 2>/dev/null \\\n  && ln -s /var/lib/asterisk/moh /var/lib/asterisk/mohmp3 \\\n  && tar vxfz freepbx-$FREEPBXVER.tgz 1>/dev/null \\\n  && cd /tmp/freepbx \\\n  && /etc/init.d/mysql start 1>/dev/null \\\n  && /usr/sbin/asterisk 1>/dev/null \\\n  && ./install_amp --installdb --username=$ASTERISKUSER --password=$ASTERISK_DB_PW 1>/dev/null \\\n  && amportal chown \\\n  && amportal reload \\\n  && asterisk -rx \"core restart now\" \\\n  && amportal chown \\\n  && amportal reload 1>/dev/null \\\n  && asterisk -rx \"core restart now\" \\\n  && amportal a ma refreshsignatures 1>/dev/null \\\n  && amportal chown \\\n  && amportal reload \\\n  && asterisk -rx \"core restart now\" \\\n  && chown -R $ASTERISKUSER. /var/lib/asterisk/bin/retrieve_conf \\\n\n#clean up\n  && find /temp -mindepth 1 -delete \\\n  && apt-get purge -y \\\n  && apt-get --yes autoremove \\\n  && apt-get clean all \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n   \nCMD bash -C '/root/start.sh';'bash'\n"
}