{
  "startTime": 1674248411414,
  "endTime": 1674248411984,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 11,
        "lineEnd": 35,
        "columnStart": 46,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 52,
        "columnEnd": 148
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 190
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 190
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 22,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM counterparty/base\n\nMAINTAINER Counterparty Developers <dev@counterparty.io>\n\n# install additional deps\nRUN apt-get update && apt-get -y --no-install-recommends install ssl-cert make libpcre3-dev libxslt1-dev libgd2-xpm-dev libgeoip-dev unzip zip build-essential libssl-dev libxslt1.1 libgeoip1 geoip-database libpcre3 && rm -rf /var/lib/apt/lists/*;\n\n# install nginx\nENV OPENRESTY_VER=\"1.9.7.4\"\nRUN wget -O /tmp/nginx-openresty.tar.gz https://openresty.org/download/openresty-${OPENRESTY_VER}.tar.gz\nRUN mkdir -p /tmp/ngx_openresty-${OPENRESTY_VER} && tar xfzv /tmp/nginx-openresty.tar.gz -C /tmp/ngx_openresty-${OPENRESTY_VER} --strip-components 1 && rm /tmp/nginx-openresty.tar.gz\nRUN cd /tmp/ngx_openresty-${OPENRESTY_VER} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --with-luajit \\\n    --sbin-path=/usr/sbin/nginx \\\n    --conf-path=/etc/nginx/nginx.conf \\\n    --error-log-path=/var/log/nginx/error.log \\\n    --http-client-body-temp-path=/var/lib/nginx/body \\\n    --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \\\n    --http-log-path=/var/log/nginx/access.log \\\n    --http-proxy-temp-path=/var/lib/nginx/proxy \\\n    --http-scgi-temp-path=/var/lib/nginx/scgi \\\n    --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \\\n    --lock-path=/var/lock/nginx.lock \\\n    --pid-path=/var/run/nginx.pid \\\n    --with-http_geoip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_realip_module \\\n    --with-http_ssl_module \\\n    --with-http_sub_module \\\n    --with-http_xslt_module \\\n    --with-ipv6 \\\n    --with-sha1=/usr/include/openssl \\\n    --with-md5=/usr/include/openssl \\\n    --with-http_stub_status_module \\\n    --with-http_secure_link_module \\\n    --with-http_sub_module && make -j2\nRUN cd /tmp/ngx_openresty-${OPENRESTY_VER} && make install\nRUN mkdir -p /var/lib/nginx/{body,fastcgi,proxy,scgi,uwsgi}\n\n# copy over nginx config\nRUN mkdir -p /etc/nginx/sites-enabled\nCOPY docker/nginx/nginx.conf /etc/nginx/nginx.conf\n# dont copy over docker/nginx/counterwallet.conf.template -- that is moved over at runtime in docker/start.sh\nCOPY docker/nginx/counterblock_api.inc /etc/nginx/sites-enabled/counterblock_api.inc\nCOPY docker/nginx/counterblock_api_cache.inc /etc/nginx/sites-enabled/counterblock_api_cache.inc\nCOPY docker/nginx/counterblock_socketio.inc /etc/nginx/sites-enabled/counterblock_socketio.inc\nCOPY docker/nginx/upgrade_root /var/www_upgrade_root\nRUN chmod -R 0755 /etc/nginx/nginx.conf /etc/nginx/sites-enabled /var/www_upgrade_root\n\nCOPY docker/start.sh /usr/local/bin/start.sh\nRUN chmod a+x /usr/local/bin/start.sh\n\n# set up default SSL certs to be self-signed (can be replaced later)\nRUN apt-get update && apt-get -y --no-install-recommends install ssl-cert && rm -rf /var/lib/apt/lists/*;\nRUN mkdir /ssl_config\nRUN cp -a /etc/ssl/certs/ssl-cert-snakeoil.pem /ssl_config/counterwallet.pem\nRUN cp -a /etc/ssl/private/ssl-cert-snakeoil.key /ssl_config/counterwallet.key\n\n# add bare counterblock share dir (which should be mounted over)\nRUN mkdir -p /counterblock_data/asset_img /counterblock_data/asset_img.testnet\n\n# Install newest stable nodejs\n# (the `nodejs` package includes `npm`)\nRUN apt-get update && apt-get -y remove nodejs npm gyp\nRUN curl -f -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -\nRUN apt-get update && apt-get -y --no-install-recommends install nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Add transifex auth data if available\nARG TRANSIFEX_USER=\"\"\nENV TRANSIFEX_USER ${TRANSIFEX_USER}\nARG TRANSIFEX_PASSWORD=\"\"\nENV TRANSIFEX_PASSWORD ${TRANSIFEX_PASSWORD}\nRUN if [ -n \"$TRANSIFEX_USER\" ] && [ -n \"$TRANSIFEX_PASSWORD\" ]; then echo \"$TRANSIFEX_USER:$TRANSIFEX_PASSWORD\" > /root/.transifex; fi\n\n# Install project\nCOPY . /counterwallet\nRUN rm -rf /counterwallet/build\nWORKDIR /counterwallet\nRUN git rev-parse HEAD\nRUN npm -g install npm@4.6.1 && npm cache clean --force;\nRUN npm config set strict-ssl false\nENV PHANTOMJS_CDNURL=\"http://cnpmjs.org/downloads\"\nRUN npm run bower -- --allow-root --config.interactive=false update\nRUN npm install && npm cache clean --force;\nRUN npm run prepublish\nRUN cp -a /counterwallet/counterwallet.conf.json.example /counterwallet/counterwallet.conf.json\nRUN rm -f /root/.transifex\n\nEXPOSE 80 443\n\n# forward nginx request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n\t&& ln -sf /dev/stderr /var/log/nginx/error.log\n\n# REMOVE THIS LINE LATER\nRUN apt-get update && apt-get -y --no-install-recommends install gettext-base && rm -rf /var/lib/apt/lists/*;\n\nCMD [\"start.sh\"]\n"
}