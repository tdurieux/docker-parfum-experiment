{
  "startTime": 1674244001508,
  "endTime": 1674244001740,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedDockerfile": "ARG BASE_IMAGE\nARG METRICS_IMAGE\nFROM ${METRICS_IMAGE} as metrics\nFROM ${BASE_IMAGE}\n\nENV TENSORFLOW_VERSION=1.12.0\nENV HOROVOD_VERSION=0.16.2\n\nRUN wget https://storage.googleapis.com/intel-optimized-tensorflow/tensorflow-${TENSORFLOW_VERSION}-cp27-cp27mu-linux_x86_64.whl -O /tensorflow-${TENSORFLOW_VERSION}-cp27-cp27mu-linux_x86_64.whl\n\nCOPY --from=metrics /build-output/experiment_metrics-*.tar.gz /\n\nRUN wget https://github.com/Yelp/dumb-init/releases/download/v1.2.2/dumb-init_1.2.2_amd64.deb\nRUN dpkg -i dumb-init_*.deb\n\nRUN pip install --no-cache-dir --force-reinstall /tensorflow-${TENSORFLOW_VERSION}-*.whl && \\\n    pip install --no-cache-dir --ignore-installed /experiment_metrics-*.tar.gz\n\nRUN apt-get update && apt-get install --no-install-recommends -y libopenmpi-dev openmpi-bin libhdf5-openmpi-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir horovod==${HOROVOD_VERSION}\n\nENV MPIRUN_BIN /usr/bin/mpirun\nRUN mv ${MPIRUN_BIN} ${MPIRUN_BIN}.real && \\\n    echo '#!/bin/bash' > ${MPIRUN_BIN} && \\\n    echo '${MPIRUN_BIN}.real --allow-run-as-root \"$@\"' >> ${MPIRUN_BIN} && \\\n    chmod a+x ${MPIRUN_BIN}\n\nRUN echo \"hwloc_base_binding_policy = none\" >> /etc/openmpi/openmpi-mca-params.conf && \\\n    echo \"rmaps_base_mapping_policy = slot\" >> /etc/openmpi/openmpi-mca-params.conf\n\nRUN apt-get install --no-install-recommends -y openssh-client openssh-server && \\\n    mkdir -p /var/run/sshd /app /root/.ssh && rm -rf /var/lib/apt/lists/*;\n\n # Allow OpenSSH to talk to containers without asking for confirmation\nRUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new && \\\n    echo \"    StrictHostKeyChecking no\" >> /etc/ssh/ssh_config.new && \\\n    echo \"    SendEnv LD_LIBRARY_PATH MPIRUN_BIN\" >> /etc/ssh/ssh_config.new && \\\n    mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config\n\nRUN echo \"AcceptEnv LD_LIBRARY_PATH MPIRUN_BIN\" >> /etc/ssh/sshd_config\n\nRUN echo \"y\" | ssh-keygen -N \"\" -f /root/.ssh/id_rsa && \\\n    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && chmod og-rwx /root/.ssh/ -R\n\n# Install kubectl\nRUN apt-get install --no-install-recommends -y apt-transport-https && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\nRUN echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | tee -a /etc/apt/sources.list.d/kubernetes.list\nRUN apt-get update && apt-get install --no-install-recommends -y kubectl && rm -rf /var/lib/apt/lists/*;\n\n"
}