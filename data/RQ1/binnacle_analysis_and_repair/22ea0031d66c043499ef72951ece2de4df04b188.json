{
  "startTime": 1674251507655,
  "endTime": 1674251507889,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 1,
        "columnEnd": 69
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 1,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.3-fpm-alpine\n\nLABEL maintainer=\"pierre@piwik.org\"\n\nRUN set -ex; \\\n\n\tapk add --no-cache --virtual .build-deps \\\n\t\t$PHPIZE_DEPS \\\n\t\tautoconf \\\n\t\tfreetype-dev \\\n\t\ticu-dev \\\n\t\tlibjpeg-turbo-dev \\\n\t\tlibpng-dev \\\n\t\tlibzip-dev \\\n\t\topenldap-dev \\\n\t\tpcre-dev \\\n\t; \\\n\n\tdocker-php-ext-configure gd --with-freetype-dir=/usr --with-png-dir=/usr --with-jpeg-dir=/usr; \\\n\tdocker-php-ext-configure ldap; \\\n\tdocker-php-ext-install \\\n\t\tgd \\\n\t\tldap \\\n\t\tmysqli \\\n\t\topcache \\\n\t\tpdo_mysql \\\n\t\tzip \\\n\t; \\\n\n# pecl will claim success even if one install fails, so we need to perform each install separately\n\tpecl install APCu-5.1.17; \\\n\tpecl install redis-4.3.0; \\\n\n\tdocker-php-ext-enable \\\n\t\tapcu \\\n\t\tredis \\\n\t; \\\n\n\trunDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \\\n\t\t| tr ',' '\\n' \\\n\t\t| sort -u \\\n\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\"; \\\n\tapk add --no-cache --virtual .matomo-phpext-rundeps $runDeps; \\\n\tapk del .build-deps\n\nENV MATOMO_VERSION 3.9.1\n\nRUN set -ex; \\\n\tapk add --no-cache --virtual .fetch-deps \\\n\t\tgnupg \\\n\t; \\\n\t\\\n\tcurl -fsSL -o matomo.tar.gz \\\n\t\t\"https://builds.matomo.org/matomo-${MATOMO_VERSION}.tar.gz\"; \\\n\tcurl -fsSL -o matomo.tar.gz.asc \\\n\t\t\"https://builds.matomo.org/matomo-${MATOMO_VERSION}.tar.gz.asc\"; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 814E346FA01A20DBB04B6807B5DBD5925590A237; \\\n\tgpg --batch --verify matomo.tar.gz.asc matomo.tar.gz; \\\n\tgpgconf --kill all; \\\n\trm -rf \"$GNUPGHOME\" matomo.tar.gz.asc; \\\n\ttar -xzf matomo.tar.gz -C /usr/src/; \\\n\trm matomo.tar.gz; \\\n\tapk del .fetch-deps\n\nCOPY php.ini /usr/local/etc/php/conf.d/php-matomo.ini\n\nRUN set -ex; \\\n\tcurl -fsSL -o GeoIPCity.tar.gz \\\n\t\t\"https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz\"; \\\n\tcurl -fsSL -o GeoIPCity.tar.gz.md5 \\\n\t\t\"https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz.md5\"; \\\n\techo \"$(cat GeoIPCity.tar.gz.md5)  GeoIPCity.tar.gz\" | md5sum -c -; \\\n\tmkdir /usr/src/GeoIPCity; rm -rf /usr/src/GeoIPCity \\\n\ttar -xf GeoIPCity.tar.gz -C /usr/src/GeoIPCity --strip-components=1; rm GeoIPCity.tar.gz \\\n\tmv /usr/src/GeoIPCity/GeoLite2-City.mmdb /usr/src/matomo/misc/GeoLite2-City.mmdb; \\\n\trm -rf GeoIPCity*\n\nCOPY docker-entrypoint.sh /entrypoint.sh\n\n# WORKDIR is /var/www/html (inherited via \"FROM php\")\n# \"/entrypoint.sh\" will populate it at container startup from /usr/src/matomo\nVOLUME /var/www/html\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"php-fpm\"]\n"
}