{
  "startTime": 1674241240533,
  "endTime": 1674241240814,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Copyright 2019, Intel Corporation\n#\n# 'recipe' for Docker to build an image of Leap-based\n# environment for building the DAOS project.\n#\n\n# Pull base image\nFROM opensuse/leap:15.0\nMAINTAINER Johann Lombardi <johann.lombardi@intel.com>\n\n# Build arguments can be set via -build-arg\n# use same UID as host and default value of 1000 if not specified\nARG UID=1000\n\n# Update distribution\n# It's better to put the zypper update in the same \"cache layer\" as the\n# zypper install command so that the database is updated if/when the\n# installed packages list below is updated\nRUN zypper --non-interactive update; \\\n    zypper --non-interactive install                                  \\\n           boost-devel clang cmake cunit-devel curl doxygen flex      \\\n           gcc gcc-c++ git go graphviz gzip                           \\\n           libaio-devel libcmocka-devel libevent-devel libiscsi-devel \\\n           libltdl7 libnuma-devel libopenssl-devel libtool            \\\n           libuuid-devel libyaml-devel                                \\\n           make man meson nasm ninja pandoc patch python2-pip         \\\n           readline-devel sg3_utils which yasm\n\nRUN pip install --no-cache-dir --upgrade pip; \\\n    pip install --no-cache-dir -U setuptools; \\\n    pip install --no-cache-dir -U wheel; \\\n    pip install --no-cache-dir scons==3.0.1\n\nRUN curl -fsSL -o /tmp/jhli.key https://download.opensuse.org/repositories/home:/jhli/SLE_15/repodata/repomd.xml.key\nRUN rpm --import /tmp/jhli.key; \\\n    zypper --non-interactive addrepo \\\n https://download.opensuse.org/repositories/home:/jhli/SLE_15/home:jhli.repo; \\\n    zypper --non-interactive refresh; \\\n    zypper --non-interactive install -y ipmctl-devel\n\n# Add DAOS user\nENV USER daos\nENV PASSWD daos\nRUN useradd -u $UID -ms /bin/bash $USER\nRUN echo \"$USER:$PASSWD\" | chpasswd\n\n# Create directory for DAOS backend storage\nRUN mkdir /mnt/daos\nRUN chown daos.daos /mnt/daos || { cat /etc/passwd; cat /etc/group; cat /etc/shadow; chown daos /mnt/daos; chgrp daos /mnt/daos; ls -ld /mnt/daos; }\n\n# Switch to new user\nUSER $USER\nWORKDIR /home/$USER\n\n# set NOBUILD to disable git clone & build\nARG NOBUILD\n# Fetch DAOS code\nRUN if [ \"x$NOBUILD\" = \"x\" ] ; then git clone https://github.com/daos-stack/daos.git; fi\nWORKDIR /home/$USER/daos\n\n# Build DAOS & dependencies\nRUN if [ \"x$NOBUILD\" = \"x\" ] ; then git submodule init && git submodule update; fi\nRUN if [ \"x$NOBUILD\" = \"x\" ] ; then scons --build-deps=yes USE_INSTALLED=all install; fi\n\n# Set environment variables\nENV PATH=/home/daos/daos/install/bin:$PATH\nENV LD_LIBRARY_PATH=/home/daos/daos/install/lib:/home/daos/daos/install/lib/daos_srv:$LD_LIBRARY_PATH\nENV CPATH=/home/daos/daos/install/include:$CPATH\nENV CRT_PHY_ADDR_STR=\"ofi+sockets\"\nENV OFI_INTERFACE=eth0\n"
}