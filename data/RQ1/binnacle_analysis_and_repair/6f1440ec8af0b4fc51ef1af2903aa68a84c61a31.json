{
  "startTime": 1674249094072,
  "endTime": 1674249094911,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 241,
        "lineEnd": 241,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 77,
        "columnStart": 5,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 81,
        "lineEnd": 108,
        "columnStart": 3,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 5,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 240,
        "lineEnd": 240,
        "columnStart": 5,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 244,
        "lineEnd": 244,
        "columnStart": 5,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 250,
        "lineEnd": 251,
        "columnStart": 5,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 77,
        "columnStart": 5,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 81,
        "lineEnd": 108,
        "columnStart": 3,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 5,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 240,
        "lineEnd": 240,
        "columnStart": 5,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 244,
        "lineEnd": 244,
        "columnStart": 5,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 250,
        "lineEnd": 251,
        "columnStart": 5,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 5,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# This buids cocalc-docker, but with no external AGPL software (like RStudio) installed.\n# It does include **cocalc itself** which is AGPL licensed.  However, one may purchase\n# an MIT-style license for cocalc if you want from SageMath, Inc.\n\nMAINTAINER William Stein <wstein@sagemath.com>\n\nUSER root\n\n# See https://github.com/sagemathinc/cocalc/issues/921\nENV LC_ALL C.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV TERM screen\n\n\n# So we can source (see http://goo.gl/oBPi5G)\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n# Ubuntu software that are used by CoCalc (latex, pandoc, sage, jupyter)\nRUN \\\n     apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n       software-properties-common \\\n       texlive \\\n       texlive-latex-extra \\\n       texlive-extra-utils \\\n       texlive-xetex \\\n       texlive-luatex \\\n       texlive-bibtex-extra \\\n       liblog-log4perl-perl && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n    apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n       tmux \\\n       flex \\\n       bison \\\n       libreadline-dev \\\n       htop \\\n       screen \\\n       pandoc \\\n       aspell \\\n       poppler-utils \\\n       net-tools \\\n       wget \\\n       git \\\n       python \\\n       python-pip \\\n       make \\\n       g++ \\\n       sudo \\\n       psmisc \\\n       haproxy \\\n       nginx \\\n       yapf \\\n       rsync \\\n       tidy && rm -rf /var/lib/apt/lists/*;\n\n RUN \\\n     apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n       vim \\\n       bup \\\n       inetutils-ping \\\n       lynx \\\n       telnet \\\n       git \\\n       emacs \\\n       subversion \\\n       ssh \\\n       m4 \\\n       latexmk \\\n       libpq5 \\\n       libpq-dev \\\n       build-essential \\\n       automake && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n   apt-get update \\\n&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n       gfortran \\\n       dpkg-dev \\\n       libssl-dev \\\n       imagemagick \\\n       libcairo2-dev \\\n       libcurl4-openssl-dev \\\n       graphviz \\\n       smem \\\n       octave \\\n       python3-yaml \\\n       python3-matplotlib \\\n       python3-jupyter* \\\n       python-matplotlib* \\\n       python-jupyter* \\\n       python-ipywidgets \\\n       python-ipywidgets-doc \\\n       python3-ipywidgets \\\n       jupyter \\\n       locales \\\n       locales-all \\\n       postgresql \\\n       postgresql-contrib \\\n       clang-format \\\n       yapf \\\n       yapf3 \\\n       golang \\\n       r-cran-formatr && rm -rf /var/lib/apt/lists/*;\n\n# The Octave kernel.\nRUN \\\n  pip install --no-cache-dir octave_kernel\n\n# Jupyter Lab\nRUN \\\n  pip install --no-cache-dir jupyterlab\n\n# Build and install Sage -- see https://github.com/sagemath/docker-images\nCOPY scripts/ /tmp/scripts\nRUN chmod -R +x /tmp/scripts\n\nRUN    adduser --quiet --shell /bin/bash --gecos \"Sage user,101,,\" --disabled-password sage \\\n    && chown -R sage:sage /home/sage/\n\n# make source checkout target, then run the install script\n# see https://github.com/docker/docker/issues/9547 for the sync\nRUN    mkdir -p /usr/local/ \\\n    && /tmp/scripts/install_sage.sh /usr/local/ master \\\n    && sync\n\nRUN /tmp/scripts/post_install_sage.sh && rm -rf /tmp/* && sync\n\n# Install sage scripts system-wide\nRUN echo \"install_scripts('/usr/local/bin/')\" | sage\n\n# Install SageTex\nRUN \\\n     sudo -H -E -u sage sage -p sagetex \\\n  && cp -rv /usr/local/sage/local/share/texmf/tex/latex/sagetex/ /usr/share/texmf/tex/latex/ \\\n  && texhash\n\n# Install LEAN proof assistant\nRUN \\\n     export VERSION=3.4.1 \\\n  && mkdir -p /opt/lean \\\n  && cd /opt/lean \\\n  && wget https://github.com/leanprover/lean/releases/download/v$VERSION/lean-$VERSION-linux.tar.gz \\\n  && tar xf lean-$VERSION-linux.tar.gz \\\n  && rm lean-$VERSION-linux.tar.gz \\\n  && rm -f latest \\\n  && ln -s lean-$VERSION-linux latest \\\n  && ln -s /opt/lean/latest/bin/lean /usr/local/bin/lean\n\n# Install all aspell dictionaries, so that spell check will work in all languages.  This is\n# used by cocalc's spell checkers (for editors).  This takes about 80MB, which is well worth it.\nRUN \\\n     apt-get update \\\n  && apt-get install --no-install-recommends -y aspell-* && rm -rf /var/lib/apt/lists/*;\n\n# Install Node.js and LATEST version of npm\nRUN \\\n     wget -qO- https://deb.nodesource.com/setup_8.x | bash - \\\n  && apt-get install --no-install-recommends -y nodejs \\\n  && /usr/bin/npm install -g npm && rm -rf /var/lib/apt/lists/*;\n\n# Install Julia\nARG JULIA=0.6.3\nRUN cd /tmp \\\n && wget https://julialang-s3.julialang.org/bin/linux/x64/0.6/julia-${JULIA}-linux-x86_64.tar.gz \\\n && tar xf julia-${JULIA}-linux-x86_64.tar.gz -C /opt \\\n && rm  -f julia-${JULIA}-linux-x86_64.tar.gz \\\n && mv /opt/julia-* /opt/julia \\\n && ln -s /opt/julia/bin/julia /usr/local/bin\n\n# Install R Jupyter Kernel package into R itself (so R kernel works)\nRUN echo \"install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'httr', 'devtools', 'uuid', 'digest'), repos='http://cran.us.r-project.org'); devtools::install_github('IRkernel/IRkernel')\" | sage -R --no-save\n\n\n# Commit to checkout and build.\nARG commit=HEAD\n\n# Pull latest source code for CoCalc and checkout requested commit (or HEAD)\nRUN \\\n     git clone https://github.com/sagemathinc/cocalc.git \\\n  && cd /cocalc && git pull && git fetch origin && git checkout ${commit:-HEAD}\n\n# Build and install all deps\n# CRITICAL to install first web, then compute, since compute precompiles all the .js\n# for fast startup, but unfortunately doing so breaks ./install.py all --web, since\n# the .js files laying around somehow mess up cjsx loading.\nRUN \\\n     cd /cocalc/src \\\n  && . ./smc-env \\\n  && ./install.py all --web \\\n  && ./install.py all --compute \\\n  && rm -rf /root/.npm /root/.node-gyp/\n\n# Install code into Sage\nRUN cd /cocalc/src && sage -pip install --upgrade smc_sagews/\n\nRUN echo \"umask 077\" >> /etc/bash.bashrc\n\n# Install some Jupyter kernel definitions\nCOPY kernels /usr/local/share/jupyter/kernels\n\n# Configure so that R kernel actually works -- see https://github.com/IRkernel/IRkernel/issues/388\nCOPY kernels/ir/Rprofile.site /usr/local/sage/local/lib/R/etc/Rprofile.site\n\n# Move aside sage environment python3; this is needed for use of python3 from sagews\nRUN \\\n     cd /usr/local/sage/local/bin \\\n  && mv python3 python3-bkb\n\n\n# Build a UTF-8 locale, so that tmux works -- see https://unix.stackexchange.com/questions/277909/updated-my-arch-linux-server-and-now-i-get-tmux-need-utf-8-locale-lc-ctype-bu\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && locale-gen\n\n# Install IJulia kernel\n#RUN echo '\\\n#ENV[\"JUPYTER\"] = \"/usr/local/bin/jupyter\"; \\\n#ENV[\"JULIA_PKGDIR\"] = \"/opt/julia/share/julia/site\"; \\\n#Pkg.init(); \\\n#Pkg.add(\"IJulia\");' | julia \\\n# && mv -i \"$HOME/.local/share/jupyter/kernels/julia-0.6\" \"/usr/local/share/jupyter/kernels/\"\n\n\n### Configuration\n\nCOPY login.defs /etc/login.defs\nCOPY login /etc/defaults/login\nCOPY nginx.conf /etc/nginx/sites-available/default\nCOPY haproxy.conf /etc/haproxy/haproxy.cfg\nCOPY run.py /root/run.py\nCOPY bashrc /root/.bashrc\n\n## Xpra backend support -- we have to use the debs from xpra.org,\n## Since the official distro packages are ancient.\nRUN \\\n     apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y xvfb websockify curl \\\n  && curl -f https://xpra.org/gpg.asc | apt-key add - \\\n  && echo \"deb http://xpra.org/ bionic main\" > /etc/apt/sources.list.d/xpra.list \\\n  && apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y xpra && rm -rf /var/lib/apt/lists/*;\n\n## X11 apps to make x11 support useful.\n## Will move this up in Dockerfile once stable.\nRUN \\\n     apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y x11-apps dbus-x11 \\\n     xdotool xclip x11-xkb-utils && rm -rf /var/lib/apt/lists/*;\n\n# CoCalc Jupyter widgets\nRUN \\\n  pip install --no-cache-dir ipyleaflet\n\nRUN \\\n  pip3 install --no-cache-dir ipyleaflet\n\nCMD /root/run.py\n\nEXPOSE 80 443\n"
}