{
  "startTime": 1674244735885,
  "endTime": 1674244736239,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 122,
        "columnEnd": 203
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 122,
        "columnEnd": 203
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# Build dependencies\nRUN echo \"deb-src http://archive.ubuntu.com/ubuntu/ xenial main restricted\" >> /etc/apt/sources.list && apt-get update && apt-get install --no-install-recommends -y python-pip git mercurial build-essential cmake libopenblas-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir wheel\n\nRUN pip install --no-cache-dir cython\n\nRUN pip install --no-cache-dir numpy==1.12.0\n\nENV EIGEN_VERSION 699b659\n# ENV EIGEN_VERSION 346ecdb\nRUN cd /opt && \\\n        hg clone https://bitbucket.org/eigen/eigen/ -r ${EIGEN_VERSION}\n\n# code for installing Intel MKL. You need to supply l_mkl_2018.1.163.tgz file\n#COPY l_mkl_2018.1.163.tgz /opt/\n#COPY docker/my_silent.cfg /opt/l_mkl_2018.1.163/\n#RUN cd /opt/ && \\\n#    tar zxvf l_mkl_2018.1.163.tgz && cd /opt/l_mkl_2018.1.163 && \\\n#    ./install.sh --silent \"my_silent.cfg\"\n#ENV LD_PRELOAD /opt/intel/mkl/lib/intel64/libmkl_def.so:/opt/intel/mkl/lib/intel64/libmkl_avx2.so:/opt/intel/mkl/lib/intel64/libmkl_core.so:/opt/intel/mkl/lib/intel64/libmkl_intel_lp64.so:/opt/intel/mkl/lib/intel64/libmkl_intel_thread.so:/opt/intel/lib/intel64_lin/libiomp5.so\n\n# DyNet, version 4234759\nENV DYNET_VERSION 2.0.1\nRUN cd /opt && \\\n        git clone https://github.com/clab/dynet.git && \\\n        cd dynet && \\\n        git checkout ${DYNET_VERSION} && \\\n        mkdir build && \\\n        cd build && \\\n        cmake .. -DEIGEN3_INCLUDE_DIR=/opt/eigen -DPYTHON=`which python` && \\\n        make -j2 && \\\n        cd python && \\\n        python ../../setup.py build --build-dir=.. --skip-build install\n\nRUN cd /opt/dynet/build && make -j2 install\n\n# if you want to use Intel MKL, change the above cmake line to\n# cmake .. -DEIGEN3_INCLUDE_DIR=/opt/eigen -DPYTHON=`which python` -DMKL_ROOT /opt/intel/mkl && \\\n\nENV DYLD_LIBRARY_PATH /opt/dynet/build/dynet/\nENV LD_LIBRARY_PATH /opt/dynet/build/dynet/\n\nRUN mkdir /opt/ner-tagger-dynet\n\nWORKDIR /opt/ner-tagger-dynet\n\nCOPY *.py /opt/ner-tagger-dynet/\nCOPY requirements.txt /opt/ner-tagger-dynet/\n\nRUN pip install --no-cache-dir -r requirements.txt\n\nRUN mkdir dataset\n\nCOPY evaluation/conlleval evaluation/\nRUN mkdir -p evaluation/temp/eval_logs/\n\nRUN mkdir models/\n\n"
}