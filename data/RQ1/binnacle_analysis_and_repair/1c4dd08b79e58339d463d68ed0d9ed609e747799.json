{
  "startTime": 1674250896264,
  "endTime": 1674250896610,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "# Define Base Image\n# FROM nvidia/cuda:9.1-cudnn7-devel-ubuntu16.04\nFROM nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04\n\n# Install dependencies\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    git \\\n    cmake \\\n    build-essential \\\n    libboost-program-options-dev \\\n    libboost-filesystem-dev \\\n    libboost-graph-dev \\\n    libboost-regex-dev \\\n    libboost-system-dev \\\n    libboost-test-dev \\\n    libeigen3-dev \\\n    libsuitesparse-dev \\\n    libfreeimage-dev \\\n    libgoogle-glog-dev \\\n    libgflags-dev \\\n    libglew-dev \\\n    qtbase5-dev \\\n    libqt5opengl5-dev \\\n    libcgal-dev \\\n    libcgal-qt5-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install ceres solver\nRUN cd /opt\nWORKDIR /opt\nRUN apt-get install --no-install-recommends -y libatlas-base-dev libsuitesparse-dev libgoogle-glog-dev libeigen3-dev libsuitesparse-dev && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://ceres-solver.googlesource.com/ceres-solver\nRUN cd ceres-solver\nWORKDIR /opt/ceres-solver\nRUN mkdir build\nRUN cd build\nWORKDIR /opt/ceres-solver/build\nRUN cmake .. -DBUILD_TESTING=OFF -DBUILD_EXAMPLES=OFF\nRUN make\nRUN make install\n\n\n# Install Colmap\n\nRUN cd /opt\nWORKDIR /opt\nRUN git clone https://github.com/colmap/colmap\nRUN cd colmap\nWORKDIR /opt/colmap\nRUN mkdir build\nRUN cd build\nWORKDIR /opt/colmap/build\nRUN cmake ..\nRUN make\nRUN make install\nRUN cd /\n\n# RUN mkdir -p /home/app\n# RUN mkdir /home/app/data\n\n# # Specify working directory\n\n# WORKDIR /home/app\n\n# # Copy script from Host machine to working directory of the container\n# COPY colmap.sh .\n\n# # Specify entry point of the container\n\n# ENTRYPOINT [\"sh\", \"colmap.sh\"]\n\n\n\n\n# Pick up some TF dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        libfreetype6-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        ffmpeg \\\n        pkg-config \\\n        python \\\n        python-dev \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nRUN pip --no-cache-dir install --upgrade ipython && \\\n    pip --no-cache-dir install \\\n        ipykernel \\\n        jupyter \\\n        jupyterlab \\\n        matplotlib \\\n        numpy \\\n        scipy \\\n        sklearn \\\n        pandas \\\n        Pillow \\\n        scikit-image \\\n        imageio==2.4.0 \\\n        && \\\n    python -m ipykernel.kernelspec\n\n\n# Install TensorFlow CPU version from central repo\nRUN pip --no-cache-dir install \\\n    https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.13.1-cp27-none-linux_x86_64.whl\n# https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.0.1-cp27-none-linux_x86_64.whl\n\nENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\n\n# Install OpenCV\nRUN apt-get update && apt-get install --no-install-recommends -y libopencv-dev python-opencv && \\\n    echo 'ln /dev/null /dev/raw1394' >> ~/.bashrc && rm -rf /var/lib/apt/lists/*;\n\n# Install GLFW\nRUN apt-get update && apt-get install --no-install-recommends -y libglfw3-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y imagemagick && rm -rf /var/lib/apt/lists/*;\n\n# Expose Ports for Tensorboard (6006)\nEXPOSE 6006\n\n# #Jupyter notebook related configs\n# COPY jupyter_notebook_config.py /root/.jupyter/\nEXPOSE 8888\n\n# # Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062\n# COPY run_jupyter.sh /home/\n\n# #Adding flask\n# RUN pip install flask\n# EXPOSE 5000\n\nRUN mkdir -p /workspace\nWORKDIR /workspace\nRUN chmod -R a+w /workspace"
}