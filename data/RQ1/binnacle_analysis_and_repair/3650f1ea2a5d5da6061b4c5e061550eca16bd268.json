{
  "startTime": 1674241090610,
  "endTime": 1674241090731,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Application base image\n#\n# This image contains:\n#\n#  - PHP runtime\n#  - PHP extensions\n#  - Composer packages\n\n\n# Build stage 1: Install composer packages\nFROM composer AS vendor\nCOPY composer.json /app\nCOPY composer.lock /app\nRUN [\"composer\", \"install\", \"--ignore-platform-reqs\", \"--prefer-dist\"]\n\n\n# Build stage 2: Final image\nFROM alpine:3.9\n\n# Add the S6 supervisor overlay\n# https://github.com/just-containers/s6-overlay\nRUN wget -O /tmp/s6-overlay-amd64.tar.gz \\\n        https://github.com/just-containers/s6-overlay/releases/download/v1.22.1.0/s6-overlay-amd64.tar.gz \\\n    && tar xzf /tmp/s6-overlay-amd64.tar.gz -C / \\\n    && rm /tmp/s6-overlay-amd64.tar.gz\n\n# PHP 7.3 is not yet available from alpine packages so we use\n# https://github.com/codecasts/php-alpine\nRUN wget -O /etc/apk/keys/php-alpine.rsa.pub \\\n        https://dl.bintray.com/php-alpine/key/php-alpine.rsa.pub \\\n    && apk --update --no-cache add ca-certificates \\\n    && echo \"@php https://dl.bintray.com/php-alpine/v3.9/php-7.3\" >> /etc/apk/repositories \\\n    && apk add --no-cache \\\n        #\n        # Required packages\n        nginx \\\n        php7@php \\\n        php7-ctype@php \\\n        php7-dom@php \\\n        #php7-fileinfo \\\n        php7-fpm@php \\\n        php7-intl@php \\\n        php7-json@php \\\n        php7-mbstring@php \\\n        php7-posix@php \\\n        php7-session@php \\\n        #php7-tokenizer \\\n        #\n        # Optional extensions (modify as needed)\n        php7-apcu@php \\\n        php7-opcache@php \\\n        php7-pdo_mysql@php \\\n    # Fix missing php binary\n    && ln -s /usr/bin/php7 /usr/bin/php \\\n    #\n    # Ensure user/group www-data for php-fpm\n    && adduser -u 82 -D -S -G www-data www-data \\\n    #\n    # Create pid dir and send logs to stderr for Nginx\n    && mkdir /run/nginx \\\n    && ln -sf /dev/stderr /var/log/nginx/error.log \\\n    # Drop access logs as they only duplicate the host logs\n    && ln -sf /dev/null /var/log/nginx/access.log \\\n    #\n    # Set system timezone to make cron jobs run at correct local times\n    && apk add --no-cache tzdata \\\n    && cp /usr/share/zoneinfo/Europe/Berlin /etc/localtime \\\n    && echo \"Europe/Berlin\" > /etc/timezone \\\n    && apk del --force-broken-world tzdata\n\n# S6 configuration\nADD ./etc/cont-init.d /etc/cont-init.d\nADD ./etc/services.d /etc/services.d\n\n# Nginx default server and PHP defaults\nADD ./etc/nginx/default.conf /etc/nginx/conf.d/default.conf\nADD ./etc/php7/zz-docker.conf /etc/php7/php-fpm.d/zz-docker.conf\n\n# Composer packages from build stage 1\nCOPY --from=vendor /var/www/vendor /var/www/vendor\n\nWORKDIR /var/www/html\n\nEXPOSE 80\n\n# S6 init will start all services\nENTRYPOINT [\"/init\"]\n"
}