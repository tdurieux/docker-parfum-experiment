{
  "startTime": 1674235647432,
  "endTime": 1674235647613,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 Oracle and/or its affiliates. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM oraclelinux:7-slim\n\nRUN yum install --enablerepo=ol7_developer_EPEL -y \\\n    ca-certificates \\\n    gcc \\\n    git \\\n    jq \\\n    make \\\n    openssl \\\n    pwgen \\\n    python \\\n    python-pip \\\n    python-yaml \\\n    unzip && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# Install golang environment\nRUN curl -f https://storage.googleapis.com/golang/go1.11.1.linux-amd64.tar.gz -O && \\\n    mkdir /tools && \\\n    tar xzf go1.11.1.linux-amd64.tar.gz -C /tools && \\\n    rm go1.11.1.linux-amd64.tar.gz && \\\n    mkdir -p /go/bin\n\nENV PATH=/tools/go/bin:/go/bin:/tools/linux-amd64:$PATH \\\n    GOPATH=/go \\\n    GOROOT=/tools/go\n\n# Install the kubectl client\nRUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/v1.11.0/bin/linux/amd64/kubectl && \\\n    chmod +x ./kubectl && \\\n    mv ./kubectl /usr/local/bin/kubectl\n\n# Install Ginkgo\nRUN go get -u github.com/onsi/ginkgo/ginkgo && \\\n    go get -u github.com/onsi/gomega/...\n\n# Install golint\nRUN go get -u golang.org/x/lint/golint\n\n# Install Terraform\nRUN curl -f https://releases.hashicorp.com/terraform/0.10.7/terraform_0.10.7_linux_amd64.zip -LO && \\\n    unzip terraform_0.10.7_linux_amd64.zip && \\\n    mv terraform /usr/bin && \\\n    rm -f terraform terraform_0.10.7_linux_amd64.zip\n\n# Installs the OCI terraform provider\nRUN curl -f -LO https://github.com/oracle/terraform-provider-oci/releases/download/2.0.2/linux.tar.gz && \\\n    tar -xvf linux.tar.gz -C / && \\\n    echo \"providers { oci = \\\"/linux_amd64/terraform-provider-oci_v2.0.2\\\" }\" > ~/.terraformrc && \\\n    rm -f linux.tar.gz\n\n# Install OCI client\nRUN pip install --no-cache-dir \\\n    oci \\\n    requests[security]\n"
}