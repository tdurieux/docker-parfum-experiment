{
  "startTime": 1674244556625,
  "endTime": 1674244556869,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 183,
        "lineEnd": 183,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 1,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 91,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 1,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedDockerfile": "# ===============================================================================\n# Dockerfile\n#   \"Wordpress + Nginx + Cached + NoDB\" docker image - production ready\n#\n# What's it included:\n#\n# - php-fpm\n# - Wordpress - build with the **latest** version\n# - Nginx - as reverse proxy, HTTP / HTTPS enabled.\n# - Cache - fastcgi-cache, fastcgi_cache_purge, Opcache\n# - No DB included.\n#\n# Optional\n#\n# - Deploy `letsencrypt` SSL.\n# - Deploy normal SSL.\n#\n# @link https://letsencrypt.org/ | letsencrypt\n#\n# It is based on Ubuntu 14.04 LTS\n# ===============================================================================\n\n# Set the base image to Ubuntu\nFROM ubuntu:14.04\n\n# File Author / Maintainer\nMAINTAINER Lei SHI <foxshee@gmail.com>\n\n# Default HTTP and HTTPS ports\nEXPOSE 80 443\n\n\n# ===============================================================================\n# Env. Setup\n#\n\n# Keep upstart from complaining\nRUN dpkg-divert --local --rename --add /sbin/initctl && \\\n\tln -sf /bin/true /sbin/initctl\n\n# Let the container know that there is no tty\nENV DEBIAN_FRONTEND noninteractive\n\n# Update the repository sources list and finish upgrade\nRUN apt-get update && apt-get -y upgrade\n\n# ----------------------------------------------------------\n# Dependencies\n# ----------------------------------------------------------\n\n# Basic Dependencies\n#\n# The basic dependecies includes:\n#\n# - PHP & fpm\n# - MySQL client\n# - curl\n# - Git\n# - pwgen - Open-Source Password Generator\n# - python-setuptools - for `easy_install`\n#\nRUN apt-get install --no-install-recommends -y mysql-client \\\n\t\t\t\t\t\tphp5-fpm \\\n\t\t\t\t\t\tphp5-mysql \\\n\t\t\t\t\t\tpwgen \\\n\t\t\t\t\t\tpython-setuptools \\\n\t\t\t\t\t\tcurl \\\n\t\t\t\t\t\tgit \\\n\t\t\t\t\t\tunzip && rm -rf /var/lib/apt/lists/*;\n\n\n# **Wordpress** Dependencies\nRUN apt-get install --no-install-recommends -y php5-curl \\\n\t\t\t\t\t\tphp5-gd \\\n\t\t\t\t\t\tphp5-intl \\\n\t\t\t\t\t\tphp-pear \\\n\t\t\t\t\t\tphp5-imagick \\\n\t\t\t\t\t\tphp5-imap \\\n\t\t\t\t\t\tphp5-mcrypt \\\n\t\t\t\t\t\tphp5-memcache \\\n\t\t\t\t\t\tphp5-ming \\\n\t\t\t\t\t\tphp5-ps \\\n\t\t\t\t\t\tphp5-pspell \\\n\t\t\t\t\t\tphp5-recode \\\n\t\t\t\t\t\tphp5-sqlite \\\n\t\t\t\t\t\tphp5-tidy \\\n\t\t\t\t\t\tphp5-xmlrpc \\\n\t\t\t\t\t\tphp5-xsl && rm -rf /var/lib/apt/lists/*;\n\n### ---- FIX -----\n# Fix 'add-apt-repository: not found' in Ubuntu 14.04 LTS\nRUN apt-get -y --no-install-recommends install software-properties-common \\\n\t\t\t\t\t\tpython-software-properties && rm -rf /var/lib/apt/lists/*;\n\n\n# ----------------------------------------------------------\n# Nginx\n#\n#   Nginx compiled with `fastcgi_cache` and `fastcgi_cache_purge`\n#\n# @link https://easyengine.io/wordpress-nginx/tutorials/single-site/fastcgi-cache-with-purging/\n# ----------------------------------------------------------\n\nRUN add-apt-repository ppa:rtcamp/nginx && \\\n\tapt-get update && \\\n\tapt-get remove nginx* && \\\n\tapt-get install --no-install-recommends -y nginx-custom && rm -rf /var/lib/apt/lists/*;\n\n\n############################################################\n# Configurations\n#\n\n# ----------------------------------------------------------\n# Nginx Config\n# ----------------------------------------------------------\n\n# Create uer for Nginx running\nRUN adduser --system --no-create-home --shell /bin/false --group --disabled-login www-front\n\n# Copy config files to `/etc/nginx/` folder\nCOPY  config/nginx.conf /etc/nginx/nginx.conf\n\nCOPY  config/nginx-site-http.conf /etc/nginx/nginx-site-http.conf\nCOPY  config/nginx-site-https.conf /etc/nginx/nginx-site-https.conf\n# Default **site** config - HTTP\n# Later if need to enforce SSL, use `nginx-site-http.conf` instead.\nCOPY  config/nginx-site-http.conf /etc/nginx/sites-available/default\n\nCOPY  config/nginx-ssl.conf /etc/nginx/ssl-template.conf\nCOPY  config/nginx-restrictions.conf /etc/nginx/restrictions.conf\n\n\n# ----------------------------------------------------------\n# PHP-fpm Config\n# ----------------------------------------------------------\n\nRUN sed -i -e \"s/;cgi.fix_pathinfo\\s*=\\s*1/cgi.fix_pathinfo = 0/g; s/expose_php\\s*=\\s*On/expose_php = Off/g\" \\\n/etc/php5/fpm/php.ini\nRUN sed -i -e \"s/expose_php\\s*=\\s*On/expose_php = Off/g\" /etc/php5/fpm/php.ini\nRUN sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g; s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" \\\n/etc/php5/fpm/php.ini\n#RUN sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" /etc/php5/fpm/php.ini\n\nRUN sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php5/fpm/php-fpm.conf\n\nRUN sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g; s/listen\\s*=\\s*\\/var\\/run\\/php5-fpm.sock/listen = 127.0.0.1:9000/g; s/;listen.allowed_clients\\s*=\\s*127.0.0.1/listen.allowed_clients = 127.0.0.1/g\" \\\n/etc/php5/fpm/pool.d/www.conf\n#RUN sed -i -e \"s/listen\\s*=\\s*\\/var\\/run\\/php5-fpm.sock/listen = 127.0.0.1:9000/g\" /etc/php5/fpm/pool.d/www.conf\n#RUN sed -i -e \"s/;listen.allowed_clients\\s*=\\s*127.0.0.1/listen.allowed_clients = 127.0.0.1/g\" /etc/php5/fpm/pool.d/www.conf\n\n\n# ----------------------------------------------------------\n# Opcode Config\n# ----------------------------------------------------------\n\nRUN sed -i -e\"s/^;opcache.enable\\s*=\\s*0/opcache.enable = 1/; s/^;opcache.max_accelerated_files\\s*=\\s*2000/opcache.max_accelerated_files = 4000/\" /etc/php5/fpm/php.ini\n#RUN sed -i -e\"s/^;opcache.max_accelerated_files\\s*=\\s*2000/opcache.max_accelerated_files = 4000/\" /etc/php5/fpm/php.ini\n\n\n# ===============================================================================\n# Install & Config Supervisor\n#\n# Supervisor is a process manager which makes managing a number of long-running programs a trivial task\n#   by providing a consistent interface through which they can be monitored and controlled.\n#\n# it uses `easy_install` (from `python-setuptools`) to install **supervisor**.\n#\n# @link http://supervisord.org/#\n#\n\nRUN /usr/bin/easy_install supervisor && \\\n\t/usr/bin/easy_install supervisor-stdout\nCOPY  config/supervisord.conf /etc/supervisord.conf\n\n\n\n# ===============================================================================\n# Install Wordpress\n#\n\n# Get the code of  **latest** version.\nRUN cd /usr/share/nginx/ && \\\n    curl -f -o wp-latest.tar.gz https://wordpress.org/latest.tar.gz && \\\n    tar -xvf wp-latest.tar.gz && \\\n    rm wp-latest.tar.gz\n\n# Target **webroot** - `/usr/share/nginx/www`\nRUN rm -rf /usr/share/nginx/www && \\\n\tmv /usr/share/nginx/wordpress /usr/share/nginx/www && \\\n\tchown -R www-data:www-data /usr/share/nginx/www\n\n\n\n# ===============================================================================\n# System Initialization\n#\n\n## Copy the **pre-defined** bash script\nCOPY bash/init.sh /init.sh\n## Modify the permisison - make sure they are excuatable\nRUN chmod 755 /init.sh\n\n# Set up default CMD\nCMD [\"/bin/bash\", \"/init.sh\"]\n\n# ===============================================================================\n# Copy \"optional\" scripts\n#\n# Under `/addon` folder.\n#\n\n# `letsencrypt` SSL related\n# @link https://letsencrypt.org/ | letsencrypt\nCOPY bash/ssl-letsencrypt.sh /addon/letsencrypt/ssl-letsencrypt.sh\n\n# Normal SSL related\nCOPY bash/ssl.sh /addon/ssl.sh\n\n# Install WP plugins\nCOPY bash/wp-install-plugins.sh /addon/wp-install-plugins.sh\n\n\n# ===============================================================================\n# Volume Mounting\n#\n# - Wprdpress webroot\n# - Log\n#\n\n# Mount the volumns\nVOLUME [\"/usr/share/nginx/www\", \"/var/log\"]\n\n"
}