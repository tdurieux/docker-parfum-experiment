{
  "startTime": 1674243727604,
  "endTime": 1674243727736,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# build angular project\n#\nFROM node:10 as webapp-builder\n\n# change PREFIX if you need another url prefix for the webapp\nENV PREFIX /ecs-deploy\n\nCOPY webapp/package.json webapp/package-lock.json ./\n\nRUN npm set progress=false && npm config set depth 0 && npm cache clean --force\n\nRUN npm i && mkdir -p /webapp && mv package.json package-lock.json ./node_modules /webapp && npm cache clean --force;\n\nWORKDIR /webapp\n\nCOPY webapp /webapp\n\nRUN cd /webapp && $(npm bin)/ng build --prod --base-href ${PREFIX}/webapp/\n\n#\n# Build go project\n#\nFROM golang:1.11-alpine as go-builder\n\nWORKDIR /ecs-deploy/\n\nCOPY . .\n\nRUN apk add -u -t build-tools curl git && \\\n    CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o ecs-deploy cmd/ecs-deploy/main.go && \\\n    apk del build-tools && \\\n    rm -rf /var/cache/apk/*\n\n#\n# Runtime container\n#\nFROM alpine:latest \n\nARG SOURCE_COMMIT=unknown\n\nENV GIN_MODE release\n\nRUN apk --no-cache add ca-certificates bash curl && mkdir -p /app/webapp\n\nWORKDIR /app\n\nCOPY . .\nCOPY --from=go-builder /ecs-deploy/ecs-deploy .\nCOPY --from=webapp-builder /webapp/dist webapp/dist\n\nRUN echo ${SOURCE_COMMIT} > source_commit\n\n# remove unnecessary source files\nRUN rm -rf *.go webapp/src\n\nCMD [\"./ecs-deploy\", \"--server\"] \n"
}