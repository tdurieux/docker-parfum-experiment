{
  "startTime": 1674251212701,
  "endTime": 1674251213137,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 5,
        "columnEnd": 107
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 48,
        "columnStart": 5,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 5,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 5,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nginx:1.13.5\nMAINTAINER mail@karelbemelmans.com\n\nRUN set -x && DEBIAN_FRONTEND=noninteractive apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    ca-certificates \\\n    dpkg-dev \\\n    git \\\n    libssl-dev \\\n    libpcre3-dev \\\n    zlib1g-dev \\\n    wget \\\n    unzip && rm -rf /var/lib/apt/lists/*;\n\n# The actual nginx server config, this needs to get loaded last.\n# Make sure you copy it to default.conf to overwrite the normal config!\nCOPY config/nginx.conf /etc/nginx/nginx.conf\nCOPY config/proxy.conf /etc/nginx/conf.d/default.conf\nCOPY config/upstream.conf /etc/nginx/conf.d/00-upstream.conf\n\n# Install Maxmind db library\nENV MAXMIND_VERSION=1.2.1\nRUN set -x \\\n  && wget https://github.com/maxmind/libmaxminddb/releases/download/${MAXMIND_VERSION}/libmaxminddb-${MAXMIND_VERSION}.tar.gz \\\n  && tar xf libmaxminddb-${MAXMIND_VERSION}.tar.gz \\\n  && cd libmaxminddb-${MAXMIND_VERSION} \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make \\\n  && make check \\\n  && make install \\\n  && ldconfig && rm libmaxminddb-${MAXMIND_VERSION}.tar.gz\n\n# Install nginx extension for GeoIP2. See: https://github.com/leev/ngx_http_geoip2_module\n# We have to recompile nginx. To keep things simple we use the deb file + the same compile options as before.\n#\n# NGINX_VERSION is coming from the base container\n#\n# FIXME: use nginx -V to use current compile options\n#        NGINX_OPTIONS=$(2>&1 nginx -V | grep 'configure arguments' | awk -F: '{print $2}') \\\nRUN set -x \\\n  && git clone https://github.com/leev/ngx_http_geoip2_module \\\n  && echo \"deb-src http://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list \\\n  && DEBIAN_FRONTEND=noninteractive apt-get update \\\n  && apt-get source nginx=${NGINX_VERSION} \\\n  && cd nginx-1.13.5 \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-cc-opt='-g -O2 -fdebug-prefix-map=/data/builder/debuild/nginx-1.13.5/debian/debuild-base/nginx-1.13.5=. -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC' --with-ld-opt='-specs=/usr/share/dpkg/no-pie-link.specs -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie' \\\n    --add-dynamic-module=/ngx_http_geoip2_module \\\n  && make modules \\\n  && cp objs/ngx_http_geoip2_module.so /usr/lib/nginx/modules/ \\\n  && apt-get remove --purge -y \\\n    build-essential \\\n    dpkg-dev\n\n# Download Maxmind db version 2\n# This example uses the free version from https://dev.maxmind.com/geoip/geoip2/geolite2/\n#\n# We only use the country db, you can add the city db and others if you want them.\nRUN set -x && mkdir -p /usr/share/geoip \\\n  && wget -O /tmp/country.tar.gz https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz \\\n  && tar xf /tmp/country.tar.gz -C /usr/share/geoip --strip 1 \\\n  && ls -al /usr/share/geoip/ && rm /tmp/country.tar.gz\n\nEXPOSE 80\nEXPOSE 443\n"
}