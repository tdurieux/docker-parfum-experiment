{
  "startTime": 1674244684598,
  "endTime": 1674244684884,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 44,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# QIS Application server\n#\n# RHEL build and testing environment.\n#\nFROM registry.access.redhat.com/rhel7:7.6 AS registered_system\n\n# RH subscription variables. Pass these in as build arguments.\nARG RH_SUBS_USER\nARG RH_SUBS_PASSWORD\n\n# Subscribe to RH updates before we can use yum\nRUN subscription-manager register --username=$RH_SUBS_USER --password=$RH_SUBS_PASSWORD --auto-attach\n\n# Update the system, ignoring the unusual repos\nRUN yum update -y --disablerepo=*-eus-* --disablerepo=*-htb-* --disablerepo=*sjis* \\\n                  --disablerepo=*-ha-* --disablerepo=*-rt-* --disablerepo=*-lb-* \\\n                  --disablerepo=*-rs-* --disablerepo=*-sap-* && \\\n    yum clean all\n\n# Disable the unusual repos\nRUN yum-config-manager --disable *-eus-* *-htb-* *-ha-* *-rt-* *-lb-* \\\n                                 *-rs-* *-sap-* *-sjis-* > /dev/null\n\n# Enable optional RPMs\nRUN yum-config-manager --enable rhel-7-server-optional-rpms\n\n# Install the EPEL and IUS repos\nRUN yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-$(rpm -E '%{rhel}').noarch.rpm && rm -rf /var/cache/yum\nRUN yum -y install https://rhel$(rpm -E '%{rhel}').iuscommunity.org/ius-release.rpm && rm -rf /var/cache/yum\n\n# Start again with a standard build script\nFROM registered_system\n\nLABEL maintainer=\"matt@quru.com\" \\\n      description=\"QIS build and test environment on Red Hat Enterprise Linux\"\n\n# Build variables\nARG BUILD_USER=build\nARG IM_VERSION=6.9.9-25\n# This should contain a public key (the actual key, not a filename) that is\n# allowed to log in via SSH. Pass this in as a build argument.\nARG AUTHORIZED_KEY\n\n# Add extra o/s tools\nRUN yum install -y sudo curl wget man git make gcc gcc-c++ sed mlocate tar zip unzip which \\\n                   java-1.8.0-openjdk-headless \\\n                   postgresql-devel openldap-devel openssl-devel libmemcached-devel \\\n                   python35u-devel python35u-pip \\\n                   openssh-server openssh-clients && \\\n    yum clean all && rm -rf /var/cache/yum\nRUN pip3.5 install --upgrade pip setuptools wheel virtualenv\n\n# Install ImageMagick devel from RPMs (as the RHEL 7 package is a buggy release)\nRUN wget -P /tmp \"https://quru.com/static2/imagemagick/ImageMagick-$IM_VERSION.x86_64.rpm\" && \\\n    wget -P /tmp \"https://quru.com/static2/imagemagick/ImageMagick-devel-$IM_VERSION.x86_64.rpm\" && \\\n    wget -P /tmp \"https://quru.com/static2/imagemagick/ImageMagick-libs-$IM_VERSION.x86_64.rpm\"\nRUN yum install -y /tmp/ImageMagick-libs-$IM_VERSION.x86_64.rpm && yum clean all && rm -rf /var/cache/yum\nRUN yum install -y /tmp/ImageMagick-$IM_VERSION.x86_64.rpm && yum clean all && rm -rf /var/cache/yum\nRUN yum install -y /tmp/ImageMagick-devel-$IM_VERSION.x86_64.rpm && yum clean all && rm -rf /var/cache/yum\n\n# Create a user for building and running stuff\nRUN groupadd --gid 1001 $BUILD_USER && \\\n    useradd --uid 1001 --gid 1001 --groups wheel --create-home --shell /bin/bash $BUILD_USER\nRUN sed -r -i 's/%wheel\\s+ALL=\\(ALL\\)\\s+ALL/%wheel        ALL=(ALL)       NOPASSWD: ALL/g' /etc/sudoers\n\n# Install an authorized key for logging in as the build user\nUSER $BUILD_USER\nWORKDIR /home/$BUILD_USER\nRUN mkdir .ssh && chmod 700 .ssh\nRUN echo \"$AUTHORIZED_KEY\" > .ssh/authorized_keys && \\\n    chmod 600 .ssh/authorized_keys\n\n# Set up SSHD\nUSER root\nRUN ssh-keygen -A\n\n# https://bugzilla.redhat.com/show_bug.cgi?id=1043212\nRUN rm -f /run/nologin\n\n# Run SSHD as the default command\nEXPOSE 22\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n"
}