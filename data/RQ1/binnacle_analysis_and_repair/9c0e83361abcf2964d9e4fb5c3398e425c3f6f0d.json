{
  "startTime": 1674235070546,
  "endTime": 1674235070723,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 12,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 18,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rvernica/scidb:16.9\n\n\n## Install dependencies\nRUN echo \"deb http://us.archive.ubuntu.com/ubuntu/ trusty main\"               \\\n    >  /etc/apt/sources.list.d/trusty-main.list                               \\\n    && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys               \\\n        40976EAF437D05B5                                                      \\\n        3B4FE6ACC0B21F32                                                      \\\n    && echo \"deb https://packages.red-data-tools.org/ubuntu/ trusty universe\" \\\n    >> /etc/apt/sources.list.d/red-data-tools.list                            \\\n    && apt-get update \\\n    && apt-get install -y \\\n         --assume-yes \\\n         --no-install-recommends \\\n         --allow-unauthenticated \\\n        red-data-tools-keyring \\\n    && apt-get update \\\n    && apt-get install -y --assume-yes --no-install-recommends \\\n        bc \\\n        libarrow-dev \\\n        libarrow0 \\\n        libpcre3-dev \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && wget --no-verbose https://bootstrap.pypa.io/get-pip.py \\\n    && python get-pip.py \\\n    && pip install --no-cache-dir scidb-strm==16.9.1\n\n\nARG SCIDB_DEV_TOOLS=332127216cd6d5791320abafd767e09164cd22e2\nARG SCIDB_ACCELERATED_IO_TOOLS=c7dac75ff51d945b40c5b87c0d8e0e52cc8a8a68\nARG SCIDB_EQUI_JOIN=3e4971b3296a449711fd23c457cb6a8cfc0fcfc9\nARG SCIDB_GROUPED_AGGREGATE=c3e9342a8019c1710e043bb708bd784d40e6d4fb\nARG SCIDB_LIMIT=bd0751d226e734ab721cbbc161c69ff677bb4922\nARG SCIDB_STREAM=cf83752dd8e5cdd045abc2ae8e8482e16cb091e5\nARG SCIDB_SUMMARIZE=4eae8663a8d054e375bdca6d897305dc36f3d382\nARG SCIDB_SUPERFUNPACK=d3bf0c94ca767153bd6779ee9a8af0a875cb17d0\n\n\n## Install dev_tools\nRUN wget --no-verbose --output-document -                                      \\\n        https://github.com/Paradigm4/dev_tools/archive/$SCIDB_DEV_TOOLS.tar.gz \\\n    |  tar --extract --gzip --directory=/usr/local/src                         \\\n    && make --directory=/usr/local/src/dev_tools-$SCIDB_DEV_TOOLS              \\\n    && cp /usr/local/src/dev_tools-$SCIDB_DEV_TOOLS/*.so                       \\\n        $SCIDB_INSTALL_PATH/lib/scidb/plugins                                  \\\n    && rm -rf /usr/local/src/dev_tools-$SCIDB_DEV_TOOLS\n\n\n## Install Paradigm4 plug-ins\n## Re-create \".pgpass\" file due to hard links created by Docker Hub\nRUN cp /root/.pgpass /root/.pgpass.bk          \\\n    && mv /root/.pgpass.bk /root/.pgpass       \\\n    && service ssh start                       \\\n    && service postgresql start                \\\n    && scidb.py startall $SCIDB_NAME           \\\n    && iquery --afl --query                    \\\n        \"load_library('dev_tools');            \\\n                                               \\\n         install_github(                       \\\n             'Paradigm4/accelerated_io_tools', \\\n             '$SCIDB_ACCELERATED_IO_TOOLS',    \\\n             'https_proxy=$https_proxy');      \\\n         load_library('accelerated_io_tools'); \\\n                                               \\\n         install_github(                       \\\n             'Paradigm4/equi_join',            \\\n             '$SCIDB_EQUI_JOIN',               \\\n             'https_proxy=$https_proxy');      \\\n         load_library('equi_join');            \\\n                                               \\\n         install_github(                       \\\n             'Paradigm4/grouped_aggregate',    \\\n             '$SCIDB_GROUPED_AGGREGATE',       \\\n             'https_proxy=$https_proxy');      \\\n         load_library('grouped_aggregate');    \\\n                                               \\\n         install_github(                       \\\n             'Paradigm4/limit',                \\\n             '$SCIDB_LIMIT',                   \\\n             'https_proxy=$https_proxy');      \\\n         load_library('limit');                \\\n                                               \\\n         install_github(                       \\\n             'Paradigm4/stream',               \\\n             '$SCIDB_STREAM',                  \\\n             'https_proxy=$https_proxy');      \\\n         load_library('stream');               \\\n                                               \\\n         install_github(                       \\\n             'Paradigm4/summarize',            \\\n             '$SCIDB_SUMMARIZE',               \\\n             'https_proxy=$https_proxy');      \\\n         load_library('summarize');            \\\n                                               \\\n         install_github(                       \\\n             'Paradigm4/superfunpack',         \\\n             '$SCIDB_SUPERFUNPACK',            \\\n             'https_proxy=$https_proxy');      \\\n         load_library('superfunpack')\"         \\\n    && scidb.py stopall $SCIDB_NAME            \\\n    && service postgresql stop\n\n\n## Update Shim conf to use aio\nRUN echo aio=1            \\\n    >> /var/lib/shim/conf\n"
}