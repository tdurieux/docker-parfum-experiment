{
  "startTime": 1674241739859,
  "endTime": 1674241740281,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 104
      }
    }
  ],
  "repairedDockerfile": "# Based on OpenAI's mujoco-py Dockerfile\n\nFROM nvidia/cuda:10.0-runtime-ubuntu18.04\n\nRUN echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections \\\n    && apt-get update -q \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    curl \\\n    git \\\n    libgl1-mesa-dev \\\n    libgl1-mesa-glx \\\n    libglew-dev \\\n    libosmesa6-dev \\\n    ffmpeg \\\n    software-properties-common \\\n    net-tools \\\n    parallel \\\n    rsync \\\n    unzip \\\n    vim \\\n    virtualenv \\\n    wget \\\n    xpra \\\n    xserver-xorg-dev \\\n    ttf-mscorefonts-installer \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN DEBIAN_FRONTEND=noninteractive add-apt-repository --yes ppa:deadsnakes/ppa && apt-get update\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y python3.6-dev python3.6 python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN virtualenv --python=python3.6 env\n\nRUN rm /usr/bin/python\nRUN ln -s /env/bin/python3.6 /usr/bin/python\nRUN ln -s /env/bin/pip3.6 /usr/bin/pip\nRUN ln -s /env/bin/pytest /usr/bin/pytest\n\nRUN curl -f -o /usr/local/bin/patchelf https://s3-us-west-2.amazonaws.com/openai-sci-artifacts/manual-builds/patchelf_0.9_amd64.elf \\\n    && chmod +x /usr/local/bin/patchelf\n\nRUN DEBIAN_FRONTEND=noninteractive add-apt-repository --yes ppa:marmistrz/openmpi && apt-get update\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y libopenmpi3 libopenmpi-dev && rm -rf /var/lib/apt/lists/*;\n\nENV LANG C.UTF-8\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib64:${LD_LIBRARY_PATH}\n\nRUN    mkdir -p /root/.mujoco \\\n    && wget https://www.roboti.us/download/mjpro150_linux.zip -O mujoco150.zip \\\n    && unzip mujoco150.zip -d /root/.mujoco \\\n    && rm mujoco150.zip \\\n    && wget https://www.roboti.us/download/mjpro131_linux.zip -O mujoco131.zip \\\n    && unzip mujoco131.zip -d /root/.mujoco \\\n    && rm mujoco131.zip\n\nCOPY vendor/Xdummy /usr/local/bin/Xdummy\nRUN chmod +x /usr/local/bin/Xdummy\n\nWORKDIR /adversarial-policies\nARG MUJOCO_KEY\n# Copy over just requirements.txt at first. That way, the Docker cache doesn't\n# expire until we actually change the requirements.\nCOPY ./requirements-build.txt /adversarial-policies/\nCOPY ./requirements.txt /adversarial-policies/\nCOPY ./requirements-aprl.txt /adversarial-policies/\nCOPY ./requirements-modelfree.txt /adversarial-policies/\nCOPY ./ci/build_venv.sh /adversarial-policies/ci/build_venv.sh\nRUN curl -f -o /root/.mujoco/mjkey.txt ${MUJOCO_KEY} \\\n    && parallel ci/build_venv.sh {} ::: aprl modelfree \\\n    && rm /root/.mujoco/mjkey.txt\n\n# Delay copying (and installing) the code until the very end\nCOPY . /adversarial-policies\n# Build a wheel then install to avoid copying whole directory (pip issue #2195)\nRUN python3 setup.py sdist bdist_wheel\nRUN parallel \". {}venv/bin/activate && \\\n              pip install dist/aprl-*.whl\" ::: aprl modelfree\n\n# Default entrypoints\nENTRYPOINT [\"/adversarial-policies/vendor/Xdummy-entrypoint\"]\nCMD [\"ci/run_tests.sh\"]\n\n"
}