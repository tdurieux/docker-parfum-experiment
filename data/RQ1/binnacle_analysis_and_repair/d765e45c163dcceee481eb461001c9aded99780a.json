{
  "startTime": 1674249761348,
  "endTime": 1674249761439,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\n\nARG python_version=\"3.6\"\nARG cloud_build=\"false\"\nARG release_version=\"nightly\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y git sudo python-pip python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/pytorch/pytorch\n\n# To get around issue of Cloud Build with recursive submodule update\n# clone recursively from pytorch/xla if building docker image with\n# cloud build. Otherwise, just use local.\n# https://github.com/GoogleCloudPlatform/cloud-builders/issues/435\nCOPY . /pytorch/xla\nRUN if [ \"${cloud_build}\" = true ]; then github_branch=\"${release_version}\" && \\\n  if [ \"${release_version}\" = \"nightly\" ]; then github_branch=\"master\"; fi && \\\n  cd /pytorch && rm -rf xla && git clone -b \"${github_branch}\" --recursive https://github.com/pytorch/xla; fi\n\nRUN cd pytorch && bash xla/scripts/build_torch_wheels.sh ${python_version}\n\n# Use conda environment on startup or when running scripts.\nRUN echo \"source activate pytorch\" >> ~/.bashrc\nENV PATH /root/anaconda3/envs/pytorch/bin/:$PATH\n"
}