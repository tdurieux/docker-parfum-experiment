{
  "startTime": 1674248103882,
  "endTime": 1674248105309,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 12,
        "columnEnd": 84
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 12,
        "columnEnd": 66
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 12,
        "columnEnd": 57
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 12,
        "columnEnd": 59
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 12,
        "columnEnd": 58
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 178,
        "lineEnd": 178,
        "columnStart": 12,
        "columnEnd": 60
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 0,
        "columnEnd": 11
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 0,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 77,
        "columnStart": 21,
        "columnEnd": 14
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 0,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 0,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 0,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 0,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 0,
        "columnEnd": 11
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 160,
        "lineEnd": 160,
        "columnStart": 0,
        "columnEnd": 184
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 0,
        "columnEnd": 44
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 182,
        "lineEnd": 183,
        "columnStart": 0,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 194,
        "lineEnd": 194,
        "columnStart": 0,
        "columnEnd": 59
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 12,
        "columnEnd": 39
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 7,
        "columnStart": 0,
        "columnEnd": 79
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 0,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos\n\n# 安装工具\nRUN cd / && yum install -y epel-release && \\\nyum install -y wget vi gcc gcc-c++ autoconf libjpeg libcurl libcurl-devel libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel \\\nzlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel \\\nlibidn libidn-devel openssl openssl-devel openldap openldap-devel nss_ldap openldap-clients openldap-servers libxslt libxslt-devel libevent-devel \\\niconv libmcrypt libmcrypt-devel libicu-devel re2c bison bzip2 bzip2-devel unzip; rm -rf /var/cache/yum yum clean all && \\\nldconfig\n\n# 安装libzip的安装工具cmake https://cmake.org/files/\nRUN cd / && wget https://cmake.org/files/v3.12/cmake-3.12.0-rc1.tar.gz && \\\ntar -zxvf cmake-3.12.0-rc1.tar.gz && \\\ncd /cmake-3.12.0-rc1 && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\nrm -f /cmake-3.12.0-rc1.tar.gz && \\\nrm -rf /cmake-3.12.0-rc1\n\n# 安装libzip库 https://libzip.org/download/\nRUN cd / && wget https://libzip.org/download/libzip-1.5.1.tar.gz && \\\ntar -xf libzip-1.5.1.tar.gz && \\\ncd /libzip* && \\\nmkdir build && cd build && cmake .. && make && make install && \\\nrm -f /libzip-1.5.1.tar.gz && \\\nrm -rf /libzip-1.5.1\n\n# 安装ICU库(为了安装intl扩展 owncloud用到)\nRUN cd / && wget https://download.icu-project.org/files/icu4c/62rc/icu4c-62rc-src.tgz && \\\ntar xf icu4c-62rc-src.tgz && \\\ncd icu/source && \\\nmkdir /usr/local/icu && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/icu && \\\nmake && make install && \\\nrm -f /icu4c-62rc-src.tgz && \\\nrm -rf /icu\n\n# 下载并解压源码包\nRUN cd / && wget https://jp2.php.net/distributions/php-7.2.6.tar.gz && \\\ntar -zxvf php-7.2.6.tar.gz && rm php-7.2.6.tar.gz\n# 编译安装\nRUN cd /php-7.2.6 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/php \\\n --with-curl \\\n --with-freetype-dir \\\n --with-jpeg-dir \\\n --with-gd \\\n --with-gettext \\\n --with-iconv-dir \\\n --with-kerberos \\\n --with-libdir=lib64 \\\n --with-libxml-dir \\\n --with-mysqli \\\n --with-openssl \\\n --with-pcre-regex \\\n --with-pdo-mysql \\\n --with-pdo-sqlite \\\n --with-pear \\\n --with-png-dir \\\n --with-xmlrpc \\\n --with-xsl \\\n --with-zlib \\\n --with-mhash \\\n --with-libzip \\\n --enable-fpm \\\n --enable-bcmath \\\n --enable-libxml \\\n --enable-inline-optimization \\\n --enable-mbregex \\\n --enable-mbstring \\\n --enable-opcache \\\n --enable-pcntl \\\n --enable-shmop \\\n --enable-soap \\\n --enable-sockets \\\n --enable-sysvsem \\\n --enable-xml \\\n --enable-zip \\\n --enable-simplexml \\\n --enable-intl && \\\nmake && make install && \\\ncp php.ini-production /usr/local/php/lib/php.ini && \\\ncp sapi/fpm/init.d.php-fpm /usr/local/php/etc/php-fpm && \\\nsed -i 's/ --daemonize//g' /usr/local/php/etc/php-fpm && \\\nchmod +x /usr/local/php/etc/php-fpm && \\\ncp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf && \\\ncp /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf && \\\nsed -i 's/^;daemonize = yes/daemonize = no/g' /usr/local/php/etc/php-fpm.conf && \\\nsed -i 's/^listen = 127\\.0\\.0\\.1\\:9000/listen = 9000/g' /usr/local/php/etc/php-fpm.d/www.conf && \\\nrm -rf /php-7.2.6 && \\\nrm -f /php-7.2.6.tar.gz\n\n\n#下载mcrypt扩展\nRUN cd / && wget https://pecl.php.net/get/mcrypt-1.0.1.tgz && \\\ntar -zxvf mcrypt-1.0.1.tgz && \\\ncd mcrypt-1.0.1 && \\\n/usr/local/php/bin/phpize && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/usr/local/php/bin/php-config && \\\nmake && make install && \\\necho \"extension_dir=/usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/\">>/usr/local/php/lib/php.ini && \\\necho \"extension=mcrypt.so\">>/usr/local/php/lib/php.ini && \\\nrm -rf /mcrypt-1.0.1 && \\\nrm -f /mcrypt-1.0.1.tgz\n\n# 安装memcached 依赖库igbinary http://pecl.php.net/package/igbinary\nRUN cd / && wget https://pecl.php.net/get/igbinary-2.0.6.tgz && \\\ntar -zxvf igbinary-2.0.6.tgz && \\\ncd igbinary-2.0.6 && \\\n/usr/local/php/bin/phpize && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/usr/local/php/bin/php-config && \\\nmake && make install && \\\necho \"extension=igbinary.so\">>/usr/local/php/lib/php.ini && \\\nrm -f /igbinary-2.0.6.tgz && \\\nrm -rf /igbinary-2.0.6\n\n# 安装memcached 依赖库msgpack http://pecl.php.net/package/msgpack\nRUN cd / && wget https://pecl.php.net/get/msgpack-2.0.2.tgz && \\\ntar -zxvf msgpack-2.0.2.tgz && \\\ncd msgpack-2.0.2 && \\\n/usr/local/php/bin/phpize && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/usr/local/php/bin/php-config && \\\nmake && make install && \\\necho \"extension=msgpack.so\">>/usr/local/php/lib/php.ini && \\\nrm -f /msgpack-2.0.2.tgz && \\\nrm -rf /msgpack-2.0.2\n\n# 安装redis依赖库hiredis https://github.com/redis/hiredis/releases\nRUN cd / && wget https://github.com/redis/hiredis/archive/v0.13.3.tar.gz && \\\ntar -zxvf v0.13.3.tar.gz && \\\ncd hiredis-0.13.3/ && \\\nmake && make install && \\\nldconfig && \\\nrm -f /v0.13.3.tar.gz && \\\nrm -rf /hiredis-0.13.3\n\n# 安装redis https://github.com/phpredis/phpredis/releases\nRUN cd / && wget https://github.com/phpredis/phpredis/archive/4.1.0RC1.tar.gz && \\\ntar -zxvf 4.1.0RC1.tar.gz && \\\ncd phpredis-4.1.0RC1/ && \\\n/usr/local/php/bin/phpize && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/usr/local/php/bin/php-config && \\\nmake && \\\nmake install && \\\necho \"extension=redis.so\">>/usr/local/php/lib/php.ini && \\\nrm -f /4.1.0RC1.tar.gz && \\\nrm -rf /phpredis-4.1.0RC1\n\n# 安装 http2依赖库 nghttp2   https://github.com/nghttp2/nghttp2/releases/\nRUN cd / && wget https://github.com/nghttp2/nghttp2/releases/download/v1.32.0/nghttp2-1.32.0.tar.gz && \\\ntar -zxvf nghttp2-1.32.0.tar.gz && \\\ncd nghttp2-1.32.0/ && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\nmake && make install && \\\nrm -f /nghttp2-1.32.0.tar.gz && \\\nrm -rf /nghttp2-1.32.0\n\n# 安装swoole https://github.com/swoole/swoole-src/releases\nRUN cd / && wget https://github.com/swoole/swoole-src/archive/v4.0.0.tar.gz && \\\ntar -zxvf v4.0.0.tar.gz && \\\ncd swoole-src-4.0.0/ && \\\n/usr/local/php/bin/phpize && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-sockets --enable-openssl --enable-http2 --enable-async-redis --enable-timewheel --enable-mysqlnd --enable-coroutine --with-php-config=/usr/local/php/bin/php-config && \\\nmake clean && make && make install && \\\necho \"extension=swoole.so\">>/usr/local/php/lib/php.ini && \\\necho \"/usr/local/lib\">>/etc/ld.so.conf && \\\nldconfig && \\\nrm -f /v4.0.0.tar.gz && \\\nrm -rf /swoole-src-4.0.0\n\n# 安装memcached 依赖库 libmemcached  https://launchpad.net/libmemcached/\nRUN cd / && wget https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gz && \\\ntar -zxvf libmemcached-1.0.18.tar.gz && \\\ncd libmemcached-1.0.18 && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/libmemcached && \\\nmake && make install && \\\nrm -f /libmemcached-1.0.18.tar.gz && \\\nrm -rf /libmemcached-1.0.18\n\n# 安装http://pecl.php.net/package/memcached\nRUN cd / && wget https://pecl.php.net/get/memcached-3.0.4.tgz && \\\ntar -zxvf memcached-3.0.4.tgz && \\\ncd memcached-3.0.4 && \\\n/usr/local/php/bin/phpize && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/usr/local/php/bin/php-config --with-libmemcached-dir=/usr/local/libmemcached --enable-memcached-igbinary \\\n--enable-memcached-json --enable-memcached-msgpack && \\\nmake && make install && \\\necho \"extension=memcached.so\">>/usr/local/php/lib/php.ini && \\\nrm -f /memcached-3.0.4.tgz && \\\nrm -rf /memcached-3.0.4\n\n# 安装 php screw plus  https://codeload.github.com/del-xiong/screw-plus/zip/master\nRUN cd / && wget https://codeload.github.com/del-xiong/screw-plus/zip/master && \\\nunzip master && \\\ncd /screw-plus-master && \\\n/usr/local/php/bin/phpize && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/usr/local/php/bin/php-config && \\\nmake && \\\ncp /screw-plus-master/modules/php_screw_plus.so /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/ && \\\necho \"extension=php_screw_plus.so\">>/usr/local/php/lib/php.ini && \\\ncd /screw-plus-master/tools && \\\nmake && \\\nrm -f /master\n#rm -rf /screw-plus-master\n\n# 创建好挂载目录\nRUN mkdir -p /data/php/log && mkdir -p /data/nginx/www\n\n# 设置时区\nRUN cp -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo \"Asia/Shanghai\" > /etc/timezone\n\n# 启动php服务\nRUN chmod +x /usr/local/php/etc/php-fpm && /usr/local/php/etc/php-fpm start &\n\n# 设置环境变量\nENV PATH=$PATH:/usr/local/php/etc:/usr/local/php/bin\n\n#设置生成容器时需要执行的脚本\n#ENTRYPOINT [\"/usr/local/php/sbin/php-fpm\"]\nCMD [ \"php-fpm\", \"start\" ]\n\n#开放9000端口\nEXPOSE 9000\n"
}