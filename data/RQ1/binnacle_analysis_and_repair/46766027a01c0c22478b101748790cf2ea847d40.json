{
  "startTime": 1674238896900,
  "endTime": 1674238896974,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# Install prerequisites\nRUN apt-get update -y && apt-get install --no-install-recommends -y curl git qemu && rm -rf /var/lib/apt/lists/*;\n\n# Install GO\nRUN curl -f https://storage.googleapis.com/golang/go1.7.4.linux-amd64.tar.gz | tar xz -C /usr/local && \\\n    mv /usr/local/go /usr/local/go1.7 && \\\n    ln -s /usr/local/go1.7 /usr/local/go\nENV GOPATH=/go\nENV GOBIN=$GOPATH/bin\nENV PATH=$GOBIN:/usr/local/go/bin:$PATH\n\n# Build Capstan from source (use mikelangelo-project fork that supports package management)\nRUN go get github.com/mikelangelo-project/capstan && \\      \n    go install github.com/mikelangelo-project/capstan\n\n# Copy files needed by docker container\nCOPY docker_files/root /root\n\n# Create mount point directory\nRUN mkdir /project_directory\n\n# Compose boot image and copy it to /project_directory (unik expects it there as a result)\nCMD cd /project_directory && \\\n    capstan pull mike/osv-loader && \\\n    capstan package compose unik/dynamic-image --pull-missing --size $MAX_IMAGE_SIZE && \\\t\n    cp /root/.capstan/repository/unik/dynamic-image/dynamic-image.qemu /project_directory/boot.qcow2\n\n#\n# NOTES\n#\n# Build this container with:\n# docker build -t projectunik/compilers-osv-dynamic:v0.0 . --no-cache\n#\n# Run this container with:\n# docker run -ti --volume=\"$PWD:/project_directory\" --env MAX_IMAGE_SIZE=500MB projectunik/compilers-osv-dynamic:v0.0\n#\n"
}