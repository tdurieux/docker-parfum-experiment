{
  "startTime": 1674251407549,
  "endTime": 1674251407604,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM haskell:8.6 as build\nWORKDIR /build\n\n# Build and cache the dependencies first so we can cache these layers.\nCOPY semantic.cabal .\nCOPY semantic-core semantic-core\nRUN cabal new-update hackage.haskell.org,HEAD\nRUN cabal new-configure semantic semantic-core\nRUN cabal new-build --only-dependencies\n\n# Copy in and build the entire project\nCOPY . .\nRUN cabal new-build --flags=\"release\" semantic:exe:semantic\n\n# A fake `install` target until we can get `cabal new-install` to work\nRUN cp $(find dist-newstyle/build/x86_64-linux -name semantic -type f -perm -u=x) /usr/local/bin/semantic\n\n# Create a fresh image containing only the compiled CLI program, so that the\n# image isn't bulked up by all of the extra build state.\nFROM debian:stretch-slim\n\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y \\\n    libgmp10 \\\n    && \\\n  apt-get autoremove -y && \\\n  apt-get clean -y && \\\n  rm -rf /var/lib/apt/lists/*\n\nCOPY --from=build /usr/local/bin/semantic /usr/local/bin/semantic\n\nENTRYPOINT [\"/usr/local/bin/semantic\"]\n"
}