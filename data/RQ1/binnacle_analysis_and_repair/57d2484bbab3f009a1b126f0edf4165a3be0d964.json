{
  "startTime": 1674246158525,
  "endTime": 1674246159403,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 28,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 49,
        "columnEnd": 1115
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 108,
        "columnEnd": 119
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 595
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 54,
        "columnEnd": 125
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "#Docker Static File Analysis (SFA)\nFROM debian:buster\nMAINTAINER Lionel PRAT <lionel.prat9@gmail.com>\n\nRUN apt-get update && apt-get install --no-install-recommends -y curl hexedit build-essential git python-pip libjson-c-dev libxml2-dev libssl-dev libbz2-dev python-dev python-virtualenv xdot openssl vim zlib1g-dbg zlib1g zlib1g-dev cron devscripts libtesseract-dev tesseract-ocr-all procyon-decompiler python-setuptools libboost-python-dev libboost-all-dev libxslt-dev libtool graphviz-dev automake libffi-dev graphviz libfuzzy-dev libjpeg-dev pkg-config autoconf python-setuptools clang python-backports.functools-lru-cache nano python-m2crypto python-lzma strace ltrace wget bsdmainutils unzip && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -sL https://deb.nodesource.com/setup_11.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\nRUN rm -rf /var/lib/apt/lists/*\nRUN cd /opt/ && git clone https://github.com/lprat/static_file_analysis\nRUN cd /opt/static_file_analysis && git clone https://github.com/vrtadmin/clamav-devel\nRUN cd /opt/static_file_analysis/clamav-devel && CC=gcc CXX=c++ CFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2\" CPPFLAGS=\"-Wdate-time -D_FORTIFY_SOURCE=2\" CXXFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2\" FCFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -D_FORTIFY_SOURCE=2\" FFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -D_FORTIFY_SOURCE=2\" GCJFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong\" LDFLAGS=\"-Wl,-z,relro -Wl,-z,now\" OBJCFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -Wformat -Werror=format-security\" OBJCXXFLAGS=\"-g -O2 -fdebug-prefix-map=/opt/static_file_analysis/clamav-devel=. -fstack-protector-strong -Wformat -Werror=format-security\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static --with-libjson && make\n\n#bug to install hashlib\nRUN rm -f /usr/lib/python2.7/lib-dynload/_hashlib.x86_64-linux-gnu.so\n\nWORKDIR /opt/\n\n#install pygrah & pyv8 for thug (compile with clang because gcc >6 make error segmentation fault\n#RUN easy_install -U setuptools pygraphviz==1.3.1\nENV CXX clang++\nRUN python /usr/lib/python2.7/dist-packages/easy_install.py -U setuptools pygraphviz==1.3.1\n#ref: https://github.com/ibmdb/node-ibm_db/issues/276\nRUN git clone https://github.com/buffer/pyv8.git\nCOPY v8.patch /tmp\nRUN cd pyv8 && python setup.py build || cd build/v8_r19632/ && patch include/v8.h /tmp/v8.patch && cd ../.. && python setup.py build\nRUN cd pyv8 && python setup.py install && cd .. && rm -rf pyv8\nCOPY libemu.conf /etc/ld.so.conf.d/libemu.conf\nRUN ldconfig\n\n#install hashlib pydot yara flask\nRUN pip install --no-cache-dir -U wheel && pip install --no-cache-dir setuptools --upgrade\nRUN pip install --no-cache-dir -U pydot yara-python hashlib flask gunicorn soupsieve thug virustotal-api\n#RUN cp -R /usr/local/lib/python2.7/dist-packages/etc/thug /etc/thug && mkdir /etc/thug/plugins/ && mkdir /etc/thug/hooks/\n\n#install vmonkey\nRUN pip install --no-cache-dir -U https://github.com/decalage2/ViperMonkey/archive/master.zip\n\n#install emulator js\nRUN curl -f -sL https://deb.nodesource.com/setup_11.x | bash -\nRUN curl -f -0 -L https://npmjs.org/install.sh | sh\nRUN npm install box-js --global && npm cache clean --force;\n\n#install foss - https://github.com/fireeye/flare-floss\nRUN wget https://s3.amazonaws.com/build-artifacts.floss.flare.fireeye.com/travis/linux/dist/floss -O /usr/local/bin/foss && chmod +x /usr/local/bin/foss\n\n#install peepdf\nRUN cd /opt && git clone https://github.com/jesparza/peepdf\n\n#install binwalk\nRUN cd /opt && git clone https://github.com/ReFirmLabs/binwalk && cd binwalk && python setup.py install\n\n#install frida\nRUN pip install --no-cache-dir -U frida-tools\n\n#install apktool (https://github.com/iBotPeaches/Apktool) + (https://bitbucket.org/iBotPeaches/apktool/downloads/)\nRUN wget https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool -O /usr/local/bin/apktool && wget https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.4.0.jar -O /usr/local/bin/apktool.jar && chmod +x /usr/local/bin/apktool*\n\n#install mbox (https://github.com/tsgates/mbox)\nRUN cd /opt && git clone https://github.com/tsgates/mbox && cd mbox/src && cp .configsbox.h configsbox.h && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\n#install pyinstaller extractor https://sourceforge.net/projects/pyinstallerextractor/\nRUN wget https://freefr.dl.sourceforge.net/project/pyinstallerextractor/dist/pyinstxtractor.py -O /usr/local/bin/pyinstxtractor.py && chmod +x /usr/local/bin/pyinstxtractor.py\n\n#install unpy2exe - https://github.com/matiasb/unpy2exe & uncompyle6 https://github.com/rocky/python-uncompyle6\nRUN pip install --no-cache-dir -U unpy2exe uncompyle6\n\n#make auto signed cert\nRUN cd /opt/static_file_analysis/api && openssl req -x509 -newkey rsa:4096 -nodes -out cert.pem -keyout key.pem -days 365  -subj '/CN=localdomain/O=SFA/C=FR'\n\n#make install wine & decompiler vb decompiler & decompiler delphi idr https://github.com/crypto2011/IDR/releases\nRUN sed -i 's/ main/ main contrib/g' /etc/apt/sources.list\nRUN sed -i 's/ main contrib/ main contrib non-free/' /etc/apt/sources.list\nRUN dpkg --add-architecture i386 && apt-get update && apt-get install --no-install-recommends -y wine wine32 winetricks unrar && wine wineboot --init && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y default-jre && rm -rf /var/lib/apt/lists/*;\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir /opt/decompiler\nCOPY tools/vb_decompiler_lite.exe /opt/decompiler/\nCOPY tools/Exe2Aut.exe /opt/decompiler/\nRUN wget https://github.com/crypto2011/IDR/releases/download/27_01_2019/Idr.exe -O /opt/decompiler/Idr.exe\n##idr error message: cannot initialize diasm\n\n#install ffdec - https://github.com/jindrapetrik/jpexs-decompiler/releases -- installed by apt\nRUN wget https://github.com/jindrapetrik/jpexs-decompiler/releases/download/nightly1715/ffdec_11.2.0_nightly1715.deb -O /tmp/ffdec_11.2.0_nightly1715.deb && dpkg -i /tmp/ffdec_11.2.0_nightly1715.deb && rm /tmp/ffdec_11.2.0_nightly1715.deb\n\n#add script to update git\nADD git_update.sh /opt/git_update.sh\nRUN chmod 0755 /opt/git_update.sh\n\n# Add crontab file in the cron directory\nADD crontab_update /etc/cron.d/git-update-cron\n\n# Give execution rights on the cron job\nRUN chmod 0644 /etc/cron.d/git-update-cron\n\n#add entrypoint\nADD docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod 0755 /docker-entrypoint.sh\nRUN useradd -ms /bin/bash user && chown -R user:user /opt/static_file_analysis/\nWORKDIR /opt/static_file_analysis/\nUSER user\nRUN wine wineboot --init\nEXPOSE 8000\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n#CMD [\"git pull;/bin/bash\"]\n"
}