{
  "startTime": 1674240087001,
  "endTime": 1674240087172,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 1,
        "columnEnd": 47
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 1,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 1,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 1,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 1,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 1,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Docker container for Cuckoo malware sandbox\n#\n\nFROM ubuntu:16.04\nMAINTAINER Jacob Gajek <jacob.gajek@esentire.com>\n\nWORKDIR /tmp/docker/build\n\nCOPY packages.txt /tmp/\nCOPY requirements.txt /tmp/\n\n# Install the dependencies\nRUN apt-get update &&\\\n xargs apt-get install -y < /tmp/packages.txt &&\\\n rm /tmp/packages.txt &&\\\n apt-get clean\n\n# Install Python requirements\nRUN pip install --no-cache-dir -r /tmp/requirements.txt && \\\n rm /tmp/requirements.txt\n\n# Fetch and install Tor\nRUN echo \"deb http://deb.torproject.org/torproject.org xenial main\" > /etc/apt/sources.list.d/torproject.list && \\\n gpg --batch --keyserver keys.gnupg.net --recv 886DDD89 && \\\n gpg --batch --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | apt-key add - && \\\n apt-get update && \\\n apt-get install --no-install-recommends -y tor deb.torproject.org-keyring && rm -rf /var/lib/apt/lists/*;\n\n# Fetch and install Suricata\nRUN add-apt-repository ppa:oisf/suricata-beta &&\\\n apt-get update && \\\n apt-get install --no-install-recommends -y suricata && rm -rf /var/lib/apt/lists/*;\n\n# Replace the default Suricata configuration files\nCOPY suricata/suricata          /etc/default/suricata\nCOPY suricata/suricata.yaml     /etc/suricata/suricata.yaml\nCOPY suricata/cuckoo.rules      /etc/suricata/rules/cuckoo.rules\nCOPY oinkmaster/oinkmaster.conf\t/etc/oinkmaster.conf\n\n# Replace nginx default site\nCOPY nginx/nginx.conf           /etc/nginx/sites-enabled/default\n\n# Create directory for Cuckoo\nRUN mkdir -p /opt/sandbox/suricata\n\n# Copy over configuration files\nCOPY supervisor/supervisord.conf  \t/opt/sandbox/supervisor/supervisord.conf\nCOPY supervisor/oinkmaster-event.py\t/opt/sandbox/supervisor/oinkmaster-event.py\nCOPY uwsgi/django.ini             \t/opt/sandbox/uwsgi/django.ini\nCOPY uwsgi/api.ini                \t/opt/sandbox/uwsgi/api.ini\nCOPY startup.sh                   \t/opt/sandbox/startup.sh\n\n# Clone Cuckoo from Github repo\nRUN cd /opt/sandbox &&\\\n git clone https://github.com/spender-sandbox/cuckoo-modified.git\n\n# Install community modules\nRUN python /opt/sandbox/cuckoo-modified/utils/community.py -a -f\n\n# Copy binaries to the analyzer directory\nCOPY signtool.exe\t/opt/sandbox/cuckoo-modified/analyzer/windows/bin/signtool.exe\nCOPY flashplayer.exe\t/opt/sandbox/cuckoo-modified/analyzer/windows/bin/flashplayer.exe\n\n# Clone routetor from Github repo\nRUN cd /opt/sandbox &&\\\n git clone http://github.com/jgajek/routetor.git\n\n# Adjust directory ownership\nRUN useradd sandbox &&\\\n chown -R sandbox:sandbox /opt/sandbox\n\n# Permit capture capability for non-root users\nRUN chmod u+s `which tcpdump`\n\n# Expose the Cuckoo network ports\nEXPOSE 80 2042 5353 8090 9040\n\n# Set the entry point\nENTRYPOINT [\"/opt/sandbox/startup.sh\"]\n"
}