{
  "startTime": 1674246902437,
  "endTime": 1674246903373,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 135
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 95
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 92
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 25,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:wheezy\nMAINTAINER Scott Kidder <kidder.scott@gmail.com>\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r aprs && useradd -r -g aprs aprs\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y curl \\\n    && rm -rf /var/lib/apt/lists/*\n\n# grab gosu for easy step-down from root\nRUN gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4\nRUN curl -f -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-architecture)\" \\\n    && curl -f -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-architecture).asc\" \\\n    && gpg --batch --verify /usr/local/bin/gosu.asc \\\n    && rm /usr/local/bin/gosu.asc \\\n    && chmod +x /usr/local/bin/gosu\n\nRUN buildDeps='wget'; \\\n    set -x \\\n    && apt-get update && apt-get install -y $buildDeps --no-install-recommends \\\n    && cd ${HOME} \\\n    && wget https://www.pakettiradio.net/downloads/libfap/1.3/deb_amd64/libfap-dev_1.3_amd64.deb \\\n    && wget https://www.pakettiradio.net/downloads/libfap/1.3/deb_amd64/libfap5_1.3_amd64.deb \\\n    && dpkg -i libfap-dev_1.3_amd64.deb libfap5_1.3_amd64.deb \\\n    && rm -f libfap-dev_1.3_amd64.deb libfap5_1.3_amd64.deb \\\n    && apt-get purge -y --auto-remove $buildDeps && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /data && chown aprs:aprs /data\nVOLUME /data\nWORKDIR /data\nCOPY docker-entrypoint.sh /entrypoint.sh\nCOPY bin/aprs-dashboard /aprs-dashboard\nENTRYPOINT [\"/entrypoint.sh\"]\n\nEXPOSE 3000\nEXPOSE 3100\nCMD [\"/aprs-dashboard\"]\n"
}