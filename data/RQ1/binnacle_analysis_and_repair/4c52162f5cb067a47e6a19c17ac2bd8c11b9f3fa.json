{
  "startTime": 1674235452635,
  "endTime": 1674235452798,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.9.4 as deps\n\nRUN apk add --no-cache build-base git npm yarn nodejs-dev go\n\nARG GRAFANA_VERSION\nARG GRAFANA_CHECKSUM\n\n# Build grafana binaries\nRUN mkdir -p ~/go/src/github.com/grafana \\\n && cd ~/go/src/github.com/grafana \\\n && wget -q https://github.com/grafana/grafana/archive/v$GRAFANA_VERSION.tar.gz -O grafana.tar.gz \\\n && sha256sum grafana.tar.gz \\\n && echo \"$GRAFANA_CHECKSUM  grafana.tar.gz\" | sha256sum -c \\\n && tar xf grafana.tar.gz \\\n && mv grafana-$GRAFANA_VERSION grafana \\\n && cd grafana \\\n && GOPATH=~/go go run build.go setup \\\n && GOPATH=~/go go run build.go build && rm grafana.tar.gz\n\n# Build grafana static\nRUN cd ~/go/src/github.com/grafana/grafana \\\n && yarn install --pure-lockfile \\\n && npm run build && yarn cache clean;\n\n# Prepare artifact\nRUN mkdir /grafana \\\n && cd ~/go/src/github.com/grafana/grafana \\\n && cp -a conf bin public /grafana \\\n && mv /grafana/bin/linux-amd64/* /grafana/bin/\n\n\nFROM alpine:3.9.4\nRUN apk add --no-cache ca-certificates\nCOPY --from=deps /grafana /grafana\nCOPY grafana.ini /grafana/conf\nWORKDIR /grafana\nENTRYPOINT [\"/grafana/bin/grafana-server\", \"--config\", \"/grafana/conf/grafana.ini\"]\n"
}