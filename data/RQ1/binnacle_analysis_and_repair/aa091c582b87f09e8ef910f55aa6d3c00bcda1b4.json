{
  "startTime": 1674245213404,
  "endTime": 1674245213541,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:edge\nMAINTAINER Etopian Inc. <contact@etopian.com>\n\n\n\nLABEL   devoply.type=\"site\" \\\n        devoply.cms=\"koel\" \\\n        devoply.framework=\"laravel\" \\\n        devoply.language=\"php\" \\\n        devoply.require=\"mariadb etopian/nginx-proxy\" \\\n        devoply.description=\"Koel music player.\" \\\n        devoply.name=\"Koel\" \\\n        devoply.params=\"docker run -d --name {container_name} -e VIRTUAL_HOST={virtual_hosts} -v /data/sites/{domain_name}:/DATA etopian/docker-koel\"\n\n\nRUN apk update \\\n    && apk add --no-cache bash less vim nginx ca-certificates nodejs \\\n    php-fpm php-json php-zlib php-xml php-pdo php-phar php-openssl \\\n    php-pdo_mysql php-mysqli \\\n    php-gd php-iconv php-mcrypt \\\n    php-mysql php-curl php-opcache php-ctype php-apcu \\\n    php-intl php-bcmath php-dom php-xmlreader php-xsl mysql-client \\\n    git build-base python \\\n    && apk add --no-cache -u musl\n\nRUN rm -rf /var/cache/apk/*\n\nENV TERM=\"xterm\" \\\n    DB_HOST=\"172.17.0.1\" \\\n    DB_DATABASE=\"\" \\\n    DB_USERNAME=\"\"\\\n    DB_PASSWORD=\"\"\\\n    ADMIN_EMAIL=\"\"\\\n    ADMIN_NAME=\"\"\\\n    ADMIN_PASSWORD=\"\"\\\n    APP_DEBUG=false\\\n    AP_ENV=production\n\n\nVOLUME [\"/DATA/music\"]\n\n\n\nRUN sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /etc/php/php.ini && \\\n    sed -i 's/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/sbin\\/nologin/nginx:x:100:101:Linux User,,,:\\/DATA:\\/bin\\/bash/g' /etc/passwd && \\\n    sed -i 's/nginx:x:100:101:Linux User,,,:\\/var\\/www\\/localhost\\/htdocs:\\/sbin\\/nologin/nginx:x:100:101:Linux User,,,:\\/DATA:\\/bin\\/bash/g' /etc/passwd-\n\nADD files/nginx.conf /etc/nginx/\nADD files/php-fpm.conf /etc/php/\nADD files/run.sh /\nRUN chmod +x /run.sh && chown -R nginx:nginx /DATA\n\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer\n\n\nRUN su nginx -c \"git clone https://github.com/phanan/koel /DATA/htdocs &&\\\n    cd /DATA/htdocs &&\\\n    npm install &&\\\n    composer config github-oauth.github.com  2084a22e9bdb38f94d081ab6f2d5fd339b5292e8 &&\\\n    composer install\"\n\n#clean up\nRUN apk del --purge git build-base python nodejs\n\n\nCOPY files/.env /DATA/htdocs/.env\n\nRUN chown nginx:nginx /DATA/htdocs/.env\n\n#RUN su nginx -c \"cd /DATA/htdocs && php artisan init\"\n\nEXPOSE 80\nCMD [\"/run.sh\"]\n"
}