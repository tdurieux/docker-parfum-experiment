{
  "startTime": 1674238966130,
  "endTime": 1674238966222,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 31,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Ruby visualizer backend using a custom-compiled version of Ruby (MRI) 2.2\n\n# to build:\n# docker build -t=\"pgbovine/cokapi-ruby:v1\" .\n#\n# to test:\n# docker run -t -i --rm --user=netuser --net=none --cap-drop all pgbovine/cokapi-ruby:v1 bash\n#\n# remember --rm or else stale old containers will be left around!\n# use \"docker ps -a\" to see all containers\n\n# don't use 'latest' tag since that might change\nFROM ubuntu:14.04.1\nMAINTAINER Philip Guo <philip@pgbovine.net>\n\n# if apt-get doesn't work, then follow these instructions:\n# http://stackoverflow.com/questions/24991136/docker-build-could-not-resolve-archive-ubuntu-com-apt-get-fails-to-install-a\n# Uncomment the following line in /etc/default/docker DOCKER_OPTS=\"--dns 8.8.8.8 --dns 8.8.4.4\"\n# Restart the Docker service sudo service docker restart\n#\n# lots of packages required especially to build ruby and to use the compiled version of 'gem'\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  python \\\n  build-essential \\\n  zlibc \\\n  zlib1g \\\n  zlib1g-dev \\\n  libssl-dev && rm -rf /var/lib/apt/lists/*;\n\n\n# Ruby backend: pretty complex setup since we need to compile and\n# install a custom Ruby interpreter\n#\n# run all of this stuff early so that we don't invalidate the cache\nRUN mkdir /tmp/ruby\n# automatically untars\nADD custom-ruby-interpreter/ruby-2.2.2.tar.gz /tmp/ruby\nADD custom-ruby-interpreter/altered-files /tmp/ruby/ruby-2.2.2\nRUN mkdir /tmp/ruby/ruby-2.2.2-custom-OPT/\nRUN cd /tmp/ruby/ruby-2.2.2 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/tmp/ruby/ruby-2.2.2-custom-OPT/\n# beware takes a long time! so make sure we cache the build\nRUN cd /tmp/ruby/ruby-2.2.2 && make && make install\n# install custom gem\n# specify a non-https source in .gemrc to avoid certificate problems\nCOPY .gemrc /root\nRUN /tmp/ruby/ruby-2.2.2-custom-OPT/bin/gem install debug_inspector\n\nCOPY pg_logger.rb /tmp/ruby/\nRUN cd /tmp/ruby && ln -s ruby-2.2.2-custom-OPT/bin/ruby\n\n# To properly run Ruby tests, run as root since it needs to write files\nCOPY golden_test.py /tmp/ruby/\nRUN mkdir /tmp/ruby/tests\nADD tests /tmp/ruby/tests\n\nRUN useradd netuser\n"
}