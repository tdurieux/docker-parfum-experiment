{
  "startTime": 1674233990127,
  "endTime": 1674233993438,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 450,
        "lineEnd": 450,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 506,
        "lineEnd": 506,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 91
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 7,
        "columnEnd": 90
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 7,
        "columnEnd": 103
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 7,
        "columnEnd": 84
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 7,
        "columnEnd": 111
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 234,
        "lineEnd": 234,
        "columnStart": 7,
        "columnEnd": 100
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 292,
        "lineEnd": 292,
        "columnStart": 7,
        "columnEnd": 88
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 7,
        "columnEnd": 47
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 140,
        "lineEnd": 142,
        "columnStart": 7,
        "columnEnd": 141
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 195,
        "lineEnd": 195,
        "columnStart": 7,
        "columnEnd": 83
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 207,
        "lineEnd": 207,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 222,
        "lineEnd": 222,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 237,
        "lineEnd": 281,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 295,
        "lineEnd": 295,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 303,
        "lineEnd": 303,
        "columnStart": 7,
        "columnEnd": 91
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 316,
        "lineEnd": 316,
        "columnStart": 7,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 333,
        "lineEnd": 333,
        "columnStart": 7,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 347,
        "lineEnd": 348,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 362,
        "lineEnd": 362,
        "columnStart": 7,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 376,
        "lineEnd": 376,
        "columnStart": 7,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 390,
        "lineEnd": 391,
        "columnStart": 7,
        "columnEnd": 94
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 404,
        "lineEnd": 404,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 418,
        "lineEnd": 418,
        "columnStart": 7,
        "columnEnd": 106
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 432,
        "lineEnd": 432,
        "columnStart": 7,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 471,
        "lineEnd": 471,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 498,
        "lineEnd": 498,
        "columnStart": 7,
        "columnEnd": 87
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 58,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 154,
        "lineEnd": 154,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 179,
        "lineEnd": 179,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 193,
        "lineEnd": 193,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 205,
        "lineEnd": 205,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 220,
        "lineEnd": 220,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 235,
        "lineEnd": 235,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 293,
        "lineEnd": 293,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 300,
        "lineEnd": 300,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 313,
        "lineEnd": 313,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 330,
        "lineEnd": 330,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 344,
        "lineEnd": 344,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 359,
        "lineEnd": 359,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 373,
        "lineEnd": 373,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 387,
        "lineEnd": 387,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 401,
        "lineEnd": 401,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 415,
        "lineEnd": 415,
        "columnStart": 7,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 429,
        "lineEnd": 429,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 469,
        "lineEnd": 469,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 495,
        "lineEnd": 495,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:centos6.9\nMAINTAINER pinguoops <pinguo-ops@camera360.com>\n\n# -----------------------------------------------------------------------------\n# Make src dir\n# -----------------------------------------------------------------------------\nENV HOME /home/worker\nENV SRC_DIR $HOME/src\nRUN mkdir -p ${SRC_DIR}\n#ADD src ${SRC_DIR}\n\n# -----------------------------------------------------------------------------\n# Install Development tools\n# -----------------------------------------------------------------------------\nRUN rpm --import /etc/pki/rpm-gpg/RPM* \\\n    && curl -f --silent --location https://raw.githubusercontent.com/nodesource/distributions/master/rpm/setup_6.x | bash - \\\n    && yum -y update \\\n    && yum groupinstall -y \"Development tools\" \\\n    && yum install -y gcc-c++ zlib-devel bzip2-devel openssl \\\n    openssl-devel ncurses-devel sqlite-devel wget \\\n    && rm -rf /var/cache/{yum,ldconfig}/* \\\n    && rm -rf /etc/ld.so.cache \\\n    && yum clean all && rm -rf /var/cache/yum\n\n# -----------------------------------------------------------------------------\n# Update Python to 2.7.x\n# -----------------------------------------------------------------------------\nRUN cd ${SRC_DIR} \\\n    && wget -q -O Python-2.7.13.tgz https://mirrors.sohu.com/python/2.7.13/Python-2.7.13.tgz \\\n    && tar zxf Python-2.7.13.tgz \\\n    && cd Python-2.7.13 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && mv /usr/bin/python /usr/bin/python.old \\\n    && rm -f /usr/bin/python-config \\\n    && ln -s /usr/local/bin/python /usr/bin/python \\\n    && ln -s /usr/local/bin/python-config /usr/bin/python-config \\\n    && ln -s /usr/local/include/python2.7/ /usr/include/python2.7 \\\n    && wget https://bootstrap.pypa.io/ez_setup.py -O - | python \\\n    && easy_install pip \\\n    && sed -in-place '1s%.*%#!/usr/bin/python2.6%' /usr/bin/yum \\\n    && cp -r /usr/lib/python2.6/site-packages/yum /usr/local/lib/python2.7/site-packages/ \\\n    && cp -r /usr/lib/python2.6/site-packages/rpmUtils /usr/local/lib/python2.7/site-packages/ \\\n    && cp -r /usr/lib/python2.6/site-packages/iniparse /usr/local/lib/python2.7/site-packages/ \\\n    && cp -r /usr/lib/python2.6/site-packages/urlgrabber /usr/local/lib/python2.7/site-packages/ \\\n    && cp -r /usr/lib64/python2.6/site-packages/rpm /usr/local/lib/python2.7/site-packages/ \\\n    && cp -r /usr/lib64/python2.6/site-packages/curl /usr/local/lib/python2.7/site-packages/ \\\n    && cp -p /usr/lib64/python2.6/site-packages/pycurl.so /usr/local/lib/python2.7/site-packages/ \\\n    && cp -p /usr/lib64/python2.6/site-packages/_sqlitecache.so /usr/local/lib/python2.7/site-packages/ \\\n    && cp -p /usr/lib64/python2.6/site-packages/sqlitecachec.py /usr/local/lib/python2.7/site-packages/ \\\n    && cp -p /usr/lib64/python2.6/site-packages/sqlitecachec.pyc /usr/local/lib/python2.7/site-packages/ \\\n    && cp -p /usr/lib64/python2.6/site-packages/sqlitecachec.pyo /usr/local/lib/python2.7/site-packages/ \\\n    && rm -rf ${SRC_DIR}/Python* && rm Python-2.7.13.tgz\n\n# -----------------------------------------------------------------------------\n# Devel libraries for delelopment tools like php & nginx ...\n# -----------------------------------------------------------------------------\nRUN yum -y install \\\n    tar gzip bzip2 unzip file perl-devel perl-ExtUtils-Embed \\\n    pcre openssh-server openssh sudo \\\n    screen vim git telnet expat \\\n    lemon net-snmp net-snmp-devel \\\n    ca-certificates perl-CPAN m4 \\\n    gd libjpeg libpng zlib libevent net-snmp net-snmp-devel \\\n    net-snmp-libs freetype libtool-tldl libxml2 unixODBC \\\n    libxslt libmcrypt freetds \\\n    gd-devel libjpeg-devel libpng-devel zlib-devel \\\n    freetype-devel libtool-ltdl libtool-ltdl-devel \\\n    libxml2-devel zlib-devel bzip2-devel gettext-devel \\\n    curl-devel gettext-devel libevent-devel \\\n    libxslt-devel expat-devel unixODBC-devel \\\n    openssl-devel libmcrypt-devel freetds-devel \\\n    pcre-devel openldap openldap-devel libc-client-devel \\\n    jemalloc jemalloc-devel inotify-tools nodejs apr-util yum-utils tree \\\n    && ln -s /usr/lib64/libc-client.so /usr/lib/libc-client.so \\\n    && rm -rf /var/cache/{yum,ldconfig}/* \\\n    && rm -rf /etc/ld.so.cache \\\n    && yum clean all && rm -rf /var/cache/yum\n\n# -----------------------------------------------------------------------------\n# Install supervisor and distribute ...\n# -----------------------------------------------------------------------------\nRUN pip install --no-cache-dir supervisor distribute \\\n    && rm -rf /tmp/*\n\n# -----------------------------------------------------------------------------\n# Configure, timezone/sshd/passwd/networking\n# -----------------------------------------------------------------------------\nRUN ln -sf /usr/share/zoneinfo/Asia/Chongqing /etc/localtime \\\n    && sed -i \\\n        -e 's/^UsePAM yes/#UsePAM yes/g' \\\n        -e 's/^#UsePAM no/UsePAM no/g' \\\n        -e 's/#UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g' \\\n        -e 's/^#UseDNS yes/UseDNS no/g' \\\n        /etc/ssh/sshd_config \\\n    && echo \"root\" | passwd --stdin root \\\n    && ssh-keygen -q -b 1024 -N '' -t rsa -f /etc/ssh/ssh_host_rsa_key \\\n    && ssh-keygen -q -b 1024 -N '' -t dsa -f /etc/ssh/ssh_host_dsa_key \\\n    && echo \"NETWORKING=yes\" > /etc/sysconfig/network\n\n# -----------------------------------------------------------------------------\n# Install curl\n# -----------------------------------------------------------------------------\nENV CURL_INSTALL_DIR ${HOME}/libcurl\nRUN cd ${SRC_DIR} \\\n    && wget -q -O curl-7.55.1.tar.gz https://curl.askapache.com/download/curl-7.55.1.tar.gz \\\n    && tar xzf curl-7.55.1.tar.gz \\\n    && cd curl-7.55.1 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${CURL_INSTALL_DIR} \\\n    && make 1>/dev/null \\\n    && make install \\\n    && rm -rf ${SRC_DIR}/curl* && rm curl-7.55.1.tar.gz\n\n# -----------------------------------------------------------------------------\n# Install Nginx\n# -----------------------------------------------------------------------------\nENV nginx_version 1.12.2\nENV NGINX_INSTALL_DIR ${HOME}/nginx\nRUN cd ${SRC_DIR} \\\n    && wget -q -O nginx-${nginx_version}.tar.gz https://nginx.org/download/nginx-${nginx_version}.tar.gz \\\n    && wget -q -O nginx-http-concat.zip https://github.com/alibaba/nginx-http-concat/archive/master.zip \\\n    && wget -q -O nginx-logid.zip https://github.com/pinguo-liuzhaohui/nginx-logid/archive/master.zip \\\n    && wget -q -O ngx_devel_kit-0.3.0.tar.gz https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz \\\n    && wget -q -O lua-nginx-module-0.10.11.tar.gz https://github.com/openresty/lua-nginx-module/archive/v0.10.11.tar.gz \\\n    && wget -q -O LuaJIT-2.0.5.tar.gz https://luajit.org/download/LuaJIT-2.0.5.tar.gz \\\n    && tar zxf nginx-${nginx_version}.tar.gz \\\n    && unzip nginx-http-concat.zip -d nginx-http-concat \\\n    && unzip nginx-logid.zip -d nginx-logid \\\n    && tar zxf ngx_devel_kit-0.3.0.tar.gz \\\n    && tar zxf lua-nginx-module-0.10.11.tar.gz \\\n    && tar zxf LuaJIT-2.0.5.tar.gz \\\n    && cd LuaJIT-2.0.5 \\\n    && make PREFIX=${HOME}/LuaJIT-2.0.5 1>/dev/null \\\n    && make install PREFIX=${HOME}/LuaJIT-2.0.5 \\\n    && cd ${HOME} \\\n    && ln -s LuaJIT-2.0.5 luajit \\\n    && export LUAJIT_LIB=${HOME}/luajit/lib \\\n    && export LUAJIT_INC=${HOME}/luajit/include/luajit-2.0 \\\n    && cd ${SRC_DIR}/nginx-${nginx_version} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$NGINX_INSTALL_DIR --with-http_stub_status_module --with-http_ssl_module \\\n       --add-module=../nginx-http-concat/nginx-http-concat-master --add-module=../nginx-logid/nginx-logid-master \\\n       --with-ld-opt=\"-Wl,-rpath,${HOME}/luajit/lib\" --add-module=../ngx_devel_kit-0.3.0 --add-module=../lua-nginx-module-0.10.11 1>/dev/null \\\n    && make 1>/dev/null \\\n    && make install \\\n    && rm -rf ${SRC_DIR}/nginx-* ${SRC_DIR}/ngx_devel_kit* ${SRC_DIR}/lua-nginx-module* ${SRC_DIR}/LuaJIT* && rm nginx-${nginx_version}.tar.gz\n\n# -----------------------------------------------------------------------------\n# Install Redis\n# -----------------------------------------------------------------------------\nENV redis_version 3.2.11\nENV REDIS_INSTALL_DIR ${HOME}/redis\nRUN cd ${SRC_DIR} \\\n    && wget -q -O redis-${redis_version}.tar.gz https://download.redis.io/releases/redis-${redis_version}.tar.gz \\\n    && tar xzf redis-${redis_version}.tar.gz \\\n    && cd redis-${redis_version} \\\n    && make 1>/dev/null \\\n    && make PREFIX=$REDIS_INSTALL_DIR install \\\n    && rm -rf ${SRC_DIR}/redis-* && rm redis-${redis_version}.tar.gz\n\n# -----------------------------------------------------------------------------\n# Install ImageMagick\n# -----------------------------------------------------------------------------\nRUN cd ${SRC_DIR} \\\n    && wget -q -O ImageMagick.tar.gz https://www.imagemagick.org/download/ImageMagick.tar.gz \\\n    && tar zxf ImageMagick.tar.gz \\\n    && rm -rf ImageMagick.tar.gz \\\n    && ImageMagickPath=`ls` \\\n    && cd ${ImageMagickPath} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && rm -rf $SRC_DIR/ImageMagick*\n\n# -----------------------------------------------------------------------------\n# Install hiredis\n# -----------------------------------------------------------------------------\nRUN cd ${SRC_DIR} \\\n    && wget -q -O hiredis-0.13.3.tar.gz https://github.com/redis/hiredis/archive/v0.13.3.tar.gz \\\n    && tar zxvf hiredis-0.13.3.tar.gz \\\n    && cd hiredis-0.13.3 \\\n    && make \\\n    && make install \\\n    && echo \"/usr/local/lib\" > /etc/ld.so.conf.d/local.conf \\\n    && ldconfig \\\n    && rm -rf $SRC_DIR/hiredis-* && rm hiredis-0.13.3.tar.gz\n\n# -----------------------------------------------------------------------------\n# Install libmemcached using by php-memcached\n# -----------------------------------------------------------------------------\nENV LIB_MEMCACHED_INSTALL_DIR /usr/local/\nRUN cd ${SRC_DIR} \\\n    && wget -q -O libmemcached-1.0.18.tar.gz https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gz \\\n    && tar xzf libmemcached-1.0.18.tar.gz \\\n    && cd libmemcached-1.0.18 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$LIB_MEMCACHED_INSTALL_DIR --with-memcached 1>/dev/null \\\n    && make 1>/dev/null \\\n    && make install \\\n    && rm -rf ${SRC_DIR}/libmemcached* && rm libmemcached-1.0.18.tar.gz\n\n# -----------------------------------------------------------------------------\n# Install libmcrypt using by php-mcrypt\n# -----------------------------------------------------------------------------\nRUN cd ${SRC_DIR} \\\n    && wget -q -O libmcrypt-2.5.8.tar.gz https://nchc.dl.sourceforge.net/project/mcrypt/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz \\\n    && tar xzf libmcrypt-2.5.8.tar.gz \\\n    && cd libmcrypt-2.5.8 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" 1>/dev/null \\\n    && make 1>/dev/null \\\n    && make install \\\n    && echo \"/usr/local/lib64\" >> /etc/ld.so.conf.d/local.conf \\\n    && echo \"/usr/local/src/libmcrypt-2.5.8/lib/.libs\" >> /etc/ld.so.conf.d/local.conf \\\n    && chmod gu+x /etc/ld.so.conf.d/local.conf \\\n    && ldconfig -v && rm libmcrypt-2.5.8.tar.gz\n\n# -----------------------------------------------------------------------------\n# Install re2c for PHP\n# -----------------------------------------------------------------------------\nrun cd $SRC_DIR \\\n    && wget -q -O re2c-1.0.tar.gz https://excellmedia.dl.sourceforge.net/project/re2c/old/re2c-1.0.tar.gz \\\n    && tar xzf re2c-1.0.tar.gz \\\n    && cd re2c-1.0 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && rm -rf ${SRC_DIR}/re2c* && rm re2c-1.0.tar.gz\n\n# -----------------------------------------------------------------------------\n# Install PHP\n# -----------------------------------------------------------------------------\nENV phpversion 7.1.9\nENV PHP_INSTALL_DIR ${HOME}/php\nRUN cd ${SRC_DIR} \\\n    && ls -l \\\n    && wget -q -O php-${phpversion}.tar.gz https://cn2.php.net/distributions/php-${phpversion}.tar.gz \\\n    && tar xzf php-${phpversion}.tar.gz \\\n    && cd php-${phpversion} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n       --prefix=${PHP_INSTALL_DIR} \\\n       --with-config-file-path=${PHP_INSTALL_DIR}/etc \\\n       --with-config-file-scan-dir=${PHP_INSTALL_DIR}/etc/php.d \\\n       --sysconfdir=${PHP_INSTALL_DIR}/etc \\\n       --with-libdir=lib64 \\\n       --enable-mysqlnd \\\n       --enable-zip \\\n       --enable-exif \\\n       --enable-ftp \\\n       --enable-mbstring \\\n       --enable-mbregex \\\n       --enable-fpm \\\n       --enable-bcmath \\\n       --enable-pcntl \\\n       --enable-soap \\\n       --enable-sockets \\\n       --enable-shmop \\\n       --enable-sysvmsg \\\n       --enable-sysvsem \\\n       --enable-sysvshm \\\n       --enable-gd-native-ttf \\\n       --enable-wddx \\\n       --enable-opcache \\\n       --with-gettext \\\n       --with-xsl \\\n       --with-libexpat-dir \\\n       --with-xmlrpc \\\n       --with-snmp \\\n       --with-ldap \\\n       --enable-mysqlnd \\\n       --with-mysqli=mysqlnd \\\n       --with-pdo-mysql=mysqlnd \\\n       --with-pdo-odbc=unixODBC,/usr \\\n       --with-gd \\\n       --with-jpeg-dir \\\n       --with-png-dir \\\n       --with-zlib-dir \\\n       --with-freetype-dir \\\n       --with-zlib \\\n       --with-bz2 \\\n       --with-openssl \\\n       --with-curl=${CURL_INSTALL_DIR} \\\n       --with-mcrypt \\\n       --with-mhash \\\n    && make 1>/dev/null \\\n    && make install \\\n    && rm -rf ${PHP_INSTALL_DIR}/lib/php.ini \\\n    && cp -f php.ini-development ${PHP_INSTALL_DIR}/lib/php.ini \\\n    && rm -rf ${SRC_DIR}/php* ${SRC_DIR}/libmcrypt* && rm php-${phpversion}.tar.gz\n\n# -----------------------------------------------------------------------------\n# Install yaml and PHP yaml extension\n# -----------------------------------------------------------------------------\nRUN cd $SRC_DIR \\\n    && wget -q -O yaml-0.1.7.tar.gz https://pyyaml.org/download/libyaml/yaml-0.1.7.tar.gz \\\n    && tar xzf yaml-0.1.7.tar.gz \\\n    && cd yaml-0.1.7 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n    && make >/dev/null \\\n    && make install \\\n    && cd $SRC_DIR \\\n    && wget -q -O yaml-2.0.2.tgz https://pecl.php.net/get/yaml-2.0.2.tgz \\\n    && tar xzf yaml-2.0.2.tgz \\\n    && cd yaml-2.0.2 \\\n    && $PHP_INSTALL_DIR/bin/phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-yaml=/usr/local --with-php-config=$PHP_INSTALL_DIR/bin/php-config \\\n    && make >/dev/null \\\n    && make install \\\n    && rm -rf $SRC_DIR/yaml-* && rm yaml-0.1.7.tar.gz\n\n# -----------------------------------------------------------------------------\n# Install PHP mongodb extensions\n# -----------------------------------------------------------------------------\nRUN cd ${SRC_DIR} \\\n    && wget -q -O mongodb-1.3.2.tgz https://pecl.php.net/get/mongodb-1.3.2.tgz \\\n    && tar zxf mongodb-1.3.2.tgz \\\n    && cd mongodb-1.3.2 \\\n    && ${PHP_INSTALL_DIR}/bin/phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=$PHP_INSTALL_DIR/bin/php-config 1>/dev/null \\\n    && make clean \\\n    && make \\\n    && make install \\\n    && rm -rf ${SRC_DIR}/mongodb-* && rm mongodb-1.3.2.tgz\n\n# -----------------------------------------------------------------------------\n\n# -----------------------------------------------------------------------------\n\n# Install PHP redis extensions\n# -----------------------------------------------------------------------------\nRUN cd ${SRC_DIR} \\\n    && wget -q -O redis-3.1.3.tgz https://pecl.php.net/get/redis-3.1.3.tgz \\\n    && tar zxf redis-3.1.3.tgz \\\n    && cd redis-3.1.3 \\\n    && ${PHP_INSTALL_DIR}/bin/phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=$PHP_INSTALL_DIR/bin/php-config 1>/dev/null \\\n    && make clean \\\n    && make 1>/dev/null \\\n    && make install \\\n    && rm -rf ${SRC_DIR}/redis-* && rm redis-3.1.3.tgz\n\n# -----------------------------------------------------------------------------\n# Install PHP imagick extensions\n# -----------------------------------------------------------------------------\nRUN cd ${SRC_DIR} \\\n    && wget -q -O imagick-3.4.3.tgz https://pecl.php.net/get/imagick-3.4.3.tgz \\\n    && tar zxf imagick-3.4.3.tgz \\\n    && cd imagick-3.4.3 \\\n    && ${PHP_INSTALL_DIR}/bin/phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=$PHP_INSTALL_DIR/bin/php-config \\\n    --with-imagick 1>/dev/null \\\n    && make clean \\\n    && make 1>/dev/null \\\n    && make install \\\n    && rm -rf ${SRC_DIR}/imagick-* && rm imagick-3.4.3.tgz\n\n# -----------------------------------------------------------------------------\n# Install PHP xdebug extensions\n# -----------------------------------------------------------------------------\nRUN cd ${SRC_DIR} \\\n    && wget -q -O xdebug-2.5.5.tgz https://pecl.php.net/get/xdebug-2.5.5.tgz \\\n    && tar zxf xdebug-2.5.5.tgz \\\n    && cd xdebug-2.5.5 \\\n    && ${PHP_INSTALL_DIR}/bin/phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=$PHP_INSTALL_DIR/bin/php-config 1>/dev/null \\\n    && make clean \\\n    && make 1>/dev/null \\\n    && make install \\\n    && rm -rf ${SRC_DIR}/xdebug-* && rm xdebug-2.5.5.tgz\n\n# -----------------------------------------------------------------------------\n# Install PHP igbinary extensions\n# -----------------------------------------------------------------------------\nRUN cd ${SRC_DIR} \\\n    && wget -q -O igbinary-2.0.1.tgz https://pecl.php.net/get/igbinary-2.0.1.tgz \\\n    && tar zxf igbinary-2.0.1.tgz \\\n    && cd igbinary-2.0.1 \\\n    && ${PHP_INSTALL_DIR}/bin/phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=$PHP_INSTALL_DIR/bin/php-config 1>/dev/null \\\n    && make clean \\\n    && make 1>/dev/null \\\n    && make install \\\n    && rm -rf ${SRC_DIR}/igbinary-* && rm igbinary-2.0.1.tgz\n\n# -----------------------------------------------------------------------------\n# Install PHP memcached extensions\n# -----------------------------------------------------------------------------\nRUN cd ${SRC_DIR} \\\n    && wget -q -O memcached-3.0.3.tgz https://pecl.php.net/get/memcached-3.0.3.tgz \\\n    && tar xzf memcached-3.0.3.tgz \\\n    && cd memcached-3.0.3 \\\n    && ${PHP_INSTALL_DIR}/bin/phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-memcached --with-php-config=$PHP_INSTALL_DIR/bin/php-config \\\n       --with-libmemcached-dir=$LIB_MEMCACHED_INSTALL_DIR --disable-memcached-sasl 1>/dev/null \\\n    && make 1>/dev/null \\\n    && make install \\\n    && rm -rf ${SRC_DIR}/memcached-* && rm memcached-3.0.3.tgz\n\n# -----------------------------------------------------------------------------\n# Install PHP yac extensions\n# -----------------------------------------------------------------------------\nRUN cd ${SRC_DIR} \\\n    && wget -q -O yac-2.0.2.tgz https://pecl.php.net/get/yac-2.0.2.tgz \\\n    && tar zxf yac-2.0.2.tgz\\\n    && cd yac-2.0.2 \\\n    && ${PHP_INSTALL_DIR}/bin/phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=$PHP_INSTALL_DIR/bin/php-config \\\n    && make 1>/dev/null \\\n    && make install \\\n    && rm -rf $SRC_DIR/yac-* && rm yac-2.0.2.tgz\n\n# -----------------------------------------------------------------------------\n# Install PHP swoole extensions\n# -----------------------------------------------------------------------------\nENV swooleVersion 1.9.22\nRUN cd ${SRC_DIR} \\\n    && wget -q -O swoole-${swooleVersion}.tar.gz https://github.com/swoole/swoole-src/archive/v${swooleVersion}.tar.gz \\\n    && tar zxf swoole-${swooleVersion}.tar.gz \\\n    && cd swoole-src-${swooleVersion}/ \\\n    && ${PHP_INSTALL_DIR}/bin/phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=$PHP_INSTALL_DIR/bin/php-config --enable-async-redis --enable-openssl \\\n    && make clean 1>/dev/null \\\n    && make 1>/dev/null \\\n    && make install \\\n    && rm -rf ${SRC_DIR}/swoole* && rm swoole-${swooleVersion}.tar.gz\n\n# -----------------------------------------------------------------------------\n# Install PHP inotify extensions\n# -----------------------------------------------------------------------------\nRUN cd ${SRC_DIR} \\\n    && wget -q -O inotify-2.0.0.tgz https://pecl.php.net/get/inotify-2.0.0.tgz \\\n    && tar zxf inotify-2.0.0.tgz \\\n    && cd inotify-2.0.0 \\\n    && ${PHP_INSTALL_DIR}/bin/phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=$PHP_INSTALL_DIR/bin/php-config 1>/dev/null \\\n    && make clean \\\n    && make 1>/dev/null \\\n    && make install \\\n    && rm -rf ${SRC_DIR}/inotify-* && rm inotify-2.0.0.tgz\n\n# -----------------------------------------------------------------------------\n# Install phpunit\n# -----------------------------------------------------------------------------\nRUN cd ${SRC_DIR} \\\n    && wget -q -O phpunit.phar https://phar.phpunit.de/phpunit.phar \\\n    && mv phpunit.phar ${PHP_INSTALL_DIR}/bin/phpunit \\\n    && chmod +x ${PHP_INSTALL_DIR}/bin/phpunit\n\n# -----------------------------------------------------------------------------\n# Install php composer\n# -----------------------------------------------------------------------------\nRUN cd ${SRC_DIR} \\\n    && curl -f -sS https://getcomposer.org/installer | $PHP_INSTALL_DIR/bin/php \\\n    && chmod +x composer.phar \\\n    && mv composer.phar ${PHP_INSTALL_DIR}/bin/composer\n\n# -----------------------------------------------------------------------------\n# Install PhpDocumentor\n# -----------------------------------------------------------------------------\nRUN $PHP_INSTALL_DIR/bin/pear install -a PhpDocumentor\n\nRUN cd ${PHP_INSTALL_DIR} \\\n    && bin/php bin/composer self-update \\\n    && bin/pear install PHP_CodeSniffer-2.3.4 \\\n    && rm -rf /tmp/*\n\n# -----------------------------------------------------------------------------\n# Install jq\n# -----------------------------------------------------------------------------\nRUN cd ${SRC_DIR} \\\n    && wget -q -O jq-1.5.tar.gz https://github.com/stedolan/jq/archive/jq-1.5.tar.gz \\\n    && tar zxf jq-1.5.tar.gz \\\n    && cd jq-jq-1.5 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-maintainer-mode \\\n    && make \\\n    && make install \\\n    && rm -rf ${SRC_DIR}/jq-* && rm jq-1.5.tar.gz\n\n# -----------------------------------------------------------------------------\n# Install Apache ab\n# -----------------------------------------------------------------------------\nRUN cd ${HOME} \\\n    && yum -y remove httpd \\\n    && mkdir httpd \\\n    && cd httpd \\\n    && yumdownloader httpd-tools \\\n    && rpm2cpio httpd-tools* | cpio -idmv \\\n    && mkdir -p /home/worker/bin \\\n    && mv ./usr/bin/ab /home/worker/bin \\\n    && cd ${HOME} && rm -rf /home/worker/httpd\n\n# -----------------------------------------------------------------------------\n# Update Git\n# -----------------------------------------------------------------------------\nRUN cd ${SRC_DIR} \\\n    && yum -y remove git subversion \\\n    && wget -q -O git-2.14.1.tar.gz https://github.com/git/git/archive/v2.14.1.tar.gz \\\n    && tar zxf git-2.14.1.tar.gz \\\n    && cd git-2.14.1 \\\n    && make configure \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-iconv --prefix=/usr/local/ --with-curl=${CURL_INSTALL_DIR} \\\n    && make \\\n    && make install \\\n    && rm -rf $SRC_DIR/git-2* && rm git-2.14.1.tar.gz\n\n# -----------------------------------------------------------------------------\n# Install Node and apidoc and nodemon\n# -----------------------------------------------------------------------------\nRUN npm install apidoc nodemon -g && npm cache clean --force;\n\n# -----------------------------------------------------------------------------\n# Copy Config\n# -----------------------------------------------------------------------------\nADD run.sh /\nADD config /home/worker/\n\n# -----------------------------------------------------------------------------\n# Add user worker\n# -----------------------------------------------------------------------------\nRUN useradd -M -u 1000 worker \\\n    && echo \"worker\" | passwd --stdin worker \\\n    && echo 'worker  ALL=(ALL)  NOPASSWD: ALL' > /etc/sudoers.d/worker \\\n    && sed -i \\\n        -e 's/^#PermitRootLogin yes/PermitRootLogin no/g' \\\n        -e 's/^PermitRootLogin yes/PermitRootLogin no/g' \\\n        -e 's/^#PermitUserEnvironment no/PermitUserEnvironment yes/g' \\\n        -e 's/^PermitUserEnvironment no/PermitUserEnvironment yes/g' \\\n        /etc/ssh/sshd_config \\\n    && chmod a+x /run.sh \\\n    && chmod a+x ${PHP_INSTALL_DIR}/bin/checkstyle \\\n    && chmod a+x ${PHP_INSTALL_DIR}/bin/mergeCoverReport\n\n# -----------------------------------------------------------------------------\n# clean tmp file\n# -----------------------------------------------------------------------------\nRUN rm -rf ${SRC_DIR}/*\nRUN rm -rf /tmp/*\n\nENTRYPOINT [\"/run.sh\"]\n\nEXPOSE 22 80 443\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n"
}