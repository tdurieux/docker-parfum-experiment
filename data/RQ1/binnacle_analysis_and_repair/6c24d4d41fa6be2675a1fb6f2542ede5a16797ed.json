{
  "startTime": 1674252915193,
  "endTime": 1674252915504,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "FROM node:7-wheezy\n\nLABEL org.label-schema.schema-version = 1.0.0 \\\n    org.label-schema.vendor = mkenney@webbedlam.com \\\n    org.label-schema.vcs-url = https://github.com/mkenney/docker-npm \\\n    org.label-schema.description = \"This image provides node based build tools.\" \\\n    org.label-schema.name = \"NPM\" \\\n    org.label-schema.url = http://mkenney.github.io/docker-npm/\n\nENV TERM=xterm \\\n    NLS_LANG=American_America.AL32UTF8 \\\n    LANG=C.UTF-8 \\\n    LANGUAGE=C.UTF-8 \\\n    LC_ALL=C.UTF-8 \\\n    TIMEZONE=America/Denver\n\nRUN set -x \\\n    && apt-get -qq update \\\n    && apt-get install --no-install-recommends -qqy apt-transport-https apt-utils \\\n    && apt-get -qq upgrade \\\n    && apt-get -qq dist-upgrade \\\n    && apt-get -qq update \\\n    && apt-get install --no-install-recommends -qqy \\\n        acl \\\n        git \\\n        mercurial \\\n        rsync \\\n        subversion \\\n        sudo \\\n        wget \\\n    # Restore a borne-shell compatible default shell\n    && rm /bin/sh \\\n    && ln -s /bin/bash /bin/sh && rm -rf /var/lib/apt/lists/*;\n\n# install npm packages\nRUN set -x \\\n    && npm install --silent --global \\\n        gulp-cli \\\n        grunt-cli \\\n        bower \\\n        markdown-styles \\\n        npx \\\n    && curl -f --compressed -o- -L https://yarnpkg.com/install.sh | sh && npm cache clean --force;\n\n##############################################################################\n# UTF-8 Locale, timezone\n##############################################################################\n\nRUN set -x \\\n    && apt-get install --no-install-recommends -qqy locales \\\n    && locale-gen C.UTF-8 ${UTF8_LOCALE} \\\n    && dpkg-reconfigure locales \\\n    && /usr/sbin/update-locale LANG=C.UTF-8 LANGUAGE=C.UTF-8 LC_ALL=C.UTF-8 \\\n    && export LANG=C.UTF-8 \\\n    && export LANGUAGE=C.UTF-8 \\\n    && export LC_ALL=C.UTF-8 \\\n    && echo $TIMEZONE > /etc/timezone \\\n    && dpkg-reconfigure -f noninteractive tzdata && rm -rf /var/lib/apt/lists/*;\n\n##############################################################################\n# users\n##############################################################################\n\nRUN set -x \\\n    # Configure root account\n    && echo \"export NLS_LANG=$(echo $NLS_LANG)\"                >> /root/.bash_profile \\\n    && echo \"export LANG=$(echo $LANG)\"                        >> /root/.bash_profile \\\n    && echo \"export LANGUAGE=$(echo $LANGUAGE)\"                >> /root/.bash_profile \\\n    && echo \"export LC_ALL=$(echo $LC_ALL)\"                    >> /root/.bash_profile \\\n    && echo \"export TERM=xterm\"                                >> /root/.bash_profile \\\n    && echo \"export PATH=$(echo $PATH)\"                        >> /root/.bash_profile \\\n    && echo \"cd /src\"                                          >> /root/.bash_profile \\\n    && echo \"source \\$HOME/.bashrc\"                            >> /root/.bash_profile \\\n    # Add a dev user and configure\n    && groupadd dev \\\n    && useradd dev -s /bin/bash -m -g dev \\\n    && echo \"dev:password\" | chpasswd \\\n    && echo \"dev ALL=(ALL:ALL) NOPASSWD: ALL\" >> /etc/sudoers \\\n    && rsync -a /root/ /home/dev/ \\\n    && chown -R dev:dev /home/dev/ \\\n    && chmod 0777 /home/dev \\\n    && chmod -R u+rwX,g+rwX,o+rwX /home/dev \\\n    && setfacl -R -d -m user::rwx,group::rwx,other::rwx /home/dev\n\n##############################################################################\n# ~ fin ~\n##############################################################################\n\nRUN set -x \\\n    && wget -O /run-as-user https://raw.githubusercontent.com/mkenney/docker-scripts/master/container/run-as-user \\\n    && chmod 0755 /run-as-user \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nVOLUME /src\nWORKDIR /src\n\nENTRYPOINT [\"/run-as-user\"]\nCMD [\"/usr/local/bin/npm\"]\n"
}