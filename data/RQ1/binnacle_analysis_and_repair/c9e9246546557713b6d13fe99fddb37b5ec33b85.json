{
  "startTime": 1674250895282,
  "endTime": 1674250895828,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ==================================================================\n# module list\n# ------------------------------------------------------------------\n# python        3.6    (apt)\n# opencv        4.0.1  (git)\n# cntk          latest (pip)\n# ==================================================================\n\nFROM ubuntu:18.04\nENV LANG C.UTF-8\nRUN APT_INSTALL=\"apt-get install -y --no-install-recommends\" && \\\n    PIP_INSTALL=\"python -m pip --no-cache-dir install --upgrade\" && \\\n    GIT_CLONE=\"git clone --depth 10\" && \\\n\n    rm -rf /var/lib/apt/lists/* \\\n           /etc/apt/sources.list.d/cuda.list \\\n           /etc/apt/sources.list.d/nvidia-ml.list && \\\n\n    apt-get update && \\\n\n# ==================================================================\n# tools\n# ------------------------------------------------------------------\n\n    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \\\n        build-essential \\\n        apt-utils \\\n        ca-certificates \\\n        wget \\\n        git \\\n        vim \\\n        && \\\n\n    $GIT_CLONE https://github.com/Kitware/CMake ~/cmake && \\\n    cd ~/cmake && \\\n    ./bootstrap && \\\n    make -j\"$(nproc)\" install && \\\n\n# ==================================================================\n# python\n# ------------------------------------------------------------------\n\n    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \\\n        software-properties-common \\\n        && \\\n    add-apt-repository ppa:deadsnakes/ppa && \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \\\n        python3.6 \\\n        python3.6-dev \\\n        python3-distutils-extra \\\n        && \\\n    wget -O ~/get-pip.py \\\n        https://bootstrap.pypa.io/get-pip.py && \\\n    python3.6 ~/get-pip.py && \\\n    ln -s /usr/bin/python3.6 /usr/local/bin/python3 && \\\n    ln -s /usr/bin/python3.6 /usr/local/bin/python && \\\n    $PIP_INSTALL \\\n        setuptools \\\n        && \\\n    $PIP_INSTALL \\\n        numpy \\\n        scipy \\\n        pandas \\\n        cloudpickle \\\n        scikit-learn \\\n        matplotlib \\\n        Cython \\\n        && \\\n\n# ==================================================================\n# boost\n# ------------------------------------------------------------------\n\n    wget -O ~/boost.tar.gz https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.tar.gz && \\\n    tar -zxf ~/boost.tar.gz -C ~ && \\\n    cd ~/boost_* && \\\n    ./bootstrap.sh --with-python=python3.6 && \\\n    ./b2 install -j\"$(nproc)\" --prefix=/usr/local && \\\n\n# ==================================================================\n# opencv\n# ------------------------------------------------------------------\n\n    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \\\n        libatlas-base-dev \\\n        libgflags-dev \\\n        libgoogle-glog-dev \\\n        libhdf5-serial-dev \\\n        libleveldb-dev \\\n        liblmdb-dev \\\n        libprotobuf-dev \\\n        libsnappy-dev \\\n        protobuf-compiler \\\n        && \\\n\n    $GIT_CLONE --branch 4.0.1 https://github.com/opencv/opencv ~/opencv && \\\n    mkdir -p ~/opencv/build && cd ~/opencv/build && \\\n    cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n          -D CMAKE_INSTALL_PREFIX=/usr/local \\\n          -D WITH_IPP=OFF \\\n          -D WITH_CUDA=OFF \\\n          -D WITH_OPENCL=OFF \\\n          -D BUILD_TESTS=OFF \\\n          -D BUILD_PERF_TESTS=OFF \\\n          .. && \\\n    make -j\"$(nproc)\" install && \\\n    ln -s /usr/local/include/opencv4/opencv2 /usr/local/include/opencv2 && \\\n\n# ==================================================================\n# cntk\n# ------------------------------------------------------------------\n\n    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \\\n        openmpi-bin \\\n        libpng-dev \\\n        libjpeg-dev \\\n        libtiff-dev \\\n        && \\\n\n    # Fix ImportError for CNTK\n    ln -s /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.20 /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.1 && \\\n    ln -s /usr/lib/x86_64-linux-gnu/libmpi.so.20.10.1 /usr/lib/x86_64-linux-gnu/libmpi.so.12 && \\\n\n    wget --no-verbose -O - https://github.com/01org/mkl-dnn/releases/download/v0.14/mklml_lnx_2018.0.3.20180406.tgz | tar -xzf - && \\\n    cp mklml*/* /usr/local -r && \\\n\n    wget --no-verbose -O - https://github.com/01org/mkl-dnn/archive/v0.14.tar.gz | tar -xzf - && \\\n    cd mkl-dnn-0.14 && mkdir build && cd build && \\\n    ln -s /usr/local external && \\\n    cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n          -D CMAKE_INSTALL_PREFIX=/usr/local \\\n          .. && \\\n    make -j\"$(nproc)\" install && \\\n\n    $PIP_INSTALL \\\n        cntk \\\n        && \\\n\n# ==================================================================\n# config & cleanup\n# ------------------------------------------------------------------\n\n    ldconfig && \\\n    apt-get clean && \\\n    apt-get autoremove && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* ~/* && rm ~/boost.tar.gz\n"
}