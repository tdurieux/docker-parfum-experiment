{
  "startTime": 1674251808135,
  "endTime": 1674251808434,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "######################\n# Stage: Builder\nFROM ruby:2.6.3-alpine as Builder\n\nARG FOLDERS_TO_REMOVE\nARG BUNDLE_WITHOUT\nARG RAILS_ENV\n\nENV BUNDLE_WITHOUT ${BUNDLE_WITHOUT}\nENV RAILS_ENV ${RAILS_ENV}\nENV SECRET_KEY_BASE=foo\nENV RAILS_SERVE_STATIC_FILES=true\n\nRUN apk add --update --no-cache \\\n    build-base \\\n    postgresql-dev \\\n    git \\\n    imagemagick \\\n    nodejs \\\n    yarn \\\n    python2 \\\n    tzdata\n\nWORKDIR /app\n\n# Install gems\nADD Gemfile* /app/\nRUN bundle config --global frozen 1 \\\n && bundle install -j4 --retry 3 \\\n # Remove unneeded files (cached *.gem, *.o, *.c)\n && rm -rf /usr/local/bundle/cache/*.gem \\\n && find /usr/local/bundle/gems/ -name \"*.c\" -delete \\\n && find /usr/local/bundle/gems/ -name \"*.o\" -delete\n\n# Install yarn packages\nCOPY package.json yarn.lock .yarnclean /app/\nRUN yarn install && yarn cache clean;\n\n# Add the Rails app\nADD . /app\n\n# Precompile assets\nRUN bundle exec rake assets:precompile\n\n# Remove folders not needed in resulting image\nRUN rm -rf $FOLDERS_TO_REMOVE\n\n###############################\n# Stage Final\nFROM ruby:2.6.3-alpine\nLABEL maintainer=\"mail@georg-ledermann.de\"\n\nARG ADDITIONAL_PACKAGES\nARG EXECJS_RUNTIME\n\n# Add Alpine packages\nRUN apk add --update --no-cache \\\n    postgresql-client \\\n    imagemagick \\\n    $ADDITIONAL_PACKAGES \\\n    tzdata \\\n    file\n\n# Add user\nRUN addgroup -g 1000 -S app \\\n && adduser -u 1000 -S app -G app\nUSER app\n\n# Copy app with gems from former build stage\nCOPY --from=Builder /usr/local/bundle/ /usr/local/bundle/\nCOPY --from=Builder --chown=app:app /app /app\n\n# Set Rails env\nENV RAILS_LOG_TO_STDOUT true\nENV RAILS_SERVE_STATIC_FILES true\nENV EXECJS_RUNTIME $EXECJS_RUNTIME\n\nWORKDIR /app\n\n# Expose Puma port\nEXPOSE 3000\n\n# Save timestamp of image building\nRUN date -u > BUILD_TIME\n\n# Start up\nCMD [\"docker/startup.sh\"]\n"
}