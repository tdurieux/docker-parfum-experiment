{
  "startTime": 1674248279540,
  "endTime": 1674248281913,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 185,
        "lineEnd": 185,
        "columnStart": 7,
        "columnEnd": 133
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 265,
        "lineEnd": 265,
        "columnStart": 6,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 267,
        "lineEnd": 267,
        "columnStart": 6,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 294,
        "lineEnd": 294,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 353,
        "lineEnd": 353,
        "columnStart": 6,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 355,
        "lineEnd": 355,
        "columnStart": 6,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 396,
        "lineEnd": 396,
        "columnStart": 6,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 398,
        "lineEnd": 398,
        "columnStart": 6,
        "columnEnd": 122
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 430,
        "lineEnd": 430,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 520,
        "lineEnd": 520,
        "columnStart": 9,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 521,
        "lineEnd": 521,
        "columnStart": 9,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 606,
        "lineEnd": 606,
        "columnStart": 7,
        "columnEnd": 112
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 274,
        "lineEnd": 274,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 362,
        "lineEnd": 362,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 186,
        "lineEnd": 186,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 296,
        "lineEnd": 296,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 431,
        "lineEnd": 431,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 86,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 6,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 174,
        "lineEnd": 175,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 293,
        "lineEnd": 293,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 337,
        "lineEnd": 337,
        "columnStart": 3,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 393,
        "lineEnd": 393,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 469,
        "lineEnd": 469,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 483,
        "lineEnd": 486,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 495,
        "lineEnd": 495,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 509,
        "lineEnd": 509,
        "columnStart": 6,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 519,
        "lineEnd": 519,
        "columnStart": 6,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 524,
        "lineEnd": 524,
        "columnStart": 9,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 550,
        "lineEnd": 551,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 562,
        "lineEnd": 562,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 574,
        "lineEnd": 574,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 605,
        "lineEnd": 605,
        "columnStart": 22,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 638,
        "lineEnd": 638,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 654,
        "lineEnd": 654,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 667,
        "lineEnd": 667,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 685,
        "lineEnd": 685,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 698,
        "lineEnd": 698,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 711,
        "lineEnd": 711,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 724,
        "lineEnd": 724,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 86,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 6,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 174,
        "lineEnd": 175,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 337,
        "lineEnd": 337,
        "columnStart": 3,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 393,
        "lineEnd": 393,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 469,
        "lineEnd": 469,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 483,
        "lineEnd": 486,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 495,
        "lineEnd": 495,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 509,
        "lineEnd": 509,
        "columnStart": 6,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 519,
        "lineEnd": 519,
        "columnStart": 6,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 550,
        "lineEnd": 551,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 562,
        "lineEnd": 562,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 574,
        "lineEnd": 574,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 638,
        "lineEnd": 638,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 654,
        "lineEnd": 654,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 667,
        "lineEnd": 667,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 86,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 6,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 174,
        "lineEnd": 175,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 293,
        "lineEnd": 293,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 337,
        "lineEnd": 337,
        "columnStart": 3,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 393,
        "lineEnd": 393,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 469,
        "lineEnd": 469,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 483,
        "lineEnd": 486,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 495,
        "lineEnd": 495,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 509,
        "lineEnd": 509,
        "columnStart": 6,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 519,
        "lineEnd": 519,
        "columnStart": 6,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 524,
        "lineEnd": 524,
        "columnStart": 9,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 550,
        "lineEnd": 551,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 562,
        "lineEnd": 562,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 605,
        "lineEnd": 605,
        "columnStart": 22,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 638,
        "lineEnd": 638,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 654,
        "lineEnd": 654,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 667,
        "lineEnd": 667,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 685,
        "lineEnd": 685,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 698,
        "lineEnd": 698,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 711,
        "lineEnd": 711,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 724,
        "lineEnd": 724,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 6,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 173,
        "lineEnd": 174,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 345,
        "lineEnd": 345,
        "columnStart": 3,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 510,
        "lineEnd": 510,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 522,
        "lineEnd": 525,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 534,
        "lineEnd": 534,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 650,
        "lineEnd": 651,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 662,
        "lineEnd": 662,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 674,
        "lineEnd": 674,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 758,
        "lineEnd": 758,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 771,
        "lineEnd": 771,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "#\n#--------------------------------------------------------------------------\n# Image Setup\n#--------------------------------------------------------------------------\n#\n# To edit the 'php-fpm' base Image, visit its repository on Github\n#    https://github.com/Laradock/php-fpm\n#\n# To change its version, see the available Tags on the Docker Hub:\n#    https://hub.docker.com/r/laradock/php-fpm/tags/\n#\n# Note: Base Image name format {image-tag}-{php-version}\n#\n\nARG LARADOCK_PHP_VERSION\n\n# FROM laradock/php-fpm:2.2-${LARADOCK_PHP_VERSION}\nFROM letsdockerize/laradock-php-fpm:2.4-${LARADOCK_PHP_VERSION}\n\nLABEL maintainer=\"Mahmoud Zalt <mahmoud@zalt.me>\"\n\nARG LARADOCK_PHP_VERSION\n\n# Set Environment Variables\nENV DEBIAN_FRONTEND noninteractive\n\n# always run apt update when start and after add new source list, then clean up at end.\nRUN set -xe; \\\n    apt-get update -yqq && \\\n    pecl channel-update pecl.php.net && \\\n    apt-get install --no-install-recommends -yqq \\\n      apt-utils \\\n      #\n      #--------------------------------------------------------------------------\n      # Mandatory Software's Installation\n      #--------------------------------------------------------------------------\n      #\n      # Mandatory Software's such as (\"mcrypt\", \"pdo_mysql\", \"libssl-dev\", ....)\n      # are installed on the base image 'laradock/php-fpm' image. If you want\n      # to add more Software's or remove existing one, you need to edit the\n      # base image (https://github.com/Laradock/php-fpm).\n      #\n      # next lines are here becase there is no auto build on dockerhub see https://github.com/laradock/laradock/pull/1903#issuecomment-463142846\n      libzip-dev zip unzip && \\\n      docker-php-ext-configure zip --with-libzip && \\\n      # Install the zip extension\n      docker-php-ext-install zip && \\\n      php -m | grep -q 'zip' && rm -rf /var/lib/apt/lists/*;\n\n#\n#--------------------------------------------------------------------------\n# Optional Software's Installation\n#--------------------------------------------------------------------------\n#\n# Optional Software's will only be installed if you set them to `true`\n# in the `docker-compose.yml` before the build.\n# Example:\n#   - INSTALL_SOAP=true\n#\n\n###########################################################################\n# SSH2:\n###########################################################################\n\nARG INSTALL_SSH2=false\n\nRUN if [ ${INSTALL_SSH2} = true ]; then \\\n    apt-get -y --no-install-recommends install libssh2-1-dev && \\\n    if [ $(php -r \"echo PHP_MAJOR_VERSION;\") = \"5\" ]; then \\\n        pecl install -a ssh2-0.13; \\\n    else \\\n        pecl install -a ssh2-1.1.2; \\\n    fi && \\\n    docker-php-ext-enable ssh2 \\\n; rm -rf /var/lib/apt/lists/*; else \\\n        pecl install -a ssh2-1.1.2; \\\n    fi \\\n\nfi\n\n###########################################################################\n# libfaketime:\n###########################################################################\n\nUSER root\n\nARG INSTALL_FAKETIME=false\n\nRUN if [ ${INSTALL_FAKETIME} = true ]; then \\\n    apt-get install --no-install-recommends -y libfaketime \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# SOAP:\n###########################################################################\n\nARG INSTALL_SOAP=false\n\nRUN if [ ${INSTALL_SOAP} = true ]; then \\\n    rm /etc/apt/preferences.d/no-debian-php && \\\n    apt-get -y --no-install-recommends install libxml2-dev php-soap && \\\n    docker-php-ext-install soap \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# XSL:\n###########################################################################\n\nARG INSTALL_XSL=false\n\nRUN if [ ${INSTALL_XSL} = true ]; then \\\n    apt-get -y --no-install-recommends install libxslt-dev && \\\n    docker-php-ext-install xsl \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# pgsql\n###########################################################################\n\nARG INSTALL_PGSQL=false\n\nRUN if [ ${INSTALL_PGSQL} = true ]; then \\\n    # Install the pgsql extension\n    docker-php-ext-install pgsql \\\n;fi\n\n###########################################################################\n# pgsql client\n###########################################################################\n\nARG INSTALL_PG_CLIENT=false\nARG INSTALL_POSTGIS=false\n\nRUN if [ ${INSTALL_PG_CLIENT} = true ]; then \\\n    mkdir -p /usr/share/man/man1 && \\\n    mkdir -p /usr/share/man/man7 && \\\n    # Install the pgsql client\n    apt-get install --no-install-recommends -y postgresql-client && \\\n    if [ ${INSTALL_POSTGIS} = true ]; then \\\n      apt-get install --no-install-recommends -y postgis; \\\n    fi \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# xDebug:\n###########################################################################\n\nARG INSTALL_XDEBUG=false\n\nRUN if [ ${INSTALL_XDEBUG} = true ]; then \\\n  # Install the xdebug extension\n  if [ $(php -r \"echo PHP_MAJOR_VERSION;\") = \"5\" ]; then \\\n    pecl install xdebug-2.5.5; \\\n  else \\\n    pecl install xdebug; \\\n  fi && \\\n  docker-php-ext-enable xdebug \\\n;fi\n\n# Copy xdebug configuration for remote debugging\nCOPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\n\nRUN sed -i \"s/xdebug.remote_autostart=0/xdebug.remote_autostart=1/\" /usr/local/etc/php/conf.d/xdebug.ini && \\\n    sed -i \"s/xdebug.remote_enable=0/xdebug.remote_enable=1/\" /usr/local/etc/php/conf.d/xdebug.ini && \\\n    sed -i \"s/xdebug.cli_color=0/xdebug.cli_color=1/\" /usr/local/etc/php/conf.d/xdebug.ini\n\n###########################################################################\n# Phpdbg:\n###########################################################################\n\nARG INSTALL_PHPDBG=false\n\nRUN if [ ${INSTALL_PHPDBG} = true ]; then \\\n    apt-get install --no-install-recommends -y --force-yes php${LARADOCK_PHP_VERSION}-phpdbg \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# Blackfire:\n###########################################################################\n\nARG INSTALL_BLACKFIRE=false\n\nRUN if [ ${INSTALL_XDEBUG} = false -a ${INSTALL_BLACKFIRE} = true ]; then \\\n    version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") \\\n    && curl -f -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \\\n    && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \\\n    && mv /tmp/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so \\\n    && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > $PHP_INI_DIR/conf.d/blackfire.ini \\\n; rm /tmp/blackfire-probe.tar.gzfi\n\n###########################################################################\n# PHP REDIS EXTENSION\n###########################################################################\n\nARG INSTALL_PHPREDIS=false\n\nRUN if [ ${INSTALL_PHPREDIS} = true ]; then \\\n    # Install Php Redis Extension\n    printf \"\\n\" | pecl install -o -f redis \\\n    &&  rm -rf /tmp/pear \\\n    &&  docker-php-ext-enable redis \\\n;fi\n\n###########################################################################\n# Swoole EXTENSION\n###########################################################################\n\nARG INSTALL_SWOOLE=false\n\nRUN if [ ${INSTALL_SWOOLE} = true ]; then \\\n    # Install Php Swoole Extension\n    if [ $(php -r \"echo PHP_MAJOR_VERSION;\") = \"5\" ]; then \\\n      pecl install swoole-2.0.10; \\\n    else \\\n      if [ $(php -r \"echo PHP_MINOR_VERSION;\") = \"0\" ]; then \\\n        pecl install swoole-2.2.0; \\\n      else \\\n        pecl install swoole; \\\n      fi \\\n    fi && \\\n    docker-php-ext-enable swoole \\\n    && php -m | grep -q 'swoole' \\\n;fi\n\n###########################################################################\n# Taint EXTENSION\n###########################################################################\n\nARG INSTALL_TAINT=false\n\nRUN if [ ${INSTALL_TAINT} = true ]; then \\\n    # Install Php TAINT Extension\n    if [ $(php -r \"echo PHP_MAJOR_VERSION;\") = \"7\" ]; then \\\n      pecl install taint && \\\n      docker-php-ext-enable taint && \\\n      php -m | grep -q 'taint'; \\\n    fi \\\n;fi\n\n###########################################################################\n# MongoDB:\n###########################################################################\n\nARG INSTALL_MONGO=false\n\nRUN if [ ${INSTALL_MONGO} = true ]; then \\\n    # Install the mongodb extension\n    if [ $(php -r \"echo PHP_MAJOR_VERSION;\") = \"5\" ]; then \\\n      pecl install mongo && \\\n      docker-php-ext-enable mongo \\\n    ;fi && \\\n    pecl install mongodb && \\\n    docker-php-ext-enable mongodb \\\n;fi\n\n###########################################################################\n# Xhprof:\n###########################################################################\n\nARG INSTALL_XHPROF=false\n\nRUN if [ ${INSTALL_XHPROF} = true ]; then \\\n    if [ $(php -r \"echo PHP_MAJOR_VERSION;\") = 7 ]; then \\\n      curl -f -L -o /tmp/xhprof.tar.gz \"https://github.com/tideways/php-xhprof-extension/archive/v4.1.6.tar.gz\"; \\\n    else \\\n      curl -f -L -o /tmp/xhprof.tar.gz \"https://codeload.github.com/phacility/xhprof/tar.gz/master\"; \\\n    fi \\\n    && mkdir -p xhprof \\\n    && tar -C xhprof -zxvf /tmp/xhprof.tar.gz --strip 1 \\\n    && ( cd xhprof \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        && make \\\n        && make install) \\\n\n    && rm -r xhprof \\\n    && rm /tmp/xhprof.tar.gz \\\n; else \\\n      curl -f -L -o /tmp/xhprof.tar.gz \"https://codeload.github.com/phacility/xhprof/tar.gz/master\"; \\\n    fi \\\n\n\n\n\n\n\n\n\n\n\n\nfi\n\nCOPY ./xhprof.ini /usr/local/etc/php/conf.d\n\n###########################################################################\n# AMQP:\n###########################################################################\n\nARG INSTALL_AMQP=false\n\nRUN if [ ${INSTALL_AMQP} = true ]; then \\\n    apt-get update && apt-get -y --no-install-recommends install cmake && \\\n    curl -f -L -o /tmp/rabbitmq-c.tar.gz https://github.com/alanxz/rabbitmq-c/archive/master.tar.gz && \\\n    mkdir -p rabbitmq-c && \\\n    tar -C rabbitmq-c -zxvf /tmp/rabbitmq-c.tar.gz --strip 1 && \\\n    cd rabbitmq-c/ && \\\n    mkdir _build && cd _build/ && \\\n    cmake .. && \\\n    cmake --build . --target install && \\\n    # Install the amqp extension\n    pecl install amqp && \\\n    docker-php-ext-enable amqp && \\\n    # Install the sockets extension\n    docker-php-ext-install sockets \\\n; rm /tmp/rabbitmq-c.tar.gz rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# pcntl\n###########################################################################\n\nARG INSTALL_PCNTL=false\nRUN if [ ${INSTALL_PCNTL} = true ]; then \\\n    # Installs pcntl, helpful for running Horizon\n    docker-php-ext-install pcntl \\\n;fi\n\n###########################################################################\n# bcmath:\n###########################################################################\n\nARG INSTALL_BCMATH=false\n\nRUN if [ ${INSTALL_BCMATH} = true ]; then \\\n    # Install the bcmath extension\n    docker-php-ext-install bcmath \\\n;fi\n\n###########################################################################\n# GMP (GNU Multiple Precision):\n###########################################################################\n\nARG INSTALL_GMP=false\n\nRUN if [ ${INSTALL_GMP} = true ]; then \\\n\t\t\tapt-get install --no-install-recommends -y libgmp-dev && \\\n    if [ $(php -r \"echo PHP_MAJOR_VERSION;\") = \"5\" ]; then \\\n      ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \\\n    ;fi && \\\n    docker-php-ext-install gmp \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# PHP Memcached:\n###########################################################################\n\nARG INSTALL_MEMCACHED=false\n\nRUN if [ ${INSTALL_MEMCACHED} = true ]; then \\\n    if [ $(php -r \"echo PHP_MAJOR_VERSION;\") = \"5\" ]; then \\\n      curl -f -L -o /tmp/memcached.tar.gz \"https://github.com/php-memcached-dev/php-memcached/archive/2.2.0.tar.gz\"; \\\n    else \\\n      curl -f -L -o /tmp/memcached.tar.gz \"https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz\"; \\\n    fi \\\n    && mkdir -p memcached \\\n    && tar -C memcached -zxvf /tmp/memcached.tar.gz --strip 1 \\\n    && ( cd memcached \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        && make -j$(nproc) \\\n        && make install) \\\n\n    && rm -r memcached \\\n    && rm /tmp/memcached.tar.gz \\\n    && docker-php-ext-enable memcached \\\n; else \\\n      curl -f -L -o /tmp/memcached.tar.gz \"https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz\"; \\\n    fi \\\n\n\n\n\n\n\n\n\n\n\n\n\nfi\n\n###########################################################################\n# Exif:\n###########################################################################\n\nARG INSTALL_EXIF=false\n\nRUN if [ ${INSTALL_EXIF} = true ]; then \\\n    # Enable Exif PHP extentions requirements\n    docker-php-ext-install exif \\\n;fi\n\n###########################################################################\n# PHP Aerospike:\n###########################################################################\n\nUSER root\n\nARG INSTALL_AEROSPIKE=false\n\nRUN set -xe; \\\n    if [ ${INSTALL_AEROSPIKE} = true ]; then \\\n    apt-get -y --no-install-recommends install sudo wget && \\\n    # Install the php aerospike extension\n    if [ $(php -r \"echo PHP_MAJOR_VERSION;\") = \"5\" ]; then \\\n      curl -f -L -o /tmp/aerospike-client-php.tar.gz https://github.com/aerospike/aerospike-client-php5/archive/master.tar.gz; \\\n    else \\\n      curl -f -L -o /tmp/aerospike-client-php.tar.gz https://github.com/aerospike/aerospike-client-php/archive/master.tar.gz; \\\n    fi \\\n    && mkdir -p /tmp/aerospike-client-php \\\n    && tar -C /tmp/aerospike-client-php -zxvf /tmp/aerospike-client-php.tar.gz --strip 1 \\\n    && \\\n    if [ $(php -r \"echo PHP_MAJOR_VERSION;\") = \"5\" ]; then \\\n      ( \\\n          cd /tmp/aerospike-client-php/src/aerospike \\\n          && phpize \\\n          && ./build.sh \\\n          && make install \\\n      ) \\\n    else \\\n      ( \\\n          cd /tmp/aerospike-client-php/src \\\n          && phpize \\\n          && ./build.sh \\\n          && make install \\\n      ) \\\n    fi \\\n    && rm /tmp/aerospike-client-php.tar.gz \\\n    && docker-php-ext-enable aerospike \\\n; rm -rf /var/lib/apt/lists/*; else \\\n      curl -f -L -o /tmp/aerospike-client-php.tar.gz https://github.com/aerospike/aerospike-client-php/archive/master.tar.gz; \\\n    fi \\\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfi\n\n###########################################################################\n# IonCube Loader:\n###########################################################################\n\nARG INSTALL_IONCUBE=false\n\nRUN if [ ${INSTALL_IONCUBE} = true ]; then \\\n    curl -f -L -o /tmp/ioncube_loaders_lin_x86-64.tar.gz https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz \\\n    && tar zxpf /tmp/ioncube_loaders_lin_x86-64.tar.gz -C /tmp \\\n    && mv /tmp/ioncube/ioncube_loader_lin_${LARADOCK_PHP_VERSION}.so $(php -r \"echo ini_get('extension_dir');\")/ioncube_loader.so \\\n    && printf \"zend_extension=ioncube_loader.so\\n\" > $PHP_INI_DIR/conf.d/0ioncube.ini \\\n    && rm -rf /tmp/ioncube* \\\n; rm /tmp/ioncube_loaders_lin_x86-64.tar.gzfi\n\n###########################################################################\n# Opcache:\n###########################################################################\n\nARG INSTALL_OPCACHE=false\n\nRUN if [ ${INSTALL_OPCACHE} = true ]; then \\\n    docker-php-ext-install opcache \\\n;fi\n\n# Copy opcache configration\nCOPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini\n\n###########################################################################\n# Mysqli Modifications:\n###########################################################################\n\nARG INSTALL_MYSQLI=false\n\nRUN if [ ${INSTALL_MYSQLI} = true ]; then \\\n    docker-php-ext-install mysqli \\\n;fi\n\n\n###########################################################################\n# Human Language and Character Encoding Support:\n###########################################################################\n\nARG INSTALL_INTL=false\n\nRUN if [ ${INSTALL_INTL} = true ]; then \\\n    apt-get install --no-install-recommends -y zlib1g-dev libicu-dev g++ && \\\n    docker-php-ext-configure intl && \\\n    docker-php-ext-install intl \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# GHOSTSCRIPT:\n###########################################################################\n\nARG INSTALL_GHOSTSCRIPT=false\n\nRUN if [ ${INSTALL_GHOSTSCRIPT} = true ]; then \\\n    apt-get install --no-install-recommends -y \\\n    poppler-utils \\\n    ghostscript \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# LDAP:\n###########################################################################\n\nARG INSTALL_LDAP=false\n\nRUN if [ ${INSTALL_LDAP} = true ]; then \\\n    apt-get install --no-install-recommends -y libldap2-dev && \\\n    docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ && \\\n    docker-php-ext-install ldap \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# SQL SERVER:\n###########################################################################\n\nARG INSTALL_MSSQL=false\n\nRUN set -eux; \\\n  if [ ${INSTALL_MSSQL} = true ]; then \\\n    if [ $(php -r \"echo PHP_MAJOR_VERSION;\") = \"5\" ]; then \\\n      apt-get -y --no-install-recommends install freetds-dev libsybdb5 \\\n      && ln -s /usr/lib/x86_64-linux-gnu/libsybdb.so /usr/lib/libsybdb.so \\\n      && docker-php-ext-install mssql pdo_dblib \\\n      && php -m | grep -q 'mssql' \\\n      && php -m | grep -q 'pdo_dblib' \\\n    ; rm -rf /var/lib/apt/lists/*; elif \\\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      [ $(php -r \"echo PHP_MINOR_VERSION;\") = \"0\" ]; then \\\n      apt-get install --no-install-recommends -y apt-transport-https gnupg \\\n      && curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \\\n      && curl -f https://packages.microsoft.com/config/debian/9/prod.list > /etc/apt/sources.list.d/mssql-release.list \\\n      && apt-get update -yqq \\\n      # Install Dependencies\n      && ACCEPT_EULA=Y apt-get --no-install-recommends install -y unixodbc unixodbc-dev libgss3 odbcinst msodbcsql17 locales \\\n      && echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n      # link local aliases\n      && ln -sfn /etc/locale.alias /usr/share/locale/locale.alias \\\n      && locale-gen \\\n      # Install pdo_sqlsrv and sqlsrv from PECL. Replace pdo_sqlsrv-4.1.8preview with preferred version.\n      && if [ $(php -r \"echo PHP_MINOR_VERSION;\") = \"0\" ]; then \\\n        pecl install pdo_sqlsrv-5.3.0 sqlsrv-5.3.0 \\\n      ;else \\\n        pecl install pdo_sqlsrv sqlsrv \\\n      ;fi \\\n      && docker-php-ext-enable pdo_sqlsrv sqlsrv \\\n      && php -m | grep -q 'pdo_sqlsrv' \\\n      && php -m | grep -q 'sqlsrv' \\\n    ; rm -rf /var/lib/apt/lists/*; else \\\n        pecl install pdo_sqlsrv sqlsrv \\\n      ;fi \\\n\n\n\n    fi \\\n  ; elif \\\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      [ $(php -r \"echo PHP_MINOR_VERSION;\") = \"0\" ]; then \\\n      apt-get install --no-install-recommends -y apt-transport-https gnupg \\\n      && curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \\\n      && curl -f https://packages.microsoft.com/config/debian/9/prod.list > /etc/apt/sources.list.d/mssql-release.list \\\n      && apt-get update -yqq \\\n      # Install Dependencies\n      && ACCEPT_EULA=Y apt-get --no-install-recommends install -y unixodbc unixodbc-dev libgss3 odbcinst msodbcsql17 locales \\\n      && echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n      # link local aliases\n      && ln -sfn /etc/locale.alias /usr/share/locale/locale.alias \\\n      && locale-gen \\\n      # Install pdo_sqlsrv and sqlsrv from PECL. Replace pdo_sqlsrv-4.1.8preview with preferred version.\n      && if [ $(php -r \"echo PHP_MINOR_VERSION;\") = \"0\" ]; then \\\n        pecl install pdo_sqlsrv-5.3.0 sqlsrv-5.3.0 \\\n      ;else \\\n        pecl install pdo_sqlsrv sqlsrv \\\n      ;fi \\\n      && docker-php-ext-enable pdo_sqlsrv sqlsrv \\\n      && php -m | grep -q 'pdo_sqlsrv' \\\n      && php -m | grep -q 'sqlsrv' \\\n    ; rm -rf /var/lib/apt/lists/*; else \\\n        pecl install pdo_sqlsrv sqlsrv \\\n      ;fi \\\n\n\n\n    fi \\\n  fi\n\n###########################################################################\n# Image optimizers:\n###########################################################################\n\nUSER root\n\nARG INSTALL_IMAGE_OPTIMIZERS=false\n\nRUN if [ ${INSTALL_IMAGE_OPTIMIZERS} = true ]; then \\\n    apt-get install --no-install-recommends -y jpegoptim optipng pngquant gifsicle \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# ImageMagick:\n###########################################################################\n\nUSER root\n\nARG INSTALL_IMAGEMAGICK=false\n\nRUN if [ ${INSTALL_IMAGEMAGICK} = true ]; then \\\n    apt-get install --no-install-recommends -y libmagickwand-dev imagemagick && \\\n    pecl install imagick && \\\n    docker-php-ext-enable imagick \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# IMAP:\n###########################################################################\n\nARG INSTALL_IMAP=false\n\nRUN if [ ${INSTALL_IMAP} = true ]; then \\\n    apt-get install --no-install-recommends -y libc-client-dev libkrb5-dev && \\\n    rm -r /var/lib/apt/lists/* && \\\n    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \\\n    docker-php-ext-install imap \\\n; fi\n\n###########################################################################\n# Calendar:\n###########################################################################\n\nUSER root\n\nARG INSTALL_CALENDAR=false\n\nRUN if [ ${INSTALL_CALENDAR} = true ]; then \\\n    docker-php-ext-configure calendar && \\\n    docker-php-ext-install calendar \\\n;fi\n\n###########################################################################\n# Phalcon:\n###########################################################################\n\nARG INSTALL_PHALCON=false\nARG LARADOCK_PHALCON_VERSION\nENV LARADOCK_PHALCON_VERSION ${LARADOCK_PHALCON_VERSION}\n\n# Copy phalcon configration\nCOPY ./phalcon.ini /usr/local/etc/php/conf.d/phalcon.ini.disable\n\nRUN if [ $INSTALL_PHALCON = true ]; then \\\n    apt-get update && apt-get install --no-install-recommends -y unzip libpcre3-dev gcc make re2c \\\n    && curl -f -L -o /tmp/cphalcon.zip https://github.com/phalcon/cphalcon/archive/v${LARADOCK_PHALCON_VERSION}.zip \\\n    && unzip -d /tmp/ /tmp/cphalcon.zip \\\n    && cd /tmp/cphalcon-${LARADOCK_PHALCON_VERSION}/build \\\n    && ./install \\\n    && mv /usr/local/etc/php/conf.d/phalcon.ini.disable /usr/local/etc/php/conf.d/phalcon.ini \\\n    && rm -rf /tmp/cphalcon* \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# APCU:\n###########################################################################\n\nARG INSTALL_APCU=false\n\nRUN if [ ${INSTALL_APCU} = true ]; then \\\n    if [ $(php -r \"echo PHP_MAJOR_VERSION;\") = \"5\" ]; then \\\n        pecl install -a apcu-4.0.11; \\\n    else \\\n        pecl install apcu; \\\n    fi && \\\n    docker-php-ext-enable apcu \\\n;fi\n\n###########################################################################\n# YAML:\n###########################################################################\n\nUSER root\n\nARG INSTALL_YAML=false\n\nRUN if [ ${INSTALL_YAML} = true ]; then \\\n    apt-get install --no-install-recommends libyaml-dev -y; rm -rf /var/lib/apt/lists/*; \\\n    if [ $(php -r \"echo PHP_MAJOR_VERSION;\") = \"5\" ]; then \\\n        pecl install -a yaml-1.3.2; \\\n    else \\\n        pecl install yaml; \\\n    fi && \\\n    docker-php-ext-enable yaml \\\n;else \\\n        pecl install yaml; \\\n    fi \\\n\nfi\n\n###########################################################################\n# RDKAFKA:\n###########################################################################\n\nARG INSTALL_RDKAFKA=false\n\nRUN if [ ${INSTALL_RDKAFKA} = true ]; then \\\n    apt-get install --no-install-recommends -y librdkafka-dev && \\\n    pecl install rdkafka && \\\n    docker-php-ext-enable rdkafka \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# Install additional locales:\n###########################################################################\n\nARG INSTALL_ADDITIONAL_LOCALES=false\nARG ADDITIONAL_LOCALES\n\nRUN if [ ${INSTALL_ADDITIONAL_LOCALES} = true ]; then \\\n    apt-get install --no-install-recommends -y locales \\\n    && echo '' >> /usr/share/locale/locale.alias \\\n    && temp=\"${ADDITIONAL_LOCALES%\\\"}\" \\\n    && temp=\"${temp#\\\"}\" \\\n    && for i in ${temp}; do sed -i \"/$i/s/^#//g\" /etc/locale.gen; done \\\n    && locale-gen \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# MySQL Client:\n###########################################################################\n\nUSER root\n\nARG INSTALL_MYSQL_CLIENT=false\n\nRUN if [ ${INSTALL_MYSQL_CLIENT} = true ]; then \\\n    apt-get update -yqq && \\\n    apt-get -y --no-install-recommends install mysql-client \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# ping:\n###########################################################################\n\nUSER root\n\nARG INSTALL_PING=false\n\nRUN if [ ${INSTALL_PING} = true ]; then \\\n    apt-get update -yqq && \\\n    apt-get -y --no-install-recommends install inetutils-ping \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# sshpass:\n###########################################################################\n\nUSER root\n\nARG INSTALL_SSHPASS=false\n\nRUN if [ ${INSTALL_SSHPASS} = true ]; then \\\n    apt-get update -yqq && \\\n    apt-get -y --no-install-recommends install sshpass \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# FFMPEG:\n###########################################################################\n\nUSER root\n\nARG INSTALL_FFMPEG=false\n\nRUN if [ ${INSTALL_FFMPEG} = true ]; then \\\n    apt-get update -yqq && \\\n    apt-get -y --no-install-recommends install ffmpeg \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# Check PHP version:\n###########################################################################\n\nRUN set -xe; php -v | head -n 1 | grep -q \"PHP ${LARADOCK_PHP_VERSION}.\"\n\n#\n#--------------------------------------------------------------------------\n# Final Touch\n#--------------------------------------------------------------------------\n#\n\nCOPY ./laravel.ini /usr/local/etc/php/conf.d\nCOPY ./xlaravel.pool.conf /usr/local/etc/php-fpm.d/\n\nUSER root\n\n# Clean up\nRUN apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    rm /var/log/lastlog /var/log/faillog\n\nRUN usermod -u 1000 www-data\n\n# Adding the faketime library to the preload file needs to be done last\n# otherwise it will preload it for all commands that follow in this file\nRUN if [ ${INSTALL_FAKETIME} = true ]; then \\\n    echo \"/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1\" > /etc/ld.so.preload \\\n;fi\n\nWORKDIR /var/www\n\nCMD [\"php-fpm\"]\n\nEXPOSE 9000\n"
}