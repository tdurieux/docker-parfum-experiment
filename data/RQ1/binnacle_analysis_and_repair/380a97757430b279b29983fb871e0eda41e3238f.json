{
  "startTime": 1674242553066,
  "endTime": 1674242553422,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:latest\nFROM irfanah/appium-ruby:latest\n\nMAINTAINER irfan@critick.io\n\nENV PHANTOM_VERSION=\"phantomjs-2.1.1-linux-x86_64\"\n\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y build-essential chrpath libssl-dev libxft-dev libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev && \\\n    curl -f -L -O https://bitbucket.org/ariya/phantomjs/downloads/$PHANTOM_VERSION.tar.bz2 && \\\n    tar xvjf $PHANTOM_VERSION.tar.bz2 && \\\n    mv $PHANTOM_VERSION /usr/local/share && \\\n    ln -sf /usr/local/share/$PHANTOM_VERSION/bin/phantomjs /usr/local/bin && rm $PHANTOM_VERSION.tar.bz2 && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  build-essential \\\n  nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /opt/testing\nWORKDIR /opt/testing\nADD . /opt/testing\n\nRUN gem install bundler\nRUN gem install nokogiri\n"
}