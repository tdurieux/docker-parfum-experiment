{
  "startTime": 1674242855574,
  "endTime": 1674242855678,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM i386/alpine:3.4\n\nARG NODE_VERSION\nARG NPM_VERSION\nARG XBIN_VERSION\n\nRUN apk add --no-cache curl make gcc g++ binutils-gold python linux-headers paxctl libgcc libstdc++ git vim tar gzip wget\n\nENV NPM_VERSION=$NPM_VERSION\nENV NODE_VERSION=$NODE_VERSION\nENV XBIN_VERSION=$XBIN_VERSION\n\nWORKDIR /\n\nRUN curl -f -sSL https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}.tar.gz | tar -xz && \\\n  cd /node-v${NODE_VERSION} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --fully-static && \\\n  make -j$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) && \\\n  make install && \\\n  paxctl -cm /usr/bin/node\n\nRUN mkdir xbintemp && mv node-v${NODE_VERSION} xbintemp/${NODE_VERSION}\nRUN npm install -g xbin@${XBIN_VERSION} && npm cache clean --force;\nENV XBIN_TEMP=/xbintemp\n\nRUN echo 'console.log(\"setup\")' | xbin -c=\"--fully-static\" > out.bin\n\nRUN node -e \"var f=require('fs'),s='*'.repeat(19),o='out.bin';c=f.readFileSync(o);f.writeFileSync(o,c.slice(0,c.indexOf('/'+s+'xbin-start')))\"\n#docker build --build-arg NODE_VERSION=6.9.3 --build-arg NPM_VERSION=3.10.10 --build-arg XBIN_VERSION=2.2.0 -t xbin-static:6.9.3 .\n#docker run -it -d xbin-static:6.9.3 sh\n#docker ps\n#docker cp <container_id>:/out.bin linux-static-ia32-6.9.3\n"
}