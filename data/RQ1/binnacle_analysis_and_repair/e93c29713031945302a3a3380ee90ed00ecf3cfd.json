{
  "startTime": 1674236826205,
  "endTime": 1674236827042,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 7,
        "columnEnd": 72
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 154,
        "lineEnd": 154,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 79,
        "columnStart": 7,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 79,
        "columnStart": 7,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:latest\nMAINTAINER boogy <theboogymaster@gmail.com>\n\nENV DEBIAN_FRONTEND noninteractive\nRUN dpkg --add-architecture i386 \\\n    && apt-get update \\\n    && apt-get -yq --no-install-recommends install \\\n    build-essential \\\n    python2.7 \\\n    python2.7-dev \\\n    python-dbg \\\n    python-imaging \\\n    python-pycryptopp \\\n    python-pyside \\\n    python-dev \\\n    python-dev \\\n    python-pip \\\n    python-virtualenv \\\n    virtualenvwrapper \\\n    python3 \\\n    python3-pip \\\n    python3-dev \\\n    libqt4-dev \\\n    libxml2-dev \\\n    libxslt1-dev \\\n    libgraphviz-dev \\\n    libjpeg8 \\\n    libjpeg62-dev \\\n    libfreetype6 \\\n    libfreetype6-dev \\\n    apt-utils \\\n    default-jre \\\n    libboost-all-dev \\\n    git \\\n    sudo \\\n    p7zip \\\n    autoconf \\\n    libssl-dev \\\n    libpcap-dev \\\n    libffi-dev \\\n    libqt4-dev \\\n    graphviz-dev \\\n    cmake \\\n    clang \\\n    llvm \\\n    nasm \\\n    tmux \\\n    gdb \\\n    gdb-multiarch \\\n    gdbserver \\\n    foremost \\\n    ipython \\\n    stow \\\n    virtualenvwrapper \\\n    ltrace \\\n    strace \\\n    socat \\\n    tcpdump \\\n    john \\\n    hydra \\\n    vim \\\n    curl \\\n    wget \\\n    nmap \\\n    gcc-multilib \\\n    g++-multilib \\\n    netcat \\\n    openssh-server \\\n    openssh-client \\\n    lsof \\\n    libc6:i386 \\\n    libncurses5:i386 \\\n    libstdc++6:i386 \\\n    libc6-dev-i386 \\\n    squashfs-tools \\\n    apktool \\\n    libimage-exiftool-perl \\\n    qemu \\\n    qemu-user \\\n    qemu-user-static && rm -rf /var/lib/apt/lists/*;\n\n## super root password\nRUN /bin/echo -e \"toor\\ntoor\"|passwd root\n\n## setup a user\nRUN useradd -m -s /bin/bash ctf \\\n    && usermod -aG sudo ctf \\\n    && /bin/echo -e \"ctf\\nctf\"|passwd ctf \\\n    && chmod 4750 /home/ctf \\\n    && mkdir -p /home/ctf/tools \\\n    && chown -R ctf: /home/ctf \\\n    && mkdir -p /etc/sudoers.d \\\n    && echo \"ctf ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/ctf \\\n    && echo \"kernel.yama.ptrace_scope = 0\" > /etc/sysctl.d/10-ptrace.conf, \\\n    && sysctl -p\n\n## clone my dotfiles\nRUN git clone https://github.com/boogy/dotfiles.git /home/ctf/dotfiles\n\n## Other python cool pip modules\nRUN pip2 install --no-cache-dir --upgrade pip \\\n    && pip2 install --no-cache-dir --upgrade r2pipe \\\n    && pip2 install --no-cache-dir --upgrade Pillow \\\n    && pip2 install --no-cache-dir --upgrade distorm3 \\\n    && pip2 install --no-cache-dir --upgrade pycrypto \\\n    && pip2 install --no-cache-dir --upgrade git+https://github.com/hellman/xortool.git\n\n## Install Binjitsu\nRUN pip install --no-cache-dir --upgrade git+https://github.com/Gallopsled/pwntools.git\n\n## Install peda\nRUN git clone https://github.com/longld/peda.git /home/ctf/tools/peda \\\n    && echo -en \"define load_peda\\n  source /home/ctf/tools/peda/peda.py\\nend\\n\" >> /home/ctf/.gdbinit\n\n## Install pwndbg\nRUN git clone https://github.com/zachriggle/pwndbg /home/ctf/tools/pwndbg \\\n    && echo -en \"\\ndefine load_pwndbg\\n  source /home/ctf/tools/pwndbg/gdbinit.py\\nend\\n\" >> /home/ctf/.gdbinit \\\n    && pip3 install --no-cache-dir pycparser\n\n## Install capstone\nRUN git clone https://github.com/aquynh/capstone /home/ctf/tools/capstone \\\n    && cd /home/ctf/tools/capstone \\\n    && ./make.sh \\\n    && ./make.sh install \\\n    && cd /home/ctf/tools/capstone/bindings/python \\\n    && python3 setup.py install \\\n    && python2 setup.py install\n\n## Install radare2\nRUN git clone https://github.com/radare/radare2 /home/ctf/tools/radare2 \\\n    && cd /home/ctf/tools/radare2 \\\n    && ./sys/install.sh\n\n## Install binwalk\nRUN git clone https://github.com/devttys0/binwalk /home/ctf/tools/binwalk \\\n    && cd /home/ctf/tools/binwalk \\\n    && python setup.py install\n\n## Uninstall capstone for python2\n#RUN pip2 uninstall capstone -y \\\n#    && cd /home/ctf/tools/capstone/bindings/python \\\n#    && python3 setup.py install\n\n## Install american-fuzzy-lop\nRUN wget --quiet https://lcamtuf.coredump.cx/afl/releases/afl-latest.tgz -O /home/ctf/tools/afl-latest.tgz \\\n    && cd /home/ctf/tools/ \\\n    && tar -xzvf afl-latest.tgz \\\n    && rm afl-latest.tgz \\\n    && (cd afl-*;make;(cd llvm_mode;make);make install)\n\n## Install angr\n#RUN git clone https://github.com/angr/angr-dev /home/ctf/tools/angr-dev \\\n#    && cd /home/ctf/tools/angr-dev \\\n#    && ./setup.sh -i -e angr\nRUN pip2 install --no-cache-dir angr\n\n# RUN git clone https://github.com/angr/angr-dev /home/ctf/tools/angr-dev \\\n#     && cd /home/ctf/tools/angr-dev \\\n#     && . /usr/local/bin/virtualenvwrapper.sh \\\n#     && mkvirtualenv angr \\\n#     && echo \"I know this is a bad idea.\"|./setup.sh -i \\\n#     && deactivate\n#     # && ./setup.sh -i -e angr\n\n## Install rp++\nRUN apt-get install --no-install-recommends -yq clang-3.5 \\\n    && export CC=/usr/bin/clang-3.5 \\\n    && export CXX=/usr/bin/clang++-3.5 \\\n    && cd /home/ctf/tools \\\n    && git clone https://github.com/0vercl0k/rp.git \\\n    && cd rp \\\n    && git checkout next \\\n    && git submodule update --init --recursive \\\n    && sed -i 's/find_package(Boost 1.59.0 COMPONENTS flyweight)/find_package(Boost)/g' CMakeLists.txt \\\n    && mkdir build \\\n    && cd build \\\n    && cmake ../ \\\n    && make \\\n    && cp ../bin/rp-lin-x64 /usr/local/bin/ && rm -rf /var/lib/apt/lists/*;\n\n\n## Install ROPGadget\nRUN git clone https://github.com/JonathanSalwan/ROPgadget /home/ctf/tools/ROPgadget \\\n    && cd /home/ctf/tools/ROPgadget \\\n    && python setup.py install\n\n\n## Install Z3 Prover\nRUN git clone https://github.com/Z3Prover/z3.git /home/ctf/tools/z3 \\\n    && cd /home/ctf/tools/z3 \\\n    && python scripts/mk_make.py --python \\\n    && cd build \\\n    && make install\n\n## Install keystone engine\nRUN git clone https://github.com/keystone-engine/keystone.git /home/ctf/tools/keystone \\\n    && cd /home/ctf/tools/keystone \\\n    && mkdir build \\\n    && cd build \\\n    && ../make-share.sh \\\n    && make install \\\n    && ldconfig \\\n    && cd /home/ctf/tools/keystone/bindings/python \\\n    && make install\n\n## Install manticore\n#RUN git clone --depth 1 https://github.com/trailofbits/manticore.git \\\n#    && cd manticore \\\n#    && pip install --no-binary capstone .\n\nEXPOSE 22 1337 3002 3003 4000\nUSER ctf\nWORKDIR /home/ctf\n\nCMD [\"/bin/bash\", \"-i\"]\n"
}