{
  "startTime": 1674245755982,
  "endTime": 1674245756163,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 83
      }
    }
  ],
  "repairedDockerfile": "FROM phusion/baseimage:0.9.17\nMAINTAINER Anatoly Bubenkov \"bubenkoff@gmail.com\"\n\nENV HOME /root\n\n# enable ssh\nRUN rm -f /etc/service/sshd/down\n\n# Regenerate SSH host keys. baseimage-docker does not contain any, so you\n# have to do that yourself. You may also comment out this instruction; the\n# init system will auto-generate one during boot.\nRUN /etc/my_init.d/00_regen_ssh_host_keys.sh\n\n# Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n\nRUN apt-get update\n\nRUN apt-get install --no-install-recommends -y openssh-server wget lsb-release sudo && rm -rf /var/lib/apt/lists/*;\nRUN \\\n    export release=`lsb_release -cs` \\\n    && wget https://apt.puppetlabs.com/puppetlabs-release-$release.deb -O puppetlabs-release-$release.deb \\\n    && dpkg -i puppetlabs-release-$release.deb \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends puppet -y && rm -rf /var/lib/apt/lists/*;\n\nEXPOSE 22\n\nRUN mkdir -p /var/run/sshd\nRUN chmod 0755 /var/run/sshd\n\n# Create and configure vagrant user\nRUN useradd --create-home -s /bin/bash vagrant\nWORKDIR /home/vagrant\n\n# Configure SSH access\nRUN mkdir -p /home/vagrant/.ssh\nRUN echo \"ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key\" > /home/vagrant/.ssh/authorized_keys\nRUN chown -R vagrant: /home/vagrant/.ssh\nRUN echo -n 'vagrant:vagrant' | chpasswd\n\n# Enable passwordless sudo for the \"vagrant\" user\nRUN mkdir -p /etc/sudoers.d\nRUN install -b -m 0440 /dev/null /etc/sudoers.d/vagrant\nRUN echo 'vagrant ALL=NOPASSWD: ALL' >> /etc/sudoers.d/vagrant\n\n\n# Clean up APT when done.\n\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n"
}