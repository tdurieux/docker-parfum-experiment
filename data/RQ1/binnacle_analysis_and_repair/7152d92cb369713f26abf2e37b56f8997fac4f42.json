{
  "startTime": 1674235790745,
  "endTime": 1674235791059,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 103
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 127
      }
    }
  ],
  "repairedDockerfile": "# Cross compilation environment for spotty\n\nFROM debian:stretch\n\nRUN dpkg --add-architecture arm64\nRUN dpkg --add-architecture armhf\nRUN dpkg --add-architecture armel\nRUN dpkg --add-architecture i686\nRUN apt-get update\n\nRUN apt-get install --no-install-recommends -y curl git build-essential gcc-multilib musl-tools musl-dev musl && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y crossbuild-essential-armhf crossbuild-essential-armel crossbuild-essential-arm64 && rm -rf /var/lib/apt/lists/*;\n\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\nENV PATH=\"/root/.cargo/bin/:${PATH}\"\nRUN rustup target add x86_64-unknown-linux-musl\nRUN rustup target add i686-unknown-linux-musl\nRUN rustup target add aarch64-unknown-linux-gnu\n#RUN rustup target add arm-unknown-linux-musleabihf\nRUN rustup target add arm-unknown-linux-gnueabihf\nRUN rustup target add arm-unknown-linux-gnueabi\n\nRUN mkdir /.cargo && \\\n\techo '[target.aarch64-unknown-linux-gnu]\\nlinker = \"aarch64-linux-gnu-gcc\"' > /.cargo/config && \\\n\techo '[target.arm-unknown-linux-gnueabihf]\\nlinker = \"arm-linux-gnueabihf-gcc\"' >> /.cargo/config && \\\n\techo '[target.arm-unknown-linux-gnueabi]\\nlinker = \"arm-linux-gnueabi-gcc\"' >> /.cargo/config\n#\techo '[target.arm-unknown-linux-musleabihf]\\nlinker = \"arm-linux-gnueabihf-gcc\"' >> /.cargo/config\n\nRUN mkdir /build\nENV CARGO_TARGET_DIR /build\nENV CARGO_HOME /build/cache\n\nRUN mkdir /src\n\nWORKDIR /src\nCMD [\"/src/docker/docker-build.sh\"]\n"
}