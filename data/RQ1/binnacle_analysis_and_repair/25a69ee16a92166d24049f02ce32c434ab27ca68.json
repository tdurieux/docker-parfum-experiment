{
  "startTime": 1674245085875,
  "endTime": 1674245085947,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 25,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# DEPLOYMENT INSTRUCTIONS\n\n# To build the image, refer:\n# docker build -t sarjitsu_backend --build-arg BACKEND_SERVER_PORT=80 .\n\n# To run using the container, refer the following command:\n# docker run --privileged -it -d \\\n#             --name node_jitsu \\\n#             -v /sys/fs/cgroup:/sys/fs/cgroup:ro \\\n#             sarjitsu_backend\n\n# optionally, supply -p 9210:80 to map the backend\n# container's port 80 to your host at 9210\n###########################################################\n\nFROM fedora:25\nMAINTAINER arcolife <archit.py@gmail.com>\n\n# deps\nRUN dnf --setopt=deltarpm=false -y install net-tools procps git tar bzip2 redis python3-devel gcc nss_wrapper gettext\n\nENV VOS_CONFIG_PATH=/opt/sarjitsu/conf/sar-index.cfg\n\nARG ES_HOST\nENV ES_HOST=${ES_HOST}\nARG ES_PORT\nENV ES_PORT=${ES_PORT}\nARG INDEX_PREFIX\nENV INDEX_PREFIX=${INDEX_PREFIX}\nARG INDEX_VERSION\nENV INDEX_VERSION=${INDEX_VERSION}\nARG BULK_ACTION_COUNT\nENV BULK_ACTION_COUNT=${BULK_ACTION_COUNT}\nARG SHARD_COUNT\nENV SHARD_COUNT=${SHARD_COUNT}\nARG REPLICAS_COUNT\nENV REPLICAS_COUNT=${REPLICAS_COUNT}\nARG GRAFANA_HOST\nENV GRAFANA_HOST=${GRAFANA_HOST}\nARG GRAFANA_PORT\nENV GRAFANA_PORT=${GRAFANA_PORT}\nARG MIDDLEWARE_HOST\nENV MIDDLEWARE_HOST=${MIDDLEWARE_HOST}\nARG MIDDLEWARE_PORT\nENV MIDDLEWARE_PORT=${MIDDLEWARE_PORT}\nARG MIDDLEWARE_ENDPOINT\nENV MIDDLEWARE_ENDPOINT=${MIDDLEWARE_ENDPOINT}\n\n# expose ports for sarjitsu\nARG BACKEND_SERVER_PORT\nENV BACKEND_SERVER_PORT=${BACKEND_SERVER_PORT}\nEXPOSE ${BACKEND_SERVER_PORT}\n\nRUN useradd -ms /bin/bash flask\n\n# scaffolding\nRUN mkdir -p /opt/sarjitsu/conf\n\n# copy configs from example files and modify them later through entrypoint\nCOPY conf/sarjitsu.ini.example /opt/sarjitsu/conf/sarjitsu.ini\nCOPY conf/sar-index.cfg.example /opt/sarjitsu/conf/sar-index.cfg\nCOPY src/requirements.txt /opt/sarjitsu/\nRUN cd /opt/sarjitsu/ && pip3 install --no-cache-dir -r requirements.txt\n\nADD src/ /opt/sarjitsu/src\n\nRUN chgrp -R 0 /opt/sarjitsu/ \\\n  && chmod -R g+rwX /opt/sarjitsu/ \\\n  && chown -R flask:root /opt/sarjitsu/\n\nWORKDIR /opt/sarjitsu/src\n# VOLUME /var/lib/postgresql/data\nCOPY conf/passwd.template /${HOME}/passwd.template\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\n# cleanup development mode traces while building the image again\nRUN rm -f /opt/sarjitsu/src/config_local.py\n\nUSER flask\n\nCMD [\"backend\"]\n"
}