{
  "startTime": 1674240731493,
  "endTime": 1674240732199,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 7,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 110
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG FROM_TAG=3.29-1-alpine\n\nFROM jenkins/jnlp-slave:${FROM_TAG}\n\nARG GOSU_VERSION=1.11\nARG DOCKER_CHANNEL=stable\nARG DOCKER_VERSION=18.09.6\nARG TINY_VERSION=0.18.0\n\n##########################################\n# Alpine GLIBC ONLY\nARG ALPINE_GLIBC_PACKAGE_VERSION=2.29-r0\nARG GCC_LIBS=gcc-libs-8.3.0-1-x86_64.pkg.tar.xz\nARG GCC_LIBS_URL=https://archive.archlinux.org/packages/g/gcc-libs/${GCC_LIBS}\nARG ZLIB_URL_ENCODED=\"zlib-1%3A1.2.11-3-x86_64.pkg.tar.xz\"\nARG ZLIB=\"zlib-1:1.2.11-3-x86_64.pkg.tar.xz\"\nARG ZLIB_URL=https://archive.archlinux.org/packages/z/zlib/${ZLIB_URL_ENCODED}\nARG ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\"\n##########################################\n\nUSER root\n\nRUN \\\n    # alpine only glibc\n    if [ -f /etc/alpine-release ] ; then \\\n        cd /tmp \\\n        \\\n        && ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n        && ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n        && ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \\\n        && apk add --no-cache --virtual=.build-dependencies wget curl ca-certificates binutils gnupg \\\n        && echo \\\n            \"-----BEGIN PUBLIC KEY-----\\\n            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApZ2u1KJKUu/fW4A25y9m\\\n            y70AGEa/J3Wi5ibNVGNn1gT1r0VfgeWd0pUybS4UmcHdiNzxJPgoWQhV2SSW1JYu\\\n            tOqKZF5QSN6X937PTUpNBjUvLtTQ1ve1fp39uf/lEXPpFpOPL88LKnDBgbh7wkCp\\\n            m2KzLVGChf83MS0ShL6G9EQIAUxLm99VpgRjwqTQ/KfzGtpke1wqws4au0Ab4qPY\\\n            KXvMLSPLUp7cfulWvhmZSegr5AdhNw5KNizPqCJT8ZrGvgHypXyiFvvAH5YRtSsc\\\n            Zvo9GI2e2MaZyo9/lvb+LbLEJZKEQckqRj4P26gmASrZEPStwc+yqy1ShHLA0j6m\\\n            1QIDAQAB\\\n            -----END PUBLIC KEY-----\" | sed 's/   */\\n/g' > \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n        && wget -q \\\n            \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n            \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n            \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n        && apk add --no-cache \\\n            \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n            \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n            \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n        \\\n        && rm \"/etc/apk/keys/sgerrand.rsa.pub\" \\\n        \\\n        && wget -q ${GCC_LIBS_URL} ${GCC_LIBS_URL}.sig \\\n        && mkdir /tmp/gcc \\\n        && tar -xf \"${GCC_LIBS}\" -C /tmp/gcc \\\n        && mv /tmp/gcc/usr/lib/libgcc* /tmp/gcc/usr/lib/libstdc++* /usr/glibc-compat/lib \\\n        && strip /usr/glibc-compat/lib/libgcc_s.so.* /usr/glibc-compat/lib/libstdc++.so* \\\n        && mkdir /tmp/libz \\\n        && wget -q \"${ZLIB_URL}\" \"${ZLIB_URL}.sig\" \\\n        && tar -xf \"${ZLIB}\" -C /tmp/libz \\\n        && mv /tmp/libz/usr/lib/libz.so* /usr/glibc-compat/lib \\\n        && \\\n        /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 \\\n        && echo \"export LANG=en_US.UTF-8\" > /etc/profile.d/locale.sh \\\n        \\\n        && apk del glibc-i18n \\\n        \\\n        && apk del .build-dependencies \\\n        && rm \\\n            \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n            \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n            \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \\\n        \\\n        && rm -rf /tmp/${GLIBC_VER}.apk /tmp/gcc /tmp/${ZLIB} /tmp/libz /tmp/${GCC_LIBS} /var/cache/apk/* \\\n        ; \\\n    elif [ -f /etc/debian_version ] ; then \\\n        echo \"Debian, setting locales\" \\\n        && apt-get update \\\n        && apt-get install -y --no-install-recommends locales \\\n        && localedef  -i en_US -f UTF-8 en_US.UTF-8 \\\n        && rm -rf /var/lib/apt/lists/* \\\n        ; \\\n    fi\n\nENV LANG=en_US.UTF-8\n\nRUN \\\n    echo \"Installing required packages\" \\\n    ; \\\n    if [ -f /etc/alpine-release ] ; then \\\n        apk add --no-cache curl shadow iptables \\\n        ; \\\n    elif [ -f /etc/debian_version ] ; then \\\n        apt-get update \\\n        && apt-get install -y --no-install-recommends curl iptables \\\n        && rm -rf /var/lib/apt/lists/* \\\n        ; \\\n    fi\n\n\nRUN \\\n    echo \"Installing tiny and gosu\" \\\n    ; \\\n    curl -f -SsLo /usr/bin/gosu https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64 \\\n    && chmod +x /usr/bin/gosu \\\n    && curl -f -SsLo /usr/bin/tiny https://github.com/krallin/tini/releases/download/v${TINY_VERSION}/tini-amd64 \\\n    && chmod +x /usr/bin/tiny\n\n\nRUN \\\n    echo \"Installing docker\" \\\n    ; \\\n    curl -f -Ssl \"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" | \\\n    tar -xz  --strip-components 1 --directory /usr/bin/\n\nRUN \\\n    echo \"Installing docker-compose\" \\\n    ; \\\n    if [ -f /etc/alpine-release ] ; then \\\n        apk add --no-cache python3 \\\n        \\\n        && apk add --no-cache --virtual .build-deps \\\n            python3-dev libffi-dev openssl-dev gcc libc-dev make \\\n        && pip3 install --upgrade --no-cache-dir pip \\\n        && pip3 install --upgrade --no-cache-dir docker-compose \\\n        && apk del .build-deps \\\n        ; \\\n    elif [ -f /etc/debian_version ] ; then \\\n        buildDeps=\"python3-dev libffi-dev gcc make\" \\\n        && apt-get update \\\n        && apt-get install -y --no-install-recommends python3 python3-pip python3-setuptools \\\n        \\\n        && apt-get install -y --no-install-recommends $buildDeps \\\n        && pip3 install --upgrade --no-cache-dir docker-compose \\\n        && apt-get purge -y --auto-remove \\\n                  -o APT::AutoRemove::RecommendsImportant=false \\\n                  $buildDeps \\\n        && rm -rf /var/lib/apt/lists/* \\\n        ; \\\n    fi\n\nCOPY entrypoint.sh /entrypoint.sh\n\n## https://github.com/docker-library/docker/blob/fe2ca76a21fdc02cbb4974246696ee1b4a7839dd/18.06/modprobe.sh\nCOPY modprobe.sh /usr/local/bin/modprobe\n## https://github.com/jpetazzo/dind/blob/72af271b1af90f6e2a4c299baa53057f76df2fe0/wrapdocker\nCOPY wrapdocker.sh /usr/local/bin/wrapdocker\n\nVOLUME /var/lib/docker\n\nENTRYPOINT [ \"tiny\", \"--\", \"/entrypoint.sh\" ]\n"
}