{
  "startTime": 1674240538113,
  "endTime": 1674240538342,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# QIS Application server\n#\n# CentOS build and testing environment.\n#\nFROM centos:7.6.1810\n\nLABEL maintainer=\"matt@quru.com\" \\\n      description=\"QIS build and test environment on CentOS\"\n\n# Build variables\nARG BUILD_USER=build\nARG IM_VERSION=6.9.9-25\n# This should contain a public key (the actual key, not a filename) that is\n# allowed to log in via SSH. Pass this in as a build argument.\nARG AUTHORIZED_KEY\n\n# Install the EPEL and IUS repos\nRUN yum -y install epel-release && rm -rf /var/cache/yum\nRUN yum -y install https://centos$(rpm -E '%{rhel}').iuscommunity.org/ius-release.rpm && rm -rf /var/cache/yum\n\n# Add extra o/s tools\nRUN yum install -y sudo curl wget man git make gcc gcc-c++ sed mlocate tar zip unzip which \\\n                   java-1.8.0-openjdk-headless \\\n                   postgresql-devel openldap-devel openssl-devel libmemcached-devel \\\n                   python35u-devel python35u-pip \\\n                   openssh-server openssh-clients && \\\n    yum clean all && rm -rf /var/cache/yum\nRUN pip3.5 install --upgrade pip setuptools wheel virtualenv\n\n# Install ImageMagick devel from RPMs (as the CentOS 7 package is a buggy release)\nRUN wget -P /tmp \"https://quru.com/static2/imagemagick/ImageMagick-$IM_VERSION.x86_64.rpm\" && \\\n    wget -P /tmp \"https://quru.com/static2/imagemagick/ImageMagick-devel-$IM_VERSION.x86_64.rpm\" && \\\n    wget -P /tmp \"https://quru.com/static2/imagemagick/ImageMagick-libs-$IM_VERSION.x86_64.rpm\"\nRUN yum install -y /tmp/ImageMagick-libs-$IM_VERSION.x86_64.rpm && yum clean all && rm -rf /var/cache/yum\nRUN yum install -y /tmp/ImageMagick-$IM_VERSION.x86_64.rpm && yum clean all && rm -rf /var/cache/yum\nRUN yum install -y /tmp/ImageMagick-devel-$IM_VERSION.x86_64.rpm && yum clean all && rm -rf /var/cache/yum\n\n# Create a user for building and running stuff\nRUN groupadd --gid 1001 $BUILD_USER && \\\n    useradd --uid 1001 --gid 1001 --groups wheel --create-home --shell /bin/bash $BUILD_USER\nRUN sed -r -i 's/%wheel\\s+ALL=\\(ALL\\)\\s+ALL/%wheel        ALL=(ALL)       NOPASSWD: ALL/g' /etc/sudoers\n\n# Install an authorized key for logging in as the build user\nUSER $BUILD_USER\nWORKDIR /home/$BUILD_USER\nRUN mkdir .ssh && chmod 700 .ssh\nRUN echo \"$AUTHORIZED_KEY\" > .ssh/authorized_keys && \\\n    chmod 600 .ssh/authorized_keys\n\n# Set up SSHD\nUSER root\nRUN ssh-keygen -A\n\n# https://bugzilla.redhat.com/show_bug.cgi?id=1043212\nRUN rm -f /run/nologin\n\n# Run SSHD as the default command\nEXPOSE 22\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n"
}