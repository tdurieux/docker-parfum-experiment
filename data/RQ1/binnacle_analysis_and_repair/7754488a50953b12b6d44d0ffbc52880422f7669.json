{
  "startTime": 1674253037268,
  "endTime": 1674253037808,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM floydhub/dl-deps:3.1.0-cpu.33\nMAINTAINER Floyd Labs \"support@floydhub.com\"\n\n# From https://github.com/docker-library/python/blob/master/3.6./Dockerfile\n\n# ensure local python is preferred over distribution python\nENV PATH /usr/local/bin:$PATH\n\n# http://bugs.python.org/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG C.UTF-8\n\nENV GPG_KEY 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\nENV PYTHON_VERSION 3.6.5\n\nRUN set -ex \\\n\t&& apt-get update \\\n\t\t&& apt-get install -y --no-install-recommends \\\n\t\t\tdpkg-dev \\\n\t\t\ttcl-dev \\\n\t\t\ttk-dev \\\n\t\t&& apt-get clean \\\n\t\t&& apt-get autoremove \\\n\t\t&& rm -rf /var/lib/apt/lists/* \\\n\t\t&& rm -rf /var/cache/apt/archives/* \\\n\t\\\n\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n\t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n\t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n\t&& rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n\t&& mkdir -p /usr/src/python \\\n\t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n\t&& rm python.tar.xz \\\n\n\t&& cd /usr/src/python \\\n\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& ./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--with-tcltk-includes='-I/usr/include/tk -I/usr/include/tcl' \\\n\t\t--with-tcltk-libs='/usr/lib/x86_64-linux-gnu/libtcl.so /usr/lib/x86_64-linux-gnu/libtk.so' \\\n\t\t--enable-loadable-sqlite-extensions \\\n\t\t--enable-shared \\\n\t\t--with-system-expat \\\n\t\t--with-system-ffi \\\n\t\t--without-ensurepip \\\n\t&& make -j$(nproc) \\\n\t&& make install \\\n\t&& ldconfig \\\n\t&& find /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a -name test -o -name tests \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \\\n\t\t\\) -exec rm -rf '{}' + \\\n\t&& rm -rf /usr/src/python ~/.cache\n\n# make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n\t&& { [ -e easy_install ] || ln -s easy_install-* easy_install; } \\\n\t&& ln -s idle3 idle \\\n\t&& ln -s pydoc3 pydoc \\\n\t&& ln -s python3 python \\\n\t&& ln -s python3-config python-config\n\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 10.0.1\n\nRUN set -ex; \\\n    \\\n    wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \\\n    \\\n    python get-pip.py \\\n        --disable-pip-version-check \\\n        --no-cache-dir \\\n        \"pip==$PYTHON_PIP_VERSION\" \\\n    ; \\\n    pip --version; \\\n    \\\n    find /usr/local -depth \\\n        \\( \\\n            \\( -type d -a \\( -name test -o -name tests \\) \\) \\\n            -o \\\n            \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n        \\) -exec rm -rf '{}' +; \\\n    rm -f get-pip.py\n\nRUN pip --no-cache-dir install \\\n        virtualenv \\\n        PyOpenGL PyOpenGL_accelerate \\\n        Cython \\\n        h5py \\\n        jupyter \\\n        notebook==5.6.0 \\\n        numpy \\\n        pandas \\\n        matplotlib \\\n        ipykernel \\\n        path.py \\\n        pyyaml \\\n        scipy \\\n        six \\\n        sklearn \\\n        sympy \\\n        Pillow \\\n        zmq \\\n        opencv-contrib-python==3.4.0.12 \\\n    && rm -rf /tmp/* /var/tmp/* \\\n    && python -m ipykernel.kernelspec\n\n# Set up our notebook config.\nCOPY jupyter_notebook_config_py3.py /root/.jupyter/\nRUN mv /root/.jupyter/jupyter_notebook_config_py3.py /root/.jupyter/jupyter_notebook_config.py\n\n# Create the file configurations for IPython\n# and remove the default one.\nRUN ipython profile create && rm /root/.ipython/profile_default/ipython_config.py\n\n# Set up our IPython config.\nCOPY ipython_config.py /root/.ipython/profile_default/ipython_config.py\n\n# Jupyter has issues with being run directly:\n#   https://github.com/ipython/ipython/issues/7062\n# We just add a little wrapper script.\nCOPY run_jupyter.sh /\nRUN chmod +x /run_jupyter.sh\n\n# IPython\nEXPOSE 8888\n\nCMD [\"/run_jupyter.sh\"]"
}