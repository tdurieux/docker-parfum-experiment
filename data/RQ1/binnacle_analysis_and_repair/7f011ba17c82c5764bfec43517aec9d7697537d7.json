{
  "startTime": 1674243585147,
  "endTime": 1674243585185,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.12-stretch AS builder\n\n# Download tools\nRUN wget -O $GOPATH/bin/dep https://github.com/golang/dep/releases/download/v0.5.0/dep-linux-amd64\nRUN chmod +x $GOPATH/bin/dep\n\n# Copy sources\nWORKDIR $GOPATH/src/github.com/pusher/oauth2_proxy\nCOPY . .\n\n# Fetch dependencies\nRUN dep ensure --vendor-only\n\n# Build binary and make sure there is at least an empty key file.\n#  This is useful for GCP App Engine custom runtime builds, because\n#  you cannot use multiline variables in their app.yaml, so you have to\n#  build the key into the container and then tell it where it is\n#  by setting OAUTH2_PROXY_JWT_KEY_FILE=/etc/ssl/private/jwt_signing_key.pem\n#  in app.yaml instead.\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && GOARCH=arm64 make build && touch jwt_signing_key.pem\n\n# Copy binary to alpine\nFROM arm64v8/alpine:3.9\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\nCOPY --from=builder /go/src/github.com/pusher/oauth2_proxy/oauth2_proxy /bin/oauth2_proxy\nCOPY --from=builder /go/src/github.com/pusher/oauth2_proxy/jwt_signing_key.pem /etc/ssl/private/jwt_signing_key.pem\n\nUSER 2000:2000\n\nENTRYPOINT [\"/bin/oauth2_proxy\"]\n"
}