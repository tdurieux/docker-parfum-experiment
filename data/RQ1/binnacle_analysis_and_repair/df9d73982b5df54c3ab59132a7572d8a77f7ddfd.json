{
  "startTime": 1674250251868,
  "endTime": 1674250251952,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 15,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 104
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu\nMAINTAINER Andrew Smiley\n# Update packages\nRUN apt-get update -y\n\n# Install Python Setuptools and some other fancy tools for working we this container if we choose to attach to it\nRUN apt-get install --no-install-recommends -y tar git curl nano wget dialog net-tools build-essential && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y python python-dev python-distribute python-pip supervisor && rm -rf /var/lib/apt/lists/*;\n\n# copy the contents of this directory over to the container at location /src\nADD . /src\n\n\n# Add and install Python modules\n#we shouldn't have to do this twice but that's how the folks over at amazon suggested.\n# we'd probably be fine with just ADD . /src\nADD requirements.txt /src/requirements.txt\nRUN cd /src && pip install --no-cache-dir -r /src/requirements.txt\n\n###############################################################################################################################################################\n# This is the important part. The port we are exposing needs to match the port we are binding GUNICORN too. See the supervisord.conf file for the proper conf #\n###############################################################################################################################################################\nEXPOSE  8002\n#set the working directorly\nWORKDIR /src\n\n#basically this is the command to execute when we run the contaner. This is the default for sudo docker run for this image\nCMD supervisord -c /src/supervisord.conf\n\n"
}