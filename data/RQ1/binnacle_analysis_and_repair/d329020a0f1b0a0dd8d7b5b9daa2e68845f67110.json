{
  "startTime": 1674251552423,
  "endTime": 1674251552764,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 70,
        "columnStart": 1,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 71,
        "lineEnd": 73,
        "columnStart": 1,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lsiobase/alpine:3.8\n\n# set version label\nARG BUILD_DATE\nARG VERSION\nARG MUSICBRAINZ_RELEASE\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"sparklyballs\"\n\n# copy files required in build stage\nCOPY prebuilds/ /defaults/\n\n# global environment settings\nENV BABEL_DISABLE_CACHE=\"1\" \\\nHOME=\"/root\" \\\nLANG=\"en_US.utf8\" \\\nMBDATA=\"/data/import\" \\\nPGCONF=\"/config\" \\\nPGDATA=\"/data/dbase\" \\\nUPDATE_SLAVE_LOGDIR=\"/config/log/musicbrainz\" \\\nURL_ROOT=\"ftp://ftp.musicbrainz.org/pub/musicbrainz/data/fullexport\"\n\nRUN \\\n echo \"**** install build packages ****\" && \\\n apk add --no-cache --virtual=build-dependencies --upgrade \\\n\tdb-dev \\\n\texpat-dev \\\n\tg++ \\\n\tgcc \\\n\tgit \\\n\ticu-dev \\\n\tlibxml2-dev \\\n\tmake \\\n\tperl-dev && \\\n echo \"**** install runtime packages ****\" && \\\n apk add --no-cache --upgrade \\\n\tbzip2 \\\n\tcurl \\\n\tdb \\\n\texpat \\\n\tgit \\\n\ticu-libs \\\n\tnginx \\\n\tnodejs \\\n\tpatch \\\n\tlogrotate \\\n\tperl \\\n\tperl-crypt-rijndael \\\n\tperl-dbd-pg \\\n\tperl-db_file \\\n\tperl-net-ssleay \\\n\tpostgresql \\\n\tpostgresql-contrib \\\n\tpostgresql-dev \\\n\tprocps \\\n\tredis \\\n\ttar \\\n\twget \\\n\tyarn && \\\n echo \"**** fetch musicbrainz and install perl and node packages ****\" && \\\n if [ -z ${MUSICBRAINZ_RELEASE+x} ]; then \\\n\tMUSICBRAINZ_RELEASE=$(git ls-remote --tags https://github.com/metabrainz/musicbrainz-server.git \\\n\t| grep -v '{}' \\\n\t| tail -n 1 \\\n\t| awk -F / '{print $3}'); \\\n fi && \\\n mkdir -p \\\n\t/app/musicbrainz && \\\n curl -f -o \\\n /tmp/musicbrainz.tar.gz -L \\\n\t\"https://github.com/metabrainz/musicbrainz-server/archive/${MUSICBRAINZ_RELEASE}.tar.gz\" && \\\n tar xf \\\n /tmp/musicbrainz.tar.gz -C \\\n\t/app/musicbrainz --strip-components=1 && \\\n sed -i 's#$MB_SERVER_ROOT/#$UPDATE_SLAVE_LOGDIR/#g' /app/musicbrainz/admin/cron/slave.sh && \\\n cp /defaults/DBDefs.pm /app/musicbrainz/lib/DBDefs.pm && \\\n cd /app/musicbrainz && \\\n curl -f -L https://cpanmin.us | perl - App::cpanminus && \\\n sed -i '/Test::Magpie/d' cpanfile && \\\n cpanm --installdeps --notest . && \\\n cpanm --notest \\\n\tCache::Memcached::Fast \\\n\tCache::Memory \\\n\tCatalyst::Plugin::Cache::HTTP \\\n\tCatalyst::Plugin::StackTrace \\\n\tDigest::MD5::File \\\n\tFCGI \\\n\tFCGI::ProcManager \\\n\tPlack::Handler::Starlet \\\n\tPlack::Middleware::Debug::Base \\\n\tServer::Starter \\\n\tStarlet \\\n\tStarlet::Server \\\n\tTerm::Size::Any && \\\n yarn install && \\\n yarn cache clean && \\\n ./script/compile_resources.sh && \\\n echo \"**** compile musicbrainz postgresql addons ****\" && \\\n git clone git://github.com/metabrainz/postgresql-musicbrainz-unaccent \\\n\t/tmp/postgresql-musicbrainz-unaccent && \\\n cd /tmp/postgresql-musicbrainz-unaccent && \\\n\tmake && \\\n\tmake install && \\\n git clone git://github.com/metabrainz/postgresql-musicbrainz-collate.git \\\n\t/tmp/postgresql-musicbrainz-collate && \\\n cd /tmp/postgresql-musicbrainz-collate && \\\n\tmake && \\\n\tmake install && \\\n echo \"**** configure nginx ****\" && \\\n echo 'fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;' >> \\\n\t/etc/nginx/fastcgi_params && \\\n rm -f /etc/nginx/conf.d/default.conf && \\\n echo \"**** cleanup ****\" && \\\n apk del --purge \\\n\tbuild-dependencies && \\\n rm -rf \\\n\t/root/.cpanm \\\n\t/tmp/* && rm /tmp/musicbrainz.tar.gz\n\n# add local files\nCOPY root/ /\n\n# volumes and ports\nVOLUME /config /data\nEXPOSE 5000\n"
}