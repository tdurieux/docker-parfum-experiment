{
  "startTime": 1674235237008,
  "endTime": 1674235237150,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 167
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build from the Java 8 maven image (include JDK 8 and Maven)\nFROM maven:3.3-jdk-8\n\n# Expose Port 8080\nEXPOSE 8080\n\n# ADD SETTINGS.XML FOR MAVEN PROXY SETTINGS\n# ADD ./settings.xml /root/.m2/settings.xml\n\n# CREATE SOURCE DIRECTORY\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\n# INSTALL REQUIRED PACKAGES\nRUN apt-get -q clean && \\\n    apt-get -q update && \\\n    apt-get -q --no-install-recommends install -y \\\n      build-essential \\\n      bzip2 \\\n      gcc \\\n      gfortran \\\n      libxml2-dev \\\n      libxslt1-dev \\\n      python-libxml2 \\\n      python-qt4 \\\n      python-lxml \\\n      python-dev \\\n      wget \\\n      zip \\\n      unzip; \\\n    apt-get clean; \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# INSTALL PIP\nRUN wget -nv https://bootstrap.pypa.io/get-pip.py\nRUN python get-pip.py\n\n# DOWNLOAD SPARK BINARY AND SET SPARK_HOME\nRUN wget -nv https://archive.apache.org/dist/spark/spark-1.6.0/spark-1.6.0-bin-hadoop2.6.tgz\nRUN tar xzf spark-1.6.0-bin-hadoop2.6.tgz && rm spark-1.6.0-bin-hadoop2.6.tgz\nRUN mv spark-1.6.0-bin-hadoop2.6 spark\nRUN rm spark-1.6.0-bin-hadoop2.6.tgz\n\nENV SPARK_HOME /usr/src/app/spark\n\n# INSTALL GRAPHFRAMES DEPENDENCY\nRUN wget -nv --no-check-certificate https://dl.bintray.com/spark-packages/maven/graphframes/graphframes/0.1.0-spark1.6/graphframes-0.1.0-spark1.6.jar -O graphframes.zip\nRUN unzip -q graphframes.zip\nRUN ln -s `pwd`/graphframes /usr/lib/python2.7/dist-packages/graphframes\nRUN rm -rf graphframes.zip\n\n# CREATE SPARK-TK DIRECTORY AND COPY SOURCE FILES\nRUN mkdir -p /usr/src/app/spark-tk && rm -rf /usr/src/app/spark-tk\nCOPY ./ spark-tk/\n\n# CHDIR TO SPARK-TK DIRECTORY\nWORKDIR /usr/src/app/spark-tk\n\n# INSTALL PYTHON DEPENDENCIES\nRUN pip install --no-cache-dir -r python/requirements.txt\n\n# BUILD SPARK-TK [ RUNS UNIT TESTS AND INTEGRATION TESTS ]\nRUN mvn clean install -q\n\n# ADD SPARK-TK TO PYTHONPATH\nENV PYTHONPATH /usr/src/app/spark-tk/python\n\n# LAUNCH PYTHON [ docker run -it <image_name> ]\nCMD [\"python\"]\n"
}