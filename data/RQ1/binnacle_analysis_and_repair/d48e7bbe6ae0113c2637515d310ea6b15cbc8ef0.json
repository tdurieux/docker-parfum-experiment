{
  "startTime": 1674234083694,
  "endTime": 1674234083800,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 90
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 2,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 2,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:2.7-stretch\nRUN apt-get update && \\\n  curl -f -sL https://deb.nodesource.com/setup_4.x | bash && \\\n  apt-get -y --no-install-recommends install git uwsgi libpq-dev curl unzip nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /ngrok && \\\n     cd /ngrok && \\\n     curl -f -sLo ngrok.zip https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip && \\\n     unzip ngrok.zip ngrok -d /bin && \\\n     rm -r /ngrok\n\nWORKDIR /opt\n\nADD requirements.txt ./\nADD requirements ./requirements\nRUN pip install --no-cache-dir -r requirements/production.txt -r\n\nADD bower.json ./\nADD .bowerrc ./\nRUN npm install -g bower && npm cache clean --force;\nRUN bower --allow-root --config.interactive=false install\n\nADD alembic.ini manager.py Procfile uwsgi.ini entrypoint.sh ./\nADD scripts ./scripts/\nADD tests ./tests/\nADD call_server ./call_server/\nADD alembic ./alembic/\nADD instance ./instance/\n\nENTRYPOINT [\"/opt/entrypoint.sh\"]\n"
}