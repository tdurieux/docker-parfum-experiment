{
  "startTime": 1674242730290,
  "endTime": 1674242730561,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 11,
        "columnEnd": 33
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 23,
        "columnStart": 9,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 23,
        "columnStart": 9,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM circleci/openjdk:8-jdk\n\nENV OPENJPEG_VERSION 2.3.0\nENV GDAL_VERSION 2.4.1\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/\n\n# most of these libraries required for\n# python-pip pandoc && pip install setuptools => required for pyrasterframes testing\nRUN sudo apt-get update && \\\n    sudo apt-get install --no-install-recommends -y \\\n    python-pip pandoc \\\n      wget \\\n      gcc g++ build-essential \\\n            libcurl4-gnutls-dev \\\n            libproj-dev \\\n            libgeos-dev \\\n            libhdf4-alt-dev \\\n            libhdf5-serial-dev \\\n            bash-completion \\\n            cmake \\\n            imagemagick \\\n            libpng-dev \\\n            swig \\\n            ant \\\n        && sudo apt-get clean all \\\n        && pip install --no-cache-dir setuptools && rm -rf /var/lib/apt/lists/*;\n\n# install OpenJPEG\nRUN cd /tmp && \\\n    wget https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz && \\\n    tar -xf v${OPENJPEG_VERSION}.tar.gz && \\\n    cd openjpeg-${OPENJPEG_VERSION}/ && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local/ && \\\n    make -j && \\\n    sudo make install && \\\n    cd /tmp && rm -Rf v${OPENJPEG_VERSION}.tar.gz openjpeg*\n\n# Compile and install GDAL with Java bindings\nRUN cd /tmp && \\\n    wget https://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz && \\\n    tar -xf gdal-${GDAL_VERSION}.tar.gz && \\\n    cd gdal-${GDAL_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --with-curl \\\n        --with-hdf4 \\\n        --with-hdf5 \\\n        --with-geos \\\n        --with-geotiff=internal \\\n        --with-hide-internal-symbols \\\n        --with-java=$JAVA_HOME \\\n        --with-libtiff=internal \\\n        --with-libz=internal \\\n        --with-mrf \\\n        --with-openjpeg \\\n        --with-threads \\\n        --without-jp2mrsid \\\n        --without-netcdf \\\n        --without-ecw \\\n    && \\\n    make -j 8 && \\\n    sudo make install && \\\n    cd swig/java && \\\n    sudo make install && \\\n    sudo ldconfig && \\\n    cd /tmp && sudo rm -Rf gdal* && rm gdal-${GDAL_VERSION}.tar.gz\n"
}