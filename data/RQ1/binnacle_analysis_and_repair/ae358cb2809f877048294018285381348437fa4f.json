{
  "startTime": 1674235275357,
  "endTime": 1674235275588,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 6,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 6,
        "columnEnd": 90
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 27,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\n\nENV DEBIAN_FRONTEND=noninteractive \\\n    LIBRESSL_VERSION=2.5.0 \\\n    LIBSLZ_VERSION=v1.1.0 \\\n    HAPROXY_VERSION=v1.7.9\n\nADD syslog-stdout/ /usr/src/syslog-stdout\n\nRUN apt-get update -yq && apt-get upgrade -yq && \\\n    apt-get install -yq --no-install-recommends dumb-init inotify-tools ca-certificates build-essential \\\n                                                git libpcre3-dev golang liblua5.3 liblua5.3-dev zlib1g-dev curl && \\\n    LIBSLZ_PATH=/usr/src/libslz && \\\n      git clone --branch=${LIBSLZ_VERSION} http://git.1wt.eu/git/libslz.git ${LIBSLZ_PATH} && \\\n      cd $LIBSLZ_PATH && make static && \\\n    LIBRESSL_PATH=/usr/src/libressl-${LIBRESSL_VERSION} && \\\n      curl -f https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-${LIBRESSL_VERSION}.tar.gz | tar xz -C /usr/src && \\\n      cd $LIBRESSL_PATH && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared=no --prefix=${LIBRESSL_PATH}/build && make && make install && \\\n    HAPROXY_PATH=/usr/src/haproxy && LIBRESSL_PATH=/usr/src/libressl-${LIBRESSL_VERSION} && LIBSLZ_PATH=/usr/src/libslz && \\\n      git clone --branch ${HAPROXY_VERSION} http://git.haproxy.org/git/haproxy-1.7.git/ ${HAPROXY_PATH} && \\\n      cd $HAPROXY_PATH && \\\n      make TARGET=custom CPU=native USE_PCRE=1 USE_PCRE_JIT=1 USE_LIBCRYPT=1 USE_LINUX_SPLICE=1 USE_LINUX_TPROXY=1 \\\n         USE_GETADDRINFO=1 USE_STATIC_PCRE=1 USE_TFO=1 \\\n         USE_SLZ=1 SLZ_INC=${LIBSLZ_PATH}/src SLZ_LIB=${LIBSLZ_PATH} \\\n         USE_OPENSSL=1 SSL_INC=${LIBRESSL_PATH}/build/include SSL_LIB=${LIBRESSL_PATH}/build/lib ADDLIB=-ldl \\\n         USE_LUA=1 LUA_LIB=/usr/share/lua/5.3/ LUA_INC=/usr/include/lua5.3 && \\\n      mv ./haproxy / && mkdir /jail && \\\n    export GOPATH=/usr && cd / && \\\n    go get github.com/ziutek/syslog && \\\n    go build syslog-stdout && \\\n    apt-get purge -yq --autoremove build-essential git libpcre3-dev golang liblua5.3-dev zlib1g-dev curl && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    rm -rf /usr/src/* /usr/share/doc /usr/share/doc-base /usr/share/man /usr/share/locale /usr/share/zoneinfo && \\\n    groupadd -g 1000 -o haproxy && \\\n    useradd --shell /usr/sbin/nologin -u 1000 -o -c \"\" -g 1000 haproxy --home /haproxy-data && \\\n    /haproxy -vv\n\n\nADD docker_entrypoint.sh /\n\nCMD [\"./docker_entrypoint.sh\"]\n\n"
}