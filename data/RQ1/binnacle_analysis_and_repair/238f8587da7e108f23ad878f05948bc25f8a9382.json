{
  "startTime": 1674241233345,
  "endTime": 1674241233815,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 6,
        "columnEnd": 39
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 6,
        "columnEnd": 39
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 99,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedDockerfile": "# -*-dockerfile-*-\n\nFROM phusion/baseimage:latest@sha256:29479c37fcb28089eddd6619deed43bcdbcccf2185369e0199cc51a5ec78991b\nLABEL maintainer Natan SÄ…gol <m@merlinnot.com>\n\n# Use bash\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n# Update image\nRUN apt-get -qq update && apt-get -qq upgrade -y -o \\\n      Dpkg::Options::=\"--force-confold\"\n\n# Update locales\nUSER root\nRUN apt-get install -y --no-install-recommends locales && rm -rf /var/lib/apt/lists/*;\nENV DEBIAN_FRONTEND noninteractive\nENV LANG C.UTF-8\nRUN locale-gen en_US.UTF-8\nRUN update-locale LANG=en_US.UTF-8\n\n# Add postgresql sources\nUSER root\nRUN apt-get install -y --no-install-recommends wget && rm -rf /var/lib/apt/lists/*;\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt xenial-pgdg main\" >> \\\n      /etc/apt/sources.list && \\\n    wget --quiet -O - https://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | \\\n      apt-key add -\nRUN apt-get -qq update\n\n# Set build variables\nARG PGSQL_VERSION=9.6\nARG POSTGIS_VERSION=2.4\n\n# Install build dependencies\nUSER root\nRUN apt-get install -y --no-install-recommends \\\n      apache2 \\\n      build-essential \\\n      ca-certificates \\\n      cmake \\\n      curl \\\n      g++ \\\n      git \\\n      libapache2-mod-php \\\n      libboost-dev \\\n      libboost-filesystem-dev \\\n      libboost-python-dev \\\n      libboost-system-dev \\\n      libbz2-dev \\\n      libexpat1-dev \\\n      libgeos-dev \\\n      libgeos++-dev \\\n      libpq-dev \\\n      libproj-dev \\\n      libxml2-dev \\\n      openssl \\\n      osmosis \\\n      php \\\n      php-db \\\n      php-intl \\\n      php-pear \\\n      php-pgsql \\\n      postgresql-${PGSQL_VERSION}-postgis-${POSTGIS_VERSION} \\\n      postgresql-${PGSQL_VERSION}-postgis-scripts \\\n      postgresql-contrib-${PGSQL_VERSION} \\\n      postgresql-server-dev-${PGSQL_VERSION} \\\n      python \\\n      python-pip \\\n      python-setuptools \\\n      sudo \\\n      zlib1g-dev && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir osmium\n\n# Create nominatim user account\nUSER root\nRUN useradd -d /srv/nominatim -s /bin/bash -m nominatim\nENV USERNAME nominatim\nENV USERHOME /srv/nominatim\nRUN chmod a+x ${USERHOME}\n\n# Install Nominatim\nUSER nominatim\nARG REPLICATION_URL=https://planet.osm.org/replication/hour/\nWORKDIR /srv/nominatim\nRUN git clone --recursive git://github.com/openstreetmap/Nominatim.git\nRUN echo $'<?php\\n\\\n      # Paths\n      @define('CONST_Postgresql_Version', '${PGSQL_VERSION}'); \\n\\\n      @define('CONST_Postgis_Version', '${POSTGIS_VERSION}'); \\n\\\n      @define('CONST_Osm2pgsql_Flatnode_File', '/srv/nominatim/flatnode'); \\n\\\n      @define('CONST_Pyosmium_Binary', '/usr/local/bin/pyosmium-get-changes'); \\n\\\n      # Website settings\n      @define('CONST_Website_BaseURL', '/nominatim/'); \\n\\\n      @define('CONST_Replication_Url', '${REPLICATION_URL}'); \\n\\\n      @define('CONST_Replication_MaxInterval', '86400'); \\n\\\n      @define('CONST_Replication_Update_Interval', '86400'); \\n\\\n      @define('CONST_Replication_Recheck_Interval', '900'); \\n'\\\n    > ./Nominatim/settings/local.php\nRUN wget -O Nominatim/data/country_osm_grid.sql.gz \\\n      https://www.nominatim.org/data/country_grid.sql.gz\nRUN mkdir ${USERHOME}/Nominatim/build && \\\n    cd ${USERHOME}/Nominatim/build && \\\n    cmake ${USERHOME}/Nominatim && \\\n    make\n\n# Download data for initial import\nUSER nominatim\nARG PBF_URL=https://planet.osm.org/pbf/planet-latest.osm.pbf\nRUN curl -f -L ${PBF_URL} --create-dirs -o /srv/nominatim/src/data.osm.pbf\n\n# Filter administrative boundaries\nUSER nominatim\nARG BUILD_THREADS=16\nARG IMPORT_ADMINISTRATIVE=false\nCOPY scripts/filter_administrative.sh \\\n      /srv/nominatim/scripts/filter_administrative.sh\nRUN /srv/nominatim/scripts/filter_administrative.sh\n\n# Add postgresql users\nUSER root\nRUN service postgresql start && \\\n    sudo -u postgres createuser -s nominatim && \\\n    sudo -u postgres createuser www-data && \\\n    service postgresql stop\n\n# Tune postgresql configuration for import\nUSER root\nARG BUILD_MEMORY=32GB\nENV PGCONFIG_URL https://api.pgconfig.org/v1/tuning/get-config\nRUN IMPORT_CONFIG_URL=\"${PGCONFIG_URL}? \\\n      format=alter_system& \\\n      pg_version=${PGSQL_VERSION}& \\\n      total_ram=${BUILD_MEMORY}& \\\n      max_connections=$((8 * ${BUILD_THREADS} + 32))& \\\n      environment_name=DW& \\\n      include_pgbadger=false\" && \\\n    IMPORT_CONFIG_URL=${IMPORT_CONFIG_URL// /} && \\\n    service postgresql start && \\\n    ( curl -f -sSL \"${IMPORT_CONFIG_URL}\"; \\\n      echo $'ALTER SYSTEM SET fsync TO \\'off\\';\\n'; \\\n      echo $'ALTER SYSTEM SET full_page_writes TO \\'off\\';\\n'; \\\n      echo $'ALTER SYSTEM SET logging_collector TO \\'off\\';\\n';) \\\n    | sudo -u postgres psql -e && \\\n    service postgresql stop\n\n# Initial import\nUSER root\nARG OSM2PGSQL_CACHE=24000\nRUN service postgresql start && \\\n    sudo -u nominatim ${USERHOME}/Nominatim/build/utils/setup.php \\\n      --osm-file /srv/nominatim/src/data.osm.pbf \\\n      --all \\\n      --threads ${BUILD_THREADS} \\\n      --osm2pgsql-cache ${OSM2PGSQL_CACHE} && \\\n    service postgresql stop\n\n# Use safe postgresql configuration\nUSER root\nARG RUNTIME_THREADS=2\nARG RUNTIME_MEMORY=8GB\nRUN IMPORT_CONFIG_URL=\"${PGCONFIG_URL}? \\\n      format=alter_system& \\\n      pg_version=${PGSQL_VERSION}& \\\n      total_ram=${RUNTIME_MEMORY}& \\\n      max_connections=$((8 * ${RUNTIME_THREADS} + 32))& \\\n      environment_name=WEB& \\\n      include_pgbadger=true\" && \\\n    IMPORT_CONFIG_URL=${IMPORT_CONFIG_URL// /} && \\\n    service postgresql start && \\\n    ( curl -f -sSL \"${IMPORT_CONFIG_URL}\"; \\\n      echo $'ALTER SYSTEM SET fsync TO \\'on\\';\\n'; \\\n      echo $'ALTER SYSTEM SET full_page_writes TO \\'on\\';\\n'; \\\n      echo $'ALTER SYSTEM SET logging_collector TO \\'on\\';\\n';) \\\n    | sudo -u postgres psql -e && \\\n    service postgresql stop\n\n# Configure Apache\nUSER root\nCOPY nominatim.conf /etc/apache2/conf-available/nominatim.conf\nRUN a2enconf nominatim\n\n# Clean up\nUSER root\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Expose ports\nEXPOSE 8080\n\n# Init scripts\nUSER root\nENV KILL_PROCESS_TIMEOUT=300\nENV KILL_ALL_PROCESSES_TIMEOUT=300\nRUN mkdir -p /etc/my_init.d\nCOPY scripts/start_postgresql.sh /etc/my_init.d/00-postgresql.sh\nRUN chmod +x /etc/my_init.d/00-postgresql.sh\nCOPY scripts/start_apache2.sh /etc/my_init.d/00-apache2.sh\nRUN chmod +x /etc/my_init.d/00-apache2.sh\nCMD [\"/sbin/my_init\"]\n"
}