{
  "startTime": 1674242538087,
  "endTime": 1674242538295,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 131
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\n\n#\n# Java for Gradle\n#\n\nRUN apk --no-cache add openjdk8\n\n#\n# https://github.com/GoogleCloudPlatform/cloud-sdk-docker/blob/master/alpine/Dockerfile\n#\n\nENV CLOUD_SDK_VERSION 215.0.0\n\nENV PATH /google-cloud-sdk/bin:$PATH\n\nRUN apk --no-cache add \\\n        curl \\\n        python \\\n        py-crcmod \\\n        bash \\\n        libc6-compat \\\n        openssh-client \\\n        git \\\n    && curl -f -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n    tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n    rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n    ln -s /lib /lib64 && \\\n    gcloud config set core/disable_usage_reporting true && \\\n    gcloud config set component_manager/disable_update_check true && \\\n    gcloud config set metrics/environment github_docker_image\n\n#\n# Other development tools\n#\n\nRUN gcloud components install app-engine-java\n\nRUN apk --no-cache add gettext\n\nRUN apk --no-cache add mysql\nRUN apk --no-cache add mysql-client\nRUN curl -f https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 \\\n  > /usr/local/bin/cloud_sql_proxy && chmod +x /usr/local/bin/cloud_sql_proxy\n\nRUN curl -f https://raw.githubusercontent.com/mrako/wait-for/d9699cb9fe8a4622f05c4ee32adf2fd93239d005/wait-for \\\n  > /usr/local/bin/wait-for && chmod +x /usr/local/bin/wait-for\n\n# Create a gradle cache directory as a volume that can be read/written by any\n# container (including containers running as any user -- hence the a+rwx)\nRUN mkdir /.gradle && chmod a+rwx -R /.gradle\nVOLUME /.gradle\nENV GRADLE_USER_HOME /.gradle\n\n# It never makes sense for Gradle to run a daemon within a docker container.\nENV GRADLE_OPTS=\"-Dorg.gradle.daemon=false\"\n\nRUN apk --no-cache add ruby ruby-json ruby-io-console\n\nRUN curl -f https://services.gradle.org/distributions/gradle-4.3.1-bin.zip -L > /tmp/gradle.zip\nWORKDIR /tmp\nRUN unzip gradle.zip && rm gradle.zip \\\n  && mv gradle-* /gradle\nENV PATH=\"$PATH:/gradle/bin\"\nWORKDIR /\n\nRUN gem install --no-document googleauth\n\nRUN curl -f -O https://bin.equinox.io/c/htRtQZagtfg/rainforest-cli-stable-linux-amd64.tgz && \\\n  tar -xvf rainforest-cli-stable-linux-amd64.tgz && rm rainforest-cli-stable-linux-amd64.tgz && \\\n  mv rainforest /usr/local/bin\n\nCOPY with-mysql-login.sh /usr/local/bin\nCOPY with-uid.sh /usr/local/bin\n\nENTRYPOINT [\"with-uid.sh\"]\n"
}