{
  "startTime": 1674238593468,
  "endTime": 1674238593669,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 AS base\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python3-pip \\\n    openjdk-8-jdk-headless \\\n    supervisor \\\n    wget \\\n    libsnappy1v5 && rm -rf /var/lib/apt/lists/*;\n\n# Grab gosu for easy step-down from root\nENV GOSU_VERSION 1.7\nRUN set -ex; \\\n  wget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"; \\\n  wget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"; \\\n  export GNUPGHOME=\"$(mktemp -d)\"; \\\n  for server in $(shuf -e ha.pool.sks-keyservers.net \\\n                          hkp://p80.pool.sks-keyservers.net:80 \\\n                          keyserver.ubuntu.com \\\n                          hkp://keyserver.ubuntu.com:80 \\\n                          pgp.mit.edu) ; do \\\n      gpg --batch --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && break || : ; \\\n  done && \\\n  gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n  rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n  chmod +x /usr/local/bin/gosu; \\\n  gosu nobody true\n\n# Configure Flink version\nENV FLINK_VERSION=1.7.0 \\\n    HADOOP_SCALA_VARIANT=hadoop28-scala_2.12\n\n# Prepare environment\nENV FLINK_HOME=/opt/flink\nENV PATH=$FLINK_HOME/bin:$PATH\nRUN groupadd --system --gid=9999 flink && \\\n    useradd --system --home-dir $FLINK_HOME --uid=9999 --gid=flink flink\nWORKDIR $FLINK_HOME\n\nENV FLINK_URL_FILE_PATH=flink/flink-${FLINK_VERSION}/flink-${FLINK_VERSION}-bin-${HADOOP_SCALA_VARIANT}.tgz\n# Not all mirrors have the .asc files\nENV FLINK_TGZ_URL=https://www.apache.org/dyn/closer.cgi?action=download&filename=${FLINK_URL_FILE_PATH} \\\n    FLINK_ASC_URL=https://www.apache.org/dist/${FLINK_URL_FILE_PATH}.asc\n\n# For GPG verification instead of relying on key servers\nCOPY KEYS /KEYS\n\n# Install Flink\nRUN set -ex; \\\n  wget -nv -O flink.tgz \"$FLINK_TGZ_URL\"; \\\n  wget -nv -O flink.tgz.asc \"$FLINK_ASC_URL\"; \\\n  \\\n  export GNUPGHOME=\"$(mktemp -d)\"; \\\n  gpg --batch --import /KEYS; \\\n  gpg --batch --verify flink.tgz.asc flink.tgz; \\\n  rm -rf \"$GNUPGHOME\" flink.tgz.asc; \\\n  \\\n  tar -xf flink.tgz --strip-components=1; \\\n  rm flink.tgz; \\\n  \\\n  chown -R flink:flink .;\n\nRUN pip3 install --no-cache-dir jupyter\n\nWORKDIR /app\n\nCOPY . /app\n\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\n\nRUN jupyter notebook --generate-config\n\nRUN echo \"\" >> /root/.jupyter/jupyter_notebook_config.py\nRUN echo \"c.NotebookApp.token = ''\" >> /root/.jupyter/jupyter_notebook_config.py\n\nEXPOSE 6123 8081\n"
}