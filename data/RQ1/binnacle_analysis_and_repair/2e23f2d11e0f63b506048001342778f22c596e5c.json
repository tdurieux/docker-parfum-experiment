{
  "startTime": 1674246018990,
  "endTime": 1674246019840,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 1,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 16,
        "columnEnd": 77
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 1,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 1,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 181,
        "lineEnd": 181,
        "columnStart": 1,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 193,
        "lineEnd": 193,
        "columnStart": 1,
        "columnEnd": 76
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 1,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# container for rsyslog development\n# creates the build environment\n# to search for packages:\n# note: czmq OBS link: https://build.opensuse.org/package/show/network:messaging:zeromq:release-stable/czmq\n# 1. zypper search\n# 2. scout bin which  # scout need zypper install scout - then call \"scout\" for usage\nFROM\topensuse/tumbleweed\nRUN \tzypper --non-interactive update\nRUN\tzypper --non-interactive install \\\n\tautoconf \\\n\tautoconf-archive \\\n\tautomake \\\n\tbison \\\n\tclang \\\n\tcmake \\\n\tcurl \\\n\tflex \\\n\tgcc \\\n\tgdb \\\n\tgit \\\n\tgzip \\\n\thiredis-devel \\\n\tjava-11-openjdk-devel \\\n\tkrb5-devel \\\n\tlibcurl-devel \\\n\tlibczmq4 \\\n\tlibdbi-devel \\\n\tlibdbi-drivers-dbd-mysql \\\n\tlibestr-devel \\\n\tlibfaketime \\\n\tlibgcrypt-devel \\\n\tlibgnutls-devel \\\n\tlibmaxminddb-devel \\\n\tlibmysqlclient-devel \\\n\tlibnet-devel \\\n\tlibopenssl-devel \\\n\tlibpcap-devel \\\n\tlibqpid-proton10 \\\n\tlibtool \\\n\tlibuuid-devel \\\n\tmake \\\n\tnet-snmp-devel \\\n\tpcre-devel \\\n\tpostgresql-devel \\\n\tpython3-docutils \\\n\tpython-devel \\\n\tpython-docutils \\\n\tpython-sphinx \\\n\tqpid-proton \\\n\tqpid-proton-devel \\\n\tsystemd-devel \\\n\ttcl-devel \\\n\tutil-linux-systemd \\\n\tvalgrind \\\n\tvi \\\n\twget \\\n\twhich \\\n\tzlib-devel\nRUN\tzypper --non-interactive addrepo https://download.opensuse.org/repositories/network:messaging:zeromq:release-stable/openSUSE_Tumbleweed/network:messaging:zeromq:release-stable.repo && \\\n\tzypper --non-interactive --gpg-auto-import-keys refresh && \\\n\tzypper --non-interactive install \\\n\topenpgm-devel \\\n\tczmq \\\n\tczmq-devel\n\nENV\tREBUILD=1\nWORKDIR /home/devel\nRUN\tgroupadd rsyslog && \\\n\tuseradd -g rsyslog  -s /bin/bash rsyslog && \\\n\techo \"rsyslog ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\nRUN\tmkdir /rsyslog && \\\n\tchown rsyslog:rsyslog /rsyslog\nVOLUME /rsyslog\nADD\tsetup-projects.sh setup-projects.sh\nENV\tPKG_CONFIG_PATH=/usr/lib/pkgconfig \\\n\txLD_LIBRARY_PATH=/usr/local/lib\n\n# create dependency cache\nRUN\tmkdir /local_dep_cache && \\\n\twget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.9.tar.gz -O /local_dep_cache/elasticsearch-5.6.9.tar.gz  && \\\n\twget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.0.0.tar.gz -O /local_dep_cache/elasticsearch-6.0.0.tar.gz && \\\n\twget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.1.tar.gz -O /local_dep_cache/elasticsearch-6.3.1.tar.gz\n# tell tests which are the newester versions, so they can be checked without the need\n# to adjust test sources.\nENV\tELASTICSEARCH_NEWEST=\"elasticsearch-6.3.1.tar.gz\"\n\n# bump dependency version below to trigger a dependency rebuild\n# but not a full one (via --no-cache)\nENV\tDEP_VERSION=1\n# Helper projects and dependency build starts here\nRUN\tmkdir helper-projects\n# code style checker - not yet packaged\nRUN\tcd helper-projects && \\\n\tgit clone https://github.com/rsyslog/codestyle && \\\n\tcd codestyle && \\\n\tgcc --std=c99 stylecheck.c -o stylecheck && \\\n\tmv stylecheck /usr/bin/rsyslog_stylecheck && \\\n\tcd .. && \\\n\trm -r codestyle && \\\n\tcd ..\n\n# we need Guardtime libksi here, otherwise we cannot check the KSI component\t\nRUN cd helper-projects && \\\n\tgit clone https://github.com/guardtime/libksi.git && \\\n\tcd libksi && \\\n\tautoreconf -fvi && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --libdir=/usr/lib64 && \\\n\tmake -j2 && \\\n\tmake install && \\\n\tcd .. && \\\n\trm -r libksi && \\\n\tcd ..\n\n# we need the latest librdkafka as there as always required updates\nRUN cd helper-projects && \\\n\tgit clone https://github.com/edenhill/librdkafka && \\\n\tcd librdkafka && \\\n\t( unset CFLAGS; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --libdir=/usr/lib64 --CFLAGS=\"-g\"; make -j) && \\\n\tmake install && \\\n\tcd .. && \\\n# Note: we do NOT delete the source as we may need it to\n# uninstall (in case the user wants to go back to system-default)\n\tcd ..\n\n# libmongoc is unfortunately not available on openSuse - later?\nRUN cd helper-projects && \\\n\twget -nv https://github.com/mongodb/mongo-c-driver/releases/download/1.12.0/mongo-c-driver-1.12.0.tar.gz && \\\n\ttar xzf mongo-c-driver-1.12.0.tar.gz && \\\n\tcd mongo-c-driver-1.12.0 && \\\n\tmkdir cmake-build && \\\n\tcmake -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF && \\\n\tmake -j4 && \\\n\tmake install && \\\n\tcd .. && \\\n\trm -r mongo-c-driver-1.12.0* && \\\n\tcd .. && rm mongo-c-driver-1.12.0.tar.gz\n\n# bump dependency version below to trigger a dependency rebuild\n# but not a full one (via --no-cache)\nENV\tRSYSLOG_DEP_VERSION=2018-07-22\n\n# libestr - currently, not needed, we use from offical repo (unlikely to change)\n#RUN\tcd helper-projects && \\\n#\tgit clone https://github.com/rsyslog/libestr.git && \\\n#\tcd libestr && \\\n#\tautoreconf -fi && ./configure --libdir=/usr/lib64 --prefix=/usr && \\\n#\tmake -j4 && \\\n#\tmake install && \\\n#\tcd .. && \\\n#\trm -r libestr && \\\n#\tcd ..\n\n# liblogging\nRUN cd helper-projects && \\\n\tgit clone https://github.com/rsyslog/liblogging.git && \\\n\tcd liblogging && \\\n\tautoreconf -fi && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --libdir=/usr/lib64 --disable-journal && \\\n\tmake -j4 && \\\n\tmake install && \\\n\tcd .. && \\\n\trm -r liblogging && \\\n\tcd ..\n\n# liblfastjson\nRUN cd helper-projects && \\\n\tgit clone https://github.com/rsyslog/libfastjson.git && \\\n\tcd libfastjson && \\\n\tautoreconf -fi && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --libdir=/usr/lib64 && \\\n\tmake -j4 && \\\n\tmake install && \\\n\tcd .. && \\\n\trm -r libfastjson && \\\n\tcd ..\n\n# liblognorm\nRUN cd helper-projects && \\\n\tgit clone https://github.com/rsyslog/liblognorm.git && \\\n\tcd liblognorm && \\\n\tautoreconf -fi && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --libdir=/usr/lib64 && \\\n\tmake -j4 && \\\n\tmake install && \\\n\tcd .. && \\\n\trm -r liblognorm && \\\n\tcd ..\n\n# librelp\nRUN cd helper-projects && \\\n\tgit clone https://github.com/rsyslog/librelp.git && \\\n\tcd librelp && \\\n\tautoreconf -fi && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --enable-compile-warnings=yes --libdir=/usr/lib64 && \\\n\tmake -j4 && \\\n\tmake install && \\\n\tcd .. && \\\n\trm -r librelp && \\\n\tcd ..\n\n# next ENV is specifically for running scan-build - so we do not need to\n# change scripts if at a later time we can move on to a newer version\nENV\tSCAN_BUILD=scan-build \\\n\tSCAN_BUILD_CC=clang-6.0\n\n# unfortunately, tcl-devel does not properly setup required bits in the environment\n# so we now try to do that. In case this does no longer work with a version, search\n# for a file tclConfig.sh, which should be present in the library directory (usually\n# beneath /usr). It contains the environment variables. Inside container do:\n# $cat $(find /usr -name tclConfig.sh|head -n1)\nENV\tTCL_LIB_SPEC=\"-L/usr/lib64 -ltcl8.6\" \\\n\tTCL_INCLUDE_SPEC=-I/usr/include\n\nENV RSYSLOG_CONFIGURE_OPTIONS \\\n\t--enable-elasticsearch \\\n\t--enable-elasticsearch-tests \\\n\t--enable-gnutls \\\n\t--enable-imbatchreport \\\n\t--enable-imdiag \\\n\t--enable-imdocker \\\n\t--enable-imfile \\\n\t--enable-imjournal \\\n\t--enable-imkafka \\\n\t--enable-impstats \\\n\t--enable-impcap \\\n\t--enable-imptcp \\\n\t--enable-imtuxedoulog \\\n\t--enable-kafka-tests \\\n\t--enable-ksi-ls12 \\\n\t--enable-libdbi \\\n\t--enable-libfaketime \\\n\t--enable-libgcrypt \\\n\t--enable-mail \\\n\t--enable-mmanon \\\n\t--enable-mmaudit \\\n\t--enable-mmcount \\\n\t--enable-mmcapture \\\n\t--enable-mmfields \\\n\t--enable-mmjsonparse \\\n\t--enable-mmkubernetes \\\n\t--enable-mmnormalize \\\n\t--enable-mmpstrucdata \\\n\t--enable-mmrm1stspace \\\n\t--enable-mmsequence \\\n\t--enable-mmsnmptrapd \\\n\t--enable-mmutf8fix \\\n\t--enable-mysql \\\n\t--enable-omamqp1 \\\n\t--enable-omhiredis \\\n\t--enable-omhiredis \\\n\t--enable-omhttp \\\n\t--enable-omhttpfs \\\n\t--enable-omjournal \\\n\t--enable-omkafka \\\n\t--enable-omprog \\\n\t--enable-omrelp-default-port=13515 \\\n\t--enable-omruleset \\\n\t--enable-omstdout \\\n\t--enable-omudpspoof \\\n\t--enable-omuxsock \\\n\t--enable-openssl \\\n\t--enable-pgsql \\\n\t--enable-pmaixforwardedfrom \\\n\t--enable-pmciscoios \\\n\t--enable-pmcisconames \\\n\t--enable-pmlastmsg \\\n\t--enable-pmnormalize \\\n\t--enable-pmnull \\\n\t--enable-pmsnare \\\n\t--enable-relp \\\n\t--enable-snmp \\\n\t--enable-usertools \\\n\t--enable-valgrind \\\n\t--enable-gssapi-krb5 \\\n\t--enable-omtcl \\\n\t--enable-imczmq \\\n\t--enable-omczmq \\\n\t--enable-mmdblookup \\\n\t--enable-kmsg \\\n\t--enable-ommongodb \\\n\t\\\n\t--enable-testbench\n\n# module needs fixes:\n#\t--enable-mmgrok\n#\t   -> we cannot build, libtokyocabinet dependency is not available as well\nWORKDIR /rsyslog\nUSER rsyslog\n"
}