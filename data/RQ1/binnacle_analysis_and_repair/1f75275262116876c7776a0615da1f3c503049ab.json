{
  "startTime": 1674249576722,
  "endTime": 1674249577528,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 2,
        "columnEnd": 72
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 188,
        "lineEnd": 188,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 185,
        "lineEnd": 185,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 35,
        "columnStart": 2,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 2,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 183,
        "lineEnd": 183,
        "columnStart": 2,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\nENV DEBIAN_FRONTEND noninteractive\n\n# install dependencies via apt\nENV DEBCONF_NOWARNINGS yes\nRUN set -x && \\\n  apt-get update -y -qq && \\\n  apt-get upgrade -y -qq --no-install-recommends && \\\n  : \"basic dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    build-essential \\\n    pkg-config \\\n    cmake \\\n    git \\\n    wget \\\n    curl \\\n    tar \\\n    unzip && \\\n  : \"g2o dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    libgoogle-glog-dev \\\n    libatlas-base-dev \\\n    libsuitesparse-dev && \\\n  : \"OpenCV dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    libjpeg-dev \\\n    libpng++-dev \\\n    libtiff-dev \\\n    libopenexr-dev \\\n    libwebp-dev \\\n    ffmpeg \\\n    libavcodec-dev \\\n    libavformat-dev \\\n    libavutil-dev \\\n    libswscale-dev \\\n    libavresample-dev && \\\n  : \"other dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    libyaml-cpp-dev && \\\n  : \"remove cache\" && \\\n  apt-get autoremove -y -qq && \\\n  rm -rf /var/lib/apt/lists/*\n\nARG CMAKE_INSTALL_PREFIX=/usr/local\nARG NUM_THREADS=1\n\nENV CPATH=${CMAKE_INSTALL_PREFIX}/include:${CPATH}\nENV C_INCLUDE_PATH=${CMAKE_INSTALL_PREFIX}/include:${C_INCLUDE_PATH}\nENV CPLUS_INCLUDE_PATH=${CMAKE_INSTALL_PREFIX}/include:${CPLUS_INCLUDE_PATH}\nENV LIBRARY_PATH=${CMAKE_INSTALL_PREFIX}/lib:${LIBRARY_PATH}\nENV LD_LIBRARY_PATH=${CMAKE_INSTALL_PREFIX}/lib:${LD_LIBRARY_PATH}\n\n# Eigen\nARG EIGEN3_VERSION=3.3.7\nWORKDIR /tmp\nRUN set -x && \\\n  wget -q https://bitbucket.org/eigen/eigen/get/${EIGEN3_VERSION}.tar.bz2 && \\\n  tar xf ${EIGEN3_VERSION}.tar.bz2 && \\\n  rm -rf ${EIGEN3_VERSION}.tar.bz2 && \\\n  mv eigen-eigen-* eigen-${EIGEN3_VERSION} && \\\n  cd eigen-${EIGEN3_VERSION} && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf *\nENV Eigen3_DIR=${CMAKE_INSTALL_PREFIX}/share/eigen3/cmake\n\n# g2o\nARG G2O_COMMIT=9b41a4ea5ade8e1250b9c1b279f3a9c098811b5a\nWORKDIR /tmp\nRUN set -x && \\\n  git clone https://github.com/RainerKuemmerle/g2o.git && \\\n  cd g2o && \\\n  git checkout ${G2O_COMMIT} && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} \\\n    -DBUILD_SHARED_LIBS=ON \\\n    -DBUILD_UNITTESTS=OFF \\\n    -DBUILD_WITH_MARCH_NATIVE=ON \\\n    -DG2O_USE_CHOLMOD=ON \\\n    -DG2O_USE_CSPARSE=ON \\\n    -DG2O_USE_OPENGL=OFF \\\n    -DG2O_USE_OPENMP=ON \\\n    -DG2O_BUILD_APPS=OFF \\\n    -DG2O_BUILD_EXAMPLES=OFF \\\n    -DG2O_BUILD_LINKED_APPS=OFF \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf *\nENV G2O_ROOT=${CMAKE_INSTALL_PREFIX}\n\n# OpenCV\nARG OPENCV_VERSION=4.1.0\nWORKDIR /tmp\nRUN set -x && \\\n  wget -q https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip && \\\n  unzip -q ${OPENCV_VERSION}.zip && \\\n  rm -rf ${OPENCV_VERSION}.zip && \\\n  cd opencv-${OPENCV_VERSION} && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} \\\n    -DBUILD_DOCS=OFF \\\n    -DBUILD_EXAMPLES=OFF \\\n    -DBUILD_JASPER=OFF \\\n    -DBUILD_OPENEXR=OFF \\\n    -DBUILD_PERF_TESTS=OFF \\\n    -DBUILD_TESTS=OFF \\\n    -DBUILD_opencv_apps=OFF \\\n    -DBUILD_opencv_dnn=OFF \\\n    -DBUILD_opencv_ml=OFF \\\n    -DBUILD_opencv_python_bindings_generator=OFF \\\n    -DENABLE_CXX11=ON \\\n    -DENABLE_FAST_MATH=ON \\\n    -DWITH_EIGEN=ON \\\n    -DWITH_FFMPEG=ON \\\n    -DWITH_OPENMP=ON \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf *\nENV OpenCV_DIR=${CMAKE_INSTALL_PREFIX}/lib/cmake/opencv4\n\n# DBoW2\nARG DBOW2_COMMIT=687fcb74dd13717c46add667e3fbfa9828a7019f\nWORKDIR /tmp\nRUN set -x && \\\n  git clone https://github.com/shinsumicco/DBoW2.git && \\\n  cd DBoW2 && \\\n  git checkout ${DBOW2_COMMIT} && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf *\nENV DBoW2_DIR=${CMAKE_INSTALL_PREFIX}/lib/cmake/DBoW2\n\n# socket.io-client-cpp\nARG SIOCLIENT_COMMIT=ff6ef08e45c594e33aa6bc19ebdd07954914efe0\nWORKDIR /tmp\nRUN set -x && \\\n  git clone https://github.com/shinsumicco/socket.io-client-cpp.git && \\\n  cd socket.io-client-cpp && \\\n  git checkout ${SIOCLIENT_COMMIT} && \\\n  git submodule init && \\\n  git submodule update && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} \\\n    -DBUILD_UNIT_TESTS=OFF \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf *\nENV sioclient_DIR=${CMAKE_INSTALL_PREFIX}/lib/cmake/sioclient\n\n# protobuf\nWORKDIR /tmp\nRUN set -x && \\\n  apt-get update -y -qq && \\\n  apt-get upgrade -y -qq --no-install-recommends && \\\n  apt-get install --no-install-recommends -y -qq autogen autoconf libtool && \\\n  wget -q https://github.com/google/protobuf/archive/v3.6.1.tar.gz && \\\n  tar xf v3.6.1.tar.gz && \\\n  cd protobuf-3.6.1 && \\\n  ./autogen.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${CMAKE_INSTALL_PREFIX} --enable-static=no && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf * && \\\n  apt-get purge -y -qq autogen autoconf libtool && \\\n  apt-get autoremove -y -qq && \\\n  rm -rf /var/lib/apt/lists/* && rm v3.6.1.tar.gz\n\n# OpenVSLAM\nCOPY . /openvslam/\nWORKDIR /openvslam/\nRUN set -x && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DBUILD_WITH_MARCH_NATIVE=ON \\\n    -DUSE_PANGOLIN_VIEWER=OFF \\\n    -DUSE_SOCKET_PUBLISHER=ON \\\n    -DUSE_STACK_TRACE_LOGGER=ON \\\n    -DBOW_FRAMEWORK=DBoW2 \\\n    -DBUILD_TESTS=OFF \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  rm -rf CMakeCache.txt CMakeFiles Makefile cmake_install.cmake example src && \\\n  chmod -R 777 ./*\n\nWORKDIR /openvslam/build/\nENTRYPOINT [\"/bin/bash\"]\n"
}