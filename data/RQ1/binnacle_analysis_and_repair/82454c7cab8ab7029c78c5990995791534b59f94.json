{
  "startTime": 1674234318715,
  "endTime": 1674234318995,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 116
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM fedora:30\nLABEL maintainer='cockpit-devel@lists.fedorahosted.org'\n\nRUN dnf -y update && \\\n    dnf -y install \\\n        american-fuzzy-lop \\\n        chromium-headless \\\n        curl \\\n        expect \\\n        gcc \\\n        gcc-c++ \\\n        git \\\n        gnupg \\\n        jq \\\n        libguestfs-tools \\\n        libguestfs-xfs \\\n        libappstream-glib \\\n        libvirt \\\n        libvirt-client \\\n        libvirt-python3 \\\n        make \\\n        nc \\\n        net-tools \\\n        npm \\\n        openssl \\\n        origin-clients \\\n        psmisc \\\n        procps-ng \\\n        python \\\n        python3 \\\n        python3-pika \\\n        rpm-build \\\n        rpmdevtools \\\n        sed \\\n        tar \\\n        virt-install \\\n        wget \\\n        zanata-client && \\\n    curl -f -s -o /tmp/cockpit.spec https://raw.githubusercontent.com/cockpit-project/cockpit/master/tools/cockpit.spec && \\\n    sed -i 's/%{npm-version:.*}/0/' /tmp/cockpit.spec && \\\n    dnf -y builddep /tmp/cockpit.spec && \\\n    dnf clean all\n\nCOPY cockpit-tasks install-service webhook github_handler.py /usr/local/bin/\n\nRUN groupadd -g 1111 -r user && useradd -r -g user -u 1111 user && \\\n    mkdir -p /home/user/.ssh && mkdir -p /usr/local/bin && \\\n    mkdir -p /build /secrets /cache/images /cache/github /build/libvirt/qemu && \\\n    printf '[user]\\n\\t\\nemail = cockpituous@cockpit-project.org\\n\\tname = Cockpituous\\n' >/home/user/.gitconfig && \\\n    ln -s /cache/images /build/images && \\\n    ln -s /cache/images /build/virt-builder && \\\n    ln -s /cache/github /build/github && \\\n    ln -s /tmp /build/tmp && \\\n    mkdir -p /home/user/.config /home/user/.ssh /home/user/.rhel && \\\n    ln -snf /secrets/ssh-config /home/user/.ssh/config && \\\n    ln -snf /secrets/image-stores /home/user/.config/image-stores && \\\n    ln -snf /secrets/codecov-token /home/user/.config/codecov-token && \\\n    ln -snf /secrets/rhel-login /home/user/.rhel/login && \\\n    ln -snf /secrets/rhel-password /home/user/.rhel/pass && \\\n    ln -snf /secrets/zanata.ini /home/user/.config/zanata.ini && \\\n    ln -snf /secrets/lorax-test-env.sh /home/user/.config/lorax-test-env && \\\n    ln -snf /run/secrets/webhook/.config--github-token /home/user/.config/github-token && \\\n    chmod g=u /etc/passwd && \\\n    chmod -R ugo+w /build /secrets /cache /home/user\n\n# Prevent us from screwing around with KVM settings in the container\nRUN touch /etc/modprobe.d/kvm-amd.conf && touch /etc/modprobe.d/kvm-intel.conf\n\nENV LANG=C.UTF-8 \\\n    LIBGUESTFS_BACKEND=direct \\\n    XDG_CACHE_HOME=/build \\\n    HOME=/home/user \\\n    TMPDIR=/tmp \\\n    TEMPDIR=/tmp \\\n    TEST_DATA=/build \\\n    TEST_PUBLISH=\n\nVOLUME /cache\n\nUSER user\nWORKDIR /build\nCMD [\"/usr/local/bin/cockpit-tasks\", \"--publish\", \"$TEST_PUBLISH\", \"--verbose\"]\n\n# We execute the script in the host, but it doesn't exist on the host. So pipe it in\nLABEL INSTALL /usr/bin/docker run -ti --rm --privileged --volume=/:/host:rw --user=root IMAGE /bin/bash -c \\\"/usr/sbin/chroot /host /bin/sh -s < /usr/local/bin/install-service\\\"\n\n# Run a simple interactive instance of the tests container\nLABEL RUN /usr/bin/docker run -ti --rm --privileged --uts=host --volume=/var/lib/cockpit-secrets/tasks:/secrets:ro --volume=/var/cache/cockpit-tests:/cache:rw IMAGE /bin/bash -i\n"
}