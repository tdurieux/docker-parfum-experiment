{
  "startTime": 1674245061458,
  "endTime": 1674245061572,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2017 The Nuclio Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#\n# Build stage: builds the playground binary\n#\n\nFROM golang:1.10 as build\n\n# copy source tree\nWORKDIR /go/src/github.com/nuclio/nuclio\nCOPY . .\n\n# build the playground\nRUN go get github.com/v3io/v3io-go-http \\\n    && go get github.com/nuclio/logger \\\n    && go get github.com/nuclio/nuclio-sdk-go \\\n    && go get github.com/nuclio/amqp \\\n    && GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -a -installsuffix cgo -ldflags=\"-s -w\" -o playground cmd/playground/main.go\n\n#\n# Output stage: Creates version file, copies binary to an alpine based image\n#\n\nFROM alpine:3.7\n\nARG DOCKER_CLI_VERSION=\"17.09.0-ce\"\n\nENV DOWNLOAD_URL=\"https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_CLI_VERSION.tgz\"\n\nRUN apk --update --no-cache add ca-certificates git curl \\\n    && mkdir -p /tmp/download \\\n    && curl -f -L $DOWNLOAD_URL | tar -xz -C /tmp/download \\\n    && mv /tmp/download/docker/docker /usr/local/bin/ \\\n    && rm -rf /tmp/download \\\n    && apk del curl\n\n# copy playground binary from build stage\nCOPY --from=build /go/src/github.com/nuclio/nuclio/playground /usr/local/bin\nCOPY cmd/playground/static /etc/nuclio/playground/assets\n\nRUN mkdir -p /etc/nuclio/playground/sources\n\n# generate a version file\nARG NUCLIO_VERSION_INFO_FILE_CONTENTS\nRUN mkdir -p /etc/nuclio && echo ${NUCLIO_VERSION_INFO_FILE_CONTENTS} > /etc/nuclio/version_info.json\n\nCMD [\"playground\", \"--assets-dir\", \"/etc/nuclio/playground/assets\", \"--sources-dir\", \"/etc/nuclio/playground/sources\", \"--docker-key-dir\", \"/etc/nuclio/playground/registry-credentials\", \"--listen-addr\", \":8070\"]\n"
}