{
  "startTime": 1674241916832,
  "endTime": 1674241916930,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 8,
        "columnEnd": 101
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 6,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM opensuse/leap:15.0\nMAINTAINER SUSE Containers Team <containers@suse.com>\n\n# Install the entrypoint of this image.\nCOPY init /\n\n# Install Portus and prepare the /certificates directory.\nRUN chmod +x /init && \\\n    # Fetch the key from the obs://Virtualization:containers:Portus\n    # project. Sometimes the key server times out or has some other problem. In\n    # that case, we fall back to alternative key servers.\n    TMPDIR=/tmp/build && \\\n    mkdir -m 0600 $TMPDIR && \\\n    for key in 55A0B34D49501BB7CA474F5AA193FBB572174FC2 \\\n               A9EA39C49B6B9E93B6863F849AF0C9A20E9AF123; do \\\n      found=''; \\\n      for server in \\\n        hkp://keys.gnupg.net:80 \\\n        ha.pool.sks-keyservers.net \\\n        hkp://keyserver.ubuntu.com:80 \\\n        hkp://p80.pool.sks-keyservers.net:80 \\\n        pgp.mit.edu; \\\n      do \\\n        echo \"Fetching GPG key $GPG_KEY from $server\"; \\\n        gpg --batch --homedir $TMPDIR --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$key\" && found=yes && break; \\\n      done; \\\n      test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $key\" && exit 1; \\\n      gpg --batch --homedir $TMPDIR --export --armor $key > $TMPDIR/repo.key && \\\n      rpm --import $TMPDIR/repo.key; \\\n    done; \\\n    rm -rf $TMPDIR && \\\n    # Now add the repository and install portus.\n    zypper ar -f obs://devel:languages:ruby/openSUSE_Leap_15.0 ruby && \\\n    zypper ar -p 1 -f obs://Virtualization:containers:Portus/openSUSE_Leap_15.0 portus && \\\n    zypper ref -f && \\\n    zypper -n in --from portus --details ruby-common portus && \\\n    zypper clean -a && \\\n    # Prepare the certificates directory.\n    rm -rf /etc/pki/trust/anchors && \\\n    ln -sf /certificates /etc/pki/trust/anchors\n\nEXPOSE 3000\nENTRYPOINT [\"/init\"]\n"
}