{
  "startTime": 1674241505443,
  "endTime": 1674241505700,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 160,
        "lineEnd": 160,
        "columnStart": 8,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedDockerfile": "#\n#--------------------------------------------------------------------------\n# Image Setup\n#--------------------------------------------------------------------------\n#\n# To edit the 'workspace' base Image, visit its repository on Github\n#    https://github.com/LaraDock/workspace\n#\n# To change its version, see the available Tags on the Docker Hub:\n#    https://hub.docker.com/r/laradock/workspace/tags/\n#\n\nFROM laradock/workspace:1.1\n\nMAINTAINER Mahmoud Zalt <mahmoud@zalt.me>\n\n#\n#--------------------------------------------------------------------------\n# Mandatory Software's Installation\n#--------------------------------------------------------------------------\n#\n# Mandatory Software's such as (\"php7.0-cli\", \"git\", \"vim\", ....) are\n# installed on the base image 'laradock/workspace' image. If you want\n# to add more Software's or remove existing one, you need to edit the\n# base image (https://github.com/LaraDock/workspace).\n#\n\n#\n#--------------------------------------------------------------------------\n# Optional Software's Installation\n#--------------------------------------------------------------------------\n#\n# Optional Software's will only be installed if you set them to `true`\n# in the `docker-compose.yml` before the build.\n#\n#   - INSTALL_XDEBUG=           true\n#   - INSTALL_MONGO=            false\n#   - COMPOSER_GLOBAL_INSTALL=  false\n#   - INSTALL_NODE=             false\n#   - INSTALL_DRUSH=            false\n#\n\n#####################################\n# xDebug:\n#####################################\n\n# Check if xDebug needs to be installed\nARG INSTALL_XDEBUG=true\nENV INSTALL_XDEBUG ${INSTALL_XDEBUG}\nRUN if [ ${INSTALL_XDEBUG} = true ]; then \\\n    apt-get install --no-install-recommends -y --force-yes php7.0-xdebug && \\\n    sed -i 's/^/;/g' /etc/php/7.0/cli/conf.d/20-xdebug.ini && \\\n    echo \"alias phpunit='php -dzend_extension=xdebug.so /var/www/laravel/vendor/bin/phpunit'\" >> ~/.bashrc \\\n; rm -rf /var/lib/apt/lists/*; fi\n# ADD for REMOTE debugging\nCOPY ./xdebug.ini /etc/php/7.0/cli/conf.d/xdebug.ini\n\n\n#####################################\n# ssh:\n#####################################\n\n# Check if ssh needs to be installed\n# See: https://github.com/phusion/baseimage-docker#enabling_ssh\nADD insecure_id_rsa /tmp/id_rsa\nADD insecure_id_rsa.pub /tmp/id_rsa.pub\nARG INSTALL_WORKSPACE_SSH=true\nENV INSTALL_WORKSPACE_SSH ${INSTALL_WORKSPACE_SSH}\nRUN if [ ${INSTALL_WORKSPACE_SSH} = true ]; then \\\n    rm -f /etc/service/sshd/down && \\\n    cat /tmp/id_rsa.pub >> /root/.ssh/authorized_keys \\\n        && cat /tmp/id_rsa.pub >> /root/.ssh/id_rsa.pub \\\n        && cat /tmp/id_rsa >> /root/.ssh/id_rsa \\\n        && rm -f /tmp/id_rsa* \\\n        && chmod 644 /root/.ssh/authorized_keys /root/.ssh/id_rsa.pub \\\n    && chmod 400 /root/.ssh/id_rsa \\\n;fi\n\n#--------------------------------------------------------------------------\n# ADDED for PHPStorm debugging\n# phusion/baseimage:latest\n# See: https://github.com/phusion/baseimage-docker#enabling_ssh\n#--------------------------------------------------------------------------\nRUN rm -f /etc/service/sshd/down\n\n\n#####################################\n# MongoDB:\n#####################################\n\n# Check if Mongo needs to be installed\nARG INSTALL_MONGO=true\nENV INSTALL_MONGO ${INSTALL_MONGO}\nRUN if [ ${INSTALL_MONGO} = true ]; then \\\n    # Install the mongodb extension\n    pecl install mongodb && \\\n    echo \"extension=mongodb.so\" >> /etc/php/7.0/cli/php.ini \\\n;fi\n\n#####################################\n# Non-Root User:\n#####################################\n\n# Add a non-root user to prevent files being created with root permissions on host machine.\nARG PUID=1000\nARG PGID=1000\nRUN groupadd -g $PGID laradock && \\\n    useradd -u $PUID -g laradock -m laradock\n\n#####################################\n# Composer:\n#####################################\n\n# Add the composer.json\nCOPY ./composer.json /home/laradock/.composer/composer.json\n\n# Make sure that ~/.composer belongs to laradock\nRUN chown -R laradock:laradock /home/laradock/.composer\nUSER laradock\n\n# Check if global install need to be ran\nARG COMPOSER_GLOBAL_INSTALL=true\nENV COMPOSER_GLOBAL_INSTALL ${COMPOSER_GLOBAL_INSTALL}\nRUN if [ ${COMPOSER_GLOBAL_INSTALL} = true ]; then \\\n    # run the install\n    composer global install \\\n;fi\n\n#####################################\n# Drush:\n#####################################\nUSER root\nENV DRUSH_VERSION 8.1.2\nARG INSTALL_DRUSH=true\nENV INSTALL_DRUSH ${INSTALL_DRUSH}\nRUN if [ ${INSTALL_DRUSH} = true ]; then \\\n    # Install Drush 8 with the phar file.\n    curl -fsSL -o /usr/local/bin/drush https://github.com/drush-ops/drush/releases/download/$DRUSH_VERSION/drush.phar | bash && \\\n    chmod +x /usr/local/bin/drush && \\\n    drush core-status \\\n;fi\n\nUSER laradock\n\n#####################################\n# Node / NVM:\n#####################################\n\n# Check if NVM needs to be installed\nARG INSTALL_NODE=true\nENV INSTALL_NODE ${INSTALL_NODE}\nENV NVM_DIR /home/laradock/.nvm\nRUN if [ ${INSTALL_NODE} = true ]; then \\\n    curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.3/install.sh | bash && \\\n        . ~/.nvm/nvm.sh && \\\n        nvm install stable && \\\n        nvm use stable && \\\n        nvm alias stable && \\\n        npm install -g gulp bower \\\n; npm cache clean --force; fi\n\n# Wouldn't execute when added to the RUN statement in the above block\n# Source NVM when loading bash since ~/.profile isn't loaded on non-login shell\nRUN if [ ${INSTALL_NODE} = true ]; then \\\n    echo \"\" >> ~/.bashrc && \\\n    echo 'export NVM_DIR=\"$HOME/.nvm\"' >> ~/.bashrc && \\\n    echo '[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"  # This loads nvm' >> ~/.bashrc \\\n;fi\n\n#\n#--------------------------------------------------------------------------\n# Final Touch\n#--------------------------------------------------------------------------\n#\n\n# Clean up\nUSER root\nRUN apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Set default work directory\nWORKDIR /var/www/laravel\n"
}