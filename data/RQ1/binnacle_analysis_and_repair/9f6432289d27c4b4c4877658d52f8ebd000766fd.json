{
  "startTime": 1674240185907,
  "endTime": 1674240186435,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "# Build an image that can do training and inference in SageMaker\n# This is a Python 2 image that uses the nginx, gunicorn, flask stack\n# for serving inferences in a stable way.\n\nFROM ubuntu:16.04\n\n#FOR GPU:\n#option 1/   nvidia/cuda:8.0-cudnn6-runtime-ubuntu16.04\n#option 2/  (smile case)#  FROM nvidia/cuda:9.0-base-ubuntu16.04\n#option 3/  for docker gpu on local cpu:  github.com/NVIDIA/nvidia-docker\n\n#**always run apt-get update with next command to fix caching issues\nRUN apt-get update && apt-get install --no-install-recommends -y unzip && rm -rf /var/lib/apt/lists/*;\n#libgcc option\nRUN apt-get install -y --no-install-recommends \\\n         wget \\\n         python3.5 \\\n         nginx \\\n         ca-certificates \\\n         libgcc-5-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n\n#For cv2:\nRUN apt-get update && apt-get install --no-install-recommends -y libxrender1 libsm6 libglib2.0 libxext6 && rm -rf /var/lib/apt/lists/*;\n#For matlabplot:\nRUN apt-get install --no-install-recommends -y python3-tk && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y vim && rm -rf /var/lib/apt/lists/*;\n\n\n#Python\nRUN wget https://bootstrap.pypa.io/3.3/get-pip.py && python3.5 get-pip.py\nRUN pip3 install --no-cache-dir --upgrade pip\n\n\n#https://medium.com/smileinnovation/sagemaker-bring-your-own-algorithms-719dd539607d\n#cuda-command-line-tools-9<96>0\n#cuda-cublas-dev-9<96>0\n#cuda-cudart-dev-9<96>0\n#cuda-cufft-dev-9<96>0\n#cuda-curand-dev-9<96>0\n#cuda-cusolver-dev-9<96>0\n#cuda-cusparse-dev-9<96>0\n#libcudnn7=7.0.5.15<96>1+cuda9.0\n#libcudnn7-dev=7.0.5.15<96>1+cuda9.0\n\n\n#?Both tensorflows?\n#So, what I did is to detect if the <93>import<94> of tensorflow raises an exception.\n#If it does, I uninstall <93>tensorflow-gpu<94> and install\n#<93>tensorflow<94> at the Docker container startup.\n#It results in a few more seconds to start up the instance, but this\n#<93>hack<94> is working perfectly fine in this scenario. I<92>m pretty sure\n#there are other ways to do it, feel free to comment if you have one in your mind.\n\n#std pothole requirements.txt\nRUN pip3 install --no-cache-dir tensorflow >=1.5.1\n#GPU - requires blas libs etc#  RUN pip3 install tensorflow-gpu>=1.5.1\nRUN pip3 install --no-cache-dir keras >=2.0.8\nRUN pip3 install --no-cache-dir numpy\nRUN pip3 install --no-cache-dir scipy\nRUN pip3 install --no-cache-dir Pillow\nRUN pip3 install --no-cache-dir cython\nRUN pip3 install --no-cache-dir matplotlib\nRUN pip3 install --no-cache-dir scikit-image\nRUN pip3 install --no-cache-dir opencv-python\nRUN pip3 install --no-cache-dir h5py\nRUN pip3 install --no-cache-dir imgaug\nRUN pip3 install --no-cache-dir IPython[all]\nRUN pip3 install --no-cache-dir moviepy\nRUN pip3 install --no-cache-dir pytesseract\n\nRUN pip3 install --no-cache-dir flask gevent gunicorn\nRUN pip3 install --no-cache-dir boto3\nRUN pip3 install --no-cache-dir configparser\nRUN pip3 install --no-cache-dir imageio\n\n\n# Set some environment variables. PYTHONUNBUFFERED keeps Python from buffering our standard\n# output stream, which means that logs can be delivered to the user quickly. PYTHONDONTWRITEBYTECODE\n# keeps Python from writing the .pyc files which are unnecessary in this case. We also update\n# PATH so that the train and serve programs are found when the container is invoked.\n\nENV PYTHONUNBUFFERED=TRUE\nENV PYTHONDONTWRITEBYTECODE=TRUE\nENV PATH=\"/opt/program:${PATH}\"\n\n#OTHER ENV options:\n#zero#  ENV MODELS_PATH=/opt/ml/model\n\n# Set up the program in the image\nCOPY pothole_base /opt/program\n\nRUN chmod +x /opt/program/train /opt/program/serve\n\nRUN wget https://tests-road-damage.s3.amazonaws.com/sagemaker/mask_rcnn_pothole_0005.h5\nRUN mv mask_rcnn_pothole_0005.h5 /opt/program/pothole\n\n# install ffmpeg from imageio.\nRUN python3.5 -c \"import imageio; imageio.plugins.ffmpeg.download()\"\n\n#add soft link so that ffmpeg can executed (like usual) from command line\nRUN ln -s /root/.imageio/ffmpeg/ffmpeg.linux64 /usr/bin/ffmpeg\n\nWORKDIR /opt/program\n\n#set default python version to 3.5\nRUN touch ~/.bash_aliases \\\n\t  && echo alias python=\\'python3.5\\' > ~/.bash_aliases\nRUN alias python=python3.5"
}