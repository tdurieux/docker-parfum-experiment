{
  "startTime": 1674248608136,
  "endTime": 1674248608740,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 0,
        "columnEnd": 69
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 0,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 0,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 162,
        "lineEnd": 162,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 254,
        "lineEnd": 254,
        "columnStart": 0,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 0,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 0,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 0,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 0,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 0,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 0,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 1,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "FROM datascienceschool/ubuntu:latest\nMAINTAINER \"Joel Kim\" admin@datascienceschool.net\n\nARG USER_ID=dockeruser\nENV USER_ID $USER_ID\n\n############################################################################\n# R\n################################################################################\nUSER root\nRUN \\\napt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 && \\\nadd-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/' && \\\napt update -y -q && \\\necho\n\n# R and RStudio-server\nENV RSTUDIOSERVER_VERSION 1.2.1335\nRUN \\\n apt install --no-install-recommends -y -q r-base r-base-dev && \\\nmkdir -p /download && cd /download && \\\nwget https://download2.rstudio.org/server/bionic/amd64/rstudio-server-${RSTUDIOSERVER_VERSION}-amd64.deb && \\\ngdebi --n rstudio-server-${RSTUDIOSERVER_VERSION}-amd64.deb && \\\nrm -rf /download && rm -rf /var/lib/apt/lists/*;\n\n# Settings for RStudio-Server\nEXPOSE 8787\n\n# enable R package install\nRUN chmod a+w /usr/local/lib/R/site-library\n\n################################################################################\n# Node.js\n################################################################################\n\nUSER root\nRUN \\\n curl -f -sL https://deb.nodesource.com/setup_10.x -o nodesource_setup.sh && \\\n/bin/bash nodesource_setup.sh && \\\n DEBIAN_FRONTEND=noninteractive apt --no-install-recommends install -y -q nodejs && \\\nrm -rf nodesource_setup.sh && \\\nnpm install -g npm@latest && \\\nnpm install -g ijavascript --unsafe-perm=true --allow-root && \\\necho \"\" && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n################################################################################\n# Python\n################################################################################\n\n# Anaconda config\nENV ANACONDA_PATH /home/$USER_ID/anaconda3\nENV ANACONDA_INSTALLER Anaconda3-2019.03-Linux-x86_64.sh\n\n# add path to root account\nENV PATH $ANACONDA_PATH/bin:$PATH\n\n# Change user to $USER_ID\nUSER $USER_ID\nWORKDIR /home/$USER_ID\nENV HOME /home/$USER_ID\nENV PATH $ANACONDA_PATH/bin:$PATH\nRUN \\\necho \"export PATH=$PATH:$ANACONDA_PATH/bin\" | tee -a /home/$USER_ID/.bashrc\n\n# Anaconda install\nRUN \\\nmkdir -p /home/$USER_ID/download && cd /home/$USER_ID/download && \\\nwget https://repo.anaconda.com/archive/$ANACONDA_INSTALLER -nv -q && \\\n/bin/bash ~/download/$ANACONDA_INSTALLER -b && \\\nconda update --yes conda && \\\nconda update --yes anaconda && \\\nconda update --yes --all && \\\nconda clean --yes --all && \\\nrm -rf /home/$USER_ID/download\n\n################################################################################\n# OpenCV\n################################################################################\n\nUSER root\nENV CV_VERSION 4.1.0\nRUN \\\ncd /home/$USER_ID && \\\nwget https://github.com/opencv/opencv/archive/${CV_VERSION}.zip -O opencv.zip && \\\nwget https://github.com/opencv/opencv_contrib/archive/${CV_VERSION}.zip -O opencv_contrib.zip && \\\nunzip opencv.zip && \\\nunzip opencv_contrib.zip && \\\nmv opencv-${CV_VERSION} opencv && \\\nmv opencv_contrib-${CV_VERSION} opencv_contrib && \\\ncd /home/$USER_ID/opencv && \\\nmkdir build && \\\ncd build && \\\ncmake \\\n    -D CMAKE_BUILD_TYPE=RELEASE \\\n    -D CMAKE_INSTALL_PREFIX=/usr/local \\\n    -D INSTALL_PYTHON_EXAMPLES=ON \\\n    -D INSTALL_C_EXAMPLES=OFF \\\n    -D OPENCV_ENABLE_NONFREE=ON \\\n    -D OPENCV_EXTRA_MODULES_PATH=/home/$USER_ID/opencv_contrib/modules \\\n    -D PYTHON_EXECUTABLE=$ANACONDA_PATH/bin/python \\\n    -D PYTHON3_EXECUTABLE=$ANACONDA_PATH/bin/python \\\n    -D PYTHON_INCLUDE_DIR=$ANACONDA_PATH/include/python3.7m \\\n    -D PYTHON_LIBRARY=$ANACONDA_PATH/lib/libpython3.7m.so \\\n    -D OPENCV_PYTHON3_INSTALL_PATH=$ANACONDA_PATH/lib/python3.7/site-packages \\\n    -D BUILD_EXAMPLES=OFF \\\n    -D BUILD_TESTS=OFF \\\n    .. && \\\nmake && make install && ldconfig && \\\ncd /home/$USER_ID && \\\nrm -rf opencv.zip opencv_contrib.zip opencv opencv_contrib && \\\necho\n\n################################################################################\n# Python Packages\n################################################################################\n\nARG CACHEBUST=1\nCOPY pkgs_conda.txt        /home/$USER_ID/download/pkgs_conda.txt\nCOPY pkgs_conda-forge.txt  /home/$USER_ID/download/pkgs_conda-forge.txt\nCOPY pkgs_pip.txt          /home/$USER_ID/download/pkgs_pip.txt\nCOPY install_pkg.sh        /home/$USER_ID/download/install_pkg.sh\n\n# fix ownership\nUSER root\nRUN \\\nmkdir -p /home/$USER_ID/.config && \\\nmkdir -p /home/$USER_ID/.config/git && \\\nchown -R $USER_ID:$USER_ID /home/$USER_ID/.config\n\nUSER $USER_ID\nRUN \\\ncd /home/$USER_ID/download && \\\nsource ./install_pkg.sh\n\n# tensorboard port\nEXPOSE 6006\n\n################################################################################\n# Jupyter Notebook Settings\n################################################################################\n\nEXPOSE 8888\n\nRUN ipython profile create\nCOPY ipython_config.py /home/$USER_ID/.ipython/profile_default/ipython_config.py\nCOPY ipython_kernel_config.py /home/$USER_ID/.ipython/profile_default/ipython_kernel_config.py\nCOPY 00.py /home/$USER_ID/.ipython/profile_default/startup/00.py\n\nRUN jupyter notebook --generate-config\nUSER root\nRUN \\\nchown -R $USER_ID:$USER_ID /home/$USER_ID/.jupyter && \\\nchmod -R 755 /home/$USER_ID/.jupyter\n\nUSER $USER_ID\nRUN \\\necho \"c.NotebookApp.notebook_dir = u\\\"/home/$USER_ID\\\"\" | tee -a /home/$USER_ID/.jupyter/jupyter_notebook_config.py && \\\necho \"c.NotebookApp.token = u\\\"\\\"\" | tee -a /home/$USER_ID/.jupyter/jupyter_notebook_config.py && \\\necho \"c.NotebookApp.password = u\\\"\\\"\" | tee -a /home/$USER_ID/.jupyter/jupyter_notebook_config.py && \\\necho \"c.NotebookApp.iopub_data_rate_limit = 10000000\" | tee -a /home/$USER_ID/.jupyter/jupyter_notebook_config.py\n\n# install ipython magics\nRUN pip install --no-cache-dir git+git://github.com/joelkim/ipython-tikzmagic.git\n\n# Node.js kernel\nRUN ijsinstall\n\n# R kernel\nUSER root\nRUN \\\necho 'install.packages(c(\\\"repr\\\",\\\"IRdisplay\\\",\\\"pbdZMQ\\\",\\\"devtools\\\"),repos=c(\\\"http://cran.rstudio.com\\\"))' | xargs R --vanilla --slave -e && \\\necho 'devtools::install_github(paste0(\\\"IRkernel/\\\",c(\\\"repr\\\",\\\"IRdisplay\\\",\\\"IRkernel\\\")))' | xargs R --vanilla --slave -e && \\\necho 'IRkernel::installspec(displayname=\\\"R\\\",user=FALSE)' | xargs R --vanilla --slave -e && \\\necho\n\n################################################################################\n# Set TLS certifates\n################################################################################\n\nUSER root\nRUN mkdir -p /etc/pki/tls/certs/ && \\\ncp /etc/ssl/certs/ca-certificates.crt /etc/pki/tls/certs/ca-bundle.crt\n\n################################################################################\n# Postgresql Settings\n################################################################################\n\nUSER root\nADD \"./.postgres_db_setup.sql\" \"/home/$USER_ID/\"\n\nEXPOSE 5432\n\n################################################################################\n# Supervisor Settings\n################################################################################\n\nUSER root\nCOPY supervisord.conf /etc/supervisor/supervisord.conf\nRUN \\\nsed -i \"s/USER_ID/$USER_ID/g\" /etc/supervisor/supervisord.conf  && \\\nmkdir -p /var/log/supervisor  && \\\nchown $USER_ID:$USER_ID /var/log/supervisor\n\n################################################################################\n# Data\n################################################################################\n\nUSER $USER_ID\nRUN \\\nmkdir -p /home/$USER_ID/data && cd /home/$USER_ID/data && \\\necho\n\n################################################################################\n# Postprocessing\n################################################################################\n\nADD \"./.docker-entrypoint.sh\" \"/home/$USER_ID/\"\n\n# fix ownership\nUSER root\n\nRUN \\\nchown syslog:syslog /etc/rsyslog.conf && \\\nchown $USER_ID:$USER_ID /home/$USER_ID/.*  && \\\nchown $USER_ID:$USER_ID /home/$USER_ID/*  && \\\nchown -R $USER_ID:$USER_ID /home/$USER_ID/.ipython  && \\\nchown -R $USER_ID:$USER_ID /home/$USER_ID/.jupyter  && \\\nchown -R $USER_ID:$USER_ID /home/$USER_ID/.local && \\\nchown -R $USER_ID:$USER_ID /home/$USER_ID/.npm && \\\necho \"\"\n\n# Jupyter notebook extension setting\nUSER $USER_ID\nRUN \\\njupyter contrib nbextension install --user && \\\njupyter nbextensions_configurator enable --user && \\\njupyter nbextension enable --py widgetsnbextension && \\\njupyter nbextension install --user --py ipyparallel  && \\\njupyter nbextension enable --user --py ipyparallel && \\\njupyter serverextension enable --user --py ipyparallel && \\\nipcluster nbextension enable --user && \\\njupyter serverextension enable ipyparallel.nbextension\n\n################################################################################\n# Fixing\n################################################################################\n\n# ImageMagick security fix\nUSER root\nCOPY policy.xml /etc/ImageMagick-6/policy.xml\n\n# statsmodels incompatibility with scipy 1.3.0\nUSER $USER_ID\nRUN \\\n pip install --no-cache-dir -U git+https://github.com/statsmodels/statsmodels\n\n################################################################################\n# Tini\n################################################################################\n\n# Tini operates as a process subreaper for jupyter. This prevents kernel crashes.\nUSER root\nADD https://github.com/krallin/tini/releases/download/v0.18.0/tini /usr/bin/tini\nRUN chmod a+x /usr/bin/tini\n\nENTRYPOINT [\"/usr/bin/tini\", \"--\", \"/bin/bash\", \".docker-entrypoint.sh\"]\n"
}