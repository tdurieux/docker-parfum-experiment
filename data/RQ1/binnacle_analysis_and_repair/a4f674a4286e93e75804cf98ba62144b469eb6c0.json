{
  "startTime": 1674242775882,
  "endTime": 1674242777578,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 185,
        "lineEnd": 185,
        "columnStart": 30,
        "columnEnd": 139
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 273,
        "lineEnd": 273,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 275,
        "lineEnd": 275,
        "columnStart": 7,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 277,
        "lineEnd": 277,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 279,
        "lineEnd": 279,
        "columnStart": 7,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 281,
        "lineEnd": 281,
        "columnStart": 7,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 273,
        "lineEnd": 273,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 275,
        "lineEnd": 275,
        "columnStart": 7,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 277,
        "lineEnd": 277,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 279,
        "lineEnd": 279,
        "columnStart": 7,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 281,
        "lineEnd": 281,
        "columnStart": 7,
        "columnEnd": 87
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 154,
        "lineEnd": 155,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 208,
        "lineEnd": 217,
        "columnStart": 7,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 250,
        "lineEnd": 252,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 256,
        "lineEnd": 266,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 7,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 250,
        "lineEnd": 252,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 256,
        "lineEnd": 266,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##\n# osgeo/gdal:ubuntu-full\n\n# This file is available at the option of the licensee under:\n# Public domain\n# or licensed under X/MIT (LICENSE.TXT) Copyright 2019 Even Rouault <even.rouault@spatialys.com>\n\nARG PROJ_INSTALL_PREFIX=/usr/local\n\nFROM ubuntu:18.04 as builder\n\n# Derived from osgeo/proj by Howard Butler <howard@hobu.co>\nMAINTAINER Even Rouault <even.rouault@spatialys.com>\n\n# Setup build env for PROJ\nRUN apt-get update -y \\\n    && apt-get install -y --fix-missing --no-install-recommends \\\n            software-properties-common build-essential ca-certificates \\\n            git make cmake wget unzip libtool automake \\\n            zlib1g-dev libsqlite3-dev pkg-config sqlite3 && rm -rf /var/lib/apt/lists/*;\n\n# Setup build env for GDAL\nRUN apt-get update -y \\\n    && apt-get install -y --fix-missing --no-install-recommends \\\n       libcharls-dev libopenjp2-7-dev libcairo2-dev \\\n       python3-dev python3-numpy \\\n       libpng-dev libjpeg-dev libgif-dev liblzma-dev libgeos-dev \\\n       curl libcurl4-gnutls-dev libxml2-dev libexpat-dev libxerces-c-dev \\\n       libnetcdf-dev libpoppler-dev libpoppler-private-dev \\\n       libspatialite-dev swig libhdf4-alt-dev libhdf5-serial-dev \\\n       libfreexl-dev unixodbc-dev libwebp-dev libepsilon-dev \\\n       liblcms2-2 libpcre3-dev libcrypto++-dev libdap-dev libfyba-dev \\\n       libkml-dev libmysqlclient-dev libogdi3.2-dev \\\n       libcfitsio-dev openjdk-8-jdk libzstd1-dev \\\n       libpq-dev libssl-dev libboost-dev \\\n       autoconf automake bash-completion libarmadillo-dev && rm -rf /var/lib/apt/lists/*;\n\nARG PROJ_DATUMGRID_LATEST_LAST_MODIFIED\nARG PROJ_INSTALL_PREFIX\nRUN \\\n    mkdir -p /build_projgrids/${PROJ_INSTALL_PREFIX}/share/proj \\\n    && curl -f -LOs https://download.osgeo.org/proj/proj-datumgrid-latest.zip \\\n    && unzip -q -j -u -o proj-datumgrid-latest.zip  -d /build_projgrids/${PROJ_INSTALL_PREFIX}/share/proj \\\n    && rm -f *.zip\n\n# Build likbkea\nARG KEA_VERSION=c6d36f3db5e4\nRUN wget -q https://bitbucket.org/chchrsc/kealib/get/${KEA_VERSION}.zip \\\n    && unzip -q ${KEA_VERSION}.zip \\\n    && rm -f ${KEA_VERSION}.zip \\\n    && cd chchrsc-kealib-${KEA_VERSION}/trunk \\\n    && cmake . -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release \\\n        -DCMAKE_INSTALL_PREFIX=/usr -DHDF5_INCLUDE_DIR=/usr/include/hdf5/serial \\\n        -DHDF5_LIB_PATH=/usr/lib/x86_64-linux-gnu/hdf5/serial -DLIBKEA_WITH_GDAL=OFF \\\n    && make -j$(nproc) \\\n    && make install DESTDIR=\"/build_thirdparty\" \\\n    && make install \\\n    && cd ../.. \\\n    && rm -rf chchrsc-kealib-${KEA_VERSION} \\\n    && for i in /build_thirdparty/usr/lib/*; do strip -s $i 2>/dev/null || /bin/true; done \\\n    && for i in /build_thirdparty/usr/bin/*; do strip -s $i 2>/dev/null || /bin/true; done\n\n# Build mongo-c-driver\nARG MONGO_C_DRIVER_VERSION=1.13.0\nRUN mkdir mongo-c-driver \\\n    && wget -q https://github.com/mongodb/mongo-c-driver/releases/download/${MONGO_C_DRIVER_VERSION}/mongo-c-driver-${MONGO_C_DRIVER_VERSION}.tar.gz -O - \\\n        | tar xz -C mongo-c-driver --strip-components=1 \\\n    && cd mongo-c-driver \\\n    && mkdir build_cmake \\\n    && cd build_cmake \\\n    && cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DENABLE_TESTS=NO -DCMAKE_BUILD_TYPE=Release \\\n    && make -j$(nproc) \\\n    && make install DESTDIR=\"/build_thirdparty\" \\\n    && make install \\\n    && cd ../.. \\\n    && rm -rf mongo-c-driver \\\n    && rm /build_thirdparty/usr/lib/x86_64-linux-gnu/*.a \\\n    && for i in /build_thirdparty/usr/lib/x86_64-linux-gnu/*; do strip -s $i 2>/dev/null || /bin/true; done \\\n    && for i in /build_thirdparty/usr/bin/*; do strip -s $i 2>/dev/null || /bin/true; done\n\n# Build mongocxx\nARG MONGOCXX_VERSION=3.4.0\nRUN mkdir mongocxx \\\n    && wget -q https://github.com/mongodb/mongo-cxx-driver/archive/r${MONGOCXX_VERSION}.tar.gz -O - \\\n        | tar xz -C mongocxx --strip-components=1 \\\n    && cd mongocxx \\\n    && mkdir build_cmake \\\n    && cd build_cmake \\\n    && cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DBSONCXX_POLY_USE_BOOST=ON -DMONGOCXX_ENABLE_SLOW_TESTS=NO -DCMAKE_BUILD_TYPE=Release \\\n    && make -j$(nproc) \\\n    && make install DESTDIR=\"/build_thirdparty\" \\\n    && make install \\\n    && cd ../.. \\\n    && rm -rf mongocxx \\\n    && for i in /build_thirdparty/usr/lib/x86_64-linux-gnu/*; do strip -s $i 2>/dev/null || /bin/true; done \\\n    && for i in /build_thirdparty/usr/bin/*; do strip -s $i 2>/dev/null || /bin/true; done\n\n# Build tiledb\nARG TILEDB_VERSION=1.5.0\nRUN mkdir tiledb \\\n    && wget -q https://github.com/TileDB-Inc/TileDB/archive/${TILEDB_VERSION}.tar.gz -O - \\\n        | tar xz -C tiledb --strip-components=1 \\\n    && cd tiledb \\\n    && mkdir build_cmake \\\n    && cd build_cmake \\\n    && ../bootstrap --prefix=/usr \\\n    && make -j$(nproc) \\\n    && make install-tiledb DESTDIR=\"/build_thirdparty\" \\\n    && make install-tiledb \\\n    && cd ../.. \\\n    && rm -rf tiledb \\\n    && for i in /build_thirdparty/usr/lib/x86_64-linux-gnu/*; do strip -s $i 2>/dev/null || /bin/true; done \\\n    && for i in /build_thirdparty/usr/bin/*; do strip -s $i 2>/dev/null || /bin/true; done\n\n# Build openjpeg\nARG OPENJPEG_VERSION=2.3.1\nRUN if test \"${OPENJPEG_VERSION}\" != \"\"; then ( \\\n    wget -q https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz \\\n    && tar xzf v${OPENJPEG_VERSION}.tar.gz \\\n    && rm -f v${OPENJPEG_VERSION}.tar.gz \\\n    && cd openjpeg-${OPENJPEG_VERSION} \\\n    && cmake . -DBUILD_SHARED_LIBS=ON  -DBUILD_STATIC_LIBS=OFF -DCMAKE_BUILD_TYPE=Release \\\n        -DCMAKE_INSTALL_PREFIX=/usr \\\n    && make -j$(nproc) \\\n    && make install \\\n    && mkdir -p /build_thirdparty/usr/lib/x86_64-linux-gnu \\\n    && rm -f /usr/lib/x86_64-linux-gnu/libopenjp2.so* \\\n    && mv /usr/lib/libopenjp2.so* /usr/lib/x86_64-linux-gnu \\\n    && cp -P /usr/lib/x86_64-linux-gnu/libopenjp2.so* /build_thirdparty/usr/lib/x86_64-linux-gnu \\\n    && for i in /build_thirdparty/usr/lib/x86_64-linux-gnu/*; do strip -s $i 2>/dev/null || /bin/true; done \\\n    && cd .. \\\n    && rm -rf openjpeg-${OPENJPEG_VERSION} \\\n    ); fi\n\nRUN apt-get update -y \\\n    && apt-get install -y --fix-missing --no-install-recommends rsync ccache && rm -rf /var/lib/apt/lists/*;\nARG RSYNC_REMOTE\n\n# Build PROJ\nARG PROJ_VERSION=master\nRUN mkdir proj \\\n    && wget -q https://github.com/OSGeo/proj.4/archive/${PROJ_VERSION}.tar.gz -O - \\\n        | tar xz -C proj --strip-components=1 \\\n    && cd proj \\\n    && ./autogen.sh \\\n    && if test \"${RSYNC_REMOTE}\" != \"\"; then \\\n        echo \"Downloading cache...\"; \\\n        rsync -ra ${RSYNC_REMOTE}/proj/ $HOME/; \\\n        echo \"Finished\"; \\\n        export CC=\"ccache gcc\"; \\\n        export CXX=\"ccache g++\"; \\\n        export PROJ_DB_CACHE_DIR=\"$HOME/.ccache\"; \\\n        ccache -M 100M; \\\n    fi \\\n    && CFLAGS='-DPROJ_RENAME_SYMBOLS -O2' CXXFLAGS='-DPROJ_RENAME_SYMBOLS -O2' \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=${PROJ_INSTALL_PREFIX} --disable-static \\\n    && make -j$(nproc) \\\n    && make install DESTDIR=\"/build\" \\\n    && if test \"${RSYNC_REMOTE}\" != \"\"; then \\\n        ccache -s; \\\n        echo \"Uploading cache...\"; \\\n        rsync -ra --delete $HOME/.ccache ${RSYNC_REMOTE}/proj/; \\\n        echo \"Finished\"; \\\n        rm -rf $HOME/.ccache; \\\n        unset CC; \\\n        unset CXX; \\\n    fi \\\n    && cd .. \\\n    && rm -rf proj \\\n    && PROJ_SO=$(readlink /build${PROJ_INSTALL_PREFIX}/lib/libproj.so | sed \"s/libproj\\.so\\.//\") \\\n    && PROJ_SO_FIRST=$(echo $PROJ_SO | awk 'BEGIN {FS=\".\"} {print $1}') \\\n    && mv /build${PROJ_INSTALL_PREFIX}/lib/libproj.so.${PROJ_SO} /build${PROJ_INSTALL_PREFIX}/lib/libinternalproj.so.${PROJ_SO} \\\n    && ln -s libinternalproj.so.${PROJ_SO} /build${PROJ_INSTALL_PREFIX}/lib/libinternalproj.so.${PROJ_SO_FIRST} \\\n    && ln -s libinternalproj.so.${PROJ_SO} /build${PROJ_INSTALL_PREFIX}/lib/libinternalproj.so \\\n    && rm /build${PROJ_INSTALL_PREFIX}/lib/libproj.* \\\n    && ln -s libinternalproj.so.${PROJ_SO} /build${PROJ_INSTALL_PREFIX}/lib/libproj.so.${PROJ_SO_FIRST} \\\n    && strip -s /build${PROJ_INSTALL_PREFIX}/lib/libinternalproj.so.${PROJ_SO} \\\n    && for i in /build${PROJ_INSTALL_PREFIX}/bin/*; do strip -s $i 2>/dev/null || /bin/true; done\n\nARG GDAL_VERSION=master\nARG GDAL_RELEASE_DATE\nARG GDAL_BUILD_IS_RELEASE\n\n# Build GDAL\nRUN if test \"${GDAL_VERSION}\" = \"master\"; then \\\n        export GDAL_VERSION=$( curl -f -Ls https://api.github.com/repos/OSGeo/gdal/commits/HEAD -H \"Accept: application/vnd.github.VERSION.sha\"); \\\n        export GDAL_RELEASE_DATE=$(date \"+%Y%m%d\"); \\\n    fi \\\n    && if test \"x${GDAL_BUILD_IS_RELEASE}\" = \"x\"; then \\\n        export GDAL_SHA1SUM=${GDAL_VERSION}; \\\n    fi \\\n    && mkdir gdal \\\n    && wget -q https://github.com/OSGeo/gdal/archive/${GDAL_VERSION}.tar.gz -O - \\\n        | tar xz -C gdal --strip-components=1 \\\n    && cd gdal/gdal \\\n    && if test \"${RSYNC_REMOTE}\" != \"\"; then \\\n        echo \"Downloading cache...\"; \\\n        rsync -ra ${RSYNC_REMOTE}/gdal/ $HOME/; \\\n        echo \"Finished\"; \\\n        # Little trick to avoid issues with Python bindings\n        printf \"#!/bin/sh\\nccache gcc \\$*\" > ccache_gcc.sh; \\\n        chmod +x ccache_gcc.sh; \\\n        printf \"#!/bin/sh\\nccache g++ \\$*\" > ccache_g++.sh; \\\n        chmod +x ccache_g++.sh; \\\n        export CC=$PWD/ccache_gcc.sh; \\\n        export CXX=$PWD/ccache_g++.sh; \\\n        ccache -M 1G; \\\n    fi \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --without-libtool \\\n    --with-hide-internal-symbols \\\n    --with-jpeg12 \\\n    --with-python --with-poppler --with-spatialite --with-mysql --with-liblzma \\\n    --with-webp --with-epsilon --with-proj=/build/usr/local --with-poppler \\\n    --with-hdf5 --with-dods-root=/usr --with-sosi --with-mysql \\\n    --with-libtiff=internal --with-rename-internal-libtiff-symbols \\\n    --with-geotiff=internal --with-rename-internal-libgeotiff-symbols \\\n    --with-kea=/usr/bin/kea-config --with-mongocxxv3 --with-tiledb \\\n    --with-crypto \\\n    && make -j$(nproc) \\\n    && make install DESTDIR=\"/build\" \\\n    && if test \"${RSYNC_REMOTE}\" != \"\"; then \\\n        ccache -s; \\\n        echo \"Uploading cache...\"; \\\n        rsync -ra --delete $HOME/.ccache ${RSYNC_REMOTE}/gdal/; \\\n        echo \"Finished\"; \\\n        rm -rf $HOME/.ccache; \\\n        unset CC; \\\n        unset CXX; \\\n    fi \\\n    && cd ../.. \\\n    && rm -rf gdal \\\n    && mkdir -p /build_gdal_python/usr/lib \\\n    && mkdir -p /build_gdal_python/usr/bin \\\n    && mkdir -p /build_gdal_version_changing/usr/include \\\n    && mv /build/usr/lib/python3            /build_gdal_python/usr/lib \\\n    && mv /build/usr/lib                    /build_gdal_version_changing/usr \\\n    && mv /build/usr/include/gdal_version.h /build_gdal_version_changing/usr/include \\\n    && mv /build/usr/bin/*.py               /build_gdal_python/usr/bin \\\n    && mv /build/usr/bin                    /build_gdal_version_changing/usr \\\n    && for i in /build_gdal_version_changing/usr/lib/*; do strip -s $i 2>/dev/null || /bin/true; done \\\n    && for i in /build_gdal_python/usr/lib/python3/dist-packages/osgeo/*.so; do strip -s $i 2>/dev/null || /bin/true; done \\\n    && for i in /build_gdal_version_changing/usr/bin/*; do strip -s $i 2>/dev/null || /bin/true; done\n\n# Build final image\nFROM ubuntu:18.04 as runner\n\nRUN date\n\n# PROJ dependencies\nRUN apt-get update; \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        libsqlite3-0 \\\n        curl unzip && rm -rf /var/lib/apt/lists/*;\n\n# GDAL dependencies\nRUN apt-get update; \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        libcharls1 libopenjp2-7 libcairo2 python3-numpy \\\n        libpng16-16 libjpeg-turbo8 libgif7 liblzma5 libgeos-3.6.2 libgeos-c1v5 \\\n        libcurl4 libxml2 libexpat1 \\\n        libxerces-c3.2 libnetcdf-c++4 netcdf-bin libpoppler73 libspatialite7 gpsbabel \\\n        libhdf4-0-alt libhdf5-100 libhdf5-cpp-100 poppler-utils libfreexl1 unixodbc libwebp6 \\\n        libepsilon1 liblcms2-2 libpcre3 libcrypto++ libdap25 libdapclient6v5 libfyba0 \\\n        libkmlbase1 libkmlconvenience1 libkmldom1 libkmlengine1 libkmlregionator1 libkmlxsd1 \\\n        libmysqlclient20 libogdi3.2 libcfitsio5 openjdk-8-jre \\\n        libzstd1 bash bash-completion libpq5 libssl1.1 \\\n        libarmadillo8 libpython3.6 && rm -rf /var/lib/apt/lists/*;\n\n# Order layers starting with less frequently varying ones\nARG PROJ_DATUMGRID_LATEST_LAST_MODIFIED\nARG PROJ_INSTALL_PREFIX\nRUN \\\n    mkdir -p ${PROJ_INSTALL_PREFIX}/share/proj \\\n    && curl -f -LOs https://download.osgeo.org/proj/proj-datumgrid-latest.zip \\\n    && unzip -j -u -o proj-datumgrid-latest.zip  -d ${PROJ_INSTALL_PREFIX}/share/proj \\\n    && curl -f -LOs https://download.osgeo.org/proj/proj-datumgrid-europe-latest.zip \\\n    && unzip -j -u -o proj-datumgrid-europe-latest.zip -d ${PROJ_INSTALL_PREFIX}/share/proj \\\n    && curl -f -LOs https://download.osgeo.org/proj/proj-datumgrid-oceania-latest.zip \\\n    && unzip -j -u -o proj-datumgrid-oceania-latest.zip -d ${PROJ_INSTALL_PREFIX}/share/proj \\\n    && curl -f -LOs https://download.osgeo.org/proj/proj-datumgrid-world-latest.zip \\\n    && unzip -j -u -o proj-datumgrid-world-latest.zip -d ${PROJ_INSTALL_PREFIX}/share/proj \\\n    && curl -f -LOs https://download.osgeo.org/proj/proj-datumgrid-north-america-latest.zip \\\n    && unzip -j -u -o proj-datumgrid-north-america-latest.zip -d ${PROJ_INSTALL_PREFIX}/share/proj \\\n    && rm -f *.zip\n\nCOPY --from=builder  /build_thirdparty/usr/ /usr/\n\nCOPY --from=builder  /build${PROJ_INSTALL_PREFIX}/share/proj/ ${PROJ_INSTALL_PREFIX}/share/proj/\nCOPY --from=builder  /build${PROJ_INSTALL_PREFIX}/include/ ${PROJ_INSTALL_PREFIX}/include/\nCOPY --from=builder  /build${PROJ_INSTALL_PREFIX}/bin/ ${PROJ_INSTALL_PREFIX}/bin/\nCOPY --from=builder  /build${PROJ_INSTALL_PREFIX}/lib/ ${PROJ_INSTALL_PREFIX}/lib/\n\nCOPY --from=builder  /build/usr/share/gdal/ /usr/share/gdal/\nCOPY --from=builder  /build/usr/include/ /usr/include/\nCOPY --from=builder  /build_gdal_python/usr/ /usr/\nCOPY --from=builder  /build_gdal_version_changing/usr/ /usr/\n\nRUN ldconfig\n"
}