{
  "startTime": 1674245788293,
  "endTime": 1674245788505,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 106,
        "columnEnd": 141
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 94,
        "columnEnd": 123
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 142
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 166
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:utopic\nMAINTAINER Jose Mota <jose@josemota.net>\n\n# Just use bash.\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n# Debian complains about the terminal environment on Docker. Use this.\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# Install base packages\nRUN apt-get update\nRUN apt-get upgrade -y\nRUN apt-get install --no-install-recommends -y curl wget ca-certificates build-essential autoconf python-software-properties libyaml-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install nginx repositories\nRUN wget https://nginx.org/keys/nginx_signing.key\nRUN apt-key add nginx_signing.key\nRUN echo \"deb http://nginx.org/packages/ubuntu/ trusty nginx\" >> /etc/apt/sources.list.d/nginx.list\nRUN echo \"deb-src http://nginx.org/packages/ubuntu/ trusty nginx\" >> /etc/apt/sources.list.d/nginx.list\n\n# Finish installing remaining dependencies\nRUN apt-get update -y\nRUN apt-get install --no-install-recommends -y libssl-dev libreadline6 libreadline6-dev zlib1g zlib1g-dev bison openssl make git libpq-dev libsqlite3-dev nodejs nginx && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean\n\n# Force sudoers to not being asked the password\nRUN echo %sudo        ALL=NOPASSWD: ALL >> /etc/sudoers\n\n# Ruby-install\nRUN wget -O ruby-install-0.5.0.tar.gz https://github.com/postmodern/ruby-install/archive/v0.5.0.tar.gz && tar -xzvf ruby-install-0.5.0.tar.gz && cd ruby-install-0.5.0/ && make install && rm ruby-install-0.5.0.tar.gz\n\n# chruby\nRUN wget -O chruby-0.3.9.tar.gz https://github.com/postmodern/chruby/archive/v0.3.9.tar.gz && tar -xzvf chruby-0.3.9.tar.gz && cd chruby-0.3.9/ && make install && rm chruby-0.3.9.tar.gz\n\nRUN rm -rf /var/cache/apt/* /tmp/*\n\n# Add a user just for running the app\nRUN useradd -m -G sudo app\n\nUSER app\nWORKDIR /home/app\n\n# Install a Ruby version\nRUN ruby-install ruby\nRUN rm -rf /home/app/src\n\nADD docker-entrypoint.sh /home/app/docker-entrypoint.sh\nADD setup.sh /home/app/setup.sh\nADD nginx.conf /home/app/nginx.conf\n\nENV RAILS_ENV=production\n\nEXPOSE 80:80\n\nENTRYPOINT /home/app/docker-entrypoint.sh\n"
}