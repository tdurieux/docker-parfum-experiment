{
  "startTime": 1674241257077,
  "endTime": 1674241257105,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Simple alpine-based image that ships OpenVPN kubectl and scripts to generate a\n# CA on first start and certificates for your OpenVPN users later on.\n#\n# It is heavily inspired from John Felten's work, but uses Kubernetes secrets\n# instead of volumes to store certs and stuff :)\n# https://github.com/jfelten/openvpn-docker\n#\nFROM alpine:latest\nMAINTAINER Ã‰tienne Lafarge <etienne.lafarge@gmail.com>\n\n# Add openvpn, easy-rsa and other required packages\nRUN apk add --no-cache --update openvpn openssl easy-rsa openvpn iptables\n\n# Add kubectl binary\nADD https://storage.googleapis.com/kubernetes-release/release/v1.6.4/bin/linux/amd64/kubectl /usr/local/bin/kubectl\nRUN chmod +x /usr/local/bin/kubectl\n\n# Set up the environment variables that configure the pod (Kubernetes\n# secret names and namespaces)\nENV K8S_SECRET_NAMESPACE default\nENV SERVER_TLS_SECRET openvpn-tls-assets\nENV CLIENT_CERTS_SECRET openvpn-tls-assets\n\nENV OVPN_PROTO tcp\nENV OVPN_NETWORK 10.240.0.0\nENV OVPN_SUBNET 255.255.255.0\nENV OVPN_PORT 42062\nENV OVPN_K8S_POD_NETWORK 10.1.0.0\nENV OVPN_K8S_POD_SUBNET 255.255.0.0\n\n# Let's make sure we can run ./easyrsa\nWORKDIR /etc/openvpn/certs\n\n# Configure tun\nRUN mkdir -p /dev/net && \\\n    mknod /dev/net/tun c 10 200\n\n# Copy our dirty shell scripts\nCOPY ./entrypoint.sh /kube-openvpn/entrypoint.sh\nCOPY ./gen_client_cert.sh /kube-openvpn/gen_client_cert.sh\nCOPY ./openvpn.template.conf /kube-openvpn/openvpn.template.conf\nRUN chmod +x /kube-openvpn/*.sh\n\nENTRYPOINT [\"/kube-openvpn/entrypoint.sh\"]\n"
}