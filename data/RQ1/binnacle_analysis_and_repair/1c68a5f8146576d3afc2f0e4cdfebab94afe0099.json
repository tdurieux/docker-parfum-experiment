{
  "startTime": 1674252951360,
  "endTime": 1674252951494,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 122
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_IMAGE_TAG=7.2-fpm-alpine\nFROM php:${PHP_IMAGE_TAG}\n\nLABEL maintainer=\"Samuel Laulhau <sam@lalop.co>\"\n\n#####\n# SYSTEM REQUIREMENT\n#####\nENV PHANTOMJS phantomjs-2.1.1-linux-x86_64\nRUN apk update \\\n && apk add --no-cache git gmp-dev freetype-dev libjpeg-turbo-dev \\\n            coreutils chrpath fontconfig libpng-dev\n\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-configure gmp \\\n    && docker-php-ext-install iconv mbstring pdo pdo_mysql zip gd gmp opcache \\\n    && echo \"php_admin_value[error_reporting] = E_ALL & ~E_NOTICE & ~E_WARNING & ~E_STRICT & ~E_DEPRECATED\">>/usr/local/etc/php-fpm.d/www.conf\n\nRUN cd /usr/share \\\n    && curl -f -L https://github.com/Overbryd/docker-phantomjs-alpine/releases/download/2.11/phantomjs-alpine-x86_64.tar.bz2 | tar xj \\\n    && ln -s /usr/share/phantomjs/phantomjs /usr/local/bin/phantomjs\n\n\n# set recommended PHP.ini settings\n# see https://secure.php.net/manual/en/opcache.installation.php\nRUN { \\\n\t\techo 'opcache.memory_consumption=128'; \\\n\t\techo 'opcache.interned_strings_buffer=8'; \\\n\t\techo 'opcache.max_accelerated_files=4000'; \\\n\t\techo 'opcache.revalidate_freq=60'; \\\n\t\techo 'opcache.fast_shutdown=1'; \\\n\t\techo 'opcache.enable_cli=1'; \\\n} > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\n#####\n# DOWNLOAD AND INSTALL INVOICE NINJA\n#####\n\nENV INVOICENINJA_VERSION 4.5.13\n\nRUN curl -f -o ninja.zip -SL https://download.invoiceninja.com/ninja-v${INVOICENINJA_VERSION}.zip \\\n    && unzip ninja.zip -d /var/www/ \\\n    && rm ninja.zip \\\n    && mv /var/www/ninja /var/www/app \\\n    && mv /var/www/app/storage /var/www/app/docker-backup-storage \\\n    && mv /var/www/app/public /var/www/app/docker-backup-public \\\n    && mkdir -p /var/www/app/public/logo /var/www/app/storage \\\n    && touch /var/www/app/.env \\\n    && chmod -R 755 /var/www/app/storage \\\n    && rm -rf /var/www/app/docs /var/www/app/tests /var/www/ninja\n\n######\n# DEFAULT ENV\n######\nENV LOG errorlog\nENV SELF_UPDATER_SOURCE ''\nENV PHANTOMJS_BIN_PATH /usr/local/bin/phantomjs\n\n\n#use to be mounted into nginx for exemple\nVOLUME /var/www/app/public\n\nWORKDIR /var/www/app\n\nCOPY entrypoint.sh /usr/local/bin/invoice-entrypoint\n# RUN chmod +x /usr/local/bin/invoice-entrypoint\n\nENTRYPOINT [\"invoice-entrypoint\"]\nCMD [\"php-fpm\"]\n"
}