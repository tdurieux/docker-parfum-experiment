{
  "startTime": 1674244672790,
  "endTime": 1674244672926,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\nARG CMAKE_VERSION=3.3\n\n# Environment\nENV DEBIAN_FRONTEND noninteractive\n\n# Install all basic requirements\nRUN \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y tar unzip wget git build-essential doxygen graphviz llvm libasan2 libidn11 && \\\n    # CMake\n    wget -nv -nc https://cmake.org/files/v$CMAKE_VERSION/cmake-$CMAKE_VERSION.0-Linux-x86_64.sh --no-check-certificate && \\\n    bash cmake-$CMAKE_VERSION.0-Linux-x86_64.sh --skip-license --prefix=/usr && \\\n    # Python\n    wget https://repo.continuum.io/miniconda/Miniconda3-4.5.12-Linux-x86_64.sh && \\\n    bash Miniconda3-4.5.12-Linux-x86_64.sh -b -p /opt/python && rm -rf /var/lib/apt/lists/*;\n\nENV PATH=/opt/python/bin:$PATH\n\nENV GOSU_VERSION 1.10\n\n# Install Python packages\nRUN \\\n    pip install --no-cache-dir pyyaml cpplint pylint astroid sphinx numpy scipy pandas matplotlib sh recommonmark guzzle_sphinx_theme mock \\\n                breathe matplotlib graphviz pytest scikit-learn wheel kubernetes urllib3 && \\\n    pip install --no-cache-dir https://h2o-release.s3.amazonaws.com/datatable/stable/datatable-0.7.0/datatable-0.7.0-cp37-cp37m-linux_x86_64.whl && \\\n    conda install dask\n\n# Install lightweight sudo (not bound to TTY)\nRUN set -ex; \\\n    wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64\" && \\\n    chmod +x /usr/local/bin/gosu && \\\n    gosu nobody true\n\n# Default entry-point to use if running locally\n# It will preserve attributes of created files\nCOPY entrypoint.sh /scripts/\n\nWORKDIR /workspace\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n"
}