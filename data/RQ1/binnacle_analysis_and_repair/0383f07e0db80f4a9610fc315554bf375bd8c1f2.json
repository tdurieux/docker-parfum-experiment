{
  "startTime": 1674249148248,
  "endTime": 1674249148551,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.5.2\n\n# Install Java 8 (in order to run the Permission Checker)\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections && \\\n    echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee /etc/apt/sources.list.d/webupd8team-java.list && \\\n    echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list && \\\n    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886 && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends oracle-java8-installer -y && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm -rf /var/cache/oracle-jdk8-installer && \\\n    apt-get clean\n\n# Install Nginx + UWSGI + 7z\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install \\\n    nginx \\\n    supervisor \\\n    uwsgi \\\n    p7zip-full && rm -rf /var/lib/apt/lists/*;\n\n# Define JAVA_HOME environment variable\nENV JAVA_HOME /usr/lib/jvm/java-8-oracle\n\n# Copy SSL certificates (only when enabling SSL on the server)\n# COPY riskindroid.pem /etc/ssl/\n\n# Setup Nginx\nRUN rm /etc/nginx/sites-enabled/default\nCOPY config/flask.conf /etc/nginx/sites-available/\nRUN ln -s /etc/nginx/sites-available/flask.conf /etc/nginx/sites-enabled/flask.conf\nCOPY config/uwsgi.ini /var/www/app/\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\n\n# Setup Supervisor\nRUN mkdir -p /var/log/supervisor\nCOPY config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# Copy requirements and install\nCOPY requirements.txt /var/www/app\nRUN pip3 install --no-cache-dir -r /var/www/app/requirements.txt\n\n# Copy application\nCOPY ./app /var/www/app\n\n# Extract database\nRUN 7z x /var/www/app/database/permission_db.7z -o/var/www/app/database/ -y\n\nCMD [\"/usr/bin/supervisord\"]\n"
}