{
  "startTime": 1674234849766,
  "endTime": 1674234850117,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 11,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.1-cli-alpine\n\nMAINTAINER Simon Forsman <simon@urb-it.com>\n\nENV RABBITMQ_VERSION v0.8.0\nENV PHP_AMQP_VERSION v1.9.3\nENV PHP_REDIS_VERSION 3.1.4\nENV PHP_ZEROMQ_VERSION master\nENV PHP_MONGO_VERSION 1.2.5\n\n# persistent / runtime deps\nENV PHPIZE_DEPS \\\n    autoconf \\\n    cmake \\\n    file \\\n    g++ \\\n    gcc \\\n    libc-dev \\\n    pcre-dev \\\n    make \\\n    git \\\n    pkgconf \\\n    re2c\n\nRUN apk add --no-cache --virtual .persistent-deps \\\n    # for intl extension\n    icu-dev \\\n    # for mcrypt extension\n    libmcrypt-dev \\\n    # for mongodb\n    libssl1.0 \\\n    # for zero mq\n    libsodium-dev \\\n    # for postgres\n    postgresql-dev \\\n    # for soap\n    libxml2-dev \\\n    zeromq\n\nRUN set -xe \\\n    && apk add --no-cache --virtual .build-deps \\\n        $PHPIZE_DEPS \\\n        openssl-dev \\\n        zeromq-dev \\\n    && docker-php-ext-configure bcmath --enable-bcmath \\\n    && docker-php-ext-configure intl --enable-intl \\\n    && docker-php-ext-configure pcntl --enable-pcntl \\\n    && docker-php-ext-configure pdo_mysql --with-pdo-mysql \\\n    && docker-php-ext-configure pdo_pgsql --with-pgsql \\\n    && docker-php-ext-configure mbstring --enable-mbstring \\\n    && docker-php-ext-configure soap --enable-soap \\\n    && docker-php-ext-install \\\n        bcmath \\\n        intl \\\n        mcrypt \\\n        pcntl \\\n        pdo_mysql \\\n        pdo_pgsql \\\n        mbstring \\\n        soap \\\n    && git clone --branch ${RABBITMQ_VERSION} https://github.com/alanxz/rabbitmq-c.git /tmp/rabbitmq \\\n        && cd /tmp/rabbitmq \\\n        && mkdir build && cd build \\\n        && cmake .. \\\n        && cmake --build . --target install \\\n        # workaround for linking issue\n        && cp -r /usr/local/lib64/* /usr/lib/ \\\n    && git clone --branch ${PHP_AMQP_VERSION} https://github.com/pdezwart/php-amqp.git /tmp/php-amqp \\\n        && cd /tmp/php-amqp \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        && make \\\n        && make install \\\n        && make test \\\n    && git clone --branch ${PHP_REDIS_VERSION} https://github.com/phpredis/phpredis /tmp/phpredis \\\n        && cd /tmp/phpredis \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        && make \\\n        && make install \\\n        && make test \\\n    && git clone --branch ${PHP_ZEROMQ_VERSION} https://github.com/mkoppanen/php-zmq /tmp/php-zmq \\\n        && cd /tmp/php-zmq \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        && make \\\n        && make install \\\n        && make test \\\n    && git clone --branch ${PHP_MONGO_VERSION} https://github.com/mongodb/mongo-php-driver /tmp/php-mongo \\\n        && cd /tmp/php-mongo \\\n        && git submodule sync && git submodule update --init \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        && make \\\n        && make install \\\n        && make test \\\n    && apk del .build-deps \\\n    && rm -rf /tmp/* \\\n    && rm -rf /app \\\n    && mkdir /app\n\n# Copy configuration\nCOPY config/php-cli.ini /usr/local/etc/php/php.ini\nCOPY config/php7.ini /usr/local/etc/php/conf.d/\nCOPY config/amqp.ini /usr/local/etc/php/conf.d/\nCOPY config/zmq.ini /usr/local/etc/php/conf.d/\nCOPY config/redis.ini /usr/local/etc/php/conf.d/\nCOPY config/mongodb.ini /usr/local/etc/php/conf.d/\n\n# Install dependencies\nRUN apk --no-cache --update --repository http://dl-3.alpinelinux.org/alpine/edge/community/ add \\\n    git \\\n    curl \\\n    nodejs \\\n&& apk --no-cache del \\\n    wget\n\nWORKDIR /app\n\n# Install Composer & dependencies\nRUN curl -f -sSL https://getcomposer.org/installer | php \\\n&& mv composer.phar /usr/local/bin/composer \\\n&& chmod +x /usr/local/bin/composer \\\n&& composer global require \"hirak/prestissimo:^0.3\"\n\n# Set up the application directory\nVOLUME [\"/app\"]\n"
}