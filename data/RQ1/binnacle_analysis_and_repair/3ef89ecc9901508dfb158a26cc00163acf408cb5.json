{
  "startTime": 1674234092552,
  "endTime": 1674234092704,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 152
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:edge\nLABEL maintainer=\"dev@jpillora.com\"\n# prepare go env\nENV GOPATH /go\nENV NAME cloud-torrent\nENV PACKAGE github.com/jpillora/$NAME\nENV PACKAGE_DIR $GOPATH/src/$PACKAGE\nENV GOLANG_VERSION 1.9.1\nENV GOLANG_SRC_URL https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\nENV GOLANG_SRC_SHA256 a84afc9dc7d64fe0fa84d4d735e2ece23831a22117b50dafc75c1484f1cb550e\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\nENV CGO_ENABLED 0\n# in one step (to prevent creating superfluous layers):\n# 1. fetch and install temporary build programs,\n# 2. build cloud-torrent alpine binary\n# 3. remove build programs\nRUN set -ex \\\n\t&& apk update \\\n\t&& apk add --no-cache ca-certificates \\\n\t&& apk add --no-cache --virtual .build-deps \\\n\tbash \\\n\tgcc \\\n\tmusl-dev \\\n\topenssl \\\n\tgit \\\n\tgo \\\n\tcurl \\\n\t&& curl -f -s https://raw.githubusercontent.com/docker-library/golang/221ee92559f2963c1fe55646d3516f5b8f4c91a4/1.9/alpine3.6/no-pic.patch -o /no-pic.patch \\\n\t&& cat /no-pic.patch \\\n\t&& export GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \\\n\t&& wget -q \"$GOLANG_SRC_URL\" -O golang.tar.gz \\\n\t&& echo \"$GOLANG_SRC_SHA256  golang.tar.gz\" | sha256sum -c - \\\n\t&& tar -C /usr/local -xzf golang.tar.gz \\\n\t&& rm golang.tar.gz \\\n\t&& cd /usr/local/go/src \\\n\t&& patch -p2 -i /no-pic.patch \\\n\t&& ./make.bash \\\n\t&& mkdir -p $PACKAGE_DIR \\\n\t&& git clone https://$PACKAGE.git $PACKAGE_DIR \\\n\t&& cd $PACKAGE_DIR \\\n\t&& go build -ldflags \"-X main.VERSION=$(git describe --abbrev=0 --tags)\" -o /usr/local/bin/$NAME \\\n\t&& apk del .build-deps \\\n\t&& rm -rf /no-pic.patch $GOPATH /usr/local/go\n#run!\nENTRYPOINT [\"cloud-torrent\"]\n"
}