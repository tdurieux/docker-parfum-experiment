{
  "startTime": 1674244742545,
  "endTime": 1674244742808,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 135
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 79
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 7,
        "columnEnd": 112
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# Never prompts the user for choices on installation/configuration of packages\nENV DEBIAN_FRONTEND noninteractive\nENV TERM linux\n\n# Airflow\nARG AIRFLOW_VERSION=1.7.1.3\nENV AIRFLOW_HOME /usr/local/airflow\n\n# Define en_US.\nENV LANGUAGE en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nENV LC_CTYPE en_US.UTF-8\nENV LC_MESSAGES en_US.UTF-8\nENV LC_ALL  en_US.UTF-8\n\nRUN set -ex \\\n    && buildDeps=' \\\n        python3-dev \\\n        libkrb5-dev \\\n        libsasl2-dev \\\n        libssl-dev \\\n        libffi-dev \\\n        build-essential \\\n        libblas-dev \\\n        liblapack-dev \\\n        libpq-dev \\\n    ' \\\n    && apt-get update -yqq \\\n    && apt-get install -yqq --no-install-recommends \\\n        $buildDeps \\\n        python3 \\\n        python3-pip \\\n        netbase \\\n        apt-utils \\\n        curl \\\n        netcat \\\n        locales \\\n        git \\\n        wget \\\n        alien \\\n        libgdal-dev \\\n        libgeos-dev \\\n        binutils \\\n        libproj-dev \\\n        gdal-bin \\\n        libspatialindex-dev \\\n        libaio1 \\\n        freetds-dev \\\n    && sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen \\\n    && locale-gen \\\n    && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 \\\n    && useradd -ms /bin/bash -d ${AIRFLOW_HOME} airflow \\\n    && python3 -m pip install -U pip \\\n    && pip3 install --no-cache-dir -U setuptools \\\n    && pip3 install --no-cache-dir Cython \\\n    && pip3 install --no-cache-dir pytz==2015.7 \\\n    && pip3 install --no-cache-dir pyOpenSSL \\\n    && pip3 install --no-cache-dir ndg-httpsclient \\\n    && pip3 install --no-cache-dir pyasn1 \\\n    && pip3 install --no-cache-dir click \\\n    && pip3 install --no-cache-dir git+https://github.com/CityOfPhiladelphia/incubator-airflow.git#egg=airflow[async,crypto,password,postgres,hive,s3] \\\n    && pip3 install --no-cache-dir git+https://github.com/CityOfPhiladelphia/eastern-state.git \\\n    && pip3 install --no-cache-dir git+https://github.com/CityOfPhiladelphia/s3-sftp-sync.git \\\n    && pip3 install --no-cache-dir git+https://github.com/CityOfPhiladelphia/jsontableschema-sql-py.git#egg=jsontableschema_sql \\\n    && pip3 install --no-cache-dir git+https://github.com/CityOfPhiladelphia/the-el.git#egg=the_el \\\n    && apt-get remove --purge -yqq $buildDeps \\\n    && apt-get clean \\\n    && rm -rf \\\n        /var/lib/apt/lists/* \\\n        /tmp/* \\\n        /var/tmp/* \\\n        /usr/share/man \\\n        /usr/share/doc \\\n        /usr/share/doc-base\n\n# instant sql-plus instant oracle client\nRUN set -ex \\\n    && wget https://www.dropbox.com/s/ubgeht3m59bhfh1/oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm?dl=0 \\\n    && mv oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm?dl=0 oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm \\\n    && alien -i oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm \\\n    && rm oracle-instantclient12.1-sqlplus-12.1.0.2.0-1.x86_64.rpm\n\n# instant basic-lite instant oracle client\nRUN set -ex \\\n    && wget https://www.dropbox.com/s/1yzl0fdnaiw5yqp/oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm?dl=0 \\\n    && mv oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm?dl=0 oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm \\\n    && alien -i oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm \\\n    && rm oracle-instantclient12.1-basiclite-12.1.0.2.0-1.x86_64.rpm\n\n# instant oracle-sdk\nRUN set -ex \\\n    && wget https://www.dropbox.com/s/uic5vzc9yobttct/oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm?dl=0 \\\n    && mv oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm?dl=0 oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm \\\n    && alien -i oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm \\\n    && rm oracle-instantclient12.1-devel-12.1.0.2.0-1.x86_64.rpm\n\nCOPY scripts/entrypoint.sh /entrypoint.sh\nCOPY requirements.txt /requirements.txt\n\nCOPY config/airflow.cfg ${AIRFLOW_HOME}/airflow.cfg\nCOPY scripts/users.py ${AIRFLOW_HOME}/users.py\nCOPY dags ${AIRFLOW_HOME}/dags\nCOPY plugins ${AIRFLOW_HOME}/plugins\n\nRUN chown -R airflow: ${AIRFLOW_HOME}\n\nEXPOSE 8080\n\nUSER airflow\nWORKDIR ${AIRFLOW_HOME}\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}