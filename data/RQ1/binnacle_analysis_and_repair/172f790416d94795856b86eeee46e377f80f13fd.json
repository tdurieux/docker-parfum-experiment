{
  "startTime": 1674234059840,
  "endTime": 1674234060091,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 240
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\nRUN yum install -y --nogpgcheck tar centos-release-scl centos-release-scl-rh epel-release && rm -rf /var/cache/yum\nRUN yum install -y --nogpgcheck scl-utils devtoolset-7 autoconf-archive cmake3 libcurl libcurl-devel openssl openssl-devel libuuid-devel hiredis hiredis-devel zlib zlib-devel libmemcached libmemcached-devel unixODBC* tar gzip wget nmap-ncat && rm -rf /var/cache/yum\nRUN scl enable devtoolset-7 bash\nRUN mv /usr/bin/cc /usr/bin/cc_old\nRUN ln -s /opt/rh/devtoolset-7/root/usr/bin/gcc /usr/bin/cc\nRUN ln -s /opt/rh/devtoolset-7/root/usr/bin/g++ /usr/bin/c++\nRUN ln -s /usr/bin/cmake3 /usr/bin/cmake\n\n#Download and install mongo c driver\nWORKDIR /tmp\nRUN wget -q https://github.com/mongodb/mongo-c-driver/releases/download/1.4.0/mongo-c-driver-1.4.0.tar.gz\nRUN tar xf mongo-c-driver-1.4.0.tar.gz && rm mongo-c-driver-1.4.0.tar.gz\nWORKDIR /tmp/mongo-c-driver-1.4.0\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local --libdir=/usr/local --disable-automatic-init-and-cleanup\nRUN make && make install\nWORKDIR /tmp\nRUN rm -rf /tmp/mongo-c-driver-1.4.0\n\n#Install libcuckoo headers\nWORKDIR /tmp\nRUN wget -q https://github.com/efficient/libcuckoo/archive/master.zip\nRUN unzip master.zip\nRUN rm -f master.zip\nWORKDIR /tmp/libcuckoo-master\nRUN cmake -DCMAKE_INSTALL_PREFIX=/usr/local/ .\nRUN make install\nWORKDIR /tmp\nRUN rm -rf /tmp/libcuckoo-master\n\n#Install ffead-cpp\nWORKDIR /tmp\nRUN wget -q https://github.com/sumeetchhetri/ffead-cpp/archive/master.zip\nRUN unzip master.zip\nRUN rm -f master.zip\nRUN mv ffead-cpp-master ffead-cpp-src\nWORKDIR /tmp/ffead-cpp-src\nRUN cmake .\nRUN make install -j4\nRUN mv /tmp/ffead-cpp-src/ffead-cpp-3.0-bin /tmp/\nWORKDIR /tmp\nRUN rm -rf /tmp/ffead-cpp-src\n\nWORKDIR /opt\n\nCOPY *.sh  ./\n\nRUN chmod +x install_ffead-cpp-3.0.sh\nRUN ./install_ffead-cpp-3.0.sh\n\nWORKDIR /opt/ffead-cpp-3.0\n\nRUN chmod +x server.sh\nCMD ./server.sh\n"
}