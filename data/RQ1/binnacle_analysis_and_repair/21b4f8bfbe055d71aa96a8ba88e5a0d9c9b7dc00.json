{
  "startTime": 1674235932761,
  "endTime": 1674235932823,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# jdownloader-2 Dockerfile\n#\n# https://github.com/jlesage/docker-jdownloader-2\n#\n# ##############################################################################\n# 7-Zip-JBinding Workaround\n#\n# JDownloader works well with the native openjdk8-jre package.  There is one\n# exception: the auto archive extractor.  This feature uses 7-Zip-JBinding,\n# which provides a platform-specific library (.so).  The one for Linux x86_64\n# has been compiled against glibc and this is not loading correctly on Alpine.\n#\n# To work around this issue (until we get a proper support of 7-Zip-JBinding on\n# Alpine), we need to:\n#     - Get glibc, by using the glibc version of the baseimage.\n#     - Use Oracle JRE, to have a glibc-based Java VM.\n# ##############################################################################\n\n# Pull base image.\n# NOTE: glibc version of the image is needed for the 7-Zip-JBinding workaround.\nFROM jlesage/baseimage-gui:alpine-3.9-glibc-v3.5.2\n\n# Define software versions.\nARG JAVAJRE_VERSION=8.212.04.2\n\n# Define software download URLs.\nARG JDOWNLOADER_URL=http://installer.jdownloader.org/JDownloader.jar\nARG JAVAJRE_URL=https://d3pxv6yz143wms.cloudfront.net/${JAVAJRE_VERSION}/amazon-corretto-${JAVAJRE_VERSION}-linux-x64.tar.gz\n\n# Define working directory.\nWORKDIR /tmp\n\n# Download JDownloader 2.\nRUN \\\n    mkdir -p /defaults && \\\n    wget ${JDOWNLOADER_URL} -O /defaults/JDownloader.jar\n\n# Download and install Oracle JRE.\n# NOTE: This is needed only for the 7-Zip-JBinding workaround.\nRUN \\\n    add-pkg --virtual build-dependencies curl && \\\n    mkdir /opt/jre && \\\n    curl -f -# -L ${JAVAJRE_URL} | tar -xz --strip 2 -C /opt/jre amazon-corretto-${JAVAJRE_VERSION}-linux-x64/jre && \\\n    del-pkg build-dependencies\n\n# Install dependencies.\nRUN \\\n    add-pkg \\\n        # For the 7-Zip-JBinding workaround, Oracle JRE is needed instead of\n        # the Alpine Linux's openjdk native package.\n        # The libstdc++ package is also needed as part of the 7-Zip-JBinding\n        # workaround.\n        #openjdk8-jre \\\n        libstdc++ \\\n        ttf-dejavu \\\n        # For ffmpeg and ffprobe tools.\n        ffmpeg \\\n        # For rtmpdump tool.\n        rtmpdump\n\n# Maximize only the main/initial window.\nRUN \\\n    sed-patch 's/<application type=\"normal\">/<application type=\"normal\" title=\"JDownloader 2\">/' \\\n        /etc/xdg/openbox/rc.xml\n\n# Generate and install favicons.\nRUN \\\n    APP_ICON_URL=https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/jdownloader-2-icon.png && \\\n    install_app_icon.sh \"$APP_ICON_URL\"\n\n# Add files.\nCOPY rootfs/ /\n\n# Set environment variables.\nENV APP_NAME=\"JDownloader 2\" \\\n    S6_KILL_GRACETIME=8000\n\n# Define mountable directories.\nVOLUME [\"/config\"]\nVOLUME [\"/output\"]\n\n# Expose ports.\n#   - 3129: For MyJDownloader in Direct Connection mode.\nEXPOSE 3129\n\n# Metadata.\nLABEL \\\n      org.label-schema.name=\"jdownloader-2\" \\\n      org.label-schema.description=\"Docker container for JDownloader 2\" \\\n      org.label-schema.version=\"unknown\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-jdownloader-2\" \\\n      org.label-schema.schema-version=\"1.0\"\n"
}