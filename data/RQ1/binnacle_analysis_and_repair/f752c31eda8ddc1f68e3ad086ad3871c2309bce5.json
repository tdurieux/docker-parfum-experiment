{
  "startTime": 1674234267087,
  "endTime": 1674234268760,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 102,
        "lineEnd": 121,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 153,
        "lineEnd": 163,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 222,
        "lineEnd": 222,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 237,
        "lineEnd": 237,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 245,
        "lineEnd": 245,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 264,
        "lineEnd": 264,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 273,
        "lineEnd": 289,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 211,
        "lineEnd": 211,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 220,
        "lineEnd": 220,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 243,
        "lineEnd": 243,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 27,
        "columnStart": 25,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 20,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 231,
        "lineEnd": 231,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 232,
        "lineEnd": 232,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 20,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 27,
        "columnStart": 25,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 20,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 231,
        "lineEnd": 231,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 232,
        "lineEnd": 232,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 20,
        "columnEnd": 67
      }
    }
  ],
  "repairedDockerfile": "FROM buildpack-deps:jessie\n\nRUN sed -i 's/archive.ubuntu.com/mirror.aarnet.edu.au\\/pub\\/ubuntu\\/archive/g' /etc/apt/sources.list\n\nRUN rm -rf /var/lib/apt/lists/*\nRUN apt-get -y update && apt-get install --no-install-recommends -y libmicrohttpd-dev \\\n    libjansson-dev \\\n    libnice-dev \\\n    libssl-dev \\\n    libsrtp-dev \\\n    libsofia-sip-ua-dev \\\n    libglib2.0-dev \\\n    libopus-dev \\\n    libogg-dev \\\n    libini-config-dev \\\n    libcollection-dev \\\n    libconfig-dev \\\n    pkg-config \\\n    gengetopt \\\n    libtool \\\n    automake \\\n    build-essential \\\n    subversion \\\n    git \\\n    cmake \\\n    unzip \\\n    zip \\\n    lsof wget vim sudo rsync cron mysql-client openssh-server supervisor locate && rm -rf /var/lib/apt/lists/*;\n\n\n\n# FFmpeg build section\nRUN mkdir ~/ffmpeg_sources\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install autoconf automake build-essential libass-dev libfreetype6-dev \\\n    libsdl1.2-dev libtheora-dev libtool libva-dev libvdpau-dev libvorbis-dev libxcb1-dev libxcb-shm0-dev \\\n    libxcb-xfixes0-dev pkg-config texinfo zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN YASM=\"1.3.0\" && cd ~/ffmpeg_sources && \\\n    wget https://www.tortall.net/projects/yasm/releases/yasm-$YASM.tar.gz && \\\n    tar xzvf yasm-$YASM.tar.gz && \\\n    cd yasm-$YASM && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$HOME/ffmpeg_build\" --bindir=\"$HOME/bin\" && \\\n    make && \\\n    make install && \\\n    make distclean && rm yasm-$YASM.tar.gz\n\nRUN VPX=\"1.5.0\" && cd ~/ffmpeg_sources && \\\n    wget https://storage.googleapis.com/downloads.webmproject.org/releases/webm/libvpx-1.5.0.tar.bz2 && \\\n    tar xjvf libvpx-$VPX.tar.bz2 && \\\n    cd libvpx-$VPX && \\\n    PATH=\"$HOME/bin:$PATH\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$HOME/ffmpeg_build\" --disable-examples --disable-unit-tests && \\\n    PATH=\"$HOME/bin:$PATH\" make && \\\n    make install && \\\n    make clean && rm libvpx-$VPX.tar.bz2\n\n\nRUN OPUS=\"1.3\" && cd ~/ffmpeg_sources && \\\n    wget https://downloads.xiph.org/releases/opus/opus-$OPUS.tar.gz && \\\n    tar xzvf opus-$OPUS.tar.gz && \\\n    cd opus-$OPUS && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --help && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$HOME/ffmpeg_build\" && \\\n    make && \\\n    make install && \\\n    make clean && rm opus-$OPUS.tar.gz\n\n\nRUN LAME=\"3.100\" && apt-get install --no-install-recommends -y nasm && cd ~/ffmpeg_sources && \\\n    wget https://downloads.sourceforge.net/project/lame/lame/$LAME/lame-$LAME.tar.gz && \\\n    tar xzvf lame-$LAME.tar.gz && \\\n    cd lame-$LAME && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$HOME/ffmpeg_build\" --enable-nasm --disable-shared && \\\n    make && \\\n    make install && rm lame-$LAME.tar.gz && rm -rf /var/lib/apt/lists/*;\n\nRUN X264=\"20181001-2245-stable\" && cd ~/ffmpeg_sources && \\\n    wget https://download.videolan.org/pub/x264/snapshots/x264-snapshot-$X264.tar.bz2 && \\\n    tar xjvf x264-snapshot-$X264.tar.bz2 && \\\n    cd x264-snapshot-$X264 && \\\n    PATH=\"$HOME/bin:$PATH\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$HOME/ffmpeg_build\" --bindir=\"$HOME/bin\" --enable-static --disable-opencl --disable-asm && \\\n    PATH=\"$HOME/bin:$PATH\" make && \\\n    make install && \\\n    make distclean && rm x264-snapshot-$X264.tar.bz2\n\nRUN FDK_AAC=\"0.1.4\" && cd ~/ffmpeg_sources && \\\n    wget -O fdk-aac.tar.gz https://github.com/mstorsjo/fdk-aac/archive/v$FDK_AAC.tar.gz && \\\n    tar xzvf fdk-aac.tar.gz && \\\n    cd fdk-aac-$FDK_AAC && \\\n    autoreconf -fiv && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$HOME/ffmpeg_build\" --disable-shared && \\\n    make && \\\n    make install && \\\n    make distclean && rm fdk-aac.tar.gz\n\nRUN FFMPEG_VER=\"n4.0.2\" && cd ~/ffmpeg_sources && \\\n    wget https://github.com/FFmpeg/FFmpeg/archive/$FFMPEG_VER.zip && \\\n    unzip $FFMPEG_VER.zip\n\nRUN FFMPEG_VER=\"n4.0.2\" && cd ~/ffmpeg_sources && \\\n    cd FFmpeg-$FFMPEG_VER && \\\n    PATH=\"$HOME/bin:$PATH\" PKG_CONFIG_PATH=\"$HOME/ffmpeg_build/lib/pkgconfig\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=\"$HOME/ffmpeg_build\" \\\n    --pkg-config-flags=\"--static\" \\\n    --extra-cflags=\"-I$HOME/ffmpeg_build/include\" \\\n    --extra-ldflags=\"-L$HOME/ffmpeg_build/lib\" \\\n    --bindir=\"$HOME/bin\" \\\n    --enable-gpl \\\n    --enable-libass \\\n    --enable-libfdk-aac \\\n    --enable-libfreetype \\\n    --enable-libmp3lame \\\n    --enable-libopus \\\n    --enable-libtheora \\\n    --enable-libvorbis \\\n    --enable-libvpx \\\n    --enable-libx264 \\\n    --enable-nonfree \\\n    --enable-libxcb \\\n    --enable-libpulse \\\n    --enable-alsa && \\\n    PATH=\"$HOME/bin:$PATH\" make && \\\n    make install && \\\n    make distclean && \\\n    hash -r && \\\n    mv ~/bin/ffmpeg /usr/local/bin/\n\n\n\n\n# nginx-rtmp with openresty\nRUN ZLIB=\"zlib-1.2.11\" && vNGRTMP=\"v1.1.11\" && PCRE=\"8.41\" && nginx_build=/root/nginx && mkdir $nginx_build && \\\n    cd $nginx_build && \\\n    wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-$PCRE.tar.gz && \\\n    tar -zxf pcre-$PCRE.tar.gz && \\\n    cd pcre-$PCRE && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n    cd $nginx_build && \\\n    wget https://zlib.net/$ZLIB.tar.gz && \\\n    tar -zxf $ZLIB.tar.gz && \\\n    cd $ZLIB && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n    cd $nginx_build && \\\n    wget https://github.com/arut/nginx-rtmp-module/archive/$vNGRTMP.tar.gz && \\\n    tar zxf $vNGRTMP.tar.gz && mv nginx-rtmp-module-* nginx-rtmp-module && rm pcre-$PCRE.tar.gz\n\n\nRUN OPENRESTY=\"1.13.6.1\" && ZLIB=\"zlib-1.2.11\" && PCRE=\"pcre-8.41\" &&  openresty_build=/root/openresty && mkdir $openresty_build && \\\n    wget https://openresty.org/download/openresty-$OPENRESTY.tar.gz && \\\n    tar zxf openresty-$OPENRESTY.tar.gz && \\\n    cd openresty-$OPENRESTY && \\\n    nginx_build=/root/nginx && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --sbin-path=/usr/local/nginx/nginx \\\n    --conf-path=/usr/local/nginx/nginx.conf \\\n    --pid-path=/usr/local/nginx/nginx.pid \\\n    --with-pcre-jit \\\n    --with-ipv6 \\\n    --with-pcre=$nginx_build/$PCRE \\\n    --with-zlib=$nginx_build/$ZLIB \\\n    --with-http_ssl_module \\\n    --with-stream \\\n    --with-mail=dynamic \\\n    --add-module=$nginx_build/nginx-rtmp-module && \\\n    make && make install && mv /usr/local/nginx/nginx /usr/local/bin && rm openresty-$OPENRESTY.tar.gz\n\n\n\n\n# Boringssl build section\n# If you want to use the openssl instead of boringssl\n# RUN apt-get update -y && apt-get install -y libssl-dev\nRUN apt-get -y update && apt-get install -y --no-install-recommends \\\n        g++ \\\n        gcc \\\n        libc6-dev \\\n        make \\\n        pkg-config \\\n    && rm -rf /var/lib/apt/lists/*\nENV GOLANG_VERSION 1.7.5\nENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz\nENV GOLANG_DOWNLOAD_SHA256 2e4dd6c44f0693bef4e7b46cc701513d74c3cc44f2419bf519d7868b12931ac3\nRUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \\\n    && echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - \\\n    && tar -C /usr/local -xzf golang.tar.gz \\\n    && rm golang.tar.gz\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\n\n\n\n# https://boringssl.googlesource.com/boringssl/+/chromium-stable\nRUN git clone https://boringssl.googlesource.com/boringssl && \\\n    cd boringssl && \\\n    git reset --hard c7db3232c397aa3feb1d474d63a1c4dd674b6349 && \\\n    sed -i s/\" -Werror\"//g CMakeLists.txt && \\\n    mkdir -p build  && \\\n    cd build  && \\\n    cmake -DCMAKE_CXX_FLAGS=\"-lrt\" ..  && \\\n    make  && \\\n    cd ..  && \\\n    sudo mkdir -p /opt/boringssl  && \\\n    sudo cp -R include /opt/boringssl/  && \\\n    sudo mkdir -p /opt/boringssl/lib  && \\\n    sudo cp build/ssl/libssl.a /opt/boringssl/lib/  && \\\n    sudo cp build/crypto/libcrypto.a /opt/boringssl/lib/\n\n\nRUN LIBWEBSOCKET=\"3.1.0\" && wget https://github.com/warmcat/libwebsockets/archive/v$LIBWEBSOCKET.tar.gz && \\\n    tar xzvf v$LIBWEBSOCKET.tar.gz && \\\n    cd libwebsockets-$LIBWEBSOCKET && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_C_FLAGS=\"-fpic\" -DLWS_MAX_SMP=1 -DLWS_IPV6=\"ON\" .. && \\\n    make && make install && rm v$LIBWEBSOCKET.tar.gz\n\n\nRUN SRTP=\"2.2.0\" && apt-get remove -y libsrtp0-dev && wget https://github.com/cisco/libsrtp/archive/v$SRTP.tar.gz && \\\n    tar xfv v$SRTP.tar.gz && \\\n    cd libsrtp-$SRTP && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --enable-openssl && \\\n    make shared_library && sudo make install && rm v$SRTP.tar.gz\n\n\n\n# 8 March, 2019 1 commit 67807a17ce983a860804d7732aaf7d2fb56150ba\nRUN apt-get remove -y libnice-dev libnice10 && \\\n    echo \"deb http://archive.debian.org/debian jessie-backports main\" >> /etc/apt/sources.list && \\\n    apt-get -o Acquire::Check-Valid-Until=false update && \\\n    apt-get install --no-install-recommends -y gtk-doc-tools libgnutls28-dev -t jessie-backports && \\\n    apt-get install --no-install-recommends -y libglib2.0-0 -t jessie-backports && \\\n    git clone https://gitlab.freedesktop.org/libnice/libnice.git && \\\n    cd libnice && \\\n    git checkout 67807a17ce983a860804d7732aaf7d2fb56150ba && \\\n    bash autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && \\\n    make && \\\n    make install && rm -rf /var/lib/apt/lists/*;\n\n\nRUN COTURN=\"4.5.0.8\" && wget https://github.com/coturn/coturn/archive/$COTURN.tar.gz && \\\n    tar xzvf $COTURN.tar.gz && \\\n    cd coturn-$COTURN && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && make install && rm $COTURN.tar.gz\n\n\n# RUN GDB=\"8.0\" && wget ftp://sourceware.org/pub/gdb/releases/gdb-$GDB.tar.gz && \\\n#     tar xzvf gdb-$GDB.tar.gz && \\\n#     cd gdb-$GDB && \\\n#     ./configure && \\\n#     make && \\\n#     make install\n\n\n# ./configure CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" LDFLAGS=\"-lasan\"\n\n\n# datachannel build\nRUN cd / && git clone https://github.com/sctplab/usrsctp.git && cd /usrsctp && \\\n    git checkout origin/master && git reset --hard 1c9c82fbe3582ed7c474ba4326e5929d12584005 && \\\n    ./bootstrap && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && make install\n\n\n\n# tag v0.6.2 https://github.com/meetecho/janus-gateway/commit/ddbf37fef43ade61d73173c7661a2449c13582d4\nRUN cd / && git clone https://github.com/meetecho/janus-gateway.git && cd /janus-gateway && \\\n    sh autogen.sh &&  \\\n    git checkout origin/master && git reset --hard ddbf37fef43ade61d73173c7661a2449c13582d4 && \\\n    PKG_CONFIG_PATH=\"$HOME/ffmpeg_build/lib/pkgconfig\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --enable-post-processing \\\n    --enable-boringssl \\\n    --enable-data-channels \\\n    --disable-rabbitmq \\\n    --disable-mqtt \\\n    --disable-unix-sockets \\\n    --enable-dtls-settimeout \\\n    --enable-plugin-echotest \\\n    --enable-plugin-recordplay \\\n    --enable-plugin-sip \\\n    --enable-plugin-videocall \\\n    --enable-plugin-voicemail \\\n    --enable-plugin-textroom \\\n    --enable-plugin-audiobridge \\\n    --enable-plugin-nosip \\\n    --enable-all-handlers && \\\n    make && make install && make configs && ldconfig\n\nCOPY nginx.conf /usr/local/nginx/nginx.conf\n\nCMD nginx && janus\n\n# RUN apt-get -y install iperf iperf3\n# RUN git clone https://github.com/HewlettPackard/netperf.git && \\\n#     cd netperf && \\\n#     bash autogen.sh && \\\n#     ./configure && \\\n#     make && \\\n#     make install\n"
}