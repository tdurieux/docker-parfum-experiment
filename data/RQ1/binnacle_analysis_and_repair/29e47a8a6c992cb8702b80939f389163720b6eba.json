{
  "startTime": 1674243055704,
  "endTime": 1674243055893,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 31,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 36,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:6\n\nLABEL maintainer=\"conda-forge <conda-forge@googlegroups.com>\"\n\n# Set an encoding to make things work smoothly.\nENV LANG en_US.UTF-8\n\n# Add a timestamp for the build. Also, bust the cache.\nADD http://worldclockapi.com/api/json/utc/now /opt/docker/etc/timestamp\n\n# Resolves a nasty NOKEY warning that appears when using yum.\nRUN rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6\n\n# Install basic requirements.\nRUN yum update -y && \\\n    yum install -y \\\n                   bzip2 \\\n                   make \\\n                   patch \\\n                   sudo \\\n                   tar \\\n                   which \\\n                   libXext-devel \\\n                   libXrender-devel \\\n                   libSM-devel \\\n                   libX11-devel \\\n                   mesa-libGL-devel && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# Install devtoolset 2.\nRUN yum update -y && \\\n    yum install -y \\\n                   centos-release-scl \\\n                   yum-utils && \\\n    yum-config-manager --add-repo http://people.centos.org/tru/devtools-2/devtools-2.repo && \\\n    yum update -y && \\\n    yum install -y \\\n                   devtoolset-2-binutils \\\n                   devtoolset-2-gcc \\\n                   devtoolset-2-gcc-gfortran \\\n                   devtoolset-2-gcc-c++ && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# Run common commands\nCOPY scripts/run_commands /opt/docker/bin/run_commands\nRUN /opt/docker/bin/run_commands\n\n# Add a file for users to source to activate the `conda`\n# environment `root` and the devtoolset compiler. Also\n# add a file that wraps that for use with the `ENTRYPOINT`.\nCOPY linux-anvil/entrypoint_source /opt/docker/bin/entrypoint_source\nCOPY scripts/entrypoint /opt/docker/bin/entrypoint\n\n# Ensure that all containers start with tini and the user selected process.\n# Activate the `conda` environment `root` and the devtoolset compiler.\n# Provide a default command (`bash`), which will start if the user doesn't specify one.\nENTRYPOINT [ \"/opt/conda/bin/tini\", \"--\", \"/opt/docker/bin/entrypoint\" ]\nCMD [ \"/bin/bash\" ]\n"
}