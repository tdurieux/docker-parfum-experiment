{
  "startTime": 1674244229736,
  "endTime": 1674244229978,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 5,
        "columnEnd": 38
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.4.6@sha256:3a31984805c5ad3b54baeb93d2c01c46845f681b712394b02d2e860cb5d5946b\nMAINTAINER security@coinbase.com\n\nRUN apt-get update && apt-get upgrade -y --no-install-recommends && apt-get install -y --no-install-recommends \\\n    g++ \\\n    gcc \\\n    libc6-dev \\\n    make \\\n    pkg-config \\\n    curl \\\n    git  \\\n    python \\\n    python-pip \\\n    python-setuptools \\\n    python-dev \\\n    libpython-dev \\\n    libicu-dev \\\n    cmake \\\n    pkg-config \\\n    wget \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Required so that Brakeman doesn't run into encoding\n# issues when it parses non-ASCII characters.\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\n### JS + NODE\n# Using node version 8.12.0 since it's the latest LTS.\nENV NODE_VERSION 8.12.0\nENV NPM_VERSION 6.4.1\nENV YARN_VERSION 1.12.3\nENV NPM_CONFIG_LOGLEVEL info\n\n# Downloaded from https://nodejs.org/en/download/\nCOPY node_SHASUMS256.txt SHASUMS256.txt\n\nRUN curl -f -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n  && grep \" node-v$NODE_VERSION-linux-x64.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n  && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt \\\n  && npm install -g npm@$NPM_VERSION \\\n  && npm install -g yarn@$YARN_VERSION && npm cache clean --force;\n\n### GO - required for sift and gosec\nENV GO111MODULE on\nENV GOLANG_VERSION 1.12.4\nENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz\nENV GOLANG_DOWNLOAD_SHA256 d7d1f1f88ddfe55840712dc1747f37a790cbcaa448f6c9cf51bbe10aa65442f5\nENV SIFT_VERSION v0.9.0\nENV GOSEC_VERSION 2.0.0\n\nRUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \\\n  && echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - \\\n  && tar -C /usr/local -xzf golang.tar.gz \\\n  && rm golang.tar.gz \\\n  && mv /usr/local/go/bin/go /usr/bin/\n\nRUN go get github.com/svent/sift@$SIFT_VERSION \\\n  && mv /root/go/bin/sift /usr/bin/\n\nRUN go get github.com/securego/gosec/cmd/gosec@$GOSEC_VERSION \\\n  && mv /root/go/bin/gosec /usr/bin/\n\n### Salus\n\n# make the folder for the repo (volumed in)\nRUN mkdir -p /home/repo\nWORKDIR /home\n\n# make sure we're on latest bundler\nRUN gem install bundler\n\n# ruby gems\nCOPY Gemfile Gemfile.lock /home/\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system && rm -rf /root/.gem;\nRUN bundle install --deployment --without development:test\n\n# node modules\nCOPY package.json yarn.lock /home/\nRUN yarn\n\n# prime the bundler-audit CVE DB\nRUN bundle exec bundle-audit update\n\n# copy salus code\nCOPY bin /home/bin\nCOPY lib /home/lib\nCOPY salus-default.yaml /home/\n\n# run the salus scan when this docker container is run\nENTRYPOINT [\"bundle\", \"exec\", \"./bin/salus\", \"scan\"]\n"
}