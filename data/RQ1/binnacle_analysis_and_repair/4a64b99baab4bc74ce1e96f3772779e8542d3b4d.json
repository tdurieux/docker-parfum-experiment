{
  "startTime": 1674240387993,
  "endTime": 1674240388477,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 91,
        "columnEnd": 127
      }
    },
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 136,
        "columnEnd": 151
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 116
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 88,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 20,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 62,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 62,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 65,
        "columnEnd": 114
      }
    }
  ],
  "repairedDockerfile": "FROM buildpack-deps:yakkety-curl\n\n# rpm is required for FPM to build rpm package\n# yasm is required to build p7zip\n# osslsigncode to sign windows on Linux\n\n# install modern multi-thread xz\n# ldconfig - see 4.6. liblzma.so (or similar) not found when running xz\n\n# python for node-gyp\n\nENV XZ_VERSION 5.2.2\n\n# we don't use our bundled 7za because it is better to build for specific platform - not generic\nENV USE_SYSTEM_7ZA true\nENV USE_SYSTEM_XORRISO true\n\nENV DEBUG_COLORS true\nENV FORCE_COLOR true\nENV DEBIAN_FRONTEND noninteractive\n\nRUN curl -f -L https://yarnpkg.com/latest.tar.gz | tar xvz && mv dist yarn && apt-get update -y && apt-get upgrade -y && \\\n  apt-get install --no-install-recommends -y xvfb git snapcraft qtbase5-dev xorriso bsdtar build-essential autoconf libssl-dev icnsutils libopenjp2-7 graphicsmagick gcc-multilib g++-multilib libgnome-keyring-dev lzip rpm yasm python libcurl3 && \\\n  curl -f -O http://mirrors.kernel.org/ubuntu/pool/universe/libi/libicns/libicns1_0.8.1-3.1_amd64.deb && dpkg --install libicns1_0.8.1-3.1_amd64.deb && unlink libicns1_0.8.1-3.1_amd64.deb && \\\n  wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" > /etc/apt/sources.list.d/google.list && \\\n  apt-get update && apt-get install --no-install-recommends -y google-chrome-stable && \\\n  apt-get clean && rm -rf /var/lib/apt/lists/* && \\\n  curl -f -L https://tukaani.org/xz/xz-$XZ_VERSION.tar.xz | tar -xJ && cd xz-$XZ_VERSION && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && cd .. && rm -rf xz-$XZ_VERSION && ldconfig && \\\n  mkdir -p /tmp/7z && curl -f -L https://downloads.sourceforge.net/project/p7zip/p7zip/16.02/p7zip_16.02_src_all.tar.bz2 | tar -xj -C /tmp/7z --strip-components 1 && cd /tmp/7z && cp makefile.linux_amd64_asm makefile.machine && make && make install && rm -rf /tmp/7z\n\nWORKDIR /project\n\n# fix error /usr/local/bundle/gems/fpm-1.5.0/lib/fpm/package/freebsd.rb:72:in `encode': \"\\xE2\" from ASCII-8BIT to UTF-8 (Encoding::UndefinedConversionError)\n# http://jaredmarkell.com/docker-and-locales/\n# http://askubuntu.com/a/601498\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nENV PATH \"/yarn/bin:$PATH\"\n\n\n#Node\nRUN curl -f -sL https://deb.nodesource.com/setup_7.x | bash - && apt-get install --no-install-recommends -y nodejs && curl -f -L https://npmjs.org/install.sh | sh && npm cache clean --force && npm config set unsafe-perm true && npm completion >> ~/.bashrc && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n#Wine\nRUN dpkg --add-architecture i386 && apt-get update -y && apt-get install -y --no-install-recommends wine32 wine-stable mono-devel ca-certificates-mono && \\\napt-get clean && rm -rf /var/lib/apt/lists/*\n\nENV WINEDEBUG -all,err+all\nENV WINEDLLOVERRIDES winemenubuilder.exe=d\n\nRUN wineboot --init || true\n"
}