{
  "startTime": 1674237028839,
  "endTime": 1674237029083,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 246
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 246
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 246
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# w3af.org\n# https://github.com/andresriancho/w3af/tree/master/extras\n\nFROM ubuntu:12.04\nMAINTAINER Andres Riancho <andres.riancho@gmail.com>\n\n# Initial setup\nRUN mkdir /home/w3af\nWORKDIR /home/w3af\nENV HOME /home/w3af\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LOGNAME w3af\n# Squash errors about \"Falling back to ...\" during package installation\nENV TERM linux\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# Update before installing any package\nRUN apt-get update -y && apt-get install --no-install-recommends -y python-pip build-essential libxslt1-dev libxml2-dev libsqlite3-dev libyaml-dev openssh-server python-dev git python-lxml wget libssl-dev xdot python-gtk2 python-gtksourceview2 ubuntu-artwork dmz-cursor-theme ca-certificates && rm -rf /var/lib/apt/lists/*;\nRUN apt-get upgrade -y\nRUN apt-get dist-upgrade -y\n\n# Install basic and GUI requirements, python-lxml because it doesn't compile correctly from pip\n\n\n# Add the w3af user\n# TODO - actually use the w3af user instead of running everything as root\nRUN useradd w3af\n\n# Get ssh package ready\nRUN mkdir /var/run/sshd\nRUN echo 'root:w3af' | chpasswd\nRUN mkdir /home/w3af/.ssh/\nRUN echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDjXxcHjyVkwHT+dSYwS3vxhQxZAit6uZAFhuzA/dQ2vFu6jmPk1ewMGIYVO5D7xV3fo7/RXeCARzqHl6drw18gaxDoBG3ERI6LxVspIQYjDt5Vsqd1Lv++Jzyp/wkXDdAdioLTJyOerw7SOmznxqDj1QMPCQni4yhrE+pYH4XKxNx5SwxZTPgQWnQS7dasY23bv55OPgztI6KJzZidMEzzJVKBXHy1Ru/jjhmWBghiXYU5RBDLDYyT8gAoWedYgzVDmMZelLR6Y6ggNLOtMGiGYfPWDUz9Z6iDAUsOQBtCJy8Sj8RwSQNpmOgSzBanqnhed14hLwdYhnKWcPNMry71 w3af@w3af-docker.org' > /home/w3af/.ssh/w3af-docker.pub\nRUN mkdir -p /root/.ssh/\nRUN cat /home/w3af/.ssh/w3af-docker.pub >> /root/.ssh/authorized_keys\n\n# Get and install pip\nRUN pip install --no-cache-dir --upgrade pip\n\n# We install some pip packages before adding the code in order to better leverage\n# the docker cache\nRUN pip install --no-cache-dir clamd==1.0.1 PyGithub==1.21.0 GitPython==0.3.2.RC1 pybloomfiltermmap==0.3.11 \\\n        esmre==0.3.1 phply==0.9.1 stopit==1.1.0 nltk==2.0.5 chardet==2.1.1 pdfminer==20140328 \\\n        futures==2.1.5 pyOpenSSL==0.13.1 scapy-real==2.2.0-dev guess-language==0.2 cluster==1.1.1b3 \\\n        msgpack-python==0.4.4 python-ntlm==1.0.1 halberd==0.2.4 darts.util.lru==0.5 \\\n        tblib==0.2.0 ndg-httpsclient==0.3.3 pyasn1==0.1.7\n\n# Install w3af\nADD . /home/w3af/w3af\nWORKDIR /home/w3af/w3af\nRUN ./w3af_console ; true\n\n# Change the install script to add the -y and not require input\nRUN sed 's/sudo //g' -i /tmp/w3af_dependency_install.sh\nRUN sed 's/apt-get/apt-get -y/g' -i /tmp/w3af_dependency_install.sh\nRUN sed 's/pip install/pip install --upgrade/g' -i /tmp/w3af_dependency_install.sh\n\n# Run the dependency installer\nRUN /tmp/w3af_dependency_install.sh\n\n# Run the dependency installer\nRUN ./w3af_gui ; true\nRUN sed 's/sudo //g' -i /tmp/w3af_dependency_install.sh\nRUN sed 's/apt-get/apt-get -y/g' -i /tmp/w3af_dependency_install.sh\nRUN sed 's/pip install/pip install --upgrade/g' -i /tmp/w3af_dependency_install.sh\nRUN /tmp/w3af_dependency_install.sh\n\n# Compile the py files into pyc in order to speed-up w3af's start\nRUN python -m compileall -q .\n\n# Cleanup to make the image smaller\nRUN rm /tmp/w3af_dependency_install.sh\nRUN apt-get clean\nRUN rm -rf /var/lib/apt/lists/*\nRUN rm -rf /tmp/pip-build-root\n\nEXPOSE 22\n\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n"
}