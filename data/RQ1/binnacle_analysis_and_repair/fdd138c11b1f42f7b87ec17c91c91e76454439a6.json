{
  "startTime": 1674252613090,
  "endTime": 1674252613506,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 1,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.3-%%VARIANT%%\n\nLABEL maintainer=\"pierre@piwik.org\"\n\nRUN set -ex; \\\n\t\\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\t\\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tlibfreetype6-dev \\\n\t\tlibjpeg-dev \\\n\t\tlibldap2-dev \\\n\t\tlibpng-dev \\\n\t\tlibzip-dev \\\n\t; \\\n\t\\\n\tdebMultiarch=\"$(dpkg-architecture --query DEB_BUILD_MULTIARCH)\"; \\\n\tdocker-php-ext-configure gd --with-freetype-dir=/usr --with-png-dir=/usr --with-jpeg-dir=/usr; \\\n\tdocker-php-ext-configure ldap --with-libdir=\"lib/$debMultiarch\"; \\\n\tdocker-php-ext-install \\\n\t\tgd \\\n\t\tldap \\\n\t\tmysqli \\\n\t\topcache \\\n\t\tpdo_mysql \\\n\t\tzip \\\n\t; \\\n\t\\\n# pecl will claim success even if one install fails, so we need to perform each install separately\n\tpecl install APCu-5.1.17; \\\n\tpecl install redis-4.3.0; \\\n\t\\\n\tdocker-php-ext-enable \\\n\t\tapcu \\\n\t\tredis \\\n\t; \\\n\t\\\n# reset apt-mark's \"manual\" list so that \"purge --auto-remove\" will remove all build dependencies\n\tapt-mark auto '.*' > /dev/null; \\\n\tapt-mark manual $savedAptMark; \\\n\tldd \"$(php -r 'echo ini_get(\"extension_dir\");')\"/*.so \\\n\t\t| awk '/=>/ { print $3 }' \\\n\t\t| sort -u \\\n\t\t| xargs -r dpkg-query -S \\\n\t\t| cut -d: -f1 \\\n\t\t| sort -u \\\n\t\t| xargs -rt apt-mark manual; \\\n\t\\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\trm -rf /var/lib/apt/lists/*\n\nENV MATOMO_VERSION %%VERSION%%\n\nRUN set -ex; \\\n\tfetchDeps=\" \\\n\t\tdirmngr \\\n\t\tgnupg \\\n\t\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\t$fetchDeps \\\n\t; \\\n\t\\\n\tcurl -fsSL -o matomo.tar.gz \\\n\t\t\"https://builds.matomo.org/matomo-${MATOMO_VERSION}.tar.gz\"; \\\n\tcurl -fsSL -o matomo.tar.gz.asc \\\n\t\t\"https://builds.matomo.org/matomo-${MATOMO_VERSION}.tar.gz.asc\"; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 814E346FA01A20DBB04B6807B5DBD5925590A237; \\\n\tgpg --batch --verify matomo.tar.gz.asc matomo.tar.gz; \\\n\tgpgconf --kill all; \\\n\trm -rf \"$GNUPGHOME\" matomo.tar.gz.asc; \\\n\ttar -xzf matomo.tar.gz -C /usr/src/; \\\n\trm matomo.tar.gz; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps; \\\n\trm -rf /var/lib/apt/lists/*\n\nCOPY php.ini /usr/local/etc/php/conf.d/php-matomo.ini\n\nRUN set -ex; \\\n\tcurl -fsSL -o GeoIPCity.tar.gz \\\n\t\t\"https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz\"; \\\n\tcurl -fsSL -o GeoIPCity.tar.gz.md5 \\\n\t\t\"https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz.md5\"; \\\n\techo \"$(cat GeoIPCity.tar.gz.md5)  GeoIPCity.tar.gz\" | md5sum -c -; \\\n\tmkdir /usr/src/GeoIPCity; rm -rf /usr/src/GeoIPCity \\\n\ttar -xf GeoIPCity.tar.gz -C /usr/src/GeoIPCity --strip-components=1; rm GeoIPCity.tar.gz \\\n\tmv /usr/src/GeoIPCity/GeoLite2-City.mmdb /usr/src/matomo/misc/GeoLite2-City.mmdb; \\\n\trm -rf GeoIPCity*\n\nCOPY docker-entrypoint.sh /entrypoint.sh\n\n# WORKDIR is /var/www/html (inherited via \"FROM php\")\n# \"/entrypoint.sh\" will populate it at container startup from /usr/src/matomo\nVOLUME /var/www/html\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"%%CMD%%\"]\n"
}