{
  "startTime": 1674238901316,
  "endTime": 1674238901481,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 23,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedDockerfile": "FROM mmicko/cross-base:1.0\n\nENV CROSS_NAME i686-w64-mingw32\n\nENV CROSS_PREFIX /opt/${CROSS_NAME}\n\nRUN apt-get -y --no-install-recommends install mingw-w64 mingw-w64-tools && \\\n    apt-get clean --yes && rm -rf /var/lib/apt/lists/*;\n\nENV AS=/usr/bin/${CROSS_NAME}-as \\\n    AR=/usr/bin/${CROSS_NAME}-ar \\\n    CC=/usr/bin/${CROSS_NAME}-gcc \\\n    CPP=/usr/bin/${CROSS_NAME}-cpp \\\n    CXX=/usr/bin/${CROSS_NAME}-g++ \\\n    LD=/usr/bin/${CROSS_NAME}-ld\n\nCOPY Toolchain.cmake ${CROSS_PREFIX}/\n\nENV CMAKE_TOOLCHAIN_FILE ${CROSS_PREFIX}/Toolchain.cmake\n\nRUN cd /src/boost && \\\n    echo \"using gcc : mingw : \" ${CC} \"; \" >> tools/build/src/user-config.jam && \\\n    ./bootstrap.sh --prefix=${CROSS_PREFIX} --with-libraries=program_options,filesystem,thread,iostreams && \\\n    ./b2 --toolset=gcc-mingw --target-os=windows threading=multi threadapi=win32 link=static install && \\\n    cd /src/libusb && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${CROSS_PREFIX} --host=${CROSS_NAME} --enable-udev=no && \\\n    make -j9 && \\\n    make install && \\\n    cd /src/libftdi1 && \\\n    export PKG_CONFIG_PATH=${CROSS_PREFIX}/lib/pkgconfig && \\\n    cmake . -DCMAKE_INSTALL_PREFIX=${CROSS_PREFIX} -DCMAKE_TOOLCHAIN_FILE=${CROSS_PREFIX}/Toolchain.cmake -DBOOST_ROOT=$CROSS_PREFIX && \\\n    make -j9 && \\\n    make install && \\\n    cd /src/libftdi1/examples && \\\n    ${CC} -o lsftdi find_all.c -static -lftdi1 -lusb-1.0 -lpthread -L${CROSS_PREFIX}/lib -I${CROSS_PREFIX}/include/libftdi1 && \\\n    cp lsftdi ${CROSS_PREFIX}/bin/. && \\\n    cd /src/libusb/examples && \\\n    ${CC} -o lsusb listdevs.c -static -lusb-1.0 -lpthread -L${CROSS_PREFIX}/lib -I${CROSS_PREFIX}/include/libusb-1.0 && \\\n    cp lsusb ${CROSS_PREFIX}/bin/. && \\\n    cd / && \\\n    rm -rf /src\n\nRUN cp ${CROSS_PREFIX}/lib/libboost_thread_win32.a ${CROSS_PREFIX}/lib/libboost_thread.a\n\nRUN echo \"1\"| update-alternatives --config i686-w64-mingw32-gcc\nRUN echo \"1\"| update-alternatives --config i686-w64-mingw32-g++"
}