{
  "startTime": 1674240123620,
  "endTime": 1674240124153,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Andrew Beveridge <andrew@beveridge.uk>\n\nENV REFRESHED_AT 2017-05-20\nENV HTTPD_PREFIX /etc/apache2\n\n# Suppress warnings from apt about lack of Dialog\nENV DEBIAN_FRONTEND noninteractive\n\nLABEL maintainer=\"Andrew Beveridge <andrew@beveridge.uk>\" \\\n      org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.name=\"Ubuntu 16.04 with Apache2.4 and PHP 7, optimised using PHP-FPM\" \\\n      org.label-schema.url=\"https://andrewbeveridge.co.uk\" \\\n      org.label-schema.vcs-url=\"https://github.com/beveradb/docker-apache-php7-fpm.git\"\n\n# Initial apt update\nRUN apt-get update && apt-get install --no-install-recommends -y apt-utils && rm -rf /var/lib/apt/lists/*;\n\n# Install common / shared packages\nRUN apt-get install --no-install-recommends -y \\\n    curl \\\n    git \\\n    zip \\\n    unzip \\\n    vim \\\n    locales \\\n    software-properties-common \\\n    python-software-properties && rm -rf /var/lib/apt/lists/*;\n\n# Set up locales\nRUN locale-gen en_US.UTF-8\nENV LANG C.UTF-8\nENV LANGUAGE C.UTF-8\nENV LC_ALL C.UTF-8\nRUN /usr/sbin/update-locale\n\n# Add repository for latest built PHP packages, e.g. 7.1 which isn't otherwise available in Xenial repositories\nRUN add-apt-repository ppa:ondrej/php\nRUN apt-get update\n\n# Install PHP 7.1 with FPM and other various commonly used modules, including MySQL client\nRUN apt-get install --no-install-recommends -y --allow-downgrades --allow-remove-essential --allow-change-held-packages \\\n                php7.1-bcmath php7.1-bz2 php7.1-cli php7.1-common php7.1-curl \\\n                php7.1-dev php7.1-fpm php7.1-gd php7.1-gmp php7.1-imap php7.1-intl \\\n                php7.1-json php7.1-ldap php7.1-mbstring php7.1-mcrypt php7.1-mysql \\\n                php7.1-odbc php7.1-opcache php7.1-pgsql php7.1-phpdbg php7.1-pspell \\\n                php7.1-readline php7.1-recode php7.1-soap php7.1-sqlite3 \\\n                php7.1-tidy php7.1-xml php7.1-xmlrpc php7.1-xsl php7.1-zip && rm -rf /var/lib/apt/lists/*;\n\n# Install Apache2 with FastCGI module and MySQL client for convenience\nRUN apt-get install --no-install-recommends -y --allow-downgrades --allow-remove-essential --allow-change-held-packages \\\n                apache2 libapache2-mod-fastcgi apache2-utils \\\n                libmysqlclient-dev mariadb-client && rm -rf /var/lib/apt/lists/*;\n\n# Modify PHP-FPM configuration files to set common properties and listen on socket\nRUN sed -i \"s/;date.timezone =.*/date.timezone = UTC/\" /etc/php/7.1/cli/php.ini\nRUN sed -i \"s/;date.timezone =.*/date.timezone = UTC/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i \"s/display_errors = Off/display_errors = On/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i \"s/upload_max_filesize = .*/upload_max_filesize = 10M/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i \"s/post_max_size = .*/post_max_size = 12M/\" /etc/php/7.1/fpm/php.ini\nRUN sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php/7.1/fpm/php.ini\n\nRUN sed -i -e \"s/pid =.*/pid = \\/var\\/run\\/php7.1-fpm.pid/\" /etc/php/7.1/fpm/php-fpm.conf\nRUN sed -i -e \"s/error_log =.*/error_log = \\/proc\\/self\\/fd\\/2/\" /etc/php/7.1/fpm/php-fpm.conf\n# RUN sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.1/fpm/php-fpm.conf\nRUN sed -i \"s/listen = .*/listen = \\/var\\/run\\/php\\/php7.1-fpm.sock/\" /etc/php/7.1/fpm/pool.d/www.conf\nRUN sed -i \"s/;catch_workers_output = .*/catch_workers_output = yes/\" /etc/php/7.1/fpm/pool.d/www.conf\n\n# Install Composer globally\nRUN curl -f -sS https://getcomposer.org/installer | php \\\n    && mv composer.phar /usr/local/bin/composer \\\n    && chmod a+x /usr/local/bin/composer\n\n#Change ports\nCOPY ./ports.conf /etc/apache2/ports.conf\nRUN rm /var/www/html/index.html\nCOPY ./000-default.conf /etc/apache2/sites-enabled/000-default.conf\n\n# Remove default Apache VirtualHost, configs, and mods not needed\nWORKDIR $HTTPD_PREFIX\nRUN rm -f \\\n    \tsites-enabled/000-default.conf \\\n    \tconf-enabled/serve-cgi-bin.conf \\\n    \tmods-enabled/autoindex.conf \\\n    \tmods-enabled/autoindex.load\n\n# Enable additional configs and mods\nRUN ln -s $HTTPD_PREFIX/mods-available/expires.load $HTTPD_PREFIX/mods-enabled/expires.load \\\n    && ln -s $HTTPD_PREFIX/mods-available/headers.load $HTTPD_PREFIX/mods-enabled/headers.load \\\n\t&& ln -s $HTTPD_PREFIX/mods-available/rewrite.load $HTTPD_PREFIX/mods-enabled/rewrite.load\n\n# Configure Apache to use our PHP-FPM socket for all PHP files\n#COPY php7.1-fpm.conf /etc/apache2/conf-available/php7.1-fpm.conf\nRUN a2enconf php7.1-fpm\n\n# Copy file to execute\nCOPY /source/www /var/www\nRUN chmod 777 /var/www/html/upload\n\n# Enable Apache modules and configuration\nRUN a2dismod mpm_event\nRUN a2enmod alias actions fastcgi proxy_fcgi setenvif mpm_worker\n\n# Clean up apt cache and temp files to save disk space\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Symlink apache access and error logs to stdout/stderr so Docker logs shows them\nRUN ln -sf /dev/stdout /var/log/apache2/access.log\nRUN ln -sf /dev/stdout /var/log/apache2/other_vhosts_access.log\nRUN ln -sf /dev/stderr /var/log/apache2/error.log\n\n#Install phantomjs\nCOPY phantomjs /usr/local/share/phantomjs\nRUN chmod 777 /usr/local/share/phantomjs/bin/phantomjs\nRUN ln -sf /usr/local/share/phantomjs/bin/phantomjs /usr/local/bin\n\n#Run crontab\nRUN apt-get install -y --no-install-recommends cron && rm -rf /var/lib/apt/lists/*;\nADD crontab /etc/cron.d/simple-cron\nRUN chmod +x /var/www/crondel.sh\nRUN chmod 0644 /etc/cron.d/simple-cron\nRUN touch /var/log/cron.log\n\n#Run shell\nRUN chmod 777 /var/www/cron350.sh\nRUN chmod 777 /var/www/cron.php\nRUN chmod 777 /var/www/something.js\nADD shell.sh /var/www/shell.sh\nADD goodjobnowgetyoursfl4g /goodjobnowgetyoursfl4g\nRUN chmod +r /goodjobnowgetyoursfl4g\nRUN chmod 777 /var/www/shell.sh\n\n\n# Start PHP-FPM worker service and run Apache in foreground so any error output is sent to stdout for Docker logs\nCMD cron && tail -f /var/log/cron.log\nCMD /var/www/shell.sh && service php7.1-fpm start && service cron start && /usr/sbin/apache2ctl -D FOREGROUND\n"
}