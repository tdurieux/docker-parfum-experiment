{
  "startTime": 1674241734058,
  "endTime": 1674241734386,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    cmake \\\n    bc \\\n    bison \\\n    build-essential \\\n    flex \\\n    gawk \\\n    liblz4-dev \\\n    libprotobuf-c-dev \\\n    libreadline-dev \\\n    libsqlite3-dev \\\n    libssl-dev \\\n    libunwind-dev \\\n    libz-dev \\\n    make \\\n    ncurses-dev \\\n    protobuf-c-compiler \\\n    tcl \\\n    tcl-dev \\\n    uuid-dev \\\n    libz1 \\\n    liblz4-tool \\\n    libprotobuf-c1 \\\n    libsqlite3-0 \\\n    libuuid1 \\\n    libz1 \\\n    tzdata \\\n    iputils-ping \\\n    net-tools \\\n    netcat-openbsd \\\n    iproute2 \\\n    socat \\\n    time \\\n    strace \\\n    gdb \\\n    openssh-server \\\n    psmisc && rm -rf /var/lib/apt/lists/*;\n\nCOPY . /comdb2\n\nRUN cd /comdb2 &&  \\\n    rm -rf build && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DWITH_TCL=1 .. && \\\n    make -j4 && \\\n    make -j4 test-tools && \\\n    make install &&  \\\n    cp /comdb2/tests/docker/client / && \\\n    cp /comdb2/tests/docker/server / && \\\n    apt-get clean\n\nENV PATH      $PATH:/opt/bb/bin\n"
}