{
  "startTime": 1674246118707,
  "endTime": 1674246118917,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 143
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Take in a runtime image to use for the base system\n# Expects an alpine-based image\nARG RUNTIME_IMAGE\n\n# Use the docker image provided via build arg\nFROM $RUNTIME_IMAGE\n\n# Install the libraries we need for python and dockerize\nRUN apk add --no-cache curl make\n\n# Copy in the dockerize utility\nARG DOCKERIZE_VERSION=0.6.0\nRUN curl -f -sL https://github.com/jwilder/dockerize/releases/download/v$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-v$DOCKERIZE_VERSION.tar.gz | tar -xzC /usr/local/bin\n\n# Copy project into the image\nCOPY . /fauna/faunadb-python\n\n# Shift over to the project and install the dependencies\nWORKDIR /fauna/faunadb-python\nRUN pip install --no-cache-dir . .[test]\n\n# Define the default variables for the tests\nENV FAUNA_ROOT_KEY=secret FAUNA_DOMAIN=db.fauna.com FAUNA_SCHEME=https FAUNA_PORT=443 FAUNA_TIMEOUT=30s\n\n# Run the tests (after target database is up)\nCMD [\"make\", \"docker-wait\", \"test\"]\n"
}