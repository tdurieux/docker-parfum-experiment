{
  "startTime": 1674641758039,
  "endTime": 1674641758190,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 27,
        "columnEnd": 47
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 51,
        "columnEnd": 70
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 74,
        "columnEnd": 107
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM microsoft/vsts-agent:windows-servercore-10.0.14393\n\nENV chocolateyUseWindowsCompression=false\nRUN @powershell -NoProfile -ExecutionPolicy Bypass -Command \"iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\" && SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\"\n\nRUN choco config set cachelocation C:\\chococache\n\nRUN choco install \\\n    git  \\\n    nodejs \\\n    jdk8 \\\n    curl \\\n    maven \\\n    gradle \\\n    ant \\\n    docker \\\n    ruby \\\n    --confirm \\\n    --limit-output \\\n    --timeout 216000 \\\n    && rmdir /S /Q C:\\chococache\n   # choco install visualstudio2015community --confirm --timeout 216000 \\\n\nRUN choco install \\\n    dotnet4.6.1 \\\n    --confirm \\\n    --limit-output \\\n    && rmdir /S /Q C:\\chococache\n\nRUN choco install \\\n    visualstudio2017enterprise \\\n    --package-parameters \"--passive --locale en-US --includeOptional\" \\\n    --confirm \\\n    --limit-output \\\n    --timeout 216000 \\\n    && rmdir /S /Q C:\\chococache\n\nRUN choco install \\\n    visualstudio2017-workload-azure \\\n    visualstudio2017-workload-netcoretools \\\n    visualstudio2017-workload-netweb \\\n    --confirm \\\n    --limit-output \\\n    --timeout 21600 \\\n    --package-parameters \"--includeOptional\" \\\n    && rmdir /S /Q C:\\chococache\n\n# common node tools\nRUN npm install gulp -g && npm install grunt -g && npm install -g less && npm install phantomjs-prebuilt -g && npm cache clean --force;\n\nSHELL [\"powershell\", \"-Command\", \"$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';\"]\n\n# Install .NET Core\nENV DOTNET_VERSION 1.1.1\nENV DOTNET_DOWNLOAD_URL https://dotnetcli.blob.core.windows.net/dotnet/release/1.1.0/Binaries/$DOTNET_VERSION/dotnet-win-x64.$DOTNET_VERSION.zip\n\nRUN Invoke-WebRequest $Env:DOTNET_DOWNLOAD_URL -OutFile dotnet.zip; \\\n    Expand-Archive dotnet.zip -DestinationPath $Env:ProgramFiles\\dotnet -Force; \\\n    Remove-Item -Force dotnet.zip\n\n# Install .NET Core\nENV DOTNET_VERSION 1.0.4\nENV DOTNET_DOWNLOAD_URL https://dotnetcli.blob.core.windows.net/dotnet/preview/Binaries/$DOTNET_VERSION/dotnet-win-x64.$DOTNET_VERSION.zip\n\nRUN Invoke-WebRequest $Env:DOTNET_DOWNLOAD_URL -OutFile dotnet.zip; \\\n    Expand-Archive dotnet.zip -DestinationPath $Env:ProgramFiles\\dotnet -Force; \\\n    Remove-Item -Force dotnet.zip\n\n# Install .NET Core SDK\nENV DOTNET_SDK_VERSION 1.0.1\nENV DOTNET_SDK_DOWNLOAD_URL https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-dev-win-x64.$DOTNET_SDK_VERSION.zip\n\nRUN Invoke-WebRequest $Env:DOTNET_SDK_DOWNLOAD_URL -OutFile dotnet.zip; \\\n    Expand-Archive dotnet.zip -DestinationPath $Env:ProgramFiles\\dotnet -Force; \\\n    Remove-Item -Force dotnet.zip\n\nSHELL [\"cmd\", \"/S\", \"/C\"]\n\nRUN setx /M PATH \"%PATH%;%ProgramFiles%\\dotnet\"\n\n# Trigger the population of the local package cache\nENV NUGET_XMLDOC_MODE skip\n\nRUN mkdir C:\\warmup \\\n    && cd C:\\warmup \\\n    && dotnet new \\\n    && cd .. \\\n    && rmdir /S /Q C:\\warmup\n\n"
}