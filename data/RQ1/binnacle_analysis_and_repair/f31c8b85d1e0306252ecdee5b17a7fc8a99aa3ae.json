{
  "startTime": 1674234689408,
  "endTime": 1674234689491,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 0,
        "lineEnd": 0,
        "columnStart": 47,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8\n\nEXPOSE 8080\n\nCOPY ./entrypoint /opt/entrypoint\n\nRUN npm config set unsafe-perm true -g\n\n#install zsh / oh-my-zsh\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y zsh \\\n  && apt-get clean \\\n  && wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh || true && rm -rf /var/lib/apt/lists/*;\n\n# Do not set a default here or the building docker file will not be able to override the variable\nONBUILD ARG project_name\nONBUILD ARG npm_install\n\n# Copy all the things\nONBUILD COPY . /opt/${project_name:-module}\n\nONBUILD WORKDIR /opt/${project_name:-module}\n\n \\\nRUN if [ ${npm_install:-true} = \"true\" ]; then \\\n npm install --loglevel error ; npm cache clean --force; else echo \"Skipping npm install\"; fiONBUILD\n\nCMD [\"sh\", \"/opt/entrypoint/start.sh\"]\n"
}