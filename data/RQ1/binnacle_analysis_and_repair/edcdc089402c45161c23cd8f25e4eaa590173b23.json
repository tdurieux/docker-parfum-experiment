{
  "startTime": 1674236607079,
  "endTime": 1674236607222,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 5,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:6.11.4\n\n# set timezone to Copenhagen (by default it's using UTC) to match Android's device time.\nRUN cp /usr/share/zoneinfo/Europe/Copenhagen /etc/localtime\nRUN echo \"Europe/Copenhagen\" >  /etc/timezone\n\nARG ROS_VERSION\nARG REALM_FEATURE_TOKEN\nRUN if [ \"x$ROS_VERSION\" = \"x\" ] ; then echo Non-empty ROS_VERSION required ; exit 1; fi\nRUN if [ \"x$REALM_FEATURE_TOKEN\" = \"x\" ] ; then echo Non-empty REALM_FEATURE_TOKEN required ; exit 1; fi\n\n# Install netstat (used for debugging)\n# Fix https://superuser.com/questions/1420231/how-to-solve-404-error-in-aws-apg-get-for-debian-jessie-fetch\nRUN rm etc/apt/sources.list\nRUN echo \"deb http://archive.debian.org/debian/ jessie main\" >> etc/apt/sources.list\nRUN echo \"deb-src http://archive.debian.org/debian/ jessie main\" >> etc/apt/sources.list\nRUN echo \"deb http://security.debian.org jessie/updates main\" >> etc/apt/sources.list\nRUN echo \"deb-src http://security.debian.org jessie/updates main\" >> etc/apt/sources.list\n\nRUN apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    net-tools \\\n    psmisc \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\n## Copy ROS node template project to image. Then configure and prepare it for usage.\nCOPY ros /ros\nWORKDIR \"/ros\"\nRUN sed -i -e \"s/%ROS_VERSION%/$ROS_VERSION/g\" package.json\nRUN sed -i -e \"s/%REALM_FEATURE_TOKEN%/$REALM_FEATURE_TOKEN/g\" src/index.ts\nRUN npm install && npm cache clean --force;\nWORKDIR \"/\"\n\n# Install test server dependencies\nRUN npm install winston@2.4.0 temp httpdispatcher@1.0.0 fs-extra moment is-port-available@0.1.5 && npm cache clean --force;\n\nCOPY keys/public.pem keys/private.pem keys/127_0_0_1-server.key.pem keys/127_0_0_1-chain.crt.pem /\nCOPY integration-test-command-server.js /usr/bin/\n\n# Bypass the ROS license check\nENV DOCKER_DATA_PATH /\nENV ROS_TOS_EMAIL_ADDRESS 'ci@realm.io'\n\n# Run integration test server\nCMD /usr/bin/integration-test-command-server.js /tmp/integration-test-command-server.log\n"
}