{
  "startTime": 1674239562542,
  "endTime": 1674239562618,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:utopic-20150625\n\nRUN apt-get update\nRUN apt-get -y --no-install-recommends install build-essential clang cmake && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y openjdk-8-jdk ant && rm -rf /var/lib/apt/lists/*;\n\nENV CXX clang++\n\n# Select Java 8\nRUN update-java-alternatives -s java-1.8.0-openjdk-amd64\nRUN rm /usr/lib/jvm/default-java\nRUN ln -s /usr/lib/jvm/java-8-openjdk-amd64 /usr/lib/jvm/default-java\n\nVOLUME /opt/djinni\nCMD /opt/djinni/test-suite/java/docker/build_and_run_tests.sh\n\n"
}