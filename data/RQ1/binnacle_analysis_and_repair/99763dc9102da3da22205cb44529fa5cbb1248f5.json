{
  "startTime": 1674234134655,
  "endTime": 1674234134837,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\n\n# interactive mode\nENV TERM xterm\nENV DEBIAN_FRONTEND noninteractive\n\n# additional apt settings\nRUN echo 'Acquire::Retries \"5\";' > /etc/apt/apt.conf.d/99AcquireRetries\n\n# building environments\nRUN set -ex; \\\n    apt-get update && apt-get install --no-install-recommends -y \\\n                      curl \\\n                      cron \\\n                      default-libmysqlclient-dev \\\n                      iputils-ping \\\n                      geoip-database \\\n                      libldap2-dev \\\n                      libsasl2-dev \\\n                      mysql-client \\\n                      python-pip \\\n                      python-dev \\\n                      libssl-dev \\\n                      libyajl2 \\\n                      swig \\\n                      python-setuptools \\\n                      supervisor \\\n                      rsyslog \\\n                      vim \\\n                      wget && \\\n                      apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n\n# Mongo client\nRUN set -ex; \\\n    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4 && \\\n    echo \"deb http://repo.mongodb.org/apt/debian stretch/mongodb-org/4.0 main\" | tee /etc/apt/sources.list.d/mongodb-org-4.0.list && \\\n    apt-get update && apt-get install --no-install-recommends -y \\\n                      mongodb-org-shell && \\\n                      apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# speed up building image\nWORKDIR /root/n6\nCOPY N6Lib/requirements N6Lib/requirements\nCOPY N6SDK/requirements N6SDK/requirements\nRUN pip install --no-cache-dir -r N6Lib/requirements; \\\n    pip install --no-cache-dir -r N6SDK/requirements\n\n# cloning repository\nADD . /root/n6/\n\n# installation app\nRUN set -ex; \\\n    ./do_setup.py N6Lib N6Core\n\n# generate rabbit and web ssl certs\nADD docker/work/test_data/test-generate_certs.sh /root/certs/generate_certs.sh\nRUN /root/certs/generate_certs.sh\nADD docker/rabbit/conf/rabbitmqadmin /usr/local/bin\nRUN chmod a+x /usr/local/bin/rabbitmqadmin\n\n# supervisor\nADD docker/work/test_data/test-supervisord.conf etc/supervisord/supervisord.conf\nADD docker/work/test_data/test-program_template.tmpl etc/supervisord/program_template.tmpl\nADD docker/work/test_data/test-n6aggregator.conf etc/supervisord/programs/n6aggregator.conf\nADD docker/work/test_data/test-n6archiveraw.conf etc/supervisord/programs/n6archiveraw.conf\nADD docker/work/test_data/test-n6comparator.conf etc/supervisord/programs/n6comparator.conf\nADD docker/work/test_data/test-n6enrich.conf etc/supervisord/programs/n6enrich.conf\nADD docker/work/test_data/test-n6filter.conf etc/supervisord/programs/n6filter.conf\nADD docker/work/test_data/test-n6recorder.conf etc/supervisord/programs/n6recorder.conf\nRUN mkdir -p /root/supervisor/log /root/supervisor/programs\nWORKDIR etc/supervisord\nRUN python get_parsers_conf.py && \\\n    cp programs/*.conf /root/supervisor/programs/\n\n# Rest tools\nWORKDIR /root/n6\nADD docker/work/test_data/test-run_collectors /etc/cron.d/run_collectors\nADD docker/work/wait-for-services-inside.sh /wait-for-services.sh\nRUN chmod +x /wait-for-services.sh\nADD docker/work/entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"supervisord\", \"-c\", \"etc/supervisord/supervisord.conf\"]"
}