{
  "startTime": 1674235978727,
  "endTime": 1674235978899,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial\n\nLABEL maintainer \"alves.rjc+docker@gmail.com\"\n\nARG GHC_VERSION=8.6.4\n\nRUN apt update && \\\n    apt install --no-install-recommends -y \\\n    build-essential \\\n    cabal-install \\\n    coreutils \\\n    curl \\\n    git \\\n    libbz2-dev \\\n    libcairo2-dev \\\n    libgif-dev \\\n    libjpeg-dev \\\n    software-properties-common \\\n    liblzma-dev \\\n    m4 \\\n    pkg-config \\\n    python-dev \\\n    python-pip \\\n    vim \\\n    wget \\\n    xz-utils \\\n    zlib1g-dev \\\n    zstd && \\\n    apt clean && \\\n    rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\n\n# add-apt-repository is installed by software-properties-common above\nRUN add-apt-repository ppa:hvr/ghc-wsl -y\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y ghc-${GHC_VERSION} && \\\n    apt clean && \\\n    rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -qO- https://get.haskellstack.org/ | sh && \\\n    chmod 755 /usr/local/bin/stack\n\n# Set encoding to UTF-8 and PATH to find GHC and cabal/stack-installed binaries.\n#\n\nENV LANG=C.UTF-8 \\\n    LC_ALL=C.UTF-8 \\\n    PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/$GHC_VERSION/bin:$PATH\n\n# Build ngless dependencies to save time during build\nRUN git clone --depth=2 https://gitlab.com/ngless/ngless && \\\n    cd ngless && \\\n    stack setup --system-ghc && \\\n    STACKOPTS=\"--system-ghc --only-dependencies\" make ngless && \\\n    STACKOPTS=\"--system-ghc --only-dependencies\" make tests && \\\n    cd .. && \\\n    rm -rf ngless\n"
}