{
  "startTime": 1674240095073,
  "endTime": 1674240095311,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedDockerfile": "#\n# ELBE - Debian Based Embedded Rootfilesystem Builder\n# Copyright (c) 2014-2015 Silvio Fricke <silvio.fricke@gmail.com>\n# Copyright (c) 2018 Manuel Traut <manut@linutronix.de>\n#\n# SPDX-License-Identifier: GPL-3.0-or-later\n\n# This Dockefile generate a image for the elbe buildsystem\nFROM elbeproject/debian-stretch:latest\n\nUSER root\nENV DEBIAN_FRONTEND noninteractive\n\n# use a sources.list including security\nRUN echo \"deb http://ftp.de.debian.org/debian stretch main\" > /etc/apt/sources.list; \\\n    echo \"deb http://security.debian.org/debian-security stretch/updates main\" >> /etc/apt/sources.list\n\n# update, upgrade and install elbe runtime-dependencies\nRUN apt-get update -y ; \\\n    apt-get install -y --no-install-recommends \\\n                    -o Dpkg::Options::=\"--force-confnew\" \\\n        systemd \\\n        ca-certificates \\\n        sudo \\\n        vim-nox \\\n        wget \\\n        software-properties-common \\\n        gnupg \\\n        python3-setuptools \\\n        python3-yaml \\\n        python3-jsonschema \\\n        locales \\\n        gcc \\\n        g++ \\\n        diffstat \\\n        texinfo \\\n        gawk \\\n        chrpath \\\n        python3-mako \\\n        fuseiso9660 \\\n        aptly \\\n        qemu-system-x86 && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && locale-gen\n\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# install current elbe\nRUN apt-add-repository 'deb http://debian.linutronix.de/elbe stretch main'\nRUN wget https://debian.linutronix.de/elbe/elbe-repo.pub\nRUN apt-key add elbe-repo.pub\nRUN apt-get update -y\nRUN apt-get install -y --no-install-recommends \\\n        elbe \\\n        elbe-doc && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean -y\nRUN rm -rf /var/lib/apt/lists/*\n\n# create elbe user\nRUN groupadd -g @KVMGID@ -o -r kvm-elbe\nRUN useradd -d /home/elbe -U -G kvm-elbe,libvirt -m -s /bin/bash -u @USERID@ elbe\nRUN echo \"root:elbe\" | chpasswd\nRUN echo \"elbe:elbe\" | chpasswd\n\nRUN rm -f /lib/systemd/system/multi-user.target.wants/*;\\\n    rm -f /etc/systemd/system/*.wants/*;\\\n    rm -f /lib/systemd/system/local-fs.target.wants/*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\n    rm -f /lib/systemd/system/basic.target.wants/*;\\\n    rm -f /lib/systemd/system/anaconda.target.wants/*;\n\nVOLUME [ \"/sys/fs/cgroup\" ]\nVOLUME [ \"/elbe\" ]\nVOLUME [ \"/var/cache/elbe\" ]\n\n# sudo for elbe\nRUN echo \"%elbe  ALL=(ALL:ALL) NOPASSWD: ALL\" > /etc/sudoers.d/elbegrp\nRUN chmod 0440 /etc/sudoers.d/elbegrp\n\n# run qemu as root\nRUN echo 'user = \"root\"' >> /etc/libvirt/qemu.conf\nRUN echo 'group = \"root\"' >> /etc/libvirt/qemu.conf\n\n# run libvirt in systemd on startup\nRUN systemctl enable libvirtd\n\nCMD [ \"/lib/systemd/systemd\" ]\n"
}