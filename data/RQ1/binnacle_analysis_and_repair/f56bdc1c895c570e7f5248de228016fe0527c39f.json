{
  "startTime": 1674242356700,
  "endTime": 1674242356899,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 0,
        "columnEnd": 65
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 43,
        "columnStart": 0,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.3 \nMAINTAINER Tim Dettrick <t.dettrick@uq.edu.au> \n\n# Statically compile nginx, then remove build tools \nRUN export NGINX_VERSION=1.8.1 && \\  \nexport NGINX_CACHE_DIR=/var/cache/nginx && \\  \nexport NGINX_LOG_DIR=/var/log/nginx && \\  \nexport NGINX_RUN_DIR=/var/run/nginx && \\  \naddgroup -S nginx && \\  \nadduser -S -D -h /var/www -s /sbin/nologin -G nginx nginx && \\  \nmkdir -p $NGINX_CACHE_DIR $NGINX_LOG_DIR $NGINX_RUN_DIR /run && \\  \nchown nginx:nginx $NGINX_CACHE_DIR $NGINX_LOG_DIR $NGINX_RUN_DIR /run && \\  \napk add --update openssl-dev pcre-dev zlib-dev build-base && \\  \nmkdir /src && \\\n wget -O - https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \\\n| tar xzv -C /src && \\\ncd /src/nginx-${NGINX_VERSION} && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n--with-cc-opt=\"-static\" \\\n--with-ld-opt=\"-static\" \\\n--prefix=/usr \\\n--conf-path=/etc/nginx/nginx.conf \\\n--http-client-body-temp-path=$NGINX_CACHE_DIR/client_body_temp \\\n--http-proxy-temp-path=$NGINX_CACHE_DIR/proxy_temp \\\n--http-log-path=$NGINX_LOG_DIR/access.log \\\n--error-log-path=$NGINX_LOG_DIR/error.log \\\n--pid-path=$NGINX_RUN_DIR/nginx.pid \\\n--lock-path=$NGINX_RUN_DIR/nginx.lock \\\n--with-http_auth_request_module \\\n--without-http_ssi_module \\\n--without-http_userid_module \\\n--without-http_access_module \\\n--without-http_auth_basic_module \\\n--without-http_autoindex_module \\\n--without-http_geo_module \\\n--without-http_split_clients_module \\\n--without-http_fastcgi_module \\\n--without-http_uwsgi_module \\\n--without-http_scgi_module \\\n--without-http_memcached_module \\\n--without-http_limit_conn_module \\\n--without-http_limit_req_module \\\n--without-http_empty_gif_module \\\n--without-http_browser_module \\\n&& \\\nmake && \\\nmake install && \\\napk del openssl-dev pcre-dev zlib-dev build-base && \\\ncd - && \\\nrm -rf /src && \\\nrm -rf /var/cache/apk/*\n\nADD /etc /etc \nADD /opt /opt \n\nVOLUME [\"/var/cache\", \"/var/log\"] \n\nRUN mkdir -p /etc/nginx/conf.d && \\  \ntouch /etc/nginx/conf.d/variables.conf && \\  \nchown nginx:nginx /etc/nginx/conf.d/variables.conf \n\nUSER nginx \n\nEXPOSE 8080 \n\nCMD /opt/run.sh \n\n"
}