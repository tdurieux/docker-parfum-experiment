{
  "startTime": 1674234711689,
  "endTime": 1674234711746,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# USE ALPINE LINUX\nFROM alpine\nRUN apk update\nRUN apk add --no-cache alpine-sdk git ca-certificates ghc gmp-dev zlib-dev bash dpkg fakeroot cabal\nRUN mkdir -p /usr/src/ && rm -rf /usr/src/\nWORKDIR /usr/src/\nRUN git clone https://github.com/jgm/pandoc\nWORKDIR /usr/src/pandoc\nRUN cabal update && \\\n    cabal install cabal-install-2.4.0.0 && \\\n    cp $HOME/.cabal/bin/cabal /usr/bin/\nCMD cabal --version && \\\n    ghc --version && \\\n    git pull && \\\n    git checkout -b work $TREE && \\\n    cabal new-update && \\\n    cabal new-clean && \\\n    cabal new-configure --enable-tests -f-export-dynamic -fstatic -fembed_data_files -fbibutils --ghc-options '-optc-Os -optl=-pthread -optl=-static -fPIC' . pandoc-citeproc && \\\n    cabal new-build . pandoc-citeproc && \\\n    cabal new-test -j1 . pandoc-citeproc && \\\n    for f in $(find dist-newstyle -name 'pandoc*' -type f -perm +400); do cp $f /artifacts/; done && \\\n    bash linux/make_deb.sh && \\\n    bash linux/make_tarball.sh\n"
}