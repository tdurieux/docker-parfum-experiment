{
  "startTime": 1674249122577,
  "endTime": 1674249122834,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 368
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 368
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 368
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 392
      }
    }
  ],
  "repairedDockerfile": "#honeybrid\n#start with ubuntu\nFROM ubuntu:latest\n\nMAINTAINER Spenser Reinhardt\nENV DEBIAN_FRONTEND noninteractive\nENV logfile /var/log/install.log\n\nRUN sed -i '1ideb mirror://mirrors.ubuntu.com/mirrors.txt trusty main restricted universe multiverse'     /etc/apt/sources.list\nRUN sed -i '1ideb mirror://mirrors.ubuntu.com/mirrors.txt trusty-updates main restricted universe multiverse' /etc/apt/sources.list\nRUN sed -i '1ideb mirror://mirrors.ubuntu.com/mirrors.txt trusty-backports main restricted universe multiverse' /etc/apt/sources.list\nRUN sed -i '1ideb mirror://mirrors.ubuntu.com/mirrors.txt trusty-security main restricted universe multiverse' /etc/apt/sources.list\n\n#dependencies\nRUN echo \"Installing prereqs\" | tee -a \"${logfile}\"\nRUN apt-get update -y 2>&1 | tee -a \"${logfile}\"\nRUN apt-get install --no-install-recommends automake autoconf git-core make build-essential binutils gcc flex byacc libnetfilter-conntrack-dev libnetfilter-queue-dev libnetfilter-queue1 libnfnetlink-dev libnfnetlink0 pkg-config libc6-dev libglib2.0-0 libglib2.0-dev linux-libc-dev libgloox-dev libxml2-dev libxml++ libpcap0.8-dev libpcap0.8 libdumbnet-dev openssl libssl-dev libev-dev -y 2>&1 | tee -a \"${logfile}\" && rm -rf /var/lib/apt/lists/*;\n\n#honeybrid build and install\nWORKDIR /tmp/\nRUN git clone git://git.code.sf.net/p/honeybrid/git honeybrid-git 2>&1 | tee -a \"${logfile}\"\nWORKDIR honeybrid-git/\nRUN autoreconf -vi 2>&1 | tee -a \"${logfile}\"\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \"$@\" 2>&1 | tee -a \"${logfile}\"\nRUN make 2>&1 | tee -a \"${logfile}\"\nRUN make install 2>&1 | tee -a \"${logfile}\"\nRUN mkdir /etc/honeybrid\nRUN mkdir /var/log/honeybrid\nRUN cp honeybrid.conf /etc/honeybrid/ 2>&1 | tee -a \"${logfile}\"\nRUN cp honeybrid.sh /etc/init.d/ 2>&1 | tee -a \"${logfile}\"\n\n#Finished\nRUN echo \"Finished build correctly - Enjoy!\" | tee -a \"${logfile}\"\nRUN echo $(date) | tee -a \"${logfile}\"\nRUN mv $logfile /var/log/honeybrid/install.log\n\n#add config\nADD honeybrid.cfg /etc/honeybrid/honeybrid.cfg\n\n#cleanup\nRUN if [[ -f $logfile ]]; then mv $logfile /opt/thug/install.log; else echo \"No log, use docker's\"; fi\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /install.sh\n\nEXPOSE 80 443\nWORKDIR /var/log/honeybrid\nVOLUME /var/log/honeybrid\nCMD [\"/etc/init.d/honeybrid.sh\"]\n"
}