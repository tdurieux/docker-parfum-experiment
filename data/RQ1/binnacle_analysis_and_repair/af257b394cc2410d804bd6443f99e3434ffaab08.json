{
  "startTime": 1674244682663,
  "endTime": 1674244682772,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 26,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 26,
        "columnStart": 22,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is a standalone Dockerfile for Docker Hub. The Munki-Do git repository\n# has a Dockerfile in the root directory which does away with the need to clone the\n# docker-munki-do repository. So you normally won't need this one.\n\n# Use phusion/passenger-full as base image. To make your builds reproducible, make\n# sure you lock down to a specific version, not to `latest`!\n# See https://github.com/phusion/passenger-docker/blob/master/Changelog.md for\n# a list of version numbers.\nFROM phusion/passenger-full:0.9.17\nMAINTAINER Graham Pugh <g.r.pugh@gmail.com>\n\n# Set correct environment variables.\nENV HOME /root\nENV DEBIAN_FRONTEND noninteractive\nENV APP_DIR /home/app/munkido\nENV TIME_ZONE America/New_York\nENV APPNAME Munki-Do\n\n# Use baseimage-docker's init process.\nCMD [\"/sbin/my_init\"]\n\n# Install python\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  openssh-server \\\n  python-pip \\\n  python-dev \\\n  libpq-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/munki/munki.git /munki-tools\nRUN git clone https://github.com/grahampugh/munki-do.git $APP_DIR\nADD django/requirements.txt $APP_DIR/\nRUN pip install --no-cache-dir -r $APP_DIR/requirements.txt\nRUN touch /root/tmp.txt\nADD django/ $APP_DIR/munkido/\nRUN mkdir -p /var/log/django\nADD nginx/munkido.conf /etc/nginx/sites-enabled/munkido.conf\nADD run.sh /etc/my_init.d/run.sh\nRUN rm -f /etc/service/nginx/down\nRUN rm -f /etc/nginx/sites-enabled/default\nRUN groupadd munki\nRUN usermod -g munki app\n\nVOLUME [\"/munki_repo\", \"/home/app/munkido\" ]\nEXPOSE 8000\n\n#     Uncomment the following lines to copy an ssh key to the Docker image\n# in order to allow passwordless `git push`\n# This is necessary in Bitbucket and should also work in Github\n# if you change the ssh-keyscan to `github.com`, so that you\n# don't have to pass passwords in plain text\n#     You will need to add an `id_rsa` file to the same path as the Dockerfile,\n# as Docker cannot operate on files outside the current working directory.\n#     To generate an SSH key, follow the instructions at:\n# https://confluence.atlassian.com/bitbucket/set-up-ssh-for-git-728138079.html\n# The id_rsa file will then be found at ~/.ssh\n\nADD id_rsa /root/.ssh/id_rsa\nRUN touch /root/.ssh/known_hosts\nRUN chown root: /root/.ssh/id_rsa && chmod 600 /root/.ssh/id_rsa\nRUN ssh-keyscan bitbucket.org >> /root/.ssh/known_hosts\n\n# Clean up APT when done.\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n"
}