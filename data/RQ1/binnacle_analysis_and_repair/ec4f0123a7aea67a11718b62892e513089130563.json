{
  "startTime": 1674246044564,
  "endTime": 1674246044693,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 4,
        "columnStart": 47,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 4,
        "columnStart": 47,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3\n\n# Prepare os libs\nRUN apt-get update -y && apt-get upgrade -y && apt-get install --no-install-recommends -y \\\n    python-dev python-setuptools python-pip && rm -rf /var/lib/apt/lists/*;\nRUN apt-get autoremove -y\n\n# upgrade pip\nRUN pip install --no-cache-dir --upgrade pip\n\n# Prepare app specific modules\nCOPY requirements.txt /tmp/requirements.txt\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\nRUN rm /tmp/requirements.txt\n\n# Prepare initial\nCOPY deploy/django/entrypoint.sh /bin/entrypoint.sh\nRUN chmod 700 /bin/entrypoint.sh\n\n# Static and media dir to expose out container onto nginx-service\nRUN mkdir -p /static /media\nENV DJANGO_STATIC_ROOT=\"/static\"\nENV DJANGO_MEDIA_ROOT=\"/media\"\n\n# Prepare user\nRUN useradd -u 33 www-data | true\nRUN chown -R www-data /media\n\n# Prepare code\nCOPY src /code\nENV PYTHONPATH=\"${PYTHONPATH}:/code\"\nWORKDIR /code\n\n# Prepare ports\n# django\nEXPOSE 8000\n\nENTRYPOINT [\"/bin/entrypoint.sh\"]\n"
}