{
  "startTime": 1674234391530,
  "endTime": 1674234391647,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile that builds a minimal container for IPython + narrative\n#\n# Requires a narrative base images that contains runtime dependencies.\n#\n# Steve Chan sychan@lbl.gov\n#\n# Copyright 2013 The Regents of the University of California,\n#                Lawrence Berkeley National Laboratory\n#                United States Department of Energy\n#          \t The DOE Systems Biology Knowledgebase (KBase)\n# Made available under the KBase Open Source License\n#\n\nFROM kbase/narrbase:5.2\n\n# These ARGs values are passed in via the docker build command\nARG BUILD_DATE\nARG VCS_REF\nARG BRANCH=develop\nARG NARRATIVE_VERSION\nARG SKIP_MINIFY\n\nEXPOSE 8888\n\n# Remove Debian's older Tornado package - updated/removed in the narrbase package\n#RUN DEBIAN_FRONTEND=noninteractive apt-get remove -y python-tornado\n\nRUN echo Skip=$SKIP_MINIFY\n\n# install pyopenssl cryptography idna and requests is the same as installing\n# requests[security]\nRUN conda install -c conda-forge ndg-httpsclient pyasn1 pyopenssl cryptography idna requests \\\n          beautifulsoup4 html5lib\n# TEMPORARY!\n# Update bs4 and pandas to resolve inability to run them\n#RUN DEBIAN_FRONTEND=noninteractive apt-get install -y python-dev libffi-dev libssl-dev \\\n#    && pip install pyopenssl ndg-httpsclient pyasn1 \\\n#    && pip install requests --upgrade \\\n#    && pip install 'requests[security]' --upgrade \\\n#    && pip install 'beautifulsoup4' --upgrade \\\n#    && pip install 'html5lib' --upgrade\n\n# Copy in the narrative repo\nADD ./ /kb/dev_container/narrative\nADD ./kbase-logdb.conf /tmp/kbase-logdb.conf\nADD ./deployment/ /kb/deployment/\nWORKDIR /kb/dev_container/narrative\n\n# Generate a version file that we can scrape later\nRUN mkdir -p /kb/deployment/ui-common/ && ./src/scripts/kb-update-config -f src/config.json.templ -o /kb/deployment/ui-common/narrative_version\n\n# Install Javascript dependencies\nRUN npm install && ./node_modules/.bin/bower install --allow-root --config.interactive=false && npm cache clean --force;\n\n# Compile Javascript down into an itty-bitty ball unless SKIP_MINIFY is non-empty\n# (commented out for now)\n# RUN cd kbase-extension/\n# src/notebook/ipython_profiles/profile_narrative/kbase_templates && npm install && grunt build\nRUN [ -n \"$SKIP_MINIFY\" ] || grunt minify\n\n# Add Tini. Tini operates as a process subreaper for jupyter. This prevents\n# kernel crashes. See Jupyter Notebook known issues here:Ëœ\n# http://jupyter-notebook.readthedocs.org/en/latest/public_server.html#known-issues\n# ENV TINI_VERSION v0.8.4\n# ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini\n# RUN chmod +x /usr/bin/tini\n\nRUN /bin/bash scripts/install_narrative_docker.sh\n\n# RUN ./fixupURL.sh && chmod 666 /kb/dev_container/narrative/src/config.json\nRUN pip install --no-cache-dir jupyter-console\n\nWORKDIR /tmp\nRUN chown -R nobody:www-data /kb/dev_container/narrative/src/notebook/ipython_profiles /tmp/narrative /kb/dev_container/narrative/kbase-extension; find / -xdev \\( -perm -4000 \\) -type f -print -exec rm {} \\;\n\n# Set a default value for the environment variable VERSION_CHECK that gets expanded in the config.json.templ\n# into the location to check for a new narrative version. Normally we would put this in the template itself\n# but since the raw template is consumed at build time as a JSON file, a template with a default string would\n# cause JSON parsing to fail - GRRRRR!!!\nENV VERSION_CHECK /narrative_version\n\n# Set the default environment to be CI, can be overriden by passing new CONFIG_ENV setting at container start\nENV CONFIG_ENV ci\n\nUSER root\n\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.vcs-url=\"https://github.com/kbase/narrative.git\" \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.schema-version=\"1.0.0-rc1\" \\\n      us.kbase.vcs-branch=$BRANCH \\\n      us.kbase.narrative-version=$NARRATIVE_VERSION \\\n      maintainer=\"William Riehl wjriehl@lbl.gov\"\n\n# ENTRYPOINT [\"/usr/bin/tini\", \"--\"]\n# The entrypoint can be set to \"headless-narrative\" to run headlessly\nENTRYPOINT [\"/kb/deployment/bin/dockerize\"]\nCMD [ \"--template\", \\\n      \"/kb/dev_container/narrative/src/config.json.templ:/kb/dev_container/narrative/src/config.json\", \\\n      \"--template\", \\\n      \"/kb/dev_container/narrative/src/config.json.templ:/kb/dev_container/narrative/kbase-extension/static/kbase/config/config.json\", \\\n      \"-euid\", \\\n      \"65534\", \\\n      \"-egid\", \\\n      \"65534\", \\\n      \"kbase-narrative\"]\n#ONBUILD USER root\n#ONBUILD ADD url.cfg /kb/dev_container/narrative/url.cfg\n#ONBUILD RUN cd /kb/dev_container/narrative && ./fixupURL.sh\n#ONBUILD USER nobody\n"
}