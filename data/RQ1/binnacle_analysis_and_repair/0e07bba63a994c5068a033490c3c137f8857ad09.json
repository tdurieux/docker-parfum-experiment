{
  "startTime": 1674242717106,
  "endTime": 1674242717342,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2016 The WWU eLectures Team All rights reserved.\n#\n# Licensed under the Educational Community License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License. You may obtain a copy of the License at\n#\n#     http://opensource.org/licenses/ECL-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM maven:3.6-jdk-8-slim AS build\n\nARG repo=\"https://github.com/opencast/opencast.git\"\nARG branch=\"7.0\"\n\nENV OPENCAST_DISTRIBUTION=\"worker\" \\\n    OPENCAST_SRC=\"/usr/src/opencast\" \\\n    OPENCAST_HOME=\"/opencast\" \\\n    OPENCAST_UID=\"800\" \\\n    OPENCAST_GID=\"800\" \\\n    OPENCAST_USER=\"opencast\" \\\n    OPENCAST_GROUP=\"opencast\" \\\n    OPENCAST_REPO=\"${repo}\" \\\n    OPENCAST_BRANCH=\"${branch}\"\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n      tar gzip bzip2 git \\\n      ca-certificates openssl \\\n      make gcc g++ libc-dev \\\n  \\\n && git clone https://github.com/ncopa/su-exec.git /tmp/su-exec \\\n && cd /tmp/su-exec \\\n && make \\\n && cp su-exec /usr/local/sbin \\\n && rm -rf /tmp/* /var/lib/apt/lists/* \\\n  \\\n && groupadd --system -g \"${OPENCAST_GID}\" \"${OPENCAST_GROUP}\" \\\n && useradd --system -M -N -g \"${OPENCAST_GROUP}\" -d \"${OPENCAST_HOME}\" -u \"${OPENCAST_UID}\" \"${OPENCAST_USER}\" \\\n && mkdir -p \"${OPENCAST_SRC}\" \"${OPENCAST_HOME}\" \\\n && chown -R \"${OPENCAST_USER}:${OPENCAST_GROUP}\" \"${OPENCAST_SRC}\" \"${OPENCAST_HOME}\"\n\nUSER \"${OPENCAST_USER}\"\n\nRUN git clone --recursive \"${OPENCAST_REPO}\" \"${OPENCAST_SRC}\" \\\n && cd \"${OPENCAST_SRC}\" \\\n && git checkout \"${OPENCAST_BRANCH}\" \\\n && mvn --quiet --batch-mode install -DskipTests=true -Dcheckstyle.skip=true -DskipJasmineTests=true \\\n && tar -xzf build/opencast-dist-${OPENCAST_DISTRIBUTION}-*.tar.gz --strip 1 -C \"${OPENCAST_HOME}\" \\\n && rm -rf \"${OPENCAST_SRC}\"/* ~/.m2 ~/.npm ~/.node-gyp && rm build/opencast-dist-${OPENCAST_DISTRIBUTION}-*.tar.gz\n\nFROM openjdk:8-jdk-slim-stretch\nLABEL maintainer=\"WWU eLectures team <electures.dev@uni-muenster.de>\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.version=\"7.0\" \\\n      org.label-schema.name=\"opencast-worker\" \\\n      org.label-schema.description=\"Docker image for the Opencast worker distribution\" \\\n      org.label-schema.usage=\"https://github.com/opencast/opencast-docker/blob/7.0/README.md\" \\\n      org.label-schema.url=\"http://www.opencast.org/\" \\\n      org.label-schema.vcs-url=\"https://github.com/opencast/opencast-docker\" \\\n      org.label-schema.vendor=\"University of MÃ¼nster\" \\\n      org.label-schema.docker.debug=\"docker exec -it $CONTAINER sh\" \\\n      org.label-schema.docker.cmd.help=\"docker run --rm quay.io/opencast/worker:7.0 app:help\"\n\nENV OPENCAST_VERSION=\"7.0\" \\\n    OPENCAST_DISTRIBUTION=\"worker\" \\\n    OPENCAST_HOME=\"/opencast\" \\\n    OPENCAST_DATA=\"/data\" \\\n    OPENCAST_CUSTOM_CONFIG=\"/etc/opencast\" \\\n    OPENCAST_USER=\"opencast\" \\\n    OPENCAST_GROUP=\"opencast\" \\\n    OPENCAST_UID=\"800\" \\\n    OPENCAST_GID=\"800\" \\\n    OPENCAST_REPO=\"${repo}\" \\\n    OPENCAST_BRANCH=\"${branch}\"\nENV OPENCAST_SCRIPTS=\"${OPENCAST_HOME}/docker/scripts\" \\\n    OPENCAST_SUPPORT=\"${OPENCAST_HOME}/docker/support\" \\\n    OPENCAST_CONFIG=\"${OPENCAST_HOME}/etc\"\n\nRUN groupadd --system -g \"${OPENCAST_GID}\" \"${OPENCAST_GROUP}\" \\\n && useradd --system -M -N -g \"${OPENCAST_GROUP}\" -d \"${OPENCAST_HOME}\" -u \"${OPENCAST_UID}\" \"${OPENCAST_USER}\" \\\n && mkdir -p \"${OPENCAST_DATA}\" \\\n && chown -R \"${OPENCAST_USER}:${OPENCAST_GROUP}\" \"${OPENCAST_DATA}\"\n\nCOPY --from=build /usr/local/sbin/su-exec /usr/local/sbin/su-exec\nCOPY --chown=opencast:opencast --from=build \"${OPENCAST_HOME}\" \"${OPENCAST_HOME}\"\nCOPY --chown=opencast:opencast assets/scripts \"${OPENCAST_SCRIPTS}\"\nCOPY --chown=opencast:opencast assets/support \"${OPENCAST_SUPPORT}\"\nCOPY --chown=opencast:opencast assets/etc/* \"${OPENCAST_CONFIG}/\"\nCOPY assets/docker-entrypoint.sh assets/docker-healthcheck.sh /\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n      ca-certificates openssl tzdata curl jq \\\n      fontconfig fonts-dejavu fonts-freefont-ttf fonts-liberation fonts-linuxlibertine \\\n      hunspell hunspell-en-au hunspell-en-ca hunspell-en-gb hunspell-en-us hunspell-en-za \\\n      tesseract-ocr tesseract-ocr-eng \\\n      ffmpeg libavcodec-extra sox synfig \\\n      nfs-common netcat-openbsd \\\n && javac \"${OPENCAST_SCRIPTS}/TryToConnectToDb.java\" \\\n && rm -rf /tmp/* /var/lib/apt/lists/* \"${OPENCAST_SCRIPTS}/TryToConnectToDb.java\"\n\nWORKDIR \"${OPENCAST_HOME}\"\n\nEXPOSE 8080\nVOLUME [ \"${OPENCAST_DATA}\" ]\n\nHEALTHCHECK --timeout=10s CMD /docker-healthcheck.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"app:start\"]\n"
}