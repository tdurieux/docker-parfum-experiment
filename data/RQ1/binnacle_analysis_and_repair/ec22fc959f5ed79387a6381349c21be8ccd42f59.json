{
  "startTime": 1674235171602,
  "endTime": 1674235171874,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 45,
        "columnStart": 22,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 45,
        "columnStart": 22,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nENV GOPATH /opt/go\n\n# Get dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  git \\\n  golang \\\n  gcc \\\n  libleptonica-dev \\\n  libtesseract3 \\\n  libtesseract-dev \\\n  tesseract-ocr \\\n  tesseract-ocr-eng \\\n  tesseract-ocr-ara \\\n  tesseract-ocr-bel \\\n  tesseract-ocr-ben \\\n  tesseract-ocr-bul \\\n  tesseract-ocr-ces \\\n  tesseract-ocr-dan \\\n  tesseract-ocr-deu \\\n  tesseract-ocr-ell \\\n  tesseract-ocr-fin \\\n  tesseract-ocr-fra \\\n  tesseract-ocr-heb \\\n  tesseract-ocr-hin \\\n  tesseract-ocr-ind \\\n  tesseract-ocr-isl \\\n  tesseract-ocr-ita \\\n  tesseract-ocr-jpn \\\n  tesseract-ocr-kor \\\n  tesseract-ocr-nld \\\n  tesseract-ocr-nor \\\n  tesseract-ocr-pol \\\n  tesseract-ocr-por \\\n  tesseract-ocr-ron \\\n  tesseract-ocr-rus \\\n  tesseract-ocr-spa \\\n  tesseract-ocr-swe \\\n  tesseract-ocr-tha \\\n  tesseract-ocr-tur \\\n  tesseract-ocr-ukr \\\n  tesseract-ocr-vie \\\n  tesseract-ocr-chi-sim \\\n  tesseract-ocr-chi-tra && rm -rf /var/lib/apt/lists/*;\n\n# In theory, should be able to set export TESSDATA_PREFIX=/usr/share/tesseract-ocr/,\n# but when I tried I still got error: Error opening data file /usr/local/share/tessdata/eng.traineddata\n# Workaround: just copy the data to where it expects\nRUN mkdir -p /usr/local/share/tessdata/ && \\\n    cp -R /usr/share/tesseract-ocr/tessdata/* /usr/local/share/tessdata/\n\nRUN mkdir -p $GOPATH\n\n# go get open-ocr\nRUN go get -u -v -t github.com/tleyden/open-ocr\n\n# build open-ocr-httpd binary and copy it to /usr/bin\nRUN cd $GOPATH/src/github.com/tleyden/open-ocr/cli-httpd && go build -v -o open-ocr-httpd && cp open-ocr-httpd /usr/bin\n\n# build open-ocr-worker binary and copy it to /usr/bin\nRUN cd $GOPATH/src/github.com/tleyden/open-ocr/cli-worker && go build -v -o open-ocr-worker && cp open-ocr-worker /usr/bin\n\n"
}