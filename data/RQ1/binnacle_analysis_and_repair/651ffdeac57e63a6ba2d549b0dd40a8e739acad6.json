{
  "startTime": 1674239875920,
  "endTime": 1674239876114,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 5,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM opensuse:42.3\n\n# Install core dev packages\nRUN zypper ref\nRUN zypper in -y gcc gcc-c++ gcc-fortran git make curl tar f2c glibc-locale \\\n  glibc-devel libbz2-devel pkg-config libzmq-devel zlib-devel gdb vim valgrind\n\n# Workaround so pgi can find g77\nWORKDIR /usr/bin\nRUN ln -s gfortran g77\n\n# Install libfabric\nWORKDIR /opt/libfabric\nRUN curl -f -L https://github.com/ofiwg/libfabric/releases/download/v1.6.0/libfabric-1.6.0.tar.bz2 | tar -xj \\\n  && cd libfabric-1.6.0 \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/libfabric/1.6.0 --libdir=/opt/libfabric/1.6.0/lib64 \\\n  && make -j8 install \\\n  && cd .. \\\n  && rm -rf libfabric-1.6.0\n\n# Install the CMake binary\nWORKDIR /opt/cmake/3.13.1\nRUN curl -f -L https://cmake.org/files/v3.13/cmake-3.13.1-Linux-x86_64.tar.gz | \\\n     tar --strip-components=1 -xz \\\n  && pushd /usr/local/bin \\\n  && ln -s /opt/cmake/3.13.1/bin/ctest \\\n  && ln -s /opt/cmake/3.13.1/bin/cmake \\\n  && ln -s /opt/cmake/3.13.1/bin/cpack\n\n# Install PGI compiler\nWORKDIR /tmp/pgi-install\nRUN curl -f -L 'https://data.kitware.com/api/v1/file/5c1a8caa8d777f072bdbfafb/download' | tar -xz\nRUN export \\\n      PGI_SILENT=true \\\n      PGI_ACCEPT_EULA=accept \\\n      PGI_INSTALL_DIR=/opt/pgi \\\n      PGI_INSTALL_NVIDIA=false \\\n      PGI_INSTALL_JAVA=false \\\n      PGI_INSTALL_MPI=true \\\n      PGI_MPI_GPU_SUPPORT=false \\\n  && ./install\n\nRUN zypper in -y environment-modules \\\n  && echo 'export MODULEPATH=/opt/pgi/modulefiles:${MODULEPATH}' > /etc/profile.d/pgi-modules.sh \\\n  && echo 'setenv MODULEPATH /opt/pgi/modulefiles:${MODULEPATH}' > /etc/profile.d/pgi-modules.csh\n\n# Create a non-root user to run the builds/tests\nRUN export uid=1001 gid=1001 && \\\n    mkdir -p /home/adios2 && \\\n    echo \"adios2:x:${uid}:${gid}:adios2,,,:/home/adios2:/bin/bash\" >> /etc/passwd && \\\n    echo \"adios2:x:${uid}:\" >> /etc/group && \\\n    chown ${uid}:${gid} -R /home/adios2\n\n# Install and initialize git-lfs\nRUN curl -f -s https://packagecloud.io/install/repositories/github/git-lfs/script.rpm.sh | bash && \\\n    zypper in -y git-lfs && \\\n    runuser -l adios2 -c 'git lfs install'\n\n# Misc cleanup of unneeded files\nRUN rm -rf /tmp/* \\\n  && zypper clean\n\nUSER adios2\nENV HOME /home/adios2\nWORKDIR /home/adios2\nCMD /bin/bash\n"
}