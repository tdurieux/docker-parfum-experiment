{
  "startTime": 1674234947964,
  "endTime": 1674234948254,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 7,
        "columnEnd": 86
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 2,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 5,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lablup/common-bazel:0.11-debian as bazel-binary\n\n# Build target: lablup/common-tensorflow:1.7-py36-mkl\n# ref: https://github.com/tatsushid/docker-alpine-py3-tensorflow-jupyter/blob/master/Dockerfile\nFROM lablup/kernel-python:3.6-conda\n\nCOPY --from=bazel-binary /usr/local/bin/bazel /usr/local/bin/\n\nRUN install_packages libcups2 && \\\n    echo \"deb http://http.debian.net/debian jessie-backports main\" | \\\n        tee --append /etc/apt/sources.list.d/jessie-backports.list > /dev/null && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends -t jessie-backports openjdk-8-jdk-headless && \\\n    install_packages \\\n        imagemagick \\\n        graphviz \\\n        cmake \\\n        curl \\\n        build-essential \\\n        perl \\\n        rsync \\\n        sed \\\n        swig \\\n        git-core \\\n        unzip zip && rm -rf /var/lib/apt/lists/*;\n\n# Check Bazel is runnable.\nRUN bazel version\n\nENV MKL_VERSION 2018.2.199\n\n# Install MKL\nRUN cd /tmp && \\\n  wget https://registrationcenter-download.intel.com/akdlm/irc_nas/tec/12725/l_mkl_${MKL_VERSION}.tgz \\\n  && tar -xzf l_mkl_${MKL_VERSION}.tgz && \\\n  cd l_mkl_${MKL_VERSION} && \\\n  sed -i 's/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g' silent.cfg && \\\n  ./install.sh -s silent.cfg && \\\n  cd .. && \\\n  rm -rf * && rm l_mkl_${MKL_VERSION}.tgz\n\nRUN echo \"/opt/intel/mkl/lib/intel64\" >> /etc/ld.so.conf.d/intel.conf && \\\n  ldconfig && \\\n  echo \". /opt/intel/bin/compilervars.sh intel64\" >> /etc/bash.bashrc\n\n# Install numpy with MKL\nRUN pip install --no-cache-dir Cython\n\nRUN cd /tmp && \\\n  git clone https://github.com/numpy/numpy.git numpy && \\\n  cd numpy && \\\n  cp site.cfg.example site.cfg && \\\n  echo \"\\n[mkl]\" >> site.cfg && \\\n  echo \"include_dirs = /opt/intel/mkl/include/intel64/\" >> site.cfg && \\\n  echo \"library_dirs = /opt/intel/mkl/lib/intel64/\" >> site.cfg && \\\n  echo \"mkl_libs = mkl_rt\" >> site.cfg && \\\n  echo \"lapack_libs =\" >> site.cfg && \\\n  python setup.py build --fcompiler=gnu95 && \\\n  python setup.py install\n\n# Install scipy\nRUN cd /tmp && \\\n  git clone https://github.com/scipy/scipy.git scipy && \\\n  cd scipy && \\\n  python setup.py build && \\\n  python setup.py install\n\n# Limit the system resource used during compilation\nENV LOCAL_RESOURCES 4096,8.0,1.0\n\n# The TensorFlow version\nENV TF_VERSION 1.7\n\nRUN : build TensorFlow pip package \\\n    && cd /tmp \\\n    && curl -f -SL https://github.com/tensorflow/tensorflow/archive/r${TF_VERSION}.tar.gz \\\n        | tar xzf -\nRUN cd /tmp/tensorflow-r${TF_VERSION} \\\n    # temporary fix for tensorflow/tensorflow#12979\n    && sed -i '\\@https://github.com/google/protobuf/archive/0b059a3d8a8f8aa40dde7bea55edca4ec5dfea66.tar.gz@d' tensorflow/workspace.bzl \\\n    && PYTHON_BIN_PATH=/usr/local/bin/python \\\n        PYTHON_LIB_PATH=/usr/local/lib/python3.6/site-packages \\\n        GCC_HOST_COMPILER_PATH=/usr/bin/gcc \\\n        CC_OPT_FLAGS=\"-march=x86-64 -mavx -mavx2 -mfma -mfpmath=both -msse4.1 -msse4.2\" \\\n        ENV CI_BUILD_PYTHON=python \\\n        LD_LIBRARY_PATH=${LD_LIBRARY_PATH} \\\n        PYTHON_BIN_PATH=/usr/bin/python \\\n        PYTHON_LIB_PATH=/usr/local/lib/python3.6/dist-packages \\\n        CC_OPT_FLAGS='-march=native' \\\n        TF_NEED_JEMALLOC=1 \\\n        TF_NEED_S3=0 \\\n        TF_NEED_GDR=0 \\\n        TF_NEED_VERBS=0 \\\n        TF_NEED_MKL=1 \\\n        TF_NEED_JEMALLOC=1 \\\n        TF_NEED_GCP=0 \\\n        TF_NEED_HDFS=0 \\\n        TF_ENABLE_XLA=0 \\\n        TF_NEED_VERBS=0 \\\n        TF_NEED_OPENCL=0 \\\n        TF_NEED_CUDA=0 \\\n        TF_NEED_MPI=0 \\\n        bash configure \\\n    && bazel build \\\n        --config=opt --local_resources ${LOCAL_RESOURCES} \\\n        --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" \\\n        //tensorflow/tools/pip_package:build_pip_package \\\n    && ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n\nRUN ls -l /tmp/tensorflow_pkg\n\n# vim: ft=dockerfile\n"
}