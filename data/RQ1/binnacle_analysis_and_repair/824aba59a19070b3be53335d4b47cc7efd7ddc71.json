{
  "startTime": 1674241531982,
  "endTime": 1674241532290,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 5,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# GENERATED FILE, DO NOT MODIFY!\n# To update this file please edit the relevant template and run the generation\n# task `build/dockerfile_writer.rb`\n\n# See doc/docker/README.md or https://github.com/instructure/canvas-lms/tree/master/doc/docker\nFROM instructure/ruby-passenger:2.4-xenial\n\nENV APP_HOME /usr/src/app/\nENV RAILS_ENV \"production\"\nENV NGINX_MAX_UPLOAD_SIZE 10g\nENV YARN_VERSION 1.16.0-1\n\n# Work around github.com/zertosh/v8-compile-cache/issues/2\n# This can be removed once yarn pushes a release including the fixed version\n# of v8-compile-cache.\nENV DISABLE_V8_COMPILE_CACHE 1\n\nUSER root\nWORKDIR /root\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash - \\\n  && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n  && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list \\\n  && printf 'path-exclude /usr/share/doc/*\\npath-exclude /usr/share/man/*' > /etc/dpkg/dpkg.cfg.d/01_nodoc \\\n  && apt-get update -qq \\\n  && apt-get install -qqy --no-install-recommends \\\n       nodejs \\\n       yarn=\"$YARN_VERSION\" \\\n       libxmlsec1-dev \\\n       python-lxml \\\n       libicu-dev \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && mkdir -p /home/docker/.gem/ruby/$RUBY_MAJOR.0\n\nRUN if [ -e /var/lib/gems/$RUBY_MAJOR.0/gems/bundler-* ]; then BUNDLER_INSTALL=\"-i /var/lib/gems/$RUBY_MAJOR.0\"; fi \\\n  && gem uninstall --all --ignore-dependencies --force $BUNDLER_INSTALL bundler \\\n  && gem install bundler --no-document -v 1.17.3 \\\n  && find $GEM_HOME ! -user docker | xargs chown docker:docker\n\n\nWORKDIR $APP_HOME\n\nCOPY . $APP_HOME\n\n# optimizing for size here ... get all the dev dependencies so we can\n# compile assets, then throw away everything we don't need\n#\n# the privilege dropping could be slightly less verbose if we ever add\n# gosu (here or upstream)\n#\n# TODO: once we have docker 17.05+ everywhere, do this via multi-stage\n# build\n\nRUN bash -c ' \\\n  # bash cuz better globbing and comments \\\n  set -e; \\\n  \\\n  sudo -u docker -E env HOME=/home/docker PATH=$PATH bundle install --jobs 8; \\\n  yarn install --pure-lockfile; \\\n  COMPILE_ASSETS_NPM_INSTALL=0 bundle exec rake canvas:compile_assets; \\\n  \\\n  # downgrade to prod dependencies \\\n  sudo -u docker -E env HOME=/home/docker PATH=$PATH bundle install --without test development; \\\n  sudo -u docker -E env HOME=/home/docker PATH=$PATH bundle clean --force; \\\n  yarn install --prod; \\\n  \\\n  # now some cleanup... \\\n  rm -rf \\\n    /home/docker/.bundle/cache \\\n    $GEM_HOME/cache \\\n    $GEM_HOME/bundler/gems/*/{.git,spec,test,features} \\\n    $GEM_HOME/gems/*/{spec,test,features} \\\n    `yarn cache dir` \\\n    /root/.node-gyp \\\n    /tmp/phantomjs \\\n    .yardoc \\\n    client_apps/canvas_quizzes/{tmp,node_modules} \\\n    config/locales/generated \\\n    gems/*/node_modules \\\n    gems/plugins/*/node_modules \\\n    log \\\n    public/dist/maps \\\n    public/doc/api/*.json \\\n    public/javascripts/translations \\\n    tmp-*.tmp'\n\nUSER docker\n"
}