{
  "startTime": 1674240729774,
  "endTime": 1674240729982,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:bionic\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\nRUN apt-get update -qq\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends --no-install-suggests \\\n    sudo \\\n    unzip \\\n    gnupg2 \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main\" >> /etc/apt/sources.list\nRUN echo \"deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-6.0 main\" >> /etc/apt/sources.list\nRUN wget --no-check-certificate -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -\nRUN apt-get update -qq\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends --no-install-suggests \\\n    curl \\\n    unzip \\\n    build-essential \\\n    ninja-build \\\n    clang-6.0 \\\n    lld-6.0 \\\n    clang-8 \\\n    lld-8 \\\n    python3-minimal \\\n    python3-pip \\\n    python3-setuptools \\\n    git \\\n    pkg-config \\\n    libz-dev \\\n    libpng-dev \\\n    libepoxy-dev \\\n    libfreenect-dev \\\n    libglfw3-dev \\\n    libglm-dev \\\n    libpcl-dev \\\n    openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get clean\n\n# Workaround multiple bugs in Ubuntu's libpcl-dev package :(\n# Re: https://bugs.launchpad.net/ubuntu/+source/pcl/+bug/1738902\nRUN sed -i 's/pcl_2d-1.8//' /usr/lib/x86_64-linux-gnu/pkgconfig/pcl_features-1.8.pc && \\\n    sed -i 's/Requires:/Requires: eigen3 /g' /usr/lib/x86_64-linux-gnu/pkgconfig/pcl_common-1.8.pc\n\n# Installs Android NDK and creates the toolchain\nENV ANDROID_NDK_VERSION r18b\nENV ANDROID_TARGET_API 28\nENV ANDROID_NDK_HOME /android-ndk-${ANDROID_NDK_VERSION}\nENV ANDROID_NDK_FILENAME android-ndk-${ANDROID_NDK_VERSION}-linux-x86_64.zip\nENV ANDROID_TOOLCHAIN /android-arm-toolchain-${ANDROID_TARGET_API}\nENV PATH ${ANDROID_TOOLCHAIN}/bin:$PATH\nRUN echo \"Downloading android-ndk\" >&2 && \\\n    wget --no-check-certificate --no-verbose https://dl.google.com/android/repository/${ANDROID_NDK_FILENAME} && \\\n    echo \"Extracting android-ndk\" >&2 && \\\n    unzip ${ANDROID_NDK_FILENAME} && \\\n    mkdir -p ${ANDROID_TOOLCHAIN} && \\\n    ${ANDROID_NDK_HOME}/build/tools/make_standalone_toolchain.py \\\n        --force \\\n        --install-dir ${ANDROID_TOOLCHAIN} \\\n        --arch arm \\\n        --api ${ANDROID_TARGET_API} \\\n        --stl libc++ && \\\n    rm ${ANDROID_NDK_FILENAME}\n\n# Installs Android SDK\nENV ANDROID_BUILD_TOOLS 28.0.3\nENV ANDROID_SDK_VERSION 4333796\nENV ANDROID_SDK_FILENAME sdk-tools-linux-${ANDROID_SDK_VERSION}.zip\nENV ANDROID_HOME /android-sdk\nENV PATH ${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools\n\nRUN mkdir -p ${ANDROID_HOME} && \\\n    echo \"Downloading android-sdk\" >&2 && \\\n    wget --no-check-certificate --no-verbose https://dl.google.com/android/repository/${ANDROID_SDK_FILENAME} && \\\n    echo \"Extracting android-sdk\" >&2 && \\\n    unzip ${ANDROID_SDK_FILENAME} -d ${ANDROID_HOME} && \\\n    rm ${ANDROID_SDK_FILENAME}\n\nRUN yes | sdkmanager --licenses\nRUN sdkmanager \"tools\" \"platform-tools\"\nRUN yes | sdkmanager \\\n    \"platforms;android-${ANDROID_TARGET_API}\" \\\n    \"build-tools;${ANDROID_BUILD_TOOLS}\" \\\n    \"platform-tools\"\n\nADD windows-sdk /windows-sdk\n\nCMD [\"/bin/bash\"]\n"
}