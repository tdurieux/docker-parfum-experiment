{
  "startTime": 1674246347244,
  "endTime": 1674246347318,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 39,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 39,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# are we building cpu or gpu image?\n#\nARG hardware=\"cpu\"\n\nFROM tensorflow/tensorflow:1.12.0-py3 as base-env-cpu\nSHELL [\"/bin/bash\", \"-c\"]\nWORKDIR /app\nCOPY requirements-cpu.txt ./requirements.txt\nENV tnpp_hw=\"cpu\"\n#drop TF from requirements, it comes with the image\nRUN sed -i '/tensorflow/d' ./requirements.txt\n\nFROM tensorflow/tensorflow:1.12.0-gpu-py3 as base-env-gpu\nSHELL [\"/bin/bash\", \"-c\"]\nWORKDIR /app\nCOPY requirements-gpu.txt ./requirements.txt\nENV tnpp_hw=\"gpu\"\n#drop TF from requirements, it comes with the image\nRUN sed -i '/tensorflow/d' ./requirements.txt\n\nFROM base-env-${hardware}\nSHELL [\"/bin/bash\", \"-c\"]\nWORKDIR /app\nRUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y locales && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LC_ALL=en_US.UTF-8\nRUN pip3 install --no-cache-dir -r requirements.txt\nCOPY *.py ./\nCOPY Parser-v2 ./Parser-v2\nCOPY tokenizer ./tokenizer\nCOPY universal-lemmatizer ./universal-lemmatizer\nCOPY docker_entry_point.sh list_models.sh ./\nEXPOSE 7689\nENTRYPOINT [\"./docker_entry_point.sh\"]\nCMD [\"stream\",\"fi_tdt\",\"parse_plaintext\"]\n\n"
}