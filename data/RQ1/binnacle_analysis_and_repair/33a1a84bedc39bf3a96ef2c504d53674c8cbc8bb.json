{
  "startTime": 1674234742132,
  "endTime": 1674234742329,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 105
      }
    }
  ],
  "repairedDockerfile": "# Commencing\nFROM ubuntu:18.04\n\n\n# System Setup\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n\t&& apt-get install --no-install-recommends -y vim \\\n\t\topenssl \\\n\t\tlibssl-dev \\\n\t\tlibcurl4-openssl-dev \\\n\t\tgit \\\n\t\tgpg \\\n\t\tlibomp-dev \\\n\t\tlibeigen3-dev \\\n\t\tgsl-bin \\\n\t\tlibgslcblas0 \\\n\t\tlibgsl23 \\\n\t\tlibgsl-dev \\\n\t\tlibxml2-dev && rm -rf /var/lib/apt/lists/*;\n\n\n# Install python3\nRUN apt-get install --no-install-recommends -y python3-venv python3-pip python3-dev build-essential cmake && rm -rf /var/lib/apt/lists/*;\nRUN python3 -m pip install --upgrade pip setuptools wheel\nRUN pip3 install --no-cache-dir pandas\n\n\n# Install R\n#httpv:/ cran.rs.udio.com/bin/linux/ubuntu/\n#RUN sh -c 'echo \"deb http://cran.rstudio.com/bin/linux/ubuntu/bionic-cran35/\" >> /etc/apt/sources.list'\n#RUN sh -c \"echo \\\"deb http://cran.rstudio.com/bin/linux/ubuntu bionic-cran35/\\\" >> /etc/apt/sources.list\"\n#RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9\n#RUN apt-get -y update\n#RUN apt-get -y install r-base\n#RUN apt-get -y install r-base-dev\n#RUN apt-get -y install r-recommended\n#ENV DEBIAN_FRONTEND noninteractive\n\n\n### Copied from https://github.com/rocker-org/rocker/blob/master/r-ubuntu/Dockerfile\n# Now install R and littler, and create a link for littler in /usr/local/bin\n# Default CRAN repo is now set by R itself, and littler knows about it too\n# r-cran-docopt is not currently in c2d4u so we install from source\nRUN apt-get update \\\n\t    && apt-get install -y --no-install-recommends \\\n\t             littler \\\n\t\t r-base \\\n\t\t r-base-dev \\\n\t\t r-recommended \\\n\t&& ln -s /usr/lib/R/site-library/littler/examples/install.r /usr/local/bin/install.r \\\n\t&& ln -s /usr/lib/R/site-library/littler/examples/install2.r /usr/local/bin/install2.r \\\n\t&& ln -s /usr/lib/R/site-library/littler/examples/installGithub.r /usr/local/bin/installGithub.r \\\n\t&& ln -s /usr/lib/R/site-library/littler/examples/testInstalled.r /usr/local/bin/testInstalled.r \\\n\t&& install.r docopt \\\n\t&& rm -rf /tmp/downloaded_packages/ /tmp/*.rds \\\n\t&& rm -rf /var/lib/apt/lists/*\n###\n\n\n\n\n# Install RerF in various flavors\n\n## Py-RerF\nRUN pip3 install --no-cache-dir --no-binary rerf rerf\n\n\n\n## R-RerF\n### install cran version first for dependancies.\nRUN Rscript -e \"install.packages('rerf', repos = 'https://cloud.r-project.org', dependencies = TRUE)\"\nRUN Rscript -e \"install.packages('styler', repos = 'https://cloud.r-project.org')\"\n\nRUN mkdir /home/Downloads\nRUN mkdir /home/.ssh\n\nWORKDIR /home/Downloads\n\n### Install dev-version\nRUN git clone https://github.com/neurodata/RerF.git\n## defaults to the staging branch\nRUN cd RerF; Rscript -e \"install.packages('R-Project/', type = 'source', repos = NULL)\"\n\nWORKDIR /home/\n\nCMD [\"/bin/bash\"]\n"
}