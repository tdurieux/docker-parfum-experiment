{
  "startTime": 1674252788599,
  "endTime": 1674252788798,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 1,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tensorflow/serving:1.11.0-gpu as tensorflow_serving_image\nFROM nvidia/cuda:9.0-base-ubuntu16.04\n\nLABEL maintainer=\"Amazon AI\"\nLABEL com.amazonaws.sagemaker.capabilities.accept-bind-to-port=true\n\nARG framework_installable\nARG framework_support_installable=sagemaker_tensorflow_container-1.0.0.tar.gz\n\nENV NCCL_VERSION=2.3.5-2+cuda9.0\nENV CUDNN_VERSION=7.3.1.20-1+cuda9.0\nENV TF_TENSORRT_VERSION=4.1.2\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        cuda-command-line-tools-9-0 \\\n        cuda-cublas-9-0 \\\n        cuda-cufft-9-0 \\\n        cuda-curand-9-0 \\\n        cuda-cusolver-9-0 \\\n        cuda-cusparse-9-0 \\\n        libcudnn7=${CUDNN_VERSION} \\\n        libnccl2=${NCCL_VERSION} \\\n        libgomp1 \\\n        python-dev \\\n        curl \\\n        nginx \\\n        && \\\n# The 'apt-get install' of nvinfer-runtime-trt-repo-ubuntu1604-4.0.1-ga-cuda9.0\n# adds a new list which contains libnvinfer library, so it needs another\n# 'apt-get update' to retrieve that list before it can actually install the\n# library.\n# We don't install libnvinfer-dev since we don't need to build against TensorRT,\n# and libnvinfer4 doesn't contain libnvinfer.a static library.\n    apt-get update && apt-get install -y --no-install-recommends \\\n        nvinfer-runtime-trt-repo-ubuntu1604-4.0.1-ga-cuda9.0 && \\\n    apt-get update && apt-get install -y --no-install-recommends \\\n        libnvinfer4=${TF_TENSORRT_VERSION}-1+cuda9.0 && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm /usr/lib/x86_64-linux-gnu/libnvinfer_plugin* && \\\n    rm /usr/lib/x86_64-linux-gnu/libnvcaffe_parser* && \\\n    rm /usr/lib/x86_64-linux-gnu/libnvparsers*\n\n# Python wonâ€™t try to write .pyc or .pyo files on the import of source modules\nENV PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1\n\n# Removing tests to free some space\nRUN set -ex; \\\n\tcurl -f -k -O https://bootstrap.pypa.io/get-pip.py && \\\n\tpython get-pip.py \\\n\t\t--disable-pip-version-check \\\n\t\t--no-cache-dir \\\n\t\t\"pip==18.1\" \\\n\t; \\\n\tpip --version; \\\n\tfind /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' +; \\\n\trm -f get-pip.py\n\nWORKDIR /\n\n# Install TF Serving pkg\nCOPY --from=tensorflow_serving_image /usr/bin/tensorflow_model_server /usr/bin/tensorflow_model_server\n\n\nCOPY $framework_installable .\nCOPY $framework_support_installable .\n\nRUN pip install -U --no-cache-dir \\\n    numpy \\\n    scipy \\\n    sklearn \\\n    pandas \\\n    Pillow \\\n    h5py \\\n    tensorflow-serving-api==1.11.0 \\\n    \\\n    $framework_installable \\\n    $framework_support_installable \\\n    \"sagemaker-tensorflow>=1.11,<1.12\" && \\\n    \\\n    rm $framework_installable && \\\n    rm $framework_support_installable && \\\n    pip uninstall -y --no-cache-dir \\ \n    markdown \\\n    tensorboard\n\n# entry.py comes from sagemaker-container-support\nENTRYPOINT [\"entry.py\"]\n"
}