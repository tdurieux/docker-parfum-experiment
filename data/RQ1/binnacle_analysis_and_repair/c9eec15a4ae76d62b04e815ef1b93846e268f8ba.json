{
  "startTime": 1674239405607,
  "endTime": 1674239405794,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8-slim\n\nARG RUM_AGENT_BRANCH=master\nARG RUM_AGENT_REPO=elastic/apm-agent-rum-js\nARG APM_SERVER_URL\n\nRUN apt-get -qq update \\\n    && apt-get -qq --no-install-recommends install -yq libgconf-2-4 \\\n    && apt-get -qq install -y curl git --no-install-recommends \\\n    && curl -f -L https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n    && apt-get -qq update \\\n    && apt-get -qq install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont \\\n      --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get -qq purge --auto-remove -y \\\n    && rm -rf /src/*.deb\n\n# It's a good idea to use dumb-init to help prevent zombie chrome processes.\nADD https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 /usr/local/bin/dumb-init\nRUN chmod +x /usr/local/bin/dumb-init\n\nRUN git clone https://github.com/${RUM_AGENT_REPO}.git /rumjs-integration-test\nRUN (cd /rumjs-integration-test \\\n  && git fetch -q origin '+refs/pull/*:refs/remotes/origin/pr/*' \\\n  && git checkout ${RUM_AGENT_BRANCH})\n\nWORKDIR /rumjs-integration-test\n\nRUN npm install && npm cache clean --force;\n\nRUN npx lerna run build && npx lerna run build:e2e\n\n# Add user so we don't need --no-sandbox.\nRUN groupadd -r pptruser && useradd -r -g pptruser -G audio,video pptruser \\\n    && mkdir -p /home/pptruser/Downloads \\\n    && chown -R pptruser:pptruser /home/pptruser \\\n    && chown -R pptruser:pptruser /rumjs-integration-test/node_modules\n\n# Run everything after as non-privileged user.\nUSER pptruser\n\nENTRYPOINT [\"dumb-init\", \"--\"]\n\nCOPY run.sh /run.sh\n\nEXPOSE 8000 9222\n\nCMD [ \"/bin/bash\", \"/run.sh\" ]\n"
}