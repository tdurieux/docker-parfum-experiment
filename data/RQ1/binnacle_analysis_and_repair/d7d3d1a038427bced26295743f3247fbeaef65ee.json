{
  "startTime": 1674246565157,
  "endTime": 1674246565251,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 54,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nLABEL maintainer=\"c0deh4cker@gmail.com\"\n\n# Add support for running 32-bit executables\nRUN dpkg --add-architecture i386 && apt-get update && apt-get install --no-install-recommends -y libc6:i386 && rm -rf /var/lib/apt/lists/*\n\n# Copy PwnableHarness libraries to /usr/local/lib\nCOPY libpwnableharness32.so libpwnableharness64.so /usr/local/lib/\n\n# Copy preload libraries to their respective $LIB paths\nCOPY pwnablepreload32.so /lib/i386-linux-gnu/pwnablepreload.so\nCOPY pwnablepreload64.so /lib/x86_64-linux-gnu/pwnablepreload.so\n\n# Copy pwnable server program to /usr/local/bin\nCOPY pwnableserver /usr/local/bin/\n\n# Set privileges of everything\nRUN chmod 0755 \\\n\t/usr/local/lib/libpwnableharness32.so \\\n\t/usr/local/lib/libpwnableharness64.so \\\n\t/lib/i386-linux-gnu/pwnablepreload.so \\\n\t/lib/x86_64-linux-gnu/pwnablepreload.so \\\n\t/usr/local/bin/pwnableserver\n\n# Just run bash shell when no command is given. This isn't intended\n# to be a runnable docker image anyway\nCMD /bin/bash\n\n\n# RUNTIME_NAME is the name of both the user and executable\nONBUILD ARG RUNTIME_NAME\nONBUILD ENV RUNTIME_NAME=$RUNTIME_NAME\n\n# Create the user this challenge runs as\nONBUILD RUN useradd -m -s /bin/bash -U $RUNTIME_NAME\n\n# Copy the executable to the new user's home directory. It\n# will be owned and only writeable by root.\nONBUILD WORKDIR /home/$RUNTIME_NAME\nONBUILD COPY $RUNTIME_NAME ./\nONBUILD RUN chmod 0755 $RUNTIME_NAME\n\n# If given a flag, write it to the given destination file\nONBUILD ARG FLAG=\nONBUILD ARG FLAG_DST=flag.txt\nONBUILD RUN if [ -n \"$FLAG\" -a -n \"$FLAG_DST\" ]; then \\\n\t\techo \"$FLAG\" > \"$FLAG_DST\" && \\\n\t\tchown \"root:$RUNTIME_NAME\" \"$FLAG_DST\" && \\\n\t\tchmod 0640 \"$FLAG_DST\"; \\\n\tfi\n\n# Which port is exposed by this docker container\nONBUILD ARG PORT\nONBUILD ENV PORT=$PORT\nONBUILD EXPOSE $PORT\n\n# Is there a time limit specified for this docker container?\nONBUILD ARG TIMELIMIT\nONBUILD ENV TIMELIMIT=$TIMELIMIT\n\n# Run the executable without a chroot since this is already running in a\n# Docker container. Also specify the username explicitly in case the\n# default is different. We inject the pwnablepreload.so library into the\n# spawned challenge process to set the buffering mode of stdout & stderr\n# to unbuffered.\nONBUILD ENTRYPOINT [ \\\n\t\"/bin/sh\", \\\n\t\"-c\", \\\n\t\"exec /usr/local/bin/pwnableserver --listen --no-chroot --alarm $TIMELIMIT --port $PORT --user $RUNTIME_NAME --inject '/$LIB/pwnablepreload.so' --exec /home/$RUNTIME_NAME/$RUNTIME_NAME\" \\\n]\n"
}