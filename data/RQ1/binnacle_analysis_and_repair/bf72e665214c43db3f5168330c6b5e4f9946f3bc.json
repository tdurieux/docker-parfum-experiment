{
  "startTime": 1674252046747,
  "endTime": 1674252046977,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 27,
        "columnEnd": 36
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest as buildcontainer\n\nARG DEBIAN_FRONTEND=noninteractive\nENV GOSU_VERSION 1.11\n\n# hybris needs unzip and lsof for the solr server setup\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends ca-certificates wget \\\n    && apt-get install --no-install-recommends -y --install-recommends gnupg2 dirmngr && rm -rf /var/lib/apt/lists/*;\n\n# grab gosu for easy step-down from root\nRUN set -x \\\n    && dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\" \\\n    && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" \\\n    && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n    && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n    && command -v gpgconf && gpgconf --kill all || : \\\n    && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n    && chmod +x /usr/local/bin/gosu \\\n    && gosu --version \\\n    && gosu nobody true && rm -rf -d\n\n\nFROM ubuntu:latest\nMAINTAINER Stefan Lehmann <stefan.lehmann@oxaion.de>\n\nARG HYBRIS_HOME=/home/hybris\n\nARG VCS_REF\nLABEL org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-url=\"https://github.com/stefanleh/hybris-base-image\"\n\nARG DEBIAN_FRONTEND=noninteractive\n\n# hybris needs the JAVA_HOME environment variable even if java is in path\nENV JAVA_HOME /usr/lib/jvm/java-8-oracle\n\n# hybris needs unzip and lsof for the solr server setup\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends software-properties-common apt-utils ca-certificates net-tools curl unzip lsof wget \\\n    && add-apt-repository ppa:webupd8team/java \\\n    && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \\\n    && apt-get install --no-install-recommends -y oracle-java8-installer \\\n    && apt-get autoclean && apt-get --purge -y autoremove \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/cache/* /usr/lib/jvm/java-8-oracle/*src.zip\n\n# copy gosu from buildcontainer over\nCOPY --from=buildcontainer /usr/local/bin/gosu /usr/local/bin/gosu\n\n# set the PLATFORM_HOME environment variable used by hybris\nENV PLATFORM_HOME=${HYBRIS_HOME}/bin/platform/\nENV PATH=$PLATFORM_HOME:$PATH\nENV HYBRIS_HOME=${HYBRIS_HOME}\n\n# add hybris user\nRUN useradd -d ${HYBRIS_HOME} -u 1000 -m -s /bin/bash hybris\n\n# define hybris home dir as volume\nVOLUME ${HYBRIS_HOME}\n\n# expose hybris ports\nEXPOSE 9001\nEXPOSE 9002\n\n# expose default solr port\nEXPOSE 8983\n\n# expose the default debug port for connecting via IDE\nEXPOSE 8000\n\n# copy the entrypoint script over\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\n# copy the update system config to image\nCOPY updateRunningSystem.config ${HYBRIS_HOME}/updateRunningSystem.config\n\nWORKDIR ${HYBRIS_HOME}\n\n# set entrypoint of container\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCMD [\"run\"]\n"
}