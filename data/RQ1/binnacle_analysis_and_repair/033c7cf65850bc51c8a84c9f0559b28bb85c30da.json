{
  "startTime": 1674234311833,
  "endTime": 1674234311896,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8-alpine as base \nLABEL maintainer=coderfox<docker@xfox.me> \n\n# install build tools \nRUN apk add --no-cache make gcc g++ python \nRUN yarn global add pkg pkg-fetch \n\nENV NODE node8 \nENV PLATFORM alpine \nENV ARCH x64 \nRUN pkg-fetch ${NODE} ${PLATFORM} ${ARCH} \n\n# install dependencies \nCOPY package.json /app/ \nCOPY yarn.lock /app/ \nWORKDIR /app \nRUN yarn install && yarn cache clean;\nRUN npm rebuild bcrypt --build-from-source \n\n# build server \nCOPY . . \nRUN ./node_modules/.bin/tsc --sourceMap false \n# build client \nWORKDIR /app/client \nENV PUBLIC_URL /app \nRUN yarn run build \n\n# build binary \nWORKDIR /app \nRUN pkg . --targets ${NODE}-${PLATFORM}-${ARCH} \\--out-path=build \nRUN cp ./node_modules/bcrypt/lib/binding/*.node build/ \nRUN cp ./node_modules/sqlite3/lib/binding/**/*.node build/ \n\nFROM node:8-alpine AS release \n\nCOPY \\--from=base /app/build /app \nWORKDIR /app \n\nEXPOSE 3000 \nCMD [ \"./clover\" ]\n\n"
}