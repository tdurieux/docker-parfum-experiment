{
  "startTime": 1674240366478,
  "endTime": 1674240366727,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 149
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 65,
        "columnStart": 5,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM angelsevillacamins/kubernetes-spark-libraries:latest\n\nMAINTAINER a.sevilla@anchormen.nl\n\nENV RSTUDIO_SERVER_VERSION 1.1.383\nENV PATH=/usr/lib/rstudio-server/bin:$PATH\n# `Z_VERSION` will be updated by `dev/change_zeppelin_version.sh`\nENV Z_VERSION=\"0.7.3\"\nENV LOG_TAG=\"[ZEPPELIN_${Z_VERSION}]:\" \\ \n    Z_HOME=\"/zeppelin\"\nENV MASTER spark://spark-master:7077\n\n## Symlink pandoc & standard pandoc templates for use system-wide\nRUN wget -q https://download2.rstudio.org/rstudio-server-${RSTUDIO_SERVER_VERSION}-amd64.deb \\\n  && dpkg -i rstudio-server-${RSTUDIO_SERVER_VERSION}-amd64.deb \\\n  && rm rstudio-server-*-amd64.deb \\\n  && ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc /usr/local/bin \\\n  && ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc-citeproc /usr/local/bin \\\n  && git clone https://github.com/jgm/pandoc-templates \\\n  && mkdir -p /opt/pandoc/templates \\\n  && cp -r pandoc-templates*/* /opt/pandoc/templates && rm -rf pandoc-templates* \\\n  && mkdir /root/.pandoc && ln -s /opt/pandoc/templates /root/.pandoc/templates \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/\n\n## Need to configure non-root user for RStudio\nRUN useradd rstudio \\\n  && echo \"rstudio:rstudio\" | chpasswd \\\n  && mkdir /home/rstudio \\\n  && chown rstudio:rstudio /home/rstudio \\\n  && addgroup rstudio staff\n\n## Prevent rstudio from deciding to use /usr/bin/R if a user apt-get installs a package \\\nRUN echo 'rsession-which-r=/usr/bin/R' >> /etc/rstudio/rserver.conf\n\n## use more robust file locking to avoid errors when using shared volumes:\nRUN echo 'lock-type=advisory' >> /etc/rstudio/file-locks\n\n## configure git not to request password each time\nRUN git config --system credential.helper 'cache --timeout=3600' \\\n  && git config --system push.default simple\n\nCOPY userconf.sh /\nRUN chmod +x /userconf.sh\n\n## Zeppelin\nRUN echo \"$LOG_TAG Download Zeppelin binary\" && \\\n    wget -q -O /tmp/zeppelin-${Z_VERSION}-bin-all.tgz https://archive.apache.org/dist/zeppelin/zeppelin-${Z_VERSION}/zeppelin-${Z_VERSION}-bin-all.tgz && \\\n    tar -zxvf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz && \\\n    rm -rf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz && \\\n    mv /zeppelin-${Z_VERSION}-bin-all ${Z_HOME}\nRUN echo \"$LOG_TAG Cleanup\" && \\\n    apt-get autoclean && \\\n    apt-get clean\n\nENV ZEPPELIN_PORT 8181\nENV ZEPPELIN_NOTEBOOK_DIR /persist/zeppelin\nENV SPARK_SUBMIT_OPTIONS '--conf spark.driver.maxResultSize=${SPARK_DRIVER_MAXRESULTSIZE} --conf spark.driver.cores=${SPARK_DRIVER_CORES}'\n\n## Add Zeppelin config files\nCOPY shiro.ini /zeppelin/conf/\n\n## Supervisor\nRUN apt-get -y update \\\n  && apt-get install -y --no-install-recommends \\\n  supervisor && rm -rf /var/lib/apt/lists/*;\n\n## Add conf files and log folder [to be used by supervisord]\nRUN mkdir -p /var/log/supervisor\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nRUN mkdir -p /var/log/spark-master\nRUN mkdir -p /var/log/rstudio/\nRUN mkdir -p /var/log/zeppelin/\n\nCMD [\"/usr/bin/supervisord\"]"
}