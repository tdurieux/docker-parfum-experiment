{
  "startTime": 1674248446295,
  "endTime": 1674248446451,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 1,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "FROM ananas-llvm:latest\n\nMAINTAINER Rink Springer <rink@rink.nu>\n\nRUN\tapt-get update && apt-get upgrade -y\n\n# we need python for libcxx, auto* for dash/coreutils, coreutils needs gettext,\n# autopoint and texinfo, dash want to build C code so that it can build\n# 'mknodes' and such (we install build-essential and gcc for that)\n# we use python3 for all our scripts, so add that\n# parted, dosfstools and syslinux is needed to build bootable images\nRUN apt-get install --no-install-recommends -y ninja-build wget \\\n\tgettext autopoint texinfo autoconf automake make python python3 \\\n\tgcc build-essential parted dosfstools syslinux syslinux-common && rm -rf /var/lib/apt/lists/*;\n\n# Compile CMake ourselves; the version provided in stretch is too old for us\nRUN mkdir /tmp/cmake-build && cd /tmp/cmake-build && \\\n\twget \"https://cmake.org/files/v3.12/cmake-3.12.2.tar.gz\" && \\\n\ttar xzf cmake-3.12.2.tar.gz && \\\n\tcd cmake-3.12.2 && ./bootstrap -- -DCMAKE_BUILD_TYPE:STRING=Release && \\\n\tmake -j16 && make install && \\\n\tcd / && rm -rf /tmp/cmake-build && rm cmake-3.12.2.tar.gz\n\n# Create an unprivileged build user; we expect that the uid/gid matches the\n# work directory on the host system (inspired by\n# https://gist.github.com/alkrauss48/2dd9f9d84ed6ebff9240ccfa49a80662)\nRUN\tgroupadd -g 1000 -r build && \\\n\tuseradd -r -u 1000 -g build -d /home/build -s /sbin/nologin -c \"Build user\" build\n\nENV\thome=/home/build\n\n# Run things as this user\nUSER\tbuild\n"
}