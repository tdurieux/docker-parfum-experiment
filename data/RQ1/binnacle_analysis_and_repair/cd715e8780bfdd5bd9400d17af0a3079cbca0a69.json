{
  "startTime": 1674242540226,
  "endTime": 1674242540592,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:latest\nMAINTAINER ku8eye.bestcloud@github\n\n# set timezone\nENV TZ Asia/Shanghai\n\n# set http proxy if needed\n# ENV http_proxy=\"http://<proxy_ip>:<proxy_port>\" https_proxy=\"http://<proxy_ip>:<proxy_port>\"\n\n# 1. install ansible (from Internet)\nRUN yum clean all && \\\n    yum -y install epel-release && \\\n    yum -y install PyYAML python-jinja2 python-httplib2 python-keyczar python-paramiko python-setuptools git python-pip && rm -rf /var/cache/yum\nRUN mkdir /etc/ansible/ && echo -e '[local]\\nlocalhost' > /etc/ansible/hosts\nRUN pip install --no-cache-dir ansible\n\n# 2. install sshpass, and generate ssh keys (from Internet)\nRUN yum -y install sshpass && rm -rf /var/cache/yum\nRUN ssh-keygen -q -t rsa -N \"\" -f ~/.ssh/id_rsa\n# make ansible not do key checking from ~/.ssh/known_hosts file\nENV ANSIBLE_HOST_KEY_CHECKING false\n\n# 3. install MariaDB (mysql) (from Internet)\nCOPY MariaDB.repo /etc/yum.repos.d/MariaDB.repo\nRUN yum -y install MariaDB-server MariaDB-client && rm -rf /var/cache/yum\n\n# 4. install supervisor (from Internet)\nRUN pip install --no-cache-dir supervisor\n\n# 5. add JRE1.8\nCOPY jre1.8.0_65 /root/jre1.8.0_65\nENV JAVA_HOME=\"/root/jre1.8.0_65\" PATH=\"$PATH:/root/jre1.8.0_65/bin\"\nRUN chmod +x /root/jre1.8.0_65/bin/*\n\n# 6. install openssh\nRUN yum install -y openssh openssh-server && rm -rf /var/cache/yum\nRUN mkdir -p /var/run/sshd && echo \"root:root\" | chpasswd\nRUN /usr/sbin/sshd-keygen\nRUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config && sed -ri 's/#UsePAM no/UsePAM no/g' /etc/ssh/sshd_config\n\n# 7. add ku8eye-ansible binary and config files\nCOPY kubernetes_cluster_setup /root/kubernetes_cluster_setup\n\n# 8. copy shell scripts, SQL scripts, config files (could be updated in the future)\n# db init SQL\nCOPY db_scripts /root/db_scripts\n# shell scripts\nCOPY shell_scripts /root/shell_scripts\nRUN chmod +x /root/shell_scripts/*.sh\nCOPY ku8eye-install-kubernetes.sh /root/ku8eye-install-kubernetes.sh\nRUN chmod +x /root/ku8eye-install-kubernetes.sh\n# latest jar\nCOPY ku8eye-web.jar /root/ku8eye-web.jar\n\n# 9. start mariadb, init db data, and start ku8eye-web app\n# supervisor config file\nCOPY supervisord.conf /etc/supervisord.conf\nENTRYPOINT /usr/bin/supervisord\n\n\n"
}