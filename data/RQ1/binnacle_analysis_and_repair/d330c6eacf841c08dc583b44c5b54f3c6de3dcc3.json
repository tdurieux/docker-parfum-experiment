{
  "startTime": 1674249772767,
  "endTime": 1674249772958,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 45,
        "columnEnd": 63
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 120,
        "columnEnd": 165
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Based on Dockerfile originally provided by NVIDIA DLI\n# Build with:\n#     docker build -t conda_cuda_base_2019:latest .\n\nFROM nvcr.io/nvidia/tensorflow:18.05-py3\n\n\nUSER root\n\n################## DONT CHANGE BELOW ########################3\n# Common DLI installs/config\n# Install nginx version with extras\nRUN apt-get update && apt-get install --no-install-recommends -y wget && wget -qO - https://openresty.org/package/pubkey.gpg | apt-key add - && apt-get -y --no-install-recommends install software-properties-common && add-apt-repository -y \"deb http://openresty.org/package/ubuntu $(lsb_release -sc) main\" && apt-get update && apt-get install -y --no-install-recommends openresty supervisor curl wget git && rm -rf /var/lib/apt/lists/*\n#add-apt-repository -y ppa:nginx/stable && apt-get -y update &&  apt-get install -y  --no-install-recommends nginx supervisor curl wget git && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir /dli\nWORKDIR /dli\n\n# DIGITS env vars, not used everywhere, but keep them here as common globals anyways\nENV DIGITS_URL_PREFIX=/digits\nENV DIGITS_JOBS_DIR=/dli/data/digits\nENV DIGITS_LOGFILE_FILENAME=$DIGITS_JOBS_DIR/digits.log\n\n# Set startup\nENTRYPOINT $WORKDIR/startup_script.sh\n################## DONT CHANGE ABOVE ########################3\n\n################## BASE SERVICES BELOW, CHANGE WITH CAUTION ########################3\n# Install assessment harness services & Jupyter\nRUN apt-get update && apt-get install --upgrade -y --no-install-recommends \\\n    python3-venv \\\n    redis-server && \\\n    python3 -m venv /usr/local/assessment && \\\n    /usr/local/assessment/bin/pip install --upgrade pip && \\\n    /usr/local/assessment/bin/pip install celery flask redis jupyter && rm -rf /var/lib/apt/lists/*;\n\n# Install Jupyter, etc.\nRUN python3  -m pip install -U pip==8.0.1 && pip install --no-cache-dir -U pip\nRUN pip install --no-cache-dir --ignore-installed ipython jupyter\n################## BASE SERVICES ABOVE, CHANGE WITH CAUTION ########################3\n\n\n################## TASK SPECIFIC BELOW, CHANGE AS NEEDED ########################3\n# Install task specific stuff\n\n# Add user\nRUN useradd -ms /bin/bash appuser\nUSER appuser\nWORKDIR /home/appuser\n\n# Download and install miniconda\nRUN wget https://repo.anaconda.com/miniconda/Miniconda3-4.5.11-Linux-x86_64.sh\nRUN bash Miniconda3-4.5.11-Linux-x86_64.sh -b -p /home/appuser/Miniconda3\nENV PATH=$PATH:/home/appuser/Miniconda3/bin\n\n# Install Jupyter Notebook\nRUN conda install -y jupyter notebook\n\n# Install Numba and CUDA toolkit\nARG NUMBA_VERSION=0.42\nARG CONDA_CUDATOOLKIT=9.0\nRUN conda install -y -c numba cudatoolkit=$CONDA_CUDATOOLKIT numba=$NUMBA_VERSION\n# Latest CuPy not in Anaconda yet\nRUN /home/appuser/Miniconda3/bin/pip install cupy-cuda90\n################## TASK SPECIFIC ABOVE, CHANGE AS NEEDED ########################3\n\n"
}