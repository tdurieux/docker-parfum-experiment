{
  "startTime": 1674246053059,
  "endTime": 1674246053253,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    cmake \\\n    gcc \\\n    libc6-dev \\\n    make \\\n    pkg-config \\\n    git \\\n    automake \\\n    libtool \\\n    m4 \\\n    autoconf \\\n    make \\\n    file \\\n    binutils && rm -rf /var/lib/apt/lists/*;\n\nCOPY xargo.sh /\nRUN bash /xargo.sh\n\nCOPY cmake.sh /\nRUN apt-get purge --auto-remove -y cmake && \\\n    bash /cmake.sh 3.5.1\n\nRUN mkdir /usr/arm-linux-gnueabihf && \\\n    apt-get install -y --no-install-recommends curl && \\\n    cd /usr/arm-linux-gnueabihf && \\\n    curl -f -L https://toolchains.bootlin.com/downloads/releases/toolchains/armv6-eabihf/tarballs/armv6-eabihf--glibc--stable-2018.11-1.tar.bz2 | \\\n    tar --strip-components 1 -xj && \\\n    apt-get purge --auto-remove -y curl && rm -rf /var/lib/apt/lists/*;\n\nCOPY openssl.sh qemu.sh /\n\nRUN bash /qemu.sh arm\nENV PATH /usr/arm-linux-gnueabihf/bin:$PATH\n\nRUN apt-get install -y --no-install-recommends \\\n    libc6-dev-armhf-cross && \\\n    bash /openssl.sh linux-armv4 arm-linux- && rm -rf /var/lib/apt/lists/*;\n\nENV CARGO_TARGET_ARM_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gcc \\\n    CARGO_TARGET_ARM_UNKNOWN_LINUX_GNUEABIHF_RUNNER=qemu-arm \\\n    CC_arm_unknown_linux_gnueabihf=arm-linux-gcc \\\n    CXX_arm_unknown_linux_gnueabihf=arm-linux-g++ \\\n    OPENSSL_DIR=/openssl \\\n    OPENSSL_INCLUDE_DIR=/openssl/include \\\n    OPENSSL_LIB_DIR=/openssl/lib \\\n    QEMU_LD_PREFIX=/usr/arm-linux-gnueabihf \\\n    LD_LIBRARY_PATH=/usr/arm-linux-gnueabihf/lib:/usr/arm-linux-gnueabihf/arm-buildroot-linux-gnueabihf/lib \\\n    RUST_TEST_THREADS=1\n"
}