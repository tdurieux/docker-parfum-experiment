{
  "startTime": 1674234497873,
  "endTime": 1674234498070,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for building extra builds.  This includes more tools than the\n# default image, so it's a fair bit bigger.  Only use this for builds where\n# the smaller docker image is missing something.  These builds will run on\n# the leaner configuration.\nFROM ubuntu:18.04\nLABEL maintainer=\"Martin Thomson <martin.thomson@gmail.com>\"\n\nRUN dpkg --add-architecture i386\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    clang-4.0 \\\n    clang \\\n    cmake \\\n    curl \\\n    g++-4.8-multilib \\\n    g++-5-multilib \\\n    g++-6-multilib \\\n    g++-multilib \\\n    git \\\n    gyp \\\n    libelf-dev \\\n    libdw-dev \\\n    libssl-dev \\\n    libssl-dev:i386 \\\n    libxml2-utils \\\n    lib32z1-dev \\\n    linux-libc-dev:i386 \\\n    llvm-dev \\\n    locales \\\n    mercurial \\\n    ninja-build \\\n    pkg-config \\\n    valgrind \\\n    zlib1g-dev \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get autoremove -y && apt-get clean -y\n\n# Latest version of abigail-tools\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends automake libtool libxml2-dev \\\n && git clone git://sourceware.org/git/libabigail.git /tmp/libabigail \\\n && cd /tmp/libabigail \\\n && autoreconf -fi \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --disable-static --disable-apidoc --disable-manual \\\n && make && make install \\\n && rm -rf /tmp/libabigail \\\n && apt-get remove -y automake libtool libxml2-dev \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get autoremove -y && apt-get clean -y\n\nENV SHELL /bin/bash\nENV USER worker\nENV LOGNAME $USER\nENV HOME /home/$USER\nENV LANG en_US.UTF-8\nENV LC_ALL $LANG\nENV HOST localhost\nENV DOMSUF localdomain\n\nRUN locale-gen $LANG \\\n && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n\nRUN useradd -d $HOME -s $SHELL -m $USER\nWORKDIR $HOME\n\n# Add build and test scripts.\nADD bin $HOME/bin\nRUN chmod +x $HOME/bin/*\n\nUSER $USER\n\n# Set a default command for debugging.\nCMD [\"/bin/bash\", \"--login\"]\n"
}