{
  "startTime": 1674236631073,
  "endTime": 1674236631507,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 57,
        "columnStart": 6,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nARG OUR_IMAGE_VERSION=v2.2.6\nARG OUR_IMAGE_TAG=${OUR_IMAGE_TAG:-$OUR_IMAGE_VERSION}\n# flag for apt-get - affects only build time\nARG DEBIAN_FRONTEND=noninteractive\nARG DOCKRUN_PREFIX=\"dockrun_\"\nARG hack_OUR_IMAGE=\"t3docs/render-documentation:${OUR_IMAGE_TAG}\"\nARG hack_OUR_IMAGE_SHORT=\"t3rd\"\nARG OUR_IMAGE_SLOGAN=\"t3rd - TYPO3 render documentation\"\n\nENV \\\n   LC_ALL=C.UTF-8 \\\n   LANG=C.UTF-8 \\\n   HOME=\"/ALL/userhome\" \\\n   TOOLCHAIN_VERSION=\"2.6.1\" \\\n   TOOLCHAIN_UNPACKED=\"Toolchain_RenderDocumentation-2.6.1\" \\\n   TOOLCHAIN_URL=\"https://github.com/marble/Toolchain_RenderDocumentation/archive/v2.6.1.zip\" \\\n   TYPOSCRIPT_PY_VERSION=\"v2.2.4\" \\\n   TYPOSCRIPT_PY_URL=\"https://raw.githubusercontent.com/TYPO3-Documentation/Pygments-TypoScript-Lexer/v2.2.4/typoscript.py\" \\\n   OUR_IMAGE=\"$hack_OUR_IMAGE\" \\\n   OUR_IMAGE_SHORT=\"$hack_OUR_IMAGE_SHORT\" \\\n   THEME_VERSION=\"3.6.16\" \\\n   THEME_MTIME=\"1530870718\"\n\nLABEL \\\n   Maintainer=\"TYPO3 Documentation Team\" \\\n   Description=\"This image renders TYPO3 documentation.\" \\\n   Vendor=\"t3docs\" Version=\"$OUR_IMAGE_VERSION\"\n\nCOPY ALL-for-build  /ALL\n\nWORKDIR /ALL/venv\n\nRUN \\\n   true \"Create executable COMMENT as a workaround to allow commenting here\" \\\n   && cp /bin/true /bin/COMMENT \\\n   \\\n   && COMMENT \"Garantee folders\" \\\n   && mkdir /PROJECT \\\n   && mkdir /RESULT \\\n   \\\n   && COMMENT \"Avoid GIT bug\" \\\n   && cp /ALL/global-gitconfig.cfg /root/.gitconfig \\\n   && cp /ALL/global-gitconfig.cfg /.gitconfig \\\n   && chmod 666 /.gitconfig \\\n   \\\n   && COMMENT \"Make sure other users can write\" \\\n   && chmod -R o+w \\\n      /ALL/Makedir \\\n      /ALL/dummy_webroot \\\n      /RESULT \\\n   \\\n   && COMMENT \"Install and upgrade system packages\" \\\n   && apt-get update \\\n   && apt-get upgrade -qy \\\n   && apt-get install --no-install-recommends -yq \\\n      python-pip \\\n\n   && COMMENT \"What the toolchains needs\" \\\n   && apt-get install -yq --no-install-recommends \\\n      moreutils \\\n      pandoc \\\n      rsync \\\n      tidy \\\n      unzip \\\n      wget \\\n\n   && COMMENT \"What we need - convenience tools\" \\\n   && apt-get install -yq --no-install-recommends \\\n      less \\\n      nano \\\n      ncdu \\\n\n   && COMMENT \"Try extra cleaning besides /etc/apt/apt.conf.d/docker-clean\" \\\n   && apt-get clean \\\n   && rm -rf /var/lib/apt/lists/* \\\n\n   && COMMENT \"Python stuff\" \\\n   && /usr/bin/pip install --upgrade pip \\\n   && apt-get remove python-pip -y \\\n   && /usr/local/bin/pip install --upgrade pipenv \\\n\n   && COMMENT \"Disable /ALL/venv/Pipfile.lock - it didn't work reliably\" \\\n   && rm -f Pipfile.lock.DISABLED \\\n   && if [ -f \"Pipfile.lock\" ]; then mv Pipfile.lock Pipfile.lock.DISABLED; fi \\\n\n   && COMMENT \"Install from /ALL/venv/Pipfile\" \\\n   && pipenv install \\\n   && echo source $(pipenv --venv)/bin/activate >>$HOME/.bashrc \\\n\n   && COMMENT \"Provide some special files\" \\\n   && wget https://raw.githubusercontent.com/TYPO3-Documentation/typo3-docs-typo3-org-resources/master/userroot/scripts/bin/check_include_files.py \\\n           --quiet --output-document /usr/local/bin/check_include_files.py \\\n   && wget https://raw.githubusercontent.com/TYPO3-Documentation/typo3-docs-typo3-org-resources/master/userroot/scripts/bin/conf-2017-09.py \\\n           --quiet --output-document /ALL/Makedir/conf-2017-09.py \\\n   && wget https://raw.githubusercontent.com/TYPO3-Documentation/typo3-docs-typo3-org-resources/master/userroot/scripts/config/_htaccess-2016-08.txt \\\n           --quiet --output-document /ALL/Makedir/_htaccess \\\n   && wget https://github.com/etobi/Typo3ExtensionUtils/raw/master/bin/t3xutils.phar \\\n           --quiet --output-document /usr/local/bin/t3xutils.phar \\\n   && chmod +x /usr/local/bin/t3xutils.phar \\\n\n   && COMMENT \"All files of the theme of a given theme version should have the\" \\\n   && COMMENT \"same mtime (last commit) to not turn off Sphinx caching\" \\\n   && python=$(pipenv --venv)/bin/python \\\n   && destdir=$(dirname $($python -c \"import t3SphinxThemeRtd; print t3SphinxThemeRtd.__file__\")) \\\n   && find $destdir -exec touch --no-create --time=mtime --date=\"$(date --rfc-2822 --date=@$THEME_MTIME)\" {} \\; \\\n\n   && COMMENT \"Update TypoScript lexer for highlighting. It comes with Sphinx\" \\\n   && COMMENT \"but isn't up to date there. So we use it from our own repo.\" \\\n   && COMMENT \"usually: /usr/local/lib/python2.7/site-packages/pygments/lexers\" \\\n   && python=$(pipenv --venv)/bin/python \\\n   && destdir=$(dirname $($python -c \"import pygments; print pygments.__file__\"))/lexers \\\n   && rm $destdir/typoscript.* \\\n   && wget $TYPOSCRIPT_PY_URL --quiet --output-document $destdir/typoscript.py \\\n   && curdir=$(pwd); cd $destdir; $python _mapping.py; cd $curdir \\\n   \\\n   && COMMENT \"Provide the toolchain\" \\\n   && wget ${TOOLCHAIN_URL} -qO /ALL/Downloads/Toolchain_RenderDocumentation.zip \\\n   && unzip /ALL/Downloads/Toolchain_RenderDocumentation.zip -d /ALL/Toolchains \\\n   && mv /ALL/Toolchains/${TOOLCHAIN_UNPACKED} /ALL/Toolchains/RenderDocumentation \\\n   && rm /ALL/Downloads/Toolchain_RenderDocumentation.zip \\\n   \\\n   && COMMENT \"Download latex files, since we can still render Latex without drawbacks\" \\\n   && wget https://github.com/TYPO3-Documentation/latex.typo3/archive/v1.1.0.zip -qO /tmp/latex.typo3-v1.1.0.zip \\\n   && unzip /tmp/latex.typo3-v1.1.0.zip -d /tmp \\\n   && mv /tmp/latex.typo3-1.1.0 /ALL/Downloads/latex.typo3 \\\n   \\\n   && COMMENT \"Final cleanup\" \\\n   && apt-get clean \\\n   && rm -rf /tmp/* \\\n   \\\n   && COMMENT \"Memorize the settings in the container\" \\\n   && echo \"export DEBIAN_FRONTEND=\\\"${DEBIAN_FRONTEND}\\\"\"         >> /ALL/Downloads/envvars.sh \\\n   && echo \"export DOCKRUN_PREFIX=\\\"${DOCKRUN_PREFIX}\\\"\"           >> /ALL/Downloads/envvars.sh \\\n   && echo \"export OUR_IMAGE=\\\"${OUR_IMAGE}\\\"\"                     >> /ALL/Downloads/envvars.sh \\\n   && echo \"export OUR_IMAGE_SHORT=\\\"${OUR_IMAGE_SHORT}\\\"\"         >> /ALL/Downloads/envvars.sh \\\n   && echo \"export OUR_IMAGE_SLOGAN=\\\"${OUR_IMAGE_SLOGAN}\\\"\"       >> /ALL/Downloads/envvars.sh \\\n   && echo \"export OUR_IMAGE_TAG=\\\"${OUR_IMAGE_TAG}\\\"\"             >> /ALL/Downloads/envvars.sh \\\n   && echo \"export OUR_IMAGE_VERSION=\\\"${OUR_IMAGE_VERSION}\\\"\"     >> /ALL/Downloads/envvars.sh \\\n   && echo \"export TOOLCHAIN_URL=\\\"${TOOLCHAIN_URL}\\\"\"             >> /ALL/Downloads/envvars.sh \\\n   \\\n   && COMMENT \"Let's have some debug info\" \\\n   && echo \"\\\n      debug_info DEBIAN_FRONTEND....: ${DEBIAN_FRONTEND}\\n\\\n      debug_info DOCKRUN_PREFIX.....: ${DOCKRUN_PREFIX}\\n\\\n      debug_info OUR_IMAGE..........: ${OUR_IMAGE}\\n\\\n      debug_info OUR_IMAGE_SHORT....: ${OUR_IMAGE_SHORT}\\n\\\n      debug_info OUR_IMAGE_SLOGAN...: ${OUR_IMAGE_SLOGAN}\\n\\\n      debug_info OUR_IMAGE_TAG......: ${OUR_IMAGE_TAG}\\n\\\n      debug_info OUR_IMAGE_VERSION..: ${OUR_IMAGE_VERSION}\\n\\\n      debug_info TOOLCHAIN_URL......: ${TOOLCHAIN_URL}\\n\\\n      \\n\\\n      Versions used for $OUR_IMAGE_VERSION:\\n\\\n      Sphinx theme        t3SphinxThemeRtd       $THEME_VERSION  mtime:$THEME_MTIME\\n\\\n      Toolchain           RenderDocumentation    $TOOLCHAIN_VERSION\\n\\\n      Toolchain tool      TCT                    0.3.0\\n\\\n      TYPO3-Documentation typo3.latex            v1.1.0\\n\\\n      TypoScript lexer    typoscript.py          $TYPOSCRIPT_PY_VERSION\\n\" | cut -b 7- > /ALL/Downloads/buildinfo.txt \\\n   && cat /ALL/Downloads/buildinfo.txt\n\n\nENTRYPOINT [\"/ALL/Menu/mainmenu.sh\"]\n\nCMD []\n"
}