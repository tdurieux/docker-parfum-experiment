{
  "startTime": 1674252976610,
  "endTime": 1674252976958,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "# Use Ubuntu 16.04 + wine-staging as a base for MSVC2017\nFROM boberfly/docker-wine:latest as builder\n\n# For running anything headless in wine that needs a GUI, and 7zip\nRUN apt-get update && apt-get install --no-install-recommends -y xvfb p7zip-full && rm -rf /var/lib/apt/lists/*;\n\n# To get VisualCpp\nRUN apt-get install --no-install-recommends -y nuget ca-certificates-mono \\\n# Clean up\n    && apt-get autoremove -y \\\n        software-properties-common \\\n    && apt-get autoclean \\\n    && apt-get clean \\\n    && apt-get autoremove && rm -rf /var/lib/apt/lists/*;\n# This one makes it so the certificates get picked up by nuget\nENV TZ=UTC\n\n# For a headless wine experience, why not try xvfb?\nCOPY xvfb-start.sh /usr/bin/xvfb-start\n\n# From now onwards we take the role of the wine user\nUSER wine:wine\n\n# Now we grab MSVC 2017 Community from Nuget\nWORKDIR /home/wine\nRUN nuget install VisualCppTools.Community.VS2017Layout -Version 14.11.25506 \\\n    && rm VisualCppTools.Community.VS2017Layout.14.11.25506/VisualCppTools.Community.VS2017Layout.14.11.25506.nupkg \\\n    && nuget install Git-Windows-Minimal -Version 2.17.0 \\\n    && rm Git-Windows-Minimal.2.17.0/Git-Windows-Minimal.2.17.0.nupkg\n# Download the Windows SDK, uncomment COPY and comment out ADD if you have the sdk local and named win10sdk.iso\n#COPY --chown=wine:wine win10sdk.iso /home/wine/win10sdk.iso\nADD --chown=wine:wine https://go.microsoft.com/fwlink/p/?linkid=870809 /home/wine/win10sdk.iso\n\n# Python 2.7\nADD --chown=wine:wine https://www.python.org/ftp/python/2.7.15/python-2.7.15.amd64.msi python.msi\n\n# This convoluted RUN will extract and install the .msi's we are interested in for building against Windows 10\nRUN xvfb-start && export DISPLAY=:99 \\\n    && mkdir /home/wine/win10sdk && cd /home/wine/win10sdk && 7z x ../win10sdk.iso && rm ../win10sdk.iso \\\n    && cd Installers && wine wineboot --init \\\n    && wine msiexec /i \"Windows SDK Desktop Headers x64-x86_en-us.msi\" /qn \\\n    && wine msiexec /i \"Windows SDK Desktop Headers x86-x86_en-us.msi\" /qn \\ \n    && wine msiexec /i \"Windows SDK Desktop Libs x64-x86_en-us.msi\" /qn \\ \n    && wine msiexec /i \"Windows SDK Desktop Libs x86-x86_en-us.msi\" /qn \\ \n    && wine msiexec /i \"Windows SDK Desktop Tools x64-x86_en-us.msi\" /qn \\\n    && wine msiexec /i \"Windows SDK Desktop Tools x86-x86_en-us.msi\" /qn \\\n    && wine msiexec /i \"Windows SDK for Windows Store Apps Headers-x86_en-us.msi\" /qn \\\n    && wine msiexec /i \"Windows SDK for Windows Store Apps Libs-x86_en-us.msi\" /qn \\\n    && wine msiexec /i \"Windows SDK for Windows Store Apps Tools-x86_en-us.msi\" /qn \\\n    && wine msiexec /i \"Windows SDK for Windows Store Apps Legacy Tools-x86_en-us.msi\" /qn \\\n    && wine msiexec /i \"Universal CRT Headers Libraries and Sources-x86_en-us.msi\" /qn \\\n# Lets install Python while we're here\n    && wine msiexec /i \"Z:\\home\\wine\\python.msi\" /qn \\\n    && cd /home/wine && rm -rf win10sdk && rm python.msi\n\nWORKDIR /home/wine/.wine/drive_c\n# Time to grab CMake and friends.\nADD --chown=wine:wine https://cmake.org/files/v3.10/cmake-3.10.3-win64-x64.zip cmake.zip\nADD --chown=wine:wine https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-win.zip ninja.zip\nADD --chown=wine:wine http://download.qt.io/official_releases/jom/jom.zip jom.zip\nRUN 7z x cmake.zip && rm cmake.zip \\\n    && mkdir ninja && cd ninja && 7z x ../ninja.zip && cd .. && rm ninja.zip \\\n    && mkdir jom && cd jom && 7z x ../jom.zip && cd .. && rm jom.zip\n\nUSER root\n# END\n\n\n\n\n# Now lets make a lighter image\nFROM boberfly/docker-wine:latest\nWORKDIR /opt/\nCOPY --from=builder /home/wine/VisualCppTools.Community.VS2017Layout.14.11.25506 msvc2017\nCOPY --from=builder [\"/home/wine/.wine/drive_c/Program Files (x86)/Windows Kits/10\", \"win10sdk\"]\nCOPY --from=builder /home/wine/.wine/drive_c/cmake-3.10.3-win64-x64 cmake\nCOPY --from=builder /home/wine/.wine/drive_c/ninja ninja\nCOPY --from=builder /home/wine/.wine/drive_c/jom jom\nCOPY --from=builder /home/wine/.wine/drive_c/Python27 python27\nCOPY --from=builder /home/wine/Git-Windows-Minimal.2.17.0 git\nCOPY --from=builder /usr/bin/xvfb-start /usr/bin/xvfb-start\nRUN apt-get install --no-install-recommends -y xvfb git nano \\\n# Clean up\n    && apt-get autoremove -y \\\n        software-properties-common \\\n    && apt-get autoclean \\\n    && apt-get clean \\\n    && apt-get autoremove && rm -rf /var/lib/apt/lists/*;\nUSER wine:wine\nRUN xvfb-start && export DISPLAY=:99 && wine wineboot --init \\\n    && winetricks -q vcrun2017 cmd && winetricks -q win7\n# Copy an env we prepared earlier\nCOPY --chown=wine:wine msvc2017x64env.bat /home/wine/.wine/drive_c/msvc2017x64env.bat\nCOPY entrypoint_msvc.sh /usr/bin/entrypoint_msvc\n# Symlink all the things!\nWORKDIR /home/wine/.wine/drive_c/\nRUN ln -s /opt/msvc2017 msvc2017 \\ \n    && ln -s /opt/win10sdk win10sdk \\\n    && ln -s /opt/cmake cmake \\\n    && ln -s /opt/ninja ninja \\\n    && ln -s /opt/jom jom \\\n    && ln -s /opt/python27 python27 \\\n    && ln -s /opt/git git\n\nUSER root\n# vctip.exe is a telemetry tool which isn't needed and it causes weird stack traces in cmd...\nRUN rm /opt/msvc2017/lib/native/bin/Hostx64/x64/VCTIP.exe && \\\n    rm /opt/msvc2017/lib/native/bin/Hostx64/x86/VCTIP.exe && \\\n    rm /opt/msvc2017/lib/native/bin/Hostx86/x64/VCTIP.exe && \\\n    rm /opt/msvc2017/lib/native/bin/Hostx86/x86/VCTIP.exe\n\n# So that when docker runs we can copy over the guts to a volume\n#VOLUME /home/wine\n\n# Start with a generic entrypoint.\nENTRYPOINT [\"/usr/bin/entrypoint_msvc\"]\n\n# Default to cmd with MSVC 2017 64-bit as the default target.\nCMD [\"/usr/bin/entrypoint_msvc\"]\n"
}