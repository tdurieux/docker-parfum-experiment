{
  "startTime": 1674243773593,
  "endTime": 1674243773720,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nENV workdir /app\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    wget \\\n    build-essential \\\n    python-pip \\\n    software-properties-common \\\n    python-software-properties \\\n    libz-dev zlib1g-dev \\\n    curl unzip \\\n    gdal-bin tar \\\n    bzip2 clang git \\\n    default-jre default-jdk gradle && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir awscli\nRUN curl -f -sSL https://sdk.cloud.google.com | bash\nRUN ln -f -s /root/google-cloud-sdk/bin/gsutil /usr/bin/gsutil\n# Install osmosis\nRUN git clone https://github.com/openstreetmap/osmosis.git\nWORKDIR osmosis\nRUN git checkout 9cfb8a06d9bcc948f34a6c8df31d878903d529fc\nRUN mkdir dist\nRUN ./gradlew assemble\nRUN tar -xvzf \"$PWD\"/package/build/distribution/*.tgz -C \"$PWD\"/dist/ && rm \"$PWD\"/package/build/distribution/*.tgz\nRUN ln -s \"$PWD\"/dist/bin/osmosis /usr/bin/osmosis\nRUN osmosis --version 2>&1 | grep \"Osmosis Version\"\nWORKDIR $workdir\nRUN mkdir data\nVOLUME [\"/app/data\"]\nCOPY ./start.sh .\nCMD ./start.sh"
}