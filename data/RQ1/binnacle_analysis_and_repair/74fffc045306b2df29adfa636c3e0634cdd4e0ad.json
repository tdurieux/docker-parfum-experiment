{
  "startTime": 1674237023524,
  "endTime": 1674237023854,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 3,
        "columnEnd": 68
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 3,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.11.5\n\nLABEL maintainer=\"stashappdev@gmail.com\"\n\nENV GORELEASER_VERSION=0.95.0\nENV GORELEASER_SHA=4f3b9fc978a3677806ebd959096a1f976a7c7bb5fbdf7a9a1d01554c8c5c31c5\n\nENV GORELEASER_DOWNLOAD_FILE=goreleaser_Linux_x86_64.tar.gz\nENV GORELEASER_DOWNLOAD_URL=https://github.com/goreleaser/goreleaser/releases/download/v${GORELEASER_VERSION}/${GORELEASER_DOWNLOAD_FILE}\n\nENV PACKR2_VERSION=2.0.2\nENV PACKR2_SHA=f95ff4c96d7a28813220df030ad91700b8464fe292ab3e1dc9582305c2a338d2\nENV PACKR2_DOWNLOAD_FILE=packr_${PACKR2_VERSION}_linux_amd64.tar.gz\nENV PACKR2_DOWNLOAD_URL=https://github.com/gobuffalo/packr/releases/download/v${PACKR2_VERSION}/${PACKR2_DOWNLOAD_FILE}\n\n# Install tools\nRUN apt-get update && \\\n    apt-get install -y automake autogen \\\n    libtool libxml2-dev uuid-dev libssl-dev bash \\\n    patch make tar xz-utils bzip2 gzip sed cpio \\\n\tgcc-multilib g++-multilib gcc-mingw-w64 g++-mingw-w64 clang llvm-dev --no-install-recommends || exit 1; \\\n\trm -rf /var/lib/apt/lists/*;\n\n# Cross compile setup\nENV OSX_SDK_VERSION \t10.11\nENV OSX_SDK     \t\tMacOSX$OSX_SDK_VERSION.sdk\nENV OSX_NDK_X86 \t\t/usr/local/osx-ndk-x86\nENV OSX_SDK_PATH \t\t/$OSX_SDK.tar.gz\n\nCOPY $OSX_SDK.tar.gz /go\n\nRUN git clone https://github.com/tpoechtrager/osxcross.git && \\\n    git -C osxcross checkout c47ff0aeed1a7d0e1f884812fc170e415f05be5a || exit 1; \\\n    mv $OSX_SDK.tar.gz osxcross/tarballs/ && \\\n    UNATTENDED=yes SDK_VERSION=${OSX_SDK_VERSION} OSX_VERSION_MIN=10.9 osxcross/build.sh || exit 1; \\\n    mv osxcross/target $OSX_NDK_X86; \\\n    rm -rf osxcross;\n\nENV PATH $OSX_NDK_X86/bin:$PATH\n\nRUN mkdir -p /root/.ssh; \\\n    chmod 0700 /root/.ssh; \\\n    ssh-keyscan github.com > /root/.ssh/known_hosts;\n\nRUN wget ${GORELEASER_DOWNLOAD_URL}; \\\n\t\t\techo \"$GORELEASER_SHA  $GORELEASER_DOWNLOAD_FILE\" | sha256sum -c - || exit 1; \\\n\t\t\ttar -xzf $GORELEASER_DOWNLOAD_FILE -C /usr/bin/ goreleaser; \\\n\t\t\trm $GORELEASER_DOWNLOAD_FILE;\n\nRUN wget ${PACKR2_DOWNLOAD_URL}; \\\n\t\t\techo \"$PACKR2_SHA  $PACKR2_DOWNLOAD_FILE\" | sha256sum -c - || exit 1; \\\n\t\t\ttar -xzf $PACKR2_DOWNLOAD_FILE -C /usr/bin/ packr2; \\\n\t\t\trm $PACKR2_DOWNLOAD_FILE;\n\nCMD [\"goreleaser\", \"-v\"]\nCMD [\"packr2\", \"version\"]\n\n\n# Notes for self:\n# Windows:\n# GOOS=windows GOARCH=amd64 CGO_ENABLED=1 CC=x86_64-w64-mingw32-gcc CXX=x86_64-w64-mingw32-g++  go build -ldflags \"-extldflags '-static'\" -tags extended\n\n\n# Darwin\n# CC=o64-clang CXX=o64-clang++ GOOS=darwin GOARCH=amd64 CGO_ENABLED=1 go build -tags extended\n# env GO111MODULE=on goreleaser --config=goreleaser-extended.yml --skip-publish --skip-validate --rm-dist --release-notes=temp/0.48-relnotes-ready.md"
}