{
  "startTime": 1674240530652,
  "endTime": 1674240530784,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PACKAGE_TYPE=node\n\n#################################################\n#\n# Base\n# This container should not be used as a runtime environment.\n# It is based off a massive build image (crossbuild) which has lots of unnecessary build tools\n# It does not actually build the capsulecd executable\n# It runs unit tests for each supported engine type.\n#\n# Use the docker containers in https://github.com/AnalogJ/capsulecd-docker as an example of what a\n# proper runtime-environment for CapsuleCD looks like.\n#\n#################################################\n\nFROM analogj/libgit2-crossbuild:linux-amd64 AS base\nMAINTAINER Jason Kulatunga <jason@thesparktree.com>\nWORKDIR /go/src/capsulecd\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n \tapt-transport-https \\\n    ca-certificates \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& go get github.com/Masterminds/glide\n\nCOPY . .\n\n## download glide deps & move libgit2 library into expected location.\nRUN glide install \\\n\t&& mkdir -p /go/src/capsulecd/vendor/gopkg.in/libgit2/git2go.v25/vendor/libgit2/build \\\n\t&& cp -r /usr/local/lib/libgit2/lib/pkgconfig/. /go/src/capsulecd/vendor/gopkg.in/libgit2/git2go.v25/vendor/libgit2/build/\n\nENV SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt\n\nRUN ci/test-build.sh ${PACKAGE_TYPE}\n\n##################################################\n##\n## Node\n##\n##################################################\nFROM node:8.11 AS node\nMAINTAINER Jason Kulatunga <jason@thesparktree.com>\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n \tapt-transport-https \\\n    ca-certificates \\\n    git \\\n    curl \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& npm install -g eslint \\\n\t&& npm install -g nsp && npm cache clean --force;\n\n# Install GOLANG\nENV GO_VERSION 1.8.3\nRUN curl -fsSL \"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz\" \\\n\t| tar -xzC /usr/local\n\nENV PATH=\"/go/bin:/usr/local/go/bin:${PATH}\" \\\n\tGOPATH=\"/go\"\n\nCOPY --from=base /go/src/capsulecd /go/src/capsulecd\n\nWORKDIR /go/src/capsulecd\n\nENV SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt\n\nCMD ci/test-coverage.sh"
}