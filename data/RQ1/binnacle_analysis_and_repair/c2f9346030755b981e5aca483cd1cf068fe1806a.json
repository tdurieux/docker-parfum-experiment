{
  "startTime": 1674244456605,
  "endTime": 1674244456733,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 111
      }
    }
  ],
  "repairedDockerfile": "FROM inokappa/ubuntu\n#\nMAINTAINER YOHEI KAWAHARA inokappa\n#\nRUN dpkg-divert --local --rename --add /sbin/initctl\nRUN ln -s /bin/true /sbin/initctl\n#\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get -y --no-install-recommends install software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:brightbox/ruby-ng-experimental\nRUN echo \"deb http://archive.ubuntu.com/ubuntu/ saucy universe\" >> /etc/apt/sources.list\nRUN apt-get update\nRUN apt-get -y --no-install-recommends install build-essential g++ libssl-dev nagios3 ruby2.0 ruby2.0-dev monit && rm -rf /var/lib/apt/lists/*;\nRUN htpasswd -cb /etc/nagios3/htpasswd.users nagiosadmin nagiosadmin\nRUN gem install nagira --no-ri --no-rdoc -V\nRUN mkdir /var/log/nagira\nADD nagira.patch /tmp/nagira.patch\nRUN nagira-setup config:config\nRUN patch -u --ignore-whitespace /etc/init.d/nagira < /tmp/nagira.patch\n#\nADD nagios3.conf.monit /etc/monit/conf.d/nagios3.conf\nADD nagira.conf.monit /etc/monit/conf.d/nagira.conf\nADD apache.conf.monit /etc/monit/conf.d/apache.conf\nADD sshd.conf.monit /etc/monit/conf.d/sshd.conf\nADD monitrc /etc/monit/monitrc\nRUN chown root:root /etc/monit/monitrc\nRUN chmod 700 /etc/monit/monitrc\n#\nRUN mkdir -p /var/run/sshd\nRUN useradd -d /home/sandbox -m -s /bin/bash sandbox\nRUN echo sandbox:sandbox | chpasswd\nRUN echo 'sandbox ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n#\n# for nagira\nEXPOSE 4567\n# for nagios\nEXPOSE 80\n# for ssh\nEXPOSE 22\n# for monit\nEXPOSE 2812\n#\nCMD [\"/usr/bin/monit\", \"-I\", \"-c\", \"/etc/monit/monitrc\"]\n"
}