{
  "startTime": 1674241317919,
  "endTime": 1674241318007,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    cmake \\\n    gcc \\\n    libc6-dev \\\n    make \\\n    pkg-config \\\n    git \\\n    automake \\\n    libtool \\\n    m4 \\\n    autoconf \\\n    make \\\n    file \\\n    binutils && rm -rf /var/lib/apt/lists/*;\n\nCOPY xargo.sh /\nRUN bash /xargo.sh\n\nCOPY cmake.sh /\nRUN apt-get purge --auto-remove -y cmake && \\\n    bash /cmake.sh 3.5.1\n\nRUN apt-get install -y --no-install-recommends \\\n    g++-arm-linux-gnueabihf \\\n    libc6-dev-armhf-cross && rm -rf /var/lib/apt/lists/*;\n\nCOPY openssl.sh /\nRUN bash /openssl.sh linux-armv4 arm-linux-gnueabihf-\n\nCOPY qemu.sh /\nRUN bash /qemu.sh arm linux softmmu\n\nCOPY dropbear.sh /\nRUN bash /dropbear.sh\n\nCOPY linux-image.sh /\nRUN bash /linux-image.sh armv7\n\nCOPY linux-runner /\n\nENV CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc \\\n    CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_RUNNER=\"/linux-runner armv7\" \\\n    CC_armv7_unknown_linux_gnueabihf=arm-linux-gnueabihf-gcc \\\n    CXX_armv7_unknown_linux_gnueabihf=arm-linux-gnueabihf-g++ \\\n    OPENSSL_DIR=/openssl \\\n    OPENSSL_INCLUDE_DIR=/openssl/include \\\n    OPENSSL_LIB_DIR=/openssl/lib \\\n    QEMU_LD_PREFIX=/usr/arm-linux-gnueabihf \\\n    RUST_TEST_THREADS=1\n"
}