{
  "startTime": 1674245386811,
  "endTime": 1674245386869,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedDockerfile": "# ch-test-scope: full\nFROM debian9\n\n# Note: Spack is a bit of an odd duck testing wise. Because it's a package\n# manager, the key tests we want are to install stuff (this includes the Spack\n# test suite), and those don't make sense at run time. Thus, most of what we\n# care about is here in the Dockerfile, and test.bats just has a few\n# trivialities.\n\n# Spack needs curl, git, make, and unzip to install.\n# The other packages are needed for Spack unit tests.\nRUN apt-get install --no-install-recommends -y \\\n    curl \\\n    g++ \\\n    git \\\n    make \\\n    patch \\\n    procps \\\n    python \\\n    python-pkg-resources \\\n    unzip && rm -rf /var/lib/apt/lists/*;\n\n# Install Spack. This follows the documented procedure to run it out of the\n# source directory. There apparently is no \"make install\" type operation to\n# place it at a standard path (\"spack clone\" simply clones another working\n# directory to a new path).\nENV SPACK_REPO https://github.com/spack/spack\nENV SPACK_VERSION 0.11.2\nRUN git clone --depth 1 $SPACK_REPO\n#RUN git clone --branch v$SPACK_VERSION --depth 1 $SPACK_REPO\n\n# Set up environment to use Spack. (We can't use setup-env.sh because the\n# Dockerfile shell is sh, not Bash.)\nENV PATH /spack/bin:$PATH\nRUN spack compiler find --scope system\n\n# Test: Some basic commands.\nRUN which spack\nRUN spack --version\nRUN spack compiler list\nRUN spack compiler list --scope=system\nRUN spack compiler list --scope=user\nRUN spack compilers\nRUN spack spec netcdf\n\n# Test: Install a small package.\nRUN spack spec charliecloud\nRUN spack install charliecloud\n\n# Test: Run Spack test suite.\n# FIXME: Commented out because the suite fails. It's inconsistent; the number\n# of failures seems to vary between about 1 and 3 inclusive.\n#RUN spack test\n\n# Clean up.\nRUN spack clean --all\n"
}