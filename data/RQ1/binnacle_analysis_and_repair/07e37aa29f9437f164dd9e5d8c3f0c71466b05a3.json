{
  "startTime": 1674250233954,
  "endTime": 1674250234456,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 5,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 5,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 33,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 22,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 25,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial\n\n####################\n# Install node and dependencies\n# From: https://github.com/nodejs/docker-node/blob/master/6.11/Dockerfile\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        gnupg curl ca-certificates xz-utils wget libgtk2.0-0 libgconf-2-4 \\\n    && rm -rf /var/lib/apt/lists/* && apt-get clean\n\nRUN groupadd --gid 1000 node \\\n&& useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n\n# gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n  && for key in \\\n    9554F04D7259F04124DE6B476D5A82AC7E37093B \\\n    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n    FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n    B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n    56730D5401028683275BD23C23EFEFE93C4CFFFE; \\\n  do \\\n    gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n    gpg --batch --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n    gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"; \\\n  done\n\nENV NPM_CONFIG_LOGLEVEL info\nENV NODE_VERSION 6.11.3\n\nRUN ARCH= && dpkgArch=\"$(dpkg --print-architecture)\" \\\n  && case \"${dpkgArch##*-}\" in \\\n    amd64) ARCH='x64';; \\\n    ppc64el) ARCH='ppc64le';; \\\n    s390x) ARCH='s390x';; \\\n    arm64) ARCH='arm64';; \\\n    * echo \"unsupported  architecture\"; exit 1;; \\\n  esac \\\n  && curl -f -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n  && curl -f -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n  && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 \\\n  && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n  && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n\n####################\n# Download fonts\n\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y \\\n        fontconfig \\\n        fonts-ipafont-gothic \\\n        fonts-ipafont-mincho \\\n        subversion \\\n        && \\\n    rm -rf /var/lib/apt/lists/* && apt-get clean && \\\n    cd /usr/share/fonts/truetype && \\\n    for font in \\\n      https://github.com/google/fonts/trunk/apache/droidsansmono \\\n      https://github.com/google/fonts/trunk/apache/droidsans \\\n      https://github.com/google/fonts/trunk/apache/droidserif \\\n      https://github.com/google/fonts/trunk/apache/roboto \\\n      https://github.com/google/fonts/trunk/apache/opensans \\\n      https://github.com/google/fonts/trunk/ofl/gravitasone \\\n      https://github.com/google/fonts/trunk/ofl/oldstandardtt \\\n      https://github.com/google/fonts/trunk/ofl/ptsansnarrow \\\n      https://github.com/google/fonts/trunk/ofl/raleway \\\n      https://github.com/google/fonts/trunk/ofl/overpass \\\n    ; do \\\n      svn checkout $font ; \\\n    done && \\\n    mkdir /usr/share/fonts/user && \\\n    fc-cache -fv && apt-get --auto-remove -y remove subversion\n\n####################\n# Download mathjax (same version as plotly.js extras/)\n\nRUN curl -f -L https://github.com/plotly/plotly.js/archive/master.tar.gz \\\n    | tar -xvzf - --strip-components=3 plotly.js-master/dist/extras/mathjax\n\n####################\n# Copy and set up Orca\n\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n    sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y google-chrome-stable xvfb poppler-utils git && \\\n    rm -rf /var/lib/apt/lists/* && apt-get clean\n\nCOPY package.json /var/www/image-exporter/\nCOPY bin /var/www/image-exporter/bin\nCOPY src /var/www/image-exporter/src\n\nWORKDIR /var/www/image-exporter\nRUN npm install && mkdir build && npm cache clean --force;\n\n####################\n# Install and configure monit\nCOPY deployment/monitrc /etc\nRUN cd /opt && \\\n    wget -q -O - https://mmonit.com/monit/dist/binary/5.25.1/monit-5.25.1-linux-x64.tar.gz | \\\n        tar xvzf - && \\\n    ln -s monit-* monit && \\\n    chmod 600 /etc/monitrc\n\n####################\n# Install latest stable Inkscape\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common python-software-properties \\\n    && add-apt-repository -y ppa:inkscape.dev/stable \\\n    && apt-get update && apt-get install --no-install-recommends -y inkscape=0.92.4+68~ubuntu16.04.1 \\\n    && rm -rf /var/lib/apt/lists/* && apt-get clean\n\n# Copy Inkscape defaults\nCOPY deployment/preferences.xml /root/.config/inkscape/\n\n####################\n# Download geo-assets (same version as plotly.js extras/)\n\nRUN wget https://raw.githubusercontent.com/plotly/plotly.js/master/dist/plotly-geo-assets.js -O /plotly-geo-assets.js\n\n####################\n# Configure ImageMagick policy\n\nCOPY deployment/ImageMagickPolicy.xml /etc/ImageMagick-6/policy.xml\n\n####################\n# Add entrypoint script\nCOPY deployment/entrypoint.sh /\n# Add server script\nCOPY deployment/run_server /\n# Symlink to entrypoint\nRUN ln -s /entrypoint.sh /usr/bin/orca\n\nEXPOSE 9091\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"--mathjax\", \"/mathjax/MathJax.js\", \"--topojson\", \"/plotly-geo-assets.js\"]\n"
}