{
  "startTime": 1674236040849,
  "endTime": 1674236040998,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 0,
        "columnEnd": 11
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 0,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 14,
        "columnStart": 0,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM boomtownroi/data-volume:latest \n\nMAINTAINER BoomTown CNS Team <consumerteam@boomtownroi.com> \n\nENV ALLOW_DEBUG true \n\n# Install nginx and have it forward logs to Docker \nRUN add-apt-repository -y ppa:nginx/stable &2> /dev/null \n\nRUN apt-get update && \\\n apt-get install --no-install-recommends -y git php-fpm php-mysql php-curl php-gd \\\nphp-intl php-mbstring php-pear php-imagick php-imap php-mcrypt php-memcached \\\ng++ cpp php-dev \\\nphp-pspell php-recode php-tidy php-xmlrpc php-xsl php-xdebug netcat \\\npkg-config byacc && \\\napt-get clean && \\\nrm -rf /var/lib/apt/lists/*\n\n# Install latest development version of Swig that has support for PHP7 \nRUN cd / && \\  \ngit clone https://github.com/swig/swig.git \n\nRUN cd swig && \\  \nsh ./autogen.sh && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\nmake && \\\nmake install\n\n# Clean up \nRUN cd / && \\  \nrm -rf swig \n\n# Install & configure the 51Degrees extension \nRUN cd / && \\  \ngit clone https://github.com/51Degrees/Device-Detection.git \n\nRUN cd Device-Detection/php/pattern && \\  \nphpize && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" PHP7=1 && \\\nmake install\n\n# Clean up \nRUN cd / && \\  \nrm -rf Device-Detection && \\  \napt-get remove -y git \n\n# COPY root/build-v8.sh /build-v8.sh \n# RUN /build-v8.sh \nCOPY root / \n\nRUN phpenmod opcache && phpdismod xdebug \n\nVOLUME /var/run/fpm/ \n\n"
}