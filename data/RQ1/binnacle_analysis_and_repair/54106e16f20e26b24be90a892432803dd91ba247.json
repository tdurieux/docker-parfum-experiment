{
  "startTime": 1674245174883,
  "endTime": 1674245175087,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 20,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:artful\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n      openjdk-8-jdk git-core gnupg flex bison gperf build-essential \\\n      zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 \\\n      lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev ccache \\\n      libgl1-mesa-dev libxml2-utils xsltproc unzip python gdb python3 \\\n      tmux screen pkg-config libtool automake sudo libgmp-dev iptables \\\n      xl2tpd module-init-tools supervisor emacs gettext libcap-dev && rm -rf /var/lib/apt/lists/*;\n\n# Create a vpn group.\nRUN groupadd vpn\nRUN useradd -g vpn vpn\n\nWORKDIR /opt/work\nRUN git clone git://git.strongswan.org/strongswan.git\nRUN cd strongswan && git checkout 5.6.2 && ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-capabilities=libcap --with-user=vpn --with-group=vpn && \\\n    make && make install\n\n# Create an 'attacker' user. This user will be a member of the vpn\n# group, but does not get superuser privileges.\nRUN adduser attacker\nRUN adduser attacker vpn\n\n# Switch to the attacker user and create the exploit code.\nUSER attacker\nWORKDIR /home/attacker/\n\n# Get a copy of the strongswan codebase for the \"attacker\" user. This\n# is just a lazy way to write the code for the exploit. The only thing\n# that we will use from this copy of the code is the \"stroke\" utility.\n# We will modify the code slightly and use stroke to send a malicious\n# message to the charon daemon.\nRUN git clone git://git.strongswan.org/strongswan.git\nCOPY stroke_patch.txt /home/attacker/stroke_patch.txt\nRUN cd strongswan && git checkout 5.6.2 && \\\n    git apply ../stroke_patch.txt && \\\n    ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make\n\n# Switch back to the root user so that we can start ipsec when we start\n# the container.\nUSER root\n"
}