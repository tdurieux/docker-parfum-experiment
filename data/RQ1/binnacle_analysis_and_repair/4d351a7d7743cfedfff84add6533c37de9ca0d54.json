{
  "startTime": 1674234102944,
  "endTime": 1674234103750,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 141
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 183,
        "lineEnd": 183,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 188,
        "lineEnd": 188,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 154
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 106,
        "lineEnd": 108,
        "columnStart": 5,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 160,
        "lineEnd": 161,
        "columnStart": 5,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 154
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedDockerfile": "FROM kelvinguu/pytorch:1.3\n\n# Add the PostgreSQL PGP key to verify their Debian packages.\n# It should be the same key as https://www.postgresql.org/media/keys/ACCC4CF8.asc\nRUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\n\n# Add PostgreSQL's repository. It contains the most recent stable release of PostgreSQL, ``9.3``.\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\n\n# Install ``python-software-properties``, ``software-properties-common`` and PostgreSQL 9.3\n# There are some warnings (in red) that show up during the build. You can hide\n# them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y python-software-properties software-properties-common postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3 && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update\nRUN apt-get --yes --no-install-recommends --force-yes install libffi6 libffi-dev libssl-dev libpq-dev git && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir jupyter\nRUN jupyter nbextension enable --py --sys-prefix widgetsnbextension  # add Jupyter notebook extension\n\nRUN pip install --no-cache-dir fabric\nRUN pip install --no-cache-dir pyOpenSSL==16.2.0\nRUN pip install --no-cache-dir psycopg2==2.6.1\nRUN pip install --no-cache-dir SQLAlchemy==1.1.0b3\nRUN pip install --no-cache-dir cherrypy==8.1.2\nRUN pip install --no-cache-dir bottle==0.12.10\nRUN pip install --no-cache-dir boto==2.43.0\n\nRUN pip install --no-cache-dir requests\nRUN pip install --no-cache-dir nltk==3.2.3\nRUN python -m nltk.downloader punkt  # download tokenizer data\n\nRUN pip install --no-cache-dir keras==1.1.0\nRUN pip install --no-cache-dir pyhocon line_profiler pytest tqdm faulthandler python-Levenshtein gitpython futures jsonpickle prettytable tensorboard_logger\nRUN pip install --no-cache-dir Pillow==4.1\nRUN pip install --no-cache-dir selenium==3.4.3\n\nRUN apt-get install --no-install-recommends -y vim less tmux nmap wget unzip && rm -rf /var/lib/apt/lists/*;\nCOPY .tmux.conf /root\n\n# vim bindings for Jupyter\n# https://github.com/lambdalisue/jupyter-vim-binding\nRUN mkdir -p $(jupyter --data-dir)/nbextensions\nRUN git clone https://github.com/lambdalisue/jupyter-vim-binding $(jupyter --data-dir)/nbextensions/vim_binding\nRUN jupyter nbextension enable vim_binding/vim_binding\n\n# autoreload for Jupyter\nRUN ipython profile create\nRUN echo 'c.InteractiveShellApp.exec_lines = []' >> ~/.ipython/profile_default/ipython_config.py\nRUN echo 'c.InteractiveShellApp.exec_lines.append(\"%load_ext autoreload\")' >> ~/.ipython/profile_default/ipython_config.py\nRUN echo 'c.InteractiveShellApp.exec_lines.append(\"%autoreload 2\")' >> ~/.ipython/profile_default/ipython_config.py\n\n#===========================================================================================================\n# COPIED FROM: https://github.com/SeleniumHQ/docker-selenium/blob/3.4.0-einsteinium/Base/Dockerfile\n#===========================================================================================================\n\n#================================================\n# Customize sources for apt-get\n#================================================\nRUN  echo \"deb http://archive.ubuntu.com/ubuntu xenial main universe\\n\" > /etc/apt/sources.list \\\n  && echo \"deb http://archive.ubuntu.com/ubuntu xenial-updates main universe\\n\" >> /etc/apt/sources.list \\\n  && echo \"deb http://security.ubuntu.com/ubuntu xenial-security main universe\\n\" >> /etc/apt/sources.list\n\n# No interactive frontend during docker build\nENV DEBIAN_FRONTEND=noninteractive \\\n    DEBCONF_NONINTERACTIVE_SEEN=true\n\n#========================\n# Miscellaneous packages\n# Includes minimal runtime used for executing non GUI Java programs\n#========================\nRUN apt-get -qqy update \\\n  && apt-get -qqy --no-install-recommends install \\\n    bzip2 \\\n    ca-certificates \\\n    openjdk-8-jre-headless \\\n    tzdata \\\n    sudo \\\n    unzip \\\n    wget \\\n  && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n\n#===================\n# Timezone settings\n# Possible alternative: https://github.com/docker/docker/issues/3359#issuecomment-32150214\n#===================\nENV TZ \"UTC\"\nRUN echo \"${TZ}\" > /etc/timezone \\\n  && dpkg-reconfigure --frontend noninteractive tzdata\n\n#==========\n# Selenium\n#==========\nRUN  sudo mkdir -p /opt/selenium \\\n  && wget --no-verbose https://selenium-release.storage.googleapis.com/3.4/selenium-server-standalone-3.4.0.jar \\\n    -O /opt/selenium/selenium-server-standalone.jar\n\n#===========================================================================================================\n# COPIED FROM: https://github.com/SeleniumHQ/docker-selenium/blob/3.4.0-einsteinium/NodeBase/Dockerfile\n#===========================================================================================================\n\n#==============\n# VNC and Xvfb\n#==============\nRUN apt-get update -qqy \\\n  && apt-get -qqy --no-install-recommends install \\\n    locales \\\n    xvfb \\\n  && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n\n#============================\n# Some configuration options\n#============================\nENV SCREEN_WIDTH 1360\nENV SCREEN_HEIGHT 1020\nENV SCREEN_DEPTH 24\nENV DISPLAY :99.0\n\n#========================\n# Selenium Configuration\n#========================\n# As integer, maps to \"maxInstances\"\nENV NODE_MAX_INSTANCES 1\n# As integer, maps to \"maxSession\"\nENV NODE_MAX_SESSION 1\n# As integer, maps to \"port\"\nENV NODE_PORT 5555\n# In milliseconds, maps to \"registerCycle\"\nENV NODE_REGISTER_CYCLE 5000\n# In milliseconds, maps to \"nodePolling\"\nENV NODE_POLLING 5000\n# In milliseconds, maps to \"unregisterIfStillDownAfter\"\nENV NODE_UNREGISTER_IF_STILL_DOWN_AFTER 60000\n# As integer, maps to \"downPollingLimit\"\nENV NODE_DOWN_POLLING_LIMIT 2\n# As string, maps to \"applicationName\"\nENV NODE_APPLICATION_NAME \"\"\n\n# Following line fixes https://github.com/SeleniumHQ/docker-selenium/issues/87\nENV DBUS_SESSION_BUS_ADDRESS=/dev/null\n\n#===========================================================================================================\n# COPIED FROM: https://github.com/SeleniumHQ/docker-selenium/blob/3.4.0-einsteinium/NodeChrome/Dockerfile\n#===========================================================================================================\n\n#============================================\n# Google Chrome\n#============================================\n# can specify versions by CHROME_VERSION;\n#  e.g. google-chrome-stable=53.0.2785.101-1\n#       google-chrome-beta=53.0.2785.92-1\n#       google-chrome-unstable=54.0.2840.14-1\n#       latest (equivalent to google-chrome-stable)\n#       google-chrome-beta  (pull latest beta)\n#============================================\nARG CHROME_VERSION=\"google-chrome-stable\"\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n  && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list \\\n  && apt-get update -qqy \\\n  && apt-get -qqy --no-install-recommends install \\\n    ${CHROME_VERSION:-google-chrome-stable} \\\n  && rm /etc/apt/sources.list.d/google-chrome.list \\\n  && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n\n#==================\n# Chrome webdriver\n#==================\nARG CHROME_DRIVER_VERSION=2.30\nRUN wget --no-verbose -O /tmp/chromedriver_linux64.zip https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip \\\n  && rm -rf /opt/selenium/chromedriver \\\n  && unzip /tmp/chromedriver_linux64.zip -d /opt/selenium \\\n  && rm /tmp/chromedriver_linux64.zip \\\n  && mv /opt/selenium/chromedriver /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION \\\n  && chmod 755 /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION \\\n  && sudo ln -fs /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION /usr/bin/chromedriver\n\n#=================================\n# Chrome Launch Script Modification\n#=================================\nCOPY chrome_launcher.sh /opt/google/chrome/google-chrome\n\n# just installing so we can get tensorboard\nRUN pip install --no-cache-dir tensorflow\n\n# add missing tokenizer package\nRUN python -m nltk.downloader perluniprops\n\nRUN pip install --no-cache-dir regex Twisted service_identity"
}