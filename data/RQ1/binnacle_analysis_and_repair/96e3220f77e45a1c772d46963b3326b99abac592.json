{
  "startTime": 1674245293380,
  "endTime": 1674245293518,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 5,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 5,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 5,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 5,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 5,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# **Description:**\n#\n# **Source:** https://github.com/arypurnomoz/sensu-client.docker\n#\n# This container allows you to run sensu in a container (yay) although there are some caveats.\n#\n# This is a basic container with NO checks. This is enough to get you setup and connecting to the sensu master. However, in order to add checks you'd have to pass in a folder of plugins (if you wish to pass them as a volume) or add them HERE to the Dockerfile.\n#\n# In my example, I use the docker-api and docker folder since I'll be mounting a -v /checks folder containing a few plugins. This is all optional and you may modify it to your own will.\n#\n# You'll also have to modify the checks.json file on the sensu master server in order to make sure you are using the correct plugins in the respective folders.\n#\n#\n# **Running:**\n#\n# ```sh\n# docker run \\\n#  -v /etc/sensu/ssl/cert.pem:/etc/sensu/ssl/cert.pem \\\n#  -v /etc/sensu/ssl/key.pem:/etc/sensu/ssl/key.pem \\\n#  -v /etc/sensu/plugins:/etc/sensu/plugins \\\n#  -e CLIENT_NAME=sensu-client \\\n#  -e CLIENT_ADDRESS=10.0.0.1 \\\n#  -e RABBITMQ_HOST=rabbitmq.local \\\n#  -e RABBITMQ_PORT=5671 \\\n#  -e RABBITMQ_VHOST=\"/sensu\" \\\n#  -e RABBITMQ_USER=sensu \\\n#  -e RABBITMQ_PASS=sensu \\\n#  -e SUB=metrics,check \\\n#  cdrage/sensu-client\n# ```\n#\n# or use the Makefile provided.\n# ex.\n#\n# ```sh\n# make all SSL=/etc/sensu/ssl IP=10.10.10.1 NAME=sensu SUB=default RABBIT_HOST=10.10.10.10 RABBIT_USERNAME=sensu RABBIT_PASS=sensu\n# ```\n\nFROM debian:jessie\n\nENV DEBIAN_FRONTEND=\"noninteractive\"\n\nENV REDIS_POST 6379\nENV RABBITMQ_PORT 5671\nENV RABBITMQ_VHOST /sensu\nENV RABBITMQ_USER sensu\nENV RABBITMQ_PASS sensu\n\nRUN \\\n  apt-get update \\\n  && apt-get install --no-install-recommends -y wget \\\n  && wget -q https://repos.sensuapp.org/apt/pubkey.gpg -O- | apt-key add - \\\n  && echo 'deb http://repos.sensuapp.org/apt sensu main' > /etc/apt/sources.list.d/sensu.list \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y ruby ruby-dev build-essential git procps apt-utils bc ca-certificates \\\n  && apt-get install --no-install-recommends -y sensu \\\n  && gem install sensu-plugin redis --no-rdoc --no-ri && rm -rf /var/lib/apt/lists/*;\n\n#! Install misc packages (in my case, checking the docker port, thus needing docker + docker-api :)\n#! RUN \\\n#!  gem install docker docker-api --no-rdoc --no-ri\n\nADD run.sh /tmp/run.sh\nEXPOSE 3030\nENTRYPOINT [\"/tmp/run.sh\"]\n"
}