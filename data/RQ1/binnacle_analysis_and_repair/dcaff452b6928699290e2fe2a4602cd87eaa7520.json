{
  "startTime": 1674244351617,
  "endTime": 1674244351699,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 7,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 7,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM fsync_error_base\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\nRUN apt-get -y update \\\n    && apt-get -y --no-install-recommends install flex bison zlib1g-dev git libreadline6-dev python3-psycopg2 sudo ccache && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /pgbuild && \\\n    adduser --system --home /pgbuild --no-create-home pgbuild && \\\n    chown pgbuild /pgbuild\n\n#\n# Bind mount target\n#   use -v /path/to/postgres/source:/postgres\n# at \"docker run\" time\n#\n#\nRUN mkdir -p /postgres /mnt/tmp\n\nUSER root\nADD postgres/fsync_test_postgres.sh postgres/pg_fsync_error.py ./\nRUN chmod a+x fsync_test_postgres.sh\n\n# Use docker run -P to get these on some high host ports:\nEXPOSE 5432/tcp\n\n#\n# ccache is installed, so you can map a host directory to /ccache at run time\n# and set the env var CCACHE_DIR=/ccache e.g.\n#\n#   -v $HOME/.ccache:/ccache --env CCACHE_DIR=/ccache\n#\n# Ownership will be set by the script, so you need to mount there not somewhere\n# else.\n#\n\nENTRYPOINT [\"./fsync_test_postgres.sh\"]\nCMD [\"xfs\",\"\",\"\"]\n"
}