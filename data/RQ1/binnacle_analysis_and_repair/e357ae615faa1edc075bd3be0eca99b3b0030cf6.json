{
  "startTime": 1674248581473,
  "endTime": 1674248581895,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedDockerfile": "FROM phusion/baseimage\n\n# Env variables\nENV DEBIAN_FRONTEND noninteractive\n\n#Install dependencies and required requisites\nRUN apt-get update -y \\\n  && apt-get install --no-install-recommends -y \\\n    software-properties-common \\\n  && add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable \\\n  && add-apt-repository -y ppa:george-edison55/cmake-3.x \\\n  && apt-get update -y && rm -rf /var/lib/apt/lists/*;\n\n# All packages (Will install much faster)\nRUN apt-get install --no-install-recommends -y \\\n  build-essential \\\n  cmake \\\n  gdal-bin \\\n  git \\\n  libatlas-base-dev \\\n  libavcodec-dev \\\n  libavformat-dev \\\n  libboost-date-time-dev \\\n  libboost-filesystem-dev \\\n  libboost-iostreams-dev \\\n  libboost-log-dev \\\n  libboost-python-dev \\\n  libboost-regex-dev \\\n  libboost-thread-dev \\\n  libeigen3-dev \\\n  libflann-dev \\\n  libgdal-dev \\\n  libgeotiff-dev \\\n  libgoogle-glog-dev \\\n  libgtk2.0-dev \\\n  libjasper-dev \\\n  libjpeg-dev \\\n  libjsoncpp-dev \\\n  liblapack-dev \\\n  liblas-bin \\\n  libpng-dev \\\n  libproj-dev \\\n  libsuitesparse-dev \\\n  libswscale-dev \\\n  libtbb2 \\\n  libtbb-dev \\\n  libtiff-dev \\\n  libvtk6-dev \\\n  libxext-dev \\\n  python-dev \\\n  python-gdal \\\n  python-matplotlib \\\n  python-networkx \\\n  python-pip \\\n  python-pyproj \\\n  python-software-properties \\\n  python-wheel \\\n  swig2.0 \\\n  grass-core && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get remove libdc1394-22-dev\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir setuptools\nRUN pip install --no-cache-dir -U \\\n  appsettings \\\n  exifread \\\n  gpxpy \\\n  loky \\\n  numpy==1.15.4 \\\n  psutil \\\n  pyproj \\\n  PyYAML==3.13 \\\n  repoze.lru \\\n  scipy==1.2.1 \\\n  shapely \\\n  xmltodict \\\n  rasterio \\\n  attrs==19.1.0 \\\n  pyodm==1.5.2b1 \\\n  Pillow\n\nRUN pip install --no-cache-dir --upgrade cryptography && python -m easy_install --upgrade pyOpenSSL\n\nENV PYTHONPATH=\"$PYTHONPATH:/code/SuperBuild/install/lib/python2.7/dist-packages\"\nENV PYTHONPATH=\"$PYTHONPATH:/code/SuperBuild/src/opensfm\"\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/code/SuperBuild/install/lib\"\n\n# Prepare directories\nRUN mkdir /code\nWORKDIR /code\n\n# Copy repository files\nCOPY CMakeLists.txt /code/CMakeLists.txt\nCOPY configure.sh /code/configure.sh\nCOPY /modules/ /code/modules/\nCOPY /opendm/ /code/opendm/\nCOPY run.py /code/run.py\nCOPY run.sh /code/run.sh\nCOPY /stages/ /code/stages/\nCOPY /SuperBuild/cmake/ /code/SuperBuild/cmake/\nCOPY /SuperBuild/CMakeLists.txt /code/SuperBuild/CMakeLists.txt\nCOPY docker.settings.yaml /code/settings.yaml\nCOPY VERSION /code/VERSION\n\n# Compile code in SuperBuild and root directories\nRUN cd SuperBuild \\\n  && mkdir build \\\n  && cd build \\\n  && cmake .. \\\n  && make -j$(nproc) \\\n  && cd ../.. \\\n  && mkdir build \\\n  && cd build \\\n  && cmake .. \\\n  && make -j$(nproc)\n\n# Cleanup APT\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Clean Superbuild\nRUN rm -rf \\\n  /code/SuperBuild/build/opencv \\\n  /code/SuperBuild/download \\\n  /code/SuperBuild/src/ceres \\\n  /code/SuperBuild/src/mvstexturing \\\n  /code/SuperBuild/src/opencv \\\n  /code/SuperBuild/src/opengv \\\n  /code/SuperBuild/src/pcl \\\n  /code/SuperBuild/src/pdal\n\n# Entry point\nENTRYPOINT [\"python\", \"/code/run.py\"]\n\n"
}