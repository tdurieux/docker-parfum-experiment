{
  "startTime": 1674239101236,
  "endTime": 1674239101419,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 2,
        "columnEnd": 23
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 55
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 5,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10.15.2-alpine\n\nLABEL maintainer \"https://github.com/blacktop\"\n\nENV VERSION 6.6.2\nENV DOWNLOAD_URL https://artifacts.elastic.co/downloads/kibana\nENV TARBAL \"${DOWNLOAD_URL}/kibana-oss-${VERSION}-linux-x86_64.tar.gz\"\nENV TARBALL_ASC \"${DOWNLOAD_URL}/kibana-oss-${VERSION}-linux-x86_64.tar.gz.asc\"\nENV TARBALL_SHA \"41011b75cf1af211de5ef72284da4999cb833a013449d088deb2ef2ec6b841b5e8a715ee4e77130b9ba958f2809d05c9184c860bbd12fce27485cc4de730388f\"\nENV GPG_KEY \"46095ACC8548582C1A2699A9D27D666CD88E42B4\"\n\nENV PATH /usr/share/kibana/bin:$PATH\n\nRUN apk add --no-cache bash su-exec\nRUN apk add --no-cache -t .build-deps wget ca-certificates gnupg openssl \\\n  && set -ex \\\n  && cd /tmp \\\n  && echo \"===> Install Kibana...\" \\\n  && wget --progress=bar:force -O kibana.tar.gz \"$TARBAL\"; \\\n  if [ \"$TARBALL_SHA\" ]; then \\\n  echo \"$TARBALL_SHA *kibana.tar.gz\" | sha512sum -c -; \\\n  fi; \\\n  if [ \"$TARBALL_ASC\" ]; then \\\n  wget --progress=bar:force -O kibana.tar.gz.asc \"$TARBALL_ASC\"; \\\n  export GNUPGHOME=\"$(mktemp -d)\"; \\\n  ( gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n  || gpg --batch --keyserver pgp.mit.edu --recv-keys \"$GPG_KEY\" \\\n  || gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$GPG_KEY\") \\\n  gpg --batch --verify kibana.tar.gz.asc kibana.tar.gz; \\\n  rm -rf \"$GNUPGHOME\" kibana.tar.gz.asc || true; \\\n  fi; \\\n  tar -xf kibana.tar.gz \\\n  && ls -lah \\\n  && mv kibana-$VERSION-linux-x86_64 /usr/share/kibana \\\n  && adduser -DH -s /sbin/nologin kibana \\\n  # usr alpine nodejs and not bundled version\n  && bundled='NODE=\"${DIR}/node/bin/node\"' \\\n  && apline_node='NODE=\"/usr/bin/node\"' \\\n  && sed -i \"s|$bundled|$apline_node|g\" /usr/share/kibana/bin/kibana-plugin \\\n  && sed -i \"s|$bundled|$apline_node|g\" /usr/share/kibana/bin/kibana \\\n  && rm -rf /usr/share/kibana/node \\\n  && chown -R kibana:kibana /usr/share/kibana \\\n  && rm -rf /tmp/* \\\n  && apk del --purge .build-deps && rm kibana.tar.gz\n\nCOPY config/kibana/kibana.yml /usr/share/kibana/config/kibana.yml\nCOPY docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\n\nWORKDIR /usr/share/kibana\n\nEXPOSE 5601\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"kibana\"]\n"
}