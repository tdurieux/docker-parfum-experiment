{
  "startTime": 1674242592489,
  "endTime": 1674242592973,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:8.7\nLABEL maintainer=\"Thomas Rabaix <rabaix@ekino.com>\"\n\nENV DEBIAN_FRONTEND=noninteractive \\\n    LANG=C.UTF-8 \\\n    NVM_DIR=/root/.nvm \\\n    PATH=/root/.nvm/versions/node/current/bin:usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\nARG NODE_VERSION\nARG NPM_VERSION\nARG NVM_VERSION\nARG CI_HELPER_VERSION\nARG MODD_VERSION\n\nRUN echo \"Starting ...\" && \\\n    echo \"Acquire::Check-Valid-Until \\\"false\\\";\" > /etc/apt/apt.conf && \\\n    echo \"deb http://deb.debian.org/debian jessie main\" > /etc/apt/sources.list && \\\n    echo \"deb-src http://deb.debian.org/debian jessie main\" >> /etc/apt/sources.list && \\\n    echo \"deb http://security.debian.org/ jessie/updates main\" >> /etc/apt/sources.list && \\\n    echo \"deb-src http://security.debian.org/ jessie/updates main\" >> /etc/apt/sources.list && \\\n    apt-get -qq clean && apt-get -qq update && \\\n    apt-get -qq --no-install-recommends -y install build-essential libssl-dev curl git imagemagick subversion make mercurial \\\n      libmcrypt-dev libreadline-dev ruby-full openssh-client ocaml libelf-dev bzip2 gcc g++ && \\\n    gem install rb-inotify:'~> 0.9.10' sass --verbose && \\\n    gem install scss_lint:'~> 0.57.1' --verbose && \\\n\n    echo \"Done base install!\" && \\\n\n    echo \"Install CI Helper\" && \\\n    curl -f -sSL https://github.com/rande/gitlab-ci-helper/releases/download/${CI_HELPER_VERSION}/linux-amd64-gitlab-ci-helper -o /usr/bin/ci-helper && \\\n    chmod 755 /usr/bin/ci-helper && \\\n    echo \"Done install CI Helper\" && \\\n\n    echo \"Install Modd\" && \\\n    curl -f -sSL https://github.com/cortesi/modd/releases/download/v${MODD_VERSION}/modd-${MODD_VERSION}-linux64.tgz | tar -xOvzf - modd-${MODD_VERSION}-linux64/modd > /usr/bin/modd && \\\n    chmod 755 /usr/bin/modd && \\\n    echo \"Done Install Modd\" && \\\n\n    echo \"Starting Javascript...\" && \\\n    git clone https://github.com/creationix/nvm.git /root/.nvm && cd /root/.nvm && git checkout v${NVM_VERSION} && \\\n    . /root/.nvm/nvm.sh && \\\n\n    nvm install ${NODE_VERSION} && nvm alias default ${NODE_VERSION} && \\\n    ln -s /root/.nvm/versions/node/v${NODE_VERSION} /root/.nvm/versions/node/current && \\\n\n    npm install -g npm@${NPM_VERSION} && \\\n\n    curl -f -sSL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo \"deb http://dl.yarnpkg.com/debian/ stable main\" >> /etc/apt/sources.list.d/yarn.list && \\\n    apt-get update && apt-get install -y yarn --no-install-recommends && \\\n\n    echo \"Done JS!\" && \\\n\n    echo \"Starting AWS\" && \\\n    apt-get -qq --no-install-recommends -y install python-pip groff-base && \\\n    pip install --no-cache-dir -q -U awscli && \\\n    echo \"Done AWS!\" && \\\n\n    echo \"Adding an up to date mime-types definition file\" && \\\n    curl -f -sSL https://salsa.debian.org/debian/mime-support/raw/master/mime.types -o /etc/mime.types && \\\n\n    echo \"Cleaning files!\" && \\\n    rm -rf /tmp/* && \\\n    apt-get -qq -y remove --purge emacsen-common fakeroot file firebird2.5-common firebird2.5-common-doc \\\n      firebird2.5-server-common man-db manpages manpages-dev \\\n      mysql-client-5.5 mysql-common mysql-server-5.5 mysql-server-core-5.5 odbcinst odbcinst1debian2 \\\n      patch po-debconf psmisc python-pip xauth xtrans-dev xz-utils zlib1g-dev && \\\n\n    apt-get -qq -y autoremove && \\\n    apt-get -qq clean && apt-get -qq purge && \\\n    rm -rf /var/lib/apt/lists/* /var/lib/dpkg/*-old && \\\n    rm -rf /usr/share/doc /usr/share/locale/[a-df-z]* /usr/share/locale/e[a-lo-z]* /usr/share/locale/en@* /usr/share/locale/en_GB && \\\n\n    echo \"Done!\" && npm cache clean --force;\n"
}