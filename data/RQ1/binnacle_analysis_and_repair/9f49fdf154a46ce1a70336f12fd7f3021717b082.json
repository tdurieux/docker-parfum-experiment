{
  "startTime": 1674252684198,
  "endTime": 1674252684454,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 6,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 237
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 5,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 237
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 5,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 237
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedDockerfile": "#FROM kinetictheory/draco-ci-2019june\n\n# Use ubuntu if building from scratch\nFROM ubuntu:latest\n\n# This image:\n# 1. cd /D f:\\work\\docker (copy Dockerfile and packages.yaml to this location).\n# 2. docker login -u kinetictheory (and password) # ref https://docs.docker.com/get-started/part2/\n# 3. docker build --rm --pull --tag draco-ci-2019june:latest .\n# 4. docker image ls -a ==> find container name (or docker ps)\n# 5. docker commit -m \"added sphinx and mscgen\" -a kinetictheory <container-name> kinetictheory/draco-ci-2019june:latest # queues for upload\n# 6. docker push kinetictheory/draco-ci-2019june:latest\n\nMAINTAINER KineticTheory \"https://github.com/KineticTheory\"\n\n# See draco/.travis-run-tests.sh for some instructions.\n\n## Environment needed by 'docker build' ----------------------------------------\n\n## for apt to be noninteractive\n## https://stackoverflow.com/questions/8671308/non-interactive-method-for-dpkg-reconfigure-tzdata\n## https://spack.readthedocs.io/en/latest/workflows.html?highlight=docker\nENV DEBIAN_FRONTEND noninteractive\nENV DEBCONF_NONINTERACTIVE_SEEN true\nENV SPACK_ROOT=/vendors/spack\nENV DRACO_TPL=\"cmake@3.14.4 gsl@2.5 numdiff@5.9.0 random123@1.09 openmpi@3.1.4 netlib-lapack@3.8.0 metis@5.1.0 parmetis@4.0.3 superlu-dist trilinos mscgen\"\nENV FORCE_UNSAFE_CONFIGURE=1\nENV DISTRO=bionic\nENV CLANG_FORMAT_VER=6.0\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1\n\n## Update packages on the raw Ubuntu image -------------------------------------------\n\nRUN sed -i '/DISTRO/d' /etc/apt/sources.list\n# try to eliminate warning about \"mesg: ttyname failed: Inappropriate ioctl for device\"\nRUN sed -i 's/mesg/tty -s \\&\\& mesg/' /root/.profile\nRUN cat /root/.profile\n\n## preesed tzdata, update package index, upgrade packages and install needed software\nRUN echo \"tzdata tzdata/Areas select US\" > /tmp/preseed.txt; \\\n    echo \"tzdata tzdata/Zones/US select Mountain\" >> /tmp/preseed.txt; \\\n    debconf-set-selections /tmp/preseed.txt && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends tzdata && rm -rf /var/lib/apt/lists/*;\n\n## Basic admin tools\nRUN apt-get install -y --no-install-recommends apt-utils automake autoconf autotools-dev python3 software-properties-common flex bison ssh && rm -rf /var/lib/apt/lists/*;\n\n## Basic developer tools\nRUN apt-get install -y --no-install-recommends build-essential ca-certificates coreutils curl doxygen environment-modules gcc-8 g++-8 gfortran-8 git grace graphviz python3-pip python3-sphinx python3-sphinx-rtd-theme tar tcl tk unzip wget && rm -rf /var/lib/apt/lists/*;\n# RUN apg-get upgrade\nRUN if ! test -f /etc/profile.d/modules.sh; then \\\n      echo \"source /usr/share/modules/init/bash\" > /etc/profile.d/modules.sh; \\\n    fi\n\n## LLVM tools like clang-format\n## Note: we can't use variables in the add-apt-repository commmand as this\n##       creates an invalid entry in /etc/apt/sources.list\n#RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - ; \\\n#    add-apt-repository 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-6.0 main' ; \\\n#    apt-get update; \\\n#    apt-get install -y clang-format-${CLANG_FORMAT_VER}; \\\n#    export PATH=$PATH:/usr/bin\nRUN apt-get install -y --no-install-recommends clang-format-${CLANG_FORMAT_VER}; rm -rf /var/lib/apt/lists/*; \\\n     ln -s /usr/bin/clang-format-6.0 /usr/bin/clang-format; \\\n     export PATH=$PATH:/usr/bin\n\n## code cov plugin...\nRUN python3 -m pip install --upgrade pip\nRUN python3 -m pip install codecov\n\n## SPACK -----------------------------------------------------------------------------\n\n# install/setup spack\nRUN mkdir -p $SPACK_ROOT/etc/spack/linux\n# Only download spack if it doesn't already exist.\nRUN if ! test -d $SPACK_ROOT/opt/spack ; then \\\n      curl -f -s -L https://api.github.com/repos/spack/spack/tarball | tar xzC $SPACK_ROOT --strip 1; \\\n    fi\n# note: if you wish to change default settings, add files alongside\n#       the Dockerfile with your desired settings. Then uncomment this line\nCOPY packages.yaml $SPACK_ROOT/etc/spack/linux\n\n# metis/parmetis downloads are broken right now, use a mirror.\nCOPY mirrors.yaml $SPACK_ROOT/etc/spack\nRUN mkdir -p $SPACK_ROOT/spack.mirror/metis\nRUN mkdir -p $SPACK_ROOT/spack.mirror/parmetis\nCOPY metis-5.1.0.tar.gz $SPACK_ROOT/spack.mirror/metis\nCOPY parmetis-4.0.3.tar.gz $SPACK_ROOT/spack.mirror/parmetis\n\nRUN if ! test -f /etc/profile.d/spack.sh; then \\\n      echo \"source $SPACK_ROOT/share/spack/setup-env.sh\" > /etc/profile.d/spack.sh; \\\n    fi\n\n## Provide some TPLs\nRUN export PATH=$SPACK_ROOT/bin:$PATH && spack install -n ${DRACO_TPL} && spack clean -a\n\n# image run hook: the -l will make sure /etc/profile.d/*.sh environments are loaded\nCMD /bin/bash -l\n"
}