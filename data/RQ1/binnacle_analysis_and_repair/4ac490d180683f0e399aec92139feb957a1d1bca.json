{
  "startTime": 1674251592413,
  "endTime": 1674251592592,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu\n\nENV jdk_download_url=https://download.java.net/java/GA/jdk10/10.0.2/19aef61b38124481863b1413dce1855f/13/openjdk-10.0.2_linux-x64_bin.tar.gz\nENV jdk_install_path=/opt/jdk\nENV konan_data_dir=/opt/konan\nENV gradle_version=5.1\nENV gradle_install_path=/opt/gradle-${gradle_version}\n\nRUN apt-get -y update\nRUN apt-get -y upgrade\nRUN apt-get -y --no-install-recommends install wget unzip && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /tmp/kotlin-native-bootstrap\nWORKDIR /tmp/kotlin-native-bootstrap\n\n# Obtain the freshest CA certs bundle from the latest available JDK.\n# Need it because newer CA certs will allow making SSL handshakes to AWS-hosted hosts such as https://downloads.jetbrains.com.\nRUN apt-get -y --no-install-recommends install default-jdk && rm -rf /var/lib/apt/lists/*;\nRUN update-alternatives --list java | sed 's/\\/bin\\/java$//' | xargs -I %% cp %%/lib/security/cacerts ./\nRUN apt-get -y purge --auto-remove default-jdk\n\n# Install non-LTS JDK:\nRUN wget ${jdk_download_url}\nRUN tar -xzf openjdk-*.tar.gz && rm openjdk-*.tar.gz\nRUN mv ./jdk* ${jdk_install_path}\n# use newer CA certs:\nRUN mv ${jdk_install_path}/lib/security/cacerts ${jdk_install_path}/lib/security/cacerts.orig\nRUN cp ./cacerts ${jdk_install_path}/lib/security/\nRUN update-alternatives --install /usr/bin/java java ${jdk_install_path}/bin/java 1\nRUN update-alternatives --install /usr/bin/javac javac ${jdk_install_path}/bin/javac 1\n\n# Install Gradle:\nRUN wget https://services.gradle.org/distributions/gradle-${gradle_version}-bin.zip\nRUN unzip ./gradle-*.zip\nRUN mv ./gradle-${gradle_version} ${gradle_install_path}\n\n# Install Kotlin/Native through the bootstrap Gradle project:\nCOPY ./build.gradle.kts ./\nRUN mkdir ${konan_data_dir}\nRUN KONAN_DATA_DIR=${konan_data_dir} ${gradle_install_path}/bin/gradle model\n\n# For login shells (ex: docker attach <hash>):\nRUN echo '#!/bin/sh' > /etc/profile.d/konan.sh\nRUN echo \"export KONAN_DATA_DIR=${konan_data_dir}\" >> /etc/profile.d/konan.sh\nRUN echo \"export PATH=\\$PATH:`ls -1d ${konan_data_dir}/kotlin-native-*/ | head -n 1`bin\" >> /etc/profile.d/konan.sh\nRUN chmod +x /etc/profile.d/konan.sh\n\n# For non-login shells (ex: docker exec -it <hash> bash):\nRUN echo '. /etc/profile.d/konan.sh' > /root/.bashrc\n\nRUN rm -rf /tmp/*\nWORKDIR /root\n\nENTRYPOINT /bin/bash\n"
}