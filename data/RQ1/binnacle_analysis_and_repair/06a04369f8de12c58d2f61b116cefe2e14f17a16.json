{
  "startTime": 1674239472449,
  "endTime": 1674239472917,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 83
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 130,
        "columnEnd": 142
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 319
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 319
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM continuumio/anaconda:4.1.1\n\nENV HOME /root\nENV DEBIAN_FRONTEND noninteractive\n\nRUN conda install  -f  numpy\n\nRUN \\\n    apt-get update && \\\n    apt-get -y --no-install-recommends -q install build-essential automake autoconf libxmu-dev g++ gcc libpthread-stubs0-dev libtool libboost-program-options-dev libboost-python-dev zlib1g-dev libc6 libgcc1 libstdc++6 libblas-dev liblapack-dev git telnet procps memcached libmemcached-dev mysql-client-5.5 mysql-common libmysqlclient-dev unzip && rm -rf /var/lib/apt/lists/*;\n\n# opne issues mean we can't use latest xgboost with the sparse matrices we sometime create in python pipelines\n#https://github.com/dmlc/xgboost/issues/1238\n#https://github.com/dmlc/xgboost/issues/1583\nRUN pip install --no-cache-dir xgboost==0.4a30\nRUN cd /tmp/ && \\\n    TF_WHL_FILE=tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl && \\\n    wget https://storage.googleapis.com/tensorflow/linux/cpu/${TF_WHL_FILE} && \\\n    pip install --no-cache-dir ${TF_WHL_FILE} && \\\n    rm ${TF_WHL_FILE}\n\n#RUN cd /usr/local/src && mkdir xgboost && cd xgboost && \\\n#    git clone https://github.com/dmlc/xgboost.git && cd xgboost && \\\n#    git checkout tags/v0.40 && \\\n#    ./build.sh && \\\n#    cd python-package  && python setup.py install && \\\n#    cp -R /usr/local/src/xgboost/xgboost/wrapper/ /opt/conda/lib/python2.7/site-packages/xgboost-0.4-py2.7.egg/xgboost\n\n# Install and make vw (Vowpal Wabbit)\n\nRUN cd /usr/local/src; git clone https://github.com/JohnLangford/vowpal_wabbit.git; cd vowpal_wabbit; git checkout 8.1 ; ./autogen.sh; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; make; make test; make install\n\n\nRUN cd /usr/local/src; git clone https://github.com/seldonio/wabbit_wappa.git  ; cd wabbit_wappa ; python setup.py install\n\n# perf\n\nRUN cd /usr/local/src; wget https://osmot.cs.cornell.edu/kddcup/perf/perf.src.tar.gz; tar xvf perf.src.tar.gz; rm perf.src.tar.gz; mv perf.src perf; cd perf; make -B perf; make install\n\nRUN pip install --no-cache-dir kazoo filechunkio Flask gunicorn pylibmc gensim annoy smart_open\n\n# keras\n\nRUN cd /usr/local/src && mkdir keras && cd keras && \\\n       git clone https://github.com/fchollet/keras.git && \\\n       cd keras && git checkout tags/0.2.0 && python setup.py install\n\n# bayes_opt\n\nRUN cd /ur/local/src; git clone https://github.com/fmfn/BayesianOptimization ; cd BayesianOptimization ; python setup.py install\n\n# ensure latest sklearn\n\nRUN pip install --no-cache-dir sklearn --upgrade\n\n# ensure latest pandas\n\nRUN pip install --no-cache-dir pandas --upgrade\n\n# seldon shell requisites\n\nRUN pip install --no-cache-dir cmd2 MySQL-python\n\n# for ngram prediction\nRUN pip install --no-cache-dir DAWG\n\nRUN pip install --no-cache-dir -e git+git://github.com/SeldonIO/wabbit_wappa#egg=wabbit-wappa-3.0.2\n\nRUN pip install --no-cache-dir -e git+git://github.com/fmfn/BayesianOptimization#egg=bayes_opt\n\n###RUN pip install seldon==1.5.1\nARG SELDON_PYTHON_PACKAGE_VERSION\nRUN echo \"using SELDON_PYTHON_PACKAGE_VERSION[${SELDON_PYTHON_PACKAGE_VERSION}]\"\nCOPY seldon-${SELDON_PYTHON_PACKAGE_VERSION}.tar.gz /tmp/\nRUN \\\n    mkdir -p /tmp/install && \\\n    cd /tmp/install && \\\n    mv /tmp/seldon-${SELDON_PYTHON_PACKAGE_VERSION}.tar.gz . && \\\n    tar xfz seldon-${SELDON_PYTHON_PACKAGE_VERSION}.tar.gz && \\\n    cd seldon-${SELDON_PYTHON_PACKAGE_VERSION} && \\\n    pip install --no-cache-dir python-daemon && \\\n    python setup.py install && \\\n    rm -rf /tmp/install && rm seldon-${SELDON_PYTHON_PACKAGE_VERSION}.tar.gz\n\n\nENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/lib\n\nENV SELDON_HOME /home/seldon\nADD ./scripts $SELDON_HOME/scripts\n\n# install proto buf\nRUN mkdir -p /tmp/protoc && \\\n    curl -f -L https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip > /tmp/protoc/protoc.zip && \\\n    cd /tmp/protoc && \\\n    unzip protoc.zip && \\\n    cp /tmp/protoc/bin/protoc /usr/local/bin && \\\n    chmod go+rx /usr/local/bin/protoc && \\\n    cd /tmp && \\\n    rm -r /tmp/protoc\n\nENV GRPC_PYTHON_VERSION 1.0.0\nRUN pip install --no-cache-dir grpcio==${GRPC_PYTHON_VERSION} grpcio-tools==${GRPC_PYTHON_VERSION}\n\n# Define default command.\nCMD [\"bash\"]\n\n"
}