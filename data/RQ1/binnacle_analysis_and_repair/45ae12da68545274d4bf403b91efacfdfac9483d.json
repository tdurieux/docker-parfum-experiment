{
  "startTime": 1674245590355,
  "endTime": 1674245590441,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile to build docker-compose for aarch64\nFROM arm64v8/python:3.6.5-stretch\n\n# Add env\nENV LANG C.UTF-8\n\n# Enable cross-build for aarch64\nCOPY ./vendor/qemu-bin /usr/bin/\nRUN [ \"cross-build-start\" ]\n\n# Set the versions\nENV DOCKER_COMPOSE_VER 1.22.0\n# docker-compose requires pyinstaller 3.3.1 (check github.com/docker/compose/requirements-build.txt)\n# If this changes, you may need to modify the version of \"six\" below\nENV PYINSTALLER_VER 3.3.1\n# \"six\" is needed for PyInstaller. v1.11.0 is the latest as of PyInstaller 3.3.1\nENV SIX_VER 1.11.0\n\n# Install dependencies\n# RUN apt-get update && apt-get install -y\nRUN pip install --no-cache-dir six==$SIX_VER\n\n# Compile the pyinstaller \"bootloader\"\n# https://pyinstaller.readthedocs.io/en/stable/bootloader-building.html\nWORKDIR /build/pyinstallerbootloader\nRUN curl -fsSL https://github.com/pyinstaller/pyinstaller/releases/download/v$PYINSTALLER_VER/PyInstaller-$PYINSTALLER_VER.tar.gz | tar xvz >/dev/null \\\n    && cd PyInstaller*/bootloader \\\n    && python3 ./waf all\n\n# Clone docker-compose\nWORKDIR /build/dockercompose\nRUN git clone https://github.com/docker/compose.git . \\\n    && git checkout $DOCKER_COMPOSE_VER\n\n# Run the build steps (taken from github.com/docker/compose/script/build/linux-entrypoint)\nRUN mkdir ./dist \\\n    && pip install --no-cache-dir -q -r requirements.txt -r \\\n    && ./script/build/write-git-sha \\\n    && pyinstaller docker-compose.spec \\\n    && mv dist/docker-compose ./docker-compose-$(uname -s)-$(uname -m)\n\n# Disable cross-build for aarch64\n# Note: don't disable this, since we want to run this container on x86_64, not aarch64\n# RUN [ \"cross-build-end\" ]\n\n# Copy out the generated binary\nVOLUME /dist\nCMD cp docker-compose-* /dist\n"
}