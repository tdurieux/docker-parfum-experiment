{
  "startTime": 1674235203009,
  "endTime": 1674235203095,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 6,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\n# Install dependencies from apt\nRUN apt-get -y update && \\\n    apt-get install --no-install-recommends -y python-pip rng-tools libgmp3-dev lsof sqlite3 gnupg2 && rm -rf /var/lib/apt/lists/*;\n\n# add a minimal pid 1\nENV TINI_VERSION v0.18.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc /tini.asc\n\n# Check signed tini binary\nENV GPG_KEY_SERVERS_LIST ha.pool.sks-keyservers.net \\\n                         hkp://p80.pool.sks-keyservers.net:80 \\\n                         keyserver.ubuntu.com \\\n                         hkp://keyserver.ubuntu.com:80 \\\n                         pgp.mit.edu\n\nRUN for server in $GPG_KEY_SERVERS_LIST; do \\\n      gpg --batch --keyserver \"$server\" --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 && break || :; \\\n  done\nRUN gpg2 --verify /tini.asc\n\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"--\"]\n\nWORKDIR /src/blockstack\n\n# Copy all files from the repo into the container\nCOPY . .\n\n# Upgrade pip and install pyparsing\nRUN pip install --no-cache-dir pyparsing\n\n# Install Blockstack from source\nRUN python ./setup.py build && python ./setup.py install\n\n# Boot up\nCMD [\"bash\", \"api/deployment/boot-docker.sh\"]\n"
}