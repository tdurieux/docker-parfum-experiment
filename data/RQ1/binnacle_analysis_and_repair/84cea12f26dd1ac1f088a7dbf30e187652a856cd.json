{
  "startTime": 1674238998601,
  "endTime": 1674239000733,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 3,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 203,
        "lineEnd": 203,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 207,
        "lineEnd": 207,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 211,
        "lineEnd": 211,
        "columnStart": 16,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 215,
        "lineEnd": 215,
        "columnStart": 3,
        "columnEnd": 69
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 3,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Auto-generated via Ansible: edit build/ansible/DOCKERFILES/Dockerfile-work.j2 instead.\nFROM devilbox/php-fpm:5.2-prod\nMAINTAINER \"cytopia\" <cytopia@everythingcli.org>\n\n\n###\n### Labels\n###\nLABEL \\\n\tname=\"cytopia's PHP-FPM 5.2 Image\" \\\n\timage=\"devilbox/php-fpm\" \\\n\ttag=\"5.2-work\" \\\n\tvendor=\"devilbox\" \\\n\tlicense=\"MIT\"\n\n\n###\n### Envs\n###\nENV BASH_PROFILE=\".bashrc\"\n\n\n###\n### Install Tools\n###\nRUN set -x \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests apt-utils \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests \\\n\t\tcurl \\\n\t\tdirmngr \\\n\t\tgnupg \\\n\t&& echo 'Acquire::Check-Valid-Until no;' > /etc/apt/apt.conf.d/99no-check-valid-until \\\n\t&& echo \"deb http://archive.debian.org/debian jessie-backports main\" > /etc/apt/sources.list.d/backports.list \\\n\t&& curl -f -sS \"https://packages.blackfire.io/gpg.key\" 2>/dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n\t&& echo \"deb http://packages.blackfire.io/debian any main\" > /etc/apt/sources.list.d/blackfire.list \\\n\t&& APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv A1715D88E1DF1F24 \\\n\t&& echo \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu wily main\" > /etc/apt/sources.list.d/git.list \\\n\t&& APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5 \\\n\t&& echo \"deb http://repo.mongodb.org/apt/debian jessie/mongodb-org/3.6 main\" > /etc/apt/sources.list.d/mongo.list \\\n\t&& curl -f -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc 2>/dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n\t&& echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main\" > /etc/apt/sources.list.d/pgsql.list \\\n\t&& curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg 2>/dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n\t&& echo \"deb http://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests \\\n\t\tack-grep \\\n\t\taspell \\\n\t\tautoconf \\\n\t\tautomake \\\n\t\tbash-completion \\\n\t\tbinutils \\\n\t\tblackfire-agent \\\n\t\tbuild-essential \\\n\t\tbzip2 \\\n\t\tcoreutils \\\n\t\tdnsutils \\\n\t\tdos2unix \\\n\t\tfile \\\n\t\tgawk \\\n\t\tgcc \\\n\t\tgit \\\n\t\tgit-flow \\\n\t\tgit-svn \\\n\t\tgraphviz \\\n\t\thostname \\\n\t\thtop \\\n\t\timagemagick \\\n\t\tiputils-ping \\\n\t\tjq \\\n\t\tless \\\n\t\tlibc-dev \\\n\t\tlibffi-dev \\\n\t\tlibssl-dev \\\n\t\tlibyaml-dev \\\n\t\tmake \\\n\t\tmongodb-org-shell \\\n\t\tmongodb-org-tools \\\n\t\tmoreutils \\\n\t\tmysql-client \\\n\t\tnano \\\n\t\tnet-tools \\\n\t\tnetcat \\\n\t\topenssh-client \\\n\t\tpatch \\\n\t\tpatchelf \\\n\t\tpostgresql-client \\\n\t\tredis-tools \\\n\t\trsync \\\n\t\trubygems \\\n\t\truby-dev \\\n\t\tshellcheck \\\n\t\tsilversearcher-ag \\\n\t\tsubversion \\\n\t\tsudo \\\n\t\ttig \\\n\t\ttree \\\n\t\tunzip \\\n\t\tvim \\\n\t\tw3m \\\n\t\twget \\\n\t\twhois \\\n\t\txz-utils \\\n\t\tyarn \\\n\t\tzip \\\n\t\tzlib1g-dev \\\n\t\tzsh \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false apt-utils \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\n\t&& (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \\\n\t&& (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \\\n\t&& (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true)\n\n\n###\n### Install custom software\n###\nRUN set -x \\\n# pip\n\t&& DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests \\\n  libpython-dev \\\n&& DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n&& rm -rf /var/lib/apt/lists/* \\\n\n&& curl -f -sS https://bootstrap.pypa.io/get-pip.py | python \\\n\n# nvm\n\t&& git clone https://github.com/creationix/nvm /opt/nvm \\\n&& cd /opt/nvm \\\n&& git checkout \"$(git describe --abbrev=0 --tags --match \"v[0-9]*\" $(git rev-list --tags --max-count=1))\" \\\n\n&& { \\\n  echo 'export NVM_DIR=\"/opt/nvm\"'; \\\n  echo '[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm'; \\\n  echo '[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion'; \\\n} >> /home/devilbox/.bashrc \\\n\n&& chown -R devilbox:devilbox /opt/nvm \\\n\n\t&& su  -c '. /opt/nvm/nvm.sh; nvm install node' devilbox \\\n&& su  -c '. /opt/nvm/nvm.sh; nvm install --lts' devilbox \\\n&& su  -c '. /opt/nvm/nvm.sh; nvm use node' devilbox \\\n\n# awesomeci\n\t&& git clone https://github.com/cytopia/awesome-ci.git /usr/local/src/awesome-ci \\\n&& cd /usr/local/src/awesome-ci \\\n&& git checkout $(git describe --abbrev=0 --tags) \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n&& make install \\\n&& cd / \\\n&& rm -rf /usr/local/src/awesome-ci \\\n\n# gitflow\n\t&& git clone git://github.com/petervanderdoes/gitflow.git /tmp/gitflow \\\n&& cd /tmp/gitflow \\\n&& make install \\\n&& cd / && rm -rf /tmp/gitflow \\\n\n# linkcheck\n\t&& curl -f https://raw.githubusercontent.com/cytopia/linkcheck/master/linkcheck > /usr/local/bin/linkcheck \\\n&& chmod +x /usr/local/bin/linkcheck \\\n\n# linuxbrew\n\t&& git clone https://github.com/Linuxbrew/brew.git /usr/local/src/linuxbrew \\\n&& chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/linuxbrew \\\n&& v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p \\\n    'echo \"PATH=/usr/local/src/linuxbrew/bin:/usr/local/src/linuxbrew/sbin:/usr/bin:/usr/sbin:/bin:/sbin\" >> /home/devilbox/${v}' \\\n&& v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p \\\n    'echo \"export MANPATH=/usr/local/src/linuxbrew/share/man:${MANPATH}\"   >> /home/devilbox/${v}' \\\n&& v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p \\\n    'echo \"export INFOPATH=/usr/local/src/linuxbrew/share/man:${INFOPATH}\" >> /home/devilbox/${v}' \\\n&& su - ${MY_USER} -c '/usr/local/src/linuxbrew/bin/brew config' \\\n\n# mhsendmail\n\t&& wget https://github.com/mailhog/mhsendmail/releases/download/v0.2.0/mhsendmail_linux_amd64 \\\n&& chmod +x mhsendmail_linux_amd64 \\\n&& mv mhsendmail_linux_amd64 /usr/local/bin/mhsendmail \\\n\n# mysqldumpsecure\n\t&& git clone https://github.com/cytopia/mysqldump-secure.git /usr/local/src/mysqldump-secure \\\n&& cd /usr/local/src/mysqldump-secure \\\n&& git checkout $(git describe --abbrev=0 --tags) \\\n&& cp /usr/local/src/mysqldump-secure/bin/mysqldump-secure /usr/local/bin \\\n&& cp /usr/local/src/mysqldump-secure/etc/mysqldump-secure.conf /etc \\\n&& cp /usr/local/src/mysqldump-secure/etc/mysqldump-secure.cnf /etc \\\n&& touch /var/log/mysqldump-secure.log \\\n&& chown ${MY_USER}:${MY_GROUP} /etc/mysqldump-secure.* \\\n&& chown ${MY_USER}:${MY_GROUP} /var/log/mysqldump-secure.log \\\n&& chmod 0400 /etc/mysqldump-secure.conf \\\n&& chmod 0400 /etc/mysqldump-secure.cnf \\\n&& chmod 0644 /var/log/mysqldump-secure.log \\\n&& sed -i'' 's/^COMPRESS_ARG=.*/COMPRESS_ARG=\"-9 -c\"/g' /etc/mysqldump-secure.conf \\\n&& sed -i'' 's/^DUMP_DIR=.*/DUMP_DIR=\"\\/shared\\/backups\\/mysql\"/g' /etc/mysqldump-secure.conf \\\n&& sed -i'' 's/^DUMP_DIR_CHMOD=.*/DUMP_DIR_CHMOD=\"0755\"/g' /etc/mysqldump-secure.conf \\\n&& sed -i'' 's/^DUMP_FILE_CHMOD=.*/DUMP_FILE_CHMOD=\"0644\"/g' /etc/mysqldump-secure.conf \\\n&& sed -i'' 's/^LOG_CHMOD=.*/LOG_CHMOD=\"0644\"/g' /etc/mysqldump-secure.conf \\\n&& sed -i'' 's/^NAGIOS_LOG=.*/NAGIOS_LOG=0/g' /etc/mysqldump-secure.conf \\\n&& cd / \\\n&& rm -rf /usr/local/src/mysqldump-secure \\\n\n# phpcs\n\t&& curl -f -sS -L https://github.com/squizlabs/PHP_CodeSniffer/releases/download/2.9.0/phpcs.phar > /usr/local/bin/phpcs 2>/dev/null \\\n&& chmod +x /usr/local/bin/phpcs \\\n\n# phpcbf\n\t&& curl -f -sS -L https://github.com/squizlabs/PHP_CodeSniffer/releases/download/2.9.0/phpcbf.phar > /usr/local/bin/phpcbf 2>/dev/null \\\n&& chmod +x /usr/local/bin/phpcbf \\\n\n# wkhtmltopdf\n\t&& VERSION=\"$( curl -f -sSL https://github.com/wkhtmltopdf/wkhtmltopdf/releases | grep -Eo '/wkhtmltopdf/.+jessie_amd64\\.deb' | head -1)\" \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get update -qq \\\n&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests \\\n  libfontenc1 libxfont1 xfonts-75dpi xfonts-base xfonts-encodings xfonts-utils \\\n&& curl -f -sS -L -o /tmp/wkhtmltopdf.deb https://github.com/${VERSION} \\\n&& dpkg -i /tmp/wkhtmltopdf.deb \\\n&& rm -f /tmp/wkhtmltopdf.deb \\\n\n\t&& DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false apt-utils \\\n&& rm -rf /var/lib/apt/lists/* \\\n\n# cleanup\n\t&& rm -rf /home/${MY_USER}/.*json \\\n&& rm -rf /home/${MY_USER}/.cache \\\n&& rm -rf /home/${MY_USER}/.composer \\\n&& rm -rf /home/${MY_USER}/.config \\\n&& rm -rf /home/${MY_USER}/.drush \\\n&& rm -rf /home/${MY_USER}/.subversion \\\n&& rm -rf /home/${MY_USER}/.v8* \\\n\n&& rm -rf /root/.*json \\\n&& rm -rf /root/.cache \\\n&& rm -rf /root/.composer \\\n&& rm -rf /root/.config \\\n&& rm -rf /root/.drush \\\n&& rm -rf /root/.subversion \\\n&& rm -rf /root/.v8* \\\n\n&& rm -rf /tmp/* \\\n&& (rm -rf /tmp/.* || true) \\\n\n\n\t&& (rm -rf /root/.gem || true ) \\\n\t&& (rm -rf /root/.cache || true) \\\n\t&& (rm -rf /root/.composer || true) \\\n\t&& (rm -rf /root/.config || true) \\\n\t&& (rm -rf /root/.npm || true) \\\n\n\t&& (rm -rf /home/devilbox/.cache || true) \\\n\t&& (rm -rf /home/devilbox/.composer || true) \\\n\t&& (rm -rf /home/devilbox/.config || true) \\\n\t&& (rm -rf /home/devilbox/.npm || true) \\\n\n\t&& (rm -rf /usr/local/src/composer/cache/* || true) \\\n\t&& rm -rf /tmp/* \\\n\t&& (rm -rf /tmp/.* || true)\n\n\n###\n### Install Composer (PHP)\n###\nRUN set -x \\\n\t\\\n\t&& rm -rf /tmp/* \\\n\t&& (rm -rf /tmp/.* || true) \\\n\t\\\n\t&& (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \\\n\t&& (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \\\n\t&& (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true)\n\n\n###\n### Install npm (Node)\n###\nRUN set -x \\\n# angular_cli\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g @angular/cli' devilbox \\\n# eslint\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g eslint' devilbox \\\n# grunt\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g grunt' devilbox \\\n# grunt_cli\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g grunt-cli' devilbox \\\n# gulp\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g gulp' devilbox \\\n# jsonlint\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g jsonlint' devilbox \\\n# pm2\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g pm2' devilbox \\\n# mdlint\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g mdlint' devilbox \\\n# vue_cli\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g @vue/cli' devilbox \\\n# vue_cli_service_global\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g @vue/cli-service-global' devilbox \\\n# webpack\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g webpack' devilbox \\\n# webpack_cli\n\t&& su -c '. /opt/nvm/nvm.sh; npm install -g webpack-cli' devilbox \\\n\t\\\n\t&& ln -sf $(dirname $(su -c '. /opt/nvm/nvm.sh; nvm which current' devilbox))/* /usr/local/bin/ \\\n\t\\\n\t&& su -c '. /opt/nvm/nvm.sh; npm cache clear --force' devilbox \\\n\t&& su -c '. /opt/nvm/nvm.sh; nvm cache clear --force' devilbox \\\n\t&& rm -rf /home/devilbox/.npm \\\n\t&& rm -rf /home/devilbox/.config \\\n\t&& rm -rf /tmp/* \\\n\t&& (rm -rf /tmp/.* || true) \\\n\t\\\n\t&& (find /opt/nvm -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true)\n\n\n###\n### Install gem (Ruby)\n###\nRUN set -x \\\n# mixlib_config\n\t&& gem install mixlib-config -v 2.2.4 \\\n# rb_inotify\n\t&& gem install rb-inotify -v 0.9.10 \\\n# mdl\n\t&& gem install mdl \\\n# scss_lint\n\t&& gem install scss_lint -v 0.57.1 \\\n# sass\n\t&& gem install sass \\\n\t\\\n\t&& rm -rf /root/.gem \\\n\t&& rm -rf /tmp/* \\\n\t&& (rm -rf /tmp/.* || true) \\\n\t\\\n\t&& (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \\\n\t&& (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \\\n\t&& (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true)\n\n\n###\n### Install pip (Python) packages\n###\nRUN set -x \\\n# ansible\n\t&& pip install --no-cache-dir --force-reinstall ansible \\\n# yamllint\n\t&& pip install --no-cache-dir --force-reinstall yamllint \\\n# yq\n\t&& pip install --no-cache-dir --force-reinstall yq \\\n\t\\\n\t&& rm -rf /root/.cache/pip \\\n\t&& rm -rf /tmp/* \\\n\t&& (rm -rf /tmp/.* || true) \\\n\t\\\n\t&& (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \\\n\t&& (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \\\n\t&& (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true)\n\n\n###\n### Configure Bash\n###\nRUN \\\n\t{ \\\n\t\techo \"PATH=\\${PATH}:/usr/local/bin:/usr/local/sbin:\\${HOME}/.yarn/bin:/opt/nvm/versions/node/\\$(nvm version default)/bin\"; \\\n\t\techo \"export PATH\"; \\\n\t\techo \". /etc/bash-devilbox\"; \\\n\t\techo \"if [ -d /etc/bashrc-devilbox.d/ ]; then\"; \\\n\t\techo \"    for f in /etc/bashrc-devilbox.d/*.sh ; do\"; \\\n\t\techo \"        if [ -r \\\"\\${f}\\\" ]; then\"; \\\n\t\techo \"            . \\\"\\${f}\\\"\"; \\\n\t\techo \"        fi\"; \\\n\t\techo \"    done\"; \\\n\t\techo \"    unset f\"; \\\n\t\techo \"fi\"; \\\n\t} | tee -a /home/${MY_USER}/${BASH_PROFILE} /root/${BASH_PROFILE} \\\n\t&& chown ${MY_USER}:${MY_GROUP} /home/${MY_USER}/${BASH_PROFILE}\n\n\n###\n### Verify\n###\nRUN set -x \\\n\t&& echo \"date.timezone=UTC\" > /usr/local/etc/php/php.ini \\\n\t&& php -v | grep -oE 'PHP\\s[.0-9]+' | grep -oE '[.0-9]+' | grep '^5.2' \\\n\t&& /usr/local/sbin/php-fpm --test \\\n\t\\\n\t&& PHP_ERROR=\"$( php -v 2>&1 1>/dev/null )\" \\\n\t&& if [ -n \"${PHP_ERROR}\" ]; then echo \"${PHP_ERROR}\"; false; fi \\\n\t&& PHP_ERROR=\"$( php -i 2>&1 1>/dev/null )\" \\\n\t&& if [ -n \"${PHP_ERROR}\" ]; then echo \"${PHP_ERROR}\"; false; fi \\\n\t\\\n\t&& PHP_FPM_ERROR=\"$( php-fpm -v 2>&1 1>/dev/null )\" \\\n\t&& if [ -n \"${PHP_FPM_ERROR}\" ]; then echo \"${PHP_FPM_ERROR}\"; false; fi \\\n\t&& PHP_FPM_ERROR=\"$( php-fpm -i 2>&1 1>/dev/null )\" \\\n\t&& if [ -n \"${PHP_FPM_ERROR}\" ]; then echo \"${PHP_FPM_ERROR}\"; false; fi \\\n\t&& rm -f /usr/local/etc/php/php.ini\n\nRUN set -x \\\n\t&& su  -c '. /opt/nvm/nvm.sh; nvm --version' devilbox | grep -E '^[.0-9]+' \\\n\t&& mdl --version | grep -E '[.0-9]+' \\\n&& scss-lint --version | grep -E '[.0-9]+' \\\n&& eslint -v | grep -E '[.0-9]+' \\\n&& jsonlint --version | grep -E '[.0-9]+' \\\n&& mdlint --version | grep -E '[.0-9]+' \\\n&& gulp --version | grep -E '[.0-9]+' \\\n \\\n\t&& git-flow version | grep -E '[.0-9]+' \\\n\t&& linkcheck --version | grep -E '^linkcheck\\sv[.0-9]+' \\\n\t&& su - ${MY_USER} -c '/usr/local/src/linuxbrew/bin/brew --version' | grep -E 'Homebrew\\s*[.0-9]+' \\\n\t&& mysqldump-secure --version | grep -E 'Version:\\s*[.0-9]+' \\\n\t&& phpcs --version | grep -E 'version [.0-9]+' \\\n\t&& phpcbf --version | grep -E 'version [.0-9]+' \\\n\t&& wkhtmltopdf --version | grep -E \"^wkhtmltopdf [.0-9]+\\s+\\(.+patched.+\\)\" \\\n \\\n \\\n\t&& ansible --version | grep -E '^ansible [.0-9]+$' \\\n\t&& yamllint --version 2>&1 | grep -E '[.0-9]+' \\\n\t&& yq --version 2>&1 | grep -E '^yq\\s+[.0-9]+$' \\\n \\\n\t&& ng  version 2>&1 | grep -iE 'Angular CLI:\\s*[.0-9]+' \\\n\t&& eslint -v | grep -E '[.0-9]+' \\\n\t&& grunt --version | grep -E '[.0-9]+' \\\n\t&& gulp --version | grep -E '[.0-9]+' \\\n\t&& jsonlint --version | grep -E '[.0-9]+' \\\n\t&& pm2 --no-daemon --version | grep -E '[.0-9]+' \\\n\t&& mdlint --version | grep -E '[.0-9]+' \\\n\t&& vue --version | grep -E '[.0-9]+' \\\n\t&& webpack --version | grep -E '[.0-9]+' \\\n \\\n\t&& mdl --version | grep -E '[.0-9]+' \\\n\t&& sass --version | grep -E '[.0-9]+' \\\n \\\n\t&& rm -rf /home/devilbox/.config/ \\\n\t&& rm -rf /root/.ansible \\\n\t&& rm -rf /root/.console \\\n\t&& rm -rf /root/.composer \\\n\t&& rm -rf /root/.drush \\\n\t&& rm -rf /root/.pm2 \\\n\t&& rm -rf /tmp/* \\\n\t&& (rm -rf /tmp/.* || true)\n\n\n###\n### Copy files\n###\nCOPY ./data/php-ini.d/php-5.2.ini /usr/local/etc/php/conf.d/xxx-devilbox-default-php.ini\nCOPY ./data/php-fpm.conf/php-fpm-5.2.conf /usr/local/etc/php-fpm.conf\n\nCOPY ./data/docker-entrypoint.sh /docker-entrypoint.sh\nCOPY ./data/docker-entrypoint.d/*.sh /docker-entrypoint.d/\nCOPY ./data/bash-devilbox /etc/bash-devilbox\nCOPY ./data/sudo-devilbox /etc/sudoers.d/devilbox\n\n\n\n###\n### Volumes\n###\nVOLUME /shared/backups\nVOLUME /var/log/php\nVOLUME /var/mail\n\n\n###\n### Ports\n###\nEXPOSE 9000\n\n\n###\n### Where to start inside the container\n###\nWORKDIR /shared/httpd\n\n\n###\n### Entrypoint\n###\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}