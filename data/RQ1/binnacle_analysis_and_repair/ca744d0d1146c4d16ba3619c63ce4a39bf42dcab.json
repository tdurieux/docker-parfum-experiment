{
  "startTime": 1674241709272,
  "endTime": 1674241709339,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE_REPO\nFROM ${IMAGE_REPO:-lagoon}/commons as commons\nFROM docker.elastic.co/elasticsearch/elasticsearch:6.6.1\n\nLABEL maintainer=\"amazee.io\"\nENV LAGOON=elasticsearch\n\nARG LAGOON_VERSION\nENV LAGOON_VERSION=$LAGOON_VERSION\n\n# Copy commons files\nCOPY --from=commons /lagoon /lagoon\nCOPY --from=commons /bin/fix-permissions /bin/ep /bin/docker-sleep /bin/\nCOPY --from=commons /home /home\n\nRUN curl -f -sL https://github.com/krallin/tini/releases/download/v0.18.0/tini -o /sbin/tini && chmod a+x /sbin/tini\n\nCOPY peer-finder /bin/\nCOPY configure-es.sh /lagoon/\nCOPY docker-entrypoint.sh /lagoon/entrypoints/90-elasticsearch.sh\n\nRUN chmod g+w /etc/passwd \\\n    && mkdir -p /home\n\n# Reproduce behavior of Alpine: Run Bash as sh\nRUN rm -f /bin/sh && ln -s /bin/bash /bin/sh\n\nENV TMPDIR=/tmp \\\n    TMP=/tmp \\\n    HOME=/home \\\n    # When Bash is invoked via `sh` it behaves like the old Bourne Shell and sources a file that is given in `ENV`\n    ENV=/home/.bashrc \\\n    # When Bash is invoked as non-interactive (like `bash -c command`) it sources a file that is given in `BASH_ENV`\n    BASH_ENV=/home/.bashrc\n\nRUN sed -i 's/discovery.zen.minimum_master_nodes: 1//' config/elasticsearch.yml\n\nRUN echo $'xpack.security.enabled: false\\n\\\n\\n\\\nnode.name: \"${HOSTNAME}\"\\n\\\nnode.master: \"${NODE_MASTER}\"\\n\\\ndiscovery.zen.minimum_master_nodes: \"${DISCOVERY_ZEN_MINIMUM_MASTER_NODES}\"' >> config/elasticsearch.yml\n\nRUN fix-permissions config\n\nENV ES_JAVA_OPTS=\"-Xms200m -Xmx200m\" \\\n    DISCOVERY_ZEN_MINIMUM_MASTER_NODES=1 \\\n    NODE_MASTER=true\n\nVOLUME [ \"/usr/share/elasticsearch/data\" ]\n\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/lagoon/entrypoints.bash\"]\n\nCMD [\"/usr/local/bin/docker-entrypoint.sh\"]\n"
}