{
  "startTime": 1674242940780,
  "endTime": 1674242940897,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Development Dockerfile for OMERO\n# --------------------------------\n# This dockerfile can be used to build an\n# OMERO distribution which can then be run\n# within a number of different Docker images.\n\n# By default, building this dockerfile will use\n# the IMAGE argument below for the runtime image.\nARG BUILD_IMAGE=openjdk:8\n\n# To build code with other runtimes\n# pass a build argument, e.g.:\n#\n#   docker build --build-arg BUILD_IMAGE=openjdk:9 ...\n#\n\n# The produced /src directory will be copied the\n# RUN_IMAGE for end-use. This value can also be\n# set at build time with --build-arg RUN_IMAGE=...\nARG COMPONENT=server\nARG RUN_IMAGE=openmicroscopy/omero-${COMPONENT}:latest\n\n\nFROM ${BUILD_IMAGE} as build\nUSER root\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y ant \\\n      python-pip python-tables python-virtualenv python-yaml python-jinja2 \\\n      zlib1g-dev python-pillow python-numpy python-sphinx \\\n      libssl-dev libbz2-dev libmcpp-dev libdb++-dev libdb-dev \\\n      zeroc-ice-all-dev \\\n && pip install --no-cache-dir --upgrade 'pip<10' setuptools flake8==2.4.0 pytest==2.7.3 && rm -rf /var/lib/apt/lists/*;\n# TODO: unpin pip when possible\n# openjdk:8 is \"stretch\" or Debian 9\nRUN pip install --no-cache-dir https://github.com/ome/zeroc-ice-py-debian9/releases/download/0.1.0/zeroc_ice-3.6.4-cp27-cp27mu-linux_x86_64.whl\nRUN id 1000 || useradd -u 1000 -ms /bin/bash build\n\n# TODO: would be nice to not need to copy .git since it invalidates the build frequently and takes more time\nCOPY .git /src/.git\n\nCOPY build.py /src/\nCOPY build.xml /src/\nCOPY components /src/components\nCOPY docs /src/docs\nCOPY etc /src/etc\nCOPY ivy.xml /src/\nCOPY lib /src/lib\nCOPY luts /src/luts\nCOPY omero.class /src/\nCOPY setup.cfg /src/\nCOPY sql /src/sql\nCOPY test.xml /src/\nCOPY LICENSE.txt /src/\nCOPY history.rst /src/\nRUN chown -R 1000 /src\nUSER 1000\nWORKDIR /src\nENV ICE_CONFIG=/src/etc/ice.config\nRUN sed -i \"s/^\\(omero\\.host\\s*=\\s*\\).*\\$/\\1omero/\" /src/etc/ice.config\n\n# The following may be necessary depending on\n# which images you are using. See the following\n# card for more info:\n#\n#     https://trello.com/c/rPstbt4z/216-open-ssl-110\n#\n# RUN sed -i 's/\\(\"IceSSL.Ciphers\".*ADH[^\"]*\\)/\\1:@SECLEVEL=0/' /src/components/tools/OmeroPy/src/omero/clients.py /src/etc/templates/grid/templates.xml\n\n# Reproduce jenkins build\nRUN env BUILD_NUMBER=1 OMERO_BRANCH=develop bash docs/hudson/OMERO.sh\n\nFROM ${RUN_IMAGE} as run\nRUN rm -rf /opt/omero/server/OMERO.server\nCOPY --chown=omero-server:omero-server --from=build /src/dist /opt/omero/server/OMERO.server\nUSER root\nRUN yum install -y git && rm -rf /var/cache/yum\nUSER omero-server\nWORKDIR /opt/omero/server/OMERO.server\n"
}