{
  "startTime": 1674248674493,
  "endTime": 1674248674650,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedDockerfile": "# Usage:\n#\n# Build the container\n# $ docker build . -t siddhu/hackage-server\n#\n# Shell into the container\n# $ docker run -it -p 8080:8080 siddhu/hackage-server /bin/bash\n#\n# Run the server\n# Docker> # hackage-server run --static-dir=datafiles\n#\n\nFROM ubuntu\n\nRUN apt-get update\n\n# Install apt-add-repository\nRUN apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# Use Herbert's PPA on Ubuntu for getting GHC and cabal-install\nRUN apt-add-repository ppa:hvr/ghc\n\nRUN apt-get update\n\n# Dependencies\nRUN apt-get install --no-install-recommends -yy unzip libicu-dev postfix && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y ghc-8.2.1 cabal-install-2.0 && rm -rf /var/lib/apt/lists/*;\nENV PATH /opt/ghc/bin:$PATH\nRUN cabal update\n\n# Required Header files\nRUN apt-get install --no-install-recommends -y zlib1g-dev libssl-dev && rm -rf /var/lib/apt/lists/*;\n\n# haskell dependencies\nRUN mkdir /build\nWORKDIR /build\nADD ./hackage-server.cabal ./hackage-server.cabal\nRUN cabal sandbox init\n# TODO: Switch to Nix-style cabal new-install\nRUN cabal install --only-dependencies --enable-tests -j --force-reinstalls\nENV PATH /build/.cabal-sandbox/bin:$PATH\n\n# needed for creating TUF keys\nRUN cabal install hackage-repo-tool\n\n# add code\n# note: this must come after installing the dependencies, such that\n# we don't need to rebuilt the dependencies every time the code changes\nADD . /build\n\n# generate keys (needed for tests)\nRUN hackage-repo-tool create-keys --keys keys\nRUN cp keys/timestamp/*.private datafiles/TUF/timestamp.private\nRUN cp keys/snapshot/*.private datafiles/TUF/snapshot.private\nRUN hackage-repo-tool create-root --keys keys -o datafiles/TUF/root.json\nRUN hackage-repo-tool create-mirrors --keys keys -o datafiles/TUF/mirrors.json\n\n# build & test & install hackage\nRUN cabal configure -f-build-hackage-mirror --enable-tests\nRUN cabal build\n# tests currently don't pass: the hackage-security work introduced some\n# backup/restore errors (though they look harmless)\n# see https://github.com/haskell/hackage-server/issues/425\n#RUN cabal test\nRUN cabal copy && cabal register\n\n# setup server runtime environment\nRUN mkdir /runtime\nRUN cp -r /build/datafiles /runtime/datafiles\nWORKDIR /runtime\nRUN hackage-server init --static-dir=datafiles\nCMD hackage-server run  --static-dir=datafiles\nEXPOSE 8080\n"
}