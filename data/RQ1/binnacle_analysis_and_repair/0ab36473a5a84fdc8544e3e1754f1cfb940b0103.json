{
  "startTime": 1674245859259,
  "endTime": 1674245859301,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 109
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM balenalib/%%BALENA_MACHINE_NAME%%-debian-node:10-stretch-run\n# Defines our working directory in container\nWORKDIR /usr/src/app\n\nRUN install_packages wget\n\nENV JQUERY_VERSION=3.3.1\nENV REQUIREJS_VERSION=2.3.5\nENV HIGHCHARTS_VERSION=7.0.3\nRUN mkdir -p static/js && \\\n    wget \"https://code.jquery.com/jquery-${JQUERY_VERSION}.min.js\" -O static/js/jquery.min.js && \\\n    wget \"https://code.highcharts.com/${HIGHCHARTS_VERSION}/highcharts.js\" -O static/js/highcharts.js && \\\n    wget \"https://requirejs.org/docs/release/${REQUIREJS_VERSION}/minified/require.js\" -O static/js/require.js\n\n# Copies the package.json first for better cache on later pushes\nCOPY package.json package.json\n\n# This install npm dependencies on the resin.io build server,\n# making sure to clean up the artifacts it creates in order to reduce the image size.\nRUN JOBS=MAX npm install --production && npm cache clean --force;\n# This will copy all files in our root to the working  directory in the container\nCOPY . ./\n\n# server.js will run when container starts up on the device\nCMD [\"npm\", \"start\"]\n"
}