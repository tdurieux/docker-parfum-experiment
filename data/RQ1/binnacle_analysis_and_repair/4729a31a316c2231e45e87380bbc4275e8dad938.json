{
  "startTime": 1674239208810,
  "endTime": 1674239209341,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 5,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 233
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 46,
        "columnEnd": 106
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 49,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 49,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\nMAINTAINER Kevin Littlejohn <kevin@littlejohn.id.au>\n\n# Add docker apt repository\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9 \\\n  && echo deb http://get.docker.io/ubuntu docker main > /etc/apt/sources.list.d/docker.list\nRUN apt-get -yq update && apt-get -yq upgrade && apt-get -yq --no-install-recommends install curl \\\n  && curl -f -sL https://deb.nodesource.com/setup | bash - \\\n  && apt-get -yq --no-install-recommends install less vim sudo strace lsof tmux make tcpdump netcat \\\n    telnet dnsutils unzip groff jq uuid-runtime wget \\\n    gcc zlib1g-dev libxml2-dev libxslt1-dev libssl-dev libreadline6-dev \\\n    libyaml-0-2 libcurl4-gnutls-dev libexpat1-dev gettext libz-dev \\\n    bash-completion libyaml-dev lxc-docker gnupg nodejs \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Git from source after a security issue\nRUN cd /usr/local/src \\\n  && wget https://www.kernel.org/pub/software/scm/git/git-2.2.2.tar.gz \\\n  && tar zxf git*.tar.gz \\\n  && cd git* \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install \\\n  && rm -rf /usr/local/src/git* && rm git*.tar.gz\n\n# Python\nENV PYTHON_VER=2.7.9\nRUN cd /usr/local/src \\\n  && curl -f -sSL https://www.python.org/ftp/python/$PYTHON_VER/Python-$PYTHON_VER.tgz | tar zx \\\n  && cd Python-$PYTHON_VER \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install \\\n  && cd /tmp \\\n  && curl -f -O https://bootstrap.pypa.io/get-pip.py && python /tmp/get-pip.py \\\n  && rm -rf /usr/local/src/Python-$PYTHON_VER /tmp/get-pip.py\nRUN pip install --no-cache-dir awscli docker-compose\n\n# Keybase, for gpg\nRUN npm install -g keybase-installer && npm cache clean --force;\nRUN keybase-installer\n\n# docker-machine\nRUN curl -f -sLo /usr/local/bin/docker-machine $( curl -f -s https://api.github.com/repos/docker/machine/releases | grep browser_download_url | grep docker-machine_darwin-amd64 | head -1 | awk -F': ' '{ print $2 }' | sed 's/^\"\\(.*\\)\"$/\\1/')\n\n# Local scripts for configuration\nADD drun_profile.sh /etc/profile.d/drun.sh\nADD tmux.conf /etc/tmux.conf\nADD start.sh /usr/local/bin/start.sh\nADD container_name /usr/local/etc/container_name\nADD bash_profile /etc/skel/.bash_profile\nADD sudoers /etc/sudoers\n\nENTRYPOINT [\"/usr/local/bin/start.sh\"]\n\nONBUILD ADD container_name /usr/local/etc/container_name\n"
}