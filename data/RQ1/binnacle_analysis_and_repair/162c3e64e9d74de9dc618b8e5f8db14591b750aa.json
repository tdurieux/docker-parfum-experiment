{
  "startTime": 1674246250215,
  "endTime": 1674246250544,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nLABEL maintainer \"brad@bradchoate.com\"\nENV PYTHONUNBUFFERED 1\n\nRUN apt-get -y update && \\\n    apt-get install --no-install-recommends -y software-properties-common python-software-properties && \\\n    add-apt-repository -y ppa:jonathonf/ffmpeg-3 && \\\n    apt-get install --no-install-recommends -y \\\n    supervisor \\\n    cron \\\n    libmysqlclient-dev \\\n    mysql-client \\\n    python-dev \\\n    libjpeg-dev \\\n    libcurl4-openssl-dev \\\n    curl \\\n    run-one \\\n    ffmpeg \\\n    wget \\\n    vim \\\n    libpcre3 \\\n    libpcre3-dev \\\n    libssl-dev \\\n    libffi-dev \\\n    python-pip && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    pip install --no-cache-dir -U pip setuptools distribute && \\\n    # Fix for a really weird issue when installing postmark library\n    # distribute fails to run since it sees a setuptools with \"0.7\"\n    # in the name, even though ubuntu:16.04 has pre-installed \"20.7.0\"\n    # https://github.com/pypa/setuptools/issues/543\n    rm -rf /usr/lib/python2.7/dist-packages/setuptools-20.7.0.egg-info && \\\n    groupadd ubuntu --gid=1010 && \\\n    useradd ubuntu --create-home --home-dir=/home/ubuntu \\\n        --uid=1010 --gid=1010 && \\\n    mkdir -p /srv/mltshp.com/logs && \\\n    chown -R ubuntu:ubuntu /srv/mltshp.com\n\nCOPY requirements.txt /tmp\nRUN pip install --no-cache-dir -r /tmp/requirements.txt && rm /tmp/requirements.txt\n\nCOPY setup/production/supervisord-worker.conf /etc/supervisor/conf.d/mltshp.conf\n\n# NOTE: /srv/mltshp.com/logs should be a mounted volume for this image\nADD . /srv/mltshp.com/mltshp\nWORKDIR /srv/mltshp.com/mltshp\nRUN crontab -u ubuntu setup/production/mltshp-worker--crontab\n\nCMD [\"/usr/bin/supervisord\"]\n"
}