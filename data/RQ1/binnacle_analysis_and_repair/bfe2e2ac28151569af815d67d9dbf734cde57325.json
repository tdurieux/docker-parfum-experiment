{
  "startTime": 1674241750383,
  "endTime": 1674241750651,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.3\nMAINTAINER Krzysztof Kawalec <kf.kawalec@gmail.com>\nRUN apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y \\\n        openssh-client \\\n        libfreetype6-dev \\\n        libjpeg62-turbo-dev \\\n        libmcrypt-dev \\\n        libpng-dev \\\n        libcurl4-openssl-dev \\\n        libldap2-dev \\\n        libicu-dev \\\n        libc-client-dev \\\n        libkrb5-dev \\\n        libmagickwand-dev --no-install-recommends \\\n        curl \\\n        libtidy* \\\n        libzip-dev \\\n        mysql-client \\\n        gnupg \\\n        git \\\n        rsync \\\n        unzip \\\n    && apt-get clean \\\n    && rm -r /var/lib/apt/lists/*\n\nRUN docker-php-ext-install \\\n        mbstring \\\n        curl \\\n        json \\\n        pdo_mysql \\\n        exif \\\n        tidy \\\n        zip \\\n        bcmath \\\n        opcache \\\n    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-install gd \\\n    && docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu \\\n    && docker-php-ext-install ldap \\\n    && docker-php-ext-configure intl \\\n    && docker-php-ext-install intl \\\n    && docker-php-ext-configure imap --with-kerberos --with-imap-ssl \\\n    && docker-php-ext-install imap \\\n    && pecl install imagick \\\n    && docker-php-ext-enable imagick\n\nRUN echo \"memory_limit=-1\" > $PHP_INI_DIR/conf.d/memory-limit.ini \\\n    && echo \"date.timezone=Europe/Warsaw\" > $PHP_INI_DIR/conf.d/date_timezone.ini\n\n# NodeJS\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Yarn\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n    && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends yarn \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nVOLUME /root/composer\n\nENV COMPOSER_HOME /root/composer\n\n# Install Composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n    && composer selfupdate\n\nWORKDIR /tmp\n\n# Run phpunit installation\nRUN composer require \"phpunit/phpunit=7.*\" --prefer-source --no-interaction \\\n    && ln -s /tmp/vendor/bin/phpunit /usr/local/bin/phpunit\n\n# Run codesniffer installation\nRUN composer require \"squizlabs/php_codesniffer=*\" --prefer-source --no-interaction \\\n    && ln -s /tmp/vendor/bin/phpcs /usr/local/bin/phpcs\n\nRUN php --version \\\n    && composer --version \\\n    && phpunit --version \\\n    && phpcs --version \\\n    && yarn --version\n"
}