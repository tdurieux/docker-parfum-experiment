{
  "startTime": 1674235231592,
  "endTime": 1674235231695,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM phusion/baseimage:0.9.19\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y npm && \\\n    npm install -g n && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nARG NODE_ENV=production\nARG NODE_VERSION=latest\nARG PROJECT_PATH=/opt/app/\nARG YARN=false\n\nENV YARN=$YARN\nENV PROJECT_PATH=$PROJECT_PATH\nENV NODE_ENV=$NODE_ENV\n\n# Add\nRUN groupadd -r www-app &&\\\n    useradd -r -g www-app www-app\n\nRUN mkdir -p /home/www-app &&\\\n    chmod 777 /home/www-app -R\n\n# Install the specified NODE_VERSION or grab latest\nRUN n \"$NODE_VERSION\"\n\n# Install Yarn\n\nRUN if [ ${YARN} = true ]; then \\\n    npm install -g yarn \\\n; npm cache clean --force; fi\n\nCOPY scripts/run-nodock.sh /usr/bin/run-nodock\n\nRUN chmod 700 /usr/bin/run-nodock\n\nWORKDIR /opt/app\n"
}