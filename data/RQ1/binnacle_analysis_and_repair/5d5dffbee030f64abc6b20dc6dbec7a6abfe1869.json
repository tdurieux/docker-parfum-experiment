{
  "startTime": 1674242359641,
  "endTime": 1674242360144,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04\nMAINTAINER Mario Cho \"m.cho@lablup.com\"\n\nENV LANG=C.UTF-8\nENV PYTHONUNBUFFERED 1\nENV CUDA_VERSION 10.0.130\nENV CUDA_PKG_VERSION 10-0=$CUDA_VERSION-1\nENV CUDNN_VERSION 7.4.1.5\nENV NCCL_VERSION 2.4.2\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:/usr/local/nvidia/lib64\" \\\n    PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        ca-certificates \\\n        wget curl git-core \\\n        vim-tiny zip unzip \\\n        python3 python3-pip \\\n        libssl-dev \\\n        libmpdec2 \\\n        proj-bin libproj-dev \\\n        libgeos-dev libgeos++-dev \\\n        mime-support \\\n        gcc g++ \\\n\tcaffe-cuda && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;\n\nENV PYTHONUNBUFFERED=1 \\\n    LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:/usr/local/nvidia/lib64\" \\\n    PATH=\"/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\" \\\n    LANG=C.UTF-8\n\n# Install CUDA-10.0 + cuDNN 7.4\nRUN ln -s /usr/local/cuda-10.0 /usr/local/cuda && \\\n    ln -s /usr/lib/x86_64-linux-gnu/libcudnn.so.7.4.1 /usr/local/cuda/lib64/libcudnn.so && \\\n    ldconfig\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        cuda-libraries-$CUDA_PKG_VERSION \\\n        cuda-cublas-10-0 \\\n        libnccl2=2.4.2-1+cuda10.0 && \\\n    apt-mark hold libnccl2 && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN curl -f https://bootstrap.pypa.io/get-pip.py | python3 && \\\n    python3 -m pip install --no-cache-dir -U setuptools && \\\n    python3 -m pip install --no-cache-dir wheel && \\\n    python3 -m pip install --no-cache-dir pyzmq simplejson msgpack-python uvloop && \\\n    python3 -m pip install --no-cache-dir aiozmq dataclasses tabulate && \\\n    python3 -m pip install --no-cache-dir namedlist six \"python-dateutil>=2\" && \\\n    python3 -m pip install --no-cache-dir h5py && \\\n    python3 -m pip install --no-cache-dir Cython && \\\n    python3 -m pip install --no-cache-dir numpy scipy && \\\n    python3 -m pip install --no-cache-dir versioneer==0.17 && \\\n    python3 -m pip install --no-cache-dir pyproj Cartopy==0.16 && \\\n    python3 -m pip install --no-cache-dir matplotlib bokeh && \\\n    python3 -m pip install --no-cache-dir pandas && \\\n    python3 -m pip install --no-cache-dir seaborn && \\\n    python3 -m pip install --no-cache-dir pillow && \\\n    python3 -m pip install --no-cache-dir networkx cvxpy && \\\n    python3 -m pip install --no-cache-dir scikit-learn scikit-image && \\\n    python3 -m pip install --no-cache-dir pygments && \\\n    python3 -m pip install --no-cache-dir https://download.pytorch.org/whl/cu100/torch-1.1.0-cp36-cp36m-linux_x86_64.whl && \\\n    python3 -m pip install --no-cache-dir torchvision && \\\n    python3 -m pip install --no-cache-dir ipython && \\\n    python3 -m pip install --no-cache-dir jupyter && \\\n    python3 -m pip install --no-cache-dir jupyterlab && \\\n    rm -rf /root/.cache && \\\n    rm -f /tmp/*.whl\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 2\n\n# Install ipython kernelspec\nRUN python -m ipykernel install --display-name \"PyTorch 1.1 on Python 3.6 (CUDA 10.0)\" && \\\n    cat /usr/local/share/jupyter/kernels/python3/kernel.json\n\n# Install Jupyter notebook logo\nRUN mkdir -p /home/work/.jupyter/custom\nCOPY custom.css /home/work/.jupyter/custom/custom.css\nCOPY logo.svg /home/work/.jupyter/custom/logo.svg\n\n# Backend.AI specifics\nLABEL ai.backend.kernelspec=\"1\" \\\n      ai.backend.envs.corecount=\"OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC\" \\\n      ai.backend.features=\"batch query uid-match user-input\" \\\n      ai.backend.base-distro=\"ubuntu16.04\" \\\n      ai.backend.resource.min.cpu=\"1\" \\\n      ai.backend.resource.min.mem=\"1g\" \\\n      ai.backend.resource.min.cuda.device=1 \\\n      ai.backend.resource.min.cuda.shares=0.1 \\\n      ai.backend.runtime-type=\"python\" \\\n      ai.backend.runtime-path=\"/usr/bin/python\" \\\n      ai.backend.service-ports=\"ipython:pty:3000,jupyter:http:8080,jupyterlab:http:8090,tensorboard:http:6006\"\n\nCOPY policy.yml /etc/backend.ai/jail/policy.yml\n\n# vim: ft=dockerfile\n"
}