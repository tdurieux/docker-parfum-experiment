{
  "startTime": 1674242983374,
  "endTime": 1674242983839,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\nMAINTAINER Thomas Keck <thomas.keck2@kit.edu>\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get -y update && \\\n    apt-get -y upgrade && \\\n    apt-get -y --no-install-recommends install apt-utils && \\\n    apt-get -y --no-install-recommends install python3-pip python3-virtualenv libfreetype6-dev libpng12-dev pkg-config llvm-4.0 libedit-dev git npm nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Create tutorial users\nRUN for i in `seq 1 30`; do useradd -ms /bin/bash kseta_tutorial_$i; echo \"kseta_tutorial_$i:********\" | chpasswd; done\n\nENV LANG C.UTF-8\n\n# Update python\nRUN pip3 install --no-cache-dir --system setuptools==36.2.7 && \\\n    pip3 install --no-cache-dir --system pip==9.0.1\n\n# Install basic packages\nRUN pip3 install --no-cache-dir numpy==1.13.1 && \\\n    pip3 install --no-cache-dir jupyter==1.0.0 && \\\n    pip3 install --no-cache-dir matplotlib==2.0.2 && \\\n    pip3 install --no-cache-dir scipy==0.19.1 && \\\n    pip3 install --no-cache-dir pandas==0.20.2 && \\\n    pip3 install --no-cache-dir sympy==1.1.1 && \\\n    pip3 install --no-cache-dir scikit-learn==0.19.0 && \\\n    pip3 install --no-cache-dir jupyterhub==0.7.2\n\n# Install further packages\nRUN pip3 install --no-cache-dir xgboost==0.6a2 && \\\n    pip3 install --no-cache-dir theano==0.10.0b1 && \\\n    pip3 install --no-cache-dir tensorflow-gpu==1.3.0 && \\\n    pip3 install --no-cache-dir Cython==0.26 && \\\n    pip3 install --no-cache-dir numexpr==2.6.2 && \\\n    pip3 install --no-cache-dir WordCloud==1.3.1 && \\\n    pip3 install --no-cache-dir llvmlite==0.20.0 && \\\n    pip3 install --no-cache-dir numba==0.35.0 && \\\n    pip3 install --no-cache-dir hep_ml==0.5.0 && \\\n    pip3 install --no-cache-dir scikit-optimize==0.4 && \\\n    pip3 install --no-cache-dir keras==2.0.8\n\nRUN npm install -g configurable-http-proxy && npm cache clean --force;\n\nRUN mkdir -p /srv/jupyterhub/\nWORKDIR /srv/jupyterhub/\n\n# Checkout the course git repository\nRUN git clone https://github.com/thomaskeck/MultivariateClassificationLecture.git && \\\n    for i in `seq 1 30`; do cp -r MultivariateClassificationLecture/exercises /home/kseta_tutorial_$i/; chown -R kseta_tutorial_$i /home/kseta_tutorial_$i/exercises; done\n\n# Fix broken symlinks link\nRUN ln -s /usr/bin/nodejs /usr/bin/node\n\nRUN apt-get install --no-install-recommends -y wget nano locate && updatedb && rm -rf /var/lib/apt/lists/*;\nRUN echo \"/usr/lib/nvidia-375\" >> /etc/ld.so.conf.d/nvidia.conf\n# Using ldconfig doesn't work, don't know why\n# RUN ldconfig\nRUN echo '#!/bin/bash' >> /bin/startup && echo \"ldconfig && jupyterhub\" >> /bin/startup && chmod +x /bin/startup\n\nEXPOSE 8000\n\nCMD [\"startup\"]\n\n#docker build -t myjupyterhub .\n#export NVIDIA_SO=$(\\ls /usr/lib/nvidia-375/libnvidia* | xargs -I{} echo '-v {}:{}')\n#export DEVICES=$(\\ls /dev/nvidia* | xargs -I{} echo '--device {}:{}')\n#export CUDA_SO=$(\\ls /usr/lib/x86_64-linux-gnu/libcuda.* | xargs -I{} echo '-v {}:{}')\n#docker run -p 8005:8000 $CUDA_SO $NVIDIA_SO $DEVICES -it myjupyterhub:latest\n\n"
}