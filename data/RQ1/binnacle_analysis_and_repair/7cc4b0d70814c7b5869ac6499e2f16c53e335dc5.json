{
  "startTime": 1674250827697,
  "endTime": 1674250827885,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 137
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 6,
        "columnEnd": 144
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.5-slim-jessie\n\nRUN usermod -d /home www-data && chown www-data:www-data /home\n\n# Install dependancies\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        git \\\n        libevent-dev \\\n        libxml2-dev \\\n        libxslt1-dev \\\n        zlib1g-dev \\\n        # cryptography\n        build-essential \\\n        libssl-dev \\\n        libffi-dev \\\n        python-dev \\\n        gnupg2 \\\n    && apt-get clean \\\n    && apt-get autoremove -y \\\n    && rm -rf /var/lib/apt/lists/*\n\n# grab gosu for easy step-down from root\nENV GOSU_VERSION 1.4\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        curl \\\n    && for key in \\\n      # GOSU\n      B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n    ; do \\\n      gpg2 --no-tty --keyserver hkp://ipv4.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n      gpg2 --no-tty --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n      gpg2 --no-tty --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" || \\\n      gpg2 --no-tty --keyserver hkp://keyserver.pgp.com:80 --recv-keys \"$key\" \\\n    ; done \\\n    && curl -f -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n   && curl -f -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n   && gpg2 --verify /usr/local/bin/gosu.asc \\\n   && rm /usr/local/bin/gosu.asc \\\n   && chmod +x /usr/local/bin/gosu \\\n    && apt-get clean \\\n    && apt-get autoremove -y \\\n        curl \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p /code\nWORKDIR /code\n\nRUN pip install --no-cache-dir -U pip\nRUN pip install --no-cache-dir setuptools==37.0.0\n\nCOPY ./requirements.txt /code/\n\nRUN pip install --no-cache-dir -r /code/requirements.txt\n\n# Copy the rest of the code over\nCOPY ./ /code/\n\nARG GIT_COMMIT=\nENV GIT_COMMIT ${GIT_COMMIT}\n\nRUN python setup.py develop\n\nEXPOSE 7777\n\nCMD [\"gosu\", \"www-data\", \"invoke\", \"server\"]\n"
}