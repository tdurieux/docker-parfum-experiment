{
  "startTime": 1674241168420,
  "endTime": 1674241168531,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.1-alpine3.9\n\n# Add configs\nADD ./lumen.ini /usr/local/etc/php/conf.d\nADD ./worker.conf /etc/supervisor/worker.conf\n\n# Environment variables\nENV ALPINE_VERSION 3.9\nENV PHP_API_VERSION 20160303\nENV PYTHON_VERSION=2.7.15-r3\nENV PY_PIP_VERSION=18.1-r0\nENV SUPERVISOR_VERSION=3.3.1\nENV IMAGICK_VERSION=3.4.3\n# ENV AMQP_VERSION=1.8.0\nENV MONGODB_VERSION=1.2.5\n\n# Install & clean up dependencies\nRUN apk --no-cache --update --repository http://dl-cdn.alpinelinux.org/alpine/v$ALPINE_VERSION/main/ add \\\n    autoconf \\\n    build-base \\\n    ca-certificates \\\n    python=$PYTHON_VERSION \\\n    py-pip=$PY_PIP_VERSION \\\n    curl \\\n    openssl \\\n    openssl-dev \\\n    libtool \\\n    icu \\\n    icu-libs \\\n    icu-dev \\\n    libwebp \\\n    libpng \\\n    libpng-dev \\\n    libjpeg-turbo \\\n    libjpeg-turbo-dev \\\n    imagemagick-dev \\\n    imagemagick \\\n&& apk --no-cache --update --repository http://dl-3.alpinelinux.org/alpine/v$ALPINE_VERSION/community/ add \\\n    php7-gd \\\n    php7-sockets \\\n    php7-zlib \\\n    php7-intl \\\n    php7-opcache \\\n    php7-bcmath \\\n&& docker-php-ext-configure intl \\\n&& docker-php-ext-configure gd \\\n    --with-png-dir=/usr/include/ \\\n    --with-jpeg-dir=/usr/include/ \\\n&& pecl install \\\n    imagick-$IMAGICK_VERSION \\\n    # amqp-$AMQP_VERSION \\\n    mongodb-$MONGODB_VERSION \\\n&& docker-php-ext-install \\\n    pdo_mysql \\\n    sockets \\\n    gd \\\n    intl \\\n    opcache \\\n    bcmath \\\n&& docker-php-ext-enable \\\n    imagick \\\n    # amqp \\\n    mongodb \\\n&& apk --no-cache del \\\n    wget \\\n    icu-dev \\\n    libpng-dev \\\n    libjpeg-turbo-dev \\\n    imagemagick-dev \\\n    tar \\\n    autoconf \\\n    build-base \\\n    libtool \\\n&& rm -rf /var/cache/apk/* /tmp/*\n\n# Install supervisor\nRUN pip install --no-cache-dir supervisor==$SUPERVISOR_VERSION\n\nWORKDIR /var/www/application\n\nCMD sh -c \"supervisord --nodaemon --configuration /etc/supervisor/worker.conf\"\n"
}