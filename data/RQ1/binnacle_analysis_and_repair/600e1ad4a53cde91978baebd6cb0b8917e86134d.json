{
  "startTime": 1674243613598,
  "endTime": 1674243613623,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile to build and test this library in a docker container with an external IDE (in this case visual studio code)\n#\n# execute the following commands to build this docker image:\n#  $ docker build -t amqp-ts .\n#\n# to start the development process with docker\n#  $ docker run -d --hostname rabbitmq --name rabbitmq rabbitmq:3\n#  $\n#  $ docker run --name dev-amqp-ts -d -v <absolute_local_amqp-ts_path>:/src --link rabbitmq amqp-ts\n# or to start development with docker-compose (does the hard work for you)\n#  $ docker-compose up -d\n#\n# to build execute the following command:\n#  $ docker exec dev-amqp-ts gulp\n#\n# to automatically build from within Visual Studio Code with CTRL-SHIFT-B\n# create a tasks.json file in the .vscode folder with the following content:\n# {\n#     // See https://go.microsoft.com/fwlink/?LinkId=733558\n#     // for the documentation about the tasks.json format\n#     \"version\": \"0.1.0\",\n#     \"command\": \"docker\",\n#     \"isShellCommand\": true,\n#     \"args\": [\"exec\", \"dev-amqp-ts\", \"gulp\"],\n#     \"showOutput\": \"always\"\n# }\n#\n# to debug (in this case the mocha tests) execute the following line and run the 'Attach' Visual Studio Code Debugger:\n#  $ docker exec dev-amqp-ts node --debug-brk --nolazy /src/node_modules/mocha/bin/_mocha transpiled/amqp-ts.spec.js\n# todo: create better integration\nFROM node:latest\n\nWORKDIR /src\n\n# install global modules needed\nRUN npm install -g gulp && npm cache clean --force;\n\n# copy and install local development libraries\nCOPY package.json /src/\nRUN npm install && npm cache clean --force;\n\n# needed to keep the docker version of the libraries separate from the local version\nVOLUME [\"/src\", \"/src/node_modules\"]\n# default node debug port\nEXPOSE 5858\n\n# define the default rabbitmq server to use\nENV AMQPTEST_CONNECTION_URL=amqp://rabbitmq\n\n#initialize the docker development environment\n#CMD [\"npm\", \"run\", \"docker-develop\"]\nCMD [\"node\", \"tools/alive\"]"
}