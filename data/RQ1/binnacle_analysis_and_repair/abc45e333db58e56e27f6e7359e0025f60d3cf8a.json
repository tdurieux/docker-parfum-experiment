{
  "startTime": 1674251632119,
  "endTime": 1674251632250,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 7,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Docker image to build a SonarQube platform container for\n# continuous inspection of code quality based on OpenJDK 8 image.\n#\n# ######################## INFOS ##########################\n#  Image based on https://hub.docker.com/_/openjdk\n#\n#   - Expose\n#         9000 Sonar Web App HTTP\n#         9092 H2 Database\n#\n#   - Data path:    /opt/sonarqube/data\n#   - Plugins path: /opt/sonarqube/extensions/plugins\n#\n#   - Web Application\n#         User:    admin:admin\n#         Path:    /    e.g. http://localhost:9000\n# ######################## INFOS ##########################\n#\n#\n# ######################## DOCKER #########################\n# BUILD\n# docker build -t blogging-it/internal-sonarqube:1.0.0 .\n#\n# RUN (add -d parameter to start a container in detached mode)\n# docker run -P -it --rm -p 9000:9000 -p 9092:9092 --name internal-sonarqube blogging-it/internal-sonarqube:1.0.0\n#\n# STOP\n# docker stop internal-sonarqube\n#\n# REMOVE CONTAINER AND IMAGE\n# docker rm -f internal-sonarqube ; docker rmi -f blogging-it/internal-sonarqube:1.0.0\n#\n# LOGIN INTO CONTAINER\n# docker exec -i -t internal-sonarqube /bin/bash\n#\n# COPY FILE FROM CONTAINER TO HOST\n# docker cp internal-sonarqube:/opt/sonarqube/data ./data\n#\n# CHECK CONTAINER LOGS\n# docker logs internal-sonarqube\n#\n# ######################## DOCKER #########################\n#\n\n# ######################## BASE ###########################\n\nFROM openjdk:8\nMAINTAINER \"Markus Eschenbach <mail@blogging-it.com>\"\n\n# ***************** ENVIRONMENT VARIABLES *****************\n\nENV SQ_HOME=/opt/sonarqube \\\n    SQ_VERSION=6.3 \\\n    SQ_WEB_JVM_OPTS= \\\n    SQ_LOG_CONSOLE=true \\\n    SQ_DOWNLOAD_URL=https://sonarsource.bintray.com/Distribution/sonarqube \\\n    SQ_TS_PLUGIN_VERSION=1.1.0 \\\n    SQ_TS_PLUGIN_URL=https://github.com/Pablissimo/SonarTsPlugin/releases/download/v\n\nENV SQ_TS_PLUGIN_NAME=sonar-typescript-plugin-$SQ_TS_PLUGIN_VERSION.jar\n\n# Database configuration\nENV SQ_JDBC_USERNAME=sonar \\\n    SQ_JDBC_PASSWORD=sonar \\\n    SQ_JDBC_PORT=9092 \\\n    SQ_JDBC_URL=jdbc:h2:tcp://localhost:9092/sonar\n#   SQ_JDBC_URL=jdbc:postgresql://localhost/sonar\n\n# ************ DOWNLOAD AND INSTALL SONARQUBE *************\n\nRUN set -x \\\n\n    # pub   2048R/D26468DE 2015-05-25\n    #       Key fingerprint = F118 2E81 C792 9289 21DB  CAB4 CFCA 4A29 D264 68DE\n    # uid   sonarsource_deployer (Sonarsource Deployer) <infra@sonarsource.com>\n    # sub   2048R/06855C1D 2015-05-25 \\\n    && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys F1182E81C792928921DBCAB4CFCA4A29D26468DE \\\n\n    && cd /opt \\\n    && curl -o sonarqube.zip -fSL $SQ_DOWNLOAD_URL/sonarqube-$SQ_VERSION.zip \\\n    && curl -o sonarqube.zip.asc -fSL $SQ_DOWNLOAD_URL/sonarqube-$SQ_VERSION.zip.asc \\\n    && gpg --batch --verify sonarqube.zip.asc sonarqube.zip \\\n    && unzip sonarqube.zip \\\n    && mv sonarqube-$SQ_VERSION sonarqube \\\n    && rm sonarqube.zip* \\\n    && rm -rf $SQ_HOME/bin/*\n\n\n# *************** INSTALL SONARQUBE PLUGINS ***************\n\n# SonarTsPlugin - https://github.com/Pablissimo/SonarTsPlugin\nRUN set -x \\\n    && mkdir -p $SQ_HOME/extensions/plugins \\\n    && cd $SQ_HOME/extensions/plugins \\\n    && curl -o $SQ_TS_PLUGIN_NAME -fSLk $SQ_TS_PLUGIN_URL$SQ_TS_PLUGIN_VERSION/$SQ_TS_PLUGIN_NAME\n\n\n\n# ********************* EXPOSE PORTS *********************\n\n# Sonar Web App HTTP\nEXPOSE 9000\n\n# H2 Database\nEXPOSE 9092\n\n# *********************** VOLUMES ************************\n\nVOLUME [\"$SQ_HOME/data\", \"$SQ_HOME/extensions\"]\n\n# *********************** RUNSCRIPT **********************\n\nWORKDIR $SQ_HOME\nCOPY run.sh $SQ_HOME/bin/\n\nRUN set -x \\\n    && chmod +x $SQ_HOME/bin/run.sh\n\n# ********************** ENTRYPOINT **********************\n\nENTRYPOINT [\"./bin/run.sh\"]"
}