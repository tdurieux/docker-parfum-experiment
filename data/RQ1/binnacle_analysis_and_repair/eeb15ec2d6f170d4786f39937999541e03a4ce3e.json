{
  "startTime": 1674236146178,
  "endTime": 1674236146310,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# In order to support graphical interfaces,\n# this should be run with\n# docker run -it --rm \\\n#     -e DISPLAY=$DISPLAY \\\n#     -v /tmp/.X11-unix:/tmp/.X11-unix \\ \n#     ros-indigo-full-catkin <cmd>\n#\n# The -e and -v commands are needed to display on the host X server.\n# For hardware support, you will also need:\n#  --privileged   (to access the graphics card)\n#  It may also be required to call\n#  $ xhost +\n#  before running the container.\n\nFROM jenniferbuehler/ros-indigo-full-catkin\n\nMAINTAINER Jennifer Buehler\n\n# Install system essentials\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    cmake \\\n    sudo \\\n    vim \\\n    && rm -rf /var/lib/apt/lists/*\n\n# need g++ for compiling with cmake even if gcc\n# is already installed\nRUN apt-get update && apt-get install --no-install-recommends -y g++ \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install required ROS dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ros-indigo-gazebo-ros \\\n    ros-indigo-gazebo-ros-control \\\n    ros-indigo-roslint \\\n    && rm -rf /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;\n\n\n# install git\nRUN apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\nCOPY jaco_arm /catkin_ws/src/jaco_arm\nCOPY jaco_tutorial /catkin_ws/src/jaco_tutorial\n\n# Get the repository convenience-pkgs as well\nRUN bin/bash -c \"cd /catkin_ws/src \\\n    && git clone https://github.com/JenniferBuehler/convenience-pkgs.git\"\n\n# Build\nRUN bin/bash -c \"source /.bashrc \\\n    && cd /catkin_ws \\\n    && catkin_make \\\n    && catkin_make install\"\n\nRUN bin/bash -c \"source .bashrc\"\n\nCMD [\"bash\",\"-l\"]\n"
}