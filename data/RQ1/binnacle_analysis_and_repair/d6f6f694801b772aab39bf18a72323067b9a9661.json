{
  "startTime": 1674244977380,
  "endTime": 1674244977767,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 5,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2018, 2019 IBM Corp. and others\n#\n# This program and the accompanying materials are made available under\n# the terms of the Eclipse Public License 2.0 which accompanies this\n# distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n# or the Apache License, Version 2.0 which accompanies this distribution and\n# is available at https://www.apache.org/licenses/LICENSE-2.0.\n#\n# This Source Code may also be made available under the following\n# Secondary Licenses when the conditions for such availability set\n# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n# General Public License, version 2 with the GNU Classpath\n# Exception [1] and GNU General Public License, version 2 with the\n# OpenJDK Assembly Exception [2].\n#\n# [1] https://www.gnu.org/software/classpath/license.html\n# [2] http://openjdk.java.net/legal/assembly-exception.html\n#\n# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n\n# To use this docker file:\n# First copy your public ssh key into a file named authorized_keys next to the Dockerfile\n# Then include a known_hosts file next to the Dockerfile, with github as a saved host\n# This can be done with \"ssh-keyscan github.com >> path_to_dockerfile/known_hosts\"\n# Make sure you are in the directory containing the Dockerfile, authorized_keys file, and known_hosts file\n# Then run:\n#   docker build -t openj9 -f Dockerfile .\n#   docker run -it openj9\n\nFROM ubuntu:18.04\n\n# Install required OS tools\n\nENV USER=\"jenkins\"\n\nRUN apt-get update \\\n  && apt-get install -qq -y --no-install-recommends \\\n    software-properties-common \\\n  && add-apt-repository ppa:ubuntu-toolchain-r/test \\\n  && apt-get update \\\n  && apt-get install -qq -y --no-install-recommends \\\n    ant \\\n    ant-contrib \\\n    autoconf \\\n    build-essential \\\n    curl \\\n    libexpat1-dev `# This is being used for the xml parser` \\\n    g++-7 \\\n    gcc-7 \\\n    gdb \\\n    git \\\n    openssh-client \\\n    openssh-server \\\n    perl \\\n    ssh \\\n    wget \\\n    xvfb \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install Docker module to run test framework\nRUN echo yes | cpan install JSON Text::CSV XML::Parser\n\n# Add user home/USER and copy authorized_keys and known_hosts\nRUN useradd -ms /bin/bash ${USER} \\\n  && mkdir /home/${USER}/.ssh/\nCOPY authorized_keys /home/${USER}/.ssh/authorized_keys\nCOPY known_hosts /home/${USER}/.ssh/known_hosts\nRUN chown -R ${USER}:${USER} /home/${USER} \\\n  && chmod 644 /home/${USER}/.ssh/authorized_keys \\\n  && chmod 644 /home/${USER}/.ssh/known_hosts \\\n  && chmod 700 /home/${USER}/.ssh\n\n# Set up sshd config\nRUN mkdir /var/run/sshd \\\n  && sed -i 's/#PermitRootLogin/PermitRootLogin/' /etc/ssh/sshd_config \\\n  && sed -i 's/#RSAAuthentication.*/RSAAuthentication yes/' /etc/ssh/sshd_config \\\n  && sed -i 's/#PubkeyAuthentication.*/PubkeyAuthentication yes/' /etc/ssh/sshd_config\n\n# SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n\n# Install OpenSSL v1.1.1b\n# Required for JITaaS & Crypto functional testing\nRUN cd /tmp \\\n  && wget https://github.com/openssl/openssl/archive/OpenSSL_1_1_1b.tar.gz \\\n  && tar -xzf OpenSSL_1_1_1b.tar.gz \\\n  && rm -f OpenSSL_1_1_1b.tar.gz \\\n  && cd /tmp/openssl-OpenSSL_1_1_1b \\\n  && ./config --prefix=/usr/local/openssl-1.1.1b --openssldir=/usr/local/openssl-1.1.1b \\\n  && make \\\n  && make install \\\n  && cd .. \\\n  && rm -rf openssl-OpenSSL_1_1_1b \\\n  && echo \"/usr/local/openssl-1.1.1b/lib\" > /etc/ld.so.conf.d/openssl-1.1.1b.conf \\\n  && echo \"PATH=/usr/local/openssl-1.1.1b/bin:$PATH\" > /etc/environment\n\n# Install Protobuf v3.5.1\n# Required for JITaaS\nRUN cd /tmp \\\n  && wget https://github.com/protocolbuffers/protobuf/releases/download/v3.5.1/protobuf-cpp-3.5.1.tar.gz \\\n  && tar -xzf protobuf-cpp-3.5.1.tar.gz \\\n  && rm -f protobuf-cpp-3.5.1.tar.gz \\\n  && cd /tmp/protobuf-3.5.1 \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make \\\n  && make install \\\n  && cd .. \\\n  && rm -rf protobuf-3.5.1\n\n# Run ldconfig to create necessary links and cache to shared libraries\nRUN echo \"/usr/local/lib\" > /etc/ld.so.conf.d/usr-local.conf \\\n  && echo \"/usr/local/lib64\" >> /etc/ld.so.conf.d/usr-local.conf \\\n  && ldconfig\n\n# Expose SSH port and run SSH\nEXPOSE 22\n"
}