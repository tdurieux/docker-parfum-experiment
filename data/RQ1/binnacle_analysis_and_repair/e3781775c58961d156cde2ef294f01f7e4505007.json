{
  "startTime": 1674244734721,
  "endTime": 1674244734830,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 39,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nMAINTAINER Joshua Sindy <josh@root.bz>\n# Examples\n# docker build -t observer .\n# docker run --rm -it -e flags=\"--help\" observer\n# docker run -d --name observer -e flags=\"--testnet\" observer\n# docker logs observer\n\nRUN apt-get update && apt-get install --no-install-recommends -y python-dev python-pip build-essential git libffi-dev libssl-dev && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir pyopenssl ndg-httpsclient pyasn1\nRUN pip install --no-cache-dir --upgrade pip virtualenv\nRUN pip install --no-cache-dir mock coverage nose pylint\nRUN git clone https://github.com/OpenBazaar/OpenBazaar-Server.git\nWORKDIR /OpenBazaar-Server/\nRUN pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir -r test_requirements.txt\nRUN make\nRUN adduser --disabled-password --gecos \\\"\\\" openbazaar\nRUN chown -R openbazaar:openbazaar /OpenBazaar-Server\n\nUSER openbazaar\nCMD python openbazaard.py start $flags\n"
}