{
  "startTime": 1674250429434,
  "endTime": 1674250430393,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 41,
        "columnEnd": 72
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 134,
        "lineEnd": 134,
        "columnStart": 69,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 188,
        "lineEnd": 189,
        "columnStart": 33,
        "columnEnd": 102
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 26,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 152,
        "lineEnd": 152,
        "columnStart": 26,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 85,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 22,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 100,
        "lineEnd": 106,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 108,
        "lineEnd": 113,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 124,
        "lineEnd": 126,
        "columnStart": 22,
        "columnEnd": 4
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile_p4\n# Builds docker container to build/run Juniper P4 Agent\n#\n# Created by Sandesh Kumar Sodhi, December 2017\n# Copyright (c) [2017] Juniper Networks, Inc. All rights reserved.\n#\n# All rights reserved.\n#\n# Notice and Disclaimer: This code is licensed to you under the Apache\n# License 2.0 (the \"License\"). You may not use this code except in compliance\n# with the License. This code is not an official Juniper product. You can\n# obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n#\n# Third-Party Code: This code may depend on other components under separate\n# copyright notice and license terms. Your use of the source code for those\n# components is subject to the terms and conditions of the respective license\n# as noted in the Third-Party source code file.\n#\n\nFROM ubuntu:16.04\nLABEL maintainer \"Sandesh Kumar Sodhi\"\n\n#\n# Build\n#\n# [sudo] docker build -f Dockerfile_p4 -t juniper-p4 .\n#\n# Run:\n#\n# [sudo] docker run --name jnprp4 --privileged -i -t juniper-p4 /bin/bash\n#\n#\n#\n\nARG DEBIAN_FRONTEND=noninteractive\n\n#\n# Note:\n# While adding new package to the list, maintain the alphanumeric sorted order.\n#\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n autoconf \\\n automake \\\n bsdmainutils \\\n build-essential \\\n ca-certificates \\\n curl \\\n ethtool \\\n expect \\\n g++ \\\n gdb \\\n git \\\n gdebi-core \\\n iputils-ping \\\n less \\\n libboost-all-dev \\\n libevent-pthreads-2.0-5 \\\n libjsoncpp-dev \\\n libnet1-dev \\\n libpcap-dev \\\n libssl-dev \\\n libtool \\\n libxml2-utils \\\n libyaml-cpp-dev \\\n nano \\\n net-tools \\\n nmap \\\n openssh-client \\\n openssl \\\n pkg-config \\\n psmisc \\\n python-lxml \\\n realpath \\\n sed \\\n software-properties-common \\\n ssh \\\n sshpass \\\n tcpdump \\\n telnet \\\n tmux \\\n tdom \\\n tree \\\n unzip \\\n vim \\\n wget && rm -rf /var/lib/apt/lists/*;\n\n\n# Clang related packages\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\nRUN apt-add-repository -y \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main\"\nRUN apt-get update && apt-get install -y --no-install-recommends clang-6.0 clang-format-6.0 clang-tidy-6.0 && rm -rf /var/lib/apt/lists/*;\nRUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-6.0 10\nRUN update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-6.0 10\nRUN update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-6.0 10\nRUN update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-6.0 10\n\n#\n# Packages needed for p4c\n#\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n bison \\\n cmake \\\n flex \\\n libgc-dev \\\n libgmp-dev \\\n libfl-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n python \\\n pylint \\\n python-pip \\\n python3-pip \\\n python-scapy && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir -U setuptools\nRUN pip install --no-cache-dir scapy\nRUN pip install --no-cache-dir ipaddr\nRUN pip install --no-cache-dir gcovr\nRUN pip install --no-cache-dir lxml\nRUN pip3 install --no-cache-dir grpcio-tools\nRUN pip3 install --no-cache-dir prompt-toolkit\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n curl \\\n git && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /root/downloads\nRUN cd /root/downloads && git clone -b $( curl -f -L https://grpc.io/release) https://github.com/grpc/grpc\nRUN cd /root/downloads/grpc && git fetch && git checkout v1.8.1\nRUN cd /root/downloads/grpc && git submodule update --init\nRUN cd /root/downloads/grpc && make\nRUN cd /root/downloads/grpc && make install\nRUN cd /root/downloads/grpc/third_party/protobuf/ && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\n#\n# GTEST\n#\nRUN cd /root/downloads && wget https://github.com/google/googletest/archive/release-1.8.0.tar.gz\nRUN cd /root/downloads && tar xzf release-1.8.0.tar.gz && rm release-1.8.0.tar.gz\n\n#\n# pyang\n#\nRUN cd /root/downloads && git clone https://github.com/mbj4668/pyang.git\nRUN cd /root/downloads/pyang && python setup.py install\n\n#\n# GO\n#\nRUN cd /root/downloads && wget https://redirector.gvt1.com/edgedl/go/go1.9.2.linux-amd64.tar.gz\nRUN cd /root/downloads && tar -C /usr/local -xzf go1.9.2.linux-amd64.tar.gz && rm go1.9.2.linux-amd64.tar.gz\nRUN mkdir -p /root/go\nENV PATH=$PATH:/usr/local/go/bin\nENV GOPATH=/root/go\n\n#\n# ygot\n#\nRUN cd /root/go && go get github.com/golang/protobuf/proto\nRUN cd /root/go && go get github.com/openconfig/gnmi; exit 0\nRUN cd /root/go && go get github.com/openconfig/goyang\nRUN cd /root/go && go get google.golang.org/grpc\nRUN cd /root/go && go get github.com/golang/glog\nRUN cd /root/go && go get github.com/kylelemons/godebug; exit 0\nRUN cd /root/go/src && go get github.com/openconfig/ygot; exit 0\nRUN cd /root/go/src/github.com/openconfig/ygot/proto_generator && go build\n\n#\n# Opentracing\n#\nRUN cd /root/downloads && git clone https://github.com/opentracing/opentracing-cpp\nRUN cd /root/downloads/opentracing-cpp && mkdir .build\nRUN cd /root/downloads/opentracing-cpp/.build && cmake ..\nRUN cd /root/downloads/opentracing-cpp/.build && make\nRUN cd /root/downloads/opentracing-cpp/.build && make install\n\n#\n# Jaeger\n#\n\n# Install thrift first. Note Jaeger works only with Thrift 0.9.3\n# https://github.com/jaegertracing/jaeger-client-cpp/issues/45\n#\nRUN cd /root/downloads && git clone https://github.com/apache/thrift\nRUN cd /root/downloads/thrift && git checkout 0.9.3\nRUN cd /root/downloads/thrift && ./bootstrap.sh\nRUN cd /root/downloads/thrift && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-cpp --with-java=no --with-python=no \\\n--with-lua=no --with-perl=no --enable-shared=yes --enable-static=no --enable-tutorial=no --with-qt4=no\nRUN cd /root/downloads/thrift && make -s\nRUN cd /root/downloads/thrift && make install\n\n# Now install cpp client for Jaeger\n\nRUN cd /root/downloads && git clone https://github.com/jaegertracing/cpp-client\nRUN cd /root/downloads/cpp-client && git checkout v0.3.0\nRUN cd /root/downloads/cpp-client && mkdir .build\nRUN cd /root/downloads/cpp-client/.build && cmake ..\nRUN cd /root/downloads/cpp-client/.build && make\nRUN cd /root/downloads/cpp-client/.build && make install\n\nCOPY env/bash_aliases /root/.bash_aliases\nCOPY env/vimrc        /root/.vimrc\nCOPY env/tmux.conf    /root/.tmux.conf\n\nCOPY entrypoint.sh /root/entrypoint.sh\n\nENTRYPOINT [\"/root/entrypoint.sh\"]\n\n"
}