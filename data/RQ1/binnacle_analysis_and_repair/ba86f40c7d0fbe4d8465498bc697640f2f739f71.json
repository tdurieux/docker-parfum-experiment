{
  "startTime": 1674250929704,
  "endTime": 1674250929833,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 20,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM unocha/base-php5:%%UPSTREAM%%\n\nMAINTAINER UN-OCHA Operations <ops+docker@humaitarianresponse.info>\n\n# Thanks to orakili <docker@orakili.net>\n\n# A little bit of metadata management.\nARG VERSION\nARG VCS_URL\nARG VCS_REF\nARG BUILD_DATE\n\nLABEL org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.vendor=\"UN-OCHA\" \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.name=\"php5\" \\\n      org.label-schema.description=\"This service provides a php-fpm platform with drush and composer.\" \\\n      org.label-schema.vcs-url=$VCS_URL \\\n      org.label-schema.vcs-ref=$VCS_REF\n\nENV DRUSH_VERSION=6 \\\n    DRUSH_RELEASE=6.7.0\n\nCOPY drushrc.php /\n\nRUN apk add --update-cache \\\n      php5-cli \\\n      mysql-client \\\n      postgresql-client  && \\\n    rm -rf /var/cache/apk/* && \\\n    # Symlink php5 binary.\n    ln -sf /usr/bin/php5 /usr/bin/php && \\\n    # Set unlimited memory for CLI php.\n    sed -i 's/^memory_limit = .*/memory_limit = -1/' /etc/php5/php.ini && \\\n    # Install composer, as suggested by https://getcomposer.org/\n    # and https://getcomposer.org/doc/faqs/how-to-install-composer-programmatically.md\n    COMPOSER_HASH=$( curl -f -sS https://composer.github.io/installer.sig) && \\\n    php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" && \\\n    php -r \"if (hash_file('SHA384', 'composer-setup.php') === '$COMPOSER_HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" && \\\n    php composer-setup.php --install-dir=/usr/bin --filename=composer && \\\n    php -r \"unlink('composer-setup.php');\" && \\\n    # Install drush and symlink it somewhere useful.\n    COMPOSER_HOME=/usr/local/drush$DRUSH_VERSION \\\n      composer global require drush/drush:$DRUSH_RELEASE && \\\n    ln -sf /usr/local/drush$DRUSH_VERSION/vendor/bin/drush /usr/bin/drush && \\\n    # Patch drush to stop the \"4 byte UTF-8 for mysql\" warning on updb.\n    # See https://github.com/drush-ops/drush/issues/2270\n    sed -i 's/!= REQUIREMENT_OK/>= REQUIREMENT_OK/' \\\n      /usr/local/drush$DRUSH_VERSION/vendor/drush/drush/commands/core/drupal/update_7.inc && \\\n    drush status && \\\n    # Install registry_rebuild to the appuser's homedir.\n    drush -y @none dl --destination=/home/appuser/.drush/commands registry_rebuild && \\\n    # Ensure the appuser's drush directory is writable.\n    chown -R appuser:appuser /home/appuser/.drush && \\\n    # Symlink the appuser's drush module to root's.\n    mkdir -p /root/.drush && \\\n    ln -s /home/appuser/.drush/commands /root/.drush/commands && \\\n    # Add our default drushrc.php file.\n    mkdir -p /etc/drush && \\\n    mv /drushrc.php /etc/drush/drushrc.php\n\n\n# Volumes\n# - Conf: /etc/php5/ (php.ini, php-fpm.conf, conf.d/)\n# - Logs: /var/log/php\n# - Data: /srv/www, /var/lib/php/session\n"
}