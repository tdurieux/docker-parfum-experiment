{
  "startTime": 1674242973607,
  "endTime": 1674242973880,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 59,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM boomtownroi/git:latest\n\nMAINTAINER BoomTown CNS Team <consumerteam@boomtownroi.com>\n\nENV NODE_VERSION 9.11.2\nENV YARN_VERSION 1.15.2\nENV HUB_VERSION 2.2.9\nENV PHANTOMJS_BIN /usr/local/n/lib/node_modules/phantomjs-prebuilt/lib/phantom/bin/phantomjs\n\nRUN add-apt-repository -y ppa:nginx/stable &2> /dev/null\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    build-essential \\\n    curl \\\n    dialog \\\n    gawk \\\n    jq \\\n    imagemagick \\\n    libfontconfig \\\n    libssl-dev \\\n    mysql-client \\\n    php \\\n    python \\\n    rsync \\\n    ssh-client \\\n    wget zip \\\n    php-fpm php-mysql php-curl php-gd php-mbstring \\\n    php-intl php-pear php-imagick php-imap php-mcrypt php-memcached \\\n    php-pspell php-recode php-tidy php-xmlrpc php-xsl php-xdebug && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install node\n# (This has been copy/pasted from https://github.com/nodejs/docker-node/blob/947280600648b70e067d35415d6812fd03127def/8/Dockerfile\n# since we extend from a different base image.)\n\n# gpg keys listed at https://github.com/nodejs/node#release-keys\nRUN set -ex \\\n  && for key in \\\n    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n    FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n    B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n    77984A986EBC2AA786BC0F66B01FBB92821C587A \\\n    8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \\\n    4ED778F539E3634C779C87C6D7062848A1AB005C \\\n    A48C2BEE680E841632CD4E44F07496B3EB3C1762 \\\n    B9E2F5981AA6E0CD28160D9FF13993A75599653C; \\\n  do \\\n    gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n    gpg --batch --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n    gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"; \\\n  done\n\n# NODE_VERSION already defined\n\nRUN ARCH= && dpkgArch=\"$(dpkg --print-architecture)\" \\\n  && case \"${dpkgArch##*-}\" in \\\n    amd64) ARCH='x64';; \\\n    ppc64el) ARCH='ppc64le';; \\\n    s390x) ARCH='s390x';; \\\n    arm64) ARCH='arm64';; \\\n    armhf) ARCH='armv7l';; \\\n    i386) ARCH='x86';; \\\n    * echo \"unsupported  architecture\"; exit 1;; \\\n  esac \\\n  && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n  && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n  && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n  && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n  && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n\n# END copy/paste job\n\n# Install composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/bin --filename=composer\n\n# Install hub\nRUN cd / && \\\n  wget https://github.com/github/hub/releases/download/v$HUB_VERSION/hub-linux-amd64-$HUB_VERSION.tgz && \\\n  tar -xvf hub-linux-amd64-$HUB_VERSION.tgz && \\\n  rm -f hub-linux-amd64-$HUB_VERSION.tgz && \\\n  cp hub-linux-amd64-$HUB_VERSION/bin/hub /bin/hub && \\\n  cp -r hub-linux-amd64-$HUB_VERSION/etc /etc && \\\n  rm -rf hub-linux-amd64-$HUB_VERSION\n\n# Make sure we clear npm's cache so it won't infest future builds\nRUN npm install -g --unsafe-perm \\\n    gulp@3.9.1 \\\n    yarn@$YARN_VERSION \\\n    phantomjs-prebuilt@2.1.7 \\\n    webpack-merge \\\n    && npm config set color false \\\n    && npm cache clear --force\n\nRUN wget https://phar.phpunit.de/phpunit-5.7.phar && chmod +x phpunit-5.7.phar && mv phpunit-5.7.phar /bin/phpunit\n\nRUN curl -f -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && chmod +x wp-cli.phar && mv wp-cli.phar /bin/wp\n"
}