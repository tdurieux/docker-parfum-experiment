{
  "startTime": 1674248633429,
  "endTime": 1674248633799,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:edge\nMAINTAINER MickaÃ«l Perrin <dev@mickaelperrin.fr>\n\n# Add edge repos\nRUN echo \"@edge http://dl-cdn.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories; \\\n    echo \"@edgecommunity http://dl-cdn.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories; \\\n    echo \"@edgetesting http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories\n\nARG PYYAML_VERSION=3.12\n\nRUN apk update \\\n && apk add --no-cache --upgrade apk-tools@edgetesting \\\n && apk add --no-cache shadow@edgetesting supervisor bash curl \\\n && curl -f -L https://pyyaml.org/download/pyyaml/PyYAML-${PYYAML_VERSION}.tar.gz | tar zxv -C /tmp \\\n && cd /tmp/PyYAML-${PYYAML_VERSION} \\\n && python setup.py --without-libyaml install \\\n && apk del curl\n\nARG UNISON_VERSION=2.51.2\n\n# Compile unison from source with inotify support and removes compilation tools\nRUN apk add --no-cache --virtual .build-dependencies build-base curl \\\n && apk add --no-cache inotify-tools \\\n && apk add --no-cache ocaml@edge \\\n && curl -f -L https://github.com/bcpierce00/unison/archive/v$UNISON_VERSION.tar.gz | tar zxv -C /tmp \\\n && cd /tmp/unison-${UNISON_VERSION} \\\n && sed -i -e 's/GLIBC_SUPPORT_INOTIFY 0/GLIBC_SUPPORT_INOTIFY 1/' src/fsmonitor/linux/inotify_stubs.c \\\n && make UISTYLE=text NATIVE=true STATIC=true \\\n && cp src/unison src/unison-fsmonitor /usr/local/bin \\\n && apk del .build-dependencies ocaml \\\n && rm -rf /tmp/unison-${UNISON_VERSION}\n\nENV DOCKERGEN_VERSION=0.7.4\n\n# Install docker-gen (to grab docker config on start)\nRUN apk add --no-cache curl \\\n && curl -f -L https://github.com/jwilder/docker-gen/releases/download/$DOCKERGEN_VERSION/docker-gen-linux-amd64-$DOCKERGEN_VERSION.tar.gz | tar -C /usr/local/bin -xzv \\\n && apk del curl\n\n# Install supervisord-stdout\nRUN apk add --no-cache py-pip \\\n && pip install --no-cache-dir supervisor-stdout \\\n && apk del py-pip\n\n# Install entrypoint script\nCOPY entrypoint.sh /entrypoint.sh\nRUN mkdir -p /sync-entrypoint.d \\\n && chmod +x /entrypoint.sh \\\n && mkdir -p /etc/supervisor.conf.d\n\nCOPY volumes.tmpl /volumes.tmpl\nCOPY config_sync.py /config_sync.py\nCOPY supervisord.conf /etc/supervisord.conf\nCOPY supervisor.unison.tpl.conf /etc/supervisor.unison.tpl.conf\n\nENV TZ=\"Europe/Paris\" \\\n    LANG=\"C.UTF-8\"\n\nADD VERSION .\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"supervisord\"]\n"
}