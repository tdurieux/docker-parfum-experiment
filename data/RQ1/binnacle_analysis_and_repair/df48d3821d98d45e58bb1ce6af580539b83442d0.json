{
  "startTime": 1674245880870,
  "endTime": 1674245881059,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM library/python:3.7-stretch\n\nLABEL authors=\"@bnmnetp,@vsoch,@yarikoptic\"\n\n# docker build -t runstone/server .\n# TODO: convert generation to neurodocker call after all is cool\n\n# Define some ARGs which could be passed into while building\n# TODO: in reality there some hardcoding already probably present\n#       in the entrypoint.sh script.\nARG WEB2PY_PATH=/srv/web2py\nARG WEB2PY_APPS_PATH=${WEB2PY_PATH}/applications\nARG WEB2PY_PORT=8080\nARG DBHOST=db\n\n# And export some as env vars so they could be available at run time\nENV WEB2PY_PATH=${WEB2PY_PATH}\nENV RUNESTONE_PATH=${WEB2PY_APPS_PATH}/runestone\nENV BOOKS_PATH=${RUNESTONE_PATH}/books\nENV WEB2PY_VERSION=2.18.4\n\n# Click needs these encodings for Python 3\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\n# Expose that port on the network\nEXPOSE ${WEB2PY_PORT}\n\n# To prevent interactive debconf during installations\nARG DEBIAN_FRONTEND=noninteractive\n\n# Components from requirements.txt which are available in Debian\n# Missing ones:\n#  runestone -- is the RunestoneComponents, https://pypi.org/project/runestone/, may be install from Git?\n#  paver -- too old in Debian  filed bug report\n#  selenium -- also a bit too old (2.53.2+dfsg1-1)\n#  sphinxcontrib-paverutils -- N/A\n#  sphinx -- we need stretch-backports\n#  pytz ... ?\n# A few missing ones\n#  rsync is needed when deploying a built book\n#  vim - just for pleasure of being able to do any changes right within\n#  wget - just in case\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y eatmydata && \\\n    eatmydata apt-get update && echo \"count 1\" && \\\n    eatmydata apt-get install -y --no-install-recommends \\\n        gcc \\\n        git \\\n        unzip \\\n        emacs-nox \\\n        less \\\n        libfreetype6-dev postgresql-common postgresql postgresql-contrib \\\n        libpq-dev libxml2-dev libxslt1-dev \\\n        rsync wget nginx && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# The rest could be done and ran under a regular (well, staff for installing under /usr/local) user\nRUN useradd -s /bin/bash -M -g staff --home-dir ${WEB2PY_PATH} runestone && \\\n    mkdir -p /srv\n\n# Install additional components\nRUN git clone https://github.com/web2py/web2py ${WEB2PY_PATH} && \\\n    cd ${WEB2PY_PATH} && \\\n    git submodule update --init --recursive\n\nRUN mkdir -p ${RUNESTONE_PATH}\nADD . ${RUNESTONE_PATH}\nWORKDIR ${RUNESTONE_PATH}\n\n# Question: should this come from an envar?\n# Set docker_institution_mode = True so that instructors can use thinkcspy and other\n# base courses as their course when using docker to host their own courses.\nRUN mkdir -p private && \\\n    echo \"sha512:16492eda-ba33-48d4-8748-98d9bbdf8d33\" > private/auth.key && \\\n    pip3 install --no-cache-dir -r requirements.txt && \\\n    pip3 install --no-cache-dir -r requirements-test.txt && \\\n    pip3 install --no-cache-dir uwsgi uwsgitop && \\\n    rm -rf ${WEB2PY_PATH}/.cache/* && \\\n    cp ${RUNESTONE_PATH}/scripts/run_scheduler.py ${WEB2PY_PATH}/run_scheduler.py && \\\n    cp ${RUNESTONE_PATH}/scripts/routes.py ${WEB2PY_PATH}/routes.py\n\nWORKDIR ${WEB2PY_PATH}\n\n# All configuration will be done within entrypoint.sh upon initial run\n# of the container\nCOPY docker/entrypoint.sh /usr/local/sbin/entrypoint.sh\n\n# Copy configuration files to get nginx and uwsgi up and running\nRUN mkdir -p /etc/nginx/sites-enabled\nCOPY docker/nginx/sites-available/runestone /etc/nginx/sites-enabled/runestone\nCOPY docker/uwsgi/sites/runestone.ini /etc/uwsgi/sites/runestone.ini\nCOPY docker/systemd/system/uwsgi.service /etc/systemd/system/uwsgi.service\nCOPY docker/wsgihandler.py /srv/web2py/wsgihandler.py\nCOPY scripts/logging.conf /srv/web2py/logging.conf\nRUN ln -s /etc/systemd/system/uwsgi.service /etc/systemd/system/multi-user.target.wants/uwsgi.service\nRUN rm /etc/nginx/sites-enabled/default\n\nCMD /bin/bash /usr/local/sbin/entrypoint.sh\n"
}