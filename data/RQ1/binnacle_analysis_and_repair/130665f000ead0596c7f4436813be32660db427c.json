{
  "startTime": 1674239856878,
  "endTime": 1674239857160,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM godot-fedora:latest\n\nARG mono_version\n\nRUN if [ -z \"${mono_version}\" ]; then echo -e \"\\n\\nargument mono-version is mandatory!\\n\\n\"; exit 1; fi\n\nRUN dnf -y install cmake gcc gcc-c++ make which perl python curl bzip2 && dnf clean all && \\\n    curl -f https://download.mono-project.com/sources/mono/mono-${mono_version}.tar.bz2 | tar xj && \\\n    cd mono-${mono_version} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --sysconfdir=/etc --localstatedir=/var/lib/mono --disable-boehm && make -j && make install && make distclean && \\\n    cd /root && \\\n    rm -rf mono-${mono_version} && \\\n    cert-sync /etc/pki/tls/certs/ca-bundle.crt && \\\n    rpm -ivh --nodeps https://download.mono-project.com/repo/centos7-stable/m/msbuild/msbuild-16.0+xamarinxplat.2018.09.26.17.53-0.xamarin.3.epel7.noarch.rpm \\\n                      https://download.mono-project.com/repo/centos7-stable/m/msbuild-libhostfxr/msbuild-libhostfxr-2.0.0.2017.07.06.00.01-0.xamarin.1.epel7.x86_64.rpm \\\n                      https://download.mono-project.com/repo/centos7-stable/m/msbuild/msbuild-sdkresolver-16.0+xamarinxplat.2018.09.26.17.53-0.xamarin.3.epel7.noarch.rpm \\\n                      https://download.mono-project.com/repo/centos7-stable/n/nuget/nuget-4.7.0.5148.bin-0.xamarin.1.epel7.noarch.rpm\n\n"
}