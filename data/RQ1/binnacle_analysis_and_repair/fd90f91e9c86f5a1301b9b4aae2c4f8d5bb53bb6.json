{
  "startTime": 1674245382607,
  "endTime": 1674245382790,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 25,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 25,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is an image for file-based fuzzing of firmware.\n# It installs a patched AFL version (afl-other) for\n# ARM, MIPS, PPC and x86. Afterwards, it adds the\n# test cases and the whole (unpacked) root directory of\n# the firmware to the container. Both are required to\n# be specified via Docker's command line option \"--build-arg=\"\nFROM phusion/baseimage:0.10.0\nMAINTAINER Thomas Barabosch <thomas.barabosch@fkie.fraunhofer.de>\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y gcc cmake make libtool-bin wget \\\npython automake bison libglib2.0 git libssl-dev nettle-dev flex python3 \\\nbuild-essential python3-setuptools python3-dev screen gdb && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt\nRUN git clone https://github.com/shellphish/afl-other-arch.git\n\n# build AFL with support binary instrumentation support via QEMU\n# arch can be of the following:\n# aarch64 alpha arm armeb cris i386 m68k microblaze microblazeel\n# mips mips64 mips64el mipsel mipsn32 mipsn32el or32 ppc ppc64\n# ppc64abi32 ppc64le s390x sh4 sh4eb sparc sparc32plus sparc64 unicore32 x86_64\n# please refer to https://github.com/shellphish/afl-other-arch\nARG arch\nWORKDIR /opt/afl-other-arch\nRUN ./build.sh ${arch}\n\n# building afl-utils\nWORKDIR /opt\nRUN git clone https://github.com/rc0r/afl-utils\nWORKDIR /opt/afl-utils\nRUN python3 setup.py install;\\\necho \"source /usr/lib/python3.5/site-packages/exploitable-1.32_rcor-py3.5.egg/exploitable/exploitable.py\" >> ~/.gdbinit\n\n# specifiy the path to the unpacked firmware\nWORKDIR /fuzzing\nCOPY start_afl.sh /fuzzing/start_afl.sh\n\n# setting up environment\nENV PATH=\"/opt/afl-other-arch:/opt/afl-utils/:${PATH}\"\nENV AFL_PATH=\"/opt/afl-other-arch/tracers/${arch}\"\nENV QEMU_LD_PREFIX=\"/fuzz_ramdisk/firmware_root/\"\n\nENTRYPOINT [\"/fuzzing/start_afl.sh\"]\n\n"
}