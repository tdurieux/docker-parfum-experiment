{
  "startTime": 1674244904065,
  "endTime": 1674244904273,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 6,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 6,
        "columnEnd": 89
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 117
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM anoopnair/hadoop_base_debian\nMAINTAINER Anoop Nair<anoopnair.it@gmail.com>\n\nLABEL description=\"Build hadoop 2.7.1 image.\" inspiredby=\"https://github.com/sequenceiq/docker-hadoop-ubuntu\"\n\nUSER root\n\nENV HADOOP_VERSION 2.7.1\n\nRUN mkdir -p /usr/java/default \\\n  && ln -s /usr/lib/jvm/java-7-openjdk-amd64/bin /usr/java/default\nENV PATH $PATH:$JAVA_HOME/bin\n\n# passwordless ssh\nRUN rm -f /etc/ssh/ssh_host_dsa_key /etc/ssh/ssh_host_rsa_key /root/.ssh/id_rsa \\\n  && ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key \\\n  && ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key \\\n  && ssh-keygen -q -N \"\" -t rsa -f /root/.ssh/id_rsa \\\n  && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n\nRUN wget -O - https://mirror.reverse.net/pub/apache/hadoop/common/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz | tar -xzf - -C /usr/local/ \\\n  && cd /usr/local \\\n  && ln -s ./hadoop-$HADOOP_VERSION hadoop\n\nENV HADOOP_PREFIX /usr/local/hadoop\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/java/default\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh \\\n && sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh \\\n && mkdir $HADOOP_PREFIX/input \\\n && cp $HADOOP_PREFIX/etc/hadoop/*.xml $HADOOP_PREFIX/input\n\n# pseudo distributed\nADD core-site.xml.template $HADOOP_PREFIX/etc/hadoop/core-site.xml.template\nRUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/core-site.xml.template > /usr/local/hadoop/etc/hadoop/core-site.xml\nADD hdfs-site.xml $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml\n\nADD mapred-site.xml $HADOOP_PREFIX/etc/hadoop/mapred-site.xml\nADD yarn-site.xml $HADOOP_PREFIX/etc/hadoop/yarn-site.xml\n\nRUN $HADOOP_PREFIX/bin/hdfs namenode -format\n\n# fixing the libhadoop.so like a boss\nRUN rm  /usr/local/hadoop/lib/native/* \\\n   && curl -f -Ls https://dl.bintray.com/sequenceiq/sequenceiq-bin/hadoop-native-64-2.7.0.tar | tar -x -C /usr/local/hadoop/lib/native/\n\nADD ssh_config /root/.ssh/config\nRUN chmod 600 /root/.ssh/config \\\n  && chown root:root /root/.ssh/config\n\nADD bootstrap.sh /etc/bootstrap.sh\nRUN chown root:root /etc/bootstrap.sh \\\n  && chmod 700 /etc/bootstrap.sh\n\nENV BOOTSTRAP /etc/bootstrap.sh\n\n# workingaround docker.io build error\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh \\\n && chmod +x /usr/local/hadoop/etc/hadoop/*-env.sh \\\n && ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\n\n# fix the 254 error code\nRUN sed  -i \"/^[^#]*UsePAM/ s/.*/#&/\"  /etc/ssh/sshd_config \\\n && echo \"UsePAM no\" >> /etc/ssh/sshd_config \\\n && echo \"Port 2122\" >> /etc/ssh/sshd_config\n\n\nRUN service ssh start && $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh && $HADOOP_PREFIX/sbin/start-dfs.sh && $HADOOP_PREFIX/bin/hdfs dfs -mkdir -p /user/root\nRUN service ssh start && $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh && $HADOOP_PREFIX/sbin/start-dfs.sh && $HADOOP_PREFIX/bin/hdfs dfs -put $HADOOP_PREFIX/etc/hadoop/ input\n\nCMD [\"/etc/bootstrap.sh\", \"-d\"]\n\nEXPOSE 49707 50010 50020 50030 50070 50075 50090 8030 8031 8032 8033 8040 8042 8088 22\n"
}