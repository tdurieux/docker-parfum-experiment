{
  "startTime": 1674245965250,
  "endTime": 1674245965377,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 0,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "FROM tomcat:8.5\n\n# Used for building MDW-version-specific images\nARG version\n\n# Install JDK 8 plus library needed for embedded MariaDB\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y libncurses5 && rm -rf /var/lib/apt/lists/*;\n\nENV LD_LIBRARY_PATH ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}/usr/lib64:/usr/lib\n\n# Remove default Tomcat webapp \nRUN [\"rm\", \"-fr\", \"/usr/local/tomcat/webapps/ROOT\"]\n\n# Download correct version of MDW WAR and place it in Tomcat webapps directory\nRUN set -eux; \\\nwget -O mdw.war https://github.com/CenturyLinkCloud/mdw/releases/download/$version/mdw-$version.war; \\\nmv mdw.war /usr/local/tomcat/webapps/;\n\n# Provide context and server XML files from MDW's Git Repo (Part of Docker Daemon Context)\nCOPY ./tomcat/context.xml /usr/local/tomcat/conf\nCOPY ./tomcat/server.xml /usr/local/tomcat/conf\n\n# Create directory for runtime Bind Mount to provide config files from host to Docker container\nRUN mkdir /usr/local/tomcat/config\n\n# Create directory for Volume Mount to persist data created within container on host filesystem\nRUN mkdir /usr/local/tomcat/mdw\n\n# Create new user mdw inside container and change ownership from root to mdw / open permissions too for any user inside container\nRUN useradd -g root -ms /bin/bash mdw\nRUN chown -R mdw /usr/local/tomcat\nRUN chmod -R 777 /usr/local/tomcat\n\nVOLUME /usr/local/tomcat/mdw\n\n# Set working directory to mdw directory\nWORKDIR /usr/local/tomcat/mdw\n\n# Expose container ports to host (8080 is already exposed by Tomcat's image\nEXPOSE 3308\nEXPOSE 8009\n\n# Change user from root to mdw\nUSER mdw\n\n# Launch Tomcat\nCMD [\"catalina.sh\", \"run\"]\n"
}