{
  "startTime": 1674242261779,
  "endTime": 1674242262044,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "# Dockerfile for development\n# Based on the production Dockerfile, but with development additions.\n# Keep this file as close as possible to the production Dockerfile, so the environments match.\n\nFROM python:3.5\nMAINTAINER Paulus Schoutsen <Paulus@PaulusSchoutsen.nl>\n\n# Uncomment any of the following lines to disable the installation.\n#ENV INSTALL_TELLSTICK no\n#ENV INSTALL_OPENALPR no\n#ENV INSTALL_FFMPEG no\n#ENV INSTALL_OPENZWAVE no\n#ENV INSTALL_LIBCEC no\n#ENV INSTALL_PHANTOMJS no\n\nVOLUME /config\n\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\n# Copy build scripts\nCOPY virtualization/Docker/ virtualization/Docker/\nRUN virtualization/Docker/setup_docker_prereqs\n\n# Install hass component dependencies\nCOPY requirements_all.txt requirements_all.txt\nRUN pip3 install --no-cache-dir -r requirements_all.txt && \\\n    pip3 install --no-cache-dir mysqlclient psycopg2 uvloop\n\n# BEGIN: Development additions\n\n# Install nodejs\nRUN curl -f -sL https://deb.nodesource.com/setup_7.x | sudo -E bash - && \\\n    apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Install tox\nRUN pip3 install --no-cache-dir tox\n\n# Copy over everything required to run tox\nCOPY requirements_test.txt setup.cfg setup.py tox.ini ./\nCOPY homeassistant/const.py homeassistant/const.py\n\n# Prefetch dependencies for tox\nRUN tox -e py35 --notest\n\n# END: Development additions\n\n# Copy source\nCOPY . .\n\nCMD [ \"python\", \"-m\", \"homeassistant\", \"--config\", \"/config\" ]"
}