{
  "startTime": 1674239950853,
  "endTime": 1674239951543,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 13,
        "columnStart": 44,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 26,
        "columnStart": 26,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 62,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 111,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 62,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 13,
        "columnStart": 44,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 62,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 65,
        "columnEnd": 128
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER Stefan Houtzager <stefan.houtzager@gmail.com>\n\nENV DEBIAN_FRONTEND noninteractive\nENV REFRESHED_AT 27-06-2017\nENV TERM xterm\n\nWORKDIR /\n\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y \\\n    wget \\\n    curl \\\n    git \\\n    unzip && rm -rf /var/lib/apt/lists/*;\n\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# erlang install\nRUN echo \"deb http://packages.erlang-solutions.com/ubuntu trusty contrib\" >> /etc/apt/sources.list && \\\n    apt-key adv --fetch-keys http://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc && \\\n    apt-get -qq update && apt-get install --no-install-recommends -y \\\n    esl-erlang=1:20.3 \\\n    build-essential \\\n    wget && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Download and Install Specific Version of Elixir\nWORKDIR /elixir\nRUN wget -q https://github.com/elixir-lang/elixir/releases/download/v1.6.5/Precompiled.zip && \\\n    unzip Precompiled.zip && \\\n    rm -f Precompiled.zip && \\\n    ln -s /elixir/bin/elixirc /usr/local/bin/elixirc && \\\n    ln -s /elixir/bin/elixir /usr/local/bin/elixir && \\\n    ln -s /elixir/bin/mix /usr/local/bin/mix && \\\n    ln -s /elixir/bin/iex /usr/local/bin/iex\n\nWORKDIR /\n\n# install Node.js (>= 5.0.0) and NPM in order to satisfy brunch.io dependencies\nRUN curl -f -sL https://deb.nodesource.com/setup_9.x | bash - && apt-get -y --no-install-recommends install nodejs inotify-tools && rm -rf /var/lib/apt/lists/*;\n\n# setup our Ubuntu sources (ADD breaks caching)\nRUN echo \"deb http://archive.ubuntu.com/ubuntu trusty main restricted universe multiverse\\n\\\ndeb http://archive.ubuntu.com/ubuntu trusty-updates main restricted universe multiverse\\n\\\ndeb http://archive.ubuntu.com/ubuntu trusty-backports main restricted universe multiverse\\n\\\ndeb http://security.ubuntu.com/ubuntu trusty-security main restricted universe multiverse \\n\\\n\"> /etc/apt/sources.list\n\n# no Upstart or DBus\n# https://github.com/dotcloud/docker/issues/1724#issuecomment-26294856\nRUN apt-mark hold initscripts udev plymouth mountall\nRUN dpkg-divert --local --rename --add /sbin/initctl && ln -sf /bin/true /sbin/initctl\nRUN apt-get update \\\n    && apt-get upgrade -y\n\nRUN apt-get install --no-install-recommends -y \\\n    python-numpy \\\n    software-properties-common \\\n    libsecret-1-0 \\\n    gnome-keyring && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install -y --force-yes --no-install-recommends supervisor \\\n    openssh-server \\\n    pwgen \\\n    sudo \\\n    vim-tiny \\\n    net-tools \\\n    lxde \\\n    x11vnc \\\n    xvfb \\\n    gtk2-engines-murrine \\\n    ttf-ubuntu-font-family \\\n    libreoffice \\\n    firefox \\\n    xserver-xorg-video-dummy \\\n    && apt-get autoclean \\\n    && apt-get autoremove \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir /etc/startup.aux/\nRUN echo \"#Dummy\" > /etc/startup.aux/00.sh\nRUN chmod +x /etc/startup.aux/00.sh\nRUN mkdir -p /etc/supervisor/conf.d\nRUN rm /etc/supervisor/supervisord.conf\n\n# create an ubuntu user who cannot sudo\n# RUN useradd --create-home --shell /bin/bash --user-group ubuntu\nRUN useradd --create-home --shell /bin/bash --user-group --groups adm,sudo ubuntu\nRUN echo \"ubuntu:badpassword\" | chpasswd\nADD elixir-dev-anywhere-docker/startup.sh /\nADD elixir-dev-anywhere-docker/supervisord.conf.xorg /etc/supervisor/supervisord.conf\nADD elixir-dev-anywhere-docker/openbox-config /openbox-config\nRUN cp -r /openbox-config/.config ~ubuntu/\nRUN chown -R ubuntu ~ubuntu/.config ; chgrp -R ubuntu ~ubuntu/.config\nRUN rm -r /openbox-config\n\nENV HOME=/home/ubuntu\n\n# Install phoenix, local Elixir hex and rebar (in ENV HOME)\nRUN mix archive.install --force https://github.com/phoenixframework/archives/raw/master/phx_new.ez && \\\n    mix local.hex --force && \\\n    mix local.rebar --force && \\\n    mix hex.info\n\n# intellij\nRUN sed 's/main$/main universe/' -i /etc/apt/sources.list && \\\n    apt-get update -qq && \\\n    echo 'Installing OS dependencies' && \\\n    apt-get install --no-install-recommends -qq -y --fix-missing sudo software-properties-common libxext-dev libxrender-dev libxslt1.1 \\\n        libxtst-dev libgtk2.0-0 libcanberra-gtk-module && \\\n    echo 'Cleaning up' && \\\n    apt-get clean -qq -y && \\\n    apt-get autoclean -qq -y && \\\n    apt-get autoremove -qq -y && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm -rf /tmp/*\n\nRUN mkdir -p /home/ubuntu/.IdeaIC2017.3/config/options && \\\n    mkdir -p /home/ubuntu/.IdeaIC2017.3/config/plugins\n\nADD elixir-dev-anywhere-docker/jdk.table.xml /home/ubuntu/.IdeaIC2017.3/config/options/jdk.table.xml\nADD elixir-dev-anywhere-docker/jdk.table.xml /home/ubuntu/.jdk.table.xml\nADD elixir-dev-anywhere-docker/intellij/run /usr/local/bin/intellij\nADD elixir-dev-anywhere-docker/intellij-elixir.zip /home/ubuntu/.IdeaIC2017.3/config/plugins/intellij-elixir.zip\n\nRUN chmod +x /usr/local/bin/intellij\n\nRUN echo 'Downloading IntelliJ IDEA' && \\\n    wget https://download.jetbrains.com/idea/ideaIC-2017.3.5.tar.gz -O /tmp/intellij.tar.gz -q && \\\n    echo 'Installing IntelliJ IDEA' && \\\n    mkdir -p /opt/intellij && \\\n    tar -xf /tmp/intellij.tar.gz --strip-components=1 -C /opt/intellij && \\\n    rm /tmp/intellij.tar.gz\n\nRUN echo 'Installing Elixir plugin' && \\\n    cd /home/ubuntu/.IdeaIC2017.3/config/plugins/ && \\\n    unzip -q intellij-elixir.zip && \\\n    rm intellij-elixir.zip\n\n# noVNC\nADD elixir-dev-anywhere-docker/noVNC /noVNC/\n# store a password for the VNC service\nRUN mkdir /home/root\nRUN mkdir /home/root/.vnc\nRUN x11vnc -storepasswd badpassword /home/root/.vnc/passwd\nADD elixir-dev-anywhere-docker/xorg.conf /etc/X11/xorg.conf\n\n# pgadmin3 and nano\n# prerequisites to install a new version of pgadmin3 https://undebugable.wordpress.com/2016/01/11/pgadmin-3-warning-the-server-you-are-connecting-to-is-not-a-version-that-is-supported-by-this-release/\n\n# add the repository\nRUN sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list'\n# install their key\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\n\nRUN apt-get update && apt-get install -y \\\n    nano \\\n    postgresql-client \\\n    pgadmin3 --no-install-recommends && rm -rf /var/lib/apt/lists/*\n\nENTRYPOINT [\"/startup.sh\"]\n"
}