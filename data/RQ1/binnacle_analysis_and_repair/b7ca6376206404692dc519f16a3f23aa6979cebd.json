{
  "startTime": 1674235152583,
  "endTime": 1674235152657,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Credits: https://nodejs.org/en/docs/guides/nodejs-docker-webapp/\nFROM node:8-stretch\n\nRUN apt-get update && apt-get install --no-install-recommends -y libtool m4 automake libcap2-bin build-essential && rm -rf /var/lib/apt/lists/*;\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY package*.json ./\n\n# If you are building your code for production\nRUN npm install --only=production && npm cache clean --force;\nRUN npm install pm2 -g && npm cache clean --force;\n\nCOPY . .\n\nCOPY .homebase.yml /root/.homebase.yml\n\n# From Node's Best Practices\n# See: https://github.com/nodejs/docker-node/blob/master/docs/BestPractices.md#environment-variables\n# Note: Only this is applied from the practices.\nENV NODE_ENV production\n\n# Note: you still need to supply -p 80:80 -p 443:443 -p 3282:3282 -p 8089:8089\n# If you have Beaker opened, you may want to change the 3282 port. E.g., to run with -p 9999:3282\nEXPOSE 80 443 3282 8089\n\nCMD [ \"pm2-runtime\", \"npm\", \"--\", \"start\" ]\n"
}