{
  "startTime": 1674234077548,
  "endTime": 1674234077800,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 33,
        "columnStart": 5,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM malice/alpine\n\nLABEL maintainer \"https://github.com/blacktop\"\n\nLABEL malice.plugin.repository = \"https://github.com/malice-plugins/yara.git\"\nLABEL malice.plugin.category=\"av\"\nLABEL malice.plugin.mime=\"*\"\nLABEL malice.plugin.docker.engine=\"*\"\n\nENV YARA 3.9.0\n\n# Install Yara\nRUN apk --update add --no-cache openssl file bison jansson ca-certificates\nRUN apk --update add --no-cache -t .build-deps \\\n  openssl-dev \\\n  jansson-dev \\\n  build-base \\\n  libc-dev \\\n  file-dev \\\n  automake \\\n  autoconf \\\n  libtool \\\n  flex \\\n  git \\\n  gcc \\\n  && echo \"===> Install Yara from source...\" \\\n  && cd /tmp \\\n  && git clone --recursive --branch v${YARA} https://github.com/VirusTotal/yara.git \\\n  && cd /tmp/yara \\\n  && ./bootstrap.sh \\\n  && sync \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-magic \\\n  --enable-cuckoo \\\n  --enable-dotnet \\\n  && make \\\n  && make install \\\n  && rm -rf /tmp/* \\\n  && apk del --purge .build-deps\n\n# Install malice plugin\nCOPY . /go/src/github.com/maliceio/malice-yara\nRUN apk --update add --no-cache -t .build-deps \\\n  openssl-dev \\\n  jansson-dev \\\n  build-base \\\n  mercurial \\\n  musl-dev \\\n  openssl \\\n  bash \\\n  wget \\\n  git \\\n  gcc \\\n  dep \\\n  go \\\n  && echo \"===> Building scan Go binary...\" \\\n  && echo \" * adding yara rules\" \\\n  && cd /tmp \\\n  && git clone https://github.com/Neo23x0/signature-base.git \\\n  && mkdir /rules \\\n  && mv signature-base/yara /rules \\\n  && mv signature-base/vendor/yara/airbnb_binaryalert.yar /rules \\\n  && echo \" * remove broken rules\" \\\n  && rm /rules/yara/general_cloaking.yar \\\n  && rm /rules/yara/generic_anomalies.yar \\\n  && rm /rules/yara/thor_inverse_matches.yar \\\n  && rm /rules/yara/yara_mixed_ext_vars.yar \\\n  && echo \" * building scan binary\" \\\n  && cd /go/src/github.com/maliceio/malice-yara \\\n  && export GOPATH=/go \\\n  && export CGO_CFLAGS=\"-I/usr/local/include\" \\\n  && export CGO_LDFLAGS=\"-L/usr/local/lib -lyara\" \\\n  && export PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\" \\\n  && go version \\\n  && dep ensure \\\n  && CGO_ENABLED=1 go build -ldflags \"-s -w -X main.Version=$(cat VERSION) -X main.BuildTime=$(date -u +%Y%m%d)\" -o /bin/scan \\\n  && rm -rf /go /usr/local/go /usr/lib/go /tmp/* \\\n  && apk del --purge .build-deps\n\nWORKDIR /malware\n\nENTRYPOINT [\"su-exec\",\"malice\",\"scan\"]\nCMD [\"--help\"]\n"
}