{
  "startTime": 1674241756127,
  "endTime": 1674241756263,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nENV TZ=America/Chicago\nRUN    ln --symbolic --no-dereference --force /usr/share/zoneinfo/$TZ /etc/localtime \\\n    && echo $TZ > /etc/timezone\n\nRUN apt update && apt upgrade --yes\n\nRUN apt install --no-install-recommends --yes \\\n        bison build-essential clang++-6.0 clang-6.0 cmake coreutils curl diffutils \\\n        flex git libboost-test-dev libffi-dev libgmp-dev libjemalloc-dev libmpfr-dev \\\n        libstdc++6 libxml2 libyaml-cpp-dev llvm-6.0 m4 maven opam openjdk-8-jdk \\\n        pkg-config python3 python-jinja2 python-pygments unifdef zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt install --no-install-recommends --yes locales && rm -rf /var/lib/apt/lists/*;\n\nRUN locale-gen --no-purge en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nRUN update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java\n\nRUN cpan install App::FatPacker Getopt::Declare String::Escape String::ShellQuote UUID::Tiny\n\nARG USER_ID=1000\nARG GROUP_ID=1000\nRUN    groupadd -g $GROUP_ID user                     \\\n    && useradd -m -u $USER_ID -s /bin/sh -g user user\n\nUSER $USER_ID:$GROUP_ID\n\n\n###################\n# Configure opam. #\n###################\n\nARG K_OPAM_DIR=/home/user/opam-config\n\n# Copy the necessary things.\nCOPY --chown=user:user \\\n  .build/k/k-distribution/src/main/scripts/bin/k-configure-opam-dev \\\n  ${K_OPAM_DIR}/bin/k-configure-opam-dev\nCOPY --chown=user:user \\\n  .build/k/k-distribution/src/main/scripts/bin/k-configure-opam-common \\\n  ${K_OPAM_DIR}/bin/k-configure-opam-common\nCOPY --chown=user:user \\\n  .build/k/k-distribution/src/main/scripts/lib/opam \\\n  ${K_OPAM_DIR}/lib/opam\n\n# Run the scripts.\nRUN ${K_OPAM_DIR}/bin/k-configure-opam-dev\n\n\n############\n# Build K. #\n############\n\nARG K_BUILD_DIR=/home/user/k-build\n\nCOPY --chown=user:user ./.build/k/ ${K_BUILD_DIR}/\n\nRUN cd ${K_BUILD_DIR} \\\n  && mvn package -q -U \\\n      -DskipTests -DskipKTest \\\n      -Dhaskell.backend.skip -Dllvm.backend.skip \\\n      -Dcheckstyle.skip\n\nENV K_BIN=\"${K_BUILD_DIR}/k-distribution/target/release/k/bin\"\n"
}