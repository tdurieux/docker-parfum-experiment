{
  "startTime": 1674234205872,
  "endTime": 1674234206547,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 9,
        "columnEnd": 120
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 9,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 33,
        "columnStart": 9,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 33,
        "columnStart": 9,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 9,
        "columnEnd": 116
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2012-2018 Red Hat, Inc.\n# This program and the accompanying materials are made\n# available under the terms of the Eclipse Public License 2.0\n# which is available at https://www.eclipse.org/legal/epl-2.0/\n#\n# SPDX-License-Identifier: EPL-2.0\n#\n# Contributors:\n#   Red Hat, Inc. - initial API and implementation\n\nFROM eclipse/stack-base:ubuntu\n\nENV DEBIAN_FRONTEND noninteractive\nENV CHE_MYSQL_PASSWORD=che\nENV CHE_MYSQL_DB=che_db\nENV CHE_MYSQL_USER=che\nENV PHP_LS_VERSION=5.4.1\n# install php with a set of most widely used extensions\nRUN sudo apt-get update && \\\n    sudo apt-get install --no-install-recommends -y \\\n    apache2 \\\n    php \\\n    php-mcrypt \\\n    php-curl \\\n    php-mysql \\\n    php-gd \\\n    libapache2-mod-php \\\n    php-cli \\\n    php-json \\\n    php-cgi \\\n    php-sqlite3 \\\n    php-dom \\\n    php-mbstring \\\n    php-xml && rm -rf /var/lib/apt/lists/*;\n\nRUN sudo sed -i 's/\\/var\\/www\\/html/\\/projects/g'  /etc/apache2/sites-available/000-default.conf && \\\n    sudo sed -i 's/\\/var\\/www/\\/projects/g'  /etc/apache2/apache2.conf && \\\n    sudo sed -i 's/None/All/g' /etc/apache2/sites-available/000-default.conf && \\\n    echo \"ServerName localhost\" | sudo tee -a /etc/apache2/apache2.conf && \\\n    sudo a2enmod rewrite\n\n# Install the Zend Debugger php module\nRUN sudo wget https://repos.zend.com/zend-server/9.0.2/deb_apache2.4/pool/zend-server-php-7.0-common_9.0.2+b174_amd64.deb && \\\n    dpkg-deb --fsys-tarfile zend-server-php-7.0-common_9.0.2+b174_amd64.deb | sudo tar -xf - --strip-components=7 ./usr/local/zend/lib/debugger/php-7.0.x/ZendDebugger.so && \\\n    sudo rm zend-server-php-7.0-common_9.0.2+b174_amd64.deb && \\\n    sudo mv ZendDebugger.so /usr/lib/php/20151012 && \\\n    sudo sh -c 'echo \"; configuration for php ZendDebugger module\\n; priority=90\\nzend_extension=ZendDebugger.so\" > /etc/php/7.0/mods-available/zenddebugger.ini' && \\\n    sudo ln -s ../../mods-available/zenddebugger.ini /etc/php/7.0/cli/conf.d/90-zenddebugger.ini && \\\n    sudo ln -s ../../mods-available/zenddebugger.ini /etc/php/7.0/apache2/conf.d/90-zenddebugger.ini && \\\n    sudo sed -i 's/;opcache.enable=0/opcache.enable=0/g' /etc/php/7.0/apache2/php.ini && \\\n    sudo setcap 'cap_net_bind_service=+ep' /usr/sbin/apache2 && \\\n    sudo chmod -R 777 /var/run/apache2 /var/lock/apache2 /var/log/apache2\n\nRUN curl -f -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer && \\\n    sudo chown -R user:users ~/.composer && \\\n    composer global require bamarni/symfony-console-autocomplete && \\\n    ~/.composer/vendor/bamarni/symfony-console-autocomplete/symfony-autocomplete --shell bash composer | sudo tee /etc/bash_completion.d/composer && \\\n    sudo wget -qO /usr/local/bin/phpunit https://phar.phpunit.de/phpunit.phar && sudo chmod +x /usr/local/bin/phpunit && \\\n    echo -e \"MySQL password: $CHE_MYSQL_PASSWORD\" >> /home/user/.mysqlrc && \\\n    echo -e \"MySQL user    : $CHE_MYSQL_USER\" >> /home/user/.mysqlrc && \\\n    echo -e \"MySQL Database: $CHE_MYSQL_DB\" >> /home/user/.mysqlrc && \\\n    sudo -E bash -c \"apt-get -y --no-install-recommends install mysql-server\" && \\\n    sudo apt-get clean && \\\n    sudo apt-get -y autoremove && \\\n    sudo apt-get -y clean && \\\n    sudo rm -rf /var/lib/apt/lists/* && \\\n    sudo sed -i.bak 's/127.0.0.1/0.0.0.0/g' /etc/mysql/my.cnf && \\\n    sudo service mysql start && sudo mysql -uroot -e \"GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost'; FLUSH PRIVILEGES;\" && \\\n    sudo service mysql restart && \\\n    sudo service mysql restart && sudo mysql -uroot -e \"CREATE USER '$CHE_MYSQL_USER'@'%' IDENTIFIED BY '\"$CHE_MYSQL_PASSWORD\"'\" && \\\n    sudo mysql -uroot -e \"GRANT ALL PRIVILEGES ON *.* TO '$CHE_MYSQL_USER'@'%' IDENTIFIED BY '\"$CHE_MYSQL_PASSWORD\"'; FLUSH PRIVILEGES;\" && \\\n    sudo mysql -uroot -e \"CREATE DATABASE $CHE_MYSQL_DB;\"\n\n# Install NodeJS to improve startup time when the JSON language server is enabled\nRUN curl -f -sL https://deb.nodesource.com/setup_6.x | sudo bash - && \\\n    sudo apt-get update && \\\n    sudo apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# install language server\n\nRUN mkdir -p ${HOME}/che/ls-php/php-language-server && \\\n    cd ${HOME}/che/ls-php/php-language-server && \\\n    composer require jetbrains/phpstorm-stubs:dev-master && \\\n    composer require felixfbecker/language-server:${PHP_LS_VERSION} && \\\n    composer run-script --working-dir=vendor/felixfbecker/language-server parse-stubs && \\\n    mv  vendor/* . && \\\n    rm -rf vendor && \\\n    sudo chgrp -R 0 ${HOME}/che && \\\n    sudo chmod -R g+rwX ${HOME}/che\nENV GAE_VERSION=\"1.9.70\"\nRUN sudo apt-get update && \\\n    sudo apt-get install --no-install-recommends -y -q build-essential python2.7 python2.7-dev python-pip php-bcmath && \\\n    sudo pip install -U pip && \\\n    sudo pip install --no-cache-dir virtualenv && rm -rf /var/lib/apt/lists/*;\nRUN cd /home/user/ && wget -q https://storage.googleapis.com/appengine-sdks/featured/google_appengine_${GAE_VERSION}.zip && \\\n    unzip -q google_appengine_${GAE_VERSION}.zip && \\\n    rm google_appengine_${GAE_VERSION}.zip && \\\n    for f in \"/home/user/google_appengine\"; do \\\n      sudo chgrp -R 0 ${f} && \\\n      sudo chmod -R g+rwX ${f}; \\\n    done\nEXPOSE 8080 8000\n\n# label is used in Servers tab to display mapped port for Apache process on 80 port in the container\nLABEL che:server:80:ref=apache2 che:server:80:protocol=http\n\nEXPOSE 80 3306\n"
}