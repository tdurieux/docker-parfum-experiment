{
  "startTime": 1674246712753,
  "endTime": 1674246712796,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:latest\n\nMAINTAINER Brent Salisbury <brent.salisbury@gmail.com>\n\n# get, install and clean binaries\nRUN apt-get update -q \\\n    && apt-get install --no-install-recommends -y \\\n    wget \\\n    netcat \\\n    iperf3 \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# IP address of the graphite-api for time series\n# data collection of the iperf bandwidth results.\nENV DB_IP MANDATORY_DB_FIELD_MISSING\n# plain text port used for feeding data to Carbon/Graphite\nENV DB_PORT 2003\n# The ip is retrieved from the command 'docker-machine ip <machine name>'\n# That gets the public address of the VM that has a container inside of\n# it running iperf and bound to port 5201 the default port that is exposed.\nENV BW_AGENT_IP MANDATORY_IP_FIELD_MISSING\n# iperf flags - in this case the are geared to use a small amount of bandwidth\n#  Overiding these values (ENV) will give a bit more accurate reading of bandwidth from\n# client <-> server. (-t)time in seconds to transmit (10 seconds is the default of iperf)\nENV IPERF_SAMPLE_COUNT 4\n# Default driver is boot2docker. Making it obvious if the ENV is not set\n# as it should be by the passed values from 'docker run'\n#ENV MACHINE_TYPE UNDEFINED\n\n# Expose the default iperf3 port binding\nEXPOSE 5201\n\n# Set the container dir\nWORKDIR /usr/local/src\n\n# Copy the shell script to the container and run it as the entrypont\nCOPY entry.sh ./\nRUN chmod +x ./entry.sh\nENTRYPOINT [\"./entry.sh\"]\n"
}