{
  "startTime": 1674249171142,
  "endTime": 1674249171382,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn5-devel\nMAINTAINER \"Álvaro Barbero Jiménez, https://github.com/albarji\"\n\n# Install system dependencies\nRUN set -ex && \\\n\tapt-get update && apt-get install --no-install-recommends --no-install-suggests -y \\\n\tca-certificates \\\n\tsudo \\\n\tlibprotobuf-dev \\\n\tprotobuf-compiler \\\n\twget \\\n\tgit \\\n\t&& apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install torch\nRUN git clone https://github.com/torch/distro.git /root/torch --recursive && cd /root/torch && \\\n    bash install-deps\nRUN cd /root/torch && ./install.sh\nRUN ln -s /root/torch/install/bin/* /usr/local/bin\n\n# Install additional necessary torch dependencies\nRUN luarocks install loadcaffe && \\\n    luarocks install autograd\n\n# Install Python miniconda3 + requirements\nENV MINICONDA_HOME=\"/opt/miniconda\"\nENV PATH=\"${MINICONDA_HOME}/bin:${PATH}\"\nRUN curl -f -o Miniconda3-latest-Linux-x86_64.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n  && chmod +x Miniconda3-latest-Linux-x86_64.sh \\\n  && ./Miniconda3-latest-Linux-x86_64.sh -b -p \"${MINICONDA_HOME}\" \\\n&& rm Miniconda3-latest-Linux-x86_64.sh\nCOPY conda.txt conda.txt\nRUN conda install -y --file=conda.txt && \\\n    conda clean -y -i -l -p -t && \\\n    rm -f conda.txt\nCOPY pip.txt pip.txt\nRUN pip install --no-cache-dir -r pip.txt && \\\n    rm -f pip.txt\n\n# Clone neural-style app\nWORKDIR /app\nRUN set -ex && \\\n\twget --no-check-certificate https://github.com/jcjohnson/neural-style/archive/master.tar.gz && \\\n\ttar -xvzf master.tar.gz && \\\n    mv neural-style-master neural-style && \\\n\trm master.tar.gz\n\n# Download precomputed VGG network weights\nWORKDIR /app/neural-style\nRUN bash models/download_models.sh\n\n# Add neural-style to path\nENV PATH /app/neural-style:$PATH\n\n# Clone style-swap app\nWORKDIR /app\nRUN set -ex && \\\n\twget --no-check-certificate https://github.com/rtqichen/style-swap/archive/master.tar.gz && \\\n\ttar -xvzf master.tar.gz && \\\n    mv style-swap-master style-swap && \\\n\trm master.tar.gz\n# Link precomputed VGG network weights\nRUN rm -rf /app/style-swap/models\nRUN ln -s /app/neural-style/models /app/style-swap/models\n# Add precomputed inverse network model\nADD models/dec-tconv-sigmoid.t7 /app/style-swap/models/dec-tconv-sigmoid.t7\n\n# Copy wrapper scripts and config files\nCOPY [\"entrypoint.py\" ,\"/app/entrypoint/\"]\nCOPY [\"/neuralstyle/*.py\", \"/app/entrypoint/neuralstyle/\"]\nCOPY [\"gpuconfig.json\", \"/app/entrypoint/\"]\n\nWORKDIR /app/entrypoint\nENTRYPOINT [\"python\", \"/app/entrypoint/entrypoint.py\"]\n\n"
}