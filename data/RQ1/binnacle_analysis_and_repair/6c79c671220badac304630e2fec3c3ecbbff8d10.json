{
  "startTime": 1674234308731,
  "endTime": 1674234308903,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\nENV PYTHONIOENCODING utf-8\nENV DJANGO_SECRET_KEY PlsChgMe\nENV DJANGO_LOG_LEVEL info\nENV POSTGRES_DB productdb\nENV POSTGRES_USER postgres\nENV POSTGRES_PASSWORD plschgme\nENV PDB_DATABASE_HOST database\nENV PDB_DATABASE_PORT 5432\nENV PDB_REDIS_HOST redis\nENV PDB_REDIS_PORT 6379\n\n# build variables\nENV HTTPS_SELF_SIGNED_CERT_COUNTRY \"Germany\"\nENV HTTPS_SELF_SIGNED_CERT_FQDN \"productdb\"\n\nRUN echo \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        curl \\\n        build-essential \\\n        python3.5 \\\n        python3-pip \\\n        python3-dev \\\n        python-psycopg2 \\\n        libpq-dev \\\n        libsasl2-dev \\\n        libldap2-dev \\\n        libssl-dev \\\n        git \\\n    && curl -f -sL https://deb.nodesource.com/setup_8.x | bash - \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && rm -rf /var/lib/apt/lists/*Â  \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nADD . /var/www/productdb/source\nRUN echo \\\n    && pip3 install --no-cache-dir -r /var/www/productdb/source/requirements.txt \\\n    && mkdir /var/www/productdb/logs\n\nWORKDIR /var/www/productdb/source\n\n# install frontend deprendencies as part of the image (for later offline use)\nRUN npm install \\\n    && /var/www/productdb/source/node_modules/.bin/grunt copy \\\n    && /var/www/productdb/source/node_modules/.bin/grunt clean && npm cache clean --force;\n\n# copy static directory to container directory\nRUN mkdir /var/www/productdb-static \\\n    && mkdir /var/www/productdb-static/lib \\\n    && cp -Rf /var/www/productdb/source/static/lib /var/www/productdb-static\n\n## Clean up\nRUN rm -rf /var/www/productdb/source/node_modules \\\n    && rm -rf /var/www/productdb/source/static/lib \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN chmod +x ./deploy/docker/build_deps/build_dependencies.sh\nCMD ./deploy/docker/build_deps/build_dependencies.sh\n"
}