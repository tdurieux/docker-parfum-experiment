{
  "startTime": 1674252666441,
  "endTime": 1674252666809,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedDockerfile": "#\n# Dockerfile for tensorflow object dection API\n#\n\n# Use tensorflow image as parent image\nFROM tensorflow/tensorflow:1.6.0-gpu\n\nLABEL AUTHOR aggresss\nENV DEBIAN_FRONTEND noninteractive\n\nEXPOSE 8888\nEXPOSE 6006\nVOLUME /root/volume\nUSER root\n\n# Modify apt-get to aliyun mirror\nRUN sed -i 's/archive.ubuntu/mirrors.aliyun/g' /etc/apt/sources.list\nRUN apt-get update\n\n\n# Modify timezone to GTM+8\nENV TZ=Asia/Shanghai\nRUN apt-get -y --no-install-recommends install tzdata && rm -rf /var/lib/apt/lists/*;\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n# Modify locale\nRUN apt-get -y --no-install-recommends install locales && rm -rf /var/lib/apt/lists/*;\nRUN locale-gen en_US.UTF-8\nRUN echo \"LANG=\\\"en_US.UTF-8\\\"\" > /etc/default/locale && \\\n    echo \"LANGUAGE=\\\"en_US:en\\\"\" >> /etc/default/locale && \\\n    echo \"LC_ALL=\\\"en_US.UTF-8\\\"\" >> /etc/default/locale\n\n# Modify pip mirror\nRUN mkdir -p /root/.pip\nRUN echo \"[global]\" > /root/.pip/pip.conf && \\\n    echo \"index-url=http://mirrors.aliyun.com/pypi/simple/\" >> /root/.pip/pip.conf && \\\n    echo \"[install]\" >> /root/.pip/pip.conf && \\\n    echo \"trusted-host=mirrors.aliyun.com\" >> /root/.pip/pip.conf\n\n# Modify Jupter run arguments\nRUN mkdir -p /root/.jupyter\nRUN echo \"# Jupyter config file\" > /root/.jupyter/jupyter_config.py && \\\n    echo \"c.NotebookApp.ip = '*'\" >> /root/.jupyter/jupyter_config.py && \\\n    echo \"c.NotebookApp.notebook_dir = u'/GPUDemo/object-detection/'\" >> /root/.jupyter/jupyter_config.py && \\\n    echo \"c.NotebookApp.open_browser = False\" >> /root/.jupyter/jupyter_config.py && \\\n    echo \"c.NotebookApp.allow_root = True\">> /root/.jupyter/jupyter_config.py && \\\n    echo \"c.NotebookApp.port = 8888\">> /root/.jupyter/jupyter_config.py && \\\n    echo \"# default password: 12345678\">> /root/.jupyter/jupyter_config.py && \\\n    echo \"c.NotebookApp.password = u'sha1:d501736a80f9:2bf882737f5ded39b8d1803b0c3ca385325fbfa8'\" >> \\\n    /root/.jupyter/jupyter_config.py\n\n# Install necessary library\nRUN apt-get -y --no-install-recommends install apt-utils python python-dev python-pip \\\n    lib32z1 libglib2.0-dev libsm6 libxrender1 \\\n    libxext6 libice6 libxt6 libfontconfig1 libcups2 \\\n    protobuf-compiler python-tk git vim \\\n    && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install necessary python-library\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip  --no-cache-dir install opencv-python Cython lxml flask\n\n# Clone the repository\nRUN git clone https://github.com/aggresss/GPUDemo.git /GPUDemo\nWORKDIR /GPUDemo/object-detection/\nRUN protoc object_detection/protos/*.proto --python_out=.\nENV PYTHONPATH /usr/bin/python:/GPUDemo/object-detection:/GPUDemo/object-detection/slim\n\nWORKDIR /\nRUN git clone https://github.com/cocodataset/cocoapi.git\nWORKDIR /cocoapi/PythonAPI\nRUN make\nRUN cp -r pycocotools /GPUDemo/object-detection/\n\n# Make startup run file\nRUN echo '#!/bin/sh' > /run.sh && \\\n    echo \"nohup jupyter notebook\" >> /run.sh\nRUN chmod +x /run.sh\nWORKDIR /GPUDemo/object-detection/\nCMD /run.sh\n\n\n"
}