{
  "startTime": 1674234942985,
  "endTime": 1674234943120,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6\n\nENV PYTHONUNBUFFERED 1\n\n# add cron\nRUN apt-get update && apt-get install --no-install-recommends -y cron && rm -rf /var/lib/apt/lists/*;\nCOPY docker/crontab /etc/cron.d/mercure\n\n# Clean apt\nRUN apt-get autoremove -y\nRUN apt-get clean && apt-get autoclean\nRUN rm -rf /tmp/* /var/tmp/*\nRUN rm -rf /var/lib/apt/lists/*\nRUN rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin\n\n# test\nRUN /usr/local/bin/python3 -V  # used in crontab\n\n# Prepare scripts\nCOPY docker/init-with-root.sh /root/init-with-root.sh\nCOPY docker/start-without-root.sh /code/start-without-root.sh\nRUN chmod +x /root/init-with-root.sh\nRUN chmod +x /code/start-without-root.sh\n\n# Install Django\nCOPY requirements.txt /code/requirements.txt\nRUN pip install --no-cache-dir -r /code/requirements.txt\nRUN pip install --no-cache-dir gunicorn\nCOPY . /code/\nRUN rm -r /code/docker\nRUN chmod +x /code/scripts/cron.py\nWORKDIR /code/\n\n# Limit non root user user\nRUN groupadd -r mercure --gid=999\nRUN useradd -r -g mercure --uid=999 mercure\nRUN chown -R mercure:mercure /code\n\n# Prepare django\nUSER mercure\nRUN python manage.py collectstatic --noinput\n\n# Start django in limited right\nEXPOSE 8000\nUSER root\nCMD cron && /root/init-with-root.sh && su mercure -c '/code/start-without-root.sh'\n"
}