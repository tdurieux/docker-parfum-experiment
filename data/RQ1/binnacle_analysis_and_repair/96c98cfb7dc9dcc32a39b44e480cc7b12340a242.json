{
  "startTime": 1674242149219,
  "endTime": 1674242149400,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 34,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# PHP Docker image for Yii 2.0 Framework runtime\n# ==============================================\n\nFROM php:7.1.9-fpm-alpine\n\n# Install system packages & PHP extensions required for Yii 2.0 Framework\n# virtual pkg names and ENV $PHPIZE_DEPS are definied in base image\n# C* and LDFlAGS are also definied in base image, so we use these for our custom pecl builds\n# we install (newer) imagick from edge repo due to SEGFAULT bugs\n# hopefully this won't break other things...\nRUN apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS && \\\n    apk add --no-cache --virtual .imagemagick-edge \\\n            --repository http://dl-3.alpinelinux.org/alpine/v3.6/main/ \\\n            --allow-untrusted \\\n        imagemagick \\\n        imagemagick-dev && \\\n    apk add --no-cache --update --virtual .pecl-build-deps \\\n        icu-dev \\\n        curl-dev \\\n        freetype-dev \\\n        pcre-dev \\\n        postgresql-dev \\\n        libtool \\\n        libmcrypt-dev \\\n        libjpeg-turbo-dev \\\n        libpng-dev \\\n        libxml2-dev && \\\n    apk add --no-cache --virtual .build-dependencies $PHPIZE_DEPS \\\n        zlib-dev \\\n        cyrus-sasl-dev \\\n        g++ \\\n        libtool \\\n        make \\\n        pcre-dev && \\\n    apk add --no-cache \\\n        git \\\n        curl \\\n        bash \\\n        bash-completion \\\n        icu \\\n        pcre \\\n        freetype \\\n        libmcrypt \\\n        libintl \\\n        libjpeg-turbo \\\n        imagemagick \\\n        libpng \\\n        libltdl \\\n        libxml2 \\\n        mysql-client \\\n        nodejs \\\n        postgresql-client \\\n        libmemcached-dev && \\\n    export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" && \\\n    pecl install \\\n        apcu \\\n        imagick-3.4.3 \\\n        xdebug \\\n        memcached && \\\n    docker-php-ext-enable imagick && \\\n    docker-php-ext-enable apcu && \\\n    docker-php-ext-enable memcached && \\\n    docker-php-ext-configure gd \\\n        --with-gd \\\n        --with-freetype-dir=/usr/include/ \\\n        --with-png-dir=/usr/include/ \\\n        --with-jpeg-dir=/usr/include/ && \\\n    docker-php-ext-configure bcmath && \\\n    docker-php-ext-install \\\n        soap \\\n        mcrypt \\\n        zip \\\n        curl \\\n        bcmath \\\n        exif \\\n        gd \\\n        iconv \\\n        intl \\\n        mbstring \\\n        opcache \\\n        pdo_mysql \\\n        pdo_pgsql && \\\n    apk del \\\n        .pecl-build-deps .phpize-deps\n\n\n# Configure version constraints\nENV VERSION_COMPOSER_ASSET_PLUGIN=^1.4.2 \\\n    VERSION_PRESTISSIMO_PLUGIN=^0.3.7 \\\n    PATH=/app:/app/vendor/bin:/root/.composer/vendor/bin:$PATH \\\n    TERM=linux \\\n    COMPOSER_ALLOW_SUPERUSER=1\n\n# Add configuration files\nCOPY image-files/ /\n\n# Add GITHUB_API_TOKEN support for composer\n\nRUN chmod 700 \\\n        /usr/local/bin/docker-entrypoint.sh \\\n        /usr/local/bin/composer\n\n# Install composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- \\\n        --filename=composer.phar \\\n        --install-dir=/usr/local/bin && \\\n    composer global require --optimize-autoloader \\\n        \"fxp/composer-asset-plugin:${VERSION_COMPOSER_ASSET_PLUGIN}\" \\\n        \"hirak/prestissimo:${VERSION_PRESTISSIMO_PLUGIN}\" && \\\n    composer global dumpautoload --optimize && \\\n    composer clear-cache\n\n# Install nginx\nRUN apk --update --no-cache add nginx\n\nWORKDIR /srv\n\nCOPY composer.* /srv/\nRUN /usr/local/bin/composer install --prefer-dist\nENV PATH /srv/vendor/bin:${PATH}\n\nCOPY . /srv/\nRUN chown -R www-data:www-data /srv/ \\\n    && chmod 777 -R /srv/runtime\n\nEXPOSE 80\nCMD [\"docker-entrypoint.sh\"]\n"
}