{
  "startTime": 1674241838466,
  "endTime": 1674241838617,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update --fix-missing -qq && \\\n    apt-get install --no-install-recommends -y \\\n     wget && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main\" \\\n        | tee /etc/apt/sources.list.d/pgdg.list\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt trusty-pgdg main\" \\\n        | tee -a /etc/apt/sources.list.d/postgres.list\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc \\\n        | apt-key add -\n\nRUN apt-get update --fix-missing -qq && \\\n    apt-get install --no-install-recommends -y \\\n     ruby2.3 \\\n     libruby2.3 \\\n     ruby2.3-dev \\\n     libmagickwand-dev \\\n     libxml2-dev \\\n     libxslt1-dev \\\n     build-essential \\\n     git-core \\\n     automake \\\n     autoconf \\\n     libtool \\\n     libsasl2-dev \\\n     imagemagick \\\n     postgresql-client-common \\\n     postgresql-client \\\n     libpq-dev \\\n     curl && rm -rf /var/lib/apt/lists/*;\n\n\nENV APP_PATH /usr/local/src\nRUN mkdir -p $APP_PATH\nENV CONFIG_PATH /usr/local/config\nRUN mkdir -p $CONFIG_PATH\n\nWORKDIR $APP_PATH\n\n# Make bundle installs go much faster.\nRUN echo \"gem: --no-rdoc --no-ri\" > ~/.gemrc\n\n# Copy the Gemfile first so we don't need to rerun this step when\n# anything in the source tree is touched.\n#\n# We're going to mount the rest of the source tree as a volume,\n# to make it easy to tinker with.\nCOPY ./src/Gemfile ./Gemfile\nCOPY ./src/Gemfile.lock ./Gemfile.lock\n\nRUN gem install bundle\nRUN bundle install\n\nCOPY ./config $CONFIG_PATH\nCOPY ./src $APP_PATH\n\nRUN rsync -avzIq $CONFIG_PATH $APP_PATH\n\n\n# This isn't included by default and the Rails server won't start\n# without it.\n#\n# This might be a good upstream PR.\nRUN echo \"gem 'tzinfo-data'\" >> Gemfile\nRUN bundle install\n\nWORKDIR $APP_PATH\n\nEXPOSE 3000\n\nENV SCRIPT_PATH /usr/local/scripts\nADD scripts/ $SCRIPT_PATH\nRUN chmod +x $SCRIPT_PATH/*.sh\n\nENTRYPOINT $SCRIPT_PATH/docker-entrypoint.sh\n\n"
}