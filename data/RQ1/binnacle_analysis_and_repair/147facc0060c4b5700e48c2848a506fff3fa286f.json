{
  "startTime": 1674236505489,
  "endTime": 1674236505610,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 207
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 207
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 207
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# DOCKER-VERSION 0.4.0\n\nfrom\tubuntu:12.04\nrun\techo 'deb http://us.archive.ubuntu.com/ubuntu/ precise universe' >> /etc/apt/sources.list\nrun apt-get -y update && apt-get -y --no-install-recommends install python-ldap python-cairo python-django python-twisted python-django-tagging python-simplejson python-memcache python-pysqlite2 python-support python-pip gunicorn supervisor nginx-light && rm -rf /var/lib/apt/lists/*; # Install required packages\n\nrun pip install --no-cache-dir whisper supervisor-stdout\nrun pip install --no-cache-dir --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/lib\" carbon --install-option=\"--install-lib=/var/lib/graphite/lib\" carbon\nrun pip install --no-cache-dir --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/webapp\" graphite-web --install-option=\"--install-lib=/var/lib/graphite/webapp\" graphite-web\n\n# Add system service config\nadd\t./nginx.conf /etc/nginx/nginx.conf\nadd\t./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# Add configuration for the webapp\nadd\t./initial_data.json /var/lib/graphite/webapp/graphite/initial_data.json\nrun echo break\nadd\t./local_settings.py /var/lib/graphite/webapp/graphite/local_settings.py\n\n# Add config template for carbon. We'll be copying this to a volume.\nadd\t./carbon.conf /var/lib/graphite/conf/carbon.conf\nadd\t./storage-schemas.conf /var/lib/graphite/conf/storage-schemas.conf\nrun\tmkdir -p /var/lib/graphite/storage/whisper\nrun\ttouch /var/lib/graphite/storage/graphite.db /var/lib/graphite/storage/index\n\n# Create locations for pid/log files\nrun     mkdir -p /var/run/graphite && chown www-data /var/run/graphite\nrun     mkdir -p /var/log/carbon && chown www-data /var/log/carbon\n\n# initialize the webapp\nrun\tcd /var/lib/graphite/webapp/graphite && python manage.py syncdb --noinput\n\n# Nginx\nexpose\t80\n# Carbon line receiver port\nexpose\t2003\n# Carbon pickle receiver port\nexpose\t2004\n# Carbon cache query port\nexpose\t7002\n\n# carbon in debug mode is expected to log a lot, move out of container\nvolume /var/log/supervisor/\n\n# Our start wrapper\nadd docker_tools.sh /docker_tools.sh\nadd start.sh        /start\n\ncmd\t[\"/start\", \"/usr/bin/supervisord\"\"]\n\n# vim:ts=8:noet:\n"
}