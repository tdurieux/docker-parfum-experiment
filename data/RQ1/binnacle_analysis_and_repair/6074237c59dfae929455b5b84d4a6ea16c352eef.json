{
  "startTime": 1674243542213,
  "endTime": 1674243542524,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:9-alpine as build-stage\n\nWORKDIR /app\n\n# install build dependencies\nRUN apk add --no-cache \\\n    git\n\n# install application dependencies\nCOPY package.json yarn.lock ./\nRUN JOBS=max yarn install --non-interactive --frozen-lockfile && yarn cache clean;\n\n# copy in application source\nCOPY . .\n\n# run tests and compile sources\nRUN yarn test && yarn cache clean;\n\n# set node env for webpack build\nENV NODE_ENV production\n\n# build webpack bundle\nRUN yarn build\n\n# prune modules\nRUN yarn install --non-interactive --frozen-lockfile --production && yarn cache clean;\n\n# build and test admin interface\nFROM node:9-alpine as admin-stage\nCOPY admin /app/admin\nWORKDIR /app/admin\nENV REACT_APP_SERVER_ADDRESS /admin\nRUN JOBS=max yarn install --non-interactive --frozen-lockfile && \\\n    CI=1 yarn test && \\\n    yarn build && yarn cache clean;\n\n# copy built application to runtime image\nFROM node:9-alpine\nWORKDIR /app\nCOPY --from=build-stage /app/app.js app.js\nCOPY --from=build-stage /app/constants.js constants.js\nCOPY --from=build-stage /app/bad-domains.js bad-domains.js\nCOPY --from=build-stage /app/bin bin\nCOPY --from=build-stage /app/countries.json countries.json\nCOPY --from=build-stage /app/db db\nCOPY --from=build-stage /app/GeoIP2-Country.mmdb GeoIP2-Country.mmdb\nCOPY --from=build-stage /app/helpers helpers\nCOPY --from=build-stage /app/node_modules node_modules\nCOPY --from=build-stage /app/public public\nCOPY --from=build-stage /app/routes routes\nCOPY --from=build-stage /app/src src\nCOPY --from=build-stage /app/views views\nCOPY --from=admin-stage /app/admin/build public/admin\n\n# run on port 3001\nENV NODE_ENV production\nENV PORT 3001\n\nCMD [ \"node\", \"bin/www\" ]\n"
}