{
  "startTime": 1674235909139,
  "endTime": 1674235909398,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\n\nENV KUBEVER=1.13.4 \\\n    HELMVER=2.13.0 \\\n    HELMDIFFVER=\"2.11.0%2B3\" \\\n    KUBEVALVER=0.7.3 \\\n    VAULTVER=0.11.1 \\\n    HOME=/config \\\n    SSL_CERT_DIR=/etc/ssl/certs/\n\n# Install shipcat (built for musl outside)\nADD shipcat.x86_64-unknown-linux-musl /usr/local/bin/shipcat\n\n# Install kubectl (see https://aur.archlinux.org/packages/kubectl-bin )\nADD https://storage.googleapis.com/kubernetes-release/release/v${KUBEVER}/bin/linux/amd64/kubectl /usr/local/bin/kubectl\n\n# Install everything\n# NB: skipping https://github.com/garethr/kubetest because alpine dylibs fail\nRUN set -x && \\\n    apk update && \\\n    apk add --no-cache curl ca-certificates make bash jq git python3 unzip && \\\n    chmod +x /usr/local/bin/kubectl && \\\n    curl -f -sSL https://storage.googleapis.com/kubernetes-helm/helm-v${HELMVER}-linux-amd64.tar.gz | tar xz -C /usr/local/bin --strip-components=1 && \\\n    curl -f -sSL https://github.com/garethr/kubeval/releases/download/${KUBEVALVER}/kubeval-linux-amd64.tar.gz | tar xvz -C /usr/local/bin && \\\n    curl -f -sSL https://releases.hashicorp.com/vault/${VAULTVER}/vault_${VAULTVER}_linux_amd64.zip > vault.zip && \\\n    unzip vault.zip && mv vault /usr/local/bin && \\\n    apk del unzip && rm vault.zip && \\\n    # Create non-root user\n    adduser kubectl -Du 1000 -h /config && \\\n\n    # Basic check it works.\n    kubectl version --client && \\\n    shipcat --version && \\\n    helm version -c && \\\n    kubeval --version\n\n# Setup helm and plugins\n# Currently the version pinning mechanism in helm plugin does not work for tags with + in them\n# See https://github.com/databus23/helm-diff/issues/50\n# Also cannot sanity check installation because it tries to talk to the cluster\nRUN set -x && \\\n    helm init -c && \\\n    curl -f -sSL https://github.com/databus23/helm-diff/releases/download/v${HELMDIFFVER}/helm-diff-linux.tgz | tar xvz -C $(helm home)/plugins\n\n\n# Add core dependencies of validation\nRUN apk add --no-cache --virtual virtualbuild libffi-dev g++ python3-dev openssl-dev && \\\n    pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --no-cache-dir yamllint yq && \\\n    pip3 install --no-cache-dir semver jira jinja2 && \\\n    apk del virtualbuild\n\nUSER kubectl\n"
}