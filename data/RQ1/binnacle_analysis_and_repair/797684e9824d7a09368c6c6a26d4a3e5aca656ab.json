{
  "startTime": 1674236769702,
  "endTime": 1674236769847,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:stretch AS build\n\n# install dependencies\nRUN echo 'deb http://deb.nodesource.com/node_10.x stretch main' >>/etc/apt/sources.list\nRUN wget -qO- https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -\nRUN apt-get update && apt-get install --no-install-recommends -y jq nodejs build-essential git && rm -rf /var/lib/apt/lists/*;\nRUN npm i npm@latest -g && npm cache clean --force;\n\n# enable totally static binaries\nENV CGO_ENABLED \"0\"\n\n# needed so we can mkdir in the scratch container later\nRUN mkdir /tmp/emptydir\n\n# get a shell\nRUN mkdir /tmp/bin\nADD https://busybox.net/downloads/binaries/1.27.1-i686/busybox_ASH /tmp/bin/sh\nRUN chmod +x /tmp/bin/sh\n\nCOPY . /go/src/github.com/supergiant/capacity/\n\n# build the UI\nWORKDIR /go/src/github.com/supergiant/capacity/cmd/capacity-service/ui/capacity-service\nRUN npm install && npm cache clean --force;\nRUN npm install -g @angular/cli && npm cache clean --force;\nRUN npm rebuild node-sass\nRUN ng build --prod --base-href=\"../ui/\"\n\n# download packr\nRUN go get -u github.com/gobuffalo/packr/packr\n\nARG GIT_VERSION=none\nARG GIT_COMMIT=none\n\n# Put pre-built ui back in place\nWORKDIR /go/src/github.com/supergiant/capacity/cmd/capacity-service\nRUN packr build -v -o /tmp/bin/capacity-service -ldflags=\"-s -w \\\n    -X github.com/supergiant/capacity/pkg/version.gitVersion=${GIT_VERSION} \\\n    -X github.com/supergiant/capacity/pkg/version.gitCommit=${GIT_COMMIT} \\\n    -X github.com/supergiant/capacity/pkg/version.buildDate=$(date -u +'%Y-%m-%dT%H:%M:%SZ')\"\n\n# build final container\nFROM scratch\nENV PATH \"/bin\"\nENV SSL_CERT_FILE \"/etc/ca-certificates.crt\"\nCOPY --from=build /tmp/emptydir /etc\nCOPY --from=build /tmp/emptydir /etc/capacity-service\nCOPY --from=build /etc/ssl/certs/ca-certificates.crt /etc/\nCOPY --from=build /tmp/bin /bin\nCMD /bin/capacity-service\n"
}