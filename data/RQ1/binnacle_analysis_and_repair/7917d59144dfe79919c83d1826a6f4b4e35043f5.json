{
  "startTime": 1674237255947,
  "endTime": 1674237256560,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 17,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 154,
        "lineEnd": 154,
        "columnStart": 17,
        "columnEnd": 62
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 17,
        "columnEnd": 81
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 178
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 178
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM bigm/base-deb-tools\n\n# compile PHP 7.0 (cli and fpm)\n# based on https://github.com/docker-library/php/blob/master/7.0/fpm/Dockerfile\n\n# persistent / runtime deps\nRUN /xt/tools/_apt_install ca-certificates curl libpcre3 librecode0 libsqlite3-0 libxml2\n\n# phpize deps\nRUN /xt/tools/_apt_install autoconf file g++ gcc libc-dev make pkg-config re2c \\\n    ca-certificates curl libedit2\n\nENV PHP_INI_DIR /usr/local/etc/php\nRUN mkdir -p $PHP_INI_DIR/conf.d\n\n#prepare what will be compiled\nENV PHP_EXTRA_CONFIGURE_ARGS --enable-fpm --with-fpm-user=root --with-fpm-group=root\nRUN /xt/tools/_apt_install $PHP_EXTRA_BUILD_DEPS \\\n    bzip2 \\\n    libcurl4-openssl-dev \\\n    libpcre3-dev \\\n    libreadline6-dev \\\n    libssl-dev \\\n    libxml2-dev \\\n    librecode-dev \\\n    libsqlite3-dev \\\n    xz-utils \\\n    libedit-dev\n\nRUN gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3 0BD78B5F97500D450838F95DFE857D9A90D90EC1 1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763\n\n# wkhtmltopdf - http://wkhtmltopdf.org/downloads.html\nRUN /xt/tools/_apt_install libxext6 fontconfig xfonts-base xfonts-75dpi libxrender-dev libjpeg-dev \\\n    && /xt/tools/_download /tmp/wkhtmltox.deb http://download.gna.org/wkhtmltopdf/0.12/0.12.2.1/wkhtmltox-0.12.2.1_linux-trusty-amd64.deb \\\n    && dpkg -i /tmp/wkhtmltox.deb\n\nENV PHP_VERSION 7.0.6\n\nCOPY compile-php.sh /tmp/compile-php.sh\nRUN /tmp/compile-php.sh && rm /tmp/compile-php.sh\n\n #install very common extensions\nRUN /xt/tools/_apt_install libpng12-dev libjpeg-dev libbz2-dev libxslt1-dev libssh2-1-dev libmcrypt-dev\nCOPY tools/* /xt/tools/\nRUN /xt/tools/php_compile_extension gd --with-png-dir=/usr --with-jpeg-dir=/usr \\\n    && /xt/tools/php_compile_extension zip \\\n    && /xt/tools/php_compile_extension pdo_mysql \\\n    && /xt/tools/php_compile_extension bz2 \\\n    && /xt/tools/php_compile_extension xsl \\\n    && /xt/tools/php_compile_extension xmlrpc \\\n    && /xt/tools/php_compile_extension wddx \\\n    && /xt/tools/php_compile_extension sockets \\\n    && /xt/tools/php_compile_extension exif \\\n    && /xt/tools/php_compile_extension ftp \\\n    && /xt/tools/php_compile_extension gettext \\\n    && /xt/tools/php_compile_extension mcrypt \\\n    && /xt/tools/php_compile_extension soap \\\n    && /xt/tools/php_compile_cleanup\n\n#sysvsem + sysvshm\n#sysvmsg?\n#shmop?\n#gmp ?\n#mysql ?\n#mysqli ?\n\nRUN yes \"\" | pecl install xdebug \\\n    && echo \"zend_extension=xdebug.so\" > /usr/local/etc/ext-xdebug.ini \\\n    && echo \"xdebug.remote_enable = on\" >> /usr/local/etc/ext-xdebug.ini \\\n    && echo \"xdebug.remote_connect_back = on\" >> /usr/local/etc/ext-xdebug.ini \\\n    && echo 'xdebug.idekey = \"PHPSTORM\"' >> /usr/local/etc/ext-xdebug.ini \\\n    && echo \"xdebug.profiler_enable = 0\" >> /usr/local/etc/ext-xdebug.ini \\\n    && echo \"xdebug.profiler_enable_trigger = 1\" >> /usr/local/etc/ext-xdebug.ini \\\n    && echo \"xdebug.trace_enable_trigger = 1\" >> /usr/local/etc/ext-xdebug.ini\n\n#TODO ssh2 not compiling under 7\n#RUN yes \"\" | pecl install ssh2-0.12 \\\n#\t&& echo \"extension=ssh2.so\" > /usr/local/etc/php/conf.d/ext-ssh2.ini\nRUN cd /tmp && git clone https://git.php.net/repository/pecl/networking/ssh2.git && cd /tmp/ssh2 \\\n    && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install \\\n    && echo \"extension=ssh2.so\" > /usr/local/etc/php/conf.d/ext-ssh2.ini \\\n    && rm -rf /tmp/ssh2\n\n# #.install very common extensions\n\n# composer\nRUN curl -f -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer\n\n# some pear libraries\nRUN pear install SQL_Parser-0.7.0\n\n# translate-toolkit\nRUN /xt/tools/_apt_install translate-toolkit\n\nRUN /xt/tools/_enable_ssmtp \\\n    && echo 'sendmail_path = \"/usr/sbin/ssmtp -t\"' > /usr/local/etc/php/conf.d/sendmail.ini\n\n# another PDF tool\nRUN /xt/tools/_apt_install pdftk\n\nADD root/ /\nADD startup/* /xt/startup/\nADD supervisor.d/* /etc/supervisord.d/\n\nRUN mkdir -p /var/www/html\nWORKDIR /var/www\n\nENV PHP_TIMEZONE Europe/London\nENV PHP_CONF_VERSION production\n\nEXPOSE 9000\n# .compile PHP 7.0 (cli and fpm)\n\nRUN /xt/tools/_apt_install libmagickwand-dev git \\\n    && yes \"\" | pecl install imagick-3.4.1 \\\n    && echo \"extension=imagick.so\" > /usr/local/etc/php/conf.d/ext-imagick.ini\n\n#TODO we have to replace mongo driver with mongodb under 7\nRUN\tyes \"\" | pecl install mongodb \\\n\t&& echo \"extension=mongodb.so\" > /usr/local/etc/php/conf.d/ext-mongo.ini\n\n# TODO igbinary doesn't compile under 7 - https://github.com/igbinary/igbinary\n# TODO memcached doesn't compile under 7 - https://github.com/php-memcached-dev/php-memcached/issues/194\n# TODO use --enable-memcached-igbinary\n# stable=2.2.7\n#ENV MEMCACHED_VERSION 2.2.0\n#RUN /xt/tools/_apt_install libmemcached-dev \\\n#\t&& pecl install igbinary \\\n#\t&& /xt/tools/_download /tmp/memcached.tgz https://pecl.php.net/get/memcached-${MEMCACHED_VERSION}.tgz \\\n#\t&& cd /tmp && tar xf memcached.tgz \\\n#\t&& cd /tmp/memcached-${MEMCACHED_VERSION} \\\n#\t&& phpize \\\n#\t&& ./configure --disable-memcached-sasl \\\n#\t&& make \\\n#\t&& make install \\\n#\t&& echo \"extension=igbinary.so\" > /usr/local/etc/php/conf.d/ext-igbinary.ini \\\n#\t&& echo \"extension=memcached.so\" > /usr/local/etc/php/conf.d/ext-memcached.ini\n\n#RUN cd /tmp && /xt/tools/_download /tmp/apcu.tgz https://pecl.php.net/get/APCu \\\n#    && cd /tmp && tar xf apcu.tgz && cd /tmp/apcu-5.1.3 \\\n#\t&& phpize && ./configure --enable-apcu --enable-apcu-bc && make && make install \\\n#    && rm -rf /tmp/apcu-5.1.3\nRUN yes \"\" | pecl install APCu-5.1.3 \\\n    && yes \"\" | pecl install apcu_bc-beta \\\n\t&& echo \"extension=apcu.so\" > /usr/local/etc/php/conf.d/ext-apcu.ini \\\n\t&& echo \"extension=apc.so\" >> /usr/local/etc/php/conf.d/ext-apcu.ini\n\n# we need msgpack until igbinary for PHP7 is not fixed https://github.com/igbinary/igbinary7/issues/3\nRUN yes \"\" | pecl install msgpack-beta \\\n    && echo \"extension=msgpack.so\" > /usr/local/etc/php/conf.d/ext-msgpack.ini\n\nRUN cd /tmp && git clone https://github.com/igbinary/igbinary7.git && cd /tmp/igbinary7 \\\n    && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CFLAGS=\"-O2 -g\" --enable-igbinary && make && make install \\\n    && rm -rf /tmp/igbinary7 \\\n    && echo \"extension=igbinary.so\" > /usr/local/etc/php/conf.d/ext-igbinary.ini\nRUN /xt/tools/_apt_install libmemcached-dev \\\n    && cd /tmp && git clone -b php7 https://github.com/php-memcached-dev/php-memcached && cd /tmp/php-memcached \\\n    && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-memcached-igbinary --disable-memcached-sasl && make && make install \\\n    && rm -rf /tmp/php-memcached \\\n    && echo \"extension=memcached.so\" > /usr/local/etc/php/conf.d/ext-memcached.ini\n\nRUN echo \"session.serialize_handler=php\" > /usr/local/etc/php/conf.d/zzzzzzzz.txt\n"
}