{
  "startTime": 1674246775819,
  "endTime": 1674246776092,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# Install Basic Packages\n# Set tzdata info to UTC (Etc/UTC) for image.\n# Runtime will reconfigure to match what is in environment\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    curl \\\n    dnsutils \\\n    gettext \\\n    linux-tools-common \\\n    openssh-server \\\n    netbase \\\n    netcat \\\n    net-tools \\\n    openjdk-8-jdk \\\n    rsyslog \\\n    software-properties-common \\\n    vim \\\n    wget && \\\n    apt-get install --no-install-recommends -y man psutils psmisc ruby-dev gcc && \\\n    echo \"tzdata tzdata/Areas select Etc\" > /tmp/tzdata.txt && \\\n    echo \"tzdata tzdata/Zones/Etc select UTC\" >> /tmp/tzdata.txt && \\\n    export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true && \\\n    debconf-set-selections /tmp/tzdata.txt && \\\n    apt-get install --no-install-recommends -y tzdata && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# ************************************************************************\n# The following is required for Genesis tests to be run.\n# NOTE: Work is in progress to allow for remote test execution\n# 1. Disable setting that prevents users from writing to current terminal device\n# 2. Symlink in /bin/env (some genesis tests expect it to be there)\n# 3. Pre-create the zimbra user with known uid/gid so that IF a user wants to mount a host\n# 4. directory into the container, the permissions will be correct.\n# ************************************************************************\nRUN sed -i.bak 's/^mesg/# mesg/' /root/.profile && \\\n    ln -s /usr/bin/env /bin/env && \\\n    groupadd -r -g 1000 zimbra && \\\n    useradd -r -g zimbra -u 1000 -b /opt -s /bin/bash zimbra\n\n# ************************************************************************\n# Download and do a package-only install of Zimbra\n# Trick build into skipping resolvconf as docker overrides for DNS\n# This is currently required by our installer script. Hopefully be\n# fixed soon.  The `zimbra-os-requirements` packages depends\n# on the `resolvconf` package, and configuration of that is what\n# was breaking install.sh\n# ************************************************************************\nRUN curl -f -s -k -o /tmp/zcs.tgz 'https://files.zimbra.com.s3.amazonaws.com/downloads/8.8.3_GA/zcs-8.8.3_GA_1872.UBUNTU16_64.20170905143325.tgz' && \\\n    mkdir -p /tmp/release && \\\n    tar xzvf /tmp/zcs.tgz -C /tmp/release --strip-components=1 && \\\n    rm /tmp/zcs.tgz && \\\n    echo \"resolvconf resolvconf/linkify-resolvconf boolean false\" | debconf-set-selections\n\n# ************************************************************************\n# Install STAF to /usr/local/staf\n#\n# Add the STAF libraries to the END of the list of places where libraries are searched\n# Some of the libraries included with STAF are wonky and will bork normal commands\n# if they are loaded first.\n# ************************************************************************\nRUN curl -f -L -o /tmp/staf-setup.bin 'https://downloads.sourceforge.net/project/staf/staf/V3.4.26/STAF3426-setup-linux-amd64-NoJVM.bin' && \\\n    chmod +x /tmp/staf-setup.bin && \\\n    /tmp/staf-setup.bin -i silent \\\n       -DACCEPT_LICENSE=1 \\\n       -DCHOSEN_INSTALL_SET=Custom \\\n       -DCHOSEN_INSTALL_FEATURE_LIST=STAF,ExtSvcs,Langs,Codepage && \\\n    rm /tmp/staf-setup.bin && \\\n    echo /usr/local/staf/lib > /etc/ld.so.conf.d/zzz-staf.conf && \\\n    ldconfig\n\nCOPY slash-zimbra/software-install-responses /tmp/software-install-responses\nWORKDIR /tmp/release\nRUN sed -i.bak 's/checkRequired/# checkRequired/' install.sh && \\\n    ./install.sh -s -x --skip-upgrade-check < /tmp/software-install-responses && \\\n    apt-get clean && \\\n    rm -rf /tmp/release\n\nEXPOSE 22 25 80 110 143 443 465 587 993 995 6500 6550 7071 8443\n"
}