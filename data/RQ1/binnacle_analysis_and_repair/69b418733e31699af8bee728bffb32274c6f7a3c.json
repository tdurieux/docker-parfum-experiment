{
  "startTime": 1674236056800,
  "endTime": 1674236057524,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 21,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 21,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 21,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "FROM registry.services.nersc.gov/nersc/intel_cxx_fort_mpi_mkl_devel as builder\n\nRUN apt -y update && apt install --no-install-recommends -y apt-utils && echo yes && rm -rf /var/lib/apt/lists/*;\n\nRUN DEBIAN_FRONTEND=noninteractive \\\n    apt install -y --no-install-recommends \\\n    make \\\n    git \\\n    file \\\n    pkg-config \\\n    wget \\\n    swig \\\n    netpbm \\\n    wcslib-dev \\\n    wcslib-tools \\\n    zlib1g-dev \\\n    libbz2-dev \\\n    libcairo2-dev \\\n    libcfitsio-dev \\\n    libcfitsio-bin \\\n    libgsl-dev \\\n    libjpeg-dev \\\n    libnetpbm10-dev \\\n    libpng-dev \\\n    libeigen3-dev \\\n    libgoogle-glog-dev \\\n    libceres-dev \\\n    python3 \\\n    python3-dev \\\n    python3-pip \\\n    python3-pil \\\n    python3-tk \\\n    # # Remove APT files\n    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN echo \"../site-packages\" > /usr/local/lib/python3.5/dist-packages/site-packages.pth\n\n# Pip installs -- binary\nRUN for x in \\\n    setuptools \\\n    wheel \\\n    intel-numpy \\\n    intel-scipy \\\n    psycopg2-binary \\\n    matplotlib \\\n    astropy \\\n    zmq \\\n    ; do pip3 --no-cache-dir install $x; done\n\n# ugly: Tractor's mp_fourier module detects the $CC='icc' exactly\n# These are in /opt/intel/bin, which is on the PATH.\nENV CC icc\nENV CXX icpc\nENV LDSHARED icc -shared\n# Edison & Cori\n#ENV CFLAGS -O3 -g -fPIC -std=gnu99 -pthread -x=ivybridge -ax=haswell,knl\n# Just Cori\nENV CFLAGS -O3 -g -fPIC -std=gnu99 -pthread -x=haswell -ax=knl\nENV ARCH_FLAGS \"\"\n\n# Pip installs -- built from source\nRUN for x in \\\n    photutils \\\n    fitsio==0.9.12 \\\n    ; do pip3 --no-cache-dir install $x; done\n\nENV PYTHON python3\nENV PYTHON_CONFIG python3-config\nENV PYTHON_SCRIPT \"/usr/bin/env python3\"\n\nRUN mkdir -p /src\nWORKDIR /src\n\nENV BLAS -L${MKLROOT}/lib/intel64 -lmkl_rt -fopenmp -lpthread -limf -lsvml -ldl\nENV CPPFLAGS -I${MKLROOT}/include\n\nRUN git clone https://github.com/astromatic/sextractor.git sourceextractor \\\n    && cd sourceextractor \\\n    && sh autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-icc --enable-mkl \\\n    && make \\\n    && make install \\\n    && make clean\n\nRUN git clone https://github.com/astromatic/psfex.git psfex \\\n    && cd psfex \\\n    && sh autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-icc --enable-mkl \\\n    && make \\\n    && make install \\\n    && make clean\n\n# Astrometry.net\nRUN git clone http://github.com/dstndstn/astrometry.net.git astrometry \\\n    && cd astrometry \\\n    && make -j4 && make \\\n    && make py \\\n    && make extra \\\n    && make install INSTALL_DIR=/usr/local \\\n    && make clean \\\n    && (cd && PYTHONPATH=/usr/local/lib/python python3 -c \"import astrometry; print(astrometry.__version__)\")\n\n# The Tractor\nRUN git clone http://github.com/dstndstn/tractor.git tractor \\\n    && cd tractor \\\n    && make \\\n    && make ceres \\\n    && make install INSTALL_DIR=/usr/local \\\n    && rm -R $(find . -name \"*.o\" -o -name \"*.so\") \\\n    && (cd && PYTHONPATH=/usr/local/lib/python python3 -c \"import tractor; print(tractor.__version__)\")\n\n######## Stage 2 ########\nFROM registry.services.nersc.gov/nersc/intel_cxx_fort_mpi_mkl_runtime\n\nENV PYTHON python3\nENV PYTHON_CONFIG python3-config\nENV PYTHON_SCRIPT \"/usr/bin/env python3\"\n\nRUN rm /root/.profile\n\nRUN apt -y update && apt install --no-install-recommends -y apt-utils \\\n && DEBIAN_FRONTEND=noninteractive \\\n    apt install -y --no-install-recommends \\\n    procps \\\n    htop \\\n    make \\\n    git \\\n    file \\\n    pkg-config \\\n    gdb \\\n    strace \\\n    vim \\\n    less \\\n    wget \\\n    netpbm \\\n    wcslib-dev \\\n    wcslib-tools \\\n    libgsl-dev \\\n    libcfitsio-dev \\\n    libcfitsio-bin \\\n    libgoogle-glog-dev \\\n    libceres-dev \\\n    python3 \\\n    python3-dev \\\n    python3-pip \\\n    python3-pil \\\n    python3-tk \\\n    # # Remove APT files\n    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nCOPY --from=builder /usr/local /usr/local\n\nRUN pip3 --no-cache-dir install cython ipython\n\nWORKDIR /src\n\n# QDO\nRUN git clone https://bitbucket.org/berkeleylab/qdo.git qdo \\\n    && cd qdo \\\n    && python3 setup.py install\n\n# python = python3\nRUN ln -s /usr/bin/python3 /usr/bin/python\n\n# unwise_psf\nRUN git clone https://github.com/legacysurvey/unwise_psf.git \\\n    && cd unwise_psf && git checkout dr8\n\n# Legacypipe\nRUN git clone http://github.com/legacysurvey/legacypipe.git legacypipe && echo 1\n\nENV PYTHONPATH /usr/local/lib/python:/src/unwise_psf/py:/src/legacypipe/py\nENV WISE_PSF_DIR /src/unwise_psf/etc\n\nENV HOME /root\n\n# set prompt and default shell\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN echo \"export PS1='[container] \\\\u@\\\\h:\\\\w$ '\" >> /root/.bashrc \\\n  # Create config files in /root\n  && mkdir /root/.qdo && echo \"[qdo]\" > /root/.qdo/qdorc \\\n  && python -c \"import astropy\" \\\n  && python -c \"import matplotlib.font_manager as fm; f = fm.FontManager()\" \\\n  && ipython -c \"print('hello')\" \\\n  # Download astropy site locations and USNO sky model\n  && python -c \"from astropy.coordinates import EarthLocation; EarthLocation._get_site_registry(force_download=True)\" \\\n  && python -c \"from astropy.coordinates import EarthLocation, SkyCoord, AltAz; from astropy.time import Time; print(EarthLocation.of_site('ctio')); print(SkyCoord(180.,-45.,unit='deg').transform_to(AltAz(obstime=Time(56806.0, format='mjd'), location=EarthLocation.of_site('ctio'))))\"\n\n# Patch astropy:\nADD urlmap-readonly.patch /tmp/\nRUN cd /usr/local/lib/python3.5/dist-packages && \\\n    patch -p1 < /tmp/urlmap-readonly.patch\n\n# Alternatively, could retrieve\n#   http://data.astropy.org/coordinates/sites.json\n# to\n#   /usr/local/lib/python3.5/dist-packages/astropy/coordinates/data/sites.json\n\nENTRYPOINT [\"/bin/bash\", \"-c\"]\nCMD [\"/bin/bash\"]\n\nRUN    python    -m compileall /src/unwise_psf/py/unwise_psf.py \\\n    && python -O -m compileall /src/unwise_psf/py/unwise_psf.py\n\nRUN python -O -m compileall /usr/lib/python3.5 /usr/lib/python3/dist-packages \\\n           /usr/local/lib/python /usr/local/lib/python3.5/site-packages \\\n           /usr/local/lib/python3.5/dist-packages && \\\n    python    -m compileall /usr/lib/python3.5 /usr/lib/python3/dist-packages \\\n           /usr/local/lib/python /usr/local/lib/python3.5/site-packages \\\n           /usr/local/lib/python3.5/dist-packages\n\nRUN cd /src/legacypipe/py && git pull && git describe && echo 1\n\nRUN    python    -m compileall /src/legacypipe/py/{legacypipe,legacyzpts} \\\n    && python -O -m compileall /src/legacypipe/py/{legacypipe,legacyzpts}\n"
}