{
  "startTime": 1674234147894,
  "endTime": 1674234148112,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 20,
        "columnEnd": 106
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.9@sha256:644fcb1a676b5165371437feaa922943aaf7afcfa8bfee4472f6860aad1ef2a0 AS ctags\n\n# hadolint ignore=DL3003,DL3018,DL4006\nRUN apk --no-cache add --virtual build-deps curl jansson-dev \\\n    libseccomp-dev linux-headers autoconf pkgconfig make automake \\\n    gcc g++ binutils\n\nENV CTAGS_VERSION=5b4865cc2d4831db9d638a647ff2f5a0dced2133\n\n# hadolint ignore=DL3003\nRUN curl -fsSL -o ctags.tar.gz \"https://codeload.github.com/universal-ctags/ctags/tar.gz/$CTAGS_VERSION\" && \\\n    tar -C /tmp -xzf ctags.tar.gz && cd /tmp/ctags-$CTAGS_VERSION && \\\n    ./autogen.sh && LDFLAGS=-static ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --program-prefix=universal- --enable-json --enable-seccomp && \\\n    make -j8 && make install && cd && \\\n    rm -rf /tmp/ctags-$CTAGS_VERSION && \\\n    apk --no-cache --purge del build-deps && rm ctags.tar.gz\n\n# TODO: Make this image use our sourcegraph/alpine:3.9 base image.\nFROM alpine:3.9@sha256:644fcb1a676b5165371437feaa922943aaf7afcfa8bfee4472f6860aad1ef2a0\n\nARG COMMIT_SHA=\"unknown\"\nARG DATE=\"unknown\"\nARG VERSION=\"unknown\"\n\nLABEL org.opencontainers.image.revision=${COMMIT_SHA}\nLABEL org.opencontainers.image.created=${DATE}\nLABEL org.opencontainers.image.version=${VERSION}\nLABEL com.sourcegraph.github.url=https://github.com/sourcegraph/sourcegraph/commit/${COMMIT_SHA}\n\nRUN echo \"@edge http://dl-cdn.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories && \\\n    echo \"@edge http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories && \\\n    echo \"@edge http://dl-cdn.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories && \\\n    echo \"http://dl-cdn.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories && \\\n    echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories && \\\n    echo \"http://dl-cdn.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories && \\\n    echo \"http://dl-cdn.alpinelinux.org/alpine/v3.6/main\" >> /etc/apk/repositories && \\\n    echo \"http://dl-cdn.alpinelinux.org/alpine/v3.6/community\" >> /etc/apk/repositories\n\n# hadolint ignore=DL3018\nRUN apk update && apk add --no-cache \\\n    # NOTE that the Postgres version we run is different\n    # from our *Minimum Supported Version* which alone dictates\n    # the features we can depend on. See this link for more information:\n    # https://github.com/sourcegraph/sourcegraph/blob/master/doc/dev/postgresql.md#version-requirements\n    'bash=4.4.19-r1' 'postgresql-contrib=11.3-r0' 'postgresql=11.3-r0' \\\n    'redis=3.2.12-r0' bind-tools ca-certificates git@edge \\\n    mailcap nginx openssh-client su-exec tini\n\n# IMPORTANT: If you update the syntect_server version below, you MUST confirm\n# the ENV variables from its Dockerfile (https://github.com/sourcegraph/syntect_server/blob/master/Dockerfile)\n# have been appropriately set in cmd/server/shared/shared.go.\n# hadolint ignore=DL3022\nCOPY --from=sourcegraph/syntect_server:5e1efbb@sha256:6ec136246b302a6c8fc113f087a66d5f9a89a9f5b851e9abb917c8b5e1d8c4b1 /syntect_server /usr/local/bin/\nCOPY --from=ctags /usr/local/bin/universal-* /usr/local/bin/\n\n# hadolint ignore=DL3022\nCOPY --from=libsqlite3-pcre /sqlite3-pcre/pcre.so /libsqlite3-pcre.so\nENV LIBSQLITE3_PCRE /libsqlite3-pcre.so\nCOPY . /\n\nRUN echo \"hosts: files dns\" > /etc/nsswitch.conf\n\nENV GO111MODULES=on LANG=en_US.utf8\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/usr/local/bin/server\"]\n"
}