{
  "startTime": 1674244037747,
  "endTime": 1674244038175,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 166,
        "lineEnd": 166,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 178,
        "lineEnd": 178,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 32,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 45,
        "columnStart": 22,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2018-2019, NVIDIA CORPORATION. All rights reserved.\n#\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions\n# are met:\n#  * Redistributions of source code must retain the above copyright\n#    notice, this list of conditions and the following disclaimer.\n#  * Redistributions in binary form must reproduce the above copyright\n#    notice, this list of conditions and the following disclaimer in the\n#    documentation and/or other materials provided with the distribution.\n#  * Neither the name of NVIDIA CORPORATION nor the names of its\n#    contributors may be used to endorse or promote products derived\n#    from this software without specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\n# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n# Multistage build.\n#\n\nARG BASE_IMAGE=tensorrtserver\nARG BUILD_IMAGE=tensorrtserver_build\nARG CBE_IMAGE=tensorrtserver_cbe\nARG CLIENT_IMAGE=tensorrtserver_client\n\n############################################################################\n## Build test utilities and custom backends in the BUILD_IMAGE since\n## it has already been configured correctly and has some existing\n## build artifacts. Copy artifacts into QA area.\n############################################################################\nFROM ${BUILD_IMAGE} AS build\n\n# image_preprocess custom backend requires opencv\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n            libopencv-dev \\\n            libopencv-core-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /workspace\nRUN cd builddir && \\\n    (make -j16 trtis-test-utils trtis-custom-backends || true) && \\\n    make -j16 trtis-test-utils trtis-custom-backends\n\n# Update the qa/ directory with test executables, models, etc.\nWORKDIR /workspace\nRUN mkdir -p qa/common && \\\n    mkdir qa/L0_simple_example/models && \\\n    cp -r docs/examples/model_repository/simple qa/L0_simple_example/models/. && \\\n    mkdir qa/L0_simple_callback_example/models && \\\n    cp -r docs/examples/model_repository/simple qa/L0_simple_callback_example/models/. && \\\n    mkdir qa/L0_simple_string_example/models && \\\n    cp -r docs/examples/model_repository/simple_string qa/L0_simple_string_example/models/. && \\\n    mkdir qa/L0_simple_lib/models && \\\n    cp /opt/tensorrtserver/bin/simple qa/L0_simple_lib/. && \\\n    cp -r docs/examples/model_repository/simple qa/L0_simple_lib/models/.\n\nRUN cp /workspace/builddir/trtis-test-utils/install/bin/caffe2plan qa/common/.\n\nRUN mkdir -p qa/custom_models/custom_int32_int32_int32/1 && \\\n    cp builddir/trtis-custom-backends/install/lib/libaddsub.so \\\n        qa/custom_models/custom_int32_int32_int32/1/. && \\\n    mkdir -p qa/custom_models/custom_nobatch_int32_int32_int32/1 && \\\n    cp builddir/trtis-custom-backends/install/lib/libaddsub.so \\\n        qa/custom_models/custom_nobatch_int32_int32_int32/1/. && \\\n    mkdir -p qa/custom_models/custom_float32_float32_float32/1 && \\\n    cp builddir/trtis-custom-backends/install/lib/libaddsub.so \\\n        qa/custom_models/custom_float32_float32_float32/1/. && \\\n    mkdir -p qa/custom_models/custom_nobatch_float32_float32_float32/1 && \\\n    cp builddir/trtis-custom-backends/install/lib/libaddsub.so \\\n        qa/custom_models/custom_nobatch_float32_float32_float32/1/. && \\\n    mkdir -p qa/L0_simple_custom_example/models/simple/1 && \\\n    cp builddir/trtis-custom-backends/install/lib/libaddsub.so \\\n        qa/L0_simple_custom_example/models/simple/1/. && \\\n    mkdir -p qa/L0_simple_ensemble/models/simple/1 && \\\n    cp builddir/trtis-custom-backends/install/lib/libaddsub.so \\\n        qa/L0_simple_ensemble/models/simple/1/. && \\\n    mkdir -p qa/L0_multiple_ports/models/simple/1 && \\\n    cp builddir/trtis-custom-backends/install/lib/libaddsub.so \\\n        qa/L0_multiple_ports/models/simple/1/.\n\nRUN mkdir -p qa/L0_custom_image_preprocess/models/image_preprocess_nhwc_224x224x3/1 && \\\n    cp builddir/trtis-custom-backends/install/lib/libimagepreprocess.so \\\n        qa/L0_custom_image_preprocess/models/image_preprocess_nhwc_224x224x3/1/.\n\nRUN mkdir -p qa/L0_custom_param/models/param/1 && \\\n    cp builddir/trtis-custom-backends/install/lib/libparam.so \\\n        qa/L0_custom_param/models/param/1/.\n\nRUN mkdir -p qa/L0_simple_sequence_example/models/simple_sequence/1 && \\\n    cp builddir/trtis-custom-backends/install/lib/libsequence.so \\\n        qa/L0_simple_sequence_example/models/simple_sequence/1/. && \\\n    mkdir -p qa/custom_models/custom_sequence_int32/1 && \\\n    cp builddir/trtis-custom-backends/install/lib/libsequence.so \\\n        qa/custom_models/custom_sequence_int32/1/.\n\nRUN cp builddir/trtis-custom-backends/install/lib/libidentity.so \\\n        qa/L0_infer/. && \\\n    cp builddir/trtis-custom-backends/install/lib/libidentity.so \\\n        qa/L0_infer_variable/. && \\\n    cp builddir/trtis-custom-backends/install/lib/libidentity.so \\\n        qa/L0_infer_reshape/. && \\\n    cp builddir/trtis-custom-backends/install/lib/libidentity.so \\\n        qa/L0_infer_zero/. && \\\n    cp builddir/trtis-custom-backends/install/lib/libidentity.so \\\n        qa/L0_sequence_batcher/. && \\\n    cp builddir/trtis-custom-backends/install/lib/libidentity.so \\\n        qa/L0_savedmodel_shape/. && \\\n    cp builddir/trtis-custom-backends/install/lib/libidentity.so \\\n        qa/L0_perflab_nomodel/.\n\n# Generating the docs requires the docs source and the source code so\n# copy that into L0_docs so that it is available when that test runs.\nRUN cp VERSION qa/L0_docs/. && \\\n    cp README.rst qa/L0_docs/. && \\\n    cp -r docs qa/L0_docs/. && \\\n    cp -r src qa/L0_docs/.\n\n############################################################################\n## Copy artifacts from client container\n############################################################################\nFROM ${CLIENT_IMAGE} AS client\n\nWORKDIR /workspace\nCOPY --from=build /workspace/qa/ qa/\nRUN mkdir -p qa/clients && mkdir -p qa/pkgs && \\\n    cp install/bin/* qa/clients/. && \\\n    cp install/lib/librequest.so qa/clients/. && \\\n    cp install/python/*.py qa/clients/. && \\\n    cp install/python/tensorrtserver*.whl qa/pkgs/.\n\n############################################################################\n## Copy artifacts from custom backend container\n############################################################################\nFROM ${CBE_IMAGE} AS cbe\n\nWORKDIR /workspace\nCOPY --from=client /workspace/qa/ qa/\nRUN ( cd qa/L0_custom_backend && tar xzf /workspace/*.custombackend.tar.gz) && rm /workspace/*.custombackend.tar.gz\n\n############################################################################\n## Create CI enabled image\n############################################################################\nFROM $BASE_IMAGE\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n                              jmeter \\\n                              jmeter-http \\\n                              libcurl3 \\\n                              libopencv-dev \\\n                              libopencv-core-dev \\\n                              libpng12-dev \\\n                              libzmq3-dev \\\n                              python \\\n                              python-protobuf \\\n                              swig && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\nRUN pip install --no-cache-dir --upgrade numpy pillow future grpcio requests gsutil\n\n# CI expects tests in /opt/tensorrtserver/qa\nWORKDIR /opt/tensorrtserver\nCOPY --from=cbe /workspace/qa/ qa/\n\n# Remove CI tests that are meant to run only on build image and\n# install the tensorrtserver python client APIs.\nRUN rm -fr qa/L0_copyrights qa/L0_unit_test && \\\n    pip install --no-cache-dir --upgrade qa/pkgs/tensorrtserver-*.whl\n\nENV LD_LIBRARY_PATH /opt/tensorrtserver/qa/clients:${LD_LIBRARY_PATH}\n"
}