{
  "startTime": 1674240643556,
  "endTime": 1674240643867,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 7,
        "columnEnd": 134
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 83,
        "columnStart": 7,
        "columnEnd": 21
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 9,
        "columnEnd": 96
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\nMAINTAINER Rafael RÃ¶mhild <rafael@roemhild.de>\n\nARG EJABBERD_UID=999\nARG EJABBERD_GID=999\n\nENV EJABBERD_BRANCH=18.12 \\\n    EJABBERD_USER=ejabberd \\\n    EJABBERD_HTTPS=true \\\n    EJABBERD_STARTTLS=true \\\n    EJABBERD_S2S_SSL=true \\\n    EJABBERD_HOME=/opt/ejabberd \\\n    EJABBERD_DEBUG_MODE=false \\\n    HOME=$EJABBERD_HOME \\\n    PATH=$EJABBERD_HOME/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/sbin \\\n    DEBIAN_FRONTEND=noninteractive \\\n    XMPP_DOMAIN=localhost \\\n    LC_ALL=C.UTF-8 \\\n    LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US.UTF-8 \\\n    GOSU_VERSION=1.10\n\n# Add ejabberd user and group\nRUN groupadd --gid $EJABBERD_GID $EJABBERD_USER \\\n    && useradd -m \\\n       -g $EJABBERD_USER \\\n       -d $EJABBERD_HOME \\\n       --uid $EJABBERD_UID \\\n       $EJABBERD_USER\n\n# Install packages and perform cleanup\nRUN set -x \\\n    && buildDeps=' \\\n        automake \\\n        build-essential \\\n        dirmngr \\\n        erlang-src erlang-dev \\\n        git-core \\\n        gpg \\\n        libexpat-dev \\\n        libgd-dev \\\n        libssl-dev \\\n        libsqlite3-dev \\\n        libwebp-dev \\\n        libyaml-dev \\\n        wget \\\n        zlib1g-dev \\\n    ' \\\n    && requiredAptPackages=' \\\n        ca-certificates \\\n        erlang-base-hipe erlang-snmp erlang-ssl erlang-ssh \\\n        erlang-tools erlang-xmerl erlang-corba erlang-diameter erlang-eldap \\\n        erlang-eunit erlang-ic erlang-odbc erlang-os-mon \\\n        erlang-parsetools erlang-percept erlang-typer \\\n        gsfonts \\\n        imagemagick \\\n        inotify-tools \\\n        libgd3 \\\n        libwebp6 \\\n        libyaml-0-2 \\\n        locales \\\n        ldnsutils \\\n        openssl \\\n        python2.7 \\\n        python-jinja2 \\\n        python-mysqldb \\\n    ' \\\n    && apt-get update \\\n    && apt-get install -y $buildDeps $requiredAptPackages --no-install-recommends \\\n    && dpkg-reconfigure locales && \\\n        locale-gen C.UTF-8 \\\n    && /usr/sbin/update-locale LANG=C.UTF-8 \\\n    && echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen \\\n    && locale-gen \\\n    && cd /tmp \\\n    && git clone https://github.com/processone/ejabberd.git \\\n        --branch $EJABBERD_BRANCH --single-branch --depth=1 \\\n    && cd ejabberd \\\n    && chmod +x ./autogen.sh \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-user=$EJABBERD_USER \\\n        --enable-all \\\n        --disable-tools \\\n        --disable-pam \\\n    && make debug=$EJABBERD_DEBUG_MODE \\\n    && make install \\\n    && mkdir $EJABBERD_HOME/ssl \\\n    && mkdir $EJABBERD_HOME/conf \\\n    && mkdir $EJABBERD_HOME/backup \\\n    && mkdir $EJABBERD_HOME/upload \\\n    && mkdir $EJABBERD_HOME/database \\\n    && mkdir $EJABBERD_HOME/module_source \\\n    && cd $EJABBERD_HOME \\\n    && rm -rf /tmp/ejabberd \\\n    && rm -rf /etc/ejabberd \\\n    && ln -sf $EJABBERD_HOME/conf /etc/ejabberd \\\n    && rm -rf /usr/local/etc/ejabberd \\\n    && ln -sf $EJABBERD_HOME/conf /usr/local/etc/ejabberd \\\n    && chown -R $EJABBERD_USER: $EJABBERD_HOME \\\n    && wget -P /usr/local/share/ca-certificates/cacert.org https://www.cacert.org/certs/root.crt https://www.cacert.org/certs/class3.crt \\\n    && update-ca-certificates \\\n    && set -ex \\\n    && dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\" \\\n    && wget -O /usr/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" \\\n    && wget -O /usr/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" \\\n# verify the signature\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && for server in $(shuf -e ha.pool.sks-keyservers.net \\\n                             hkp://p80.pool.sks-keyservers.net:80 \\\n                             keyserver.ubuntu.com \\\n                             hkp://keyserver.ubuntu.com:80 \\\n                             pgp.mit.edu); do \\\n         gpg --batch --no-tty --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && break || :; \\\n     done \\\n    && gpg --no-tty --batch --verify /usr/bin/gosu.asc /usr/bin/gosu \\\n    && chmod +sx /usr/bin/gosu \\\n    && gosu nobody true \\\n# cleanup\n    && rm -r /usr/bin/gosu.asc \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get purge -y --auto-remove $buildDeps\n\n# Create logging directories\nRUN mkdir -p /var/log/ejabberd\nRUN touch /var/log/ejabberd/crash.log /var/log/ejabberd/error.log /var/log/ejabberd/erlang.log\n\n# Wrapper for setting config on disk from environment\n# allows setting things like XMPP domain at runtime\nADD ./run.sh /sbin/run\n\n# Add run scripts\nADD ./scripts $EJABBERD_HOME/scripts\nADD https://raw.githubusercontent.com/rankenstein/ejabberd-auth-mysql/master/auth_mysql.py $EJABBERD_HOME/scripts/lib/auth_mysql.py\nRUN chmod a+rx $EJABBERD_HOME/scripts/lib/auth_mysql.py\nRUN chmod +x /usr/local/lib/eimp*/priv/bin/eimp\n\n# Add config templates\nADD ./conf /opt/ejabberd/conf\n\n# Continue as user\nUSER $EJABBERD_USER\n\n# Set workdir to ejabberd root\nWORKDIR $EJABBERD_HOME\n\nVOLUME [\"$EJABBERD_HOME/database\", \"$EJABBERD_HOME/ssl\", \"$EJABBERD_HOME/backup\", \"$EJABBERD_HOME/upload\"]\nEXPOSE 4560 5222 5269 5280 5443\n\nCMD [\"start\"]\nENTRYPOINT [\"run\"]\n"
}