{
  "startTime": 1674240975229,
  "endTime": 1674240975346,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 15,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM squidex/dotnet:2.2-sdk-chromium-phantomjs-node as builder\n\nWORKDIR /src\n\n# Copy Node project files.\nCOPY src/Squidex/package*.json /tmp/\n\n# Install Node packages\nRUN cd /tmp && npm install --loglevel=error && npm cache clean --force;\n\n# Copy Dotnet project files.\nCOPY /**/**/*.csproj /tmp/\n# Copy nuget.config for package sources.\nCOPY NuGet.Config /tmp/\n\n# Install Dotnet packages\nRUN bash -c 'pushd /tmp; for p in *.csproj; do dotnet restore $p --verbosity quiet; true; done; popd'\n\nCOPY . .\n\n# Build Frontend\nRUN cp -a /tmp/node_modules src/Squidex/ \\\n && cd src/Squidex \\\n && npm run test:coverage \\\n && npm run build\n\n# Test Backend\nRUN dotnet test tests/Squidex.Infrastructure.Tests/Squidex.Infrastructure.Tests.csproj --filter Category!=Dependencies \\ \n && dotnet test tests/Squidex.Domain.Apps.Core.Tests/Squidex.Domain.Apps.Core.Tests.csproj \\ \n && dotnet test tests/Squidex.Domain.Apps.Entities.Tests/Squidex.Domain.Apps.Entities.Tests.csproj \\\n && dotnet test tests/Squidex.Domain.Users.Tests/Squidex.Domain.Users.Tests.csproj \\\n && dotnet test tests/Squidex.Web.Tests/Squidex.Web.Tests.csproj\n\n# Publish\nRUN dotnet publish src/Squidex/Squidex.csproj --output /out/ --configuration Release"
}