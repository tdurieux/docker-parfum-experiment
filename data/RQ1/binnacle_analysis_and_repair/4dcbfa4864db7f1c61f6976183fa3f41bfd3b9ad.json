{
  "startTime": 1674236151928,
  "endTime": 1674236151992,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# install wget to download golang source code\n# install git\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n    wget \\\n    git \\\n    make \\\n    gcc \\\n    vim \\\n    tree \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# set go version this image use\nENV GO_VERSION=1.12.6\nENV ARCH=amd64\n\n# install golang which version is GO_VERSION\nRUN wget --quiet https://storage.googleapis.com/golang/go${GO_VERSION}.linux-${ARCH}.tar.gz \\\n    && tar -C /usr/local -xzf go${GO_VERSION}.linux-${ARCH}.tar.gz \\\n    && rm go${GO_VERSION}.linux-${ARCH}.tar.gz\n\n# create GOPATH\nRUN mkdir /go\nENV GOPATH=/go\n\n# set go binary path to local $PATH\n# go binary path is /usr/local/go/bin\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nCOPY . /go/src/github.com/alibaba/pouch\n\nWORKDIR /go/src/github.com/alibaba/pouch\n\n# The environment is setup, when run what you need, just setup the CMD when `pouch run`\n# For example, this Dockerfile will build an image named `pouch-image`.\n# When running unit test, just execute `pouch run pouch-image make unit-test`.\n"
}