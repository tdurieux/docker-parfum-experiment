{
  "startTime": 1674242820699,
  "endTime": 1674242821053,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.2-cli-alpine\n\n# Needed for running Scrutinizer's ocular.phar\nRUN apk add --no-cache git\n\n# Install the Blackfire probe\nRUN version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") \\\n    && curl -f -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/alpine/amd64/$version \\\n    && mkdir -p /tmp/blackfire \\\n    && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp/blackfire \\\n    && mv /tmp/blackfire/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so \\\n    && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > $PHP_INI_DIR/conf.d/blackfire.ini \\\n    && rm -rf /tmp/blackfire /tmp/blackfire-probe.tar.gz\n\n# Install the Blackfire client (agent)\nRUN mkdir -p /tmp/blackfire \\\n    && curl -f -A \"Docker\" -L https://blackfire.io/api/v1/releases/client/linux_static/amd64 | tar zxp -C /tmp/blackfire \\\n    && mv /tmp/blackfire/blackfire /usr/bin/blackfire \\\n    && rm -Rf /tmp/blackfire\n\n# Instal Composer\nRUN apk --no-cache add zlib-dev \\\n    && docker-php-ext-install zip \\\n    && php -m | grep zip\nCOPY --from=composer:latest /usr/bin/composer /usr/local/bin/composer\n\n# Install PDO with MySQL and Sqlite support\nRUN php -m | grep sqlite\nRUN docker-php-ext-install pdo pdo_mysql \\\n    && php -m | grep mysql\n\n# Install Xdebug (for code coverage)\nRUN apk add --no-cache --virtual .build-dependencies $PHPIZE_DEPS \\\n    && pecl install xdebug \\\n    && docker-php-ext-enable xdebug \\\n    && apk --no-cache del .build-dependencies \\\n    && php -m | grep xdebug\n\nWORKDIR /app\n"
}