{
  "startTime": 1674239296229,
  "endTime": 1674239297175,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 153,
        "lineEnd": 155,
        "columnStart": 4,
        "columnEnd": 220
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 167,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 181,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 215,
        "lineEnd": 215,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 153,
        "lineEnd": 155,
        "columnStart": 4,
        "columnEnd": 220
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 167,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 181,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 62,
        "columnEnd": 79
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 212,
        "lineEnd": 212,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 240,
        "lineEnd": 240,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 56,
        "columnStart": 22,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 202,
        "lineEnd": 210,
        "columnStart": 27,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 217,
        "lineEnd": 226,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 240,
        "lineEnd": 240,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 240,
        "lineEnd": 240,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 202,
        "lineEnd": 210,
        "columnStart": 27,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 217,
        "lineEnd": 226,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 240,
        "lineEnd": 240,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 240,
        "lineEnd": 240,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER ramon@wartala.de\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        cmake \\\n        git \\\n        wget \\\n        libatlas-base-dev \\\n        libboost-all-dev \\\n        libfreetype6-dev \\\n        libgflags-dev \\\n        libgoogle-glog-dev \\\n        libhdf5-serial-dev \\\n        libleveldb-dev \\\n        liblmdb-dev \\\n        libopencv-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        libprotobuf-dev \\\n        libsnappy-dev \\\n        pkg-config \\\n        protobuf-compiler \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        groff \\\n        vim \\\n        zlib1g-dev \\\n        python-pydot \\\n        && \\\n    apt-get clean && \\\n    apt-get autoremove && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\n#RUN pip --no-cache-dir install \\\n#\t\tpyopenssl \\\n#\t\tndg-httpsclient \\\n#\t\tpyasn1\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\t\tpython-numpy \\\n\t\tpython-scipy \\\n\t\tpython-nose \\\n\t\tpython-h5py \\\n\t\tpython-skimage \\\n\t\tpython-matplotlib \\\n\t\tpython-pandas \\\n\t\tpython-sklearn \\\n\t\tpython-sympy \\\n    python-skimage \\\n    python-progressbar \\\n\t\t&& \\\n\tapt-get clean && \\\n\tapt-get autoremove && \\\n\trm -rf /var/lib/apt/lists/*\n\nRUN pip --no-cache-dir install --upgrade ipython && \\\n\tpip --no-cache-dir install \\\n\t\tCython \\\n\t\tipykernel \\\n\t\tjupyter \\\n\t\tpath.py \\\n\t\tPillow \\\n\t\tpygments \\\n\t\tsix \\\n\t\tsphinx \\\n\t\twheel \\\n\t\tzmq \\\n        protobuf \\\n        future \\\n\t\t&& \\\n\tpython -m ipykernel.kernelspec\n\n\n# Install Caffe\nRUN echo \"Installiere Caffe...\"\nENV CAFFE_ROOT=/opt/caffe\nWORKDIR $CAFFE_ROOT\n\n# FIXME: use ARG instead of ENV once DockerHub supports this\n# https://github.com/docker/hub-feedback/issues/460\nENV CLONE_TAG=1.0\n\nRUN git clone -b ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git . && \\\n    cd python && for req in $(cat requirements.txt) pydot; do pip install --no-cache-dir $req; done && cd .. && \\\n    mkdir build && cd build && \\\n    cmake -DCPU_ONLY=1 .. && \\\n    make -j\"$(nproc)\"\n\n# Install Caffe2\nRUN echo \"Installiere Caffe2...\"\nENV CAFFE2_ROOT /opt\nWORKDIR $CAFFE2_ROOT\nRUN cd $CAFFE2_ROOT\n\nRUN git clone https://github.com/caffe2/caffe2.git \\\n    && cd caffe2 \\\n    && git submodule deinit -f  third_party/cub \\\n    && rm -rf .git/modules/third_party/cub \\\n    && git rm -f third_party/cub \\\n    && git submodule update --recursive --remote \\\n    && git submodule update --init \\ \n    && mkdir build && cd build \\\n    && cmake .. \\\n    -DUSE_CUDA=OFF \\\n    -DUSE_NNPACK=OFF \\\n    -DUSE_ROCKSDB=OFF \\\n    && make -j\"$(nproc)\" install \\\n    && ldconfig \\\n    #&& make clean \\\n    && cd .. \\\n    #&& rm -rf build\n\n#RUN git clone --recursive https://github.com/caffe2/caffe2.git && \\\n\nRUN pip install --upgrade pip \\\n    && pip install --no-cache-dir numpy protobuf hypothesis tflearn\n\n########## INSTALLATION STEPS ###################\n#RUN cd caffe2 && \\\n#    make && \\\n#    cd build && \\\n#    make install\n\nENV PYTHONPATH /usr/local\nENV LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH\nRUN python -c 'from caffe2.python import core' 2>/dev/null && echo \"Success\" || echo \"Failure\"\n\n\n# Install TensorFlow\nRUN echo \"Installiere TensorFlow...\"\n\nARG TENSORFLOW_VERSION=1.1.0\nARG TENSORFLOW_ARCH=cpu\n\n# Install TensorFlow\nRUN pip --no-cache-dir install \\\n\thttps://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl\n\n# Install Java\nRUN echo \"Installiere Java 8...\"\nARG JAVA_MAJOR_VERSION=8\nARG JAVA_UPDATE_VERSION=131\nARG JAVA_BUILD_NUMBER=11\nENV JAVA_HOME /usr/jdk1.${JAVA_MAJOR_VERSION}.0_${JAVA_UPDATE_VERSION}\n\nENV PATH $PATH:$JAVA_HOME/bin\nRUN curl -f -sL --retry 3 --insecure \\\n  --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \\\n  \"https://download.oracle.com/otn-pub/java/jdk/${JAVA_MAJOR_VERSION}u${JAVA_UPDATE_VERSION}-b${JAVA_BUILD_NUMBER}/d54c1d3a095b4ff2b6607d096fa80163/server-jre-${JAVA_MAJOR_VERSION}u${JAVA_UPDATE_VERSION}-linux-x64.tar.gz\" \\\n  | gunzip \\\n  | tar x -C /usr/ \\\n  && ln -s $JAVA_HOME /usr/java \\\n  && rm -rf $JAVA_HOME/man\n\n# Install HADOOP\nRUN echo \"Installiere Hadoop...\"\nENV HADOOP_VERSION 2.7.3\nENV HADOOP_HOME /usr/hadoop-$HADOOP_VERSION\nENV HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop\nENV PATH $PATH:$HADOOP_HOME/bin\nRUN curl -f -sL --retry 3 \\\n  \"https://archive.apache.org/dist/hadoop/common/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz\" \\\n  | gunzip \\\n  | tar -x -C /usr/ \\\n && rm -rf $HADOOP_HOME/share/doc \\\n && chown -R root:root $HADOOP_HOME\n\n# Install SPARK\nRUN echo \"Installiere Spark...\"\nENV SPARK_VERSION 2.1.1\nENV SPARK_PACKAGE spark-${SPARK_VERSION}-bin-without-hadoop\nENV SPARK_HOME /usr/spark-${SPARK_VERSION}\nENV SPARK_DIST_CLASSPATH=\"$HADOOP_HOME/etc/hadoop/*:$HADOOP_HOME/share/hadoop/common/lib/*:$HADOOP_HOME/share/hadoop/common/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/hdfs/lib/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/yarn/lib/*:$HADOOP_HOME/share/hadoop/yarn/*:$HADOOP_HOME/share/hadoop/mapreduce/lib/*:$HADOOP_HOME/share/hadoop/mapreduce/*:$HADOOP_HOME/share/hadoop/tools/lib/*\"\nENV PATH $PATH:${SPARK_HOME}/bin\nRUN curl -f -sL --retry 3 \\\n  \"https://d3kbcqa49mib13.cloudfront.net/${SPARK_PACKAGE}.tgz\" \\\n  | gunzip \\\n  | tar x -C /usr/ \\\n && mv /usr/$SPARK_PACKAGE $SPARK_HOME \\\n && chown -R root:root $SPARK_HOME\n\n# Install BigDL\nRUN echo \"Installiere BigDL...\"\nRUN pip --no-cache-dir install BigDL==0.2.0 \\\n  seaborn \\\n  wordcloud\n\n# Install awscli\nRUN echo \"Installiere awscli...\"\nRUN pip --no-cache-dir install awscli\n\n# Install google cloud SDK\nRUN echo \"Installiere Google Cloud SDK...\"\nENV CLOUD_SDK_VERSION 165.0.0\n\nRUN apt-get -qqy update && apt-get install --no-install-recommends -qqy \\\n        curl \\\n        gcc \\\n        python-dev \\\n        python-setuptools \\\n        apt-transport-https \\\n        lsb-release \\\n        openssh-client \\\n        git \\\n    && easy_install -U pip && \\\n    pip install --no-cache-dir -U crcmod && \\\n    export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" && \\\n    echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" > /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n    curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y google-cloud-sdk=${CLOUD_SDK_VERSION}-0 \\\n        google-cloud-sdk-app-engine-python \\\n        google-cloud-sdk-app-engine-java \\\n        google-cloud-sdk-app-engine-go \\\n        google-cloud-sdk-datalab \\\n        google-cloud-sdk-datastore-emulator \\\n        google-cloud-sdk-pubsub-emulator \\\n        google-cloud-sdk-bigtable-emulator \\\n        google-cloud-sdk-cbt \\\n        kubectl && \\\n    gcloud config set core/disable_usage_reporting true && \\\n    gcloud config set component_manager/disable_update_check true && \\\n    gcloud config set metrics/environment github_docker_image && rm -rf /var/lib/apt/lists/*;\n\n# Install SparkNet\nRUN echo \"Installiere SparkNet...\"\nWORKDIR /opt\nRUN git clone https://github.com/amplab/SparkNet.git\nENV SPARKNET_HOME=/opt/SparkNet\nWORKDIR $SPARKNET_HOME\nRUN echo \"deb https://dl.bintray.com/sbt/debian /\" | tee -a /etc/apt/sources.list.d/sbt.list\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends sbt && rm -rf /var/lib/apt/lists/*;\n\n# Set up our notebook config.\nCOPY jupyter_notebook_config.py /root/.jupyter/\n\n# Copy sample notebooks.\nRUN mkdir /root/notebooks\nRUN mkdir /root/notebooks/kapitel1\nRUN mkdir /root/notebooks/kapitel2\nRUN mkdir /root/notebooks/kapitel3\nRUN mkdir /root/notebooks/kapitel4\nRUN mkdir /root/notebooks/kapitel5\nRUN mkdir /root/notebooks/kapitel6\nRUN mkdir /root/notebooks/kapitel7\nRUN mkdir /root/notebooks/kapitel8\n\n#COPY notebooks/kapitel1/* /root/notebooks/kapitel1/\n#COPY notebooks/kapitel2/* /root/notebooks/kapitel2/\n#COPY notebooks/kapitel3/* /root/notebooks/kapitel3/\nCOPY notebooks/kapitel4/* /root/notebooks/kapitel4/\nCOPY notebooks/kapitel5/* /root/notebooks/kapitel5/\nCOPY notebooks/kapitel6/* /root/notebooks/kapitel6/\n#COPY notebooks/kapitel7/* /root/notebooks/kapitel7/\n#COPY notebooks/kapitel8/* /root/notebooks/kapitel8/\n\n\n# Jupyter has issues with being run directly:\n#   https://github.com/ipython/ipython/issues/7062\n# We just add a little wrapper script.\nCOPY run_jupyter.sh /root/\n\n# TensorBoard port\nRUN echo \"TensorBoard nutzt Port 6006...\"\nEXPOSE 6006\n\nRUN echo \"Jupyter Notebook startet auf Port 8888...\"\nEXPOSE 8888\n\nRUN echo \"SparkUI nutzt Port 4040 und 4041...\"\nEXPOSE 4040\nEXPOSE 4041\n\nWORKDIR \"/root\"\nCMD [\"/bin/bash\"]\n"
}