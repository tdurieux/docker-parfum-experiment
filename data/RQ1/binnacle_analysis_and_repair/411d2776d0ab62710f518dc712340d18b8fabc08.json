{
  "startTime": 1674248126996,
  "endTime": 1674248127222,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 133
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.1-fpm\n\nARG PHP_TIMEZONE\nARG PHP_MEMORY_LIMIT\nARG USER_ID\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    openssl \\\n    git \\\n    unzip \\\n    libmagickwand-dev \\\n    inkscape && rm -rf /var/lib/apt/lists/*;\n\n# Install PHP extensions\nRUN docker-php-ext-install -j$(nproc) \\\n        pdo \\\n        pdo_mysql \\\n        opcache \\\n        zip\n\nRUN apt-get install --no-install-recommends -y libicu-dev \\\n    && docker-php-ext-configure intl \\\n    && docker-php-ext-install intl && rm -rf /var/lib/apt/lists/*;\n\nRUN pecl install \\ \n    xdebug \\\n    imagick\n\nRUN docker-php-ext-enable \\\n    xdebug \\\n    imagick\n\n# Install Blackfire\nRUN version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") \\\n    && curl -f -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \\\n    && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \\\n    && mv /tmp/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so \\\n    && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > $PHP_INI_DIR/conf.d/blackfire.ini && rm /tmp/blackfire-probe.tar.gz\n\n# Set timezone\nRUN ln -snf /usr/share/zoneinfo/${PHP_TIMEZONE} /etc/localtime && echo ${PHP_TIMEZONE} > /etc/timezone\n\n# Install composer\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nRUN php composer-setup.php\nRUN php -r \"unlink('composer-setup.php');\"\nRUN mv composer.phar /usr/local/bin/composer\nCOPY composer/config.json /var/www/.composer/config.json\n\n# Copy xdebug and php config.\nCOPY conf.d/* /usr/local/etc/php/conf.d/\n\n# Map user id from host user when it's provided\nRUN if [ ! -z ${USER_ID} ]; then usermod -u ${USER_ID} www-data; fi\nRUN if [ ! -z ${USER_ID} ]; then groupmod -g ${USER_ID} www-data; fi\n\n# set default user and working directory\nUSER www-data\nWORKDIR /var/www/project\n"
}