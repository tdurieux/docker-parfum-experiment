{
  "startTime": 1674244063390,
  "endTime": 1674244063996,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nLABEL maintainer \"Andrew Beers <andrew_beers@alumni.brown.edu>\"\n\nARG TENSORFLOW_VERSION=1.11.0\nARG TENSORFLOW_ARCH=gpu\nARG KERAS_VERSION=2.2.4\n\n# Install some dependencies\n# Install basic packages and miscellaneous dependencies\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    liblapack-dev \\\n    libopenblas-dev \\\n    libzmq3-dev \\\n    python3 \\\n    python3-dev \\\n    python3-pip \\\n    python3-setuptools \\\n    python3-tk && rm -rf /var/lib/apt/lists/*;\n\n# Install Pillow (PIL) dependencies\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    libfreetype6-dev \\\n    libjpeg-dev \\\n    liblcms2-dev \\\n    libopenjpeg-dev \\\n    libpng12-dev \\\n    libtiff5-dev \\\n    libwebp-dev \\\n    zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install support functions\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    curl \\\n    git \\\n    wget \\\n    cmake && rm -rf /var/lib/apt/lists/*;\n\n# Cleanup Installs\nRUN apt-get clean && \\\n    apt-get autoremove && \\\n    rm -rf /var/lib/apt/lists/* && \\\n# Link BLAS library to use OpenBLAS using the alternatives mechanism (https://www.scipy.org/scipylib/building/linux.html#debian-ubuntu)\n    update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n\n# Install pip\nRUN pip3 install --no-cache-dir --upgrade \\\n    setuptools \\\n    pip\n\n# Add SNI support to Python\nRUN pip3 --no-cache-dir install \\\n        pyopenssl \\\n        ndg-httpsclient \\\n        pyasn1\n\n# Install other useful Python packages using pip\nRUN pip3 --no-cache-dir install --upgrade ipython && \\\n    pip3 --no-cache-dir install \\\n        Cython \\\n        ipykernel \\\n        jupyter \\\n        path.py \\\n        Pillow \\\n        pygments \\\n        six \\\n        sphinx \\\n        wheel \\\n        zmq \\\n        && \\\n    python3 -m ipykernel.kernelspec\n\n# Install TensorFlow\n# For specific installations -- TODO, peg a version of Tensorflow.\n# RUN pip --no-cache-dir install \\\n    # https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow_${TENSORFLOW_ARCH}-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl\n# Generic.\nRUN pip3 --no-cache-dir install tensorflow-gpu==${TENSORFLOW_VERSION}\n\n# Install Keras\nRUN pip --no-cache-dir install git+git://github.com/fchollet/keras.git@${KERAS_VERSION}\n\n# Install Additional Packages for DeepNeuro\nRUN apt-get update -y\nRUN apt-get install --no-install-recommends graphviz -y && rm -rf /var/lib/apt/lists/*;\nRUN pip3 --no-cache-dir install pydot\nRUN pip3 --no-cache-dir install pandas --upgrade\nRUN pip3 --no-cache-dir install numexpr --upgrade\nRUN pip3 --no-cache-dir install nibabel pydicom lycon tqdm pynrrd tables imageio matplotlib\n\n# Install Slicer\n RUN SLICER_URL=\"http://download.slicer.org/bitstream/561384\" && \\\n    curl -f -v -s -L $SLICER_URL | tar xz -C /tmp && \\\n    mv /tmp/Slicer* /opt/slicer\n\n# Install ANTS\n# WORKDIR /home\n# RUN wget \"https://github.com/stnava/ANTs/releases/download/v2.1.0/Linux_Ubuntu14.04.tar.bz2\" && \\\n  # DEBIAN_FRONTEND=noninteractive apt-get install -y --force-yes bzip2 && \\\n  # tar -C /usr/local -xjf Linux_Ubuntu14.04.tar.bz2 && \\\n  # rm Linux_Ubuntu14.04.tar.bz2\n\n# Python 2.7\nWORKDIR /usr/src\nENV PYTHON_VERSION 2.7.10\nRUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz && \\\n  tar xvzf Python-${PYTHON_VERSION}.tgz && \\\n  cd Python-${PYTHON_VERSION} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make -j$(grep -c processor /proc/cpuinfo) && \\\n  make install && \\\n  cd .. && rm -rf Python-${PYTHON_VERSION}* && rm Python-${PYTHON_VERSION}.tgz\n\n# Build and install dcmqi\n\nWORKDIR /usr/src\nENV PYTHON_VERSION 2.7.10\nRUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz && \\\n  tar xvzf Python-${PYTHON_VERSION}.tgz && \\\n  cd Python-${PYTHON_VERSION} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make -j$(grep -c processor /proc/cpuinfo) && \\\n  make install && \\\n  cd .. && rm -rf Python-${PYTHON_VERSION}* && rm Python-${PYTHON_VERSION}.tgz\n\nWORKDIR /usr/src\nRUN git clone https://github.com/QIICR/dcmqi.git && \\\n  mkdir dcmqi-superbuild && \\\n  cd dcmqi-superbuild && \\\n  cmake -DCMAKE_INSTALL_PREFIX=/usr ../dcmqi && \\\n  make -j$(grep -c processor /proc/cpuinfo)\n\n# Environmental Variables\nENV PATH \"$PATH:/opt/slicer\"\nENV PATH \"$PATH:/usr/local/ANTs.2.1.0.Debian-Ubuntu_X64\"\n\n# Install DeepNeuro. Scikit-image has installation problems with EasyInstall and setup.py\nRUN git clone https://github.com/QTIM-Lab/DeepNeuro /home/DeepNeuro\nWORKDIR /home/DeepNeuro\n\n# TODO: Check if Docker has solved this checkpointing problem.\nRUN echo 60\nRUN git pull\nRUN python3 /home/DeepNeuro/setup.py develop\n\n# Commands at startup.\nWORKDIR \"/\"\nRUN chmod 777 /home/DeepNeuro/entrypoint.sh\nENTRYPOINT [\"/home/DeepNeuro/entrypoint.sh\"]\n"
}