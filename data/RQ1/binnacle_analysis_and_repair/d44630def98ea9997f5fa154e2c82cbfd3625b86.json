{
  "startTime": 1674236223707,
  "endTime": 1674236223900,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 102,
        "columnEnd": 131
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 286
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 286
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 286
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 310
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "# to build a final game image that only contains the cooked game executable\n# and support for openGL applications (observable from outside the container via an xwindow server)\nARG base_img=ducandu/ue4_alien_invaders:build\n\n# the base image to copy from\nFROM $base_img AS game_img\n\n\nFROM ubuntu:xenial\n\nARG game=AlienInvaders\n#ENV DEFAULT_DOCKCROSS_IMAGE thewtex/opengl\n\n# - install minimal python tools to be able to run plugin UnrealEnginePython\n# - install xwindow server (to look at graphics inside the container)\n# - install\nRUN apt-get update\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y git libgl1-mesa-dri mesa-utils menu net-tools openbox python-pip sudo supervisor python3 python3-dev python3-pip python3-setuptools vim tint2 x11-xserver-utils x11vnc xinit xserver-xorg-video-dummy xserver-xorg-input-void websockify && rm -rf /var/lib/apt/lists/*;\nRUN rm -f /usr/share/applications/x11vnc.desktop\nRUN apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;\nRUN apt-get remove -y python-pip && wget https://bootstrap.pypa.io/get-pip.py && python get-pip.py && pip install --no-cache-dir supervisor-stdout\nRUN pip3 install --no-cache-dir numpy msgpack msgpack-numpy pydevd\nRUN apt-get install --no-install-recommends -y gdb && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y clean\n\nCOPY docker/ue4_game_exec/etc/skel/.xinitrc /etc/skel/.xinitrc\n\nRUN useradd -m -s /bin/bash ue4\nRUN echo \"user ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/ue4\n\nUSER ue4\nRUN cp /etc/skel/.xinitrc /home/ue4/\n\nUSER root\nRUN git clone https://github.com/kanaka/noVNC.git /opt/noVNC && \\\n  cd /opt/noVNC && \\\n  git checkout 6a90803feb124791960e3962e328aa3cfb729aeb && \\\n  ln -s vnc_auto.html index.html\n\n# noVNC (http server) is on 6080, and the VNC server is on 5900, and the UE4 Game on 6025\nEXPOSE 6080 5900 6025\n\nCOPY docker/ue4_game_exec/etc /etc\nCOPY docker/ue4_game_exec/usr /usr\n\nENV DISPLAY :0\n\n# change to new user\nUSER ue4\nWORKDIR /home/ue4\n\nRUN mkdir -p Games\nWORKDIR Games\nENV DISPLAY :0\nENV GAME=$game\nRUN echo \"GAME=${GAME}\"\n\n# just copy the cooked game\nCOPY --from=game_img --chown=ue4:ue4 /home/ue4/UnrealEngine/${GAME}/Build/LinuxNoEditor ./\n# and the python scripts\nRUN mkdir -p AlienInvaders/Content/Scripts\nCOPY --from=game_img --chown=ue4:ue4 /home/ue4/UnrealEngine/${GAME}/Content/Scripts ${GAME}/Content/Scripts/\n\n# add to PYTHONPATH: Games/[the GAME]/Content/Scripts\nENV PYTHONPATH=/home/ue4/Games/${GAME}/Content/Scripts\n\n# setup mesa to use the correct openGL and GLSL (shader language) versions (UE4 does not support any openGL-3)\n# FOR NOW: leave openGL 3 (4 doesn't seem to work with current UE4)\n#ENV MESA_GLSL_VERSION_OVERRIDE=430\n#ENV MESA_GL_VERSION_OVERRIDE=4.3\n# also make sure we are using software rendering (no GPU)\nENV LIBGL_ALWAYS_SOFTWARE=true\n# and use the correct mesa software gallium driver (llvm)\nENV GALLIUM_DRIVER=\"llvmpipe\"\n\n# run this container (detached) and with port 6025 open for listening with (no need for --network option!!):\n# `docker run -it --name [e.g aliens] -p 6080:6080 -p 6025:6025 ducandu/ue4_[game]:exec`\n\nUSER root\nWORKDIR /root\n\n# run the game through the supervisor\nENV APP \"/home/ue4/Games/${GAME}.sh -nosound -opengl3\"\n\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n\n"
}