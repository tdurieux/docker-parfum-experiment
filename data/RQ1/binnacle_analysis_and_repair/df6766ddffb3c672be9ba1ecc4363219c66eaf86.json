{
  "startTime": 1674251457909,
  "endTime": 1674251458130,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# A Docker image capable of running all GRR components.\n#\n# See https://hub.docker.com/r/grrdocker/grr/\n#\n# We have configured Travis to trigger an image build every time a new server\n# deb is been uploaded to GCS.\n#\n# Run the container with:\n#\n# docker run \\\n#    -e EXTERNAL_HOSTNAME=\"localhost\" \\\n#    -e ADMIN_PASSWORD=\"demo\" \\\n#    -p 0.0.0.0:8000:8000 \\\n#    -p 0.0.0.0:8080:8080 \\\n#    grrdocker/grr\n\nFROM ubuntu:xenial\n\nLABEL maintainer=\"grr-dev@googlegroups.com\"\n\nARG GCS_BUCKET\nARG GRR_COMMIT\n\nENV GRR_VENV /usr/share/grr-server\nENV PROTOC /usr/share/protobuf/bin/protoc\nENV DEBIAN_FRONTEND noninteractive\n# Buffering output (sometimes indefinitely if a thread is stuck in\n# a loop) makes for a non-optimal user experience when containers\n# are run in the foreground, so we disable that.\nENV PYTHONUNBUFFERED=0\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y \\\n  debhelper \\\n  default-jre \\\n  dpkg-dev \\\n  git \\\n  libffi-dev \\\n  libssl-dev \\\n  python-dev \\\n  python-pip \\\n  rpm \\\n  wget \\\n  zip \\\n  mysql-server \\\n  python-mysqldb && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --upgrade --no-cache-dir pip virtualenv && \\\n    virtualenv --system-site-packages $GRR_VENV\n\n# Install proto compiler\nRUN mkdir -p /usr/share/protobuf && \\\ncd /usr/share/protobuf && \\\nwget --quiet \"https://github.com/google/protobuf/releases/download/v3.6.1/protoc-3.6.1-linux-x86_64.zip\" && \\\nunzip protoc-3.6.1-linux-x86_64.zip && \\\nrm protoc-3.6.1-linux-x86_64.zip\n\nRUN $GRR_VENV/bin/pip install --upgrade --no-cache-dir wheel six setuptools nodeenv && \\\n    $GRR_VENV/bin/nodeenv -p --prebuilt --node=10.12.0 && \\\n    echo '{ \"allow_root\": true }' > /root/.bowerrc\n\n# Copy the GRR code over.\nADD . /usr/src/grr\n\nRUN cd /usr/src/grr && /usr/src/grr/docker/install_grr_from_gcs.sh\n\nENTRYPOINT [\"/usr/src/grr/docker/docker-entrypoint.sh\"]\n\n# Port for the admin UI GUI\nEXPOSE 8000\n\n# Port for clients to talk to\nEXPOSE 8080\n\n# Directories used by GRR at runtime, which can be mounted from the host's\n# filesystem. Note that volumes can be mounted even if they do not appear in\n# this list.\nVOLUME [\"/usr/share/grr-server/install_data/etc\"]\n\nCMD [\"grr\"]\n"
}