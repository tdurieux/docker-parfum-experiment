{
  "startTime": 1674249269728,
  "endTime": 1674249269890,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 18,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 19,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 13,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM 40ants/base-lisp-image:0.6.0-sbcl-bin as base\n\nEXPOSE 80\nEXPOSE 4005\n\n# These a dev dependencies to simplify log reading and support\n# file search from remote Emacs.\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n            python-pip \\\n            silversearcher-ag \\\n            lsof \\\n            postgresql-client && \\\n    pip install --no-cache-dir jsail dumb-init && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /tmp/s6 && cd /tmp/s6 && \\\n    git clone https://github.com/skarnet/skalibs && \\\n    cd skalibs && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make install && cd /tmp/s6 && \\\n    git clone https://github.com/skarnet/execline && \\\n    cd execline && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make install && cd /tmp/s6 && \\\n    git clone https://github.com/skarnet/s6 && \\\n    cd s6 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make install && \\\n    cd / && rm -fr /tmp/s6\n\nENV CC=gcc\nCOPY qlfile qlfile.lock app-deps.asd /app/\nRUN install-dependencies\n\nCOPY . /app\n\nRUN ~/.roswell/bin/qlot exec ros build /app/roswell/worker.ros && mv /app/roswell/worker /app/worker\nRUN ~/.roswell/bin/qlot exec ros build /app/roswell/ultralisp-server.ros && mv /app/roswell/ultralisp-server /app/ultralisp-server\n\nENTRYPOINT [\"/usr/local/bin/dumb-init\", \"--\"]\nCMD [\"/app/docker/entrypoint.sh\"]\n\n\n# Next stage is for development only\nFROM base as worker\nCOPY ./docker/s6 /etc/s6\nENTRYPOINT [\"s6-svscan\", \"/etc/s6\"]\n\n\n# Next stage is for development only\nFROM base as dev\nRUN ros install 40ants/gen-deps-system\nENTRYPOINT [\"/app/docker/dev-entrypoint.sh\"]\n\n# To run Mito commands\nFROM dev as mito\nRUN ros install svetlyak40wt/mito/add-host-argument\n\n# https://medium.com/the-code-review/how-to-use-entrypoint-with-docker-and-docker-compose-1c2062aa17a2\nENTRYPOINT [\"/app/docker/mito.sh\"]\n\n\nFROM postgres:10 as db-ops\nCOPY ./docker/dev-entrypoint.sh /entrypoint.sh\nWORKDIR /\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}