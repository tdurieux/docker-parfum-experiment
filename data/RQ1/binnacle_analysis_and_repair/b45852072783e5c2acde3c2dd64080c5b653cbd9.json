{
  "startTime": 1674238967384,
  "endTime": 1674238967848,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 96,
        "columnEnd": 124
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 83,
        "columnEnd": 114
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM amazonlinux:latest\nENV SCALA_VERSION=\"2.11.12\"\nWORKDIR /build/\n\nRUN yum install -y -q -e 0 java-1.8.0 && \\\n    yum install -y -q -e 0 tar.x86_64 && \\\n    yum install -y -q -e 0 gzip gunzip && rm -rf /var/cache/yum\n\nRUN curl -f -O http://downloads.typesafe.com/scala/${SCALA_VERSION}/scala-${SCALA_VERSION}.tgz\nRUN ls -al\nRUN tar -xzvf scala-${SCALA_VERSION}.tgz && \\\n    rm -rf scala-${SCALA_VERSION}.tgz && \\\n    echo \"export SCALA_HOME=/home/ec2-user/scala-${SCALA_VERSION}\" >> ~/.bashrc && \\\n    echo \"export PATH=$PATH:/home/ec2-user/scala-${SCALA_VERSION}/bin\" >> ~/.bashrc\n\n#SBT\nRUN curl -f https://bintray.com/sbt/rpm/rpm | tee /etc/yum.repos.d/bintray-sbt-rpm.repo\n\nRUN yum install -y -q -e 0 sbt && rm -rf /var/cache/yum\n\nWORKDIR /build/warm/\n\nADD warm/build.sbt warm/main.scala /build/warm/\nADD warm/project/build.properties warm/project/plugin.sbt /build/warm/project/\n\nRUN sbt compile\n\nWORKDIR /build/runtime/\n\nRUN yum install -y -q yum-utils && rm -rf /var/cache/yum\nRUN yum-config-manager --enable epel > /dev/null\nRUN yum -y update\nRUN yum -y group install \"development tools\"\n\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && rm -rf /var/cache/yum\nRUN echo $'[alonid-llvm-3.9.0] \\n\\\nname=Copr repo for llvm-3.9.0 owned by alonid \\n\\\nbaseurl=https://copr-be.cloud.fedoraproject.org/results/alonid/llvm-3.9.0/epel-7-$basearch/ \\n\\\ntype=rpm-md \\n\\\nskip_if_unavailable=True \\n\\\ngpgcheck=1 \\n\\\ngpgkey=https://copr-be.cloud.fedoraproject.org/results/alonid/llvm-3.9.0/pubkey.gpg \\n\\\nrepo_gpgcheck=0 \\n\\\nenabled=1 \\n\\\nenabled_metadata=1' >> /etc/yum.repos.d/epel.repo\nRUN yum install -y clang-3.9.0 && rm -rf /var/cache/yum\nRUN yum install -y llvm-3.9.0 llvm-3.9.0-devel && rm -rf /var/cache/yum\nRUN yum install -y zip which libunwind libunwind-devel python-pip jq libcurl-devel && rm -rf /var/cache/yum\nRUN pip install --no-cache-dir awscli\nRUN mkdir -p /build/runtime/lib/ && cp /usr/lib64/libunwind.so /build/runtime/lib/libunwind.so.8 && cp /usr/lib64/libunwind-x86_64.so.8 /build/runtime/lib/libunwind-x86_64.so.8\n\nRUN yum install -y libidn libidn-devel && cp /usr/lib64/libidn.so.11 lib/libidn.so.11 && rm -rf /var/cache/yum\nRUN yum install -y git make openssl-devel && rm -rf /var/cache/yum\n\nRUN curl -f -O -L https://github.com/curl/curl/releases/download/curl-7_62_0/curl-7.62.0.tar.gz && tar -zxvf curl-7.62.0.tar.gz && rm curl-7.62.0.tar.gz\nRUN curl -f -O -L https://github.com/openssl/openssl/archive/OpenSSL_1_0_2l.tar.gz && tar -zxvf OpenSSL_1_0_2l.tar.gz && rm OpenSSL_1_0_2l.tar.gz\n\nRUN git clone https://github.com/google/re2.git\n\nWORKDIR /build/runtime/re2/\n\nENV LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH\nENV PATH=\"/opt/llvm-3.9.0/bin:${PATH}\" CXX=/opt/llvm-3.9.0/bin/clang++ LDFLAGS=\"-static-libstdc++\"\n\nRUN make && make install\nRUN cp /usr/local/lib/libre2.so.0 /build/runtime/lib/libre2.so.0\n\nWORKDIR /build/runtime/openssl-OpenSSL_1_0_2l\n\nRUN ./config --prefix=/opt/lib/ssl --openssldir=/opt/lib/ssl shared zlib\nRUN make && make install\n\nWORKDIR /build/runtime/curl-7.62.0/\nENV LD_LIBRARY_PATH=/opt/lib:/usr/lib64:$LD_LIBRARY_PATH\nRUN mkdir -p /build/runtime/lib/ssl && cp -r /opt/lib/ssl/lib /build/runtime/lib/ssl/lib\n\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$(/build/runtime) --with-ssl=/opt/lib/ssl && make && make install\n# RUN cp /lib/libcurl.so.4  /build/runtime/lib/libcurl.so.4 && cp /usr/lib64/libcrypto.so.10 /build/runtime/lib/libcyrpto.so.10 && cp /usr/lib64/libssl.so.10 /build/runtime/lib/libssl.so.10\nRUN cp /lib/libcurl.so.4  /build/runtime/lib/libcurl.so.4 && cp /opt/lib/ssl/lib/libcrypto.so.1.0.0 /build/runtime/lib/libcrypto.so.1.0.0 && cp /opt/lib/ssl/lib/libssl.so.1.0.0 /build/runtime/lib/libssl.so.1.0.0\n\nWORKDIR /build/runtime/\n\nADD bootstrap /build/runtime/\nRUN zip runtime.zip bootstrap lib/libunwind.so.8 lib/libunwind-x86_64.so.8 lib/libre2.so.0 lib/libidn.so.11 lib/libcurl.so.4 lib/libcrypto.so.1.0.0 lib/libssl.so.1.0.0\nRUN mkdir -p /build/main\n\nADD *.sh /build/main/\nENV LD_LIBRARY_PATH=/opt/lib/ssl/lib:/usr/local/lib:$LD_LIBRARY_PATH PATH=\"/opt/llvm-3.9.0/bin:${PATH}\"\nWORKDIR /build/main/\n\n# WORKDIR /build/main/\n# ADD project/build.properties project/plugin.sbt /build/main/project/\n# ADD build.sbt *.scala scripts/init.sh scripts/update.sh scripts/delete.sh scripts/invoke.sh /build/main/\n\n# ENV LD_LIBRARY_PATH=/opt/lib/ssl/lib:/usr/local/lib:$LD_LIBRARY_PATH\n# ENV PATH=\"/opt/llvm-3.9.0/bin:${PATH}\"\n\n# RUN sbt nativeLink\n\n# RUN zip function.zip target/scala-2.11/main-out\n\n# ENV FUNCTION_NAME=native_test RUNTIME_NAME=native_test_runtime\n"
}