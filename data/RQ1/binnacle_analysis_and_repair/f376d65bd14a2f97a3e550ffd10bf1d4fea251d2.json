{
  "startTime": 1674252614738,
  "endTime": 1674252614991,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lablup/kernel-base:python3.6 as python-binary\nFROM lablup/common-bazel:0.11-ubuntu as bazel-binary\n\n# Build target: lablup/common-tensorflow:1.7-py36-gpu\nFROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n\n# Install system package dependencies\n# NOTE: running bazel requires JDK, not JRE!\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends openjdk-8-jdk-headless && \\\n    apt-get install -y --no-install-recommends \\\n        imagemagick \\\n        graphviz \\\n        cmake \\\n        curl \\\n        build-essential \\\n        perl \\\n\tpkg-config \\\n        rsync \\\n        sed \\\n        swig \\\n        git-core \\\n        zip unzip \\\n\tzip && \\\n     rm -rf /var/lib/apt/lists/*\n\nCOPY --from=bazel-binary /usr/local/bin/bazel /usr/local/bin/\nCOPY --from=python-binary /python.tar.gz /\nRUN cd /; tar xzpf python.tar.gz; rm python.tar.gz; ldconfig\n\n# Check Bazel/Python is runnable.\n# Also install TensorFlow build dependencies (ensure we have proper numpy)\nRUN bazel version; python -c \"import sys; print(sys.prefix); print(sys.version_info)\" && \\\n    pip install --no-cache-dir wheel numpy\n\n# The TensorFlow version\nENV TF_VERSION 1.7\n\n# NOTE: python should be linked to python3\nRUN : build TensorFlow pip package \\\n    && cd /tmp \\\n    && curl -f -SL https://github.com/tensorflow/tensorflow/archive/r${TF_VERSION}.tar.gz \\\n        | tar xzf -\nRUN echo \"/usr/local/cuda/lib64/stubs\" > /etc/ld.so.conf.d/nvidia-stubs.conf && \\\n    LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH} \\\n    ldconfig\n\nRUN : build TensorFlow pip package && \\\n    cd /tmp && \\\n    curl -f -SL https://github.com/tensorflow/tensorflow/archive/r${TF_VERSION}.tar.gz \\\n        | tar xzf - && \\\n    cd /tmp/tensorflow-r${TF_VERSION} && \\\n        PYTHON_BIN_PATH=/usr/local/bin/python \\\n        PYTHON_LIB_PATH=/usr/local/lib/python3.6/site-packages \\\n        GCC_HOST_COMPILER_PATH=/usr/bin/gcc \\\n        CC_OPT_FLAGS=\"-march=x86-64 -mavx -mavx2 -mfma -mfpmath=both -msse4.1 -msse4.2\" \\\n        TF_NEED_JEMALLOC=1 \\\n        TF_NEED_GCP=1 \\\n        TF_NEED_HDFS=1 \\\n        TF_ENABLE_XLA=1 \\\n        TF_NEED_VERBS=0 \\\n        TF_NEED_OPENCL=0 \\\n        TF_NEED_OPENCL_SYCL=0 \\\n        TF_NEED_CUDA=1 \\\n        TF_CUDA_CLANG=0 \\\n        TF_DOWNLOAD_CLANG=0 \\\n        TF_NEED_TENSORRT=0 \\\n        TF_NEED_MPI=0 \\\n        TF_NEED_GDR=0 \\\n        TF_NEED_S3=1 \\\n        TF_NEED_KAFKA=0 \\\n        TF_SET_ANDROID_WORKSPACE=0 \\\n        TF_CUDA_VERSION=9.0 \\\n        TF_CUDNN_VERSION=7 \\\n        TF_NCCL_VERSION=2 \\\n        TF_CUDA_COMPUTE_CAPABILITIES=3.5,3.7,5.2,6.0,6.1 \\\n        CUDA_TOOLKIT_PATH=/usr/local/cuda \\\n        CUDNN_INSTALL_PATH=/usr/local/cuda \\\n        NCCL_INSTALL_PATH=/usr \\\n    bash configure && \\\n    cd /tmp/tensorflow-r${TF_VERSION}; \\\n    sed -r -i'' \"s@http://www.sqlite.org@https://www.sqlite.org@\" tensorflow/workspace.bzl ; \\\n    PYTHON_BIN_PATH=/usr/local/bin/python \\\n    PYTHON_LIB_PATH=/usr/local/lib/python3.6/site-packages \\\n    bazel fetch //tensorflow/tools/pip_package:build_pip_package\n\nRUN cd /tmp/tensorflow-r${TF_VERSION}; \\\n    PYTHON_BIN_PATH=/usr/local/bin/python \\\n    PYTHON_LIB_PATH=/usr/local/lib/python3.6/site-packages \\\n    bazel build \\\n        --config=opt --config=cuda \\\n        --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" \\\n        //tensorflow/tools/pip_package:build_pip_package && \\\n    ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg && \\\n    rm /usr/local/cuda/lib64/stubs/libcuda.so.1 && \\        \n    rm -rf /root/.cache && \\\n    ls -lh /tmp/tensorflow_pkg\n\n# vim: ft=dockerfile sts=4 sw=4 et tw=0\n\n"
}