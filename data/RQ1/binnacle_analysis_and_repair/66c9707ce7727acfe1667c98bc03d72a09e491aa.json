{
  "startTime": 1674235886872,
  "endTime": 1674235887642,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 23,
        "columnEnd": 43
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 5,
        "columnEnd": 23
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 7,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 7,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 7,
        "columnEnd": 102
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2017 Sony Corporation. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM ubuntu:16.04\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        bzip2 \\\n        ca-certificates \\\n        ccache \\\n        clang-format-3.8 \\\n        curl \\\n        g++ \\\n        git \\\n        libarchive-dev \\\n        libhdf5-dev \\\n        make \\\n        unzip \\\n        wget \\\n        zip \\\n        emacs \\\n        python-pip \\\n    && cd / \\\n    && rm -rf /tmp/* && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir setuptools\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir six\nRUN pip install --no-cache-dir PyYAML\nRUN pip install --no-cache-dir Mako\n\nENV BUILD_DIR /usr/local/src\n\n##### Install CMAKE #####\nENV CMAKE_URL https://cmake.org/files/v3.11/cmake-3.11.3.tar.gz\nRUN cd ${BUILD_DIR} && curl -f -O ${CMAKE_URL} \\\n  && tar zxvf cmake*.tar.gz \\\n  && rm cmake*.tar.gz \\\n  && cd cmake* \\\n  && ./bootstrap \\\n  && make \\\n  && make install\n\n\n##### Download and Install Android NDK #####\nENV NDK_NAME android-ndk-r16b\nENV NDK_URL https://dl.google.com/android/repository/${NDK_NAME}-linux-x86_64.zip\nRUN cd ${BUILD_DIR} \\\n  && curl -f -O ${NDK_URL} \\\n  && unzip ${NDK_NAME}-linux-x86_64.zip \\\n  && rm -f ${NDK_NAME}-linux-x86_64.zip \\\n  && mv ${NDK_NAME} android-ndk\nENV NDK_PATH ${BUILD_DIR}/android-ndk\n\nENV PROTOVER 3.1.0\n################################################## protobuf\nRUN mkdir /tmp/deps \\\n    && cd /tmp/deps \\\n    && curl -f -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz \\\n    && tar xvf protobuf-v${PROTOVER}.tar.gz \\\n    && cd protobuf-${PROTOVER} \\\n    && mkdir build \\\n    && cd build \\\n    && cmake \\\n        -DCMAKE_POSITION_INDEPENDENT_CODE=ON \\\n        -Dprotobuf_BUILD_TESTS=OFF \\\n        ../cmake \\\n    && make \\\n    && make install \\\n    && cd / \\\n    && rm -rf /tmp/* && rm protobuf-v${PROTOVER}.tar.gz\n\nRUN mkdir -p /usr/local/android\nRUN chmod -R a+rw /usr/local/android\n\nARG ANDROID_PLATFORM\nARG ANDROID_ARCHITECTURE\nARG ANDROID_CMAKE_SYSTEM_NAME\nARG ANDROID_EABI\n\nENV SYSTEM_PYTHON /usr/bin/python\nENV SYSTEM_PROTOC /usr/local/bin/protoc\nENV NDK_PATH /usr/local/src/android-ndk\n\nENV PLATFORM ${ANDROID_PLATFORM}\nENV ARCHITECTURE ${ANDROID_ARCHITECTURE}\nENV CMAKE_SYSTEM_NAME ${ANDROID_CMAKE_SYSTEM_NAME}\nENV EABI ${ANDROID_EABI}\nENV TOOLCHAIN_INSTALL_DIR /usr/local/android/${ARCHITECTURE}\nENV GCC ${CMAKE_SYSTEM_NAME}-gcc\nENV GCXX ${CMAKE_SYSTEM_NAME}-c++\nENV SYSROOT ${NDK_PATH}/platforms/${PLATFORM}/arch-${ARCHITECTURE}\n\n\nRUN sh $NDK_PATH/build/tools/make-standalone-toolchain.sh --platform=$PLATFORM --arch=$ARCHITECTURE --install-dir=$TOOLCHAIN_INSTALL_DIR\nENV CC ${GCC}\nENV CXX ${GCXX}\nENV PATH ${TOOLCHAIN_INSTALL_DIR}/bin:${PATH}\n\nRUN cd /tmp \\\n    && curl -f -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz \\\n    && tar xvf protobuf-v${PROTOVER}.tar.gz \\\n    && cd protobuf-${PROTOVER} \\\n    && mkdir build \\\n    && cd build \\\n    && cmake  -DCMAKE_TOOLCHAIN_FILE=$NDK_PATH/build/cmake/android.toolchain.cmake \\\n              -DANDROID_TOOLCHAIN=clang \\\n              -DCMAKE_SYSTEM_NAME=$CMAKE_SYSTEM_NAME \\\n              -DCMAKE_POSITION_INDEPENDENT_CODE=ON \\\n              -Dprotobuf_BUILD_TESTS=OFF \\\n              -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN_INSTALL_DIR \\\n              -DANDROID_STL=c++_static \\\n              -DANDROID_ABI=$EABI \\\n              ../cmake \\\n    && $TOOLCHAIN_INSTALL_DIR/bin/make \\\n    && $TOOLCHAIN_INSTALL_DIR/bin/make install && rm protobuf-v${PROTOVER}.tar.gz\n\n\nRUN cd /tmp \\\n    && set -xe \\\n    && curl -f -L https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz -o libarchive-3.3.2.tar.gz \\\n    && tar xf libarchive-3.3.2.tar.gz \\\n    && cd libarchive-3.3.2 \\\n    && sed -i \"/INCLUDE(CheckTypeSize)/aINCLUDE_DIRECTORIES(/tmp/libarchive-3.3.2/contrib/android/include/)\" \\\n       CMakeLists.txt \\\n    && cmake  \\\n       -DCMAKE_TOOLCHAIN_FILE=$NDK_PATH/build/cmake/android.toolchain.cmake \\\n       -DANDROID_TOOLCHAIN=clang \\\n       -DCMAKE_SYSTEM_NAME=$CMAKE_SYSTEM_NAME \\\n       -DCMAKE_POSITION_INDEPENDENT_CODE=ON \\\n       -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN_INSTALL_DIR \\\n       -DENABLE_TEST=OFF \\\n       -DANDROID_STL=c++_static \\\n       -DANDROID_ABI=$EABI . \\\n    && sed -i \"/#define HAVE_STATFS 1/a#define HAVE_STATVFS 1\" config.h \\\n    && sed -i \"/#include \\\"passphrase.h\\\"/a#ifdef ANDROID\\nint wctomb(char *s, wchar_t wc) { return wcrtomb(s,wc,NULL); }\\nint mbtowc(wchar_t *pwc, const char *s, size_t n) { return mbrtowc(pwc, s, n, NULL); }\\n#endif\" tar/util.c \\\n    && $TOOLCHAIN_INSTALL_DIR/bin/make \\\n    && $TOOLCHAIN_INSTALL_DIR/bin/make install \\\n    && cp /tmp/libarchive-3.3.2/contrib/android/include/* $TOOLCHAIN_INSTALL_DIR/include/ && rm libarchive-3.3.2.tar.gz\n"
}