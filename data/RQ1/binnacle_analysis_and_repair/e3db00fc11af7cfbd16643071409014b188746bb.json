{
  "startTime": 1674242365132,
  "endTime": 1674242365289,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 13,
        "columnEnd": 95
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 18,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:9.2.1-alpine\n\nENV AWS_CLI_VERSION 1.14.7\nENV CLOUD_SDK_VERSION 182.0.0\nENV WATCHMAN_VERSION 4.9.0\nENV DOCKER_COMPOSE_VERSION 1.17.0\nENV PATH /google-cloud-sdk/bin:$PATH\nENV GOOGLE_APPLICATION_CREDENTIALS /gcp-key.json\n\nRUN set -ex; \\\n    apk add --no-cache bash git openssl-dev openssh-client ca-certificates curl g++ libc6-compat \\\n        linux-headers make autoconf automake libtool python-dev py-crcmod py2-pip libc6-compat; \\\n    # AWS CLI\n    pip install --no-cache-dir awscli==${AWS_CLI_VERSION}; \\\n    aws --version; \\\n    # Google Cloud SDK\n    curl -f -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz; \\\n    tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz; \\\n    rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz; \\\n    ln -s /lib /lib64; \\\n    gcloud config set core/disable_usage_reporting true; \\\n    gcloud config set component_manager/disable_update_check true; \\\n    gcloud components install kubectl; \\\n    gcloud --version; \\\n    # Docker\n    apk add --no-cache docker; \\\n    docker --version; \\\n    # Docker Compose\n    pip install --no-cache-dir docker-compose==${DOCKER_COMPOSE_VERSION}; \\\n    docker-compose --version; \\\n    # Watchman\n    cd /tmp; curl -f -LO https://github.com/facebook/watchman/archive/v${WATCHMAN_VERSION}.tar.gz; \\\n    tar xzf v${WATCHMAN_VERSION}.tar.gz; rm v${WATCHMAN_VERSION}.tar.gz; \\\n    cd watchman-${WATCHMAN_VERSION}; \\\n    ./autogen.sh; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; make && make install; \\\n    cd /tmp; rm -rf watchman-${WATCHMAN_VERSION}; \\\n    watchman --version;\n"
}