{
  "startTime": 1674252610169,
  "endTime": 1674252610486,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 32,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 34,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM manageiq/ruby:2.4\nMAINTAINER ManageIQ https://github.com/ManageIQ/manageiq-appliance-build\n\n## Set build ARGs\nARG REF=master\n\n## Set ENV, LANG only needed if building with docker-1.8\nENV TERM=xterm \\\n    CONTAINER=true \\\n    APP_ROOT=/var/www/miq/vmdb \\\n    APP_ROOT_PERSISTENT=/persistent \\\n    APPLIANCE_ROOT=/opt/manageiq/manageiq-appliance \\\n    CONTAINER_SCRIPTS_ROOT=/opt/manageiq/container-scripts \\\n    IMAGE_VERSION=${REF}\n\n## Atomic/OpenShift Labels\nLABEL name=\"manageiq\" \\\n      vendor=\"ManageIQ\" \\\n      version=\"Master\" \\\n      release=${REF} \\\n      url=\"http://manageiq.org/\" \\\n      summary=\"ManageIQ appliance image\" \\\n      description=\"ManageIQ is a management and automation platform for virtual, private, and hybrid cloud infrastructures.\" \\\n      io.k8s.display-name=\"ManageIQ\" \\\n      io.k8s.description=\"ManageIQ is a management and automation platform for virtual, private, and hybrid cloud infrastructures.\" \\\n      io.openshift.tags=\"ManageIQ,miq,manageiq\"\n\n# Fetch MIQ repo for http-parser\nRUN curl -f -sSLko /etc/yum.repos.d/manageiq-ManageIQ-Master-epel-7.repo \\\n      https://copr.fedorainfracloud.org/coprs/manageiq/ManageIQ-Master/repo/epel-7/manageiq-ManageIQ-Master-epel-7.repo\n\n## Install EPEL repo, yum necessary packages for the build without docs, clean all caches\nRUN yum -y install centos-release-scl-rh \\\n                   https://rpm.nodesource.com/pub_8.x/el/7/x86_64/nodesource-release-el7-1.noarch.rpm && \\\n    yum -y install --setopt=tsflags=nodocs \\\n                   chrony                  \\\n                   cmake                   \\\n                   cronie                  \\\n                   file                    \\\n                   gcc-c++                 \\\n                   git                     \\\n                   http-parser             \\\n                   initscripts             \\\n                   libcurl-devel           \\\n                   libtool                 \\\n                   libxslt-devel           \\\n                   logrotate               \\\n                   lvm2                    \\\n                   net-tools               \\\n                   nmap-ncat               \\\n                   nodejs                  \\\n                   openldap-clients        \\\n                   openscap-scanner        \\\n                   patch                   \\\n                   psmisc                  \\\n                   rh-postgresql95-postgresql-devel  \\\n                   rh-postgresql95-postgresql-libs \\\n                   sqlite-devel            \\\n                   sysvinit-tools          \\\n                   which \\\n                   && \\\n    yum clean all && rm -rf /var/cache/yum\n\n## GIT clone manageiq-appliance\nRUN mkdir -p ${APPLIANCE_ROOT} && \\\n    curl -f -L https://github.com/ManageIQ/manageiq-appliance/tarball/${REF} | tar vxz -C ${APPLIANCE_ROOT} --strip 1\n\n## GIT clone manageiq\nRUN mkdir -p ${APP_ROOT} && \\\n    ln -vs ${APP_ROOT} /opt/manageiq/manageiq && \\\n    curl -f -L https://github.com/ManageIQ/manageiq/tarball/${REF} | tar vxz -C ${APP_ROOT} --strip 1 && \\\n    echo \"`date +'%Y%m%d%H%M%S'`_`git ls-remote https://github.com/ManageIQ/manageiq.git ${REF} | cut -c 1-7`\" > ${APP_ROOT}/BUILD\n\n## Setup environment\nRUN ${APPLIANCE_ROOT}/setup && \\\n    mkdir -p ${APP_ROOT}/log/apache && \\\n    mkdir ${APP_ROOT_PERSISTENT} && \\\n    mkdir -p ${CONTAINER_SCRIPTS_ROOT} && \\\n    cp ${APP_ROOT}/config/cable.yml.sample ${APP_ROOT}/config/cable.yml\n\n## Change workdir to application root, build/install gems\nWORKDIR ${APP_ROOT}\nRUN source /etc/default/evm && \\\n    export RAILS_USE_MEMORY_STORE=\"true\" && \\\n    npm install bower yarn -g && \\\n    gem install bundler -v \">=1.16.2\" && \\\n    bundle install && \\\n    rake update:ui && \\\n    bin/rails log:clear tmp:clear && \\\n    rake evm:compile_assets && \\\n    rake evm:compile_sti_loader && \\\n    # Cleanup install artifacts\n    npm cache clean --force && \\\n    bower cache clean && \\\n    find ${RUBY_GEMS_ROOT}/gems/ -name .git | xargs rm -rvf && \\\n    find ${RUBY_GEMS_ROOT}/gems/ | grep \"\\.s\\?o$\" | xargs rm -rvf && \\\n    rm -rvf ${RUBY_GEMS_ROOT}/gems/rugged-*/vendor/libgit2/build && \\\n    rm -rvf ${RUBY_GEMS_ROOT}/cache/* && \\\n    rm -rvf /root/.bundle/cache && \\\n    rm -rvf ${APP_ROOT}/tmp/cache/assets && \\\n    rm -vf ${APP_ROOT}/log/*.log\n\n## Copy OpenShift and appliance-initialize scripts\nCOPY container-assets/entrypoint /usr/bin\nCOPY container-assets/container.data.persist /\nCOPY container-assets/appliance-initialize.sh /bin\nCOPY container-assets/check-dependent-services.sh /bin\nCOPY container-assets/miq_logs.conf /etc/logrotate.d\nADD  container-assets/container-scripts ${CONTAINER_SCRIPTS_ROOT}\n\nRUN wget -O /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 && \\\n    chmod +x /usr/local/bin/dumb-init\n\nENTRYPOINT [\"/usr/local/bin/dumb-init\", \"--single-child\", \"--\"]\nCMD [\"entrypoint\"]\n"
}