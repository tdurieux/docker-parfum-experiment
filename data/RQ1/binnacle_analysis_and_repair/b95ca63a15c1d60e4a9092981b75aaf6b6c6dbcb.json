{
  "startTime": 1674243658321,
  "endTime": 1674243658404,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### STAGE 1: Build ###\nFROM node:9.11.1-alpine as builder\nARG branch=develop\nENV BRANCH=$branch\nWORKDIR /src/app\nRUN mkdir -p /src/app/coriolis\nRUN mkdir -p /src/app/coriolis-data\n\nRUN apk add --no-cache --update git\n\nCOPY . /src/app/coriolis\n\nRUN npm i -g npm && npm cache clean --force;\n\n# Set up coriolis-data\nWORKDIR /src/app/coriolis-data\nRUN git clone https://github.com/EDCD/coriolis-data.git .\nRUN git checkout ${BRANCH}\nRUN npm install --no-package-lock && npm cache clean --force;\nRUN npm start\n\n# Set up coriolis\nWORKDIR /src/app/coriolis\nRUN git checkout ${BRANCH}\nRUN npm install --no-package-lock && npm cache clean --force;\nRUN npm run build\n\n\n### STAGE 2: Production Environment ###\nFROM fholzer/nginx-brotli as web\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY --from=builder /src/app/coriolis/build /usr/share/nginx/html\nWORKDIR /usr/share/nginx/html\nEXPOSE 80\nCMD [\"nginx\", \"-c\", \"/etc/nginx/nginx.conf\", \"-g\", \"daemon off;\"]\n"
}