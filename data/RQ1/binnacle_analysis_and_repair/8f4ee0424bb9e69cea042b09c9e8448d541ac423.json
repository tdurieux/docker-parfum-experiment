{
  "startTime": 1674235051423,
  "endTime": 1674235051550,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use phusion/baseimage as base image. To make your builds\n# reproducible, make sure you lock down to a specific version, not\n# to `latest`! See\n# https://github.com/phusion/baseimage-docker/blob/master/Changelog.md\n# for a list of version numbers.\n# Note also that we use phusion because, as explained on the\n# http://phusion.github.io/baseimage-docker/ page, it automatically\n# contains and starts all needed services (like logging), it\n# takes care of sending around signals when stopped, etc.\n##\n# Actually, I use passenger-full that already has python\n# https://github.com/phusion/passenger-docker#using\nFROM phusion/passenger-customizable:0.9.19\n\nMAINTAINER Giovanni Pizzi <giovanni.pizzi@epfl.ch>\n\n# Set correct environment variables.\nENV HOME /root\n\n# Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n\n# If you're using the 'customizable' variant, you need to explicitly opt-in\n# for features. Uncomment the features you want:\n#\n    #   Build system and git.\n    #   Python support (2.7 and 3.x - it is 3.5.x in this ubuntu 16.04)\nRUN /pd_build/utilities.sh && \\\n    /pd_build/python.sh\n\n##########################################\n############ Installation Setup ##########\n##########################################\n\n# Install required software\n\n# Install Apache (nginx doesn't have the X-Sendfile support\n# that we use)\n## Here and below we install everything with python3\nRUN apt-get update \\\n    && apt-get -y --no-install-recommends install \\\n    python3-pip \\\n    apache2 \\\n    libapache2-mod-xsendfile \\\n    libapache2-mod-wsgi-py3 \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get clean all\n\n# set $HOME\nENV HOME /home/app\n\n# Download code\nRUN mkdir -p $HOME/code/seekpath\nWORKDIR $HOME/code/seekpath\n\n# Actually, don't download, but get the code directly from this repo\nCOPY ./seekpath/ seekpath\nCOPY ./webservice/ webservice\nCOPY ./setup.py setup.py\nCOPY ./README.rst README.rst\nCOPY ./MANIFEST.in MANIFEST.in\nCOPY ./LICENSE.txt LICENSE.txt\nCOPY ./run_tests.py run_tests.py\nCOPY ./optional-requirements.txt optional-requirements.txt\n\n# Set proper permissions\nRUN chown -R app:app $HOME\n\n# Run this as sudo to replace the version of pip\nRUN pip3 install --no-cache-dir -U 'pip>=10' setuptools wheel\n\n# install rest of the packages as normal user (app, provided by passenger)\nUSER app\n\n# Install SeeK-path\n# Note: if you want to deploy with python3, use 'pip3' instead of 'pip'\nWORKDIR /home/app/code/seekpath\n# First install pinned versions of packages\nRUN pip3 install --no-cache-dir --user -r optional-requirements.txt --only-binary numpy,scipy\n# Then install the code without extra dependencies\nRUN pip3 install --no-cache-dir --user .\n\n# Create a proper wsgi file file\n#\nENV SP_WSGI_FILE=webservice/seekpath_app.wsgi\nRUN echo \"import sys\" > $SP_WSGI_FILE && \\\n    echo \"sys.path.insert(0, '/home/app/code/seekpath/webservice')\" >> $SP_WSGI_FILE && \\\n    echo \"from seekpath_app import app as application\" >> $SP_WSGI_FILE\n\n# Go back to root.\n# Also, it should remain as user root for startup\nUSER root\n\n# Setup apache\n# Disable default apache site, enable seekpath site; also\n# enable needed modules\nADD ./.docker_files/seekpath-apache.conf /etc/apache2/sites-available/seekpath.conf\nRUN a2enmod wsgi && a2enmod xsendfile && \\\n    a2dissite 000-default && a2ensite seekpath\n\n# Activate apache at startup\nRUN mkdir /etc/service/apache\nADD ./.docker_files/apache_run.sh /etc/service/apache/run\n\n# Set startup script to create the secret key\nRUN mkdir -p /etc/my_init.d\nADD ./.docker_files/create_secret_key.sh /etc/my_init.d/create_secret_key.sh\n\n# Web\nEXPOSE 80\n\n# Final cleanup, in case it's needed\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
}