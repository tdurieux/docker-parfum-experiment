{
  "startTime": 1674245588106,
  "endTime": 1674245588332,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 8,
        "columnEnd": 111
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 37,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2017-2019 EPAM Systems, Inc. (https://www.epam.com/)\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM library/centos:7\n\nENV PATH $PATH:/usr/local/openresty/bin:/usr/local/openresty/nginx/sbin:/etc/ssh-proxy/node-v6.11.3-linux-x64/bin/\n\n# This shall be set during deployment\nENV JWT_PUB_KEY /etc/nginx/jwt-public-key.pem\n\n# Install common\nRUN yum install -y python \\\n                   unzip \\\n                   git \\\n                   curl \\\n                   wget \\\n                   epel-release \\\n                   zlib-devel \\\n                   cronie \\\n                   sshpass \\\n                   perl && \\\n    yum group install -y \"Development Tools\" && \\\n    curl -f https://bootstrap.pypa.io/get-pip.py | python - && \\\n    pip install --no-cache-dir pykube && rm -rf /var/cache/yum\n\n# Openresty + http_connect module\nRUN yum install -y pcre-devel \\\n                    openssl-devel \\\n                    perl-Digest-MD5 && rm -rf /var/cache/yum\n\nRUN cd /tmp && \\\n    git clone https://github.com/chobits/ngx_http_proxy_connect_module.git\n\nRUN cd /tmp && \\\n        wget -q https://openresty.org/download/openresty-1.15.8.1.tar.gz && \\\n        tar -zxf openresty-1.15.8.1.tar.gz && \\\n        rm -f openresty-1.15.8.1.tar.gz && \\\n        cd openresty-1.15.8.1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-stream_ssl_preread_module --add-module=/tmp/ngx_http_proxy_connect_module -j$(nproc) && \\\n        patch -d build/nginx-1.15.8/ -p 1 < /tmp/ngx_http_proxy_connect_module/patch/proxy_connect_rewrite_101504.patch && \\\n        make -j$(nproc) && \\\n        make install\n\n# Install LUA JWT\nRUN opm get cdbattags/lua-resty-jwt\n\n# Configure cron and sync reoutes script\nADD\tcrontab /etc/cron.d/sync-routes\nADD sync-routes.sh /etc/sync-routes/sync-routes.sh\nADD\tsync-routes.py /etc/sync-routes/sync-routes.py\nADD\troute-template.conf /etc/sync-routes/route-template.conf\nRUN\tchmod 0644 /etc/cron.d/sync-routes\nRUN touch /var/log/sync-routes.log && \\\n    touch /var/log/wetty.log\n\n# Configure nginx\n## Main config file\nADD\tnginx.conf /etc/nginx/nginx.conf\n\n## Logs dir\nRUN mkdir -p /etc/nginx/logs/\n\n## Routes direcotory\nRUN\tmkdir -p /etc/nginx/sites-enabled/\n\n## Cookie validation\nADD validate_cookie.lua /etc/nginx/validate_cookie.lua\nADD validate_cookie_ssh.lua /etc/nginx/validate_cookie_ssh.lua\n\n# Install SSH proxy\n## Install node.js\nRUN mkdir -p /etc/ssh-proxy/  && \\\n    cd /etc/ssh-proxy/ && \\\n    wget -q https://nodejs.org/dist/v6.11.3/node-v6.11.3-linux-x64.tar.xz && \\\n    tar xfJ node-v6.11.3-linux-x64.tar.xz && \\\n    rm -f node-v6.11.3-linux-x64.tar.xz\n\n## Install wetty\nADD wetty /etc/ssh-proxy/wetty\nRUN cd /etc/ssh-proxy/wetty && \\\n    npm install && \\\n    cd / && npm cache clean --force;\n\n## Disable tls checks for wetty -> API\nENV NODE_TLS_REJECT_UNAUTHORIZED=0\n\nADD init /init\nRUN chmod +x /init\n"
}