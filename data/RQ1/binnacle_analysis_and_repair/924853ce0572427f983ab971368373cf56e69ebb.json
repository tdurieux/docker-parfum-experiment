{
  "startTime": 1674238569645,
  "endTime": 1674238569966,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 231
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 42,
        "columnStart": 23,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "################# Dockerfile for MongoDB version v3.3.12 ###########################\n#\n# This Dockerfile builds a basic installation of MongoDB.\n#\n# MongoDB is an open source database that uses a document-oriented data model.\n#\n# To build this image, from the directory containing this Dockerfile\n# (assuming that the file is named Dockerfile):\n# docker build -t <image_name> .\n#\n# To start a container of MongoDB image, use following command:\n# docker run --name <container name> -p <port no>:27017 -d <image name>\n#\n####################################################################################\n# Base Image\nFROM  s390x/ubuntu:16.04\n\n# The Author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\n\nENV SOURCE_DIR=/tmp/source\nWORKDIR $SOURCE_DIR\n\n# Install dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\twget \\\n\ttar \\\n\tmake \\\n\tflex \\\n\tgcc-5 \\\n\tg++-5 \\\n\tzlib1g-dev \\\n\tgit \\\n\tlibssl-dev \\\n\tlibmpc-dev \\\n\tbinutils \\\n\tbinutils-dev \\\n\tglibc-source \\\n\tbuild-essential \\\n\tbzip2 \\\n\ttexinfo \\\n\tgolang \\\n\tscons \\\n\n && cd $SOURCE_DIR && git clone https://github.com/gcc-mirror/gcc \\\n && cd gcc && git checkout gcc-5_3_0-release \\\n && ./contrib/download_prerequisites \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/opt/gcc\" --enable-shared --with-system-zlib --enable-threads=posix --enable-__cxa_atexit --enable-checking --enable-gnu-indirect-function --enable-languages=\"c,c++\" --disable-bootstrap --disable-multilib \\\n && make && make install \\\n && ln -sf /opt/gcc/bin/gcc /usr/bin/gcc \\\n && ln -sf /opt/gcc/bin/g++ /usr/bin/g++ \\\n\n# Build mongodb server\n && cd $SOURCE_DIR && git clone https://github.com/mongodb/mongo \\\n && cd mongo && git checkout r3.3.12 \\\n && scons --opt --allocator=system all --use-s390x-crc32=off \\\n && chmod -c 777 * \\\n && cp $SOURCE_DIR/mongo/mongo /usr/bin \\\n && cp $SOURCE_DIR/mongo/mongod /usr/bin \\\n && cp $SOURCE_DIR/mongo/mongos /usr/bin \\\n && cp $SOURCE_DIR/mongo/mongobridge /usr/bin \\\n && cp $SOURCE_DIR/mongo/mongoperf /usr/bin \\\n\n# Build mongodb tools\n && cd $SOURCE_DIR && git clone https://github.com/mongodb/mongo-tools \\\n && cd mongo-tools && git checkout r3.3.11 && ./build.sh \\\n && chmod -c 777 $SOURCE_DIR/mongo-tools/bin/* \\\n && cp $SOURCE_DIR/mongo-tools/bin/* /usr/bin \\\n && mkdir -p /data/db \\\n\n# Clean up of unused packages and source directory.\n && apt-get remove -y \\\n    zlib1g-dev \\\n    texinfo \\\n    binutils \\\n    binutils-dev \\\n    build-essential \\\n    bzip2 \\\n    flex \\\n    g++-5 \\\n    gcc-5 \\\n    git \\\n    glibc-source \\\n    golang \\\n    libssl-dev \\\n    make \\\n    scons \\\n    subversion \\\n    wget \\\n && rm -rf $SOURCE_DIR /opt \\\n && apt-get autoremove -y \\\n && apt autoremove -y \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*\n\nVOLUME /data/db\n\nEXPOSE 27017\n\nCMD [\"mongod\"]\n\n# End of Dockerfile\n"
}