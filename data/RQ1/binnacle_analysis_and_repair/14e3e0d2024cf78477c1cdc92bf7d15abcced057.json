{
  "startTime": 1674248125534,
  "endTime": 1674248125703,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 39,
        "columnEnd": 82
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ---- Base Node ----\nFROM node:carbon AS base\n# Create app directory\nWORKDIR /app\n\n# ---- Dependencies ----\nFROM base AS dependencies\nCOPY package*.json ./\nCOPY yarn.lock ./\nCOPY preact.config.js ./\nRUN yarn install && yarn cache clean;\n\n# ---- Copy Files/Build ----\nFROM dependencies AS build\nWORKDIR /app\nCOPY src /app/src\nRUN yarn build\nRUN yarn install --modules-folder /app/deps --production=true && yarn cache clean;\n\n# --- Release with Alpine ----\nFROM node:8.9-alpine AS release\nWORKDIR /app\n\n# install new ffmpeg version using edge repositories\nRUN sed -i -e 's/v[[:digit:]]\\.[[:digit:]]/edge/g' /etc/apk/repositories\nRUN apk del --purge alpine-baselayout; apk --update --no-cache add alpine-baselayout busybox; apk upgrade --purge\nRUN apk --update --no-cache add ffmpeg\n\nCOPY --from=build /app/build ./build\nCOPY --from=build /app/deps ./node_modules\n\nVOLUME /data /incoming\n\nCMD [\"node\", \"build/transcode.js\", \"/incoming\", \"/data\"]\n"
}