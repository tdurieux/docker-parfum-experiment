{
  "startTime": 1674245886477,
  "endTime": 1674245886800,
  "originalSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER <EMC{code}>\n\n# To build this dockerfile first ensure that it is named \"Dockerfile\"\n# make sure that a directory \"docker_resources\" is also present in the same directory as \"Dockerfile\",\n#   and that \"docker_resources\" contains the files \"go-wrapper\" and \"get_go-bindata_md5.sh\"\n\n# Assuming:\n# Your dockerhub username: dhjohndoe\n# Your github username: ghjohndoe\n# Your polly fork is checked out in $HOME/go/src/github.com/ghjohndoe/polly/\n\n# To build a Docker image using this Dockerfile:\n# docker build -t dhjohndoe/golang-glide:0.1.0 .\n\n# To build polly using this Docker image:\n# docker pull dhjohndoe/golang-glide:0.1.0\n# If cutting and pasting the next line remove '\\' and '#' characters remember to replace ghjohndoe and dhjohndoe\n# docker run -v $HOME/go/src/github.com/ghjohndoe/polly/:/go/src/github.com/emccode/polly/ \\\n# -v $HOME/build/polly/pkg/:/go/pkg/ \\\n# -v $HOME/build/polly/bin/:/go/bin/ \\\n# -w=/go/src/github.com/emccode/polly/ dhjohndoe/golang-glide:0.1.0\n\n# after building build resources will be placed in $HOME/build/polly/ in the pkg/ and bin/ directories\n# to run an instance of polly inside of a Docker container perform another docker run, this time entering the shell\n# If cutting and pasting the next line remove '\\' and '#' characters and remember to replace ghjohndoe and dhjohndoe\n# docker run -ti -v $HOME/go/src/github.com/ghjohndoe/polly/:/go/src/github.com/emccode/polly/ \\\n# -v $HOME/build/polly/pkg/:/go/pkg/ \\\n# -v $HOME/build/polly/bin/:/go/bin/ \\\n# -w=/go/src/github.com/emccode/polly/ dhjohndoe/golang-glide:0.1.0 /bin/bash\n\n# once inside run-\n#   polly service start -f\n# note that no configuration file exists in /etc/polly\n# also note that you must terminate the instance manually with ctrl+c and exit\n\nRUN apt-get update && apt-get install -y --no-install-recommends software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:masterminds/glide\n\n# gcc for cgo\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        git \\\n        curl \\\n        g++ \\\n        gcc \\\n        libc6-dev \\\n        make \\\n        glide \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV GOLANG_VERSION 1.6.2\nENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz\nENV GOLANG_DOWNLOAD_SHA256 e40c36ae71756198478624ed1bb4ce17597b3c19d243f3f0899bb5740d56212a\n\nRUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \\\n    && echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - \\\n    && tar -C /usr/local -xzf golang.tar.gz \\\n    && rm golang.tar.gz\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\nWORKDIR $GOPATH\n\nADD docker_resources/go-wrapper /usr/local/bin/\nADD docker_resources/get_go-bindata_md5.sh /home/\n\nEXPOSE 7978\nEXPOSE 7979\n\n# The get_go-bindata_md5.sh script is required to resolve build errors related to go-bindata and akutz's md5checksum\nCMD [\"/bin/bash\", \"-c\", \"/home/./get_go-bindata_md5.sh; make clean; make deps; make\"]\n"
}