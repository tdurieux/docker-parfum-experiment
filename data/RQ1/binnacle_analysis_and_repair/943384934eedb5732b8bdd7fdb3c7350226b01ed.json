{
  "startTime": 1674249156928,
  "endTime": 1674249157180,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 38,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 25,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 25,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedDockerfile": "FROM debian:stable-slim as fetcher\n\nRUN apt-get -y update && apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\n# The 'OPENGROK_DOWNLOAD_LINK' will be replaced by docker.sh.\nRUN curl -f -sSL -o opengrok.tar.gz OPENGROK_DOWNLOAD_LINK\n\nFROM tomcat:9-jre8\nMAINTAINER OpenGrok developers \"opengrok-dev@yahoogroups.com\"\n\n# prepare OpenGrok binaries and directories\nCOPY --from=fetcher opengrok.tar.gz /opengrok.tar.gz\nRUN mkdir -p /opengrok /var/opengrok/etc /opengrok/data /opengrok/src && \\\n    tar -zxvf /opengrok.tar.gz -C /opengrok --strip-components 1 && \\\n    rm -f /opengrok.tar.gz\n\n# install dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y git subversion mercurial unzip inotify-tools python3 python3-pip && \\\n    python3 -m pip install /opengrok/tools/opengrok-tools* && rm -rf /var/lib/apt/lists/*;\n# compile and install universal-ctags\nRUN apt-get install --no-install-recommends -y pkg-config autoconf build-essential && git clone https://github.com/universal-ctags/ctags /root/ctags && \\\n    cd /root/ctags && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n    apt-get remove -y autoconf build-essential && apt-get -y autoremove && apt-get -y autoclean && \\\n    cd /root && rm -rf /root/ctags && rm -rf /var/lib/apt/lists/*;\n\n# environment variables\nENV SRC_ROOT /opengrok/src\nENV DATA_ROOT /opengrok/data\nENV OPENGROK_WEBAPP_CONTEXT /\nENV OPENGROK_TOMCAT_BASE /usr/local/tomcat\nENV CATALINA_HOME /usr/local/tomcat\nENV PATH $CATALINA_HOME/bin:$PATH\nENV CATALINA_BASE /usr/local/tomcat\nENV CATALINA_HOME /usr/local/tomcat\nENV CATALINA_TMPDIR /usr/local/tomcat/temp\nENV JRE_HOME /usr\nENV CLASSPATH /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar\n\n\n# custom deployment to / with redirect from /source\nRUN rm -rf /usr/local/tomcat/webapps/* && \\\n    opengrok-deploy /opengrok/lib/source.war /usr/local/tomcat/webapps/ROOT.war && \\\n    mkdir \"/usr/local/tomcat/webapps/source\" && \\\n    echo '<% response.sendRedirect(\"/\"); %>' > \"/usr/local/tomcat/webapps/source/index.jsp\"\n\n# disable all file logging\nADD logging.properties /usr/local/tomcat/conf/logging.properties\nRUN sed -i -e 's/Valve/Disabled/' /usr/local/tomcat/conf/server.xml\n\n# add our scripts\nADD scripts /scripts\nRUN chmod -R +x /scripts\n\n# run\nWORKDIR $CATALINA_HOME\nEXPOSE 8080\nCMD [\"/scripts/start.sh\"]\n"
}