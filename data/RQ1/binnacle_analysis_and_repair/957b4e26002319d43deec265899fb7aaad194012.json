{
  "startTime": 1674245147451,
  "endTime": 1674245150960,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 16,
        "columnStart": 39,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 16,
        "columnStart": 39,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu\nWORKDIR /codec_compare\n\n# DEPENDENCIES\nRUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y \\\n    wget \\\n    unzip \\\n    g++ \\\n    make \\\n    patchelf \\\n    bzip2 \\\n    pkg-config \\\n    yasm \\\n    subversion \\\n    python \\\n    imagemagick \\\n    python-pip && \\\n    pip install --no-cache-dir plotly && rm -rf /var/lib/apt/lists/*;\n\n# JPEG\nRUN mkdir -p /tools && \\\n    cd /tools && \\\n    wget -O jpeg.zip https://jpeg.org/downloads/jpegxt/reference1367abcd89.zip && \\\n    unzip jpeg.zip -d jpeg && \\\n    rm -f jpeg.zip && \\\n    cd jpeg && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make\n\n# KAKADU\nRUN mkdir -p /tools && \\\n    cd /tools && \\\n    wget -O kakadu.zip https://kakadusoftware.com/wp-content/uploads/2014/06/KDU7A2_Demo_Apps_for_Ubuntu-x86-64_170827.zip && \\\n    unzip kakadu.zip -d kakadu && \\\n    rm -f kakadu.zip && \\\n    patchelf --set-rpath '$ORIGIN/' /tools/kakadu/KDU7A2_Demo_Apps_for_Ubuntu-x86-64_170827/kdu_compress && \\\n    patchelf --set-rpath '$ORIGIN/' /tools/kakadu/KDU7A2_Demo_Apps_for_Ubuntu-x86-64_170827/kdu_expand && \\\n    patchelf --set-rpath '$ORIGIN/' /tools/kakadu/KDU7A2_Demo_Apps_for_Ubuntu-x86-64_170827/kdu_v_compress && \\\n    patchelf --set-rpath '$ORIGIN/' /tools/kakadu/KDU7A2_Demo_Apps_for_Ubuntu-x86-64_170827/kdu_v_expand\n\n# WEBP\nRUN mkdir -p /tools && \\\n    cd /tools && \\\n    wget -O libwebp.tar.gz https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-0.6.1-linux-x86-64.tar.gz  && \\\n    tar xvzf libwebp.tar.gz && \\\n    rm -f libwebp.tar.gz\n\n# HEVC\nRUN mkdir -p /tools && \\\n    cd /tools && \\\n    svn checkout https://hevc.hhi.fraunhofer.de/svn/svn_HEVCSoftware/tags/HM-16.9+SCM-8.0/ && \\\n    cd HM-16.9+SCM-8.0/build/linux && \\\n    make\n\n# VMAF, FFMPEG\nRUN mkdir -p /tools && \\\n    cd /tools && \\\n    wget -O vmaf.zip https://github.com/Netflix/vmaf/archive/v1.3.1.zip && \\\n    unzip vmaf.zip && \\\n    rm -f vmaf.zip && \\\n    cd vmaf-1.3.1 && \\\n    make && \\\n    make install && \\\n    cd /tools && \\\n    wget -O ffmpeg.tar.bz2 https://ffmpeg.org/releases/ffmpeg-3.4.1.tar.bz2 && \\\n    tar -vxjf ffmpeg.tar.bz2 && \\\n    rm ffmpeg.tar.bz2 && \\\n    cd ffmpeg-3.4.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-libvmaf && \\\n    make install\n\n# TO ADD ANOTHER\n# ADD /local/path/to/bin /tools/bin\n# ^ This will add the file from the host machine into the container. In this case the bin is accessible at: `/tools/bin`.\n"
}