{
  "startTime": 1674242631013,
  "endTime": 1674242631361,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 89,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 7,
        "columnEnd": 65
      }
    }
  ],
  "repairedDockerfile": "FROM    debian:7.9\n#FROM    supermy/docker-debian:7\n\nMAINTAINER supermy <springclick@gmail.com>\n\nRUN sed -i '1,3d'   /etc/apt/sources.list \\\n    && echo '#hello'>> /etc/apt/sources.list \\\n    && sed -i '1a \\\n    deb http://mirrors.163.com/debian/ wheezy main non-free contrib \\n \\\n    deb http://mirrors.163.com/debian/ wheezy-proposed-updates main contrib non-free \\n \\\n    deb http://mirrors.163.com/debian-security/ wheezy/updates main contrib non-free \\n \\\n    deb-src http://mirrors.163.com/debian/ wheezy main non-free contrib \\n \\\n    deb-src http://mirrors.163.com/debian/ wheezy-proposed-updates main contrib non-free \\n \\\n    deb-src http://mirrors.163.com/debian-security/ wheezy/updates main contrib non-free \\n \\\n    ' /etc/apt/sources.list\n\n# sohu 更新服务器：\n#RUN sed -i '1a \\\n#    deb http://mirrors.sohu.com/debian/ wheezy main non-free contrib  \\\n#    deb http://mirrors.sohu.com/debian/ wheezy-proposed-updates main non-free contrib \\\n#    deb http://mirrors.sohu.com/debian-security/ wheezy/updates main contrib non-free \\n \\\n#    deb-src http://mirrors.sohu.com/debian/ wheezy main non-free contrib \\\n#    deb-src http://mirrors.sohu.com/debian/ wheezy-proposed-updates main non-free contrib \\\n#    deb-src http://mirrors.sohu.com/debian-security/ wheezy/updates main contrib non-free \\n \\\n#    ' /etc/apt/sources.list\n\n\n\nRUN apt-get -qqy update && \\\n    apt-get -qqy --no-install-recommends install gcc libpcre3 libpcre3-dev openssl libssl-dev make wget libreadline-dev libncurses-dev graphicsmagick && rm -rf /var/lib/apt/lists/*;\n\n\n#RUN export http_proxy=http://172.16.71.25:8087\n#-e http_proxy=172.16.71.25:8087\n\nWORKDIR /tmp\nRUN wget https://tengine.taobao.org/download/tengine-2.1.2.tar.gz \\\n    && wget --no-check-certificate https://openresty.org/download/openresty-1.9.7.4.tar.gz \\\n    && wget https://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz \\\n    && tar xvf tengine-2.1.2.tar.gz \\\n    && tar zxf openresty-1.9.7.4.tar.gz \\\n    && tar zxf ngx_cache_purge-2.3.tar.gz && rm tengine-2.1.2.tar.gz\n\n\n\nWORKDIR /tmp/openresty-1.9.7.4\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/openresty --with-luajit && make && make install\n\nWORKDIR /tmp/openresty-1.9.7.4/bundle/lua-5.1.5\nRUN make linux && make install\n#\n#WORKDIR /tmp\n#RUN wget http://bitop.luajit.org/download/LuaBitOp-1.0.2.tar.gz\n#RUN tar zxf LuaBitOp-1.0.2.tar.gz\n#WORKDIR /tmp/LuaBitOp-1.0.2\n#RUN make && make install\n#\n#WORKDIR /tmp\n#COPY lua-lib/lua-resty-kafka /tmp/lua-resty-kafka\n#WORKDIR /tmp/lua-resty-kafka\n#RUN make && make install\n\n\n###waf begin naxsi 应用防火墙 抵御SQL注入、跨站脚本、跨域伪造请求、本地和远程文件包含漏洞\nENV NAXSI_VERSION master\nWORKDIR /tmp\n\nRUN gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 2685AED4 7BD9BF62 A1C052F8 \\\n    && apt-get install --no-install-recommends ca-certificates -y \\\n    && wget \"https://github.com/nbs-system/naxsi/archive/${NAXSI_VERSION}.tar.gz\" -O nginx-${NAXSI_VERSION}.tar.gz && \\\n    tar zxvf nginx-${NAXSI_VERSION}.tar.gz && rm nginx-${NAXSI_VERSION}.tar.gz && rm -rf /var/lib/apt/lists/*;\n###waf end\n\n\nWORKDIR /tmp/tengine-2.1.2\nRUN echo \"/usr/local/lib\" > /etc/ld.so.conf.d/usr_local_lib.conf\n\n#更新，混淆版本标识\nRUN sed -in 's/nginx\\//myserver\\//g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/1.6.2/8.8/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/Tengine\\\"/myserver\\\"/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/2.1.0/8.8/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/NGINX\\\"/myserver\\\"/g' /tmp/tengine-2.1.2/src/core/nginx.h\nRUN sed -in 's/2001000/800800/g' /tmp/tengine-2.1.2/src/core/nginx.h\n\n\nRUN \\\n    cd /tmp/tengine-2.1.2 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n       --with-ld-opt='-Wl,-rpath,/usr/local/lib/' \\\n        --add-module=/tmp/openresty-1.9.7.4/bundle/redis2-nginx-module-0.12/ \\\n        --add-module=/tmp/openresty-1.9.7.4/bundle/ngx_devel_kit-0.2.19/ \\\n        --add-module=/tmp/openresty-1.9.7.4/bundle/set-misc-nginx-module-0.30/ \\\n        --add-module=/tmp/openresty-1.9.7.4/bundle/echo-nginx-module-0.58/ \\\n        --add-module=/tmp/openresty-1.9.7.4/bundle/ngx_lua-0.10.2/ \\\n        --add-module=/tmp/ngx_cache_purge-2.3/ \\\n        --add-module=/tmp/naxsi-${NAXSI_VERSION}/naxsi_src/ \\\n        --with-ld-opt=\"-L /usr/local/lib\" \\\n    && make && make install\n\nADD nginx.conf /usr/local/nginx/conf/nginx.conf\n\n\n\n\nWORKDIR /root\n#RUN rm -rf /tmp/tengine-*\n#RUN rm -rf /tmp/lua-*\n\nENV HOME /root\nRUN rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh\n\nRUN mkdir -p /etc/my_init.d\n\n#nginx 配置文件\nCOPY http.d /usr/local/nginx/conf/http.d\nCOPY server.d /usr/local/nginx/conf/server.d\nCOPY naxsi.d /usr/local/nginx/conf/naxsi.d\nRUN cp /tmp/naxsi-master/naxsi_config/naxsi_core.rules /usr/local/nginx/conf/naxsi.d/\n\nCOPY waf.d /usr/local/nginx/conf/waf.d\nRUN  mkdir -p /data/logs/hack && chmod -R 775 /data/logs/hack\n\n\n#lua 库与配置文件\nCOPY lua-lib /usr/local/nginx/conf/lua-lib\nCOPY lua.d /usr/local/nginx/conf/lua.d\n\n\nADD nginx.sh /etc/my_init.d/nginx.sh\nRUN chmod 755 /etc/my_init.d/nginx.sh\n\n#RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN mkdir -p /var/lib/nginx/cache\n\n#配置时区\nRUN echo \"Asia/Shanghai\" > /etc/timezone\nRUN dpkg-reconfigure -f noninteractive tzdata\n\nEXPOSE 80 443\n\nCMD [\"/etc/my_init.d/nginx.sh\"]\n\n# build\n# docker build -t supermy/docker-mynginx:2.1 .\n# userage\n# docker run -d -p 8080:80 --name test -v /home/utgard/www/:/data/www/ mynginx_web\n"
}