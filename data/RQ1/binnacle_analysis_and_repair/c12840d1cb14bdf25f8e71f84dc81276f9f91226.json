{
  "startTime": 1674241868780,
  "endTime": 1674241869126,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 242
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 27,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 242
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER pivotal\n\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Install dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y autoconf bison build-essential curl git libfontconfig libpq-dev libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm3 libgdbm-dev libnss3 libxi6 libgconf-2-4 unzip wget && rm -rf /var/lib/apt/lists/*;\n\n# Install Rbenv and Ruby\n\nRUN git clone https://github.com/rbenv/rbenv.git ~/.rbenv && echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >> ~/.bashrc && echo 'eval \"$(rbenv init -)\"' >> ~/.bashrc\nRUN git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build\nENV PATH $PATH:/root/.rbenv/bin:/root/.rbenv/shims\nRUN cd /root/.rbenv/plugins/ruby-build && git pull && cd -\nRUN rbenv install 2.6.1 && rbenv global 2.6.1 && rbenv rehash\nRUN echo 'gem: --no-rdoc --no-ri' >> /.gemrc\nRUN gem install bundler\n\n# Install Node\nENV NVM_DIR /usr/local/nvm\nENV NODE_VERSION 11.10.1\nRUN curl -f --silent -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh | bash\nRUN source $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_VERSION \\\n    && nvm alias default $NODE_VERSION \\\n    && nvm use default\nENV NODE_PATH $NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules\nENV PATH      $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n\n# Install Python for Node SASS\nRUN apt-get update && apt-get install --no-install-recommends -y python && rm -rf /var/lib/apt/lists/*;\n\n\n# Install Chrome WebDriver\nRUN apt-get update && apt-get install --no-install-recommends -y apt-transport-https ca-certificates && rm -rf /var/lib/apt/lists/*;\nRUN CHROMEDRIVER_VERSION='2.45' && \\\n    mkdir -p /opt/chromedriver-$CHROMEDRIVER_VERSION && \\\n    curl -f -sS -o /tmp/chromedriver_linux64.zip https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip && \\\n    unzip -qq /tmp/chromedriver_linux64.zip -d /opt/chromedriver-$CHROMEDRIVER_VERSION && \\\n    rm /tmp/chromedriver_linux64.zip && \\\n    chmod +x /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver && \\\n    ln -fs /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver /usr/local/bin/chromedriver\n\n# Install Google Chrome\nRUN curl -f -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n    echo \"deb https://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list\nRUN apt-get -yqq update && apt-get -yqq --no-install-recommends install google-chrome-stable && rm -rf /var/lib/apt/lists/*\n\n# Install Sqlite dev tools\nRUN apt-get update && apt-get install --no-install-recommends -y libsqlite3-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install zip for packaging\nRUN apt-get update && apt-get install --no-install-recommends -y zip && rm -rf /var/lib/apt/lists/*;\n\n# Install tmux for run/test scripts\nRUN apt-get update && apt-get install --no-install-recommends -y tmux && rm -rf /var/lib/apt/lists/*;\n\n# Cache dependencies\nRUN git clone https://github.com/pivotal/postfacto.git\nRUN cd /postfacto && ./deps.sh && cd .. && rm -rf /postfacto\n"
}