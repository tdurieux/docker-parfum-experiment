{
  "startTime": 1674236694567,
  "endTime": 1674236694633,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# postgres-backup\n# docker run --rm -it -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY -e AWS_DEFAULT_REGION=ap-northeast-1 -e POSTGRES_HOST=192.168.x.x -e S3_BUCKET=my-bucket supinf/postgres-backup:9.5\n\nFROM alpine:3.8\n\nENV SCHEDULE= \\\n    POSTGRES_DATABASE= \\\n    POSTGRES_HOST= \\\n    POSTGRES_PORT=5432 \\\n    POSTGRES_USER=postgres \\\n    POSTGRES_PASSWORD= \\\n    POSTGRES_EXTRA_OPTS= \\\n    AWS_DEFAULT_REGION=us-west-1 \\\n    S3_BUCKET= \\\n    S3_PREFIX= \\\n    SERVER_SIDE_ENCRYPTION=true \\\n    KMS_KEY_ID= \\\n    RESTORE_AFTER= \\\n    RESTORE_FROM=\n\nRUN apk --no-cache add postgresql python3 curl\n\nRUN apk --no-cache add --virtual build-deps py3-pip \\\n    && apk --no-cache add groff jq \\\n    && pip3 install --no-cache-dir 'awscli == 1.16.7' \\\n    && apk del --purge -r build-deps\n\nRUN curl -f -L https://github.com/odise/go-cron/releases/download/v0.0.7/go-cron-linux.gz \\\n       | zcat > /usr/local/bin/go-cron \\\n    && chmod +x /usr/local/bin/go-cron\n\nADD entrypoint.sh /\nADD restore.sh /\nADD backup.sh /\nRUN chmod +x /entrypoint.sh /restore.sh /backup.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}