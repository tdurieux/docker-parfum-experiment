{
  "startTime": 1674236087004,
  "endTime": 1674236087528,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "FROM mundialis/grass-py3-pdal\n\nLABEL authors=\"Carmen Tawalika,Anika Bettge,Markus Neteler,SÃ¶ren Gebbert\"\nLABEL maintainer=\"tawalika@mundialis.de,bettge@mundialis.de,neteler@mundialis.de,soerengebbert@gmail.com\"\n\nARG SOURCE_GIT_URL=https://github.com\nARG SOURCE_GIT_REMOTE=mundialis\nARG SOURCE_GIT_REPO=actinia_core\n# can be \"tags\" (for tag) or \"heads\" (for) branch\nARG SOURCE_GIT_TYPE=heads\n# can be a tag name or branch name\nARG SOURCE_GIT_REF=master\n\nENV GDAL_CACHEMAX=2000\nENV GRASS_COMPRESSOR=ZSTD\n\nUSER root\n\n# Install dependencies and tools\nRUN apt-get update && apt-get upgrade -y && \\\n    apt-get install -y --no-install-recommends --no-install-suggests \\\n    # gnutls-bin \\\n    # libgnutls28-dev \\\n    # ruby \\\n    build-essential \\\n    bzip2 \\\n    curl \\\n    git \\\n    language-pack-en-base \\\n    libcurl4-gnutls-dev \\\n    libpython3-all-dev \\\n    moreutils \\\n    subversion \\\n    python3 \\\n    python3-dateutil \\\n    python3-dev \\\n    python3-magic \\\n    python3-pip \\\n    python3-ply \\\n    redis-server \\\n    redis-tools \\\n    unzip \\\n    vim \\\n    wget \\\n    zip \\\n    && apt-get autoremove -y \\\n    && apt-get clean -y && rm -rf /var/lib/apt/lists/*;\n\nENV LC_ALL \"en_US.UTF-8\"\nENV GRASS_SKIP_MAPSET_OWNER_CHECK 1\n\n# Create the database directories\nRUN mkdir -p /actinia_core/grassdb && \\\n    mkdir -p /actinia_core/resources && \\\n    mkdir -p /actinia_core/workspace/tmp && \\\n    mkdir -p /actinia_core/workspace/temp_db && \\\n    mkdir -p /actinia_core/workspace/actinia && \\\n    mkdir -p /actinia_core/workspace/download_cache && \\\n    mkdir -p /actinia_core/userdata\n\n# Create generic GRASS GIS binary name regardless of version number\nRUN ln -sf `find /usr/local/bin -name \"grass??\" | sort | tail -n 1` /usr/local/bin/grass\n# Create a generic link to GRASS GIS libs (simplifies actinia configuration)\nRUN ln -s `grass --config path` /usr/local/grass7\nRUN grass --config svn_revision build\n\n# Install actinia-core plugins\nRUN git config --global http.sslVerify false\nRUN git clone https://github.com/mundialis/actinia_statistic_plugin.git /src/actinia_statistic_plugin\nWORKDIR /src/actinia_statistic_plugin\nRUN pip3 install --no-cache-dir -r requirements.txt && python3 setup.py install\n\n# Install GRASS GIS addons\nWORKDIR /src\n# Install the d.rast.multi module to render several maps at once\nRUN git clone https://huhabla@bitbucket.org/huhabla/d_rast_multi.git d.rast.multi\nRUN grass --tmp-location EPSG:25832 --exec g.extension -s extension=d.rast.multi url=/src/d.rast.multi\n\n# TODO: is there a better workaround to install addons?\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\nRUN grass --tmp-location EPSG:4326 --exec g.extension -s extension=i.cutlines && \\\n    grass --tmp-location EPSG:25832 --exec g.extension -s extension=v.out.png && \\\n    grass --tmp-location -c EPSG:25832 --exec g.extension -s extension=v.centerpoint\nRUN update-alternatives --remove python /usr/bin/python3\n\n# Fixup python shebangs - TODO: will be resolved in future by grass-core\nWORKDIR /root/.grass7/addons/scripts\nRUN find -type f | xargs sed -zi 's,#!/usr/bin/env python\\n,#!/usr/bin/env python3\\n,'\n\n# install SNAPPY\nRUN apt-get install --no-install-recommends default-jdk maven -y && rm -rf /var/lib/apt/lists/*;\nENV JAVA_HOME \"/usr/lib/jvm/java-11-openjdk-amd64\"\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\nCOPY snap /src/snap\nRUN sh /src/snap/install.sh\nRUN update-alternatives --remove python /usr/bin/python3\n\n# Install actinia-core\nWORKDIR /src\n\nADD https://api.github.com/repos/$SOURCE_GIT_REMOTE/$SOURCE_GIT_REPO/git/refs/$SOURCE_GIT_TYPE/$SOURCE_GIT_REF version.json\nRUN git clone -b ${SOURCE_GIT_REF} --single-branch ${SOURCE_GIT_URL}/${SOURCE_GIT_REMOTE}/${SOURCE_GIT_REPO}.git actinia_core\n\nWORKDIR /src/actinia_core\nRUN pip3 install --no-cache-dir -r requirements.txt && python3 setup.py install\n\n# Reduce the image size\nRUN apt-get autoremove -y\nRUN apt-get clean -y\n\n# Data directory\nWORKDIR /grassdb\nVOLUME /grassdb\n\n# Copy actinia config file and start scripts\nCOPY actinia.cfg /etc/default/actinia\nCOPY start.sh /src/start.sh\nCOPY start-dev.sh /src/start-dev.sh\n\nENTRYPOINT [\"/bin/bash\"]\nCMD [\"/src/start.sh\"]\n\nENV GISBASE \"\"\n\nEXPOSE 8088\nEXPOSE 9191\n"
}