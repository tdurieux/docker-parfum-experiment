{
  "startTime": 1674252725025,
  "endTime": 1674252725251,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 149
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 21,
        "columnStart": 36,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 21,
        "columnStart": 36,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.12\n\n#\n# IMPORTANT: This Dockerfile is used for testing, I do not recommend deploying\n#            Sliver using this container configuration! However, if you do want\n#            a Docker deployment this is probably a good place to start.\n#\n\nENV PROTOC_VER 3.7.1\n\n# Base packages\nRUN apt-get update --fix-missing && apt-get -y --no-install-recommends install \\\n  git build-essential zlib1g zlib1g-dev \\\n  libxml2 libxml2-dev libxslt-dev locate curl \\\n  libreadline6-dev libcurl4-openssl-dev git-core \\\n  libssl-dev libyaml-dev openssl autoconf libtool \\\n  ncurses-dev bison curl wget xsel postgresql \\\n  postgresql-contrib postgresql-client libpq-dev \\\n  libapr1 libaprutil1 libsvn1 \\\n  libpcap-dev libsqlite3-dev libgmp3-dev \\\n  zip unzip mingw-w64 binutils-mingw-w64 g++-mingw-w64 \\\n  nasm && rm -rf /var/lib/apt/lists/*;\n\n#\n# > User\n#\nRUN groupadd -g 999 sliver && useradd -r -u 999 -g sliver sliver\nRUN mkdir -p /home/sliver/ && chown -R sliver:sliver /home/sliver\n\n#\n# > Metasploit\n#\n\nRUN curl -f https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall && \\\n  chmod 755 msfinstall && \\\n  ./msfinstall\nRUN mkdir -p ~/.msf4/ && touch ~/.msf4/initial_setup_complete && \\\n  su -l sliver -c 'mkdir -p ~/.msf4/ && touch ~/.msf4/initial_setup_complete'\n\n#\n# > Sliver\n#\n\n# protoc\nWORKDIR /tmp\nRUN wget https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VER}/protoc-${PROTOC_VER}-linux-x86_64.zip \\\n    && unzip protoc-${PROTOC_VER}-linux-x86_64.zip \\\n    && cp -vv ./bin/protoc /usr/local/bin\n\n# go get utils\nRUN go get github.com/golang/protobuf/protoc-gen-go\nRUN go get -u github.com/gobuffalo/packr/packr\n\n# install dep\nRUN curl -f https://raw.githubusercontent.com/golang/dep/master/install.sh | sh\n\n# assets\nWORKDIR /go/src/github.com/bishopfox/sliver\nADD ./go-assets.sh /go/src/github.com/bishopfox/sliver/go-assets.sh\nRUN ./go-assets.sh\n\n# compile - we have to run dep after copying the code over or it bitches\nADD . /go/src/github.com/bishopfox/sliver/\nRUN make static-linux && cp -vv sliver-server /opt/sliver-server\n\nRUN /opt/sliver-server -unpack && /go/src/github.com/bishopfox/sliver/go-tests.sh\nRUN make clean \\\n    && rm -rf /go/src/* \\\n    && rm -rf /root/.sliver\n\nUSER sliver\nENTRYPOINT [ \"/opt/sliver-server\" ]\n"
}