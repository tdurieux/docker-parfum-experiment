{
  "startTime": 1674244774055,
  "endTime": 1674244774195,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 1,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 1,
        "columnEnd": 79
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 1,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos\nLABEL maintainer='Chao QU <mail@quchao.com>'\n\nARG GOSU_VERSION='1.10'\n\nRUN set -ex; \\\n    # epel\n    #yum -y install epel-release; \\\n    # keep up-to-date\n    yum update -y --exclude=kernel*; \\\n    # gosu\n    readonly ARCH='amd64'; \\\n    readonly GOSU_URL_BASE='https://github.com/tianon/gosu/releases/download/'; \\\n\tcurl -f -sSL -o /usr/bin/gosu \"${GOSU_URL_BASE}${GOSU_VERSION}/gosu-${ARCH}\"; \\\n\tcurl -f -sSL -o /tmp/gosu.asc \"${GOSU_URL_BASE}${GOSU_VERSION}/gosu-${ARCH}.asc\"; \\\n    # verify the signature\n    readonly GPG_KEY_SRV='keys.gnupg.net'; \\\n    readonly GOSU_GPG_KEY='B42F6819007F00F88E364FD4036A9C25BF357DD4'; \\\n\treadonly GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver \"${GPG_KEY_SRV}\" --recv-keys \"${GOSU_GPG_KEY}\"; \\\n\tgpg --batch --verify /tmp/gosu.asc /usr/bin/gosu; \\\n\trm -r \"${GNUPGHOME}\" /tmp/gosu.asc; \\\n\tchmod +x /usr/bin/gosu; \\\n\t# cleaning\n\tyum clean all; \\\n    rm -rf /tmp/* /var/tmp/*;\n\nARG RUN_AS_USER\nENV RUN_AS_USER=\"${RUN_AS_USER:-nutshell}\"\n\nRUN set -ex; \\\n    # a low-privilege user\n    groupadd -r \"${RUN_AS_USER}\"; \\\n    useradd -M -d /var/empty -s /sbin/nologin -g \"${RUN_AS_USER}\" -r \"${RUN_AS_USER}\";\n\nCOPY docker-entrypoint.sh entrypoint-utils.sh /usr/local/bin/\n\nRUN set -ex; \\\n    # use gosu instead\n    sed -i 's/su-exec/gosu/' /usr/local/bin/docker-entrypoint.sh; \\\n    # test flight\n\tchmod +x /usr/local/bin/docker-entrypoint.sh; \\\n    # avoid docker's 'Text file busy' issue\n\tdocker-entrypoint.sh /bin/true;\n"
}