{
  "startTime": 1674252307679,
  "endTime": 1674252307787,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 2,
        "columnEnd": 32
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 112
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed under GPL v2 or later\n#\n# See https://docs.docker.com/install/ for information on how to install Docker.\n#\n# After installing LinuxKI, build the container image:\n#   docker build \\\n#     --tag linuxki \\\n#     --build-arg http_proxy=$http_proxy \\\n#     --build-arg https_proxy=$https_proxy \\\n#     --build-arg HTTP_PROXY=$HTTP_PROXY \\\n#     --build-arg HTTPS_PROXY=$HTTPS_PROXY \\\n#     /opt/linuxki\n#\n# When generating the LinuxKI reports with kiall, add the -V option to enable\n# visualisations in the reports when possible.\n#\n# After the LinuxKI reports have been generated, to see the results with the\n# visualizations, from the directory with the analysis results, run:\n#   docker run \\\n#     --detach \\\n#     --name linuxki \\\n#     --publish-all \\\n#     --rm \\\n#     --volume $PWD:/var/www/html/linuxki \\\n#     linuxki\n#\n#   port=$(docker inspect \\\n#     --format='{{(index (index .NetworkSettings.Ports \"80/tcp\") 0).HostPort}}' \\\n#     linuxki)\n#   echo Server running on port $port\n#\n#   html_file=$(find . -iname 'kp.*.html')\n#   [[ $(echo $html_file | wc --words) -ne 1 ]] && unset html_file\n#   xdg-open http://localhost:$port/linuxki/$html_file\n#\n# When finished looking at the results, run:\n#   docker stop linuxki\n\nFROM centos:7\nLABEL maintainer=\"Christopher Voltz <christopher@voltz.ws>\"\n\nRUN yum update -y\nRUN yum install -y yum-utils && rm -rf /var/cache/yum\nRUN yum install -y httpd mod_ssl && rm -rf /var/cache/yum\nRUN yum install -y http://rpms.remirepo.net/enterprise/remi-release-7.rpm && \\\n  yum-config-manager --enable remi-php72 && \\\n  yum install -y php php-opcache && rm -rf /var/cache/yum\nRUN yum install -y https://raw.githubusercontent.com/HewlettPackard/LinuxKI/master/rpms/linuxki-5.5-1.noarch.rpm && rm -rf /var/cache/yum\nRUN yum clean all -y && rm -rf /var/cache/yum\n\nRUN echo '<?php phpinfo(); ?>' > /var/www/html/info.php\n\nEXPOSE 80\nEXPOSE 443\n\nCMD /usr/sbin/httpd -DFOREGROUND\n"
}