{
  "startTime": 1674249753378,
  "endTime": 1674249753463,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build image\nFROM golang:1.12-alpine as build\n\nRUN apk add --no-cache --update nodejs nodejs-npm make g++ git sqlite-dev\nRUN npm install -g less less-plugin-clean-css && npm cache clean --force;\nRUN go get -u github.com/jteeuwen/go-bindata/...\n\nRUN mkdir -p /go/src/github.com/writeas/writefreely\nWORKDIR /go/src/github.com/writeas/writefreely\nCOPY . .\n\nENV GO111MODULE=on\nRUN make build \\\n && make ui\nRUN mkdir /stage && \\\n    cp -R /go/bin \\\n      /go/src/github.com/writeas/writefreely/templates \\\n      /go/src/github.com/writeas/writefreely/static \\\n      /go/src/github.com/writeas/writefreely/pages \\\n      /go/src/github.com/writeas/writefreely/keys \\\n      /go/src/github.com/writeas/writefreely/cmd \\\n      /stage\n\n# Final image\nFROM alpine:3.8\n\nRUN apk add --no-cache openssl ca-certificates\nCOPY --from=build --chown=daemon:daemon /stage /go\n\nWORKDIR /go\nVOLUME /go/keys\nEXPOSE 8080\nUSER daemon\n\nENTRYPOINT [\"cmd/writefreely/writefreely\"]\n"
}