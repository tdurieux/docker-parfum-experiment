{
  "startTime": 1674239857274,
  "endTime": 1674239857372,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 2,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rhel:7.2-released\n\nLABEL \\\n      io.openshift.s2i.scripts-url=image:///usr/libexec/s2i \\\n      io.s2i.scripts-url=image:///usr/libexec/s2i \\\n      BZComponent=\"openshift-sti-base-docker\" \\\n      Name=\"openshift3/sti-base\" \\\n      Version=\"1.0\" \\\n      Release=\"36\" \\\n      Architecture=\"x86_64\"\n\nENV \\\n    # DEPRECATED: Use above LABEL instead, because this will be removed in future versions.\n    STI_SCRIPTS_URL=image:///usr/libexec/s2i \\\n    # Path to be used in other layers to place s2i scripts into\n    STI_SCRIPTS_PATH=/usr/libexec/s2i \\\n    # The $HOME is not set by default, but some applications needs this variable\n    # TODO: There is a bug in rhel7.1 image where the PATH variable is not exported\n    # properly as Docker image metadata, which causes the $PATH variable do not\n    # expand properly.\n    HOME=/opt/app-root/src \\\n    PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\n# When bash is started non-interactively, to run a shell script, for example it\n# looks for this variable and source the content of this file. This will enable\n# the SCL for all scripts without need to do 'scl enable'.\nCOPY contrib/scl_enable /opt/app-root/etc/scl_enable\nENV BASH_ENV=/opt/app-root/etc/scl_enable \\\n    ENV=/opt/app-root/etc/scl_enable \\\n    PROMPT_COMMAND=\". /opt/app-root/etc/scl_enable\"\n\n# This is the list of basic dependencies that all language Docker image can\n# consume.\n# Also setup the 'openshift' user that is used for the build execution and for the\n# application runtime execution.\n# TODO: Use better UID and GID values\nRUN yum-config-manager --enable rhel-7-server-optional-rpms && \\\n  INSTALL_PKGS=\"autoconf \\\n  automake \\\n  bsdtar \\\n  findutils \\\n  gcc-c++ \\\n  gd-devel \\\n  gdb \\\n  gettext \\\n  git \\\n  libcurl-devel \\\n  libxml2-devel \\\n  libxslt-devel \\\n  lsof \\\n  make \\\n  mariadb-devel \\\n  mariadb-libs \\\n  openssl-devel \\\n  patch \\\n  postgresql-devel \\\n  procps-ng \\\n  scl-utils \\\n  sqlite-devel \\\n  tar \\\n  unzip \\\n  wget \\\n  which \\\n  yum-utils \\\n  zlib-devel\" && \\\n  mkdir -p ${HOME}/.pki/nssdb && \\\n  chown -R 1001:0 ${HOME}/.pki && \\\n  yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS && \\\n  rpm -V $INSTALL_PKGS && \\\n  yum clean all -y && \\\n  useradd -u 1001 -r -g 0 -d ${HOME} -s /sbin/nologin \\\n      -c \"Default Application User\" default && \\\n  chown -R 1001:0 /opt/app-root && rm -rf /var/cache/yum\n\n# Copy executable utilities.\nCOPY bin/ /usr/bin/\n\n# Directory with the sources is set as the working directory so all STI scripts\n# can execute relative to this path.\nWORKDIR ${HOME}\n\nENTRYPOINT [\"container-entrypoint\"]\nCMD [\"base-usage\"]\n"
}