{
  "startTime": 1674241180268,
  "endTime": 1674241180477,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGESRC\n\nFROM $IMAGESRC\n\n# Allow flux-security version, username, UID, and GID to be overidden on\n#  docker build command line:\n#\nARG USER=flux\nARG UID=1000\nARG GID=1000\nARG FLUX_SECURITY_VERSION\nARG BASE_IMAGE\n\n# Install flux-security by hand for now:\n#\nRUN CCACHE_DISABLE=1 \\\n && V=$FLUX_SECURITY_VERSION \\\n && PKG=flux-security-$V \\\n && URL=https://github.com/flux-framework/flux-security/releases/download \\\n && wget ${URL}/v${V}/${PKG}.tar.gz \\\n && tar xvfz ${PKG}.tar.gz \\\n && cd ${PKG} \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr || cat config.log \\\n && make -j 4 \\\n && make install \\\n && cd .. \\\n && rm -rf flux-security-* && rm ${PKG}.tar.gz\n\n\n# Add configured user to image with sudo access:\n#\nRUN set -x && groupadd -g $UID $USER \\\n && useradd -g $USER -u $UID -d /home/$USER -m $USER \\\n && printf \"$USER ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers\n\n# Also add \"flux\" user to image with sudo access:\n#\nRUN set -x && groupadd flux \\\n && useradd -g flux -d /home/flux -m flux \\\n && printf \"flux ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers\n\n# Make sure user in appropriate group for sudo on different platorms\nRUN case $BASE_IMAGE in \\\n     bionic*) adduser $USER sudo && adduser flux sudo ;; \\\n     centos*) usermod -G wheel $USER && usermod -G wheel flux ;; \\\n     *) (>&2 echo \"Unknown BASE_IMAGE\") ;; \\\n    esac\n\n# Install extra dependencies if necessary here.\n#\n# Do not forget to run `apt update` on Ubuntu/bionic.\n# Do NOT run `yum upgrade` on CentOS (this will unnecessarily upgrade\n#  existing packages)\n#\nRUN case $BASE_IMAGE in \\\n     bionic*) ;; \\\n     centos*) ;; \\\n     *) (>&2 echo \"Unknown BASE_IMAGE\") ;; \\\n    esac\n\n# Setup MUNGE directories & key\nRUN mkdir -p /var/run/munge \\\n && dd if=/dev/urandom bs=1 count=1024 > /etc/munge/munge.key \\\n && chown -R munge /etc/munge/munge.key /var/run/munge \\\n && chmod 600 /etc/munge/munge.key\n\n\nENV BASE_IMAGE=$BASE_IMAGE\nUSER $USER\nWORKDIR /home/$USER\n"
}