{
  "startTime": 1674234166171,
  "endTime": 1674234166304,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\nMAINTAINER Thomas Spicer <thomas@openbridge.com>\n\nENV CLOUDSDK_PYTHON_SITEPACKAGES=1\nENV PATH /google-cloud-sdk/bin:$PATH\nENV HOME /\nENV BUILD_DEPS \\\n        g++ \\\n        gcc \\\n        linux-headers \\\n        wget \\\n        build-base \\\n        libressl-dev \\\n        python2-dev \\\n        libffi-dev \\\n        unzip \\\n        ca-certificates \\\n        py2-pip \\\n        gnupg \\\n        musl-dev\nRUN set -x \\\n    && apk add --no-cache --virtual .persistent-deps \\\n        rsync \\\n        bash \\\n        curl \\\n        dateutils \\\n        ca-certificates \\\n        libressl \\\n        libressl2.6-libcrypto \\\n        libressl2.6-libssl \\\n        coreutils \\\n        openssh-client \\\n        python2 \\\n        py-openssl \\\n    && apk add --no-cache --virtual .build-deps \\\n        $BUILD_DEPS \\\n    && pip install --no-cache-dir --upgrade pip crcmod setuptools awscli cryptography \\\n    && mkdir -p /etc/gcloud \\\n    && wget --no-check-certificate https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.zip \\\n    && unzip google-cloud-sdk.zip \\\n    && rm google-cloud-sdk.zip \\\n    && ./google-cloud-sdk/install.sh --path-update=true --bash-completion=true --rc-path=/.bashrc --additional-components app-engine-java app-engine-python kubectl alpha beta gcd-emulator pubsub-emulator cloud-datastore-emulator bq core gsutil gcloud app-engine-go bigtable \\\n    && ln -s /lib /lib64 \\\n    && rm -rf /tmp/* \\\n    && gcloud config set core/disable_usage_reporting true \\\n    && gcloud config set component_manager/disable_update_check true \\\n    && gcloud config set metrics/environment github_docker_image \\\n    && gcloud --version \\\n    && mkdir /.ssh \\\n    && rm -rf /var/cache/apk/* \\\n    && apk del .build-deps\n\nCOPY usr/bin/ /usr/bin/\nCOPY lifecycle.json /lifecycle.json\nCOPY sql/ /sql/\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\n\nRUN chmod +x /usr/bin/ /docker-entrypoint.sh\n\nVOLUME [\"/.config\"]\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"\"]\n"
}