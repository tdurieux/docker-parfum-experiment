{
  "startTime": 1674240377786,
  "endTime": 1674240378537,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 114,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 114,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 114,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 114,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedDockerfile": "### Note: This DockerFile is adapted from https://github.com/CircleCI-Public/example-images/openjdk\n\nFROM openjdk:11.0.1-jdk-sid\n\n# man directory is missing in some base images\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199\nRUN apt-get update \\\n    && mkdir -p /usr/share/man/man1 \\\n    && apt-get install --no-install-recommends -y \\\n               bzip2 \\\n               ca-certificates \\\n               curl \\\n               git \\\n               gnupg \\\n               gzip \\\n               locales \\\n               mercurial \\\n               netcat \\\n               net-tools \\\n               openssh-client \\\n               parallel \\\n               sudo \\\n               tar \\\n               unzip \\\n               wget \\\n               xvfb \\\n               zip && rm -rf /var/lib/apt/lists/*;\n\n\n# Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n\n# Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=C.UTF-8\n\n# install jq\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n    && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n    && chmod +x /usr/bin/jq \\\n    && jq --version\n\n# Install Docker\n\n# Docker.com returns the URL of the latest binary when you hit a directory listing\n# We curl this URL and `grep` the version out.\n# The output looks like this:\n\n#>    # To install, run the following commands as root:\n#>    curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-17.05.0-ce.tgz && tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin\n#>\n#>    # Then start docker in daemon mode:\n#>    /usr/local/bin/dockerd\n\nRUN set -ex \\\n    && export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*-ce\\.tgz' | sort -r | head -n 1) \\\n    && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n    && echo Docker URL: $DOCKER_URL \\\n    && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n    && ls -lha /tmp/docker.tgz \\\n    && tar -xz -C /tmp -f /tmp/docker.tgz \\\n    && mv /tmp/docker/* /usr/bin \\\n    && rm -rf /tmp/docker /tmp/docker.tgz \\\n    && which docker \\\n    && (docker version || true)\n\n# docker compose\nRUN COMPOSE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest\" \\\n    && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose $COMPOSE_URL \\\n    && chmod +x /usr/bin/docker-compose \\\n    && docker-compose version\n\n# install dockerize\nRUN DOCKERIZE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz\" \\\n    && curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz $DOCKERIZE_URL \\\n    && tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz \\\n    && rm -rf /tmp/dockerize-linux-amd64.tar.gz \\\n    && dockerize --version\n\nRUN groupadd --gid 3434 riscvuser \\\n    && useradd --uid 3434 --gid riscvuser --shell /bin/bash --create-home riscvuser \\\n    && echo 'riscvuser ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-riscvuser \\\n    && echo 'Defaults    env_keep += \"DEBIAN_FRONTEND\"' >> /etc/sudoers.d/env_keep\n\n# BEGIN IMAGE CUSTOMIZATIONS\n\n# cacerts from OpenJDK 9-slim to workaround http://bugs.java.com/view_bug.do?bug_id=8189357\n# AND https://github.com/docker-library/openjdk/issues/145\n#\n# Created by running:\n# docker run --rm openjdk:9-slim cat /etc/ssl/certs/java/cacerts | #   aws s3 cp - s3://circle-downloads/circleci-images/cache/linux-amd64/openjdk-9-slim-cacerts --acl public-read\nRUN if java -fullversion 2>&1 | grep -q '\"9.'; then   curl --silent --show-error --location --fail --retry 3 --output /etc/ssl/certs/java/cacerts        https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/openjdk-9-slim-cacerts;  fi\n\n# Install Maven Version: 3.6.0\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/apache-maven.tar.gz     https://www.apache.org/dist/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.tar.gz   && tar xf /tmp/apache-maven.tar.gz -C /opt/   && rm /tmp/apache-maven.tar.gz   && ln -s /opt/apache-maven-* /opt/apache-maven   && /opt/apache-maven/bin/mvn -version\n\n# Install Ant Version: 1.10.5\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/apache-ant.tar.gz     https://archive.apache.org/dist/ant/binaries/apache-ant-1.10.5-bin.tar.gz   && tar xf /tmp/apache-ant.tar.gz -C /opt/   && ln -s /opt/apache-ant-* /opt/apache-ant   && rm -rf /tmp/apache-ant.tar.gz   && /opt/apache-ant/bin/ant -version\n\nENV ANT_HOME=/opt/apache-ant\n\n# Install Gradle Version: 5.0\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/gradle.zip     https://services.gradle.org/distributions/gradle-5.0-bin.zip   && unzip -d /opt /tmp/gradle.zip   && rm /tmp/gradle.zip   && ln -s /opt/gradle-* /opt/gradle   && /opt/gradle/bin/gradle -version\n\n# Install sbt from https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/sbt-latest.tgz\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/sbt.tgz https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/sbt-latest.tgz   && tar -xzf /tmp/sbt.tgz -C /opt/   && rm /tmp/sbt.tgz   && /opt/sbt/bin/sbt sbtVersion\n\n# Install openjfx\nRUN apt-get install -y --no-install-recommends openjfx && rm -rf /var/lib/apt/lists/*;\n\n# Add build-essential\nRUN apt-get install --no-install-recommends -y build-essential && rm -rf /var/lib/apt/lists/*;\n\n# Add RISCV toolchain necessary dependencies\nRUN apt-get install --no-install-recommends -y \\\n            autoconf \\\n            automake \\\n            autotools-dev \\\n            babeltrace \\\n            bc \\\n            bison \\\n            curl \\\n            device-tree-compiler \\\n            expat \\\n            flex \\\n            gawk \\\n            gperf \\\n            libexpat-dev \\\n            libgmp-dev \\\n            libmpc-dev \\\n            libmpfr-dev \\\n            libtool \\\n            libusb-1.0-0-dev \\\n            patchutils \\\n            pkg-config \\\n            python \\\n            python-pexpect \\\n            texinfo \\\n            zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# Update PATH for Java tools\nENV PATH=\"/opt/sbt/bin:/opt/apache-maven/bin:/opt/apache-ant/bin:/opt/gradle/bin:$PATH\"\n\n# Add HOME environment variable\nENV HOME=\"/home/riscvuser\"\n\n# Update PATH for RISCV toolchain (note: hardcoded for CircleCI)\nENV RISCV=\"$HOME/riscv-tools-install\"\nENV PATH=\"$RISCV/bin:$PATH\"\n\n# smoke test with path\nRUN mvn -version \\\n    && ant -version \\\n    && gradle -version \\\n    && sbt sbtVersion\n\n# END IMAGE CUSTOMIZATIONS\n\nWORKDIR $HOME\nUSER riscvuser\n\nCMD [\"/bin/sh\"]\n"
}