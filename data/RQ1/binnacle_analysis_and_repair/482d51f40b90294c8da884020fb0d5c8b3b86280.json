{
  "startTime": 1674248569822,
  "endTime": 1674248570134,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedDockerfile": "# Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved\n\nFROM ubuntu:16.04\n\n# Install Caffe2 + dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  build-essential \\\n  git \\\n  libgoogle-glog-dev \\\n  libgtest-dev \\\n  libiomp-dev \\\n  libleveldb-dev \\\n  liblmdb-dev \\\n  libopencv-dev \\\n  libopenmpi-dev \\\n  libsnappy-dev \\\n  openmpi-bin \\\n  openmpi-doc \\\n  python-dev \\\n  python-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir setuptools wheel\nRUN pip install --no-cache-dir future numpy protobuf typing hypothesis pyyaml\nRUN apt-get install -y --no-install-recommends \\\n      libgflags-dev \\\n      cmake && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/pytorch/pytorch.git\nWORKDIR pytorch\nRUN git submodule update --init --recursive\nRUN python setup.py install\n\n# Install Thrift + dependencies\nWORKDIR /\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  libboost-dev \\\n  libboost-test-dev \\\n  libboost-program-options-dev \\\n  libboost-filesystem-dev \\\n  libboost-thread-dev \\\n  libevent-dev \\\n  automake \\\n  libtool \\\n  curl \\\n  flex \\\n  bison \\\n  pkg-config \\\n  libssl-dev && rm -rf /var/lib/apt/lists/*;\nRUN curl -f https://www-us.apache.org/dist/thrift/0.11.0/thrift-0.11.0.tar.gz --output thrift-0.11.0.tar.gz\nRUN tar -xvf thrift-0.11.0.tar.gz && rm thrift-0.11.0.tar.gz\nWORKDIR thrift-0.11.0\nRUN ./bootstrap.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make\nRUN make install\n\n# Install Pistache (REST framework)\nWORKDIR /\nRUN git clone https://github.com/oktal/pistache.git\nWORKDIR /pistache\nRUN git submodule update --init\nRUN mkdir build\nWORKDIR /pistache/build\nRUN cmake -G \"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release ..\nRUN make\nRUN make install\n\n# Install libcurl\nRUN apt-get install --no-install-recommends -y libcurl4-openssl-dev && rm -rf /var/lib/apt/lists/*;\n\n# Copy local files to /app\nCOPY . /app\nWORKDIR /app\n\n# Compile app\nRUN thrift -r --gen cpp predictor.thrift\nRUN make\n\n# Add library search paths\nRUN echo '/pytorch/build/lib/' >> /etc/ld.so.conf.d/local.conf\nRUN echo '/usr/local/lib/' >> /etc/ld.so.conf.d/local.conf\nRUN ldconfig\n\n# Open ports\nEXPOSE 9090\nEXPOSE 8080\n"
}