{
  "startTime": 1674243684252,
  "endTime": 1674243684456,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 39,
        "columnEnd": 66
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 35,
        "columnStart": 21,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# BUILD: docker build . -t solita/napote-ckan\n# docker build . -t ckan && docker run -d -p 80:5000 --link db:db --link redis:redis --link solr:solr ckan\n\nFROM centos:7\n\nENV CKAN_HOME /usr/lib/ckan\nENV CKAN_VIRTUAL_ENV $CKAN_HOME/virtualenv\nENV CKAN_CONFIG /etc/ckan\nENV CKAN_STORAGE_PATH /var/lib/ckan\nENV CKAN_CUSTOM_PLUGINS_PATH /ckan-plugins\n\n# These build-time vars are specified by docker-compose.yml\nARG CKAN_PORT=5555\nARG CKAN_SITE_URL=http://localhost:8080\n\n## Install required packages ##\n# NOTE: lipgq-dev (debian) = postgresql-libs (centos)\n# NOTE: build-essential (debian) = gcc gcc-c++ make openssl-devel (centos)\n\n# Perform updates and install EPEL for inotify-tools\nRUN yum -y update && yum -y upgrade && yum -y install epel-release && rm -rf /var/cache/yum\n\n# Install packages\nRUN yum -y update && yum --enablerepo=epel -y install \\\n\t\tpython-devel \\\n\t\tpostgresql-devel \\\n\t\tpostgresql-libs \\\n        python-virtualenv \\\n        git-core \\\n        gcc \\\n        gcc-c++ \\\n        make \\\n        openssl-devel \\\n        libffi-devel \\\n        gcc \\\n        inotify-tools \\\n\t&& yum clean all && rm -rf /var/cache/yum\n\n# Create ckan user\nRUN useradd -r -u 900 -m -c \"ckan account\" -d $CKAN_HOME -s /bin/false ckan\n\n## SetUp Virtual Environment for CKAN ##\nRUN mkdir -p $CKAN_VIRTUAL_ENV $CKAN_CONFIG $CKAN_STORAGE_PATH $CKAN_CUSTOM_PLUGINS_PATH\n\nRUN virtualenv $CKAN_VIRTUAL_ENV\nRUN ln -s $CKAN_VIRTUAL_ENV/bin/pip /usr/local/bin/ckan-pip\nRUN ln -s $CKAN_VIRTUAL_ENV/bin/paster /usr/local/bin/ckan-paster\n\n\n## Install recommended version of setup tools ##\n# NOTE: setuptools version defined in ckan/dev-requirements.txt\nRUN ckan-pip install setuptools==20.4\n\n## Install latest stable CKAN in $CKAN_HOME/src/ckan directory ##\nRUN ckan-pip install -e 'git+https://github.com/ckan/ckan.git@ckan-2.7.0#egg=ckan'\n\n# Install ckan plugins\nADD ./ckan-plugins $CKAN_HOME/src/\nRUN ckan-pip install -e $CKAN_HOME/src/ckanext-napote_theme\n\n# Copy config files\nCOPY ./who.ini /\nRUN ln -s /who.ini $CKAN_CONFIG/who.ini\n\n## Install pytz. ##\n# NOTE: It seems that some of the requirements have pytz dependency, so we'll have to install pytz before installing\n#       requirements.txt\n\n# NOTE: pytz version defined in ckan/requirements.txt\nRUN ckan-pip install pytz==2016.7\n\n## Install CKAN dependencies ##\nRUN ckan-pip install --upgrade -r $CKAN_VIRTUAL_ENV/src/ckan/requirements.txt\n\n\n## SetUp EntryPoint ##\nCOPY ./ckan-entrypoint.sh /\n\n\n# CHMOD\nRUN chmod +x /ckan-entrypoint.sh\nRUN chown -R ckan:ckan $CKAN_HOME $CKAN_VIRTUAL_ENV $CKAN_CONFIG $CKAN_STORAGE_PATH\n\n\nENTRYPOINT [\"/ckan-entrypoint.sh\"]\n\n\n## Volumes ##\n\n# Config\nVOLUME [\"/etc/ckan\"]\n\n# Home\nVOLUME [\"/usr/lib/ckan\"]\n\n# Storage\nVOLUME [\"/var/lib/ckan\"]\n\n# Volume for custom ckan plugins\nVOLUME [\"/ckan-plugins\"]\n\nUSER ckan\nEXPOSE $CKAN_PORT\n\n\nCMD [\"ckan-paster\",\"serve\",\"--reload\",\"/etc/ckan/ckan.ini\"]\n"
}