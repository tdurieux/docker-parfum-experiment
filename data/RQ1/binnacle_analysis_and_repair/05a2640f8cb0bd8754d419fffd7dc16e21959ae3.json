{
  "startTime": 1674240447057,
  "endTime": 1674240447160,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\n\nLABEL maintainer \"Infer team\"\n\n# mkdir the man/man1 directory due to Debian bug #863199\nRUN apt-get update && \\\n    mkdir -p /usr/share/man/man1 && \\\n    apt-get install --yes --no-install-recommends \\\n      autoconf \\\n      automake \\\n      bzip2 \\\n      cmake \\\n      curl \\\n      gcc \\\n      git \\\n      libc6-dev \\\n      libgmp-dev \\\n      libmpfr-dev \\\n      libsqlite3-dev \\\n      make \\\n      openjdk-8-jdk-headless \\\n      patch \\\n      pkg-config \\\n      python2.7 \\\n      unzip \\\n      zlib1g-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Some scripts in facebook-clang-plugins assume \"python\" is available\nRUN cd /usr/local/bin && ln -s /usr/bin/python2.7 python\n\n# Install opam 2\nRUN curl -f -sL https://github.com/ocaml/opam/releases/download/2.0.2/opam-2.0.2-x86_64-linux > /usr/bin/opam && \\\n    chmod +x /usr/bin/opam\n\n# Disable sandboxing\n# Without this opam fails to compile OCaml for some reason. We don't need sandboxing inside a Docker container anyway.\nRUN opam init --reinit --bare --disable-sandboxing\n\n# Download the latest Infer master\nRUN cd / && \\\n    git clone https://github.com/facebook/infer/\n\n# Build opam deps first, then infer. This way if any step fails we\n# don't lose the significant amount of work done in the previous\n# steps.\nRUN cd /infer && \\\n    INFER_OPAM_SWITCH=4.07.1 ./build-infer.sh --only-setup-opam --no-opam-lock java && \\\n    opam clean\n\n# Make sure clang is disabled\nRUN eval $(opam env) && \\\n    cd /infer && \\\n    SKIP_SUBMODULES=true ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-c-analyzers\n\n# \"Install\" Infer. The tutorial assumes /infer-host is the working copy of infer so let's put it in the PATH too.\nENV PATH /infer-host/infer/bin:/infer/bin:$PATH\n\n# build in non-optimized mode by default to speed up build times\nENV BUILD_MODE=default\n\n# prevent exiting by compulsively hitting Control-D\nENV IGNOREEOF=9\n\n# should be moved earlier\nENV INFER_OPAM_SWITCH=4.07.1\n\n# export `opam env`\nENV OPAM_SWITCH_PREFIX=/root/.opam/4.07.1\nENV CAML_LD_LIBRARY_PATH=/root/.opam/4.07.1/lib/stublibs:/root/.opam/4.07.1/lib/ocaml/stublibs:/root/.opam/4.07.1/lib/ocaml\nENV OCAML_TOPLEVEL_PATH=/root/.opam/4.07.1/lib/toplevel\nENV MANPATH=$MANPATH:/root/.opam/4.07.1/man\nENV PATH=/root/.opam/4.07.1/bin:$PATH\n"
}