{
  "startTime": 1674244211244,
  "endTime": 1674244211399,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM circleci/ubuntu-server:trusty-latest\n\nENV VERBOSE true\n\n# Avoid any installation scripts interact with upstart\n# So divert now, but undivert at the end\n# You shouldn't change the line unless you understand the consequence\nRUN echo 'exit 101' > /usr/sbin/policy-rc.d \\\n\t&& chmod +x /usr/sbin/policy-rc.d \\\n        && dpkg-divert --local --rename --add /sbin/initctl \\\n        && ln -s /bin/true /sbin/initctl\n\nADD circleci-install /usr/local/bin/circleci-install\nADD circleci-provision-scripts/base.sh circleci-provision-scripts/circleci-specific.sh /opt/circleci-provision-scripts/\nRUN circleci-install base_requirements && circleci-install circleci_specific\n\n# Databases\nADD circleci-provision-scripts/mysql.sh circleci-provision-scripts/mongo.sh circleci-provision-scripts/postgres.sh /opt/circleci-provision-scripts/\nRUN for package in mysql_57 mongo postgres postgres_ext_postgis; do circleci-install $package; done\n\n# Installing java early beacuse a few things have the dependency to java (i.g. cassandra)\nADD circleci-provision-scripts/java.sh /opt/circleci-provision-scripts/java.sh\nRUN circleci-install java oraclejdk8 && circleci-install java openjdk8\n\nADD circleci-provision-scripts/misc.sh /opt/circleci-provision-scripts/misc.sh\nRUN for package in sysadmin devtools jq redis memcached rabbitmq neo4j elasticsearch beanstalkd cassandra riak couchdb; do circleci-install $package; done\n\n# Dislabe services by default\nRUN for s in apache2 memcached rabbitmq-server neo4j neo4j-service elasticsearch beanstalkd cassandra riak couchdb; do sysv-rc-conf $s off; done\n\n# Browsers\nADD circleci-provision-scripts/firefox.sh circleci-provision-scripts/chrome.sh circleci-provision-scripts/phantomjs.sh /opt/circleci-provision-scripts/\nRUN circleci-install firefox && circleci-install chrome && circleci-install phantomjs\n\n# Qt\nADD circleci-provision-scripts/qt.sh /opt/circleci-provision-scripts/qt.sh\nRUN circleci-install qt\n\n# Install deployment tools\nADD circleci-provision-scripts/awscli.sh circleci-provision-scripts/gcloud.sh circleci-provision-scripts/heroku.sh /opt/circleci-provision-scripts/\nRUN for package in awscli gcloud heroku; do circleci-install $package; done\n\n# Languages\nARG use_precompile=true\nENV USE_PRECOMPILE=$use_precompile RUN_APT_UPDATE=true\nRUN curl -f -s https://packagecloud.io/install/repositories/circleci/trusty/script.deb.sh | sudo bash\nADD circleci-provision-scripts/python.sh /opt/circleci-provision-scripts/python.sh\nRUN circleci-install python 2.7.10\nRUN circleci-install python 2.7.11\nRUN circleci-install python 3.4.3\nRUN circleci-install python 3.5.1\nRUN sudo -H -i -u ubuntu pyenv global 2.7.11\n\nADD circleci-provision-scripts/nodejs.sh /opt/circleci-provision-scripts/nodejs.sh\nRUN circleci-install nodejs 4.2.6\nRUN circleci-install nodejs 5.5.0\nRUN circleci-install nodejs 6.1.0\nRUN sudo -H -i -u ubuntu nvm alias default 4.2.6\nRUN circleci-install yarn 0.18.1\n\nADD circleci-provision-scripts/go.sh /opt/circleci-provision-scripts/go.sh\nRUN circleci-install golang 1.6.2\n\nADD circleci-provision-scripts/ruby.sh /opt/circleci-provision-scripts/ruby.sh\nRUN circleci-install ruby 2.2.4\nRUN circleci-install ruby 2.3.0\nRUN circleci-install ruby 2.3.1\nRUN sudo -H -i -u ubuntu rvm use 2.2.4 --default\n\nADD circleci-provision-scripts/php.sh /opt/circleci-provision-scripts/php.sh\nRUN circleci-install php 5.6.17\nRUN circleci-install php 7.0.4\nRUN sudo -H -i -u ubuntu phpenv global 5.6.17\n\nADD circleci-provision-scripts/clojure.sh /opt/circleci-provision-scripts/clojure.sh\nRUN circleci-install clojure\n\nADD circleci-provision-scripts/scala.sh /opt/circleci-provision-scripts/scala.sh\nRUN circleci-install scala\n\nADD circleci-provision-scripts/docker.sh /opt/circleci-provision-scripts/docker.sh\nRUN circleci-install docker && circleci-install docker_compose\n\n# Undivert upstart\n# You shouldn't change the line unless you understad the consequence\nRUN rm /usr/sbin/policy-rc.d && rm /sbin/initctl && dpkg-divert --rename --remove /sbin/initctl\n\n# Add rest of provisioning files -- add at end to avoid cache invalidation\nADD circleci-provision-scripts /opt/circleci-provision-scripts\n\n# We need Dockerfile because unit test parses Dockerfile to make sure all versions are installed\nADD targets/ubuntu-14.04-enterprise/Dockerfile /opt/circleci/Dockerfile\n\nARG IMAGE_TAG\nRUN echo $IMAGE_TAG > /opt/circleci/image_version\n\nADD targets/ubuntu-14.04-enterprise/pkg-versions.sh /opt/circleci/bin/pkg-versions.sh\n\nLABEL circleci.user=\"ubuntu\"\n"
}