{
  "startTime": 1674248949808,
  "endTime": 1674248950177,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 69,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 69,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedDockerfile": "# $ docker build -t cpsievert/plotly-vtest .\n# $ docker run -e VMODE=\"ci\" -v $(pwd):/home/plotly --privileged -p 3838:3838 cpsievert/plotly-vtest\n# ------------------------------------------------------------------------------\n\nFROM ubuntu:16.04\nMAINTAINER Carson Sievert \"carson@rstudio.com\"\n\n# Don't print \"debconf: unable to initialize frontend: Dialog\" messages\nARG DEBIAN_FRONTED=noninteractive\nARG CACHEBUST=1\n\n# Need this to add R repo\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# Add R apt repository\nRUN add-apt-repository \"deb http://cran.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran35/\"\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0x51716619e084dab9\n\n# Install basic stuff and R\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    sudo \\\n    git \\\n    vim-tiny \\\n    nano \\\n    wget \\\n    r-base \\\n    r-base-dev \\\n    r-recommended \\\n    fonts-texgyre \\\n    texinfo \\\n    locales \\\n    libcurl4-gnutls-dev \\\n    libcairo2-dev \\\n    libxt-dev \\\n    libssl-dev \\\n    libxml2-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n   && locale-gen en_US.utf8 \\\n   && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LANG=en_US.UTF-8\n\n# Rprofile\nRUN echo 'options(\\n\\\n  repos = c(CRAN = \"https://cloud.r-project.org/\"),\\n\\\n  download.file.method = \"libcurl\",\\n\\\n  Ncpus = parallel::detectCores(logical=FALSE),\\n\\\n  shiny.host = \"0.0.0.0\", shiny.port = 3838\\n\\\n)' >> /etc/R/Rprofile.site\n\n# Update R packages\nRUN R -e \"update.packages(ask = F)\"\n\n# Other R packages needed for running visual tests\nRUN R -e \"install.packages('devtools')\"\nRUN R -e \"install.packages('roxygen2')\"\nRUN R -e \"install.packages('testthat')\"\nRUN R -e \"install.packages('vdiffr')\"\nRUN R -e \"install.packages('diffobj')\"\n\n# sf system dependencies\nRUN add-apt-repository ppa:ubuntugis/ubuntugis-unstable --yes\nRUN apt-get -y update\nRUN apt-get install --no-install-recommends -y libudunits2-dev libproj-dev libgeos-dev libgdal-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install all plotly's dependencies\nRUN R -e \"install.packages('plotly', dependencies = T)\"\n\n# system dependencies related to running orca\nRUN apt-get install --no-install-recommends -y \\\n    libgtk2.0-0 \\\n    libgconf-2-4 \\\n    xvfb \\\n    fuse \\\n    desktop-file-utils && rm -rf /var/lib/apt/lists/*;\n\n# google chrome\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n    sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y google-chrome-stable && rm -rf /var/lib/apt/lists/*;\n\n# Download orca binary and make it executable under xvfb\nRUN wget https://github.com/plotly/orca/releases/download/v1.1.1/orca-1.1.1-x86_64.AppImage -P /home\nRUN chmod 777 /home/orca-1.1.1-x86_64.AppImage\nRUN printf '#!/bin/bash \\nxvfb-run --auto-servernum --server-args \"-screen 0 640x480x24\" /home/orca-1.1.1-x86_64.AppImage \"$@\"' > /usr/bin/orca\nRUN chmod 777 /usr/bin/orca\n\n# switch on visual testing\nENV VDIFFR=true\nEXPOSE 3838\n\nRUN R -e \"install.packages('assertthat')\"\nRUN R -e \"install.packages('testthat')\"\nRUN R -e \"update.packages(ask=FALSE)\"\n\n# install any new dependencies, then either manage cases (the default) or run tests\n# note the workaround to get docker to run a proper exit status when there are testthat errors\n# https://github.com/r-lib/testthat/issues/515#issuecomment-304169376\n\nCMD cd /home/plotly && R -e \"devtools::install_deps(dep = T); \\\n  if (!identical(Sys.getenv('VMODE'), 'ci')) vdiffr::manage_cases(); \\\n  res <- devtools::test(reporter='summary'); \\\n  df <- as.data.frame(res); \\\n  if (sum(df\\$failed) > 0 || any(df\\$error)) q(status=1)\"\n"
}