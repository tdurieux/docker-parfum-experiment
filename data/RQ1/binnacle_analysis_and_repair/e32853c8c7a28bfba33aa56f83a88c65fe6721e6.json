{
  "startTime": 1674238634335,
  "endTime": 1674238635253,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 5,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 5,
        "columnEnd": 95
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 5,
        "columnEnd": 25
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 5,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 57,
        "columnStart": 5,
        "columnEnd": 25
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 5,
        "columnEnd": 51
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 47,
        "columnStart": 5,
        "columnEnd": 42
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 114,
        "lineEnd": 123,
        "columnStart": 5,
        "columnEnd": 42
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 5,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\nMAINTAINER Mathilde Ffrench <mathilde.ffrench@echinopsii.net>\n\nENV LANG=C.UTF-8 PYTHON_VERSION=2.7.12 PYTHON_PIP_VERSION=8.1.2 HUGO_VERSION=0.16 NODE_VERSION=v6.3.1 NPM_VERSION=3 NODE_CONFIG_FLAGS=\"--fully-static\" NODE_DEL_PKGS=\"libgcc libstdc++\" NODE_RM_DIRS=/usr/include GRMK_PKGNAME=graphicsmagick GRMK_PKGVER=1.3.23\nENV GRMK_PKGSOURCE=http://downloads.sourceforge.net/$GRMK_PKGNAME/$GRMK_PKGNAME/$GRMK_PKGVER/GraphicsMagick-$GRMK_PKGVER.tar.lz\n\n# nats-site dev env - one shoot installer : Python, Hugo, Pygments, GraphicsMagick and Node\nRUN set -ex \\\n  && apk add --update wget ca-certificates \\ \n  && apk add --no-cache --virtual .fetch-deps curl gnupg tar xz \\\n  && apk add --no-cache --virtual .build-deps  \\\n    bzip2-dev \\\n    gcc \\\n    libc-dev \\\n    linux-headers \\\n    make \\\n    ncurses-dev \\\n    openssl-dev \\\n    pax-utils \\\n    readline-dev \\\n    sqlite-dev \\\n    tcl-dev \\\n    tk-dev \\\n    zlib-dev \\\n  && apk add --update g++ \\\n                     gcc \\\n                     make \\\n                     lzip \\\n                     wget \\\n                     libjpeg-turbo-dev \\\n                     libpng-dev \\\n                     libtool \\\n                     libgomp \\\n  && apk add --no-cache curl make gcc g++ linux-headers paxctl libgcc libstdc++ gnupg \\\n\n  && curl -fSL \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" -o python.tar.xz \\\n  && curl -fSL \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" -o python.tar.xz.asc \\\n  && export GNUPGHOME=\"$(mktemp -d)\" \\\n  && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \\\n  C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF \\ \n  9554F04D7259F04124DE6B476D5A82AC7E37093B \\\n  94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n  0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 \\ \n  FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n  71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\ \n  DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n  C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n  B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n  && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n  && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n\n  && mkdir -p /usr/src/python \\\n  && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n  && rm python.tar.xz \\\n  && cd /usr/src/python \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --enable-shared \\\n    --enable-unicode=ucs4 \\\n  && make -j$(getconf _NPROCESSORS_ONLN) \\\n  && make install \\\n\n  && curl -fSL 'https://bootstrap.pypa.io/get-pip.py' | python2 \\\n  && pip install --no-cache-dir --upgrade pip==$PYTHON_PIP_VERSION \\\n  && [ \"$(pip list | awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }')\" = \"$PYTHON_PIP_VERSION\" ] \\\n  && find /usr/local -depth \\\n    \\( \\\n      \\( -type d -a -name test -o -name tests \\) \\\n      -o \\\n      \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \\\n    \\) -exec rm -rf '{}' + \\\n  && runDeps=\"$( \\\n    scanelf --needed --nobanner --recursive /usr/local \\\n      | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n      | sort -u \\\n      | xargs -r apk info --installed \\\n      | sort -u \\\n  )\" \\\n  && apk add --virtual .python-rundeps $runDeps \\\n\n  && cd /tmp/ \\\n  && wget --no-check-certificate https://github.com/spf13/hugo/releases/download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_linux-64bit.tgz \\\n  && tar xzf hugo_${HUGO_VERSION}_linux-64bit.tgz \\\n  && rm -r hugo_${HUGO_VERSION}_linux-64bit.tgz \\\n  && mv hugo /usr/bin/hugo \\\n\n  && cd / \\\n  && pip install --no-cache-dir Pygments \\\n\n  && wget $GRMK_PKGSOURCE \\\n  && lzip -d -c GraphicsMagick-$GRMK_PKGVER.tar.lz | tar -xvf - \\\n  && cd GraphicsMagick-$GRMK_PKGVER \\\n  && ./configure \\\n    --build=$CBUILD \\\n    --host=$CHOST \\\n    --prefix=/usr \\\n    --sysconfdir=/etc \\\n    --mandir=/usr/share/man \\\n    --infodir=/usr/share/info \\\n    --localstatedir=/var \\\n    --enable-shared \\\n    --disable-static \\\n    --with-modules \\\n    --with-threads \\\n    --with-gs-font-dir=/usr/share/fonts/Type1 \\\n    --with-quantum-depth=16 \\\n  && make \\\n  && make install \\\n  && cd .. \\\n  && rm -rf GraphicsMagick-$GRMK_PKGVER \\\n  && rm GraphicsMagick-$GRMK_PKGVER.tar.lz \\\n\n  && curl -f -o node-${NODE_VERSION}.tar.gz -sSL https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}.tar.gz \\\n  && curl -f -o SHASUMS256.txt.asc -sSL https://nodejs.org/dist/${NODE_VERSION}/SHASUMS256.txt.asc \\\n  && export GNUPGHOME=\"$(mktemp -d)\" \\\n  && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \\\n  C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF \\\n  9554F04D7259F04124DE6B476D5A82AC7E37093B \\\n  94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n  0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 \\\n  FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n  71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n  DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n  C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n  B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n  && gpg --batch --verify SHASUMS256.txt.asc \\\n  && grep node-${NODE_VERSION}.tar.gz SHASUMS256.txt.asc | sha256sum -c - \\\n  && tar -zxf node-${NODE_VERSION}.tar.gz \\\n  && cd node-${NODE_VERSION} \\\n  && export GYP_DEFINES=\"linux_use_gold_flags=0\" \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr ${NODE_CONFIG_FLAGS} \\\n  && NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) \\\n  && make -j${NPROC} -C out mksnapshot BUILDTYPE=Release \\\n  && paxctl -cm out/Release/mksnapshot \\\n  && make -j${NPROC} \\\n  && make install \\\n  && paxctl -cm /usr/bin/node \\\n  && cd / \\\n  && if [ -x /usr/bin/npm ]; then \\\n    npm install -g npm@${NPM_VERSION} && \\\n    find /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf; npm cache clean --force; \\\n  fi \\\n  && apk del curl make gcc g++ python linux-headers paxctl gnupg ${NODE_DEL_PKGS} \\\n  && rm -rf /etc/ssl /node-${VERSION}.tar.gz /SHASUMS256.txt.asc /node-${NODE_VERSION} ${NODE_RM_DIRS} \\\n    /usr/share/man /tmp/* /var/cache/apk/* /root/.npm /root/.node-gyp /root/.gnupg \\\n    /usr/lib/node_modules/npm/man /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html \\\n  && apk del wget ca-certificates && rm -rf /usr/src/python\n\n\nVOLUME /nats-site\n\nWORKDIR /nats-site\n\nEXPOSE 1313\n\nCMD [\"/usr/bin/hugo\", \"server\", \"-w\", \"--bind\", \"0.0.0.0\"]\n"
}