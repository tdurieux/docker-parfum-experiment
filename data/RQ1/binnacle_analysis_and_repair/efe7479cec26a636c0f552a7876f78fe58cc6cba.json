{
  "startTime": 1674248109835,
  "endTime": 1674248110181,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM digitalrebar/deploy-service-wrapper\n\nARG DR_TAG\n# Set our command\nENTRYPOINT [\"/sbin/docker-entrypoint.sh\"]\n\nRUN groupadd -r rebar && useradd -r -u 1000 -g rebar -p '$6$afAL.34B$T2WR6zycEe2q3DktVtbH2orOroblhR6uCdo5n3jxLsm47PBm9lwygTbv3AjcmGDnvlh0y83u2yprET8g9/mve.' -m -d /home/rebar -s /bin/bash rebar \\\n  && mkdir -p /opt /etc/sudoers.d /home/rebar/.ssh /var/run/rebar /var/cache/rebar/ansible_playbook /home/rebar/.ansible \\\n  && chown rebar:rebar /var/run/rebar /home/rebar/.ansible /home/rebar/.ssh /var/cache/rebar/ansible_playbook\n\nCOPY rebar_sudoer /etc/sudoers.d/rebar\nCOPY ssh_config /home/rebar/.ssh/config\nCOPY rebar-runner.json /etc/consul.d/rebar-runner.json\nCOPY core /opt/digitalrebar/core\nRUN test -d /opt/digitalrebar/core/rails \\\n    || { rm -rf /opt/digitalrebar; git clone https://github.com/digitalrebar/digitalrebar /opt/digitalrebar; }\n\nRUN apt-get -y update \\\n  && apt-get -y --no-install-recommends install software-properties-common wget \\\n  && apt-add-repository ppa:brightbox/ruby-ng \\\n  && add-apt-repository \"deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc)-backports main restricted universe multiverse\" \\\n  && add-apt-repository \"deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main\" \\\n  && apt-add-repository ppa:ansible/ansible \\\n  && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n  && apt-get -y update \\\n  && apt-get -y --no-install-recommends install ruby2.4 ruby2.4-dev make cmake curl libxml2-dev libcurl4-openssl-dev libssl-dev build-essential jq sudo postgresql-client-9.5 libpq5 libpq-dev autoconf uuid-runtime ipmitool ansible python-netaddr python-dns python-pip ssh tzdata iputils-ping \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir dnspython\nRUN gem install bundler \\\n  && gem install net-http-digest_auth \\\n  && gem install nio4r -v 1.2.0\nRUN mkdir -p /var/run/rebar /var/cache/rebar/cookbooks /var/cache/rebar/gems /var/cache/rebar/ \\\n  && chown -R rebar:rebar /opt/digitalrebar /var/run/rebar /var/cache/rebar /home/rebar/.ssh \\\n  && chmod 755 /home/rebar/.ssh\nRUN su -l -c 'cd /opt/digitalrebar/core/rails; bundle install --path /var/cache/rebar/gems --standalone --binstubs /var/cache/rebar/bin' rebar\nRUN ln -s /var/cache/rebar/bin/puma /usr/bin/puma \\\n  && ln -s /var/cache/rebar/bin/pumactl /usr/bin/pumactl \\\n  && chown rebar:rebar /home/rebar/.ssh/config \\\n  && chmod 644 /home/rebar/.ssh/config \\\n  && openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:2048 -out /var/run/rebar/server.key \\\n  && openssl req -new -key /var/run/rebar/server.key -out /var/run/rebar/server.csr -subj \"/C=US/ST=Texas/L=Austin/O=RackN/OU=RebarAPI/CN=neode.net\" \\\n  && openssl x509 -req -days 365 -in /var/run/rebar/server.csr -signkey /var/run/rebar/server.key -out /var/run/rebar/server.crt \\\n  && rm /var/run/rebar/server.csr \\\n  && chmod 400 /var/run/rebar/server.key /var/run/rebar/server.crt \\\n  && chown rebar:rebar /var/run/rebar/server.key /var/run/rebar/server.crt\nRUN curl -fgL -o '/tmp/chef.deb' \\\n  'https://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/10.04/x86_64/chef_11.18.12-1_amd64.deb' \\\n  && dpkg -i /tmp/chef.deb && rm -f /tmp/chef.deb \\\n  && sed -i '/\\[ssh_connection\\]/a ssh_args=' /etc/ansible/ansible.cfg\n\nADD http://localhost:28569/${DR_TAG}/linux/amd64/amttool /usr/local/bin/amttool\nADD http://localhost:28569/${DR_TAG}/linux/amd64/wscli /usr/local/bin/wscli\nRUN chmod 755 /usr/local/bin/*\n\nCOPY entrypoint.d/*.sh /usr/local/entrypoint.d/\n"
}