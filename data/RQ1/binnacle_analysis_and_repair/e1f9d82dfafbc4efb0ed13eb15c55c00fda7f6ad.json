{
  "startTime": 1674242103576,
  "endTime": 1674242103874,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 22,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 22,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.3-fpm-stretch as base\n\nARG project_root=.\nENV REDIS_PREFIX=''\nENV ELASTIC_SEARCH_INDEX_PREFIX=''\n\n# install required tools\n# git for computing diffs\n# wget for installation of other tools\n# gnupg and g++ for gd extension\n# locales for locale-gen command\n# apt-utils so package configuartion does not get delayed\n# unzip to ommit composer zip packages corruption\n# dialog for apt-get to be\n# git for computing diffs and for npm to download packages\nRUN apt-get update && apt-get install --no-install-recommends -y wget gnupg g++ locales unzip dialog apt-utils git && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install NodeJS\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash\nRUN apt-get update && apt-get install --no-install-recommends -y nodejs && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# install Composer\nCOPY ${project_root}/docker/php-fpm/docker-install-composer /usr/local/bin/docker-install-composer\n\nRUN chmod +x /usr/local/bin/docker-install-composer && \\\n    docker-install-composer\n\n# libpng-dev needed by \"gd\" extension\n# libzip-dev needed by \"zip\" extension\n# libicu-dev for intl extension\n# libpg-dev for connection to postgres database\n# autoconf needed by \"redis\" extension\nRUN apt-get install --no-install-recommends -y \\\n    libpng-dev \\\n    libjpeg-dev \\\n    libfreetype6-dev \\\n    libzip-dev \\\n    libicu-dev \\\n    libpq-dev \\\n    autoconf && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# \"gd\" extension needs to have specified jpeg and freetype dir for jpg/jpeg images support\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/\n\n# install necessary tools for running application\nRUN docker-php-ext-install \\\n    bcmath \\\n    gd \\\n    intl \\\n    opcache \\\n    pgsql \\\n    pdo_pgsql \\\n    zip\n\n# install grunt cli used by frontend developers for continuous generating of css files\nRUN npm install -g grunt-cli && npm cache clean --force;\n\n# install PostgreSQl client for dumping database\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \\\n    sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -sc)-pgdg main\" > /etc/apt/sources.list.d/PostgreSQL.list' && \\\n    apt-get update && apt-get install --no-install-recommends -y postgresql-10 postgresql-client-10 && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# install redis extension\nRUN pecl install redis-4.1.1 && \\\n    docker-php-ext-enable redis\n\n# install locales and switch to en_US.utf8 in order to enable UTF-8 support\n# see http://jaredmarkell.com/docker-and-locales/ from where was this code taken\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    locale-gen\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# copy php.ini configuration\nCOPY ${project_root}/docker/php-fpm/php-ini-overrides.ini /usr/local/etc/php/php.ini\n\n# overwrite the original entry-point from the PHP Docker image with our own\nCOPY ${project_root}/docker/php-fpm/docker-php-entrypoint /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-entrypoint\n\n# set www-data user his home directory\n# the user \"www-data\" is used when running the image, and therefore should own the workdir\nRUN usermod -m -d /home/www-data www-data && \\\n    mkdir -p /var/www/html && \\\n    chown -R www-data:www-data /home/www-data /var/www/html\n\n# Switch to user\nUSER www-data\n\n# hirak/prestissimo makes the install of Composer dependencies faster by parallel downloading\nRUN composer global require hirak/prestissimo\n\n# set COMPOSER_MEMORY_LIMIT to -1 (i.e. unlimited - this is a hotfix until https://github.com/shopsys/shopsys/issues/634 is solved)\nENV COMPOSER_MEMORY_LIMIT=-1\n\n########################################################################################################################\n\nFROM base as development\n\nUSER root\n\n# allow overwriting UID and GID o the user \"www-data\" to help solve issues with permissions in mounted volumes\n# if the GID is already in use, we will assign GID 33 instead (33 is the standard uid/gid for \"www-data\" in Debian)\nARG www_data_uid\nARG www_data_gid\nRUN if [ -n \"$www_data_uid\" ]; then deluser www-data && (addgroup --gid $www_data_gid www-data || addgroup --gid 33 www-data) && adduser --system --home /home/www-data --uid $www_data_uid --disabled-password --group www-data; fi;\n\n# as the UID and GID might have changed, change the ownership of the home directory workdir again\nRUN chown -R www-data:www-data /home/www-data /var/www/html\n\nUSER www-data\n\n########################################################################################################################\n\nFROM base as production\n\nCOPY --chown=www-data:www-data / /var/www/html\n\nRUN composer install --optimize-autoloader --no-interaction --no-progress --no-dev\n\nRUN php phing composer-prod npm dirs-create assets\n\n########################################################################################################################\n\nFROM base as ci\n\nCOPY --chown=www-data:www-data / /var/www/html\n\nRUN composer install --optimize-autoloader --no-interaction --no-progress --dev\n\nRUN php phing composer-dev npm dirs-create test-dirs-create assets standards tests-unit tests-acceptance-build\n\nRUN ./bin/console shopsys:environment:change prod\n"
}