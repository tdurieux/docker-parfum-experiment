{
  "startTime": 1674237170023,
  "endTime": 1674237170186,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 219
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openshift/base-centos7\n\n# This image provides a Passenger 4.0 environment you can use to run your Passenger\n# applications.\n\nMAINTAINER SoftwareCollections.org <sclorg@redhat.com>\n\nEXPOSE 8080\n\nENV PASSENGER_VERSION 4.0\n\nRUN rpmkeys --import file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 && \\\n    yum -y --setopt=tsflags=nodocs install https://www.softwarecollections.org/en/scls/rhscl/rh-passenger40/epel-7-x86_64/download/rhscl-rh-passenger40-epel-7-x86_64.noarch.rpm && \\\n    yum -y --setopt=tsflags=nodocs install https://www.softwarecollections.org/en/scls/rhscl/rh-ruby22/epel-7-x86_64/download/rhscl-rh-ruby22-epel-7-x86_64.noarch.rpm && \\\n    yum -y --setopt=tsflags=nodocs install https://www.softwarecollections.org/en/scls/rhscl/v8314/epel-7-x86_64/download/rhscl-v8314-epel-7-x86_64.noarch.rpm && \\\n    yum -y --setopt=tsflags=nodocs install https://www.softwarecollections.org/en/scls/rhscl/rh-ror41/epel-7-x86_64/download/rhscl-rh-ror41-epel-7-x86_64.noarch.rpm && \\\n    yum -y --setopt=tsflags=nodocs install https://www.softwarecollections.org/en/scls/rhscl/nodejs010/epel-7-x86_64/download/rhscl-nodejs010-epel-7-x86_64.noarch.rpm && \\\n    yum -y --setopt=tsflags=nodocs install https://www.softwarecollections.org/en/scls/rhscl/httpd24/epel-7-x86_64/download/rhscl-httpd24-epel-7-x86_64.noarch.rpm && \\\n    yum install -y --setopt=tsflags=nodocs rh-ruby22 rh-ruby22-ruby-devel rh-ruby22-rubygem-rake v8314 rh-ruby22-rubygem-bundler rh-ror41-rubygem-rack nodejs010 rh-passenger40-mod_passenger rh-passenger40-ruby22 httpd24 && \\\n    yum clean all -y && rm -rf /var/cache/yum\n\n# Copy the STI scripts from the specific language image to $STI_SCRIPTS_PATH\nCOPY ./s2i/bin/ $STI_SCRIPTS_PATH\n\n# Each language image can have 'contrib' a directory with extra files needed to\n# run and build the applications.\nCOPY ./contrib/ /opt/app-root\nCOPY ./contrib/ /opt/openshift\n\nRUN chown -R 1001:0 /opt/app-root\n\n# In order to drop the root user, we have to make some directories world\n# writeable as OpenShift default \"security\" model is to run the container under\n# random UID.\n#    sed -ri ' s!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g; s!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g;' /opt/rh/httpd24/root/etc/httpd/conf/httpd.conf && \\\nRUN sed -i -f /opt/app-root/etc/httpdconf.sed /opt/rh/httpd24/root/etc/httpd/conf/httpd.conf && \\\n    head -n151 /opt/rh/httpd24/root/etc/httpd/conf/httpd.conf | tail -n1 | grep \"AllowOverride All\" || exit && \\\n    mkdir /tmp/sessions && \\\n    mkdir -p /opt/app-root/src/public && \\\n    chmod -R og+rwx /opt/rh/httpd24/root/var/run/httpd && \\\n    chmod -R og+rwx /var/run/rh-passenger40 && \\\n    chown -R 1001:0 /opt/app-root /tmp/sessions && \\\n    cat /opt/app-root/etc/passenger.conf >> /opt/rh/httpd24/root/etc/httpd/conf/httpd.conf\n\nUSER 1001\n\n# Set the default CMD to print the usage of the language image\nCMD \"$STI_SCRIPTS_PATH/usage\"\n"
}