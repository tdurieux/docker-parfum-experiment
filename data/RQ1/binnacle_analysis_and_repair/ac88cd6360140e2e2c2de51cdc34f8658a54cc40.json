{
  "startTime": 1674641674231,
  "endTime": 1674641674396,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# sdk/latest as of 2018-08-20\n\n###############################\n# Dependencies\nFROM microsoft/dotnet:2.1.500-sdk-alpine as dependencies\nWORKDIR /app\n\nCOPY source/OptimaJet.DWKit.Application/*.csproj /app/OptimaJet.DWKit.Application/\nCOPY source/OptimaJet.DWKit.StarterApplication/*.csproj /app/OptimaJet.DWKit.StarterApplication/\nCOPY source/SIL.AppBuilder.BuildEngineApiClient/*.csproj /app/SIL.AppBuilder.BuildEngineApiClient/\nWORKDIR /app/OptimaJet.DWKit.StarterApplication/\nRUN dotnet restore\n\n###############################\n# Development\nFROM dependencies as development\nCOPY source /app\nCOPY --from=dependencies /app /app\nRUN apk add --no-cache bash\nWORKDIR /app/OptimaJet.DWKit.StarterApplication\n\n\n###############################\n# Release\nFROM dependencies as build-release\nWORKDIR /app/\nCOPY source/ /app/\nCOPY --from=dependencies /app /app\nWORKDIR /app/OptimaJet.DWKit.StarterApplication\nRUN dotnet publish -c Release -o out && \\\n    POSTGRES_HOST=build \\\n    POSTGRES_DB=build \\\n    POSTGRES_USER=build \\\n    POSTGRES_PASSWORD=build \\\n    dotnet ef migrations --msbuildprojectextensionspath /app/out/OptimaJet.DWKit.StarterApplication/obj/ script --idempotent --output \"out/scripts/api_migrations.sql\"\n\nFROM microsoft/dotnet:2.1-aspnetcore-runtime-alpine AS runtime-release\n# Setup Timezone before installing s3cmd\nARG timezone=\"America/New_York\"\nENV TZ=${timezone}\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n# Copy build-release files\nWORKDIR /app\nCOPY --from=build-release /app/OptimaJet.DWKit.StarterApplication/out ./\nCOPY --from=build-release /app/OptimaJet.DWKit.StarterApplication/Templates ./Templates\nCOPY --from=build-release /app/run-api.sh ./\nCOPY scripts/DB/*.sql scripts/DB/PostgreSQL/*.sql /app/scripts/\n# Install dependencies\nRUN apk add --no-cache bash curl postgresql-client python py-pip py-setuptools git ca-certificates\nRUN pip install --no-cache-dir python-dateutil\nRUN git clone https://github.com/s3tools/s3cmd.git /opt/s3cmd \\\n && ln -s /opt/s3cmd/s3cmd /usr/bin/s3cmd\nRUN curl -f -o /usr/local/bin/runny https://raw.githubusercontent.com/silinternational/runny/0.2/runny \\\n    && chmod a+x /usr/local/bin/runny\nRUN curl -f -o /usr/local/bin/s3-expand https://raw.githubusercontent.com/silinternational/s3-expand/master/s3-expand \\\n    && chmod a+x /usr/local/bin/s3-expand\nCMD [\"/usr/local/bin/s3-expand\", \"/app/run-api.sh\"]\n"
}