{
  "startTime": 1674235834313,
  "endTime": 1674235834650,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nMAINTAINER Jay Luker <jay_luker@harvard.edu>\n\nARG REVISION=master\nENV RAILS_ENV development\nENV GEM_HOME /opt/canvas/.gems\nENV YARN_VERSION 0.27.5-1\n\n# add nodejs and recommended ruby repos\nRUN apt-get update \\\n    && apt-get -y --no-install-recommends install curl software-properties-common \\\n    && add-apt-repository -y ppa:brightbox/ruby-ng \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y ruby2.4 ruby2.4-dev supervisor redis-server \\\n        zlib1g-dev libxml2-dev libxslt1-dev libsqlite3-dev postgresql \\\n        postgresql-contrib libpq-dev libxmlsec1-dev curl make g++ git \\\n        unzip fontforge libicu-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sL https://deb.nodesource.com/setup_6.x | bash \\\n    && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n    && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        nodejs \\\n        yarn=\"$YARN_VERSION\" \\\n        unzip \\\n        fontforge && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get clean && rm -Rf /var/cache/apt\n\n# Set the locale to avoid active_model_serializers bundler install failure\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nRUN groupadd -r canvasuser -g 433 && \\\n    adduser --uid 431 --system --gid 433 --home /opt/canvas canvasuser && \\\n    adduser canvasuser sudo && \\\n    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nRUN if [ -e /var/lib/gems/$RUBY_MAJOR.0/gems/bundler-* ]; then BUNDLER_INSTALL=\"-i /var/lib/gems/$RUBY_MAJOR.0\"; fi \\\n  && gem uninstall --all --ignore-dependencies --force $BUNDLER_INSTALL bundler \\\n  && gem install bundler --no-document -v 1.15.2 \\\n  && chown -R canvasuser: $GEM_HOME\n\n#RUN gem install bundler --version 1.14.6\n\nCOPY assets/dbinit.sh /opt/canvas/dbinit.sh\nCOPY assets/start.sh /opt/canvas/start.sh\nRUN chmod 755 /opt/canvas/*.sh\n\nCOPY assets/supervisord.conf /etc/supervisor/supervisord.conf\nCOPY assets/pg_hba.conf /etc/postgresql/9.3/main/pg_hba.conf\nRUN sed -i \"/^#listen_addresses/i listen_addresses='*'\" /etc/postgresql/9.3/main/postgresql.conf\n\nRUN cd /opt/canvas \\\n    && git clone https://github.com/instructure/canvas-lms.git \\\n    && cd canvas-lms \\\n    && git checkout $REVISION\n\nWORKDIR /opt/canvas/canvas-lms\n\nCOPY assets/database.yml config/database.yml\nCOPY assets/redis.yml config/redis.yml\nCOPY assets/cache_store.yml config/cache_store.yml\nCOPY assets/development-local.rb config/environments/development-local.rb\nCOPY assets/outgoing_mail.yml config/outgoing_mail.yml\n\nRUN for config in amazon_s3 delayed_jobs domain file_store security external_migration \\\n       ; do cp config/$config.yml.example config/$config.yml \\\n       ; done\n\nRUN $GEM_HOME/bin/bundle install --jobs 8 --without=\"mysql\"\nRUN yarn install --pure-lockfile && yarn cache clean;\nRUN COMPILE_ASSETS_NPM_INSTALL=0 $GEM_HOME/bin/bundle exec rake canvas:compile_assets_dev\n\nRUN mkdir -p log tmp/pids public/assets public/stylesheets/compiled \\\n    && touch Gemmfile.lock\n\nRUN service postgresql start && /opt/canvas/dbinit.sh\n\nRUN chown -R canvasuser: /opt/canvas\nRUN chown -R canvasuser: /tmp/attachment_fu/\n\n# postgres\nEXPOSE 5432\n# redis\nEXPOSE 6379\n# canvas\nEXPOSE 3000\n\nCMD [\"/opt/canvas/start.sh\"]\n"
}