{
  "startTime": 1674245618457,
  "endTime": 1674245618794,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for building a cross developing environment for Qt\n# targeting Windows. It also builds the application in the current\n# directory. The application will be statically linked against\n# Qt.\n#\n# To build the environment invoke\n#  docker build -t qt .\n# in the directory of this file. This creates a docker image\n# called \"qt\". Note that it will take a while if you are building\n# this image the first time. The contained application will also\n# be compiled (in principle the last step could be done within\n# the running container).\n#\n# Once build, you can enter the container via\n#  docker run qt -ti bash\n#\n# (c) 2014-2017 by Sebastian Bauer\n#\n# Note that Docker requires a relatively recent Linux kernel.\n# 3.8 is the current minimum.\n#\n\n\nFROM debian:stretch\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\tautoconf \\\n\tautomake \\\n\tautopoint \\\n\tbinutils \\\n\tbison \\\n\tbuild-essential \\\n\tca-certificates \\\n\tcmake \\\n\tdebhelper \\\n\tdevscripts \\\n\tfakeroot \\\n\tflex \\\n\tgcc \\\n\tgit \\\n\tgperf \\\n\tintltool \\\n\tlibgdk-pixbuf2.0-dev \\\n\tlibffi-dev \\\n\tlibgmp-dev \\\n\tlibmpc-dev \\\n\tlibmpfr-dev \\\n\tlibtool \\\n\tlibtool-bin \\\n\tlibz-dev \\\n\topenssl \\\n\tpatch \\\n\tpkg-config \\\n\tp7zip-full \\\n\truby \\\n\tscons \\\n\tsubversion \\\n\ttexinfo \\\n\tunzip \\\n\twget && rm -rf /var/lib/apt/lists/*;\n\n# see http://stackoverflow.com/questions/10934683/how-do-i-configure-qt-for-cross-compilation-from-linux-to-windows-target\n\n# Preapre and download cross development environment\nRUN mkdir /build\nWORKDIR  /build\nRUN git clone https://github.com/mxe/mxe.git\n\n# Build cross environment\nRUN cd mxe && make qtbase\nRUN cd mxe && make qtmultimedia\n\n# TODO: Cleanup all unneeded stuff to make a slim image\n\n# Enhance path\nENV PATH /build/mxe/usr/bin:$PATH\n\n# Add a qmake alias\nRUN ln -s /build/mxe/usr/bin/i686-w64-mingw32.static-qmake-qt5 /build/mxe/usr/bin/qmake\n\n##########################################################################\n# Here the project specific workflow starts.\n#\n# Now copy the sources. They will become part of the image.\nRUN mkdir /src\nCOPY . /src\n\n# Switch to the source directory\nWORKDIR /src\n\n# Now build the project\nRUN qmake\nRUN make\n"
}