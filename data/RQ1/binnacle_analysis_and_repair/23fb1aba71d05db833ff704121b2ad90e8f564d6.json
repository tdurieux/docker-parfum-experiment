{
  "startTime": 1674251642082,
  "endTime": 1674251643337,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 397,
        "lineEnd": 398,
        "columnStart": 9,
        "columnEnd": 13
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 400,
        "lineEnd": 402,
        "columnStart": 10,
        "columnEnd": 10
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 404,
        "lineEnd": 411,
        "columnStart": 11,
        "columnEnd": 9
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 365,
        "lineEnd": 366,
        "columnStart": 9,
        "columnEnd": 13
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 368,
        "lineEnd": 371,
        "columnStart": 9,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 373,
        "lineEnd": 376,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 378,
        "lineEnd": 380,
        "columnStart": 15,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 395,
        "lineEnd": 396,
        "columnStart": 10,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=\"debian\"\nARG BASE_IMAGE_TAG=\"stretch\"\nFROM ${BASE_IMAGE}:${BASE_IMAGE_TAG}\n\n# Arguments to instantiate as variables\nARG BASE_IMAGE\nARG BASE_IMAGE_TAG\nARG ARCH=\"amd64\"\nARG PLATFORM=\"linux\"\nARG TAG=\"\"\nARG TAG_ROLLING=\"\"\nARG BUILD_DATE=\"\"\nARG IMAGE_VCS_REF=\"\"\nARG VCS_REF=\"\"\nARG FHEM_VERSION=\"\"\nARG IMAGE_VERSION=\"\"\n\n# Custom build options:\n#  Disable certain image layers using build env variables if desired\nARG IMAGE_LAYER_SYS_EXT\nARG IMAGE_LAYER_PERL_EXT\nARG IMAGE_LAYER_DEV\nARG IMAGE_LAYER_PERL_CPAN\nARG IMAGE_LAYER_PERL_CPAN_EXT\nARG IMAGE_LAYER_PYTHON\nARG IMAGE_LAYER_PYTHON_EXT\nARG IMAGE_LAYER_NODEJS\nARG IMAGE_LAYER_NODEJS_EXT\n\n# Custom installation packages\nARG APT_PKGS\nARG CPAN_PKGS\nARG PIP_PKGS\nARG NPM_PKGS\n\n# Re-usable variables during build\nARG L_AUTHORS=\"Julian Pawlowski (Forum.fhem.de:@loredo, Twitter:@loredo)\"\nARG L_URL=\"https://hub.docker.com/r/fhem/fhem-${ARCH}_${PLATFORM}\"\nARG L_USAGE=\"https://github.com/fhem/fhem-docker/blob/${IMAGE_VCS_REF}/README.md\"\nARG L_VCS_URL=\"https://github.com/fhem/fhem-docker/\"\nARG L_VENDOR=\"FHEM\"\nARG L_LICENSES=\"MIT\"\nARG L_TITLE=\"fhem-${ARCH}_${PLATFORM}\"\nARG L_DESCR=\"A basic Docker image for FHEM house automation system, based on Debian Stretch.\"\n\nARG L_AUTHORS_FHEM=\"https://fhem.de/MAINTAINER.txt\"\nARG L_URL_FHEM=\"https://fhem.de/\"\nARG L_USAGE_FHEM=\"https://fhem.de/#Documentation\"\nARG L_VCS_URL_FHEM=\"https://svn.fhem.de/\"\nARG L_VENDOR_FHEM=\"FHEM\"\nARG L_LICENSES_FHEM=\"GPL-2.0\"\nARG L_DESCR_FHEM=\"FHEM (TM) is a GPL'd perl server for house automation. It is used to automate some common tasks in the household like switching lamps / shutters / heating / etc. and to log events like temperature / humidity / power consumption.\"\n\n# annotation labels according to\n# https://github.com/opencontainers/image-spec/blob/v1.0.1/annotations.md#pre-defined-annotation-keys\nLABEL org.opencontainers.image.created=${BUILD_DATE}\nLABEL org.opencontainers.image.authors=${L_AUTHORS}\nLABEL org.opencontainers.image.url=${L_URL}\nLABEL org.opencontainers.image.documentation=${L_USAGE}\nLABEL org.opencontainers.image.source=${L_VCS_URL}\nLABEL org.opencontainers.image.version=${IMAGE_VERSION}\nLABEL org.opencontainers.image.revision=${IMAGE_VCS_REF}\nLABEL org.opencontainers.image.vendor=${L_VENDOR}\nLABEL org.opencontainers.image.licenses=${L_LICENSES}\nLABEL org.opencontainers.image.title=${L_TITLE}\nLABEL org.opencontainers.image.description=${L_DESCR}\n\n# non-standard labels\nLABEL org.fhem.authors=${L_AUTHORS_FHEM}\nLABEL org.fhem.url=${L_URL_FHEM}\nLABEL org.fhem.documentation=${L_USAGE_FHEM}\nLABEL org.fhem.source=${L_VCS_URL_FHEM}\nLABEL org.fhem.version=${FHEM_VERSION}\nLABEL org.fhem.revision=${VCS_REF}\nLABEL org.fhem.vendor=${L_VENDOR_FHEM}\nLABEL org.fhem.licenses=${L_LICENSES_FHEM}\nLABEL org.fhem.description=${L_DESCR_FHEM}\n\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ADDRESS de_DE.UTF-8\nENV LC_MEASUREMENT de_DE.UTF-8\nENV LC_MESSAGES en_DK.UTF-8\nENV LC_MONETARY de_DE.UTF-8\nENV LC_NAME de_DE.UTF-8\nENV LC_NUMERIC de_DE.UTF-8\nENV LC_PAPER de_DE.UTF-8\nENV LC_TELEPHONE de_DE.UTF-8\nENV LC_TIME de_DE.UTF-8\nENV TERM xterm\nENV TZ Europe/Berlin\n\n# Install base environment\nCOPY ./src/qemu-* /usr/bin/\nCOPY src/entry.sh /entry.sh\nCOPY src/ssh_known_hosts.txt /ssh_known_hosts.txt\nCOPY src/health-check.sh /health-check.sh\nCOPY src/find-* /usr/local/bin/\nCOPY src/99_DockerImageInfo.pm /fhem/FHEM/\nRUN chmod 755 /*.sh /usr/local/bin/* \\\n    && echo \"org.opencontainers.image.created=${BUILD_DATE}\\norg.opencontainers.image.authors=${L_AUTHORS}\\norg.opencontainers.image.url=${L_URL}\\norg.opencontainers.image.documentation=${L_USAGE}\\norg.opencontainers.image.source=${L_VCS_URL}\\norg.opencontainers.image.version=${IMAGE_VERSION}\\norg.opencontainers.image.revision=${IMAGE_VCS_REF}\\norg.opencontainers.image.vendor=${L_VENDOR}\\norg.opencontainers.image.licenses=${L_LICENSES}\\norg.opencontainers.image.title=${L_TITLE}\\norg.opencontainers.image.description=${L_DESCR}\\norg.fhem.authors=${L_AUTHORS_FHEM}\\norg.fhem.url=${L_URL_FHEM}\\norg.fhem.documentation=${L_USAGE_FHEM}\\norg.fhem.source=${L_VCS_URL_FHEM}\\norg.fhem.version=${FHEM_VERSION}\\norg.fhem.revision=${VCS_REF}\\norg.fhem.vendor=${L_VENDOR_FHEM}\\norg.fhem.licenses=${L_LICENSES_FHEM}\\norg.fhem.description=${L_DESCR_FHEM}\" > /image_info \\\n    && sed -i \"s/stretch main/stretch main contrib non-free/g\" /etc/apt/sources.list \\\n    && sed -i \"s/stretch-updates main/stretch-updates main contrib non-free/g\" /etc/apt/sources.list \\\n    && sed -i \"s/stretch\\/updates main/stretch\\/updates main contrib non-free/g\" /etc/apt/sources.list \\\n    && DEBIAN_FRONTEND=noninteractive apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends \\\n        apt-transport-https \\\n        apt-utils \\\n        ca-certificates \\\n        gnupg \\\n        locales \\\n    && DEBIAN_FRONTEND=noninteractive apt-get -qqy --no-install-recommends upgrade \\\n    \\\n    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales \\\n    && echo 'de_DE@euro ISO-8859-15\\nde_DE ISO-8859-1\\nde_DE.UTF-8 UTF-8\\nen_DK ISO-8859-1\\nen_DK.ISO-8859-15 ISO-8859-15\\nen_DK.UTF-8 UTF-8\\nen_GB ISO-8859-1\\nen_GB.ISO-8859-15 ISO-8859-15\\nen_GB.UTF-8 UTF-8\\nen_IE ISO-8859-1\\nen_IE.ISO-8859-15 ISO-8859-15\\nen_IE.UTF-8 UTF-8\\nen_US ISO-8859-1\\nen_US.ISO-8859-15 ISO-8859-15\\nen_US.UTF-8 UTF-8\\nes_ES@euro ISO-8859-15\\nes_ES ISO-8859-1\\nes_ES.UTF-8 UTF-8\\nfr_FR@euro ISO-8859-15\\nfr_FR ISO-8859-1\\nfr_FR.UTF-8 UTF-8\\nit_IT@euro ISO-8859-15\\nit_IT ISO-8859-1\\nit_IT.UTF-8 UTF-8\\nnl_NL@euro ISO-8859-15\\nnl_NL ISO-8859-1\\nnl_NL.UTF-8 UTF-8\\npl_PL ISO-8859-2\\npl_PL.UTF-8 UTF-8' >/etc/locale.gen \\\n    && locale-gen \\\n    \\\n    && ln -sf /usr/share/zoneinfo/Europe/Berlin /etc/localtime \\\n    && echo \"Europe/Berlin\" > /etc/timezone \\\n    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure tzdata \\\n    \\\n    && sed -i \"s,http://deb.debian.org,https://cdn-aws.deb.debian.org,g\" /etc/apt/sources.list \\\n    && sed -i \"s,http://security.debian.org,https://cdn-aws.deb.debian.org,g\" /etc/apt/sources.list \\\n    && DEBIAN_FRONTEND=noninteractive apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends \\\n        adb \\\n        avahi-daemon \\\n        avrdude \\\n        bluez \\\n        curl \\\n        dnsutils \\\n        etherwake \\\n        git-core \\\n        i2c-tools \\\n        inetutils-ping \\\n        jq \\\n        libcap-ng-utils \\\n        libcap2-bin \\\n        lsb-release \\\n        mariadb-client \\\n        netcat \\\n        openssh-client \\\n        sendemail \\\n        sqlite3 \\\n        subversion \\\n        sudo \\\n        telnet \\\n        ttf-liberation \\\n        unzip \\\n        usbutils \\\n        wget \\\n        ${APT_PKGS} \\\n    && apt-get autoremove -qqy && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/*\n\n# Add extended system layer\nRUN if [ \"${IMAGE_LAYER_SYS_EXT}\" != \"0\" ]; then \\\n      DEBIAN_FRONTEND=noninteractive apt-get update \\\n      && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends \\\n          alsa-utils \\\n          dfu-programmer \\\n          ffmpeg \\\n          espeak \\\n          lame \\\n          libsox-fmt-all \\\n          libttspico-utils \\\n          mp3wrap \\\n          mpg123 \\\n          mplayer \\\n          nmap \\\n          normalize-audio \\\n          snmp \\\n          snmp-mibs-downloader \\\n          sox \\\n          vorbis-tools \\\n      && apt-get autoremove -qqy && apt-get clean \\\n      && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* \\\n    ; fi\n\n# Add Perl basic app layer for pre-compiled packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends \\\n        perl-base \\\n        libarchive-extract-perl \\\n        libarchive-zip-perl \\\n        libcgi-pm-perl \\\n        libcpanel-json-xs-perl \\\n        libdbd-mysql \\\n        libdbd-mysql-perl \\\n        libdbd-pg-perl \\\n        libdbd-sqlite3-perl \\\n        libdbi-perl \\\n        libdevice-serialport-perl \\\n        libdevice-usb-perl \\\n        libgd-graph-perl \\\n        libgd-text-perl \\\n        libimage-imlib2-perl \\\n        libimage-info-perl \\\n        libimage-librsvg-perl \\\n        libio-all-perl \\\n        libio-file-withpath-perl \\\n        libio-interface-perl \\\n        libio-socket-inet6-perl \\\n        libio-socket-ssl-perl \\\n        libjson-perl \\\n        libjson-pp-perl \\\n        libjson-xs-perl \\\n        liblist-moreutils-perl \\\n        libmail-gnupg-perl \\\n        libmail-imapclient-perl \\\n        libmail-sendmail-perl \\\n        libmime-base64-perl \\\n        libmime-lite-perl \\\n        libnet-server-perl \\\n        libsocket6-perl \\\n        libtext-csv-perl \\\n        libtext-diff-perl \\\n        libtext-iconv-perl \\\n        libtimedate-perl \\\n        libutf8-all-perl \\\n        libwww-curl-perl \\\n        libwww-perl \\\n        libxml-libxml-perl \\\n        libxml-parser-lite-perl \\\n        libxml-parser-perl \\\n        libxml-simple-perl \\\n        libxml-stream-perl \\\n        libxml-treebuilder-perl \\\n        libxml-xpath-perl \\\n        libxml-xpathengine-perl \\\n        libyaml-libyaml-perl \\\n        libyaml-perl \\\n    && apt-get autoremove -qqy && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/*\n\n# Add Perl extended app layer for pre-compiled packages\nRUN if [ \"${IMAGE_LAYER_PERL_EXT}\" != \"0\" ]; then \\\n      DEBIAN_FRONTEND=noninteractive apt-get update \\\n      && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends \\\n          perl \\\n          libalgorithm-merge-perl \\\n          libauthen-*-perl \\\n          libclass-dbi-mysql-perl \\\n          libclass-isa-perl \\\n          libclass-loader-perl \\\n          libcommon-sense-perl \\\n          libconvert-base32-perl \\\n          libcpan-meta-yaml-perl \\\n          libcrypt-*-perl \\\n          libdata-dump-perl \\\n          libdatetime-format-strptime-perl \\\n          libdatetime-perl \\\n          libdevel-size-perl \\\n          libdigest-*-perl \\\n          libdpkg-perl \\\n          libencode-perl \\\n          liberror-perl \\\n          libev-perl \\\n          libextutils-makemaker-cpanfile-perl \\\n          libfile-copy-recursive-perl \\\n          libfile-fcntllock-perl \\\n          libfinance-quote-perl \\\n          libgnupg-interface-perl \\\n          libhtml-strip-perl \\\n          libhtml-treebuilder-xpath-perl \\\n          libio-socket-*-perl \\\n          liblinux-inotify2-perl \\\n          libmath-round-perl \\\n          libmodule-pluggable-perl \\\n          libmojolicious-perl \\\n          libmoose-perl \\\n          libmoox-late-perl \\\n          libmp3-info-perl \\\n          libmp3-tag-perl \\\n          libnet-address-ip-local-perl \\\n          libnet-bonjour-perl \\\n          libnet-jabber-perl \\\n          libnet-oauth-perl \\\n          libnet-oauth2-perl \\\n          libnet-sip-perl \\\n          libnet-snmp-perl \\\n          libnet-ssleay-perl \\\n          libnet-telnet-perl \\\n          libnet-xmpp-perl \\\n          libnmap-parser-perl \\\n          librivescript-perl \\\n          librpc-xml-perl \\\n          libsnmp-perl \\\n          libsnmp-session-perl \\\n          libsoap-lite-perl \\\n          libsocket-perl \\\n          libswitch-perl \\\n          libsys-hostname-long-perl \\\n          libsys-statistics-linux-perl \\\n          libterm-readkey-perl \\\n          libterm-readline-perl-perl \\\n          libtime-period-perl \\\n          libtypes-path-tiny-perl \\\n          liburi-escape-xs-perl \\\n      && apt-get autoremove -qqy && apt-get clean \\\n      && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* \\\n    ; fi\n\n# Add development/compilation layer\nRUN if [ \"${IMAGE_LAYER_DEV}\" != \"0\" ] || [ \"${IMAGE_LAYER_PERL_CPAN}\" != \"0\" ] || [ \"${IMAGE_LAYER_PERL_CPAN_EXT}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON_EXT}\" != \"0\" ] || [ \"${IMAGE_LAYER_NODEJS}\" != \"0\" ] || [ \"${IMAGE_LAYER_NODEJS_EXT}\" != \"0\" ]; then \\\n      DEBIAN_FRONTEND=noninteractive apt-get update \\\n      && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends \\\n          autoconf \\\n          automake \\\n          build-essential \\\n          libavahi-compat-libdnssd-dev \\\n          libdb-dev \\\n          libsodium-dev \\\n          libssl-dev \\\n          libtool \\\n          libusb-1.0-0-dev \\\n          patch \\\n      && apt-get autoremove -qqy && apt-get clean \\\n      && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* \\\n    ; fi\n\n# Add Perl app layer for self-compiled modules\n#  * exclude any ARM platforms due to long build time\n#  * manually pre-compiled ARM packages may be applied here\nRUN if [ \"${CPAN_PKGS}\" != \"\" ] || [ \"${PIP_PKGS}\" != \"\" ] || [ \"${IMAGE_LAYER_PERL_CPAN}\" != \"0\" ] || [ \"${IMAGE_LAYER_PERL_CPAN_EXT}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON_EXT}\" != \"0\" ]; then \\\n      curl --retry 3 --retry-connrefused --retry-delay 2 -fsSL https://git.io/cpanm | perl - App::cpanminus \\\n      && cpanm --notest \\\n          App::cpanoutdated \\\n          CPAN::Plugin::Sysdeps \\\n          Perl::PrereqScanner::NotQuiteLite \\\n      && if [ \"${CPAN_PKGS}\" != \"\" ]; then \\\n          cpanm \\\n           ${CPAN_PKGS} \\\n         ; fi \\\n      && if [ \"${IMAGE_LAYER_PERL_CPAN_EXT}\" != \"0\" ]; then \\\n          cpanm --notest \\\n           Crypt::Rijndael_PP \\\n         && if [ \"${ARCH}\" = \"amd64\" ] || [ \"${ARCH}\" = \"i386\" ]; then \\\n             cpanm --notest \\\n              Alien::Base::ModuleBuild \\\n              Alien::Sodium \\\n              Crypt::Argon2 \\\n              Crypt::NaCl::Sodium \\\n              Crypt::OpenSSL::AES \\\n              CryptX \\\n              Device::SMBus \\\n              Net::MQTT::Constants \\\n              Net::MQTT::Simple \\\n              Net::WebSocket::Server \\\n             ; fi \\\n         ; fi \\\n      && rm -rf /root/.cpanm \\\n      && apt-get autoremove -qqy && apt-get clean \\\n      && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* \\\n    ; fi\n\n# Add Python app layer\nRUN if [ \"${PIP_PKGS}\" != \"\" ] || [ \"${IMAGE_LAYER_PYTHON}\" != \"0\" ] || [ \"${IMAGE_LAYER_PYTHON_EXT}\" != \"0\" ]; then \\\n      DEBIAN_FRONTEND=noninteractive apt-get update \\\n      && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends \\\n          python3 \\\n          python3-dev \\\n          python3-pip \\\n      && INLINE_PYTHON_EXECUTABLE=/usr/bin/python3 cpanm --notest \\\n          Inline::Python \\\n      && pip3 install --no-cache-dir --upgrade \\\n          pip \\\n      && cp -fv /usr/local/bin/pip3 /usr/bin/pip3 \\\n      && pip3 install --no-cache-dir --upgrade \\\n          setuptools \\\n          wheel \\\n          ${PIP_PKGS} \\\n      && if [ \"${IMAGE_LAYER_PYTHON_EXT}\" != \"0\" ]; then \\\n           pip3 install --no-cache-dir \\\n            pychromecast \\\n            speedtest-cli \\\n            youtube-dl \\\n          && if [ \"${ARCH}\" = \"arm32v5\" ] || [ \"${ARCH}\" = \"arm32v7\" ] || [ \"${ARCH}\" = \"arm64v8\" ]; then \\\n               pip3 install --no-cache-dir \\\n                rpi.gpio \\\n             ; fi \\\n          && mkdir -p /usr/local/speedtest-cli && ln -s ../bin/speedtest-cli /usr/local/speedtest-cli/speedtest-cli \\\n        ; fi \\\n      && rm -rf /root/.cpanm \\\n      && apt-get autoremove -qqy && apt-get clean \\\n      && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* \\\n    ; fi\n\n# Add nodejs app layer\nRUN if ( [ \"${NPM_PKGS}\" != \"\" ] || [ \"${IMAGE_LAYER_NODEJS}\" != \"0\" ] || [ \"${IMAGE_LAYER_NODEJS_EXT}\" != \"0\" ] ) && [ \"${ARCH}\" != \"arm32v5\" ]; then \\\n      if [ \"${ARCH}\" = \"i386\" ]; then \\\n          curl --retry 3 --retry-connrefused --retry-delay 2 -fsSL https://deb.nodesource.com/setup_8.x | bash - \\\n        ; else \\\n          curl --retry 3 --retry-connrefused --retry-delay 2 -fsSL https://deb.nodesource.com/setup_10.x | bash - \\\n        ; fi \\\n       && DEBIAN_FRONTEND=noninteractive apt-get install -qqy --no-install-recommends \\\n           nodejs \\\n      && npm install -g --unsafe-perm --production \\\n          npm \\\n      && if [ \"${NPM_PKGS}\" != \"\" ]; then \\\n          npm install -g --unsafe-perm --production \\\n           ${NPM_PKGS} \\\n         ; fi \\\n      && if [ \"${IMAGE_LAYER_NODEJS_EXT}\" != \"0\" ]; then \\\n           npm install -g --unsafe-perm --production \\\n            alexa-cookie2 \\\n            alexa-fhem \\\n            gassistant-fhem \\\n            homebridge \\\n            homebridge-fhem \\\n            tradfri-fhem \\\n        ; fi \\\n      && apt-get autoremove -qqy && apt-get clean \\\n      && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.[^.] ~/.??* ~/* \\\n    ; npm cache clean --force; else \\\n          curl --retry 3 --retry-connrefused --retry-delay 2 -fsSL https://deb.nodesource.com/setup_10.x | bash - \\\n        ; fi \\\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    fi\n\n# Add FHEM app layer\n# Note: Manual checkout is required if build is not run by Travis:\n#   svn co https://svn.fhem.de/fhem/trunk ./src/fhem/trunk\nCOPY src/fhem/trunk/fhem/ /fhem/\n\nVOLUME [ \"/opt/fhem\" ]\n\nEXPOSE 8083\n\nHEALTHCHECK --interval=20s --timeout=10s --start-period=60s --retries=5 CMD /health-check.sh\n\nWORKDIR \"/opt/fhem\"\nENTRYPOINT [ \"/entry.sh\" ]\nCMD [ \"start\" ]\n"
}