{
  "startTime": 1674249506523,
  "endTime": 1674249506616,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nFROM arrow:cpp\n\n# Configure\nENV CC=gcc \\\n    CXX=g++\n\n# r-base includes tzdata. Get around interactive stop in that package\nENV DEBIAN_FRONTEND=noninteractive\n# workaround for install_github GitHub API rate limit\nENV CI=true\n\n# Build R\n# [1] https://www.digitalocean.com/community/tutorials/how-to-install-r-on-ubuntu-18-04\n# [2] https://linuxize.com/post/how-to-install-r-on-ubuntu-18-04/#installing-r-packages-from-cran\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y \\\n        apt-transport-https \\\n        software-properties-common && \\\n    apt-key adv \\\n        --keyserver keyserver.ubuntu.com \\\n        --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 && \\\n    add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/' && \\\n    apt-get install --no-install-recommends -y r-base && \\\n    # system libs needed by core R packages\n    apt-get install --no-install-recommends -y \\\n            libgit2-dev \\\n            libssl-dev && \\\n    # install clang to mirror what was done on Travis\n    apt-get install --no-install-recommends -y \\\n            clang \\\n            clang-format \\\n            clang-tidy && \\\n    # R CMD CHECK --as-cran needs pdflatex to build the package manual\n    apt-get install --no-install-recommends -y \\\n            texlive-latex-base && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# So that arrowExports.* files are generated\nENV ARROW_R_DEV=TRUE\n\n# Tell R where it can find the source code for arrow\nENV PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:/build/cpp/src/arrow:/opt/conda/lib/pkgconfig\nENV LD_LIBRARY_PATH=/opt/conda/lib/:/build/cpp/src/arrow:/arrow/r/src\n\nRUN Rscript -e \"install.packages('devtools', repos = 'http://cran.rstudio.com')\" && \\\n    Rscript -e \"devtools::install_github('romainfrancois/decor')\" && \\\n    Rscript -e \"install.packages(c( \\\n        'Rcpp', 'dplyr', 'stringr', 'glue', 'vctrs', \\\n        'purrr', \\\n        'assertthat', \\\n        'fs', \\\n        'tibble', \\\n        'crayon', \\\n        'testthat', \\\n        'bit64', \\\n        'hms', \\\n        'lubridate'), \\\n        repos = 'https://cran.rstudio.com')\"\n\n\n# build, install, test R package\nCMD [\"/bin/bash\", \"-c\", \"/arrow/ci/docker_build_cpp.sh && \\\n    /arrow/ci/docker_build_r.sh\"]\n"
}