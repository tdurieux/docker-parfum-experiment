{
  "startTime": 1674239089762,
  "endTime": 1674239089882,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 27,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM fedora:26\n\nRUN dnf -y groupinstall \"Development tools\" \\\n    && dnf -y install python-devel python-tools python3-devel python3-tools sshpass which supervisor procps\\\n    && dnf clean all \\\n    && rm -rf /var/cache/dnf\n\nRUN pip install --no-cache-dir virtualenv\nRUN virtualenv -p python3 ~/venv\n# Create base directory\nRUN mkdir -p /app\n\n# Setup dependencies\nCOPY requirements.txt /app/requirements.txt\nRUN . ~/venv/bin/activate; pip install --no-cache-dir -r /app/requirements.txt gunicorn==19.9.0\n\n# Create /etc/ssl\nRUN mkdir -p /etc/ssl/\nCOPY deploy/ssl/* /etc/ssl/\nVOLUME /etc/ssl\n\n# Create /deploy\nRUN mkdir -p /deploy\nCOPY deploy/gunicorn.conf.py  /deploy\nCOPY deploy/docker_run.sh  /deploy\nCOPY deploy/server_run.sh  /deploy\n\n# Config supervisor\nCOPY deploy/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# Create log directories\nRUN mkdir -p /var/log/supervisor/\nVOLUME /var/log\n\n# Create /sshkeys\nRUN mkdir -p /sshkeys\nVOLUME /sshkeys\n\n# Create /var/data\nRUN mkdir -p /var/data\nVOLUME /var/data\n\n# Create /etc/ansible/roles/\nRUN mkdir -p /etc/ansible/roles/\nCOPY quipucords/scanner/network/runner/roles/ /etc/ansible/roles/\nVOLUME /etc/ansible/roles/\n\n# Copy server code\nCOPY . /app/\nWORKDIR /app\nVOLUME /app\n\n# Set production environment\nARG BUILD_COMMIT=master\nENV QUIPUCORDS_COMMIT=$BUILD_COMMIT\nENV PRODUCTION=True\nENV DJANGO_SECRET_PATH=/var/data/secret.txt\nENV DJANGO_DB_PATH=/var/data/\nENV DJANGO_DEBUG=False\nENV DJANGO_LOG_LEVEL=INFO\nENV DJANGO_LOG_FORMATTER=verbose\nENV DJANGO_LOG_HANDLERS=console,file\nENV DJANGO_LOG_FILE=/var/log/app.log\nENV QUIPUCORDS_LOGGING_LEVEL=INFO\nENV LC_ALL=en_US.UTF-8\nENV LANG=en_US.UTF-8\n\n# Initialize database & Collect static files\nRUN . ~/venv/bin/activate;make server-static\nRUN ls -lta /var/data\n\nWORKDIR /var/log\n\nEXPOSE 443\nCMD [\"/bin/bash\", \"/deploy/docker_run.sh\"]"
}