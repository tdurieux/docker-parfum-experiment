{
  "startTime": 1674243931937,
  "endTime": 1674243932016,
  "originalSmells": [
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:alpine\nEXPOSE 5488\n\nRUN addgroup -S jsreport && adduser -S -G jsreport jsreport\n\nRUN apk update --no-cache && apk upgrade --no-cache  && \\\n  echo @edge http://nl.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories && \\\n  echo @edge http://nl.alpinelinux.org/alpine/edge/main >> /etc/apk/repositories && \\\n  apk add --no-cache \\\n    chromium@edge=73.0.3683.103-r0 \\\n    nss@edge \\\n    freetype@edge \\\n    harfbuzz@edge \\\n    ttf-freefont@edge \\\n    # just for now as we npm install from git\n    git \\\n    # so user can docker exec -it test /bin/bash\n    bash \\\n  && rm -rf /var/cache/apk/* /tmp/*\n\nVOLUME [\"/jsreport\"]\nRUN mkdir -p /app\nWORKDIR /app\n\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true\n\nRUN npm install -g jsreport-cli && \\\n    jsreport init && \\\n    npm uninstall -g jsreport-cli && \\\n    npm cache clean --force -f\n\nCOPY editConfig.js /app/editConfig.js\nRUN node editConfig.js\n\nADD run.sh /app/run.sh\nCOPY . /app\n\nENV NODE_ENV production\nENV chrome:launchOptions:executablePath /usr/lib/chromium/chrome\nENV chrome:launchOptions:args --no-sandbox\nENV templatingEngines:strategy http-server\n\nCMD [\"bash\", \"/app/run.sh\"]\n"
}