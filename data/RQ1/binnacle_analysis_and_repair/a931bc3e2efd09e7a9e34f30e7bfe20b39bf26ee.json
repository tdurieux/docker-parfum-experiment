{
  "startTime": 1674239111108,
  "endTime": 1674239111217,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda\n\nMAINTAINER Tim O'Donnell <timodonnell@gmail.com>\n\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections && \\\n    apt-get clean && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends --yes \\\n        locales \\\n        gfortran \\\n        git \\\n        libatlas-base-dev \\\n        libatlas3-base \\\n        libblas-dev \\\n        libfreetype6-dev \\\n        libhdf5-dev \\\n        liblapack-dev \\\n        libpng-dev \\\n        libxml2-dev \\\n        libxslt1-dev \\\n        libyaml-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        python-virtualenv \\\n        python3-dev \\\n        python-dev && \\\n    apt-get clean && \\\n    useradd --create-home --home-dir /home/user --shell /bin/bash -G sudo user && \\\n    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && rm -rf /var/lib/apt/lists/*;\n\n# Set the locale (otherwise dask-distributed complains).\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nUSER user\nENV HOME=/home/user\nENV SHELL=/bin/bash\nENV USER=user\nWORKDIR /home/user\n\n# Setup virtual envs and install convenience packages.  Note: installing\n# cherrypy as part of the mhcflurry installation weirdly fails on a unicode\n# issue in python2, but installing it separately seems to work.\nRUN virtualenv venv-py3 --python=python3 && \\\n    venv-py3/bin/pip install --upgrade pip && \\\n    venv-py3/bin/pip install --upgrade \\\n        numpy \\\n        cherrypy \\\n        jupyter \\\n        lxml \\\n        scipy \\\n        scikit-learn \\\n        seaborn\n\nENV KERAS_BACKEND tensorflow\n# RUN venv-py3/bin/pip install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.10.0-cp35-cp35m-linux_x86_64.whl\n\n# Install mhcflurry and latest kubeface and download data and models.\nCOPY . ./mhcflurry\nRUN venv-py3/bin/pip install --upgrade ./mhcflurry git+https://github.com/hammerlab/kubeface.git \\\n    && venv-py3/bin/mhcflurry-downloads fetch\n\nEXPOSE 8888\nENTRYPOINT [\"venv-py3/bin/jupyter\", \"notebook\", \"--ip=0.0.0.0\", \"--allow-root\", \"--no-browser\"]\n"
}