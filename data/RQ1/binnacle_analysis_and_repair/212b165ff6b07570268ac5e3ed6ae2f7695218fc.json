{
  "startTime": 1674235730146,
  "endTime": 1674235730253,
  "originalSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## Docker GROBID image\n\n# > docker build -t lfoppiano/grobid:GROBID_VERSION --build-arg GROBID_VERSION=GROBID_VERSION .\n# Example: > docker build -t lfoppiano/grobid:1.0.0 --build-arg GROBID_VERSION=1.0.0 .\n\n# > docker run -t --rm -p 8080:8070 -p 8081:8071 {image_name}\n\n# To connect to the container with a bash shell\n# > docker exec -i -t {container_name} /bin/bash\n\n# -------------------\n# build builder image\n# -------------------\nFROM openjdk:8-jdk as builder\n\nUSER root\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install libxml2 && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt/grobid-source\n\nRUN mkdir -p .gradle\nVOLUME /opt/grobid-source/.gradle\n\n# gradle\nCOPY gradle/ ./gradle/\nCOPY gradlew ./\nCOPY gradle.properties ./\nCOPY build.gradle ./\nCOPY settings.gradle ./\n\n# source\nCOPY grobid-home/ ./grobid-home/\nCOPY grobid-core/ ./grobid-core/\nCOPY grobid-service/ ./grobid-service/\nCOPY grobid-trainer/ ./grobid-trainer/\n\nRUN ./gradlew clean assemble --no-daemon  --info --stacktrace\n\n\n# -------------------\n# build runtime image\n# -------------------\nFROM openjdk:8-jre-slim\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install libxml2 && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt\n\nCOPY --from=builder /opt/grobid-source/grobid-core/build/libs/grobid-core-*-onejar.jar ./grobid/grobid-core-onejar.jar\nCOPY --from=builder /opt/grobid-source/grobid-service/build/distributions/grobid-service-*.zip ./grobid-service.zip\nCOPY --from=builder /opt/grobid-source/grobid-home/build/distributions/grobid-home-*.zip ./grobid-home.zip\n\nRUN unzip -o ./grobid-service.zip -d ./grobid && \\\n    mv ./grobid/grobid-service-* ./grobid/grobid-service\n\nRUN unzip ./grobid-home.zip -d ./grobid && \\\n    mkdir -p /opt/grobid/grobid-home/tmp\n\nRUN rm *.zip\n\nVOLUME [\"/opt/grobid/grobid-home/tmp\"]\n\nWORKDIR /opt/grobid\n\nENV JAVA_OPTS=-Xmx4g\n\n# Add Tini\nENV TINI_VERSION v0.18.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"-s\", \"--\"]\n\nCMD [\"./grobid-service/bin/grobid-service\", \"server\", \"grobid-service/config/config.yaml\"]\n\nARG GROBID_VERSION\n\nLABEL \\\n    authors=\"Luca Foppiano <luca.foppiano@inria.fr>, Patrice Lopez <patrice.lopez@science-miner.org>\" \\\n    org.label-schema.name=\"Grobid\" \\\n    org.label-schema.description=\"Image with GROBID service\" \\\n    org.label-schema.url=\"https://github.com/kermitt2/grobid\" \\\n    org.label-schema.version=${GROBID_VERSION}\n\n## Docker tricks:\n\n# - remove all stopped containers\n# > docker rm $(docker ps -a -q)\n\n# - remove all unused images\n# > docker rmi $(docker images --filter \"dangling=true\" -q --no-trunc)\n\n# - remove all untagged images\n# > docker rmi $(docker images | grep \"^<none>\" | awk \"{print $3}\")\n\n# - \"Cannot connect to the Docker daemon. Is the docker daemon running on this host?\"\n# > docker-machine restart\n"
}