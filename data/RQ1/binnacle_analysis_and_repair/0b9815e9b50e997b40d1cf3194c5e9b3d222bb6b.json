{
  "startTime": 1674250397584,
  "endTime": 1674250397826,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:xenial\n\nRUN apt-get -qq update && \\\n    apt-get -qq --no-install-recommends install locales -y && rm -rf /var/lib/apt/lists/*;\n\nRUN locale-gen en_US en_US.UTF-8 && \\\n    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\n\nENV LANG en_US.UTF-8\n\nRUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list' && \\\n    apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116\n\n# upgrade distro\nRUN apt-get -qq update && \\\n    apt-get -qq dist-upgrade -y && \\\n    apt-get -qq update\n\nRUN apt-get -qq --no-install-recommends install -y \\\n      git \\\n      wget \\\n      build-essential \\\n      cppcheck \\\n      cmake \\\n      libopencv-dev \\\n      libpoco-dev \\\n      libpocofoundation9v5 \\\n      libpocofoundation9v5-dbg \\\n      python-empy \\\n      python3-dev \\\n      python3-empy \\\n      python3-nose \\\n      python3-pip \\\n      python3-setuptools \\\n      python3-vcstool \\\n      libtinyxml-dev \\\n      libeigen3-dev \\\n      libasio-dev \\\n      libtinyxml2-dev && rm -rf /var/lib/apt/lists/*;\n\n# special depends for ORK renderer\nRUN apt-get -qq --no-install-recommends install -y \\\n      libboost-dev \\\n      libassimp-dev \\\n      freeglut3-dev \\\n      libgl1-mesa-dev \\\n      libfreeimage-dev \\\n      libxmu-dev \\\n      libxi-dev \\\n      libsdl1.2-dev \\\n      libosmesa6-dev \\\n      libusb-1.0-0-dev \\\n      libudev-dev && rm -rf /var/lib/apt/lists/*;\n\n# special depends for Astra camera driver\nRUN apt-get -qq --no-install-recommends install -y \\\n  libboost-system-dev \\\n  libboost-thread-dev && rm -rf /var/lib/apt/lists/*;\n\n# special depends for demo\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir numpy math3d\n\n# setup ros2 workspace\nENV ROS2_WS=/root/picky_robot_ws\nRUN rm -rf $ROS2_WS\nRUN mkdir -p $ROS2_WS/src\nWORKDIR $ROS2_WS\n\nRUN wget https://raw.githubusercontent.com/ros2/ros2/master/ros2.repos\nRUN vcs import src < ros2.repos\n\n# TODO temporary fix for python memory errors\n# RUN cd src/ros2/rosidl && git pull && git checkout fix_destroy_segfault\n# RUN cd src/ros2/rclpy && git pull && git checkout fix_destroy_segfault\n\n# set up picky robot demos\n\nRUN wget https://raw.githubusercontent.com/Kukanani/picky_robot/ros2/picky_robot.repos\nRUN vcs import src/ros2 < picky_robot.repos\n\n# LINEMOD data and meshes\nRUN git clone https://github.com/Kukanani/picky_robot_data.git\n\n# TODO temporary fix to avoid dependency on kobuki drivers\nRUN touch src/ros2/turtlebot2_demo/turtlebot2_follower/AMENT_IGNORE\nRUN touch src/ros2/turtlebot2_demo/turtlebot2_drivers/AMENT_IGNORE\n\n# build everything\n\nWORKDIR $ROS2_WS\nRUN src/ament/ament_tools/scripts/ament.py build --symlink-install --isolated --parallel\n\nRUN echo \"export ROS2_WS=/root/picky_robot_ws\" >> /root/.bashrc && \\\n    echo \"export RMW_IMPLEMENTATION=rmw_fastrtps_cpp\" >> /root/.bashrc && \\\n    echo \"source $ROS2_WS/install_isolated/local_setup.bash\" >> /root/.bashrc\n\n\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\nENV PATH /usr/local/nvidia/bin:${PATH}\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}"
}