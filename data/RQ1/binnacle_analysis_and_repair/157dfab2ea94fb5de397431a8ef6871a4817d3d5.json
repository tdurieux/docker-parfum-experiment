{
  "startTime": 1674244868212,
  "endTime": 1674244868627,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 32,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\nLABEL \\\n description=\"Container for Hootenanny in GBDX\" \\\n maintainer=\"matthew.jackson@digitalglobe.com\" \\\n name=\"GBDX Hootenanny\" \\\n vendor=\"Radiant Solutions\"\n\nENV container docker\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\nRUN localedef --quiet -c -i en_US -f UTF-8 en_US.UTF-8\n\n# Setup the epel, postgres and Hoot repos\nADD hoot_etc.tar.gz /\n\nRUN chown root:root /etc/yum.repos.d/hoot.repo \\\n && chmod 0644 /etc/yum.repos.d/hoot.repo \\\n && chown root:root /etc/pki/rpm-gpg/RPM-GPG-KEY-Hoot \\\n && chmod 0644 /etc/pki/rpm-gpg/RPM-GPG-KEY-Hoot \\\n && yum -y install epel-release \\\n && rpm -Uvh https://download.postgresql.org/pub/repos/yum/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-3.noarch.rpm \\\n && yum -q -y update && rm -rf /var/cache/yum\n\n# Install the NodeSource repo and an ancient version of NodeJS\nRUN curl -f --silent --location https://rpm.nodesource.com/setup | bash -\nRUN yum install -q -y nodejs-0.10.48 nodejs-devel-0.10.48 yum-plugin-versionlock \\\n && yum versionlock nodejs* && rm -rf /var/cache/yum\n\n\n# Install all the stuff we need to build a minimal version of Hoot\nRUN yum install -q -y \\\n    autoconf \\\n    automake \\\n    bc \\\n    boost-devel \\\n    bzip2 \\\n    cmake \\\n    cppunit-devel \\\n    curl \\\n    file \\\n    gcc \\\n    gcc-c++ \\\n    gdb \\\n    geos \\\n    geos-devel \\\n    git \\\n    git-core \\\n    glpk \\\n    glpk-devel \\\n    hoot-gdal \\\n    hoot-gdal-devel \\\n    hoot-gdal-python \\\n    libicu-devel \\\n    liboauthcpp \\\n    liboauthcpp-devel \\\n    libpng-devel \\\n    libtool \\\n    mlocate \\\n    opencv \\\n    opencv-core \\\n    opencv-devel \\\n    opencv-python \\\n    osmosis \\\n    java-1.8.0-openjdk \\\n    perl-XML-LibXML \\\n    hoot-postgis24_95 \\\n    postgresql95 \\\n    postgresql95-contrib \\\n    postgresql95-devel \\\n    postgresql95-server \\\n    proj \\\n    proj-devel \\\n    protobuf \\\n    protobuf-compiler \\\n    protobuf-devel \\\n    python-devel \\\n    python-matplotlib \\\n    python-pip \\\n    python-setuptools \\\n    qt \\\n    qt-devel \\\n    qt-postgresql \\\n    qtwebkit \\\n    qtwebkit-devel \\\n    redhat-lsb-core \\\n    stxxl \\\n    stxxl-devel \\\n    swig \\\n    unzip \\\n    v8-devel \\\n    vim \\\n    wamerican-insane \\\n    w3m \\\n    wget \\\n    words \\\n    zip && rm -rf /var/cache/yum\n\n\n# Make sure that we have qmake for the build.\nRUN alternatives --install /usr/bin/qmake qmake /usr/bin/qmake-qt5 500\n\n# Cleanup\nRUN rm -f /etc/udev/rules.d/70-persistent-net.rules /var/log/wtmp /var/log/btmp \\\n && rm -rf /tmp/* \\\n && yum clean all\n"
}