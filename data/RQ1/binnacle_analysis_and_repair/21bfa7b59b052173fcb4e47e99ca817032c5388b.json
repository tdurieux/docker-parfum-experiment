{
  "startTime": 1674234934786,
  "endTime": 1674234934899,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nENV PYTHONUNBUFFERED 1\n# The default locale breaks python 3 < python 3.7. https://bugs.python.org/issue28180\nENV LANG C.UTF-8\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y curl gnupg && \\\n    curl -f -sL https://deb.nodesource.com/setup_10.x | bash - && \\\n    apt-get install --no-install-recommends -y python3-pip python3-venv python3-dev \\\n    nodejs git libmysqlclient-dev libmagickwand-dev poppler-utils tesseract-ocr libssl-dev gettext && \\\n    apt-get autoremove -y && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Setup the python part\n\nCOPY pyproject.toml /app/pyproject.toml\nCOPY poetry.lock /app/poetry.lock\nWORKDIR /app\n\nRUN pip3 install --no-cache-dir --upgrade poetry \\\n    && poetry config settings.virtualenvs.in-project true \\\n    && poetry install --no-dev\nCOPY . /app/\n\nENV NODE_ENV production\n\nRUN etc/docker-init.sh\n\nEXPOSE 8000\n\nUSER www-data\n\nENTRYPOINT [\"poetry\", \"run\"]\nCMD [\"gunicorn\", \"meine_stadt_transparent.wsgi:application\", \"-w 2\", \"-b :8000\", \"--capture-output\"]\n"
}