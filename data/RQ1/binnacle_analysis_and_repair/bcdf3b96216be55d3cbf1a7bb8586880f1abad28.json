{
  "startTime": 1674234509257,
  "endTime": 1674234509479,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 59,
        "columnStart": 6,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 59,
        "columnStart": 6,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM scratch\nADD docker/__MS_BASEIMAGE__ docker/osfiles.tar.xz /\nRUN echo DOCKERFILE_ID=5\\\n && set -x\\\n && export DEBIAN_FRONTEND=\"noninteractive\"\\\n        MS_GIT=\"__MS_GIT__\" \\\n        MS_STAGE0_IMAGE=\"__MS_STAGE0_IMAGE__\" \\\n        MS_BASEIMAGE=\"__MS_BASEIMAGE__\"\\\n && chmod +x /ms_initd_wrapper \\\n && if which apt-get >/dev/null 2>&1; then \\\n   sed -i -re\\\n       \"s/Pin: .*/Pin: release a=$(lsb_release -sc)-proposed/g\"\\\n       /etc/apt/preferences.d/*\\\n   && sed -i -re\\\n       \"s/__ubunturelease__/$(lsb_release -sc)/g\"\\\n       /etc/apt/sources.list\\\n    && echo '#!/bin/sh' > /usr/sbin/policy-rc.d \\\n    && echo 'exit 101' >> /usr/sbin/policy-rc.d \\\n    && for f in\\\n                /sbin/initctl\\\n                /sbin/init\\\n                /lib/systemd/systemd\\\n                /bin/systemctl\\\n                /usr/sbin/policy-rc.d\\\n    ;do \\\n     if [ -e $f ];then \\\n      dpkg-divert --local --rename --add $f \\\n      && cp -a /ms_initd_wrapper $f;\\\n     fi;\\\n    done \\\n   && apt-get update \\\n   && apt-get install --no-install-recommends -y --force-yes \\\n        acl \\\n        autoconf \\\n        automake \\\n        build-essential \\\n        bzip2 \\\n        ca-certificates \\\n        debconf-utils \\\n        e2fsprogs \\\n        gettext \\\n        git \\\n        groff \\\n        libffi-dev \\\n        libgmp3-dev \\\n        libmemcached-dev \\\n        libsigc++-2.0-dev \\\n        libssl-dev \\\n        libtool \\\n        m4 \\\n        man-db \\\n        netcat \\\n        pkg-config \\\n        python-dev \\\n        python-virtualenv \\\n        rsync \\\n        socat \\\n        swig \\\n        tcl8.5 \\\n        tcpdump \\\n  && bash \\\n   && if dpkg -l |grep systemd|awk '{print $1 $2}'|egrep -q '^iisystemd'; then \\\n       apt-get install --no-install-recommends -y --force-yes \\\n         systemd dbus libpam-systemd systemd-sysv libsystemd0; \\\n      fi \\\n   && apt-get -y --force-yes dist-upgrade; rm -rf /var/lib/apt/lists/*; \\\n fi \\\n && chmod 755 /sbin/lxc-cleanup.sh /usr/bin/ms-lxc-setup.sh\\\n             /sbin/makinastates-snapshot.sh \\\n && sleep 0.4 \\\n && /sbin/lxc-cleanup.sh \\\n && if [ -e /etc/rsyslog.conf ];then\\\n    sed -i -re \"s/PrivDropToUser.*/PrivDropToUser root/g\"\\\n        /etc/rsyslog.conf\\\n    && sed -i -re \"s/PrivDropToGroup*/PrivDropToGroup root/g\"\\\n        /etc/rsyslog.conf;\\\n fi \\\n && if [ -e /lib/systemd/systemd ];then\\\n       if ! test -e /etc/systemd/system/network-online.target.wants;then\\\n         mkdir -pv /etc/systemd/system/network-online.target.wants;\\\n       fi\\\n       &&ln -sf /etc/systemd/system/lxc-setup.service\\\n                /etc/systemd/system/network-online.target.wants/lxc-setup.service;\\\n   fi \\\n && /sbin/makinastates-snapshot.sh\n# vim:set ft=Dockerfile:\n"
}