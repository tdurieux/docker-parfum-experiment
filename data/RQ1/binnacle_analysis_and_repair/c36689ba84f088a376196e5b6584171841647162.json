{
  "startTime": 1674244110136,
  "endTime": 1674244110331,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 11,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 11,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 13,
        "columnEnd": 111
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 24,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This file describes the standard way to build libcompose, using docker\nFROM golang:1.8.3\n\n# virtualenv is necessary to run acceptance tests\nRUN apt-get update && \\\n    apt-get install -y iptables build-essential --no-install-recommends && \\\n    apt-get install --no-install-recommends -y python-setuptools && \\\n    easy_install pip && pip install --no-cache-dir virtualenv && rm -rf /var/lib/apt/lists/*;\n\n# Install build dependencies\nRUN go get github.com/aktau/github-release && \\\n    go get golang.org/x/tools/cmd/cover && \\\n    go get github.com/golang/lint/golint\n\n# Which docker version to test on and what default one to use\nENV DOCKER_VERSIONS 1.9.1 1.10.3 1.13.1 17.03.2 17.06.0\nENV DEFAULT_DOCKER_VERSION 17.03.2\n\n# Download docker\nRUN set -e; set -x; \\\n    for v in $(echo ${DOCKER_VERSIONS} | cut -f1); do \\\n        if test \"${v}\" = \"1.9.1\" || test \"${v}\" = \"1.10.3\"; then \\\n           mkdir -p /usr/local/bin/docker-${v}/; \\\n           curl -f https://get.docker.com/builds/Linux/x86_64/docker-${v} -o /usr/local/bin/docker-${v}/docker; \\\n           chmod +x /usr/local/bin/docker-${v}/docker; \\\n        elif test \"${v}\" = \"1.13.1\"; then \\\n           curl -f https://get.docker.com/builds/Linux/x86_64/docker-${v}.tgz -o docker-${v}.tgz; \\\n             tar xzf docker-${v}.tgz -C /usr/local/bin/; \\\n             mv /usr/local/bin/docker /usr/local/bin/docker-${v}; \\\n             rm docker-${v}.tgz; \\\n        else \\\n             curl -f https://download.docker.com/linux/static/stable/x86_64/docker-${v}-ce.tgz -o docker-${v}.tgz; \\\n             tar xzf docker-${v}.tgz -C /usr/local/bin/; \\\n             mv /usr/local/bin/docker /usr/local/bin/docker-${v}; \\\n             rm docker-${v}.tgz; \\\n        fi \\\n    done\n\n# Set the default Docker to be run\nRUN ln -s /usr/local/bin/docker-${DEFAULT_DOCKER_VERSION} /usr/local/bin/docker\n\nWORKDIR /go/src/github.com/docker/libcompose\n\n# Compose COMMIT for acceptance test version, update that commit when\n# you want to update the acceptance test version to support.\nENV COMPOSE_COMMIT 1.9.0\nRUN virtualenv venv && \\\n    git clone https://github.com/docker/compose.git venv/compose && \\\n    cd venv/compose && \\\n    git checkout -q \"$COMPOSE_COMMIT\" && \\\n    ../bin/pip install \\\n               -r requirements.txt \\\n               -r requirements-dev.txt\n\nENV COMPOSE_BINARY /go/src/github.com/docker/libcompose/libcompose-cli\nENV USER root\n\n# Wrap all commands in the \"docker-in-docker\" script to allow nested containers\nENTRYPOINT [\"hack/dind\"]\n\nCOPY . /go/src/github.com/docker/libcompose\n"
}