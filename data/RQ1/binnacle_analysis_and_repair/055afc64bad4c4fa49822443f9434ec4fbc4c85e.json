{
  "startTime": 1674234956549,
  "endTime": 1674234956652,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10.13.0-alpine\n\nLABEL MAINTAINER=\"Glenn Rempe <glenn@tierion.com>\"\nWORKDIR /home/node/app\nENV NODE_ENV production\n\n# Copy package.json first, build and then add other files.\n# This way there's no need to rebuild the whole thing if only a few JS files change\nCOPY package.json yarn.lock ./\n\n# Install dependencies and create directories\nRUN apk add --no-cache su-exec tini && \\\n  apk add --no-cache --virtual .build build-base linux-headers git python && \\\n  mkdir -p keys/backups && \\\n  mkdir -p rocksdb && \\\n  JOBS=max npm install --production && \\\n  \\\n  # Clean rocksdb build dependencies\n  mv node_modules/rocksdb/build/Release/leveldown.node /tmp/ && \\\n  rm -r node_modules/rocksdb/build/ && \\\n  mkdir -p node_modules/rocksdb/build/Release/ && \\\n  mv /tmp/leveldown.node node_modules/rocksdb/build/Release/ && \\\n  rm -r node_modules/rocksdb/deps && \\\n\n  # Remove Alpine build dependencies\n  apk del --no-cache .build && npm cache clean --force;\n\n# Copy all necessary JS files\nCOPY auth-keys-print.js server.js tor-exit-nodes.txt cert.crt cert.key ./\nCOPY lib ./lib\nCOPY ui/build ./ui\n\nEXPOSE 8080 8443\nENTRYPOINT [\"su-exec\", \"node:node\", \"tini\", \"--\"]\nCMD [\"yarn\", \"start\"]\n"
}