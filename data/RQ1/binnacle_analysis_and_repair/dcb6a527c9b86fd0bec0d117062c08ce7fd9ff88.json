{
  "startTime": 1674243611738,
  "endTime": 1674243612049,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 29,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\nLABEL maintainer=\"Gigantum <support@gigantum.com>\"\n\n# Copy requirements.txt files\nCOPY resources/awful-intersections-demo.lbk /opt/awful-intersections-demo.lbk\nCOPY packages/gtmcore/requirements.txt /opt/gtmcore/requirements.txt\nCOPY packages/gtmcore/requirements-testing.txt /opt/gtmcore/requirements-testing.txt\nCOPY packages/gtmapi/requirements.txt /opt/gtmapi/requirements.txt\nCOPY packages/gtmapi/requirements-testing.txt /opt/gtmapi/requirements-testing.txt\nCOPY packages/confhttpproxy /opt/confhttpproxy\nENV SHELL=/bin/bash\n\n# Install system level dependencies\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install git nginx supervisor wget openssl python3 python3-pip python3-distutils \\\n    gcc g++ gosu redis-server libjpeg-dev git-lfs python3-setuptools python3-dev libdpkg-perl ssh zip unzip libsnappy-dev && \\\n    git lfs install && \\\n    apt-get -y --no-install-recommends install curl gnupg gnupg1 gnupg2 && \\\n    curl -f -sL https://deb.nodesource.com/setup_11.x | bash && \\\n    apt-get -y --no-install-recommends install nodejs && \\\n    npm install -g configurable-http-proxy && \\\n    cd /opt/confhttpproxy && pip3 install --no-cache-dir . && \\\n    pip3 install --no-cache-dir wheel && \\\n    pip3 install --no-cache-dir -r /opt/gtmcore/requirements.txt && \\\n    pip3 install --no-cache-dir -r /opt/gtmapi/requirements.txt && \\\n    pip3 install --no-cache-dir -r /opt/gtmcore/requirements-testing.txt && \\\n    pip3 install --no-cache-dir -r /opt/gtmapi/requirements-testing.txt && \\\n    pip3 install --no-cache-dir codecov pytest-cov pytest-xdist && \\\n    apt-get -qq -y remove gcc g++ python3-dev wget gnupg gnupg1 gnupg2 && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /var/log/dpkg.log && npm cache clean --force;\n\n# Setup circleci user\nRUN useradd -ms /bin/bash circleci\n\n# Install jest for UI tests\nRUN npm install -g @babel/cli@7.2.3 @babel/core@7.2.2 jest@23.6.0 relay-compiler@2.0.0 && npm cache clean --force;\n\n# Install fossa\nRUN curl -f -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh | bash\n\n# Set up working dir, required for import mocks\nRUN mkdir -p /mnt/gigantum && chown -R circleci:circleci /mnt/gigantum && \\\n    mkdir /home/circleci/gigantum && chown -R circleci:circleci /home/circleci/gigantum && \\\n    mkdir /mnt/share && chown -R circleci:circleci /mnt/share && \\\n    mkdir /opt/redis && chown -R circleci:circleci /opt/redis\n\n# Setup gtmcore config file - should be written by automation before copy\nCOPY build/circleci/labmanager.yaml /etc/gigantum/labmanager.yaml\n\n# Finish setting up user\nUSER circleci\nWORKDIR /home/circleci\n\n# Setup git\nRUN git config --global user.email \"noreply@gigantum.io\" && \\\n    git config --global user.name \"CircleCI\" && \\\n    git config --global credential.helper store\n\nCMD [\"/bin/bash\"]\n"
}