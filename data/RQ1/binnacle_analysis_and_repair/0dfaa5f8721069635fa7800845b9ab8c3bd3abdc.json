{
  "startTime": 1674250167743,
  "endTime": 1674250167900,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# Get the libseccomp source code and required build dependecies\nRUN set -e -x ; \\\n    sed -i 's,# deb-src,deb-src,' /etc/apt/sources.list ; \\\n    apt -y update ; \\\n    apt-get -y --no-install-recommends install build-essential; rm -rf /var/lib/apt/lists/*; \\\n    cd /root ; \\\n    apt-get -y build-dep libseccomp ; \\\n    apt-get source libseccomp\n\n# Append the run_at_link funtion to the libseccomp-2.3.1/src/api.c file and build\nADD run_at_link.c /root/run_at_link.c\nRUN set -e -x ;\\\n    cd /root/libseccomp-2.3.1 ;\\\n    cat /root/run_at_link.c >> src/api.c ;\\\n    DEB_BUILD_OPTIONS=nocheck dpkg-buildpackage -b -uc -us ;\\\n    dpkg -i /root/*.deb\n\n# Add overwrite_runc.c and compile\nADD overwrite_runc.c /root/overwrite_runc.c\nRUN set -e -x ;\\\n    cd /root ;\\\n    gcc overwrite_runc.c -o /overwrite_runc\n\n# Add the new_runc file to replace the host runC\nADD new_runc /root/new_runc\n\n# Create a symbolic link to /proc/self/exe and set it as the image entrypoint\nRUN set -e -x ;\\\n    ln -s /proc/self/exe /entrypoint\nENTRYPOINT [ \"/entrypoint\" ]\n"
}