{
  "startTime": 1674240908169,
  "endTime": 1674240908346,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Compile of registry binaries\nFROM arm32v7/golang as builder\n\nENV DISTRIBUTION_DIR /go/src/github.com/docker/distribution\nENV DOCKER_BUILDTAGS include_oss include_gcs\n\nRUN apt-get update && apt-get install -y --no-install-recommends --assume-yes make git && rm -rf /var/lib/apt/lists/*;\n\nARG VERSION=master\nRUN git clone -b $VERSION https://github.com/docker/distribution.git $DISTRIBUTION_DIR\n\nWORKDIR $DISTRIBUTION_DIR\nRUN mkdir -p /etc/docker/registry && \\\n    cp cmd/registry/config-dev.yml /etc/docker/registry/config.yml\n\nRUN make PREFIX=/go clean binaries\n\n\n# Build a minimal distribution container\nFROM arm32v7/debian:jessie\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y ca-certificates librados2 apache2-utils && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY --from=builder /go/bin/registry /bin/registry\nCOPY --from=builder /go/src/github.com/docker/distribution/cmd/registry/config-example.yml /etc/docker/registry/config.yml\n\nVOLUME [\"/var/lib/registry\"]\nEXPOSE 5000\nENTRYPOINT [\"/bin/registry\"]\nCMD [\"serve\", \"/etc/docker/registry/config.yml\"]\n"
}