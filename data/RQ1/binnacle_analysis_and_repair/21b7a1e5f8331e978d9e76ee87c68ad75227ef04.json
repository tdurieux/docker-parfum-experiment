{
  "startTime": 1674240571695,
  "endTime": 1674240572107,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 193
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 21,
        "columnEnd": 50
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM cloudera/quickstart\nMAINTAINER James Winegar\n\n# Install linux development tools and security updates\nCOPY docker/cloudera-kafka.repo /etc/yum.repos.d/cloudera-kafka.repo\nRUN yum clean all && \\\n    rpm --rebuilddb; yum install -y yum-plugin-ovl && \\\n    yum update -y && \\\n    yum groupinstall -y 'Development Tools' && \\\n    yum install -y --quiet \\\n      wget \\\n      htop \\\n      hadoop-yarn-nodemanager \\\n      hadoop-hdfs-datanode \\\n      hadoop-mapreduce \\\n      hadoop-hdfs-namenode \\\n      hadoop-yarn-resourcemanager \\\n      hadoop-client \\\n      kafka \\\n      kafka-server && \\\n    yum clean all && rm -rf /var/cache/yum\n\nENV SPARK_VERSION=2.3.1\nENV HADOOP_VERSION=2.7\nENV ANACONDA_VERSION=5.2.0\nENV SPARK_HOME=/opt/spark\n# Install Java and Spark and Anaconda\nRUN mkdir -p /opt && \\\n    mkdir -p /downloads && \\\n    cd /downloads && \\\n    wget --quiet -c --header \"Cookie: oraclelicense=accept-securebackup-cookie\" https://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz && \\\n    mkdir /usr/java/jdk.1.8.0_131 && \\\n    tar -xf jdk-8u131-linux-x64.tar.gz -C /usr/java/ && \\\n    wget --quiet https://mirrors.advancedhosters.com/apache/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz && \\\n    tar -xzf spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz && \\\n    mv spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION} ${SPARK_HOME}-${SPARK_VERSION} && \\\n    ln -s ${SPARK_HOME}-${SPARK_VERSION} ${SPARK_HOME} && \\\n    wget --quiet https://repo.continuum.io/archive/Anaconda3-${ANACONDA_VERSION}-Linux-x86_64.sh -O anaconda.sh && \\\n    /bin/bash /downloads/anaconda.sh -b -p /opt/anaconda && \\\n    rm -rf /downloads && rm jdk-8u131-linux-x64.tar.gz\n\n# Update Python packages\nENV PATH=/opt/anaconda/bin:$PATH\nRUN conda update -y conda && \\\n    conda update -y --all && \\\n    conda install -y pip setuptools wheel \\\n    cython numpy pandas scipy nltk scikit-learn scikit-image sympy && \\\n    conda install -c conda-forge -y jupyterlab kafka-python && \\\n    conda clean -tp -y && \\\n    pip install --no-cache-dir bash_kernel && \\\n    python -m bash_kernel.install\n\n\nRUN cd $SPARK_HOME/python &&\\\n      python setup.py install\n\n# Download custom Docker startup file\nRUN mkdir -p /root/.jupyter\nCOPY docker/jupyter_notebook_config.py /root/.jupyter/jupyter_notebook_config.py\nCOPY docker/themes.jupyterlab-settings /root/.jupyter/lab/user-settings/\\@jupyterlab/apputils-extension/\nCOPY docker/ipython_config.py /root/.ipython/profile_default/ipython_config.py\nCOPY docker/start-notebook.sh /root/start-notebook.sh\nCOPY docker/docker-quickstart /usr/bin/docker-quickstart\nCOPY docker/spark-defaults.conf /etc/spark/conf.dist/spark-defaults.conf\nRUN chmod 755 /root/start-notebook.sh && \\\n    chmod 755 /usr/bin/docker-quickstart\n\nENV PYSPARK_PYTHON=/opt/anaconda/bin/python\nENV SHELL=bash\nENV JAVA_HOME=/usr/java/jdk1.8.0_131\nENV PATH=$SPARK_HOME/bin:$SPARK_HOME/python:$SPARK_HOME/python/lib/py4j-0.10.4-src.zip:$PATH\n"
}