{
  "startTime": 1674235353965,
  "endTime": 1674235354046,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 1: Build Aerospike C client\nFROM alpine:3.9 as c-builder\nWORKDIR /src\n\nENV AS_C_VERSION 4.6.3\n\nRUN apk update\nRUN apk add --no-cache \\\n    build-base \\\n    linux-headers \\\n    bash \\\n    libuv-dev \\\n    openssl-dev \\\n    lua5.1-dev \\\n    zlib-dev\n\nRUN wget https://artifacts.aerospike.com/aerospike-client-c/${AS_C_VERSION}/aerospike-client-c-src-${AS_C_VERSION}.zip \\\n    && unzip aerospike-client-c-src-${AS_C_VERSION}.zip \\\n    && mv aerospike-client-c-src-${AS_C_VERSION} aerospike-client-c \\\n    && cd aerospike-client-c \\\n    && make EVENT_LIB=libuv\n\n# Stage 2: Build Aerospike Node.js client\nFROM node:10-alpine as node-builder\nWORKDIR /src\n\nCOPY --from=c-builder /src/aerospike-client-c/target/Linux-x86_64/include/ aerospike-client-c/include/\nCOPY --from=c-builder /src/aerospike-client-c/target/Linux-x86_64/lib/ aerospike-client-c/lib/\n\nENV AS_NODEJS_VERSION 3.11.0\nENV PREFIX=/src/aerospike-client-c\n\nRUN apk update\nRUN apk add --no-cache \\\n      build-base \\\n      bash \\\n      python \\\n      linux-headers \\\n      zlib-dev \\\n      openssl-dev\n\nRUN npm install aerospike@${AS_NODEJS_VERSION} && npm cache clean --force;\n\n# Stage 3: Aerospike Node.js Runtime\nFROM node:10-alpine\nWORKDIR /src\n\nRUN apk add --no-cache \\\n      zlib \\\n      openssl\n\nCOPY --from=node-builder /src/node_modules/ node_modules/\n"
}