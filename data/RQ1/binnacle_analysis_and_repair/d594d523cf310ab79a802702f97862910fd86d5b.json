{
  "startTime": 1674243899081,
  "endTime": 1674243899435,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 33,
        "columnEnd": 65
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\nMAINTAINER \"Brent Baude\" <bbaude@redhat.com>\nENV container docker\nENV HOME=/home\nWORKDIR $HOME\n\nCOPY epel-release-7-2.noarch.rpm $HOME/\nRUN yum -y install $HOME/epel-release-7-2.noarch.rpm && rm -rf /var/cache/yum\n\nCOPY atomic7-testing.repo /etc/yum.repos.d\nCOPY walters-buildtools.repo /etc/yum.repos.d\nCOPY paas7-openshift-origin36-testing.repo /etc/yum.repos.d\n\nRUN yum -y install libguestfs libguestfs-tools-c \\\n                   git ostree rpm-ostree libvirt-client \\\n                   PyYAML python2-setuptools virt-install \\\n                   python-pip python-devel gcc net-tools \\\n                   openssh-clients sshpass && yum clean all && rm -rf /var/cache/yum\n\nRUN yum -y install systemd && rm -rf /var/cache/yum\n\n#START:  linchpin specific installations and workspace setups\nRUN yum install -y libselinux-python \\\n                   python-devel \\\n                   libffi-devel \\\n                   redhat-rpm-config \\\n                   openssl-devel \\\n                   openssh-server \\\n                   libyaml-devel \\\n                   python-lxml \\\n                   libvirt \\\n                   libvirt-devel \\\n                   rpm-build \\\n                   bash-completion \\\n                   libvirt-python \\\n                   && yum groupinstall -y \"Virtualization Tools\" && rm -rf /var/cache/yum\nRUN yum install -y python34 --nogpgcheck && rm -rf /var/cache/yum\nRUN pip install --no-cache-dir pip --upgrade && pip install --no-cache-dir setuptools --upgrade\nRUN ssh-keygen -f /root/.ssh/id_rsa -t rsa -N ''\nRUN printf \"Host *\\n    StrictHostKeyChecking no\" > /root/.ssh/config\nADD linchpin_workspace15 /root/linchpin_workspace\nWORKDIR \"/root/linchpin_workspace/hooks/ansible/\"\nRUN git clone -b release-3.6 https://github.com/openshift/openshift-ansible\nRUN git clone -b v1.1 https://github.com/samvarankashyap/paas-sig-ci\nWORKDIR \"/tmp/\"\n#RUN git clone -b file_module_patch https://github.com/samvarankashyap/linchpin\nRUN git clone -b develop https://github.com/samvarankashyap/linchpin\nWORKDIR \"/tmp/linchpin\"\nRUN \"$PWD/install.sh\"\nRUN cd /tmp/linchpin && python /tmp/linchpin/setup.py install\nWORKDIR \"/root/linchpin_workspace/\"\n#END: Linchpin specific workspace installations\n\n#START: Install origin-tests rpms\n# installs latest origin-tests rpm\nRUN yum install -y origin-tests && rm -rf /var/cache/yum\n#END: Linchpin specific workspace installations\n\nRUN yum -y install libvirt-daemon-driver-* libvirt-daemon libvirt-daemon-kvm qemu-kvm socat && yum clean all; rm -rf /var/cache/yum \\\n(cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \\\nrm -f /lib/systemd/system/multi-user.target.wants/*; \\\nrm -f /etc/systemd/system/*.wants/*; \\\nrm -f /lib/systemd/system/local-fs.target.wants/*; \\\nrm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\nrm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\nrm -f /lib/systemd/system/basic.target.wants/*; \\\nrm -f /lib/systemd/system/anaconda.target.wants/*; \\\nsystemctl enable libvirtd; \\\nsystemctl enable virtlockd\nCOPY default.xml /etc/libvirt/qemu/networks/\nRUN mkdir -p /var/lib/libvirt/images/\nRUN mkdir -p /var/lib/libvirt/images/linchpin/\n\n# Edit the service file which includes ExecStartPost to chmod /dev/kvm\nRUN sed -i \"/Service/a ExecStartPost=\\/bin\\/chmod 666 /dev/kvm\" /usr/lib/systemd/system/libvirtd.service\nVOLUME [ \"/sys/fs/cgroup\"]\nCMD [\"/usr/sbin/init\"]\n"
}