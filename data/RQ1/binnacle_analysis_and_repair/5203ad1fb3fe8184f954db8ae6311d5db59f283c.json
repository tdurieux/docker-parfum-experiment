{
  "startTime": 1674234265495,
  "endTime": 1674234265672,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# --------------------------- ubuntu ------------------------------------------\nRUN apt-get -y update\nRUN apt-get -y --no-install-recommends install git build-essential cmake clang wget && rm -rf /var/lib/apt/lists/*;\n\n# --------------------------- sexpr -------------------------------------------\nRUN git clone https://github.com/WebAssembly/sexpr-wasm-prototype.git\n# SHA from branch binary_0xa\nRUN cd sexpr-wasm-prototype && \\\n\tgit checkout 98729df && \\\n\tgit submodule update --init\nRUN cd sexpr-wasm-prototype && make -j8\n\n# -------------------------- node ---------------------------------------------\nRUN git clone https://github.com/nodejs/node.git\n# SHA from branch vee-eight-5.1\nRUN cd node && \\\n\tgit checkout 61ed0bb && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n\tmake -j8\n\n# ------------------------ emscripten -----------------------------------------\nRUN wget https://s3.amazonaws.com/mozilla-games/emscripten/releases/emsdk-portable.tar.gz\nRUN tar -xvf emsdk-portable.tar.gz && rm emsdk-portable.tar.gz\nRUN cd /emsdk_portable && \\\n\t./emsdk update && \\\n\t./emsdk install sdk-incoming-64bit && \\\n\t./emsdk activate sdk-incoming-64bit\nENV PATH /binaryen/bin/:/node:/emsdk_portable:/emsdk_portable/clang/fastcomp/build_incoming_64/bin:\\\n\t/emsdk_portable/node/4.1.1_64bit/bin:/emsdk_portable/emscripten/incoming:\\\n\t/node/out/Release/:/sexpr-wasm-prototype/out/:/usr/local/sbin:/usr/local/bin:\\\n\t/usr/sbin:/usr/bin:/sbin:/bin\n\n# ------------------------- binaryen ------------------------------------------\n# Last version with 0xa support: 31dd39afd6197743d3ccbb2cfa4276134c6751d2\n# wasm-as index.wast > index.wasm\n# Produces error: Result = section string of size 110 longer than total section bytes 6 @+8\nRUN git clone https://github.com/WebAssembly/binaryen.git\nRUN cd /binaryen && cmake . && make\n\nRUN apt-get -y --no-install-recommends install vim && rm -rf /var/lib/apt/lists/*;\n\n# Force binaryen to cache stuff\nRUN cd /tmp && \\\n\techo \"int main() { return 0; }\" > /tmp/test.c && \\\n\temcc /tmp/test.c -s BINARYEN=1 -O0 -s ONLY_MY_CODE=1 -o index.js\n\n# ---------------------------- run --------------------------------------------\nWORKDIR /src\nENTRYPOINT cd /build && \\\n\temcc /src/hello_world.c -s BINARYEN=1 -O0 -s ONLY_MY_CODE=1 -o index.js && \\\n\tsexpr-wasm /build/index.wast -o /build/hello_world.wasm && \\\n\t/node/out/Release/node --expose-wasm /src/index.js && \\\n\tchmod ugo+rw *\n"
}