{
  "startTime": 1674241425987,
  "endTime": 1674241426109,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 25,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 25,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nMAINTAINER Wise.io, Inc. <help@wise.io>\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Install packages\nRUN apt-get -y update && apt-get install --no-install-recommends -y wget nano locales curl unzip wget openssl libhdf5-dev && rm -rf /var/lib/apt/lists/*;\n\nENV LANGUAGE en_US.UTF-8\nENV LANG en_US.UTF-8\n\nRUN locale-gen en_US.UTF-8\nRUN dpkg-reconfigure locales\n\n# Install the POSTGRES package so we can connect to Postres servers if need be\nRUN apt-get install --no-install-recommends -y libpq-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install and setup minimal Anaconda Python distribution\nRUN wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh\nRUN bash miniconda.sh -b -p /anaconda && rm miniconda.sh\nENV PATH /anaconda/bin:$PATH\n\n# Set the time zone to the local time zone\nRUN echo \"America/Los_Angeles\" > /etc/timezone && dpkg-reconfigure --frontend noninteractive tzdata\n\n# For image inheritance.\nONBUILD ENV PATH /anaconda/bin:$PATH\n\n# Install some essential data science packages in python, including psycopg2\nRUN conda install scipy numpy scikit-learn scikit-image pyzmq nose readline pandas matplotlib seaborn dateutil ipython-notebook nltk pip\nRUN conda install psycopg2\nRUN conda install cython hdf5 pytables\n\n\n# Get plotly\nRUN pip install --no-cache-dir plotly\n\n# Get the latest gensim\nRUN pip install --no-cache-dir gensim\n\n# get all the nltk data\n# RUN python -m nltk.downloader all\n\nENV PEM_FILE /key.pem\n# $PASSWORD will get `unset` within notebook.sh, turned into an IPython style hash\nENV PASSWORD Dont make this your default\nENV USE_HTTP 1\n\n# Add current files to / and set entry point.\nADD . /workspace\nWORKDIR /workspace\nADD notebook.sh /notebook.sh\nRUN chmod a+x /notebook.sh\n\nEXPOSE 8888\n\nCMD [\"/notebook.sh\"]\n"
}