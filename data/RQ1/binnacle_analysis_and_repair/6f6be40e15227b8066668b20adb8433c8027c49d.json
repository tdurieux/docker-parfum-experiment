{
  "startTime": 1674235040484,
  "endTime": 1674235040561,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:4-slim\n\n# Create app directory\nRUN mkdir -p /usr/src/app && \\\n    apt update && \\\n    apt install --no-install-recommends -y jq && \\\n    rm -rf /var/lib/apt/lists/* && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\n# Install app dependencies\nCOPY package.json /usr/src/app/\nRUN npm install --silent -g npm && \\\n    npm install --silent --prod && \\\n    npm prune --prod && npm cache clean --force;\n\n# Bundle app source\nCOPY . /usr/src/app\n\nCOPY *.sh /usr/bin/\nRUN chmod +x /usr/bin/app.sh\nENV PORT 8080\nEXPOSE 8080\nENV NODE_ENV production\nCMD [ \"/bin/sh\", \"-c\", \"/usr/bin/app.sh start && /usr/bin/app.sh wait\" ]\n\n"
}