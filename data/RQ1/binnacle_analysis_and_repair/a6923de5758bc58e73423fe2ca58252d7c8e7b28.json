{
  "startTime": 1674236609253,
  "endTime": 1674236609439,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 36,
        "columnEnd": 89
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 36,
        "columnEnd": 89
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 0,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 5,
        "columnStart": 39,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 27,
        "columnStart": 61,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 5,
        "columnStart": 39,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM resin/%%RESIN_MACHINE_NAME%%-node:slim\n\n# Install wget and curl\nRUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y \\\n  wget \\\n  curl && rm -rf /var/lib/apt/lists/*;\n\n# Add Kodi-16 apt source\nRUN echo \"deb http://pipplware.pplware.pt/pipplware/dists/jessie/main/binary /\" \\\n>> /etc/apt/sources.list.d/pipplware_jessie.list && \\\n wget -O - https://pipplware.pplware.pt/pipplware/key.asc | sudo apt-key add -\n\n# WTF is going on with httpredir from debian? removing it the dirty way\nRUN sed -i \"s@httpredir.debian.org@$( curl -f -s -D - https://httpredir.debian.org/demo/debian/ | awk '/^Link:/ { print $2 }' | sed -e 's@<http://\\(.*\\)/debian/>;@\\1@g')@\" /etc/apt/sources.list\n\n# Install apt deps\nRUN apt-get clean && apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y \\\n  apt-utils \\\n  build-essential \\\n  libasound2-dev \\\n  libffi-dev \\\n  libssl-dev \\\n  python-dev \\\n  python-pip \\\n  git \\\n  alsa-base \\\n  alsa-utils \\\n  kodi && rm -rf /var/lib/apt/lists/*\n\n# Configure for Kodi\nCOPY ./Dockerbin/99-input.rules /etc/udev/rules.d/99-input.rules\nCOPY ./Dockerbin/10-permissions.rules /etc/udev/rules.d/10-permissions.rules\nRUN addgroup --system input && \\\nusermod -a -G audio root && \\\nusermod -a -G video root && \\\nusermod -a -G input root && \\\nusermod -a -G dialout root && \\\nusermod -a -G plugdev root && \\\nusermod -a -G tty root\n\n# Set npm\nRUN npm config set unsafe-perm true\n\n# Uncomment if you want to Configure for pHAT DAC\n# COPY ./Dockerbin/asound.conf /etc/asound.conf\n\n# Save source folder\nRUN printf \"%s\\n\" \"${PWD##}\" > SOURCEFOLDER\n\n# Move to app dir\nWORKDIR /usr/src/app\n\n# Move package.json to filesystem\nCOPY \"$SOURCEFOLDER/app/package.json\" ./\n\n# NPM i app\nRUN JOBS=MAX npm i --production && npm cache clean --force;\n\n# Move app to filesystem\nCOPY \"$SOURCEFOLDER/app\" ./\n\n# Move to /\nWORKDIR /\n\n## uncomment if you want systemd\nENV INITSYSTEM on\n\n# Start app\nCMD [\"bash\", \"/usr/src/app/start.sh\"]\n"
}