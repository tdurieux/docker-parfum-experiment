{
  "startTime": 1674241454546,
  "endTime": 1674241454663,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 23,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 29,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 29,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 29,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 29,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build Haskell Dependencies Seperately\n# This allows creating a layer containing all the libraries required to build\n# cached between source changes.\nFROM    haskell:8.6.3 as depends\nWORKDIR /app\nCOPY    stack.yaml package.yaml /app/\nRUN     stack build --resolver lts-13.4 --only-dependencies -j 2\n\n\n# Build Haskell Binary Itself\n# This allows creating a layer containing just the binary required to run the\n# application, which won't change if the src doesn't change.\nFROM    haskell:8.6.3 as compile\nRUN     mkdir /app\nWORKDIR /app\nCOPY    src/ /app/src\nCOPY    stack.yaml package.yaml /app/\nCOPY    --from=depends /app/.stack-work /app/.stack-work\nCOPY    --from=depends /root/.stack /root/.stack\nRUN     stack build --resolver lts-13.4\nRUN     mv $(stack path --local-install-root)/bin/pixel .\n\n\n# Build Web Frontend\nFROM    node:slim as web\nRUN apt-get -y update && apt-get -y --no-install-recommends install file unzip curl && rm -rf /var/lib/apt/lists/*;\nWORKDIR /app\nCOPY    web/ /app/web\nRUN cd /app/web && yarn install && yarn build && yarn cache clean;\n\n\n# Build Final Image\nFROM    debian:latest\nRUN apt-get -y update && apt-get -y --no-install-recommends install libgmp-dev && rm -rf /var/lib/apt/lists/*;\nRUN     mkdir -p /app\nWORKDIR /app\nCOPY    --from=compile /app/pixel .\nCOPY    --from=web /app/web/build /app/web\nCMD     [\"/app/pixel\", \"run\"]\n"
}