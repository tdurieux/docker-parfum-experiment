{
  "startTime": 1674235023789,
  "endTime": 1674235024301,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 97,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 43,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 43,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 43,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nMAINTAINER Ming Chen\n\nENV ANDROID_HOME=\"/opt/android-sdk\" \\\n    ANDROID_NDK=\"/opt/android-ndk\" \\\n    FLUTTER_HOME=\"/opt/flutter\" \\\n    JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/\n\n# Get the latest version from https://developer.android.com/studio/index.html\nENV ANDROID_SDK_TOOLS_VERSION=\"4333796\"\n\n# Get the latest version from https://developer.android.com/ndk/downloads/index.html\nENV ANDROID_NDK_VERSION=\"19\"\n\n# nodejs version\nENV NODE_VERSION=\"10.x\"\n\n# Set locale\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\n\nRUN apt-get clean && apt-get update -qq && apt-get install --no-install-recommends -qq -y apt-utils locales && locale-gen $LANG && rm -rf /var/lib/apt/lists/*;\n\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    TERM=dumb \\\n    DEBIAN_FRONTEND=noninteractive\n\n# Variables must be references after they are created\nENV ANDROID_SDK_HOME=\"$ANDROID_HOME\"\nENV ANDROID_NDK_HOME=\"$ANDROID_NDK/android-ndk-r$ANDROID_NDK_VERSION\"\n\nENV PATH=\"$PATH:$ANDROID_SDK_HOME/emulator:$ANDROID_SDK_HOME/tools/bin:$ANDROID_SDK_HOME/tools:$ANDROID_SDK_HOME/platform-tools:$ANDROID_NDK:$FLUTTER_HOME/bin:$FLUTTER_HOME/bin/cache/dart-sdk/bin\"\n\nCOPY README.md /README.md\n\nWORKDIR /tmp\n\n# Installing packages\nRUN apt-get update -qq > /dev/null && \\\n    apt-get install -y --no-install-recommends -qq locales > /dev/null && \\\n    locale-gen \"$LANG\" > /dev/null && \\\n    apt-get install -y -qq --no-install-recommends \\\n        build-essential \\\n        autoconf \\\n        curl \\\n        git \\\n        gpg-agent \\\n        lib32stdc++6 \\\n        lib32z1 \\\n        lib32z1-dev \\\n        lib32ncurses5 \\\n        libc6-dev \\\n        libgmp-dev \\\n        libmpc-dev \\\n        libmpfr-dev \\\n        libxslt-dev \\\n        libxml2-dev \\\n        m4 \\\n        ncurses-dev \\\n        ocaml \\\n        openjdk-8-jdk \\\n        openssh-client \\\n        pkg-config \\\n        software-properties-common \\\n        ruby-full \\\n        software-properties-common \\\n        unzip \\\n        wget \\\n        zip \\\n        zlib1g-dev > /dev/null && \\\n    echo \"Installing nodejs, npm, cordova, ionic, react-native\" && \\\n    curl -f -sL -k https://deb.nodesource.com/setup_${NODE_VERSION} \\\n        | bash - > /dev/null && \\\n    apt-get install -y --no-install-recommends -qq nodejs > /dev/null && \\\n    apt-get clean > /dev/null && \\\n    rm -rf /var/lib/apt/lists/ && \\\n    npm install --quiet -g npm > /dev/null && \\\n    npm install --quiet -g \\\n        bower cordova eslint gulp \\\n        ionic jshint karma-cli mocha \\\n        node-gyp npm-check-updates \\\n        react-native-cli > /dev/null && \\\n    npm cache clean --force > /dev/null && \\\n    rm -rf /tmp/* /var/tmp/* && \\\n    echo \"Installing fastlane\" && \\\n    gem install fastlane --quiet --no-document > /dev/null && rm -rf /var/lib/apt/lists/*;\n\n# Install Android SDK\nRUN echo \"Installing sdk tools ${ANDROID_SDK_TOOLS_VERSION}\" && \\\n    wget --quiet --output-document=sdk-tools.zip \\\n        \"https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS_VERSION}.zip\" && \\\n    mkdir --parents \"$ANDROID_HOME\" && \\\n    unzip -q sdk-tools.zip -d \"$ANDROID_HOME\" && \\\n    rm --force sdk-tools.zip && \\\n    echo \"Installing ndk r${ANDROID_NDK_VERSION}\" && \\\n    wget --quiet --output-document=android-ndk.zip \\\n    \"https://dl.google.com/android/repository/android-ndk-r${ANDROID_NDK_VERSION}-linux-x86_64.zip\" && \\\n    mkdir --parents \"$ANDROID_NDK_HOME\" && \\\n    unzip -q android-ndk.zip -d \"$ANDROID_NDK\" && \\\n    rm --force android-ndk.zip && \\\n# Install SDKs\n# Please keep these in descending order!\n# The `yes` is for accepting all non-standard tool licenses.\n    mkdir --parents \"$ANDROID_HOME/.android/\" && \\\n    echo '### User Sources for Android SDK Manager' > \\\n        \"$ANDROID_HOME/.android/repositories.cfg\" && \\\n    yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager --licenses > /dev/null && \\\n    echo \"Installing platforms\" && \\\n    yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \\\n        \"platforms;android-28\" \\\n        \"platforms;android-27\" \\\n        \"platforms;android-26\" \\\n        \"platforms;android-25\" \\\n        \"platforms;android-24\" \\\n        \"platforms;android-23\" \\\n        \"platforms;android-22\" \\\n        \"platforms;android-21\" \\\n        \"platforms;android-20\" \\\n        \"platforms;android-19\" \\\n        \"platforms;android-18\" \\\n        \"platforms;android-17\" \\\n        \"platforms;android-16\" > /dev/null && \\\n    echo \"Installing platform tools \" && \\\n    yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \\\n        \"platform-tools\" > /dev/null && \\\n    echo \"Installing build tools \" && \\\n    yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \\\n        \"build-tools;28.0.3\" \"build-tools;28.0.2\" \\\n        \"build-tools;27.0.3\" \"build-tools;27.0.2\" \"build-tools;27.0.1\" \\\n        \"build-tools;26.0.2\" \"build-tools;26.0.1\" \"build-tools;26.0.0\" \\\n        \"build-tools;25.0.3\" \"build-tools;25.0.2\" \\\n        \"build-tools;25.0.1\" \"build-tools;25.0.0\" \\\n        \"build-tools;24.0.3\" \"build-tools;24.0.2\" \\\n        \"build-tools;24.0.1\" \"build-tools;24.0.0\" > /dev/null && \\\n    echo \"Installing build tools \" && \\\n    yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \\\n        \"build-tools;23.0.3\" \"build-tools;23.0.2\" \"build-tools;23.0.1\" \\\n        \"build-tools;22.0.1\" \\\n        \"build-tools;21.1.2\" \\\n        \"build-tools;20.0.0\" \\\n        \"build-tools;19.1.0\" \\\n        \"build-tools;18.1.1\" \\\n        \"build-tools;17.0.0\" > /dev/null && \\\n    echo \"Installing extras \" && \\\n    yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \\\n        \"extras;android;m2repository\" \\\n        \"extras;google;m2repository\" > /dev/null && \\\n    echo \"Installing play services \" && \\\n    yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \\\n        \"extras;google;google_play_services\" \\\n        \"extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2\" \\\n        \"extras;m2repository;com;android;support;constraint;constraint-layout;1.0.1\" > /dev/null && \\\n    echo \"Installing Google APIs\" && \\\n    yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \\\n        \"add-ons;addon-google_apis-google-24\" \\\n        \"add-ons;addon-google_apis-google-23\" \\\n        \"add-ons;addon-google_apis-google-22\" \\\n        \"add-ons;addon-google_apis-google-21\" \\\n        \"add-ons;addon-google_apis-google-19\" \\\n        \"add-ons;addon-google_apis-google-18\" \\\n        \"add-ons;addon-google_apis-google-17\" \\\n        \"add-ons;addon-google_apis-google-16\" > /dev/null && \\\n    echo \"Installing emulator \" && \\\n    yes | \"$ANDROID_HOME\"/tools/bin/sdkmanager \"emulator\" > /dev/null && \\\n    echo \"Installing kotlin\" && \\\n    wget --quiet -O sdk.install.sh \"https://get.sdkman.io\" && \\\n    bash -c \"bash ./sdk.install.sh > /dev/null && source ~/.sdkman/bin/sdkman-init.sh && sdk install kotlin\" && \\\n    rm -f sdk.install.sh && \\\n    # Install Flutter sdk\n    cd /opt && \\\n    wget --quiet https://storage.googleapis.com/flutter_infra/releases/stable/linux/flutter_linux_v1.5.4-hotfix.2-stable.tar.xz -O flutter.tar.xz && \\\n    tar xf flutter.tar.xz && \\\n    rm -f flutter.tar.xz && \\\n    flutter config --no-analytics\n\n\n# Copy sdk license agreement files.\nRUN mkdir -p $ANDROID_HOME/licenses\nCOPY sdk/licenses/* $ANDROID_HOME/licenses/\n\n# Create some jenkins required directory to allow this image run with Jenkins\nRUN mkdir -p /var/lib/jenkins/workspace\nRUN mkdir -p /home/jenkins\nRUN chmod 777 /home/jenkins\nRUN chmod 777 /var/lib/jenkins/workspace\nRUN chmod 777 $ANDROID_HOME/.android\n"
}