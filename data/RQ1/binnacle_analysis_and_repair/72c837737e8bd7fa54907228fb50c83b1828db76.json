{
  "startTime": 1674249529043,
  "endTime": 1674249529115,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 5,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM heroku/cedar:14\nMAINTAINER Gabriel Berke-Williams <gabe@thoughtbot.com>\n\nENV LANG en_US.UTF-8\n# Stack stores binaries in /root/.local/bin\nENV PATH /root/.local/bin:$PATH\n\n# Heroku assumes we'll put everything in /app/user\nRUN mkdir -p /app/user\nWORKDIR /app/user\n\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 575159689BEFB442 \\\n  && echo 'deb http://download.fpcomplete.com/ubuntu trusty main' > \\\n    /etc/apt/sources.list.d/fpco.list \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y stack \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Preinstall GHC using Stack\nENV STACK_LTS_VERSION 6.3\nRUN stack setup --resolver lts-$STACK_LTS_VERSION\n\n# Install application framework in a separate layer for caching\nONBUILD COPY ./stack-bootstrap .\nONBUILD RUN stack install \\\n  --resolver lts-$STACK_LTS_VERSION \\\n  $(cat stack-bootstrap)\n\n# Copy over configuration for building the app\nONBUILD COPY stack.yaml .\nONBUILD COPY *.cabal .\n\n# Build dependencies so that if we change something later we'll have a Docker\n# cache of up to this point.\nONBUILD RUN stack build --dependencies-only\n\nONBUILD COPY . /app/user\n\n# Run pre-build script if it exists (compile CSS, etc)\nONBUILD RUN if [ -x bin/pre-build ]; then bin/pre-build; fi\n\n# Build and copy the executables into the app\nONBUILD RUN stack --local-bin-path=. install\n\n# Clean up\nONBUILD RUN rm -rf /app/user/.stack-work\n"
}