{
  "startTime": 1674243476919,
  "endTime": 1674243477125,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 42,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 42,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:7.5-devel\n\nMAINTAINER berlius <berlius52@yahoo.com>\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    libglib2.0-dev \\\n    libgl1-mesa-dev \\\n    libglu1-mesa-dev \\\n    libpng12-dev \\\n    git \\\n    wget \\\n    freeglut3-dev \\\n    libplib-dev \\\n    libopenal-dev \\\n    libpng12-dev \\\n    zlib1g-dev \\\n    libogg-dev \\\n    libvorbis-dev \\\n    g++ \\\n    libalut-dev \\\n    libxi-dev \\\n    libxmu-dev \\\n    libxrandr-dev \\\n    make \\\n    patch \\\n    xautomation \\\n    python-numpy \\\n    python-scipy \\\n    python-dev \\\n    python-nose \\\n    python-h5py \\\n    libopenblas-dev \\\n    cmake \\\n    zlib1g-dev \\\n    libjpeg-dev \\\n    xvfb \\\n    libav-tools \\\n    xorg-dev \\\n    python-opengl \\\n    libboost-all-dev \\\n    libsdl2-dev \\\n    swig \\\n    lxterminal && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR \"/root\"\n\nRUN wget https://download1438.mediafire.com/iosqat4uz46g/phdfnrsf8n982x4/cudnn-7.5-linux-x64-v5.1.tgz\n\nRUN tar zxvf cudnn-7.5-linux-x64-v5.1.tgz && rm cudnn-7.5-linux-x64-v5.1.tgz\n\nRUN cp -v /root/cuda/include/cudnn.h /usr/local/cuda/include\nRUN cp -v /root/cuda/lib64/lib* /usr/local/cuda/lib64\nRUN chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*\n\nENV TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0rc0-cp27-none-linux_x86_64.whl\n\nRUN apt-get install --no-install-recommends -y python-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir --upgrade $TF_BINARY_URL\nRUN pip install --no-cache-dir Theano Keras\n\n\nRUN git clone https://github.com/openai/gym.git && \\\n    cd gym && \\\n    pip install --no-cache-dir -e . && \\\n    cd ..\n\nRUN git clone https://github.com/ugo-nama-kun/gym_torcs && \\\n    cd gym_torcs/vtorcs-RL-color && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install && \\\n    make datainstall && \\\n    cd /root\n\nCOPY install.sh /root\nRUN chmod +x /root/install.sh\n\nWORKDIR \"/root/sharedfolder\"\nCMD [\"/bin/bash\"]\n\n\n\n\n"
}