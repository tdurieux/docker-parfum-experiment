{
  "startTime": 1674240555617,
  "endTime": 1674240556124,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM jenkinsci/jenkins:2.150.1\nUSER root\n\n# If apt-get update fails and you are behind a proxy,\n# you can try uncommenting the next 2 lines to fix it.\n#RUN mkdir -p /etc/apt/apt.conf.d\n#ADD ./99fixbadproxy /etc/apt/apt.conf.d/99fixbadproxy\n\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install \\\n      apt-transport-https \\\n      ca-certificates \\\n      curl \\\n      gnupg2 \\\n      software-properties-common && \\\n    curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg | apt-key add - && \\\n    add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo ${ID}) $(lsb_release -cs) stable\" && \\\n    apt-get -y update && \\\n    apt-get -y --no-install-recommends install docker-ce && \\\n    gpasswd -a jenkins staff && \\\n    gpasswd -a jenkins users && \\\n    gpasswd -a jenkins docker && rm -rf /var/lib/apt/lists/*;\n\nUSER jenkins\n\n# Get from a running Jenkins: http://127.0.0.1:8080/script\n# Jenkins.instance.pluginManager.plugins.each{plugin -> println (\"${plugin.getShortName()}:${plugin.getVersion()}\")}\n# We add `gogs-webhook` and `mask-passwords` to the defaults\nRUN /usr/local/bin/install-plugins.sh \\\n      ace-editor:1.1 \\\n      ant:1.9 \\\n      antisamy-markup-formatter:1.5 \\\n      apache-httpcomponents-client-4-api:4.5.5-3.0 \\\n      authentication-tokens:1.3 \\\n      bouncycastle-api:2.17 \\\n      branch-api:2.1.2 \\\n      build-timeout:1.19 \\\n      cloudbees-folder:6.7 \\\n      command-launcher:1.2 \\\n      credentials-binding:1.17 \\\n      credentials:2.1.18 \\\n      display-url-api:2.3.0 \\\n      docker-commons:1.13 \\\n      docker-workflow:1.17 \\\n      durable-task:1.28 \\\n      email-ext:2.63 \\\n      git-client:2.7.4 \\\n      git-server:1.7 \\\n      git:3.9.1 \\\n      github-api:1.95 \\\n      github-branch-source:2.4.1 \\\n      github:1.29.3 \\\n      gogs-webhook:1.0.14 \\\n      gradle:1.29 \\\n      handlebars:1.1.1 \\\n      jackson2-api:2.9.7.1 \\\n      jdk-tool:1.2 \\\n      jquery-detached:1.2.1 \\\n      jsch:0.1.54.2 \\\n      junit:1.26.1 \\\n      ldap:1.20 \\\n      lockable-resources:2.3 \\\n      mailer:1.22 \\\n      mapdb-api:1.0.9.0 \\\n      mask-passwords:2.12.0 \\\n      matrix-auth:2.3 \\\n      matrix-project:1.13 \\\n      momentjs:1.1.1 \\\n      pam-auth:1.4 \\\n      pipeline-build-step:2.7 \\\n      pipeline-github-lib:1.0 \\\n      pipeline-graph-analysis:1.9 \\\n      pipeline-input-step:2.8 \\\n      pipeline-milestone-step:1.3.1 \\\n      pipeline-model-api:1.3.3 \\\n      pipeline-model-declarative-agent:1.1.1 \\\n      pipeline-model-definition:1.3.3 \\\n      pipeline-model-extensions:1.3.3 \\\n      pipeline-rest-api:2.10 \\\n      pipeline-stage-step:2.3 \\\n      pipeline-stage-tags-metadata:1.3.3 \\\n      pipeline-stage-view:2.10 \\\n      plain-credentials:1.4 \\\n      resource-disposer:0.12 \\\n      scm-api:2.3.0 \\\n      script-security:1.49 \\\n      ssh-credentials:1.14 \\\n      ssh-slaves:1.29.1 \\\n      structs:1.17 \\\n      subversion:2.12.1 \\\n      timestamper:1.8.10 \\\n      token-macro:2.5 \\\n      trilead-api:1.0.1 \\\n      workflow-aggregator:2.6 \\\n      workflow-api:2.33 \\\n      workflow-basic-steps:2.13 \\\n      workflow-cps-global-lib:2.12 \\\n      workflow-cps:2.61 \\\n      workflow-durable-task-step:2.26 \\\n      workflow-job:2.30 \\\n      workflow-multibranch:2.20 \\\n      workflow-scm-step:2.7 \\\n      workflow-step-api:2.17 \\\n      workflow-support:2.23 \\\n      ws-cleanup:0.36\n\nENV no_proxy gogs\n\n# We really want this to run as the Jenkins user\n# but for class it is challenging to get the docker socket\n# permissions correct for every student, so we use root instead.\nUSER root\n"
}