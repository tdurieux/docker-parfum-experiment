{
  "startTime": 1674246147506,
  "endTime": 1674246147791,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 51,
        "columnStart": 22,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Modified from h\\ttps://github.com/saiprashanths/dl-docker\nFROM nvidia/cuda:7.5-cudnn5-devel\n\nMAINTAINER Brian Lee Yung Rowe <rowe@zatonovo.com>\n\nARG THEANO_VERSION=rel-0.8.2\nARG KERAS_VERSION=1.1.0\nARG TORCH_VERSION=latest\n\n# Install some dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl wget git \\\n    nano vim \\\n    bc \\\n    build-essential \\\n    pkg-config software-properties-common \\\n    cmake g++ gfortran \\\n    libopenblas-dev liblapack-dev \\\n    libffi-dev libfreetype6-dev libhdf5-dev liblcms2-dev \\\n    libjpeg-dev libopenjpeg2 libpng12-dev libtiff5-dev \\\n    libssl-dev \\\n    libwebp-dev libzmq3-dev \\\n    python-dev \\\n    zlib1g-dev unzip \\\n    && \\\n  apt-get clean && \\\n  apt-get autoremove && \\\n  rm -rf /var/lib/apt/lists/* && \\\n# Link BLAS library to use OpenBLAS using the alternatives mechanism (https://www.scipy.org/scipylib/building/linux.html#debian-ubuntu)\n  update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n\n# Install latest version of pip\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n  python get-pip.py && \\\n  rm get-pip.py\n\n\n# Add SNI support to Python\nRUN pip --no-cache-dir install pyopenssl ndg-httpsclient pyasn1\n\n# Install useful Python packages using apt-get to avoid version incompatibilities with Tensorflow binary\n# especially numpy, scipy, skimage and sklearn (see https://github.com/tensorflow/tensorflow/issues/2034)\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python-numpy \\\n    python-scipy \\\n    python-nose \\\n    python-h5py \\\n    python-skimage \\\n    python-matplotlib \\\n    python-pandas \\\n    python-sklearn \\\n    python-sympy \\\n    && \\\n  apt-get clean && \\\n  apt-get autoremove && \\\n  rm -rf /var/lib/apt/lists/*\n\n# Install other useful Python packages using pip\nRUN pip --no-cache-dir install --upgrade ipython && \\\n  pip --no-cache-dir install \\\n    Cython \\\n    ipykernel \\\n    jupyter \\\n    path.py \\\n    Pillow \\\n    pygments \\\n    six \\\n    sphinx \\\n    wheel \\\n    zmq \\\n    && \\\n  python -m ipykernel.kernelspec\n\n\n# Install Theano and set up Theano config (.theanorc) for CUDA and OpenBLAS\nRUN pip --no-cache-dir install git+git://github.com/Theano/Theano.git@${THEANO_VERSION} && \\\n  \\\n  echo \"[global]\\ndevice=gpu\\nfloatX=float32\\noptimizer_including=cudnn\\nmode=FAST_RUN \\\n    \\n[lib]\\ncnmem=0.95 \\\n    \\n[nvcc]\\nfastmath=True \\\n    \\n[blas]\\nldflag = -L/usr/lib/openblas-base -lopenblas \\\n    \\n[DebugMode]\\ncheck_finite=1\" \\\n  > /root/.theanorc\n\n\n# Install Keras\nRUN pip --no-cache-dir install git+git://github.com/fchollet/keras.git@${KERAS_VERSION}\n\n\n# Install Torch\nRUN git clone https://github.com/torch/distro.git /root/torch --recursive && \\\n  cd /root/torch && \\\n  bash install-deps && \\\n  yes no | ./install.sh\n\n# Export the LUA evironment variables manually\nENV LUA_PATH='/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua' \\\n  LUA_CPATH='/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so' \\\n  PATH=/root/torch/install/bin:$PATH \\\n  LD_LIBRARY_PATH=/root/torch/install/lib:$LD_LIBRARY_PATH \\\n  DYLD_LIBRARY_PATH=/root/torch/install/lib:$DYLD_LIBRARY_PATH\nENV LUA_CPATH='/root/torch/install/lib/?.so;'$LUA_CPATH\n\n# Install the latest versions of nn, cutorch, cunn, cuDNN bindings and iTorch\nRUN luarocks install nn && \\\n  luarocks install cutorch && \\\n  luarocks install cunn && \\\n  luarocks install dp && \\\n  luarocks install mnist && \\\n  luarocks install qtlua && \\\n  \\\n  cd /root && git clone https://github.com/soumith/cudnn.torch.git && cd cudnn.torch && \\\n  git checkout R4 && \\\n  luarocks make && \\\n  \\\n  cd /root && git clone https://github.com/facebook/iTorch.git && \\\n  cd iTorch && \\\n  luarocks make\nRUN wget https://raw.githubusercontent.com/rtsisyk/luafun/master/fun-scm-1.rockspec && luarocks install fun-scm-1.rockspec\n\n\n\n# Set up notebook config\nCOPY jupyter_notebook_config.py /root/.jupyter/\n\n# Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062\nCOPY run_jupyter.sh /root/\n\n# Use theano backend\nCOPY keras.json /root/.keras/\n\n# Expose Ports for IPython (8888)\nEXPOSE 8888\n\nWORKDIR \"/code\"\nCMD [\"/bin/bash\"]\n"
}