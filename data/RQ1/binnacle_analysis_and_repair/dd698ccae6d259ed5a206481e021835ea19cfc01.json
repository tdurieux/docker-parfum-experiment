{
  "startTime": 1674241080306,
  "endTime": 1674241080670,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 2,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 20,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 267
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 267
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 20,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 267
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 291
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN dpkg-divert --local --rename --add /sbin/initctl\nRUN ln -s /bin/true /sbin/initctl\n\nRUN apt-get update; apt-get -y --no-install-recommends install lsb-release software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# add sources\nRUN add-apt-repository -y ppa:git-core/ppa;\\\n  echo deb http://us.archive.ubuntu.com/ubuntu/ $(lsb_release -cs) universe multiverse >> /etc/apt/sources.list;\\\n  echo deb http://us.archive.ubuntu.com/ubuntu/ $(lsb_release -cs)-updates main restricted universe >> /etc/apt/sources.list;\\\n  echo deb http://security.ubuntu.com/ubuntu $(lsb_release -cs)-security main restricted universe >> /etc/apt/sources.list\n\n# run upgrades\nRUN  echo udev hold | dpkg --set-selections;\\\n  echo initscripts hold | dpkg --set-selections;\\\n  echo upstart hold | dpkg --set-selections;\\\n  apt-get update;\\\n  apt-get -y upgrade\n\n# install dependencies\nRUN apt-get install --no-install-recommends -y build-essential zlib1g-dev libyaml-dev libssl-dev libgdbm-dev libreadline-dev libncurses5-dev libffi-dev curl git-core openssh-server redis-server checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libicu-dev logrotate libpq-dev sudo git && rm -rf /var/lib/apt/lists/*;\n\n# install Ruby\nRUN mkdir /tmp/ruby; \\\n  cd /tmp/ruby; \\\n  curl -f ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p247.tar.gz | tar xz; \\\n  cd ruby-2.0.0-p247; \\\n  chmod +x configure; \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n  make; \\\n  make install; \\\n  gem install bundler --no-ri --no-rdoc\n\n# create git user\nRUN adduser --disabled-login --gecos 'GitLab' git\n\n# install gitlab shell\nRUN cd /home/git;\\\n  su git -c \"git clone https://github.com/gitlabhq/gitlab-shell.git\";\\\n  cd gitlab-shell;\\\n  su git -c \"git checkout v1.7.6\";\\\n  su git -c \"cp config.yml.example config.yml\";\\\n  sed -i -e 's/localhost/127.0.0.1:8080/g' config.yml;\\\n  su git -c \"./bin/install\"\n\n# install Gitlab\nRUN cd /home/git;\\\n  su git -c \"git clone https://github.com/gitlabhq/gitlabhq.git gitlab\";\\\n  cd /home/git/gitlab;\\\n  su git -c \"git checkout 6-2-stable\"\n\n# misc configuration stuff\nRUN cd /home/git/gitlab;\\\n  chown -R git tmp/;\\\n  chown -R git log/;\\\n  chmod -R u+rwX log/;\\\n  chmod -R u+rwX tmp/;\\\n  su git -c \"mkdir /home/git/gitlab-satellites\";\\\n  su git -c \"mkdir tmp/pids/\";\\\n  su git -c \"mkdir tmp/sockets/\";\\\n  chmod -R u+rwX tmp/pids/;\\\n  chmod -R u+rwX tmp/sockets/;\\\n  su git -c \"mkdir public/uploads\";\\\n  chmod -R u+rwX public/uploads;\\\n  su git -c \"cp config/unicorn.rb.example config/unicorn.rb\";\\\n  su git -c \"cp config/initializers/rack_attack.rb.example config/initializers/rack_attack.rb\";\\\n  su git -c 'sed -ie \"s/# config.middleware.use Rack::Attack/config.middleware.use Rack::Attack/\" config/application.rb';\\\n  su git -c \"git config --global user.name 'GitLab'\";\\\n  su git -c \"git config --global user.email 'gitlab@localhost'\";\\\n  su git -c \"git config --global core.autocrlf input\"\n\nRUN cd /home/git/gitlab;\\\n  gem install charlock_holmes --version '0.6.9.4';\\\n  su git -c \"bundle install --deployment --without development test mysql aws\"\n\n# install init scripts\nRUN cd /home/git/gitlab;\\\n  cp lib/support/init.d/gitlab /etc/init.d/gitlab;\\\n  chmod +x /etc/init.d/gitlab;\\\n  update-rc.d gitlab defaults 21\n\nRUN cd /home/git/gitlab;\\\n  cp lib/support/logrotate/gitlab /etc/logrotate.d/gitlab\n\n# postgresql\nRUN apt-get install --no-install-recommends -y postgresql postgresql-client && rm -rf /var/lib/apt/lists/*;\nRUN ln -s /usr/lib/postgresql/9.1/bin/postgres /usr/local/bin/\n\n# nginx\nRUN apt-get install --no-install-recommends -y nginx && rm -rf /var/lib/apt/lists/*;\n\n# make config files available to container\nADD . /srv/gitlab\n\n# make scripts executable\nRUN chmod +x /srv/gitlab/start.sh; chmod +x /srv/gitlab/firstrun.sh\n\n# more setup is done in firstrun script\nRUN /srv/gitlab/firstrun.sh\n\n# expose http, https and ssh\nEXPOSE 80\nEXPOSE 443\nEXPOSE 22\n\n# when docker is invoked with 'docker run', start this command by default\nCMD [\"/srv/gitlab/start.sh\"]\n"
}