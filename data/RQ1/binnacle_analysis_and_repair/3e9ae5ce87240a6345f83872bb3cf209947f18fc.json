{
  "startTime": 1674248644927,
  "endTime": 1674248645023,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build Chainlink with SGX\nFROM smartcontract/builder:1.0.20 as builder\n\n# Have to reintroduce ENV vars from builder image\nENV PATH /root/.cargo/bin:/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/sgxsdk/bin:/opt/sgxsdk/bin/x64\nENV LD_LIBRARY_PATH /opt/sgxsdk/sdk_libs\nENV SGX_SDK /opt/sgxsdk\n\nARG COMMIT_SHA\nARG ENVIRONMENT\nENV SGX_ENABLED yes\nARG SGX_SIMULATION\n\nWORKDIR /go/src/github.com/smartcontractkit/chainlink\nADD . ./\nRUN make install\n\n# Final layer: ubuntu with aesm and chainlink binaries (executable + enclave)\nFROM ubuntu:18.04\n\n# Install AESM\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y \\\n    ca-certificates \\\n    curl \\\n    kmod \\\n    libcurl4-openssl-dev \\\n    libprotobuf-c0-dev \\\n    libprotobuf-dev \\\n    libssl-dev \\\n    libssl1.0.0 \\\n    libxml2-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN /usr/sbin/useradd aesmd 2>/dev/null\n\nRUN mkdir -p /var/opt/aesmd && chown aesmd.aesmd /var/opt/aesmd\nRUN mkdir -p /var/run/aesmd && chown aesmd.aesmd /var/run/aesmd\n\nCOPY --from=builder /opt/sgxsdk/lib64/libsgx*.so /usr/lib/\nCOPY --from=builder /opt/intel/ /opt/intel/\n\n# Copy chainlink enclave+stub from build image\nARG ENVIRONMENT\nCOPY --from=builder /go/bin/chainlink /usr/local/bin/\nCOPY --from=builder \\\n  /go/src/github.com/smartcontractkit/chainlink/sgx/target/$ENVIRONMENT/libadapters.so \\\n  /usr/lib/\nCOPY --from=builder \\\n  /go/src/github.com/smartcontractkit/chainlink/sgx/target/$ENVIRONMENT/enclave.signed.so \\\n  /root/\n\n# Launch chainlink via a small script that watches AESM + Chainlink\nARG SGX_SIMULATION\nENV SGX_SIMULATION $SGX_SIMULATION\nWORKDIR /root\nCOPY ./chainlink-launcher-sgx.sh /root\nRUN chmod +x ./chainlink-launcher-sgx.sh\n\nEXPOSE 6688\nENTRYPOINT [\"./chainlink-launcher-sgx.sh\"]\nCMD [\"local\", \"node\"]\n"
}