{
  "startTime": 1674240108415,
  "endTime": 1674240109021,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 3,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 3,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedDockerfile": "#\n# Build this image with the command\n#   docker build -f docker/build -t dyne/clojure:latest\n#\n# Then run with the command\n#   docker run -p 3000:3000 -it dyne/clojure:latest\n#\n\nFROM dyne/devuan:beowulf\nENV debian buster\n\nLABEL maintainer=\"Denis Roio <jaromil@dyne.org>\" \\\n\t  homepage=\"https://github.com/decodeproject/decode-os\"\n\nENV LC_ALL C\nENV DEBIAN_FRONTEND noninteractive\n\n# CLI arguments\nARG foreground=true\n\nENV DYNESDK=https://sdk.dyne.org:4443/job \\\n\tNETDATA_VERSION=1.10.0 \\\n\tSTEM_VERSION=1.6.0 \\\n\tSTEM_GIT=https://git.torproject.org/stem.git\n\nENV BUILD_DEPS=\"build-essential zlib1g-dev gcc make autoconf automake pkg-config uuid-dev golang\"\nWORKDIR /root\n\n# # debugging travis (finds gpg in local builds)\nRUN apt-get update \\\n&& apt-get --yes --force-yes install gnupg1 ca-certificates --no-install-recommends \\\n&& echo \"ENVIRONMENT VARIABLES:\" \\\n&& export && rm -rf /var/lib/apt/lists/*;\n\n# Tor repository\nADD https://raw.githubusercontent.com/DECODEproject/decode-os/master/docker-sdk/tor.pub.asc tor.pub.asc\nRUN apt-key add tor.pub.asc\nRUN echo \"deb https://deb.torproject.org/torproject.org $debian main\" \\\n\t>> /etc/apt/sources.list\n\n# Nodejs repository\nADD https://deb.nodesource.com/gpgkey/nodesource.gpg.key nodesource.gpg.key\nRUN apt-key add nodesource.gpg.key\nRUN\techo \"deb https://deb.nodesource.com/node_8.x $debian main\" \\\n\t>> /etc/apt/sources.list\n\n# && apt-get -yy update && apt-get -yy upgrade \\\n\nRUN mkdir -p /usr/share/man/man1/ \\\n\t&& apt-get update \\\n\t&& apt-get --yes --no-install-recommends --force-yes install tor deb.torproject.org-keyring \\\n\t\t\t\t\t\t\t\t\t\t\t\t\tsupervisor daemontools \\\n\t\t\t\t\t\t\t\t\t\t\t\t\ttmux curl redis-tools redis-server net-tools \\\n\t\t\t\t\t\t\tpython3 python3-stem nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get --yes --no-install-recommends --force-yes install $BUILD_DEPS && rm -rf /var/lib/apt/lists/*;\n\n# Latest Zenroom built static for x86-amd64 taken from our own builds at Dyne.org\nADD $DYNESDK/zenroom-static-amd64/lastSuccessfulBuild/artifact/src/zenroom-static /usr/bin/zenroom\nRUN chmod +x /usr/bin/zenroom\n\n# Compile some software from the source\nWORKDIR /usr/src\n\n# Stem built from source\n# RUN git clone $STEM_GIT && cd stem && git checkout -b $STEM_VERSION $STEM_VERSION && python3 setup.py install\n\n# Configure Tor Controlport auth\nENV\tTORDAM_GIT=github.com/decodeproject/tor-dam\nRUN torpass=`echo \"print(RNG.new():octet(16):base58())\" | zenroom` \\\n\t&& go get -v -u $TORDAM_GIT/... && cd ~/go/src/github.com/decodeproject/tor-dam \\\n\t&& sed -i python/damhs.py -e \"s/topkek/$torpass/\" \\\n\t&& sed -i python/damauth.py -e \"s/topkek/$torpass/\" \\\n\t&& make install && make -C contrib install-init \\\n\t&& torpasshash=`HOME=/var/lib/tor setuidgid debian-tor tor --hash-password \"$torpass\"` \\\n\t&& sed -e 's/User tor/User debian-tor/' < contrib/torrc > /etc/tor/torrc \\\n\t&& sed -e 's/HashedControlPassword .*//' -i /etc/tor/torrc \\\n\t&& echo \"HashedControlPassword $torpasshash\" >> /etc/tor/torrc\nRUN chmod -R go-rwx /etc/tor && chown -R debian-tor /etc/tor \\\n\t&& rm -rf /var/lib/tor/data && chown -R debian-tor /var/lib/tor \\\n\t&& mkdir -p /var/run/tor && chown -R debian-tor /var/run/tor\nRUN cp /root/go/bin/dam* /usr/bin\n\n# fix npm - not the latest version installed by apt-get\nRUN npm install -g npm && npm cache clean --force;\nRUN npm install -g redis-commander && npm cache clean --force;\nENV REDIS_HOSTS=localhost\n\n# Netdata\nADD https://github.com/firehol/netdata/releases/download/v$NETDATA_VERSION/netdata-${NETDATA_VERSION}.tar.gz netdata.tgz\nRUN tar xf netdata.tgz && cd netdata-$NETDATA_VERSION \\\n\t&& ./netdata-installer.sh --dont-wait --dont-start-it \\\n\t&& cd - && rm -rf netdata.tgz netdata-$NETDATA_VERSION\n\n# Openresty\nADD https://openresty.org/package/pubkey.gpg openresty.gpg\nRUN apt-key add openresty.gpg\nRUN echo \"deb http://openresty.org/package/debian stretch openresty\" \\\n>> /etc/apt/sources.list\nRUN apt-get update \\\n&& apt-get --yes --force-yes install --no-install-recommends openresty && rm -rf /var/lib/apt/lists/*;\n\n# cleanup\nRUN apt-get --yes --force-yes purge $BUILD_DEPS \\\n&& apt-get --yes --force-yes --purge autoremove && apt-get clean \\\n&& npm cache clean --force && npm uninstall -g npm\n\nADD https://raw.githubusercontent.com/DECODEproject/decode-os/master/docker-sdk/supervisord.conf \\\n\t/etc/supervisor/supervisord.conf\nRUN sed -i \"s/nodaemon=true/nodaemon=$foreground/\" /etc/supervisor/supervisord.conf\n\nRUN groupadd -g 6000 app && useradd -r -u 6000 -g app -d /home/app app\nWORKDIR /home/app\nRUN chown -R app:app /home/app\n\n# Tor's socks5\nEXPOSE 9150\n# supervisor\nEXPOSE 9001 9001\n# redis-commander\nEXPOSE 8081 8081\n# netdata\nEXPOSE 19999 19999\n\nCMD bash -c '/etc/init.d/supervisor start'\n"
}