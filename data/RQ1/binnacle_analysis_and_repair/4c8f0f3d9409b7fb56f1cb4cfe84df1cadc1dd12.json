{
  "startTime": 1674240770323,
  "endTime": 1674240770500,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build haxelib server as a Docker container.\n# Note that it doesn't contain a MySQL database,\n# which need to be launched seperately. See test/docker-compose.yml on how to launch one.\n\nFROM ubuntu:bionic\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y software-properties-common \\\n\t&& add-apt-repository ppa:haxe/releases -y \\\n\t&& apt-get update && apt-get upgrade -y \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n\t\tapache2 \\\n\t\tneko-dev \\\n\t\thaxe \\\n\t\tcurl \\\n\t\tgit \\\n\t\tlibcurl4-gnutls-dev \\\n\t&& curl -f -sL https://deb.nodesource.com/setup_8.x | bash - \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n\t\tnodejs \\\n\t&& rm -r /var/lib/apt/lists/*\n\n\n# apache httpd\nRUN rm -rf /var/www/html \\\n\t&& mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html \\\n\t&& chown -R www-data:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html\nRUN a2enmod rewrite\nRUN a2enmod proxy\nRUN a2enmod proxy_http\nRUN a2dismod mpm_event\nRUN a2enmod mpm_prefork\nRUN mv /etc/apache2/apache2.conf /etc/apache2/apache2.conf.dist && rm /etc/apache2/conf-enabled/* /etc/apache2/sites-enabled/*\nCOPY apache2.conf /etc/apache2/apache2.conf\nRUN { \\\n\t\techo 'LoadModule neko_module /usr/lib/x86_64-linux-gnu/neko/mod_neko2.ndll'; \\\n\t\techo 'LoadModule tora_module /usr/lib/x86_64-linux-gnu/neko/mod_tora2.ndll'; \\\n\t\techo 'AddHandler tora-handler .n'; \\\n\t} > /etc/apache2/mods-enabled/tora.conf \\\n\t&& apachectl stop\n\n\n# haxelib\nENV HAXELIB_PATH /src/.haxelib\nRUN mkdir /haxelib && haxelib setup /haxelib\nWORKDIR /src\nCOPY .haxelib /src/.haxelib\nRUN cp ${HAXELIB_PATH}/aws-sdk-neko/*/ndll/Linux64/aws.ndll /usr/lib/x86_64-linux-gnu/neko/aws.ndll;\nCOPY server*.hxml /src/\n\nCOPY www/package*.json /src/www/\nWORKDIR /src/www/\nRUN npm install --unsafe-perm && npm cache clean --force;\n\nCOPY www /src/www/\nCOPY src/legacyhaxelib/.htaccess /src/www/legacy/\nCOPY src/legacyhaxelib/haxelib.css /src/www/legacy/\nCOPY src/legacyhaxelib/website.mtt /src/www/legacy/\nCOPY src /src/src/\n\nRUN rm -rf /var/www/html\nRUN ln -s /src/www /var/www/html\nRUN mkdir -p /var/www/html/files\nRUN mkdir -p /var/www/html/tmp\n\nWORKDIR /src\n\nRUN haxe server_legacy.hxml\nRUN haxe server_website.hxml\nRUN haxe server_tasks.hxml\nRUN haxe server_api.hxml\n\nEXPOSE 80\nVOLUME [\"/var/www/html/files\", \"/var/www/html/tmp\"]\nCMD apachectl restart && haxelib run tora"
}