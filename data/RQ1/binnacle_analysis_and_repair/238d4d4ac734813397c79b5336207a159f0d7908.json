{
  "startTime": 1674238766789,
  "endTime": 1674238767247,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 1,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://github.com/docker-library/rabbitmq/blob/1a37166704d2ca7c386980387e81615985d5db47/3.7/debian/Dockerfile\nFROM debian:stretch-slim\n\nRUN set -eux; \\\r\n\tapt-get update; \\\r\n\tapt-get install -y --no-install-recommends \\\r\n\t\tgnupg \\\r\n\t\tdirmngr \\\r\n\t; \\\r\n\trm -rf /var/lib/apt/lists/*\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r rabbitmq && useradd -r -d /var/lib/rabbitmq -m -g rabbitmq rabbitmq\n\n# grab gosu for easy step-down from root\nENV GOSU_VERSION 1.10\nRUN set -eux; \\\r\n\t\\\r\n\tfetchDeps=' \\\r\n\t\tca-certificates \\\r\n\t\twget \\\r\n\t'; \\\r\n\tapt-get update; \\\r\n\tapt-get install -y --no-install-recommends $fetchDeps; \\\r\n\trm -rf /var/lib/apt/lists/*; \\\r\n\t\\\r\n\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\r\n\twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\r\n\twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \\\r\n\t\\\r\n# verify the signature\r\n#\texport GNUPGHOME=\"$(mktemp -d)\"; \\\r\n#\tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\r\n#\tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\r\n#\trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\r\n#\t\\\r\n#\tchmod +x /usr/local/bin/gosu; \\\r\n# verify that the binary works\r\n#\tgosu nobody true; \\\r\n\t\\\r\n\tapt-get purge -y --auto-remove $fetchDeps\n\n# RabbitMQ 3.6.15+ requires Erlang 19.3+ (and Stretch only has 19.2); https://www.rabbitmq.com/which-erlang.html\n# so we'll pull Erlang from Buster instead (not using Erlang Solutions since their multiarch support is extremely limited)\nRUN set -eux; \\\r\n# add buster sources.list\r\n\tsed 's/stretch/buster/g' /etc/apt/sources.list \\\r\n\t\t| tee /etc/apt/sources.list.d/buster.list; \\\r\n# update apt-preferences such that we get only erlang* from buster (and erlang* only from buster)\r\n\t{ \\\r\n\t\techo 'Package: *'; \\\r\n\t\techo 'Pin: release n=buster*'; \\\r\n\t\techo 'Pin-Priority: -10'; \\\r\n\t\techo; \\\r\n\t\techo 'Package: erlang*'; \\\r\n\t\techo 'Pin: release n=buster*'; \\\r\n\t\techo 'Pin-Priority: 999'; \\\r\n\t\techo; \\\r\n\t\techo 'Package: erlang*'; \\\r\n\t\techo 'Pin: release n=stretch*'; \\\r\n\t\techo 'Pin-Priority: -10'; \\\r\n\t} | tee /etc/apt/preferences.d/buster-erlang\n\n# install Erlang\nRUN set -eux; \\\r\n\tapt-get update; \\\r\n# \"erlang-base-hipe\" is optional (and only supported on a few arches)\r\n# so, only install it if it's available for our current arch\r\n\tif apt-cache show erlang-base-hipe 2>/dev/null | grep -q 'Package: erlang-base-hipe'; then \\\r\n\t\tapt-get install -y --no-install-recommends \\\r\n\t\t\terlang-base-hipe \\\r\n\t\t; \\\r\n\tfi; \\\r\n# we start with \"erlang-base-hipe\" because it and \"erlang-base\" (non-hipe) are exclusive\r\n\tapt-get install -y --no-install-recommends \\\r\n\t\terlang-asn1 \\\r\n\t\terlang-crypto \\\r\n\t\terlang-eldap \\\r\n\t\terlang-inets \\\r\n\t\terlang-mnesia \\\r\n\t\terlang-nox \\\r\n\t\terlang-os-mon \\\r\n\t\terlang-public-key \\\r\n\t\terlang-ssl \\\r\n\t\terlang-xmerl \\\r\n\t; \\\r\n\trm -rf /var/lib/apt/lists/*\n\n# get logs to stdout (thanks @dumbbell for pushing this upstream! :D)\nENV RABBITMQ_LOGS=- RABBITMQ_SASL_LOGS=-\n# https://github.com/rabbitmq/rabbitmq-server/commit/53af45bf9a162dec849407d114041aad3d84feaf\n\n# /usr/sbin/rabbitmq-server has some irritating behavior, and only exists to \"su - rabbitmq /usr/lib/rabbitmq/bin/rabbitmq-server ...\"\nENV PATH /usr/lib/rabbitmq/bin:$PATH\n\n# gpg: key 6026DFCA: public key \"RabbitMQ Release Signing Key <info@rabbitmq.com>\" imported\nENV RABBITMQ_GPG_KEY 0A9AF2115F4687BD29803A206B73A36E6026DFCA\n\nENV RABBITMQ_VERSION 3.7.4\nENV RABBITMQ_GITHUB_TAG v3.7.4\nENV RABBITMQ_DEBIAN_VERSION 3.7.4-1\n\nRUN set -eux; \\\n\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends ca-certificates wget; \\\n\n\twget -O rabbitmq-server.deb.asc \"https://github.com/rabbitmq/rabbitmq-server/releases/download/$RABBITMQ_GITHUB_TAG/rabbitmq-server_${RABBITMQ_DEBIAN_VERSION}_all.deb.asc\"; \\\n\twget -O rabbitmq-server.deb     \"https://github.com/rabbitmq/rabbitmq-server/releases/download/$RABBITMQ_GITHUB_TAG/rabbitmq-server_${RABBITMQ_DEBIAN_VERSION}_all.deb\"; \\\n\n\tapt-get purge -y --auto-remove ca-certificates wget; \\\n\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$RABBITMQ_GPG_KEY\"; \\\n\tgpg --batch --verify rabbitmq-server.deb.asc rabbitmq-server.deb; \\\n\trm -rf \"$GNUPGHOME\"; \\\n\n\tapt install -y --no-install-recommends ./rabbitmq-server.deb; \\\n\tdpkg -l | grep rabbitmq-server; \\\n\trm -f rabbitmq-server.deb*; \\\n\n\trm -rf /var/lib/apt/lists/*\n\n# warning: the VM is running with native name encoding of latin1 which may cause Elixir to malfunction as it expects utf8. Please ensure your locale is set to UTF-8 (which can be verified by running \"locale\" in your shell)\nENV LANG C.UTF-8\n\n# set home so that any `--user` knows where to put the erlang cookie\nENV HOME /var/lib/rabbitmq\n\nRUN mkdir -p /var/lib/rabbitmq /etc/rabbitmq \\\r\n\t&& chown -R rabbitmq:rabbitmq /var/lib/rabbitmq /etc/rabbitmq \\\r\n\t&& chmod -R 777 /var/lib/rabbitmq /etc/rabbitmq\nVOLUME /var/lib/rabbitmq\n\n# add a symlink to the .erlang.cookie in /root so we can \"docker exec rabbitmqctl ...\" without gosu\nRUN ln -sf /var/lib/rabbitmq/.erlang.cookie /root/\n\nRUN ln -sf \"/usr/lib/rabbitmq/lib/rabbitmq_server-$RABBITMQ_VERSION/plugins\" /plugins\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat\nRUN [\"chmod\", \"+x\", \"./docker-entrypoint.sh\"]\nENTRYPOINT [\"./docker-entrypoint.sh\"]\n\nEXPOSE 4369 5671 5672 25672\n\n# Start the RabbitMQ broker and keep the container running.\nCMD [\"rabbitmq-server\"]\n"
}