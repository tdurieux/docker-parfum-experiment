{
  "startTime": 1674252216749,
  "endTime": 1674252217036,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 8,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 120
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 120
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:trusty\n\n#\n# unfortunately this doesn't work\n# ..but, as \"trusty\" is reaching \"end of life\" I never bothered to fix the build\n# so I only leave it for reference\n# currently the AppImage build with \"xenial\"\n#\n\nARG wdir=\"/opt\"\nWORKDIR $wdir\n\nARG cmake_ver=\"cmake-3.8.0-Linux-x86_64\"\nARG make_core=4\nENV PATH=\"${wdir}/${cmake_ver}/bin:${PATH}\"\nENV PATH=\"${wdir}/linuxdeployqt:${PATH}\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# install Qt 5.5 from PPA - https://launchpad.net/~beineri/+archive/ubuntu/opt-qt551-trusty\n# note: trusty would have 5.3 per default\nENV PATH=\"/opt/qt55/bin:${PATH}\"\nRUN add-apt-repository ppa:beineri/opt-qt551-trusty -y\nRUN add-apt-repository ppa:beineri/opt-qt551-trusty -y && apt-get update\n\nRUN apt-get update && apt-get install --no-install-recommends -y git-core build-essential \\\n                              wget curl make \\\n                              libboost-dev libboost-test-dev libboost-program-options-dev libevent-dev libcurl4-openssl-dev \\\n                              qt55base \\\n                              libpoppler-qt5-dev \\\n                              qttools5-dev-tools \\\n                              qt55tools qt55script qt55quick1 qt55webengine qt55webkit-examples qt55quickcontrols qt553d && rm -rf /var/lib/apt/lists/*;\n\n# install cmake\nRUN wget -nv \"https://cmake.org/files/v3.8/${cmake_ver}.tar.gz\" && \\\n        tar -xf \"${cmake_ver}.tar.gz\" && rm \"${cmake_ver}.tar.gz\"\n\n# install linuxdeployqt\nRUN wget -nv \"https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage\" && \\\n        chmod a+x ./linuxdeployqt-continuous-x86_64.AppImage && \\\n        ./linuxdeployqt-continuous-x86_64.AppImage --appimage-extract && \\\n        mv squashfs-root linuxdeployqt && \\\n        mv linuxdeployqt/AppRun linuxdeployqt/linuxdeployqt\n\n# compile tidy\nARG git_rev_tidy=\"HEAD\"\nARG git_branch_tidy=\"master\"\nRUN cd $wdir && git clone -b $git_branch_tidy \"https://github.com/htacg/tidy-html5.git\" && \\\n        cd tidy-html5 && \\\n        git checkout $git_rev_tidy && \\\n        cd build/cmake && \\\n        cmake ../..  -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release && \\\n        make -j $make_core && \\\n        make install\n\n# use git_rev to make sure the last layers are run again, if there are new commits\nARG git_rev1=\"HEAD\"\nARG git_rev=\"HEAD\"\nARG git_branch=\"feature/rs-9-alfa\"\nRUN cd $wdir && git clone -b $git_branch \"https://github.com/robert7/nixnote2.git\" && \\\n        cd nixnote2 && \\\n        git checkout $git_rev\n\n# TODO: fix compile...\n\nCMD /bin/bash\n\n"
}