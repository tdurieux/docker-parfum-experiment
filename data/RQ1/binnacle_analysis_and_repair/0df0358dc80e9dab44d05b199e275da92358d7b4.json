{
  "startTime": 1674251351906,
  "endTime": 1674251352260,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 25,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 25,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.3-fpm\nARG TIMEZONE\nARG XDEBUG_REMOTE_HOST\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    openssh-client \\\n    openssl \\\n    git \\\n    mysql-client \\\n    unzip \\\n    vim \\\n    zlib1g-dev \\\n    libicu-dev \\\n    g++ \\\n    libfreetype6-dev \\\n    libjpeg62-turbo-dev \\\n    libmcrypt-dev \\\n    libpng-dev \\\n    make \\\n    libav-tools \\\n    libzip-dev \\\n    gnupg \\\n    nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Install Composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n#RUN composer global require hirak/prestissimo\nRUN composer --version\n\n# Set timezone\nRUN ln -snf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime && echo ${TIMEZONE} > /etc/timezone\nRUN printf '[PHP]\\ndate.timezone = \"%s\"\\n', ${TIMEZONE} > /usr/local/etc/php/conf.d/tzone.ini\nRUN \"date\"\n\n# Type docker-php-ext-install to see available extensions\nRUN pecl install mcrypt-1.0.2\nRUN docker-php-ext-enable mcrypt\nRUN docker-php-ext-install pdo pdo_mysql\nRUN docker-php-ext-install -j$(nproc) iconv mbstring exif zip opcache pcntl \\\n    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-install -j$(nproc) gd \\\n    && docker-php-ext-configure intl \\\n    && docker-php-ext-install intl\n\n\n# install xdebug\n#RUN pecl install xdebug\n#RUN docker-php-ext-enable xdebug\n#RUN echo \"error_reporting=E_ALL\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n#RUN echo \"display_startup_errors=On\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n#RUN echo \"display_errors=On\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n#RUN echo \"xdebug.remote_enable=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n#RUN echo \"xdebug.remote_autostart=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n#RUN echo \"xdebug.remote_connect_back=0\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n#RUN echo \"xdebug.remote_host=${XDEBUG_REMOTE_HOST}\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n#RUN echo \"xdebug.idekey=\\\"PHPSTORM\\\"\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n#RUN echo \"xdebug.remote_port=9000\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n#RUN echo \"xdebug.remote_addr_header=HTTP_XDEBUG_HOST\" >> /usr/local/etc/php/conf.d/docker-php-pecl-xdebug.ini\n#RUN echo \"xdebug.max_nesting_level=1200\" >> /usr/local/etc/php/conf.d/docker-php-pecl-xdebug.ini\n\n# install yarn\nRUN curl -f -sL https://deb.nodesource.com/setup_6.x | bash - \\\n    && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n    && echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n    && apt-get update && apt-get install --no-install-recommends -y yarn nodejs && rm -rf /var/lib/apt/lists/*;\n\nCOPY php.ini /usr/local/etc/php/\nCOPY bashrc.dist /var/www/.bashrc\n\nRUN ln -s /var/www/.host/composer /var/www/.composer\nRUN ln -s /var/www/.host/local /var/www/.local\nRUN ln -s /var/www/.host/.npmrc /var/www/.npmrc\nRUN ln -s /var/www/html/docker/data/.bash_history /var/www/.bash_history\n\nRUN chown -R www-data: /var/www\nRUN usermod -u $USER_ID www-data -s /bin/bash\n\nWORKDIR /var/www/html/www\n"
}