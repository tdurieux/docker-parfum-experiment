{
  "startTime": 1674249675632,
  "endTime": 1674249675781,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 120
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.4\n\nENV HAPROXY_MAJOR 1.6\nENV HAPROXY_VERSION 1.6.9\nENV HAPROXY_MD5 c52eee40eb66f290d6f089c339b9d2b3\n\n# see http://sources.debian.net/src/haproxy/1.5.8-1/debian/rules/ for some helpful navigation of the possible \"make\" arguments\nRUN set -x \\\n  && apk add --no-cache --virtual .build-deps \\\n    curl \\\n    gcc \\\n    libc-dev \\\n    linux-headers \\\n    make \\\n    openssl-dev \\\n    pcre-dev \\\n    zlib-dev \\\n  && curl -f -SL \"https://www.haproxy.org/download/${HAPROXY_MAJOR}/src/haproxy-${HAPROXY_VERSION}.tar.gz\" -o haproxy.tar.gz \\\n  && echo \"${HAPROXY_MD5}  haproxy.tar.gz\" | md5sum -c \\\n  && mkdir -p /usr/src \\\n  && tar -xzf haproxy.tar.gz -C /usr/src \\\n  && mv \"/usr/src/haproxy-$HAPROXY_VERSION\" /usr/src/haproxy \\\n  && rm haproxy.tar.gz \\\n  && make -C /usr/src/haproxy \\\n    TARGET=linux2628 \\\n    USE_PCRE=1 PCREDIR= \\\n    USE_OPENSSL=1 \\\n    USE_ZLIB=1 \\\n    all \\\n    install-bin \\\n  && mkdir -p /usr/local/etc/haproxy \\\n  && cp -R /usr/src/haproxy/examples/errorfiles /usr/local/etc/haproxy/errors \\\n  && rm -rf /usr/src/haproxy \\\n  && runDeps=\"$( \\\n    scanelf --needed --nobanner --recursive /usr/local \\\n      | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n      | sort -u \\\n      | xargs -r apk info --installed \\\n      | sort -u \\\n  )\" \\\n  && apk add --no-cache --virtual .haproxy-rundeps $runDeps \\\n  && apk del .build-deps\n\n# Customisation from haproxy upstream\nRUN apk add --no-cache inotify-tools curl python py-pip && \\\n    pip install --no-cache-dir requests\n\nENV STACK_DOMAIN none\nENV ENABLE_STATS false\nENV STATS_PORT 1936\nENV STATS_USERNAME haproxy\nENV STATS_PASSWORD haproxy\nENV ENABLE_SSL false\nENV ENABLE_SSL_REDIRECTION false\nENV SSL_REDIRECTION_TYPE 301\nENV SSL_BASE64_ENCODED false\nENV DISABLE_METADATA false\nENV HAPROXY_CONFIG /usr/local/etc/haproxy/haproxy.cfg\nENV HAPROXY_SSL_CERT /usr/local/etc/haproxy/server.pem\nENV HAPROXY_BACKEND_CONFIG /usr/local/etc/haproxy/haproxy-backends.cfg\nENV HAPROXY_DOMAIN_MAP /usr/local/etc/haproxy/domain.map\nENV RANCHER_API_HOST rancher-metadata.rancher.internal\nENV RANCHER_API_VERSION 2015-12-19\nENV RANCHER_LABEL map-public-http\nENV RANCHER_PROXY_LABEL send-proxy\n\nCOPY gen-haproxy-map.py /\nCOPY docker-entrypoint.sh /\nCOPY haproxy.cfg /usr/local/etc/haproxy/haproxy.cfg\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"haproxy\"]\n\n"
}