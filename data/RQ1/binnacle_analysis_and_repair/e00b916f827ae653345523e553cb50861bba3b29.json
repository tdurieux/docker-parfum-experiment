{
  "startTime": 1674245807037,
  "endTime": 1674245807416,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 70,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 70,
        "columnStart": 7,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\nEXPOSE 80\nMAINTAINER \"Reflexions\" <docker-laravel@reflexions.co>\n\nENV SHELL=/bin/bash \\\n    LANG=en_US.utf8\n\n# because I use ll all the time\nCOPY ./home/.bashrc ./home/.inputrc /root/\n\n# ffmpeg not in debian:jessie\nRUN echo deb http://www.deb-multimedia.org jessie main non-free >> /etc/apt/sources.list \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install deb-multimedia-keyring --force-yes --assume-yes \\\n    && apt-get -y upgrade && rm -rf /var/lib/apt/lists/*;\n\n# openssl is a dependency of apache2, but just to be clear, we list it separately\n# we use https urls for yarn, so we need apt-transport-https\n# composer runs faster if unzip is available\nRUN apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        apache2 \\\n        apt-transport-https \\\n        curl \\\n        git-core \\\n        locales \\\n        openssl \\\n        unzip \\\n        vim-tiny && rm -rf /var/lib/apt/lists/*;\n\n# Configure locales\nRUN echo \"America/New_York\" > /etc/timezone \\\n    && dpkg-reconfigure -f noninteractive tzdata \\\n    && echo \"configuring ${LANGUAGE}\" \\\n    && locale-gen ${LANGUAGE} \\\n    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n\n# jessie has an old version of node (0.10.29). get version 6 (LTS) instead\nRUN curl -f -sL https://deb.nodesource.com/setup_6.x | bash -\n\n# laravel uses yarn, so let's get it\nCOPY ./yarn/yarn.list /etc/apt/sources.list.d/yarn.list\nCOPY ./yarn/pubkey.gpg /tmp/yarn-pubkey.gpg\n\n# from https://dl.yarnpkg.com/debian/pubkey.gpg\n# they rotate it from time to time\nRUN apt-key add /tmp/yarn-pubkey.gpg\n\n# Copy GTE CyberTrust Global Root certificate\n# Needed for mailchimp because of https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=812708\nCOPY ./certs/gte_cybertrust_global_root.crt /etc/ssl/certs/gte_cybertrust_global_root.crt\nRUN c_rehash /etc/ssl/certs # requires openssl\n\nRUN apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        ffmpeg \\\n        imagemagick \\\n        libapache2-mod-php5 \\\n        php-pear \\\n        php5 \\\n        php5-cli \\\n        php5-curl \\\n        php5-dev \\\n        php5-gd \\\n        php5-imagick \\\n        php5-mcrypt \\\n        php5-mysql \\\n        php5-pgsql \\\n        php5-redis \\\n        php5-sqlite \\\n        yarn \\\n    && a2enmod php5 \\\n    && a2enmod rewrite && rm -rf /var/lib/apt/lists/*;\n\n# Configure php\n\n# install composer\nRUN curl -f -sS https://getcomposer.org/installer | php \\\n    && mv composer.phar /usr/local/bin/composer\n\n# set timezone to Eastern\nRUN sed -i 's/\\;date\\.timezone\\ \\=/date\\.timezone\\ \\=\\ America\\/New_York/g' /etc/php5/cli/php.ini \\\n    && sed -i 's/\\;date\\.timezone\\ \\=/date\\.timezone\\ \\=\\ America\\/New_York/g' /etc/php5/apache2/php.ini\n\n# turn off persistent connections\nRUN sed -i 's/mysql.allow_persistent = On/mysql.allow_persistent = Off/g' /etc/php5/cli/php.ini \\\n    && sed -i 's/mysql.allow_persistent = On/mysql.allow_persistent = Off/g' /etc/php5/apache2/php.ini \\\n    && sed -i 's/pgsql.allow_persistent = On/pgsql.allow_persistent = Off/g' /etc/php5/cli/php.ini \\\n    && sed -i 's/pgsql.allow_persistent = On/pgsql.allow_persistent = Off/g' /etc/php5/apache2/php.ini\n\n# increase memory limit. cli gets more than apache.\nRUN sed -i 's/memory_limit = 128M/memory_limit = 1G/g' /etc/php5/cli/php.ini \\\n    && sed -i 's/memory_limit = 128M/memory_limit = 256M/g' /etc/php5/apache2/php.ini\n\n# allow bigger uploads\nRUN sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 200M/g' /etc/php5/apache2/php.ini \\\n    && sed -i 's/post_max_size = 8M/post_max_size = 200M/g' /etc/php5/apache2/php.ini\n\n# safer sessions\nRUN sed -i 's/session.use_strict_mode = 0/session.use_strict_mode = 1/g' /etc/php5/apache2/php.ini \\\n    && sed -i 's/session.cookie_httponly =/session.cookie_httponly = 1/g' /etc/php5/apache2/php.ini \\\n    && sed -i 's/session.hash_function = 0/session.hash_function = 1/g' /etc/php5/apache2/php.ini \\\n    && sed -i 's/session.hash_bits_per_character = 5/session.hash_bits_per_character = 6/g' /etc/php5/apache2/php.ini\n\n# we're not running cron, so we have to gc sessions after requests\nRUN sed -i 's/session.gc_probability = 0/session.gc_probability = 1/g' /etc/php5/apache2/php.ini\n\n# enable opcache\nRUN sed -i 's/;opcache.enable=0/opcache.enable=1/g' /etc/php5/apache2/php.ini\n\n# configure apache\n# To override this, copy your own vhost file over /etc/apache2/sites-available/001-application.conf\nCOPY etc/apache2/sites-available/001-application.conf /etc/apache2/sites-available/001-application.conf\nRUN ln -s /etc/apache2/sites-available/001-application.conf /etc/apache2/sites-enabled/\nRUN unlink /etc/apache2/sites-enabled/000-default.conf\n\nCOPY bin/setup.sh bin/start.sh bin/new-project.sh /usr/share/docker-laravel/bin/\n\n# start and setup scripts\nENTRYPOINT [\"/usr/share/docker-laravel/bin/start.sh\"]\n\n# Default ENV\n# ------------------\nENV LARAVEL_WWW_PATH=/var/www/laravel \\\n    LARAVEL_RUN_PATH=/var/run/laravel \\\n    LARAVEL_STORAGE_PATH=/var/run/laravel/storage \\\n    LARAVEL_BOOTSTRAP_CACHE_PATH=/var/run/laravel/bootstrap/cache\n\nWORKDIR /var/www/laravel\n"
}