{
  "startTime": 1674234078168,
  "endTime": 1674234078330,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.1-apache\n\nRUN a2enmod rewrite\n\n# Instal OS dependencies\nRUN apt-get -y update && apt-get install --no-install-recommends -y zlibc zlib1g-dev libxml2-dev libicu-dev libpq-dev nodejs zip unzip git libz-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install PHP dependencies\nRUN docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql \\\n && docker-php-ext-install pdo pdo_pgsql pdo_mysql intl soap \\\n && docker-php-ext-enable pdo pdo_mysql pdo_pgsql intl soap\n\n# Create link to nodejs\nRUN ln -s /usr/bin/nodejs /usr/bin/node\n\n# Install XDebug\nRUN yes | pecl install xdebug\n\n# Configure XDebug\nRUN echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" > /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo \"xdebug.remote_enable=on\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo \"xdebug.remote_autostart=off\" >> /usr/local/etc/php/conf.d/xdebug.ini\n\n# Configure PHP and Apache\nRUN echo \"date.timezone = America/Sao_Paulo\" > /usr/local/etc/php/conf.d/php-timezone.ini \\\n && echo \"memory_limit=256M\" > /usr/local/etc/php/conf.d/memory_limit.ini \\\n && echo \"<VirTualHost *:80>\" > /etc/apache2/conf-enabled/lc-docroot.conf \\\n && echo \"    DocumentRoot /var/www/html/web\" >> /etc/apache2/conf-enabled/lc-docroot.conf \\\n && echo \"</VirtualHost>\" >> /etc/apache2/conf-enabled/lc-docroot.conf\n\nWORKDIR /var/www/html\n# Instal composer\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n && php composer-setup.php\n\n# Instal composer dependencies\nCOPY ./composer.* /var/www/html/\nRUN php composer.phar config cache-dir\nRUN php composer.phar install --no-interaction --no-scripts --no-autoloader\nCOPY . /var/www/html\nRUN php composer.phar dump-autoload -d /var/www/html\nRUN chown -R www-data /var/www/html\n# RUN php app/console assets:install \\\n#  && php app/console assets:install -e prod \\\n#  && php app/console assetic:dump -e prod\n"
}