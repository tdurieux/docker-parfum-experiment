{
  "startTime": 1674234199357,
  "endTime": 1674234199663,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 22,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# State 1: Create a base image which includes the Go toolchain,\n# RocksDB library, its tools, and dependencies.\nFROM golang:1.11 AS base\n\nARG ROCKSDB_VERSION=5.17.2\nARG ZSTD_VERSION=1.3.5\n\n# Install dependencies for building & running RocksDB.\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends -y \\\n      build-essential \\\n      curl \\\n      libbz2-dev \\\n      libgflags-dev \\\n      libjemalloc-dev \\\n      liblz4-dev \\\n      libsnappy-dev \\\n      unzip \\\n      zlib1g-dev \\\n && rm -rf /var/lib/apt/lists/*\n\n# Build zstd. The packaged version (libzstd-dev) is currently 1.1.2 on Debian stretch.\n# We need at least 1.3\nRUN curl -f -L -o /opt/zstd.tgz \\\n      https://github.com/facebook/zstd/archive/v${ZSTD_VERSION}.tar.gz \\\n && mkdir -p /opt/zstd \\\n && tar xzf /opt/zstd.tgz -C /opt/zstd --strip-components=1 \\\n && rm /opt/zstd.tgz \\\n && cd /opt/zstd \\\n && make install -j$(nproc) \\\n && rm -r /opt/zstd\n\n# Install RocksDB and the \"ldb\" & \"sst_dump\" tools.\nRUN curl -f -L -o /opt/rocksdb.tgz \\\n      https://github.com/facebook/rocksdb/archive/v${ROCKSDB_VERSION}.tar.gz \\\n && mkdir -p /opt/rocksdb \\\n && tar xzf /opt/rocksdb.tgz -C /opt/rocksdb --strip-components=1 \\\n && rm /opt/rocksdb.tgz \\\n && cd /opt/rocksdb \\\n && USE_SSE=1 DEBUG_LEVEL=0 USE_RTTI=1 make shared_lib tools -j$(nproc) \\\n && make install-shared -j$(nproc) \\\n && cp ldb sst_dump /usr/local/bin \\\n && rm -r /opt/rocksdb \\\n && ldconfig\n\n\n# Stage 2: Create an image with the vendored dependencies, suitable for using\n# as a cache to speed up CI build times.\nFROM base as vendor\n\nARG DEP_VERSION=v0.5.0\n\nRUN curl -fsSL -o /usr/local/bin/dep \\\n    https://github.com/golang/dep/releases/download/${DEP_VERSION}/dep-linux-amd64 \\\n && chmod +x /usr/local/bin/dep\n\nCOPY Gopkg.toml Gopkg.lock /go/src/github.com/LiveRamp/gazette/\nRUN cd /go/src/github.com/LiveRamp/gazette/ \\\n && dep ensure -vendor-only \\\n && rm -rf \"$GOPATH/pkg/dep\"\n\n\n# Stage 3: Create a build image with source, which is built and tested.\nFROM vendor as build\n\n# Copy, install, and test library and main packages.\nCOPY v2/pkg /go/src/github.com/LiveRamp/gazette/v2/pkg\nRUN go install -race -tags rocksdb github.com/LiveRamp/gazette/v2/pkg/...\nRUN go test -race -tags rocksdb github.com/LiveRamp/gazette/v2/pkg/...\nRUN go install -tags rocksdb github.com/LiveRamp/gazette/v2/pkg/...\n\nCOPY v2/cmd /go/src/github.com/LiveRamp/gazette/v2/cmd\nRUN go install github.com/LiveRamp/gazette/v2/cmd/...\nRUN go test github.com/LiveRamp/gazette/v2/cmd/...\n\n# Build & test examples.\nCOPY v2/examples /go/src/github.com/LiveRamp/gazette/v2/examples\nRUN go install -tags rocksdb github.com/LiveRamp/gazette/v2/examples/...\nRUN go test -tags rocksdb github.com/LiveRamp/gazette/v2/examples/...\n\n# Stage 4: Pluck gazette binaries onto base.\nFROM base as gazette\n\n# Install vim in gazette image as it is required for some gazctl commands\nRUN apt-get update && apt-get install -y vim --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=build \\\n    /go/bin/gazctl \\\n    /go/bin/gazette \\\n    /go/bin/\n\n\n# Stage 5: Pluck example binaries onto gazette.\nFROM gazette as examples\n\nCOPY --from=build \\\n        /go/bin/chunker \\\n        /go/bin/counter \\\n        /go/bin/summer \\\n        /go/bin/wordcountctl \\\n    /go/bin/\n\n"
}