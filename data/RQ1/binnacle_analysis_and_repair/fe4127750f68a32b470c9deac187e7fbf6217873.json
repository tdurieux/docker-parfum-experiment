{
  "startTime": 1674240466089,
  "endTime": 1674240466273,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 11,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n#--------------------------------------------------------------------------\n# Image Setup\n#--------------------------------------------------------------------------\n#\n# To edit the 'php-fpm' base Image, visit its repository on Github\n#    https://github.com/LaraDock/php-fpm\n#\n# To change its version, see the available Tags on the Docker Hub:\n#    https://hub.docker.com/r/laradock/php-fpm/tags/\n#\n\nFROM laradock/php-fpm:7.0--1.2\n\nMAINTAINER Mahmoud Zalt <mahmoud@zalt.me>\n\n#\n#--------------------------------------------------------------------------\n# Mandatory Software's Installation\n#--------------------------------------------------------------------------\n#\n# Mandatory Software's such as (\"mcrypt\", \"pdo_mysql\", \"libssl-dev\", ....)\n# are installed on the base image 'laradock/php-fpm' image. If you want\n# to add more Software's or remove existing one, you need to edit the\n# base image (https://github.com/LaraDock/php-fpm).\n#\n\n#\n#--------------------------------------------------------------------------\n# Optional Software's Installation\n#--------------------------------------------------------------------------\n#\n# Optional Software's will only be installed if you set them to `true`\n# in the `docker-compose.yml` before the build.\n# Example:\n#   - INSTALL_ZIP_ARCHIVE=true\n#\n\n#####################################\n# xDebug:\n#####################################\n\nARG INSTALL_XDEBUG=true\nENV INSTALL_XDEBUG ${INSTALL_XDEBUG}\nRUN if [ ${INSTALL_XDEBUG} = true ]; then \\\n    # Install the xdebug extension\n    pecl install xdebug && \\\n    docker-php-ext-enable xdebug \\\n;fi\n\n# Copy xdebug configration for remote debugging\nCOPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\n\n#####################################\n# MongoDB:\n#####################################\n\nARG INSTALL_MONGO=true\nENV INSTALL_MONGO ${INSTALL_MONGO}\nRUN if [ ${INSTALL_MONGO} = true ]; then \\\n    # Install the mongodb extension\n    pecl install mongodb && \\\n    docker-php-ext-enable mongodb \\\n;fi\n\n#####################################\n# ZipArchive:\n#####################################\n\nARG INSTALL_ZIP_ARCHIVE=true\nENV INSTALL_ZIP_ARCHIVE ${INSTALL_ZIP_ARCHIVE}\nRUN if [ ${INSTALL_ZIP_ARCHIVE} = true ]; then \\\n    # Install the zip extension\n    pecl install zip && \\\n    docker-php-ext-enable zip \\\n;fi\n\n#####################################\n# PHP Memcached:\n#####################################\n\nARG INSTALL_MEMCACHED=true\nENV INSTALL_MEMCACHED ${INSTALL_MEMCACHED}\nRUN if [ ${INSTALL_MEMCACHED} = true ]; then \\\n    curl -f -L -o /tmp/memcached.tar.gz \"https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz\" \\\n    && mkdir -p memcached \\\n    && tar -C memcached -zxvf /tmp/memcached.tar.gz --strip 1 \\\n    && ( cd memcached \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        && make -j$(nproc) \\\n        && make install) \\\n\n    && rm -r memcached \\\n    && rm /tmp/memcached.tar.gz \\\n    && docker-php-ext-enable memcached \\\n; fi\n\n#####################################\n# Opcache:\n#####################################\nARG INSTALL_OPCACHE=true\nENV INSTALL_OPCACHE ${INSTALL_OPCACHE}\nRUN if [ ${INSTALL_OPCACHE} = true ]; then \\\n    docker-php-ext-install opcache && \\\n    docker-php-ext-enable opcache \\\n;fi\n\n\n\n#\n#--------------------------------------------------------------------------\n# Final Touch\n#--------------------------------------------------------------------------\n#\n\nADD ./laravel.ini /usr/local/etc/php/conf.d\nADD ./laravel.pool.conf /usr/local/etc/php-fpm.d/\n\nRUN rm -r /var/lib/apt/lists/*\n\nRUN usermod -u 1000 www-data\n\nWORKDIR /var/www/laravel\n\nCMD [\"php-fpm\"]\n\nEXPOSE 9000\n"
}