{
  "startTime": 1674236046063,
  "endTime": 1674236047052,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 33,
        "lineEnd": 81,
        "columnStart": 2,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 175,
        "lineEnd": 175,
        "columnStart": 24,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 81,
        "columnStart": 2,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 175,
        "lineEnd": 175,
        "columnStart": 24,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 81,
        "columnStart": 2,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 175,
        "lineEnd": 175,
        "columnStart": 24,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 2,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:19.04\n\nENV USER cloud\nENV EDITOR nano\nENV HOME /home/$USER\nENV LANG en_US.UTF-8\nENV LANGUAGE $LANG\nENV LC_ALL $LANG\nENV LC_CTYPE $LANG\nENV SHELL /bin/zsh\nENV TERM xterm-256color\nENV TZ Australia/Sydney\n\n# Restore minimized distribution content e.g. man pages\nRUN yes | unminimize\n\n# Install locales and timezone data\nRUN apt-get update -qq && \\\n  apt-get install -y --no-install-recommends -qq \\\n  locales \\\n  tzdata && rm -rf /var/lib/apt/lists/*;\n\n# Generate locales\nRUN locale-gen $LANG && \\\n  update-locale LC_ALL=$LC_ALL LANG=$LANG && \\\n  dpkg-reconfigure --frontend=noninteractive locales\n\n# Set timezone\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \\\n  echo $TZ > /etc/timezone\n\n# Install cloud computer utilities\nRUN apt-get update -qq && \\\n  DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install -qq --fix-missing \\\n  asciinema \\\n  build-essential \\\n  cmake \\\n  cmatrix \\\n  curl \\\n  dnsutils \\\n  docker.io \\\n  figlet \\\n  g++ \\\n  gcc \\\n  git \\\n  gtk+3.0 \\\n  gosu \\\n  htop \\\n  iftop \\\n  iputils-ping \\\n  jq \\\n  libnss3-tools \\\n  lsb-core \\\n  make \\\n  man-db \\\n  nano \\\n  ncdu \\\n  net-tools \\\n  netcat-openbsd \\\n  nnn \\\n  numlockx \\\n  openbox \\\n  openssl \\\n  perl \\\n  python \\\n  ruby \\\n  software-properties-common \\\n  ssh \\\n  sudo \\\n  tmux \\\n  tree \\\n  vcsh \\\n  vim \\\n  weechat \\\n  wmctrl \\\n  x11vnc \\\n  xauth \\\n  xdotool \\\n  xinput \\\n  xsel \\\n  xvfb \\\n  zsh && rm -rf /var/lib/apt/lists/*;\n\n# Install antigen\nRUN curl -fsSL git.io/antigen > /usr/local/bin/antigen.zsh\n\n# Install bat\nRUN wget -O bat.deb -qnv https://github.com/sharkdp/bat/releases/download/v0.9.0/bat_0.9.0_amd64.deb && \\\n  dpkg -i bat.deb && \\\n  rm bat.deb\n\n# Install code\nRUN curl -fsSL https://github.com/cdr/code-server/releases/download/1.1119-vsc1.33.1/code-server1.1119-vsc1.33.1-linux-x64.tar.gz | \\\n  tar -C /tmp -xzf - && \\\n  mv /tmp/code-server*/code-server /usr/local/bin && \\\n  rm -rf /tmp/code-server*\n\n# Install ctop\nRUN wget -O /usr/local/bin/ctop -qnv https://github.com/bcicen/ctop/releases/download/v0.7.2/ctop-0.7.2-linux-amd64 && \\\n  chmod +x /usr/local/bin/ctop\n\n# Install define\nRUN wget -O /usr/local/bin/define -qnv https://github.com/Rican7/define/releases/download/v0.1.2/define_linux_amd64 && \\\n  chmod +x /usr/local/bin/define\n\n# Install dive docker image explorer\nRUN wget -qnv -O dive.deb https://github.com/wagoodman/dive/releases/download/v0.6.0/dive_0.6.0_linux_amd64.deb && \\\n  dpkg -i dive.deb && \\\n  rm dive.deb\n\n# Install docker-compose\nRUN curl -fsSL \"https://github.com/docker/compose/releases/download/1.23.1/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose && \\\n  chmod +x /usr/local/bin/docker-compose\n\n# Install fzf\nRUN git clone --depth 1 https://github.com/junegunn/fzf.git /opt/fzf && \\\n  /opt/fzf/install --bin\n\n# Install git dashboard\nRUN curl -fsSL https://github.com/jesseduffield/lazygit/releases/download/v0.7.2/lazygit_0.7.2_Linux_x86_64.tar.gz | \\\n  tar -C /usr/local/bin -xzf -\n\n# Install git stats viewer\nRUN git clone --depth 1 https://github.com/arzzen/git-quick-stats.git && \\\n  cd git-quick-stats && \\\n  make install && \\\n  rm -rf ../git-quick-stats\n\n# Install gotop\nRUN wget -qnv -O gotop-deb https://github.com/cjbassi/gotop/releases/download/3.0.0/gotop_3.0.0_linux_amd64.deb && \\\n  dpkg -i gotop-deb\n\n# Install gotty\nRUN curl -fsSL https://github.com/yudai/gotty/releases/download/v2.0.0-alpha.3/gotty_2.0.0-alpha.3_linux_amd64.tar.gz | \\\n  tar -C /usr/local/bin -xzf -\n\n# Install jump directory navigator\nRUN wget -qnv -O jump.deb https://github.com/gsamokovarov/jump/releases/download/v0.22.0/jump_0.22.0_amd64.deb && \\\n  dpkg -i jump.deb && \\\n  rm jump.deb\n\n# Install kind\nRUN wget -qnv -O kind https://github.com/kubernetes-sigs/kind/releases/download/v0.3.0/kind-linux-amd64 && \\\n  chmod +x kind && \\\n  mv kind /usr/local/bin\n\n# Install node.js\nRUN curl -fsSL https://gist.githubusercontent.com/sabrehagen/b07846cdb0d373ad5e6a4c7567d5f390/raw/61b7273546d9b187c6ee77a902cd2d078de83fc7/install.sh | bash - && \\\n  apt-get install -y --no-install-recommends -qq nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Install novnc\nRUN git clone --depth 1 https://github.com/cloud-computer/noVNC.git /opt/noVNC\n\n# Install packer\nRUN curl -fsSL https://releases.hashicorp.com/packer/1.3.3/packer_1.3.3_linux_amd64.zip > packer.zip && \\\n  unzip packer.zip && \\\n  mv packer /usr/local/bin && \\\n  rm packer.zip\n\n# Install terraform\nRUN wget --quiet https://releases.hashicorp.com/terraform/0.11.3/terraform_0.11.3_linux_amd64.zip && \\\n  unzip terraform_0.11.3_linux_amd64.zip && \\\n  mv terraform /usr/bin && \\\n  rm terraform_0.11.3_linux_amd64.zip\n\n# Install tmux plugin manager\nRUN git clone https://github.com/tmux-plugins/tpm /opt/tpm --depth 1 && \\\n  ln -s /opt/tpm/tpm /usr/local/bin\n\n# Install tmuxinator\nRUN gem install tmuxinator\n\n# Install yarn\nRUN curl -fsSL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n  echo \"deb https://dl.yarnpkg.com/debian stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n  apt-get update -qq && apt-get install -y --no-install-recommends -qq yarn && rm -rf /var/lib/apt/lists/*;\n\n# Install yarn based utilities\nRUN yarn global add \\\n  github-email \\\n  rebase-editor \\\n  tldr\n\n# Enable password-less sudo for the sudo group\nRUN echo \"%sudo ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers\n\n# Create the docker group with the host os group id\nENV DOCKER_GROUP 999\nRUN groupmod --gid $DOCKER_GROUP docker\n\n# Create a non-root user for safe operation\nRUN useradd \\\n  --create-home \\\n  --groups $DOCKER_GROUP,sudo \\\n  --password $USER \\\n  --shell /bin/zsh \\\n  $USER\n\n# Clone dotfiles\nRUN vcsh clone https://github.com/cloud-computer/dotfiles\n\n# Cache tmux plugins\nRUN /opt/tpm/bin/install_plugins\n\n# Take ownership of user's home and applications directory\nRUN chown -R $USER:$USER $HOME /opt\n\n# Cache zsh plugins\nRUN gosu $USER zsh -c \"source $HOME/.zshrc\"\n\n# Ensure x server socket directory exists, owned by root, and world accessible\nRUN mkdir -p /tmp/.X11-unix && \\\n   chmod 1777 /tmp/.X11-unix\n\n# Record container build metadata\nARG CONTAINER_BUILD_DATE\nARG CONTAINER_GIT_SHA\nENV CONTAINER_BUILD_DATE $CONTAINER_BUILD_DATE\nENV CONTAINER_GIT_SHA $CONTAINER_GIT_SHA\nENV CONTAINER_IMAGE_NAME cloud-computer/cloud-computer\n\n# Become non-root user\nUSER $USER\nWORKDIR $HOME\n\n# Add application launchers\nADD launcher-broadway.sh launcher-vnc.sh make-fullscreen.sh /cloud-computer/\n\n# Run indefinitely\nCMD sleep infinity\n"
}