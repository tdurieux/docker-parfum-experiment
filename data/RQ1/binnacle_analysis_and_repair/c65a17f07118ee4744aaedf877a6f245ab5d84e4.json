{
  "startTime": 1674245165203,
  "endTime": 1674245165891,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 13,
        "columnEnd": 51
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 13,
        "columnEnd": 62
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 65,
        "columnStart": 12,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 32,
        "columnEnd": 43
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 32,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 13,
        "columnStart": 33,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 12,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 12,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 13,
        "columnStart": 33,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 12,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 86
      }
    }
  ],
  "repairedDockerfile": "FROM        phusion/baseimage:latest\nMAINTAINER  Mickael Cassy <twitter@mickaelcassy>\nENV         HOME /root\nRUN         /etc/my_init.d/00_regen_ssh_host_keys.sh\nCMD         [\"/sbin/my_init\"]\n\n\nRUN apt-get -y update && apt-get -y --no-install-recommends install \\\n            automake libtool curl gzip wget unzip libxml2 \\\n            libxml2-dev libgd2-xpm-dev libgeoip-dev libperl-dev \\\n            libxslt1-dev libxslt1.1 libssl-dev make g++ php5-fpm \\\n            subversion pkg-config libcppunit-dev \\\n            libcurl4-openssl-dev libncurses-dev php5-common \\\n            php5-cli screen && rm -rf /var/lib/apt/lists/*;\n\n# Gets PCRE\nWORKDIR     /install\nRUN (wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.36.tar.bz2) && (tar -xjf pcre-8.36.tar.bz2) && (rm pcre-8.36.tar.bz2) && \\\n# Gets Nginx Developer Kit\n            (wget https://github.com/simpl/ngx_devel_kit/archive/v0.2.19.zip) && (unzip v0.2.19.zip) && (rm v0.2.19.zip) && \\\n# Gets Zlib\n            ( wget https://zlib.net/zlib-1.2.8.tar.gz) && (tar -xzf zlib-1.2.8.tar.gz) && (rm zlib-1.2.8.tar.gz) && \\\n# Installs Nginx\n            ( wget https://nginx.org/download/nginx-1.8.0.tar.gz) && (tar -xzf nginx-1.8.0.tar.gz) && (rm nginx-1.8.0.tar.gz)\nWORKDIR     /install/nginx-1.8.0\nRUN         (sed -i \"s/static char ngx_http_server_string\\[\\] = \\\"Server: nginx\\\" CRLF;/static char ngx_http_server_string\\[\\] = \\\"Server: Lol web server\\\" CRLF;/g\" /install/nginx-1.8.0/src/http/ngx_http_header_filter_module.c) && \\\n            (sed -i \"s/static char ngx_http_server_full_string\\[\\] = \\\"Server: \\\" NGINX_VER CRLF;/static char ngx_http_server_full_string\\[\\] = \\\"Server: Lol web server\\\" CRLF;/g\" /install/nginx-1.8.0/src/http/ngx_http_header_filter_module.c)\nRUN mkdir -p /var/lib/nginx/body && \\\n            ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n              --prefix=/usr/share/nginx \\\n              --conf-path=/etc/nginx/nginx.conf \\\n              --error-log-path=/var/log/nginx/error.log \\\n              --http-client-body-temp-path=/var/lib/nginx/body \\\n              --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \\\n              --http-log-path=/var/log/nginx/access.log \\\n              --http-proxy-temp-path=/var/lib/nginx/proxy \\\n              --http-scgi-temp-path=/var/lib/nginx/scgi \\\n              --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \\\n              --lock-path=/var/lock/nginx.lock \\\n              --pid-path=/run/nginx.pid \\\n              --with-pcre-jit \\\n              --with-debug \\\n              --with-http_addition_module \\\n              --with-http_dav_module \\\n              --with-http_flv_module \\\n              --with-http_geoip_module \\\n              --with-http_gzip_static_module \\\n              --with-http_image_filter_module \\\n              --with-http_mp4_module \\\n              --with-http_perl_module \\\n              --with-http_random_index_module \\\n              --with-http_realip_module \\\n              --with-http_secure_link_module \\\n              --with-http_stub_status_module \\\n              --with-http_ssl_module \\\n              --with-http_sub_module \\\n              --with-http_xslt_module \\\n              --with-ipv6 \\\n              --with-sha1=/usr/include/openssl \\\n              --with-md5=/usr/include/openssl \\\n              --with-mail \\\n              --with-mail_ssl_module \\\n              --with-http_spdy_module \\\n              --with-pcre=`pwd`/../pcre-8.36 \\\n              --with-zlib=`pwd`/../zlib-1.2.8 \\\n              --add-module=`pwd`/../ngx_devel_kit-0.2.19 && \\\n            (make) && (sudo make install) && (ln -s `pwd`/objs/nginx /bin/nginx) && \\\n            #we're not displaying our nginx version to the world\n            (sed -i \"s/nginx\\/\\$nginx_version;/web\\/lol;/g\" /etc/nginx/fastcgi.conf)\n\n# Installs libtorrent\nWORKDIR     /rtorrent\nRUN         (wget -O libtorrent-0.13.4.tar.gz https://github.com/rakshasa/libtorrent/archive/0.13.4.tar.gz) && \\\n            (tar -xzf libtorrent-0.13.4.tar.gz) && (rm libtorrent-0.13.4.tar.gz)\nWORKDIR     libtorrent-0.13.4\nRUN (sh autogen.sh) && ( ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\") && (make) && (make install)\n\n# Installs xmlrpc\nRUN apt-get -y --no-install-recommends install libxmlrpc-core-c3 libxmlrpc-core-c3-dev && rm -rf /var/lib/apt/lists/*;\n\n# Installs rtorrent\nWORKDIR     /rtorrent\nRUN         (wget -O rtorrent-0.9.4.tar.gz https://github.com/rakshasa/rtorrent/archive/0.9.4.tar.gz) && \\\n            (tar -xzf rtorrent-0.9.4.tar.gz) && (rm rtorrent-0.9.4.tar.gz)\nWORKDIR     rtorrent-0.9.4\nRUN (sh autogen.sh) && ( ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-xmlrpc-c) && (make) && (make install) && (ldconfig)\n\n# Gets ruTorrent\nWORKDIR     /var/www\nRUN         (svn checkout http://rutorrent.googlecode.com/svn/trunk/ .) && \\\n            (rm -rf .rutorrent/conf/) && \\\n            # http://stackoverflow.com/questions/8751221/php-timezone-database-is-corrupt-error\n            (mkdir -p rutorrent/usr/share/zoneinfo) && \\\n            (cp -rf /usr/share/zoneinfo/* rutorrent/usr/share/zoneinfo/) && \\\n            (chown -R www-data:www-data ../www) && (chmod -R 755 ../www)\n\n# Configures fpm\nRUN         (sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" /etc/php5/fpm/php.ini) && \\\n            (sed -i \"s/;catch_workers_output = yes/catch_workers_output = no/\" /etc/php5/fpm/pool.d/www.conf) && \\\n            (sed -i \"s/;daemonize = yes/;daemonize = no/g\" /etc/php5/fpm/php-fpm.conf) && \\\n            (sed -i \"s/;include=\\/etc\\/php5\\/fpm\\/*.conf/include=\\/etc\\/php5\\/fpm\\/pool.d\\/*.conf/g\" /etc/php5/fpm/php-fpm.conf) && \\\n            (sed -i \"s/;chroot =/chroot = \\/var\\/www\\/rutorrent/g\" /etc/php5/fpm/pool.d/www.conf) && \\\n            # We disable the logs\n            (sed -i 's/^error_log = .*log/error_log = \\/dev\\/null/g' /etc/php5/fpm/php-fpm.conf)\n\n# Creates nginx Service\nWORKDIR     /etc/service/nginx\nADD         ./nginx.conf /etc/nginx/nginx.conf\nADD         ./run_nginx.sh /etc/service/nginx/run\nRUN         chmod +x ./run\n\n# Creates fpm Service\nWORKDIR     /etc/service/fpm\nADD         ./run_fpm.sh /etc/service/fpm/run\nRUN         chmod +x ./run\n\n# Creates rtorrent Service\nWORKDIR     /etc/service/rtorrent\nADD         ./run_rtorrent.sh /etc/service/rtorrent/run\nRUN         chmod +x ./run\n\n# Add custom config files\nADD         ./rutorrent_conf/ /var/www/rutorrent/conf/\nADD         .rtorrent.rc /root/.rtorrent.rc\n\n# Cleans up APT when done.\nRUN         apt-get -y remove \\\n                        automake libtool libxml2-dev libgd2-xpm-dev \\\n                        libgeoip-dev libperl-dev libxslt1-dev libssl-dev make \\\n                        g++ pkg-config libcppunit-dev libcurl4-openssl-dev \\\n                        libncurses-dev && \\\n            apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n"
}