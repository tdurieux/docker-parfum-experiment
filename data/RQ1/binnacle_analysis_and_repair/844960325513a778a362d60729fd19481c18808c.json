{
  "startTime": 1674237012277,
  "endTime": 1674237012398,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Наследуемся от CentOS 7\nFROM centos:7\n\n# Выбираем рабочую папку\nWORKDIR /root\n\n# Устанавливаем wget и скачиваем Go\nRUN yum install -y wget && \\\n    yum install -y git && \\\n    # yum install -y net-tools && \\\n    wget https://storage.googleapis.com/golang/go1.11.4.linux-amd64.tar.gz && rm -rf /var/cache/yum\n\n# Устанавливаем Go, создаем workspace и папку проекта\nRUN tar -C /usr/local -xzf go1.11.4.linux-amd64.tar.gz && \\\n    mkdir go && mkdir go/src && mkdir go/bin && mkdir go/pkg && \\\n    mkdir go/src/dumb && rm go1.11.4.linux-amd64.tar.gz\n\n# Задаем переменные окружения для работы Go\nENV PATH=${PATH}:/usr/local/go/bin GOROOT=/usr/local/go GOPATH=/root/go\n\n# Копируем наш исходный main.go внутрь контейнера, в папку go/src/dumb\nADD main.go go/src/dumb\n\n# Копируем пакеты\nCOPY go-path/src go/src\n\n# Устанавливаем пакеты\n# Компилируем и устанавливаем наш сервер\nRUN go get -u github.com/valyala/fasthttp && \\\n    go get -u github.com/mailru/easyjson && \\\n    go get -u github.com/valyala/fastjson && \\\n    go build dumb && go install dumb\n\n# Открываем 80-й порт наружу\nEXPOSE 80\n\n\n# sysctl -a | grep 'net.ipv4.tcp_window_scaling\\|tcp_low_latency\\|tcp_sack\\|tcp_timestamps\\|tcp_fastopen' &&\\\n\n# Запускаем наш сервер\n#CMD ifconfig | grep mtu && head -n 26 /proc/cpuinfo && GODEBUG=memprofilerate=0 ./go/bin/dumb\nCMD grep \"model name\" /proc/cpuinfo | head -n 1 && \\\n    cat /proc/version &&\\\n    GODEBUG=memprofilerate=0 ./go/bin/dumb\n"
}