{
  "startTime": 1674245784956,
  "endTime": 1674245785231,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 22,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 22,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 2,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "FROM debian:stretch\n\nWORKDIR /workspace\nRUN mkdir -p /workspace\nENV WORKSPACE=/workspace \\\n  TERM=xterm\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  build-essential \\\n  ca-certificates \\\n  curl \\\n  git \\\n  jq \\\n  dnsutils \\\n  openssh-client \\\n  python \\\n  wget \\\n  apt-transport-https \\\n  gnupg2 \\\n  shellcheck \\\n  software-properties-common \\\n  lsb-release \\\n  gettext-base \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install gcloud\nENV CLOUD_SDK_VERSION=247.0.0\nENV PATH=/google-cloud-sdk/bin:/workspace:${PATH} \\\n  CLOUDSDK_CORE_DISABLE_PROMPTS=1\n\nRUN wget -q https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n  tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz -C / && \\\n  rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n  /google-cloud-sdk/install.sh \\\n  --disable-installation-options \\\n  --bash-completion=false \\\n  --path-update=false \\\n  --usage-reporting=false && \\\n  gcloud components install alpha beta kubectl docker-credential-gcr && \\\n  gcloud info | tee /workspace/gcloud-info.txt\n\n# Docker-in-docker\nRUN curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg \\\n  | apt-key add - && \\\n  add-apt-repository \\\n  \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") \\\n  $(lsb_release -cs) stable\"\n\nENV DOCKER_VERSION=18.06.1*\n\nRUN apt-get update && \\\n  apt-get install -y --no-install-recommends docker-ce=${DOCKER_VERSION} && \\\n  sed -i 's/cgroupfs_mount$/#cgroupfs_mount\\n/' /etc/init.d/docker && rm -rf /var/lib/apt/lists/*;\n\n# Move Docker's storage location\nRUN echo 'DOCKER_OPTS=\"${DOCKER_OPTS} --data-root=/docker-graph\"' | \\\n  tee --append /etc/default/docker\nRUN mkdir /docker-graph\n\n\nRUN apt-get install -y --no-install-recommends dirmngr && rm -rf /var/lib/apt/lists/*;\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 379CE192D401AB61\nRUN echo \"deb https://dl.bintray.com/loadimpact/deb stable main\" | tee -a /etc/apt/sources.list\nRUN apt-get update && apt-get install -y --no-install-recommends k6 && rm -rf /var/lib/apt/lists/*\n\n# Install Helm\nENV HELM_VERSION=v2.0.0\n\nENV HELM_FILE_NAME=helm-${HELM_VERSION}-linux-amd64.tar.gz\nENV HELM_URL=https://storage.googleapis.com/kubernetes-helm/${HELM_FILE_NAME}\n\nRUN curl -f -o /tmp/$HELM_FILE_NAME ${HELM_URL} \\\n  && tar -zxvf /tmp/${HELM_FILE_NAME} -C /tmp \\\n  && mv /tmp/linux-amd64/helm /usr/local/bin/helm \\\n  && rm -rf /tmp/linux-amd64/helm\n\nRUN helm init --client-only\n\nRUN mkdir /test-infra\n\nCOPY prow/scripts/library.sh /test-infra/prow/scripts/library.sh\nCOPY prow/scripts/cluster-integration/helpers/cleanup-cluster.sh /test-infra/prow/scripts/cluster-integration/helpers/cleanup-cluster.sh\nCOPY prow/scripts/cluster-integration/helpers/create-cluster.sh /test-infra/prow/scripts/cluster-integration/helpers/create-cluster.sh\nCOPY prow/scripts/cluster-integration/helpers/create-image.sh /test-infra/prow/scripts/cluster-integration/helpers/create-image.sh\nCOPY prow/scripts/cluster-integration/helpers/delete-image.sh /test-infra/prow/scripts/cluster-integration/helpers/delete-image.sh\nCOPY prow/scripts/cluster-integration/helpers/deprovision-gke-cluster.sh /test-infra/prow/scripts/cluster-integration/helpers/deprovision-gke-cluster.sh\nCOPY prow/scripts/cluster-integration/helpers/get-helm-certs.sh /test-infra/prow/scripts/cluster-integration/helpers/get-helm-certs.sh\nCOPY prow/scripts/cluster-integration/helpers/install-kyma.sh /test-infra/prow/scripts/cluster-integration/helpers/install-kyma.sh\nCOPY prow/scripts/cluster-integration/helpers/provision-gke-cluster.sh /test-infra/prow/scripts/cluster-integration/helpers/provision-gke-cluster.sh\nCOPY prow/scripts/cluster-integration/helpers/create-config-map.sh /test-infra/prow/scripts/cluster-integration/helpers/create-config-map.sh\n\nRUN mkdir /perf-tests\n\nCOPY performance-tools/performance-cluster/runner.sh /perf-tests/runner.sh\nCOPY performance-tools/performance-cluster/cluster.sh /perf-tests/cluster.sh\nCOPY performance-tools/performance-cluster/scripts/k6-runner.sh /perf-tests/scripts/k6-runner.sh\nCOPY performance-tools/performance-cluster/scripts/kyma-gke-cluster.sh /perf-tests/scripts/kyma-gke-cluster.sh\n\nWORKDIR /perf-tests\n\nCMD [\"./runner.sh\"]"
}