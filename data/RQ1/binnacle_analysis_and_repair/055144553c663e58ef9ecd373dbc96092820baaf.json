{
  "startTime": 1674234065481,
  "endTime": 1674234065661,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:latest as builder\nMAINTAINER Jessica Frazelle <jess@linux.com>\n\nENV PATH /go/bin:/usr/local/go/bin:$PATH\nENV GOPATH /go\n\nRUN apt-get update && apt-get install -y \\\n\tapt-transport-https \\\n\tca-certificates \\\n\tcurl \\\n\tgcc \\\n\tgit \\\n\tmake \\\n\truby-dev \\\n\truby \\\n\t--no-install-recommends \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Add yarn to apt repos.\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n\n# Setup node install.\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\n\nRUN apt-get update && apt-get install -y \\\n\tnodejs \\\n\tyarn \\\n\t--no-install-recommends \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nENV CONSUL_VERSION v1.5.1\n\nRUN go get github.com/hashicorp/consul\n\nWORKDIR /go/src/github.com/hashicorp/consul\n\nRUN git checkout \"${CONSUL_VERSION}\"\n\n# Install deps for UI.\nRUN gem install \\\n\tbundler \\\n\t--no-ri --no-rdoc\n\nRUN cd ui-v2 \\\n\t&& yarn install \\\n\t&& make \\\n\t&& rm -rf ../pkg/web_ui \\\n\t&& mkdir -p ../pkg \\\n\t&& cp -r dist ../pkg/web_ui && yarn cache clean;\n\nRUN TERM=xterm XC_ARCH=\"amd64\" XC_OS=\"linux\" LD_FLAGS=\" -extldflags -static\" make tools static-assets bin \\\n\t&& mv bin/consul /usr/bin/consul\n\nFROM alpine:latest\n\nCOPY --from=builder /usr/bin/consul /usr/bin/consul\nCOPY --from=builder /etc/ssl/certs/ /etc/ssl/certs\n\nENTRYPOINT [ \"consul\" ]\nCMD [ \"--help\" ]\n"
}