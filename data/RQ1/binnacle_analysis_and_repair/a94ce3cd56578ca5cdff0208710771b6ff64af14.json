{
  "startTime": 1674234585760,
  "endTime": 1674234586387,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 1,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 1,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 1,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 1,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 1,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 1,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 1,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 1,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 1,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##\n## BUILD image for the ChIPseq pipeline\n## AVAILABLE COMMANDS:\n##    build:\n##      $ docker build -t imbforge/chipseq:v1 .\n##    push to the docker hub:\n##      $ docker push imbforge/chipseq:v1\n##    run a container:\n##      $ docker run --rm -v ${WORKDIR}:${WORKDIR} -w ${WORKDIR} -t imbforge/chipseq:v1 \\\n##         -n ${MAX_PARALLEL_PROCS} ${WORKDIR}/chipseq_v1.2.txt ${WORKDIR}/rawdata/*.fastq.gz\n##    run an interactive shell:\n##      $ docker run --entrypoint=/bin/bash -ti imbforge/chipseq:v1 -s\n##\n#FROM ubuntu:14.04\nFROM debian:stable\nMAINTAINER Sergi Sayols <s.sayolspuig@imb-mainz.de>\nENTRYPOINT [\"/opt/bpipe/default/bin/bpipe\",\"run\"]\n\n## env vars\nENV HOME /home\nENV DEBIAN_FRONTEND noninteractive\nENV TOOL_DEPENDENCIES /opt\n\n## create user to avoid running the thing as root\n# Note: Users and groups in an image get a non-deterministic UID/GID in that the\n#   \"next\" UID/GID gets assigned regardless of image rebuilds. So, if itâ€™s critical,\n#   you should assign an explicit UID/GID.\n#RUN groupadd -r imbcf && \\\n#\tuseradd -r -g imbcf -s /bin/bash -c \"Docker image user\" imbcf\n\n## install all deps in a single RUN statement to save space\nRUN apt-get update && apt-get dist-upgrade -y && \\\n\tapt-get install --no-install-recommends -y apt-utils && \\\n\tapt-get install --no-install-recommends -y build-essential gcc g++ gfortran make && \\\n\tapt-get install --no-install-recommends -y libboost-dev && \\\n\tapt-get install --no-install-recommends -y xorg-dev libglu1-mesa-dev libpango1.0-dev && \\\n\tapt-get install --no-install-recommends -y libxml2-dev libcurl4-openssl-dev && \\\n\tapt-get install --no-install-recommends -y openjdk-7-jre-headless && \\\n\tapt-get install --no-install-recommends -y python2.7-dev python-numpy python-matplotlib python-setuptools && \\\n\tapt-get install --no-install-recommends -y zlib1g-dev libncurses5-dev && \\\n\tapt-get install --no-install-recommends -y bc && \\\n\tapt-get clean autoclean && \\\n\tapt-get autoremove -y && \\\n\trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n## install R and the needed packages\nCOPY ./deps/R-3.2.2 /usr/local/src/R-3.2.2\nWORKDIR /usr/local/src/R-3.2.2\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/R/3.2.2 --with-readline=no && \\\n\tmake && \\\n\tmake install && \\\n\t/opt/R/3.2.2/bin/Rscript -e 'source(\"http://bioconductor.org/biocLite.R\"); biocLite(c(\"GenomicAlignments\",\"GenomicRanges\",\"Rsamtools\",\"ShortRead\"),ask=FALSE)' && \\\n\t/opt/R/3.2.2/bin/Rscript -e 'install.packages(c(\"snow\",\"knitr\"),dependencies=TRUE,repos=\"http://cran.rstudio.org\")' && \\\n\trm -rf /usr/local/src/R-3.2.2 && \\\n\tln -s /opt/R/3.2.2 /opt/R/latest && \\\n\tln -s /opt/R/3.2.2 /opt/R/default && \\\n\techo \"export PATH=/opt/R/3.2.2/bin:\\$PATH\" > /opt/R/3.2.2/env.sh && \\\n    chmod ugo+rx /opt/R/3.2.2/env.sh\n\n## install SPP\nCOPY ./deps/spp_1.11.tar.gz /usr/local/src/\nWORKDIR /usr/local/src\nRUN\t/opt/R/3.2.2/bin/R CMD INSTALL spp_1.11.tar.gz && \\\n\trm spp_1.11.tar.gz\n\n## install FastQC\nCOPY ./deps/FastQC /opt/fastqc/0.11.3\nRUN\tln -s /opt/fastqc/0.11.3 /opt/fastqc/latest && \\\n\tln -s /opt/fastqc/0.11.3 /opt/fastqc/default && \\\n\techo \"export PATH=/opt/fastqc/0.11.3:\\$PATH\" > /opt/fastqc/0.11.3/env.sh && \\\n    chmod ugo+rx /opt/fastqc/0.11.3/env.sh\n\n## install bowtie\nCOPY ./deps/bowtie-1.1.1 /opt/bowtie/1.1.1\nRUN\tln -s /opt/bowtie/1.1.1 /opt/bowtie/latest && \\\n\tln -s /opt/bowtie/1.1.1 /opt/bowtie/default && \\\n\techo \"export PATH=/opt/bowtie/1.1.1:\\$PATH\" > /opt/bowtie/1.1.1/env.sh && \\\n    chmod ugo+rx /opt/bowtie/1.1.1/env.sh\n\n## install samtools\nCOPY ./deps/samtools-1.2 /usr/local/src/samtools-1.2\nWORKDIR /usr/local/src/samtools-1.2\nRUN\tmake && \\\n\tmake install prefix=/opt/samtools/1.2 && \\\n\trm -rf /usr/local/src/samtools-1.2 && \\\n\tln -s /opt/samtools/1.2 /opt/samtools/latest && \\\n\tln -s /opt/samtools/1.2 /opt/samtools/default && \\\n\techo \"export PATH=/opt/samtools/1.2/bin:\\$PATH\" > /opt/samtools/1.2/env.sh && \\\n    chmod ugo+rx /opt/samtools/1.2/env.sh\n\n## install Picard tools\nCOPY ./deps/picard-tools-1.123 /opt/picard/1.123\nRUN ln -s /opt/picard/1.123 /opt/picard/latest && \\\n\tln -s /opt/picard/1.123 /opt/picard/default && \\\n\techo \"export PATH=/opt/picard/1.123:\\$PATH\" > /opt/picard/1.123/env.sh && \\\n    chmod ugo+rx /opt/picard/1.123/env.sh\n\n## install bedtools\nCOPY ./deps/bedtools2-2.25.0 /usr/local/src/bedtools2-2.25.0\nWORKDIR /usr/local/src/bedtools2-2.25.0\nRUN make && \\\n\tmake install prefix=/opt/BEDTools/2.25.0 && \\\n\trm -rf /usr/local/src/bedtools2-2.25.0 && \\\n\tln -s /opt/BEDTools/2.25.0 /opt/BEDTools/latest && \\\n\tln -s /opt/BEDTools/2.25.0 /opt/BEDTools/default && \\\n\techo \"export PATH=/opt/BEDTools/2.25.0/bin:\\$PATH\" > /opt/BEDTools/2.25.0/env.sh && \\\n    chmod ugo+rx /opt/BEDTools/2.25.0/env.sh\n\n## install UCSC tools\nCOPY ./deps/ucsc-2014-02-05 /opt/ucsc/2014-02-05\nRUN ln -s /opt/ucsc/2014-02-05 /opt/ucsc/latest && \\\n\tln -s /opt/ucsc/2014-02-05 /opt/ucsc/default && \\\n\techo \"export PATH=/opt/ucsc/2014-02-05/:\\$PATH\" > /opt/ucsc/2014-02-05/env.sh && \\\n    chmod ugo+rx /opt/ucsc/2014-02-05/env.sh\n\n## install macs2\nCOPY ./deps/macs2-2.1.0 /usr/local/src/macs2-2.1.0\nWORKDIR /usr/local/src/macs2-2.1.0\nRUN\tmkdir -p /opt/macs2/2.1.0/lib/python2.7/site-packages && \\\n\texport PYTHONPATH=/opt/macs2/2.1.0/lib/python2.7/site-packages:\\$PYTHONPATH && \\\n\tpython setup.py build && \\\n\tpython setup.py install --prefix=/opt/macs2/2.1.0 && \\\n\trm -rf /usr/local/src/macs2-2.1.0 && \\\n\tln -s /opt/macs2/2.1.0 /opt/macs2/latest && \\\n\tln -s /opt/macs2/2.1.0 /opt/macs2/default && \\\n\techo \"export PATH=/opt/macs2/2.1.0/bin:\\$PATH\" > /opt/macs2/2.1.0/env.sh && \\\n\techo \"export PYTHONPATH=/opt/macs2/2.1.0/lib/python2.7/site-packages:\\$PYTHONPATH\" >> /opt/macs2/2.1.0/env.sh && \\\n    chmod ugo+rx /opt/macs2/2.1.0/env.sh\n\n## install bpipe\nCOPY ./deps/bpipe-0.9.8.7 /opt/bpipe/0.9.8.7\nRUN ln -s /opt/bpipe/0.9.8.7 /opt/bpipe/latest && \\\n\tln -s /opt/bpipe/0.9.8.7 /opt/bpipe/default && \\\n\techo \"export PATH=\\${TOOL_DEPENDENCIES}/bpipe/0.9.8.7/bin/:\\$PATH\" > /opt/bpipe/0.9.8.7/env.sh && \\\n    chmod ugo+rx /opt/bpipe/0.9.8.7/env.sh\n\n## install pipelines and wrappers\nCOPY ./deps/imb-forge /opt/imb-forge\nRUN ln -s /opt/imb-forge/pipelines/chipseq/1.2 /opt/imb-forge/pipelines/chipseq/latest && \\\n\tln -s /opt/imb-forge/pipelines/chipseq/1.2 /opt/imb-forge/pipelines/chipseq/default\n\n## post install tasks\nWORKDIR /\nRUN rm -rf /usr/local/src/*\n#USER imbcf\n"
}