{
  "startTime": 1674240881647,
  "endTime": 1674240881710,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 26,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 26,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust AS builder\n\nWORKDIR /mountstatus\n\n# We'll update the dependencies first so the build / compile stage for all\n# of our dependencies can be cached:\n# Until https://github.com/rust-lang/cargo/issues/1891 lands we'll use a fake main app\n# to avoid clearing our cache except when dependencies actually change.\nCOPY Cargo.toml Cargo.lock /mountstatus/\nRUN mkdir /mountstatus/src && echo \"fn main() {}\" > /mountstatus/src/main.rs && cargo build\n\n# Now we'll build the actual project:\nCOPY src/ /mountstatus/src/\nRUN cargo build\n\nFROM debian:stretch\n\n# FIXME: we can't test the binary without a local syslog daemon to connect to until we make this configurable:\nRUN apt-get -qy update && apt-get -qy --no-install-recommends install inetutils-syslogd && apt-get clean && rm -rf /var/lib/apt/lists/*;\nRUN echo \"*.* /dev/console\" > /etc/syslog.conf\n\nCOPY --from=builder /mountstatus/target/debug/mount_status_monitor /usr/local/sbin/\n\nENTRYPOINT service inetutils-syslogd start && timeout 8 mount_status_monitor --poll-interval=5\n"
}