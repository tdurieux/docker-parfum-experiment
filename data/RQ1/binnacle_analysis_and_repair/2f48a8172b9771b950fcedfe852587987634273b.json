{
  "startTime": 1674241945339,
  "endTime": 1674241945582,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 1,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 1,
        "columnEnd": 152
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 1,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 1,
        "columnEnd": 152
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 1,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 1,
        "columnEnd": 152
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nMAINTAINER Iliyan Trifonov <iliyan.trifonov@gmail.com>\n\nRUN echo \"deb mirror://mirrors.ubuntu.com/mirrors.txt trusty main restricted universe multiverse\" > /etc/apt/sources.list; \\\n\techo \"deb mirror://mirrors.ubuntu.com/mirrors.txt trusty-updates main restricted universe multiverse\" >> /etc/apt/sources.list; \\\n\techo \"deb mirror://mirrors.ubuntu.com/mirrors.txt trusty-backports main restricted universe multiverse\" >> /etc/apt/sources.list; \\\n\techo \"deb mirror://mirrors.ubuntu.com/mirrors.txt trusty-security main restricted universe multiverse\" >> /etc/apt/sources.list\n\nRUN apt-get update; \\\n\tapt-get -qq -y --no-install-recommends install wget && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-key adv --keyserver keys.gnupg.net --recv-keys 14AA40EC0831756756D7F66C4F4EA0AAE5267A6C; \\\n\techo \"deb http://ppa.launchpad.net/ondrej/php5-5.6/ubuntu trusty main\" >> /etc/apt/sources.list; \\\n\techo \"deb-src http://ppa.launchpad.net/ondrej/php5-5.6/ubuntu trusty main\" >> /etc/apt/sources.list\n\nRUN wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add - > /dev/null 2>&1; \\\n\techo \"deb http://pkg.jenkins-ci.org/debian binary/\" > /etc/apt/sources.list.d/jenkins.list\n\nRUN export DEBIAN_FRONTEND=noninteractive; \\\n\tapt-get update; \\\n\tapt-get -qq -y --no-install-recommends install php5 php5-cli php5-xsl php5-json php5-curl php5-sqlite php5-mysqlnd php5-xdebug php5-intl php5-mcrypt php-pear curl git ant jenkins && rm -rf /var/lib/apt/lists/*;\n\nADD ./jenkins_configure.sh /jenkins_configure.sh\nADD ./wait4jenkins.sh /wait4jenkins.sh\n\nRUN sh /jenkins_configure.sh\n\nRUN sed -i 's|disable_functions.*=|;disable_functions=|' /etc/php5/cli/php.ini; \\\n\techo \"xdebug.max_nesting_level = 500\" >> /etc/php5/mods-available/xdebug.ini\n\nRUN mkdir -p /home/jenkins/composerbin && chown -R jenkins:jenkins /home/jenkins; \\\n\tsudo -H -u jenkins bash -c ' \\\n\t\tcurl -sS https://getcomposer.org/installer | php -- --install-dir=/home/jenkins/composerbin --filename=composer;'; \\\n\tln -s /home/jenkins/composerbin/composer /usr/local/bin/; \\\n\tsudo -H -u jenkins bash -c ' \\\n\t\texport COMPOSER_BIN_DIR=/home/jenkins/composerbin; \\\n\t\texport COMPOSER_HOME=/home/jenkins; \\\n\t\tcomposer global require \"phpunit/phpunit=*\" --prefer-source --no-interaction; \\\n\t\tcomposer global require \"squizlabs/php_codesniffer=*\" --prefer-source --no-interaction; \\\n\t\tcomposer global require \"phploc/phploc=*\" --prefer-source --no-interaction; \\\n\t\tcomposer global require \"pdepend/pdepend=*\" --prefer-source --no-interaction; \\\n\t\tcomposer global require \"phpmd/phpmd=*\" --prefer-source --no-interaction; \\\n\t\tcomposer global require \"sebastian/phpcpd=*\" --prefer-source --no-interaction; \\\n\t\tcomposer global require \"theseer/phpdox=*\" --prefer-source --no-interaction; '; \\\n\tln -s /home/jenkins/composerbin/pdepend /usr/local/bin/; \\\n\tln -s /home/jenkins/composerbin/phpcpd /usr/local/bin/; \\\n\tln -s /home/jenkins/composerbin/phpcs /usr/local/bin/; \\\n\tln -s /home/jenkins/composerbin/phpdox /usr/local/bin/; \\\n\tln -s /home/jenkins/composerbin/phploc /usr/local/bin/; \\\n\tln -s /home/jenkins/composerbin/phpmd /usr/local/bin/; \\\n\tln -s /home/jenkins/composerbin/phpunit /usr/local/bin/\n\nRUN echo 'if [ -z \"$TIME_ZONE\" ]; then echo \"No TIME_ZONE env set!\" && exit 1; fi' > /set_timezone.sh; \\\n\techo \"sed -i 's|;date.timezone.*=.*|date.timezone='\\$TIME_ZONE'|' /etc/php5/cli/php.ini;\" >> /set_timezone.sh; \\\n\techo \"echo \\$TIME_ZONE > /etc/timezone;\" >> /set_timezone.sh; \\\n\techo \"export DEBCONF_NONINTERACTIVE_SEEN=true DEBIAN_FRONTEND=noninteractive;\" >> /set_timezone.sh; \\\n\techo \"dpkg-reconfigure tzdata\" >> /set_timezone.sh; \\\n\techo \"echo time zone set to: \\$TIME_ZONE\"  >> /set_timezone.sh\n\nRUN echo 'if [ -n \"$TIME_ZONE\" ]; then sh /set_timezone.sh; fi;' > /run_all.sh; \\\n\techo \"curl -o /var/lib/jenkins/jobs/php-template/config.xml https://raw.githubusercontent.com/sebastianbergmann/php-jenkins-template/master/config.xml \" >> /run_all.sh; \\\n\techo \"service jenkins start\" >> /run_all.sh; \\\n\techo \"tail -f /var/log/jenkins/jenkins.log;\" >> /run_all.sh\n\nEXPOSE 8080\n\nCMD [\"sh\", \"/run_all.sh\"]\n"
}