{
  "startTime": 1674251172331,
  "endTime": 1674251172899,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 11,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 11,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 11,
        "columnEnd": 47
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 49,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 11,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 11,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 27,
        "columnStart": 33,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#This Dockerfile has not been completely validated yet and is just\n#the initial version.\n\nFROM ppc64le/openjdk:8-jdk\nMAINTAINER Priya Seth <sethp@us.ibm.com>\n\nENV JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-ppc64el\nENV PATH=$JAVA_HOME/bin:$PATH\nENV RUBY_PLATFORM=java\nENV ANT_HOME=/opt/logstash/apache-ant-1.9.4\nENV PATH=$ANT_HOME/bin:$PATH\n\n\n# Install ELK Required Dependancies\nRUN set -x \\\n        && apt-get -qq update \\\n        && apt-get install --no-install-recommends -yq ca-certificates \\\n        && echo \"NOTE: the 'ffi-rzmq-core' gem is very picky about where it looks for libzmq.so\" \\\n        && mkdir -p /usr/local/lib && ln -s /usr/lib/*/libzmq.so.3 /usr/local/lib/libzmq.so \\\n        && groupadd -r kibana && useradd -r -m -g kibana kibana \\\n        && groupadd -r logstash && useradd -r -m -g logstash logstash \\\n        && apt-get -qq update && apt-get -yq install apache2-utils \\\n                                               supervisor \\\n                                               libzmq3-dev \\\n                                               nginx --no-install-recommends \\\n                                               git \\\n                                               bcrypt \\\n                                               build-essential \\\n        #Install Elasticsearch\n        && cd /opt \\\n        && wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.5.1.tar.gz \\\n        && tar -xvzf elasticsearch-5.5.1.tar.gz \\\n        && echo \"Creating Elasticsearch Paths...\" \\\n        && for path in \\\n                /opt/elasticsearch-5.5.1/data \\\n                /opt/elasticsearch-5.5.1/logs \\\n                /opt/elasticsearch-5.5.1/config \\\n                /opt/elasticsearch-5.5.1/config/scripts \\\n        ; do \\\n        mkdir -p \"$path\"; \\\n        done \\\n        #Install Kibana\n        && cd /opt \\\n        && git clone https://github.com/elastic/kibana.git && cd kibana && git checkout v5.5.1 \\\n        && wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh | sh \\\n        && bash -l -c 'nvm install \"$(cat .node-version)\"' \\\n        && bash -l -c \"npm install\" \\\n        #Install logstash\n        && cd /opt \\\n        && git clone https://github.com/elastic/logstash.git && cd logstash && git checkout v5.5.1 \\\n        && curl -f -sSL https://rvm.io/mpapis.asc | gpg --batch --import - \\\n        && curl -f -sSL https://get.rvm.io | bash -s -- \\\n        && bash -l -c \"rvm install jruby 1.7.25 && rvm use jruby-1.7.25 && rake bootstrap\" \\\n\t\n# Configure Nginx\nADD config/nginx/kibana.conf /etc/nginx/sites-available/ && rm elasticsearch-5.5.1.tar.gz && rm -rf /var/lib/apt/lists/*;\nRUN cd /opt \\\n        && echo \"Configuring Nginx...\" \\\n        && mkdir -p /var/www \\\n        && ln -sf /dev/stdout /var/log/nginx/access.log \\\n        && ln -sf /dev/stderr /var/log/nginx/error.log \\\n        && echo \"\\ndaemon off;\" >> /etc/nginx/nginx.conf \\\n        && rm /etc/nginx/sites-enabled/default \\\n        && ln -s /etc/nginx/sites-available/kibana.conf /etc/nginx/sites-enabled/kibana.conf\n\nRUN ln -s /opt/kibana/bin/kibana /usr/bin && \\\n\tln -s /opt/elasticsearch-5.5.1/bin/elasticsearch /usr/bin && \\\n\tln -s /opt/logstash/bin/logstash /usr/bin\n\n# Add elastic config\nCOPY config/elastic /usr/share/elasticsearch/config\n# Add admin/admin web user account\nCOPY config/nginx/htpasswd /etc/nginx/.htpasswd\n# Add configs\nCOPY config/supervisord/supervisord.conf /etc/supervisor/conf.d/\n\nVOLUME [\"/usr/share/elasticsearch/data\"]\nVOLUME [\"/etc/logstash/conf.d\"]\nVOLUME [\"/etc/nginx\"]\n\nEXPOSE 8080 443 9200 9300\nCMD [bash -l -c \"logstash kibana -p 8080 -e 'input { stdin { } } output { stdout { } }'\" && nohup elasticsearch && bash -l -c \"kibana -p 8080\"]\nCMD [\"/usr/bin/supervisord\"]\n\n"
}