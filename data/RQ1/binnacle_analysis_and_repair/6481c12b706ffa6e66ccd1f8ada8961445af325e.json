{
  "startTime": 1674245117015,
  "endTime": 1674245117213,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 1,
        "columnEnd": 127
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 62,
        "columnEnd": 79
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 16,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nMAINTAINER Justin Shenk <shenk.justin@gmail.com>\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cmake \\\n        git \\\n        wget \\\n        libatlas-base-dev \\\n        libboost-all-dev \\\n        libgflags-dev \\\n        libgoogle-glog-dev \\\n        libhdf5-serial-dev \\\n        libleveldb-dev \\\n        liblmdb-dev \\\n        libopencv-dev \\\n        libprotobuf-dev \\\n        libsnappy-dev \\\n        protobuf-compiler \\\n        python-dev \\\n        python-opencv \\\n        python-matplotlib \\\n        python-numpy \\\n        python-pip \\\n        python-setuptools \\\n        python-scipy \\\n        ffmpeg && \\\n    rm -rf /var/lib/apt/lists/*\n\n\nENV CAFFE_ROOT=/opt/caffe\nWORKDIR $CAFFE_ROOT\n\n# FIXME: use ARG instead of ENV once DockerHub supports this\n# https://github.com/docker/hub-feedback/issues/460\nENV CLONE_TAG=1.0\n\nRUN git clone -b ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git . && \\\n    # pip install --upgrade pip && \\\n    pip install --no-cache-dir wheel && \\\n    cd python && for req in $(cat requirements.txt) pydot; do pip install --no-cache-dir $req; done && cd .. && \\\n    mkdir build && cd build && \\\n    cmake -DCPU_ONLY=1 .. && \\\n    make -j\"$(nproc)\"\n\nENV PYCAFFE_ROOT $CAFFE_ROOT/python\nENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH\nENV PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf && ldconfig\n\nWORKDIR /root\n\nCOPY requirements.txt /root\nRUN cd /root && pip install --no-cache-dir --requirement requirements.txt\n\nCOPY convert.py /root\nCOPY util.py /root\nCOPY config_reader.py /root\nCOPY config /root\nCOPY README.md /root\n\n# Download pre-trained model\nRUN cd /root && mkdir -p model/_trained_COCO && \\\n\twget -nc --directory-prefix=model/_trained_COCO/ https://posefs1.perception.cs.cmu.edu/Users/ZheCao/pose_iter_440000.caffemodel\nCOPY model/_trained_COCO/pose_deploy.prototxt /root/model/_trained_COCO\n\n# Set up notebook config\nCOPY jupyter_notebook_config.py /root/.jupyter/\n\n# Expose Ports for TensorBoard (6006), Ipython (8888)\nEXPOSE 6006 8888\n\nCMD [\"/bin/bash\"]\n"
}