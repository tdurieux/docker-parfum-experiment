{
  "startTime": 1674246076193,
  "endTime": 1674246076369,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 98
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.7.1\n\n# libseccomp in jessie is not _quite_ new enough -- need backports version\nRUN echo 'deb http://httpredir.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/backports.list\n\nRUN apt-get update && apt-get install -y \\\n    build-essential \\\n    curl \\\n    gawk \\\n    iptables \\\n    jq \\\n    pkg-config \\\n    libaio-dev \\\n    libcap-dev \\\n    libprotobuf-dev \\\n    libprotobuf-c0-dev \\\n    libseccomp2/jessie-backports \\\n    libseccomp-dev/jessie-backports \\\n    protobuf-c-compiler \\\n    protobuf-compiler \\\n    python-minimal \\\n    --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\n# install bats\nRUN cd /tmp \\\n    && git clone https://github.com/sstephenson/bats.git \\\n    && cd bats \\\n    && git reset --hard 03608115df2071fff4eaaff1605768c275e5f81f \\\n    && ./install.sh /usr/local \\\n    && rm -rf /tmp/bats\n\n# install criu\nENV CRIU_VERSION 1.7\nRUN mkdir -p /usr/src/criu \\\n    && curl -f -sSL https://github.com/xemul/criu/archive/v${CRIU_VERSION}.tar.gz | tar -v -C /usr/src/criu/ -xz --strip-components=1 \\\n    && cd /usr/src/criu \\\n    && make install-criu && rm -rf /usr/src/criu\n\n# setup a playground for us to spawn containers in\nENV ROOTFS /busybox\nRUN mkdir -p ${ROOTFS} \\\n    && curl -f -o- -sSL 'https://github.com/jpetazzo/docker-busybox/raw/buildroot-2014.11/rootfs.tar' | tar -C ${ROOTFS} -xf -\n\nCOPY script/tmpmount /\nWORKDIR /go/src/github.com/opencontainers/runc\nENTRYPOINT [\"/tmpmount\"]\n\nADD . /go/src/github.com/opencontainers/runc\n"
}