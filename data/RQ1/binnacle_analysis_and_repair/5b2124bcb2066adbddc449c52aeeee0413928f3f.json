{
  "startTime": 1674235012261,
  "endTime": 1674235012351,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Build MS\n#\n\nFROM node:8-stretch-slim as ms-builder\n\nARG git_branch\nARG algolia_update\nARG algolia_project_id\nARG algolia_public_key\nARG algolia_private_key\nARG algolia_index\nARG algolia_skip_sections\nARG metalsmith_skip_sections\n\nRUN apt-get update -qq && apt-get install --no-install-recommends -y build-essential python && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /src\nWORKDIR /src\nADD . /src/\n\nRUN npm install && npm cache clean --force;\n\nRUN make build-swagger\nRUN make build-ngindox\nRUN \\\nGIT_BRANCH=$git_branch \\\nALGOLIA_UPDATE=$algolia_update \\\nALGOLIA_PROJECT_ID=$algolia_project_id \\\nALGOLIA_PUBLIC_KEY=$algolia_public_key \\\nALGOLIA_PRIVATE_KEY=$algolia_private_key \\\nALGOLIA_INDEX=$algolia_index \\\nALGOLIA_SKIP_SECTIONS=$algolia_skip_sections \\\nMETALSMITH_SKIP_SECTIONS=$metalsmith_skip_sections \\\nnpm run build\n\n# Add google site verifications\n# Google expects a very specific file format and metalsmith defaultly alters\n# it. This is temporary until a more permanent solution is made.\n\nRUN echo \"google-site-verification: google48ddb4a5390a503f.html\" > /src/build/google48ddb4a5390a503f.html\n\n#\n# Nginx\n#\n\nFROM nginx:latest\n\nARG nginx_dir\n\nRUN mkdir -p /src/build\n\nWORKDIR /src/build\nCOPY --from=ms-builder /src/build ./\n\nADD \"$nginx_dir\" /etc/nginx/conf.d\n\nRUN service nginx restart\n\nEXPOSE 80\nEXPOSE 443\n"
}