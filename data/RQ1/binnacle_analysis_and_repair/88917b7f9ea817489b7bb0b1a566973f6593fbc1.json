{
  "startTime": 1674240438349,
  "endTime": 1674240439229,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 53,
        "columnStart": 2,
        "columnEnd": 129
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 2,
        "columnEnd": 123
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 2,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 2,
        "columnEnd": 41
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 151,
        "lineEnd": 151,
        "columnStart": 2,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\nMAINTAINER theslydetector@gmail.com\n\n# Configure Timezone\nENV TIMEZONE \"America/Chicago\"\nRUN rm -f /etc/localtime && \\\n  ln -s \"/usr/share/zoneinfo/${TIMEZONE}\" /etc/localtime && \\\n  echo \"${TIMEZONE}\" > /etc/timezone\n\nRUN apk add --update \\\n  bash bwm-ng \\\n  coreutils curl \\\n  ffmpeg file findutils \\\n  git \\\n  htop \\\n  iproute2 \\\n  lame less \\\n  make mariadb-client memcached musl \\\n  nginx \\\n  p7zip php7-ctype php7-curl php7-dev php7-exif php7-fpm php7-gd php7-iconv \\\n  php7-imagick php7-json php7-mcrypt php7-opcache php7-openssl php7-pcntl \\\n  php7-pdo php7-pdo_mysql php7-pear php7-phar php7-posix php7-redis \\\n  php7-session php7-simplexml php7-sockets php7-xmlwriter php7-zlib pigz \\\n  proxychains-ng pstree py2-pip python \\\n  s6 strace \\\n  tar tig tree tzdata \\\n  unrar unzip util-linux \\\n  vim \\\n  wget \\\n  zendframework \\\n  && \\\n  rm -rf /var/cache/apk/*\n\n# vnstat in testing repo\n\n# mytop + deps\nRUN apk add --update \\\n  mariadb \\\n  perl \\\n  perl-dbd-mysql \\\n  perl-term-readkey \\\n  && \\\n  rm -rf /var/cache/apk/*\n\n# Install composer\nRUN curl -f https://getcomposer.org/installer | php7 -- --install-dir=/usr/bin --filename=composer\n\n# Build and install mediainfo\nENV MEDIAINFO_VERSION 18.05\nRUN apk --update add gcc g++ && \\\n  mkdir -p /tmp && \\\n  cd /tmp && \\\n  curl -f -s -o mediainfo.tar.gz \\\n    https://mediaarea.net/download/binary/mediainfo/${MEDIAINFO_VERSION}/MediaInfo_CLI_${MEDIAINFO_VERSION}_GNU_FromSource.tar.gz && \\\n  tar xzvf mediainfo.tar.gz && \\\n  cd MediaInfo_CLI_GNU_FromSource && \\\n  ./CLI_Compile.sh && \\\n  cd MediaInfo/Project/GNU/CLI && \\\n  make install && \\\n  cd / && \\\n  rm -rf /tmp && \\\n  apk del --purge gcc g++ && \\\n  rm -rf /var/cache/apk/* && rm mediainfo.tar.gz\n\n# Install Python MySQL Modules\nRUN pip install --no-cache-dir --upgrade pip && \\\n  pip install --no-cache-dir --upgrade setuptools && \\\n  pip install --no-cache-dir cymysql pynntp socketpool\n\n# Configure PHP\nRUN sed -ri 's/(max_execution_time =) ([0-9]+)/\\1 120/' /etc/php7/php.ini && \\\n  sed -ri \"s/(memory_limit =) (.*$)/\\1 -1/\" /etc/php7/php.ini && \\\n  sed -ri 's/;(date.timezone =)/\\1 America\\/Chicago/' /etc/php7/php.ini && \\\n  sed -ri 's/listen\\s*=\\s*127.0.0.1:9000/listen = 9000/g' /etc/php7/php-fpm.d/www.conf && \\\n  sed -ri 's|;include_path = \".:/php/includes\"|include_path = \".:/usr/share/php7\"|g' /etc/php7/php.ini && \\\n  mkdir -p /var/log/php-fpm/\n\n# Install and configure nginx.\nRUN mkdir -p /var/log/nginx && \\\n    mkdir -p /etc/nginx && \\\n    mkdir -p /tmp/nginx && \\\n    chmod 755 /var/log/nginx && \\\n    chmod 777 /tmp && \\\n    touch /var/log/nginx/nginx-error.log\n\n# Clone nZEDb and set directory permissions\nENV NZEDB_VERSION \"v0.8.7.0\"\nRUN mkdir -p /var/www && \\\n  cd /var/www && \\\n  git clone https://github.com/nZEDb/nZEDb.git && \\\n  cd /var/www/nZEDb && \\\n  git checkout --quiet --force $NZEDB_VERSION && \\\n  composer install && \\\n  chmod -R 777 /var/www/nZEDb/ && \\\n  # nuke all git repos' .git dir except for nzedb's .git dir to save space\n  find . -name \".git\" -type d | grep -v \"\\.\\/\\.git\" | xargs rm -rf && \\\n  # nuke ~350MB of composer cache\n  composer clear-cache\n\n# Build tmux 2.0 since tmux 2.2 has issues: https://github.com/nZEDb/nZEDb/issues/2182\nENV TMUX_VERSION 2.0\nRUN apk --update add gcc g++ ncurses-dev libevent-dev bsd-compat-headers && \\\n  mkdir -p /tmp/tmux && \\\n  cd /tmp/tmux && \\\n  curl -f --location -o tmux.tar.gz https://github.com/tmux/tmux/releases/download/${TMUX_VERSION}/tmux-${TMUX_VERSION}.tar.gz && \\\n  tar xzvf tmux.tar.gz && \\\n  cd tmux-${TMUX_VERSION} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix /usr && \\\n  make && \\\n  make install && \\\n  cd / && \\\n  rm -rf /tmp/tmux && \\\n  apk del --purge gcc g++ ncurses-dev libevent-dev bsd-compat-headers && \\\n  rm -rf /var/cache/apk/* && rm tmux.tar.gz\n\n# Build and install php-yenc\nENV PHP_ZEPHIR_PARSER_VERSION v1.1.2\nRUN cd /tmp && \\\n  apk --update --no-cache add gcc re2c libc-dev sudo && \\\n  mkdir -p /tmp/zephir && \\\n  cd /tmp/zephir && \\\n  composer require phalcon/zephir && \\\n  cd /tmp && \\\n  git clone git://github.com/phalcon/php-zephir-parser.git && \\\n  cd php-zephir-parser && \\\n  git checkout --quiet --force $PHP_ZEPHIR_PARSER_VERSION && \\\n  ./install && \\\n  echo \"extension=zephir_parser.so\" > /etc/php7/conf.d/98_zephir_parser.ini && \\\n  cd /tmp && \\\n  git clone https://github.com/niel/php-yenc.git && \\\n  cd php-yenc && \\\n  /tmp/zephir/vendor/bin/zephir install && \\\n  echo \"extension=yenc.so\" > /etc/php7/conf.d/99_yenc.ini && \\\n  composer clear-cache && \\\n  cd /tmp && \\\n  rm -rf zephir php-yenc php-zephir-parser && \\\n  apk del --purge gcc re2c libc-dev sudo\n\n# Build and install par2\nENV PAR2_VERSION \"v0.8.0\"\nRUN apk --update --no-cache add gcc autoconf automake g++ python-dev openssl-dev libffi-dev && \\\n  git clone https://github.com/Parchive/par2cmdline.git /tmp/par2 && \\\n  cd /tmp/par2 && \\\n  git checkout --quiet --force $PAR2_VERSION && \\\n  ./automake.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && \\\n  make && \\\n  make install && \\\n  cd / && \\\n  rm -rf /tmp/par2 && \\\n  apk del --purge automake gcc autoconf g++ python-dev openssl-dev libffi-dev && \\\n  apk add --no-cache libgomp\n\n# Create dir for importing nzbs\nRUN mkdir -p /var/www/nZEDb/resources/import\n\n# Switch out php executable to instrument invocations\nRUN mv /usr/bin/php /usr/bin/php.real\nCOPY php.proxy /usr/bin/php\n\n# Use pigz (parallel gzip) instead of gzip to speed up db backups\nRUN mv /bin/gzip /bin/gzip.real && \\\n  ln -s /usr/bin/pigz /bin/gzip\n\n# iconv has issues in musl which affects NFO conversion to include\n# cool ascii chars. Remove the problematic parts - TRANSLIT and IGNORE\n# See https://github.com/slydetector/simply-nzedb/issues/31\nRUN sed -i \"s|UTF-8//IGNORE//TRANSLIT|UTF-8|g\" /var/www/nZEDb/nzedb/utility/Text.php\n\nLABEL nzedb=$NZEDB_VERSION \\\n  maintainer=theslydetector@gmail.com \\\n  url=https://github.com/slydetector/simply-nzedb\n\nRUN mkdir -p /var/www/nZEDb/resources/tmp && chmod 777 /var/www/nZEDb/resources/tmp\n\nENV TERM tmux\nEXPOSE 8800\nADD s6 /etc/s6\nCMD [\"/bin/s6-svscan\",\"/etc/s6\"]\nWORKDIR /var/www/nZEDb/misc/update\n"
}