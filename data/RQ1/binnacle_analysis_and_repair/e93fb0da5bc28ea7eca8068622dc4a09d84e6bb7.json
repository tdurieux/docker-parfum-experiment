{
  "startTime": 1674253184899,
  "endTime": 1674253185278,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 133
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 97,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 26,
        "columnStart": 22,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:wheezy\n\nMAINTAINER John E Vincent <lusis.org+github.com@gmail.com>\n\nENV \tDEBIAN_FRONTEND noninteractive\nENV \tLANGUAGE en_US.UTF-8\nENV \tLANG en_US.UTF-8\nENV \tLC_ALL en_US.UTF-8\n\n\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    supervisor \\\n    git \\\n    curl \\\n    build-essential \\\n    ruby1.9.1-full \\\n    libssl-dev \\\n    libreadline-dev \\\n    libxslt1-dev \\\n    libxml2-dev \\\n    libcurl4-openssl-dev \\\n    zlib1g-dev \\\n    libexpat1-dev \\\n    libicu-dev \\\n    unzip \\\n    libpcre3-dev && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN curl -f -L https://github.com/coreos/etcd/releases/download/v0.4.6/etcd-v0.4.6-linux-amd64.tar.gz -o etcd-v0.4.6-linux-amd64.tar.gz && \\\n    tar -zxvf etcd-v0.4.6-linux-amd64.tar.gz && \\\n    cp etcd-v0.4.6-linux-amd64/etcd / && rm etcd-v0.4.6-linux-amd64.tar.gz\n\nRUN mkdir /build && \\\n    curl -f -LO http://openresty.org/download/ngx_openresty-1.7.7.1.tar.gz && \\\n    cd /build/ && \\\n    tar ozxf /ngx_openresty-1.7.7.1.tar.gz && rm /ngx_openresty-1.7.7.1.tar.gz\n\n# Get some additional patches mostly proxy related (in its own group to optimize)\nRUN cd /build && \\\n    git clone https://github.com/yaoweibin/nginx_upstream_check_module && \\\n    git clone https://github.com/gnosek/nginx-upstream-fair && \\\n    git clone https://github.com/lusis/nginx-sticky-module && \\\n    git clone https://github.com/yaoweibin/nginx_tcp_proxy_module\n\n# Patch and build   \nRUN cd /build/ngx_openresty-1.7.7.1/bundle/nginx-1.7.7 && \\\n    patch -p1 < /build/nginx_upstream_check_module/check_1.7.5+.patch && \\\n    patch -p1 < /build/nginx_tcp_proxy_module/tcp.patch\n\nRUN mkdir /tmp/client_body_tmp && mkdir /tmp/proxy_temp && cd /build/ngx_openresty-1.7.7.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/openresty \\\n    --with-luajit \\\n    --with-luajit-xcflags=-DLUAJIT_ENABLE_LUA52COMPAT \\\n    --http-client-body-temp-path=/tmp/client_body_temp \\\n    --http-proxy-temp-path=/tmp/proxy_temp \\\n    --http-log-path=/var/nginx/logs/access.log \\\n    --error-log-path=/var/nginx/logs/error.log \\\n    --pid-path=/var/nginx/run/nginx.pid \\\n    --lock-path=/var/nginx/run/nginx.lock \\\n    --with-http_stub_status_module \\\n    --with-http_ssl_module \\\n    --with-http_secure_link_module \\\n    --with-http_gzip_static_module \\\n    --with-http_sub_module \\\n    --with-http_realip_module \\\n    --without-http_scgi_module \\\n    --with-md5-asm \\\n    --with-sha1-asm \\\n    --with-file-aio \\\n    --with-pcre \\\n    --with-pcre-jit \\\n    --add-module=/build/nginx_upstream_check_module \\\n    --add-module=/build/nginx-upstream-fair \\\n    --add-module=/build/nginx-sticky-module \\\n    --add-module=/build/nginx_tcp_proxy_module\n\nRUN cd /build/ngx_openresty-1.7.7.1 && \\\n    make && \\\n    make install && \\\n    cd / && \\\n    rm -rf /build && \\\n    ln -sf /opt/openresty/luajit/bin/luajit-2.1.0-alpha /opt/openresty/luajit/bin/lua\n\n# Hoedown needed for the resty-template markdown rendering\nRUN cd /tmp && \\\n    git clone https://github.com/hoedown/hoedown.git && \\\n    cd hoedown && \\\n    make all install && \\\n    cd / && \\\n    rm -rf /tmp/hoedown && \\\n    ldconfig\n\n# Now the luarocks stuff\nRUN curl -f -s https://luarocks.org/releases/luarocks-2.2.0.tar.gz | tar xvz -C /tmp/ \\\n && cd /tmp/luarocks-* \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-lua=/opt/openresty/luajit \\\n    --with-lua-include=/opt/openresty/luajit/include/luajit-2.1 \\\n    --with-lua-lib=/opt/openresty/lualib \\\n && make && make install \\\n && ln -sf /opt/openresty/luajit/bin/lua /usr/local/bin/lua \\\n && rm -rf /tmp/luarocks-*\n\nRUN /usr/local/bin/luarocks install luasec && \\\n /usr/local/bin/luarocks install lua-resty-template && \\\n /usr/local/bin/luarocks install httpclient && \\\n /usr/local/bin/luarocks install lua-resty-http && \\\n /usr/local/bin/luarocks install inspect && \\\n /usr/local/bin/luarocks install lua-resty-hoedown && \\\n /usr/local/bin/luarocks install xml\n\nRUN useradd -r -d /var/nginx nginx && chown -R nginx:nginx /var/nginx/ /tmp/client_body_tmp /tmp/proxy_temp\n\nEXPOSE 3232\n\nADD ./supervisord.conf /supervisord.conf\nCMD /usr/bin/supervisord -c /supervisord.conf\n"
}