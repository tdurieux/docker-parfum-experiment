{
  "startTime": 1674242689227,
  "endTime": 1674242689482,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM bioconductor/release_core\n\nMAINTAINER Rebecca Louise Evans (rebecca.louise.evans@gmail.com)\n\nLABEL Description=\"This image is used to run JAFFA\" Version=\"1.09_dev\"\n\nRUN find /var/lib/apt/lists -type f -exec rm -rf '{}' \\;\n\nRUN apt-get clean \\\n    && apt-get update -y \\\n    && apt-get install --no-install-recommends -y \\\n        bowtie2 \\\n        bzip2 \\\n        default-jdk \\\n        g++ \\\n        git \\\n        gzip \\\n        lmod \\\n        make \\\n        python \\\n        time \\\n        trimmomatic \\\n        unzip \\\n        vim \\\n        wget \\\n    && rm -rf /tmp/downloaded_packages/ /tmp/*.rds \\\n    && rm -rf /var/lib/apt/lists/*\n\nVOLUME /usr/local/jaffa/batch\n\nWORKDIR /opt\n\n# Set Standard settings\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64\nENV CLASSPATH .\nENV CP ${CLASSPATH}\nENV BASH_ENV /usr/share/lmod/lmod/init/bash\nENV PATH /usr/bin:/bin:/usr/local/bin:/opt/bin:/opt/bbmap\n#ENV MODULEPATH\n\n# setup lmod\nRUN ln -s /usr/share/lmod/lmod/init/profile /etc/profile.d/modules.sh\nRUN ln -s /usr/share/lmod/lmod/init/cshrc /etc/profile.d/modules.csh\n\n# install samtools/1.1 (due to backwards incompatability)\nRUN wget --max-redirect 5 https://sourceforge.net/projects/samtools/files/samtools/1.1/samtools-1.1.tar.bz2 -O - | tar -xj\nRUN make prefix=/usr/local install -C samtools-1.1\n\n# install bbmap\nRUN wget --max-redirect 5 https://sourceforge.net/projects/bbmap/files/latest/download?source=files -O - | tar -xz\nRUN make -C bbmap/jni -f makefile.linux\nRUN find /opt/bbmap -type f -exec ln -s '{}' /usr/local/bin/ \\;\n\n# install oases and velvet\nRUN git clone --recursive https://github.com/dzerbino/oases.git\nRUN make -C oases/velvet/ MAXKMERLENGTH=37 LONGSEQUENCES=1\nRUN make -C oases/ MAXKMERLENGTH=37 LONGSEQUENCES=1 'VELVET_DIR=velvet'\nRUN cp oases/velvet/velvetg /usr/bin/\nRUN cp oases/velvet/velveth /usr/bin/\nRUN cp oases/oases /usr/bin\nRUN rm -rf oases\n\n# install blat\nRUN wget https://users.soe.ucsc.edu/~kent/src/blatSrc35.zip\nRUN unzip blatSrc35.zip\nRUN rm blatSrc35.zip\nENV MACHTYPE=x86_64\nRUN mkdir -p ${HOME}/bin/${MACHTYPE}\nRUN make -C blatSrc\nRUN mv ${HOME}/bin/${MACHTYPE}/* /usr/bin\nRUN rmdir ${HOME}/bin/${MACHTYPE}\nRUN rmdir ${HOME}/bin\nRUN rm -rf blatSrc\n\n# install bpipe\nRUN git clone https://github.com/ssadedin/bpipe.git\n# gradle properties holds http.proxyHost and http.proxyPort\nCOPY gradle.properties bpipe/gradle.properties\n# RUN bpipe/gradlew -p bpipe dist\nRUN cd bpipe; ./gradlew dist\nRUN mv bpipe/build/stage/bpipe* .\nRUN rm -rf bpipe\nRUN mv bpipe* bpipe\nRUN chmod 755 /opt/bpipe/bin/*\nRUN find /opt/bpipe/bin -type f -exec ln -s '{}' /usr/local/bin/ \\;\n\n# install jaffa\nRUN git clone https://github.com/Oshlack/JAFFA.git -b master\n\n# set the tools\nCOPY tools.groovy JAFFA/tools.groovy\nRUN chmod 644 JAFFA/tools.groovy\n\nCOPY convert_jaffa_to_bedpe.py /usr/local/bin/convert_jaffa_to_bedpe.py\nRUN chmod 755 /usr/local/bin/convert_jaffa_to_bedpe.py\n\nWORKDIR /usr/local/jaffa/batch\nCMD [\"bpipe\", \"run\", \"-p\", \"fastqInputFormat=\\\"%_*.fq.gz\\\"\", \"/opt/JAFFA/JAFFA_direct.groovy\", \"/usr/local/jaffa/data/BT474-demo_1.fq.gz\", \"/usr/local/jaffa/data/BT474-demo_2.fq.gz\"]\n"
}