{
  "startTime": 1674235618139,
  "endTime": 1674235618195,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:alpine AS build\n\n# First copy only package.json and yarn.lock to make the dependency fetching step optional.\nCOPY ./package.json \\\n    ./package-lock.json \\\n    /go/src/go.nlx.io/nlx/insight-demo/\n\nWORKDIR /go/src/go.nlx.io/nlx/insight-demo\nRUN npm install && npm cache clean --force;\n\n# Now copy the whole directory for the build step.\nCOPY . /go/src/go.nlx.io/nlx/insight-demo\nRUN npm run build\n\n# Copy static docs to alpine-based nginx container.\nFROM nginx:alpine\n\n# Copy nginx configuration\nCOPY ./docker/default.conf /etc/nginx/conf.d/default.conf\nCOPY ./docker/nginx.conf /etc/nginx/nginx.conf\n\nCOPY --from=build /go/src/go.nlx.io/nlx/insight-demo/build /usr/share/nginx/html\n\n# Add non-privileged user\nRUN adduser -D -u 1001 appuser\n\n# Set ownership nginx.pid and cache folder in order to run nginx as non-root user\nRUN touch /var/run/nginx.pid && \\\n    chown -R appuser /var/run/nginx.pid && \\ \n    chown -R appuser /var/cache/nginx\n\nUSER appuser\n"
}