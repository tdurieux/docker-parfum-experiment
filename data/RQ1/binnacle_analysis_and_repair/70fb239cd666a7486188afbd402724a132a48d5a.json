{
  "startTime": 1674641772100,
  "endTime": 1674641772272,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM microsoft/cntk:2.4-gpu-python3.5-cuda9.0-cudnn7.0\n\nLABEL maintainer \"MICROSOFT CORPORATION\"\n\n# Docker install\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    software-properties-common && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n\nRUN add-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable\"\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y docker-ce && rm -rf /var/lib/apt/lists/*;\n\n# Object Detection\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        cmake \\\n        git \\\n        libopencv-dev \\\n        nvidia-cuda-toolkit \\\n        && \\\n    apt-get -y autoremove \\\n        && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN /root/anaconda3/envs/cntk-py35/bin/conda install -y -n cntk-py35 cython boost\nRUN bash -c 'source /cntk/activate-cntk && pip install dlib easydict pyyaml'\nRUN bash -c 'source /cntk/activate-cntk && cd /cntk/Examples/Image/Detection/utils && git clone https://github.com/CatalystCode/py-faster-rcnn.git && cd py-faster-rcnn/lib && python setup.py build_ext --inplace'\nRUN cp /cntk/Examples/Image/Detection/utils/py-faster-rcnn/lib/pycocotools/_mask.cpython-35m-x86_64-linux-gnu.so /cntk/Examples/Image/Detection/utils/cython_modules/\nRUN cp /cntk/Examples/Image/Detection/utils/py-faster-rcnn/lib/utils/cython_bbox.cpython-35m-x86_64-linux-gnu.so /cntk/Examples/Image/Detection/utils/cython_modules/\nRUN cp /cntk/Examples/Image/Detection/utils/py-faster-rcnn/lib/nms/gpu_nms.cpython-35m-x86_64-linux-gnu.so /cntk/Examples/Image/Detection/utils/cython_modules/\nRUN cp /cntk/Examples/Image/Detection/utils/py-faster-rcnn/lib/nms/cpu_nms.cpython-35m-x86_64-linux-gnu.so /cntk/Examples/Image/Detection/utils/cython_modules/\n\nWORKDIR /cntk/Examples/Image/Detection/FasterRCNN\nRUN bash -c 'git config --system core.longpaths true'\nRUN bash -c 'source /cntk/activate-cntk && pip install \"git+https://github.com/Azure/azure-sdk-for-python#egg=azure-cognitiveservices-vision-customvision&subdirectory=azure-cognitiveservices-vision-customvision\"'\nCOPY . /cv_workshop\nWORKDIR /cv_workshop\nRUN bash -c 'source /cntk/activate-cntk && pip install opencv-python'\nRUN bash -c 'source /cntk/activate-cntk && pip install -r cli-requirements.txt'\n\nRUN bash -c 'source /cntk/activate-cntk && python -u cvworkshop_utils.py' \n\nCMD bash -c 'source /cntk/activate-cntk && jupyter-notebook --ip=0.0.0.0 --allow-root --no-browser'\n"
}