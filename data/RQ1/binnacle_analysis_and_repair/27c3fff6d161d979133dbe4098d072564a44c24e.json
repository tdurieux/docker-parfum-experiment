{
  "startTime": 1674239565957,
  "endTime": 1674239566187,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedDockerfile": "# vim: nospell\n\n# https://hub.docker.com/r/nvidia/cuda/\nFROM nvidia/cuda:9.2-devel-ubuntu16.04\nLABEL maintainer \"Trevor L. McDonell <tmcdonell@cse.unsw.edu.au>\"\n\nARG DEBIAN_FRONTEND=noninteractive\nARG PREFIX=/opt/accelerate-llvm\n\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\nENV PATH /root/.cabal/bin:/root/.local/bin:${PATH}\nENV LD_LIBRARY_PATH /usr/local/cuda/lib64:/usr/local/cuda/nvvm/lib64:${LD_LIBRARY_PATH}\nRUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/libcuda.so.1\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\n\nRUN add-apt-repository -y ppa:hvr/ghc \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y curl netbase pkg-config wget && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sSL https://get.haskellstack.org/ | sh\n\n# Buggy versions of ld.bfd fail to link some Haskell packages:\n# https://sourceware.org/bugzilla/show_bug.cgi?id=17689.\nRUN update-alternatives --install \"/usr/bin/ld\" \"ld\" \"/usr/bin/ld.gold\" 20\nRUN update-alternatives --install \"/usr/bin/ld\" \"ld\" \"/usr/bin/ld.bfd\" 10\n\n# Install LLVM\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \\\n && add-apt-repository \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main\" \\\n && add-apt-repository \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main\" \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y llvm-5.0-dev llvm-6.0-dev && rm -rf /var/lib/apt/lists/*;\n\n# GHC requires a specific LLVM version on the system PATH for its LLVM backend.\n# This version is tracked here:\n# https://ghc.haskell.org/trac/ghc/wiki/Commentary/Compiler/Backends/LLVM/Installing\n#\n# GHC 8.4 requires LLVM 5.0 tools (specifically, llc and opt)\nRUN update-alternatives --install \"/usr/bin/llc\" \"llc\" \"/usr/bin/llc-5.0\" 50\nRUN update-alternatives --install \"/usr/bin/opt\" \"opt\" \"/usr/bin/opt-5.0\" 50\n\n# GHC 8.4 requires libffi7\nRUN apt-add-repository \"deb http://deb.debian.org/debian experimental main\" \\\n && apt-get install --no-install-recommends -y debian-archive-keyring \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y libffi7 && rm -rf /var/lib/apt/lists/*;\n\n# Setup stack and build dependencies\nWORKDIR ${PREFIX}\nCOPY ./README.md                                            ${PREFIX}/\nCOPY ./LICENSE                                              ${PREFIX}/\nCOPY ./stack-8.4.yaml                                       ${PREFIX}/stack.yaml\nCOPY ./accelerate-llvm/accelerate-llvm.cabal                ${PREFIX}/accelerate-llvm/\nCOPY ./accelerate-llvm-native/accelerate-llvm-native.cabal  ${PREFIX}/accelerate-llvm-native/\nCOPY ./accelerate-llvm-ptx/accelerate-llvm-ptx.cabal        ${PREFIX}/accelerate-llvm-ptx/\n\nRUN stack --no-terminal --color never setup\nRUN stack --no-terminal --color never build --only-snapshot\n\n# Copy over the actual source files and build\nCOPY ./accelerate-llvm        ${PREFIX}/accelerate-llvm\nCOPY ./accelerate-llvm-native ${PREFIX}/accelerate-llvm-native\nCOPY ./accelerate-llvm-ptx    ${PREFIX}/accelerate-llvm-ptx\n\nRUN stack --no-terminal --color never build accelerate-llvm\nRUN stack --no-terminal --color never build accelerate-llvm-native\nRUN stack --no-terminal --color never build accelerate-llvm-ptx\n\n# libcuda.so.1 is part of the nvidia driver. We need this hack to complete the\n# build because dockerhub is not running with the nvidia-docker tool, which I\n# believe is what is meant to provide this lib in a way allowing passthrough to\n# the actual driver library running on host machine.\n#\n# https://github.com/tmcdonell/cuda/issues/55\nRUN rm /usr/local/cuda/lib64/libcuda.so.1\n\nCMD [\"bash\"]\n\n"
}