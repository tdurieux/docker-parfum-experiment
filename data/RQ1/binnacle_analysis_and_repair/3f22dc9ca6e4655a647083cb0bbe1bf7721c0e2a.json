{
  "startTime": 1674242551221,
  "endTime": 1674242551644,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 95,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 95,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 95,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "# Dockerfile contains multiple levels of images--\n# First, a base image containing dependencies shared by all other images:\n#   - apt dependencies\n#   - rust\n#   - ntl\n#   - pbc\n#   - charm\n#   - base pip dependencies (cython & setup.py)\n#   - ethereum\n#\n# Thereafter, it adds ever increasing levels of dependencies--\n#   - Test requirements (including doc requirements)\n#   - Dev requirements (including aws)\n#\n# In order to build and push this to dockerhub, run:\n# docker build . --target test-image --tag dsluiuc/honeybadgermpc-docker-base\n# docker push dsluiuc/honeybadgermpc-docker-base:latest\nFROM python:3.7.3-slim AS base-image\n\n# Allows for log messages to be immediately dumped to the\n# stream instead of being buffered.\nENV PYTHONUNBUFFERED    1\n\n# Path variables needed for Charm\nENV LIBRARY_PATH        /usr/local/lib\nENV LD_LIBRARY_PATH     /usr/local/lib\n\n# Make sh point to bash\n# This is being changed since it will avoid any errors in the `launch_mpc.sh` script\n# which relies on certain code that doesn't work in container's default shell.\nRUN ln -sf bash /bin/sh\n\n# Install apt dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    bison \\\n    curl \\\n    flex \\\n    g++ \\\n    git \\\n    iproute2 \\\n    libflint-dev \\\n    libgmp-dev \\\n    libmpc-dev \\\n    libmpfr-dev \\\n    libssl-dev \\\n    make \\\n    openssl \\\n    tmux \\\n    wget \\\n    vim && rm -rf /var/lib/apt/lists/*;\n\n# This is needed otherwise the build for the power sum solver will fail.\n# This is a known issue in the version of libflint-dev in apt.\n# https://github.com/wbhart/flint2/issues/217\n# This has been fixed if we pull the latest code from the repo. However, we want\n# to avoid compiling the lib from the source since it adds 20 minutes to the build.\nRUN sed -i '30c #include \"flint/flint.h\"' /usr/include/flint/flintxx/flint_classes.h\nRUN echo \"alias cls=\\\"clear && printf '\\e[3J'\\\"\" >> ~/.bashrc\n\n# RUN python -m venv /opt/venv\n# ENV PATH \"/opt/venv/bin:${PATH}\"\n\n# Downloads rust and sets it up\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly-2018-10-24\nENV PATH \"/root/.cargo/bin:${PATH}\"\n\n# Download and build NTL from source\n# Shoup recommends not using O3\nRUN curl -f -so - https://www.shoup.net/ntl/ntl-11.3.2.tar.gz | tar xzvf -\nWORKDIR /ntl-11.3.2/src \nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CXXFLAGS=\"-g -O2 -fPIC -march=native -pthread -std=c++11\"\nRUN make\nRUN make install\nWORKDIR /\n\n\n# Install betterpairing\nRUN curl -f -so - https://crypto.stanford.edu/pbc/files/pbc-0.5.14.tar.gz | tar xzvf -\nWORKDIR /pbc-0.5.14/\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make\nRUN make install\nWORKDIR /\n\n\n# Downloads and installs charm\nRUN git clone https://github.com/JHUISI/charm.git\nWORKDIR /charm/\nRUN git reset --hard be9587ccdd4d61c591fb50728ebf2a4690a2064f\nRUN ./configure.sh\nRUN make install\nWORKDIR /\n\n\n# Ethereum .[eth] extras\nRUN apt-get install -y --no-install-recommends \\\n    git cmake g++ \\\n    libffi-dev libssl-dev sudo && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash\nRUN apt-get install -y --no-install-recommends nodejs npm && rm -rf /var/lib/apt/lists/*;\nRUN npm install -g ganache-cli && npm cache clean --force;\nRUN git clone --recursive https://github.com/ethereum/solidity.git\nWORKDIR /solidity/\nRUN git checkout v0.4.24 # Old version necessary to work???\nRUN git submodule update --init --recursive\nRUN ./scripts/install_deps.sh\nRUN mkdir build/\nWORKDIR build\nRUN cmake ..\nRUN make install\nWORKDIR /\n\n\n# Below derived from https://pythonspeed.com/articles/multi-stage-docker-python/\nWORKDIR /usr/src/HoneyBadgerMPC\nCOPY . /usr/src/HoneyBadgerMPC\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir Cython\nRUN pip install --no-cache-dir -e .\nRUN pip install --no-cache-dir pairing/\n\nRUN make -C apps/asynchromix/cpp\n\n# Installs test dependencies\n# For now, upload this to docker-hub\n#\n# TODO: see if we can shrink this image size more.\n# I was able to do it by copying over from LIBRARY_PATH, /opt/venv/\n# and compiled outputs from apps and ntl, but I couldn't manage to get\n# lib_solver to import correctly.\nFROM base-image AS test-image\nRUN pip install --no-cache-dir -e .[\"tests,docs\"]\n\n# Actual image to use for dev work\nFROM test-image as dev-release\n# -e so that it installs locally\n# RUN pip install --user -e .[\"dev,aws\"]\nRUN pip install --no-cache-dir -e .[\"dev,aws\"]\n"
}