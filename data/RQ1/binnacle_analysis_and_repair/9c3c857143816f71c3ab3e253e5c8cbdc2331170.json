{
  "startTime": 1674236951813,
  "endTime": 1674236952019,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 14,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Add the following to your .bashrc, .bash_profile, or .zshrc, to make `akamai` work transparently on the host machine:\n# function akamai {\n#     if [[ `docker ps | grep akamai-cli$ | wc -l` -eq 1 ]]; then\n#         docker exec -it akamai-cli akamai $@;\n#     elif docker start akamai-cli > /dev/null 2>&1 && sleep 3 && docker exec -it akamai-cli akamai $@; then\n#         return 0;\n#     else\n#         echo \"Creating new docker container\"\n#\t  mkdir -p $HOME/.akamai-cli-docker\n#         docker create -it -v $HOME/.edgerc:/root/.edgerc -v $HOME/.akamai-cli-docker:/cli --name akamai-cli akamai/cli > /dev/null 2>&1 && akamai $@;\n#     fi;\n# }\n# or, as a one-liner:\n# function akamai { if [[ `docker ps | grep akamai-cli$ | wc -l` -eq 1 ]]; then docker exec -it akamai-cli akamai $@; elif docker start akamai-cli > /dev/null 2>&1 && sleep 3 && docker exec -it akamai-cli akamai $@; then return 0; else echo \"Creating new docker container\" && mkdir -p $HOME/.akamai-cli-docker && docker create -it -v $HOME/.edgerc:/root/.edgerc -v $HOME/.akamai-cli-docker:/cli --name akamai-cli akamai/cli > /dev/null 2>&1 && akamai $@; fi; }\nFROM alpine\nARG SOURCE_BRANCH=master\nENV SOURCE_BRANCH=\"$SOURCE_BRANCH\" GOROOT=/usr/lib/go GOPATH=/gopath GOBIN=/gopath/bin AKAMAI_CLI_HOME=/cli PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/gopath/bin\nRUN mkdir /cli && \\\n    apk add --no-cache git python2 python2-dev py2-pip python3 python3-dev wget jq openssl openssl-dev  curl nodejs build-base libffi libffi-dev go npm && \\\n    pip2 install --no-cache-dir --upgrade pip && \\\n    pip3 install --no-cache-dir --upgrade pip && \\\n    mkdir -p $GOBIN && \\\n    curl -f https://raw.githubusercontent.com/golang/dep/master/install.sh | sh; \\\n    if [[ $SOURCE_BRANCH == \"master\" ]];then \\\n        go get github.com/akamai/cli && \\\n        cd $GOPATH/src/github.com/akamai/cli && \\\n        dep ensure && \\\n        go build -o akamai-master-linuxamd64; \\\n    else \\\n        wget $( curl -f https://api.github.com/repos/akamai/cli/releases/latest | jq .assets[].browser_download_url | grep linuxamd64 | grep -v sig | sed s/\\\"//g); \\\n    fi && \\\n    mv akamai-*-linuxamd64 /usr/local/bin/akamai && chmod +x /usr/local/bin/akamai && \\\n    mkdir -p /cli/.akamai-cli && \\\n    curl -f https://developer.akamai.com/cli/package-list.json | jq .packages[].name | sed s/\\\"//g | xargs akamai install --force\n\nRUN echo \"[cli]\" > /cli/.akamai-cli/config && \\\n    echo \"cache-path            = /cli/.akamai-cli/cache\" >> /cli/.akamai-cli/config && \\\n    echo \"config-version        = 1\" >> /cli/.akamai-cli/config && \\\n    echo \"enable-cli-statistics = false\" >> /cli/.akamai-cli/config && \\\n    echo \"last-ping             = 2018-04-27T18:16:12Z\" >> /cli/.akamai-cli/config && \\\n    echo \"client-id             =\" >> /cli/.akamai-cli/config && \\\n    echo \"install-in-path       =\" >> /cli/.akamai-cli/config && \\\n    echo \"last-upgrade-check    = ignore\" >> /cli/.akamai-cli/config\n\nENV AKAMAI_CLI_HOME=/cli\nVOLUME /root/.edgerc\nVOLUME /cli\nENTRYPOINT [\"/usr/local/bin/akamai\"]\nCMD [\"--daemon\"]\n"
}