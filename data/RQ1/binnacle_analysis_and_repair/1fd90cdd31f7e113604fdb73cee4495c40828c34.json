{
  "startTime": 1674250549076,
  "endTime": 1674250549266,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 246
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 246
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 246
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 270
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER Afterster\n\nRUN echo 'deb http://download.videolan.org/pub/debian/stable/ /' >> /etc/apt/sources.list\nRUN echo 'deb-src http://download.videolan.org/pub/debian/stable/ /' >> /etc/apt/sources.list\nRUN echo 'deb http://archive.ubuntu.com/ubuntu trusty main multiverse' >> /etc/apt/sources.list\n\nRUN apt-get update\nRUN apt-get -y upgrade\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install wget inotify-tools && rm -rf /var/lib/apt/lists/*;\nRUN wget -O - https://download.videolan.org/pub/debian/videolan-apt.asc|sudo apt-key add -\nRUN apt-get update\n\n# Need this environment variable otherwise mysql will prompt for passwords\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install mysql-server apache2 wget php5 php5-json php5-curl php5-mysqlnd pwgen lame libvorbis-dev vorbis-tools flac libmp3lame-dev libavcodec-extra* libfaac-dev libtheora-dev libvpx-dev libav-tools git && rm -rf /var/lib/apt/lists/*;\n\n# Install composer for dependency management\nRUN php -r \"readfile('https://getcomposer.org/installer');\" | php && \\\n    mv composer.phar /usr/local/bin/composer\n\n# For local testing / faster builds\n# COPY master.tar.gz /opt/master.tar.gz\nADD https://github.com/ampache/ampache/archive/master.tar.gz /opt/ampache-master.tar.gz\nADD ampache.cfg.php.dist /var/temp/ampache.cfg.php.dist\n\n# extraction / installation\nRUN rm -rf /var/www/* && \\\n    tar -C /var/www -xf /opt/ampache-master.tar.gz ampache-master --strip=1 && \\\n    cd /var/www && composer install --prefer-source --no-interaction && \\\n    chown -R www-data /var/www && rm /opt/ampache-master.tar.gz\n\n# setup mysql like this project does it: https://github.com/tutumcloud/tutum-docker-mysql\n# Remove pre-installed database\n\nRUN rm -rf /var/lib/mysql/*\nADD create_mysql_admin_user.sh /create_mysql_admin_user.sh\nADD run.sh /run.sh\nRUN chmod 755 /*.sh\nENV MYSQL_PASS **Random**\n# Add VOLUMEs to allow backup of config and databases\nVOLUME  [\"/etc/mysql\", \"/var/lib/mysql\"]\n\n# setup apache with default ampache vhost\nADD 001-ampache.conf /etc/apache2/sites-available/\nRUN rm -rf /etc/apache2/sites-enabled/*\nRUN ln -s /etc/apache2/sites-available/001-ampache.conf /etc/apache2/sites-enabled/\nRUN a2enmod rewrite\n\n# Add job to cron to clean the library every night\nRUN echo '30 7    * * *   www-data php /var/www/bin/catalog_update.inc' >> /etc/crontab\n\nVOLUME [\"/media\"]\nVOLUME [\"/var/www/config\"]\nVOLUME [\"/var/www/themes\"]\nEXPOSE 80\n\nCMD [\"/run.sh\"]\n"
}