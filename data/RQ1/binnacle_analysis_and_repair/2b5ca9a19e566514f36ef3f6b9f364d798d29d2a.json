{
  "startTime": 1674234207532,
  "endTime": 1674234207965,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 197,
        "lineEnd": 197,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://sources.debian.org/src/php7.2/7.2.4-1/debian/control/\n\nARG PHP_VERSION=7.2.19\n\nFROM --platform=$TARGETPLATFORM php:${PHP_VERSION}-fpm-stretch\n\nLABEL maintainer=\"khs1994-docker/lnmp <khs1994@khs1994.com>\"\n\nENV TZ=Asia/Shanghai\n\nENV PHP_EXTENSION \\\n      bcmath \\\n      bz2 \\\n      calendar \\\n      enchant \\\n      exif \\\n      gd \\\n      gettext \\\n      gmp \\\n      imap \\\n      intl \\\n      mysqli \\\n      pcntl \\\n      pdo_pgsql \\\n      pdo_mysql \\\n      pgsql \\\n      sockets \\\n      sysvmsg \\\n      sysvsem \\\n      sysvshm \\\n      # tidy \\\n      xmlrpc \\\n      xsl \\\n      zip\n\nENV PECL_EXTENSION \\\n      mongodb \\\n      igbinary \\\n      redis \\\n      memcached \\\n# 安装测试版的扩展，可以在扩展名后加 -beta\n      xdebug \\\n      yaml \\\n      swoole\n\nARG DEB_URL=deb.debian.org\n\nARG DEB_SECURITY_URL=security.debian.org/debian-security\n\nRUN sed -i \"s!deb.debian.org!${DEB_URL}!g\" /etc/apt/sources.list \\\n    && sed -i \"s!security.debian.org/debian-security!${DEB_SECURITY_URL}!g\" /etc/apt/sources.list \\\n    && set -xe \\\n\t      && buildDeps=\" \\\n        wget \\\n        unzip \\\n        libfreetype6-dev \\\n        libjpeg62-turbo-dev \\\n        libpng-dev \\\n        libsasl2-dev \\\n        libssl-dev \\\n        libmemcached-dev \\\n        libpq-dev \\\n        libzip-dev \\\n        zlib1g-dev \\\n        libyaml-dev \\\n        libxmlrpc-epi-dev \\\n        libbz2-dev \\\n        libexif-dev \\\n        libgmp-dev \\\n        libicu-dev \\\n        libwebp-dev \\\n        libxpm-dev \\\n        libenchant-dev \\\n        libxslt1-dev \\\n        libc-client2007e-dev \\\n        libkrb5-dev \\\n\t\" \\\n  # libtidy-dev \\\n  && runDeps=\" \\\n       libfreetype6 \\\n       libjpeg62-turbo \\\n       libpng16-16 \\\n       libssl1.1 \\\n       libmemcached11 \\\n       libmemcachedutil2 \\\n       libpq5 \\\n       libzip4 \\\n       zlib1g \\\n       libyaml-0-2 \\\n       libxslt1.1 \\\n       libxmlrpc-epi0 \\\n       libbz2-1.0 \\\n       libexif12 \\\n       libgmp10 \\\n       libicu57 \\\n       libxpm4 \\\n       libwebp6 \\\n       libenchant1c2a \\\n       libc-client2007e \\\n       libkrb5-3 \\\n  \" \\\n  # libtidy5 \\\n  && apt-get update && apt-get install -y $buildDeps $runDeps --no-install-recommends && rm -r /var/lib/apt/lists/* \\\n        && docker-php-ext-configure zip \\\n                                    --with-libzip \\\n        && docker-php-ext-configure gd \\\n                                    --disable-gd-jis-conv \\\n                                    --with-freetype-dir=/usr \\\n                                    --with-jpeg-dir=/usr \\\n                                    --with-png-dir=/usr \\\n                                    --with-webp-dir=/usr \\\n                                    --with-xpm-dir=/usr \\\n        # https://stackoverflow.com/questions/13436356/configure-error-utf8-mime2text-has-new-signature-but-u8t-canonical-is-missi\n        && docker-php-ext-configure imap \\\n                                    --with-kerberos \\\n                                    --with-imap-ssl \\\n        && docker-php-ext-install $PHP_EXTENSION \\\n        && for extension in ${PHP_EXTENSION};do \\\n                     strip --strip-all $(php-config --extension-dir)/$(echo ${extension} | cut -d '-' -f 1).so ; \\\n           done \\\n        && for extension in $PECL_EXTENSION;do \\\n             pecl install $extension \\\n             && docker-php-ext-enable $(echo ${extension} | cut -d '-' -f 1) || echo \"pecl ${extension} install error\" \\\n             && rm -rf /usr/local/lib/php/doc/$(echo ${extension} | cut -d '-' -f 1) \\\n             && rm -rf /usr/local/lib/php/test/$(echo ${extension} | cut -d '-' -f 1) \\\n             && rm -rf /usr/local/include/php/ext/$(echo ${extension} | cut -d '-' -f 1) \\\n             && strip --strip-all $(php-config --extension-dir)/$(echo ${extension} | cut -d '-' -f 1).so ; \\\n           done \\\n        # https://github.com/tideways/php-xhprof-extension.git\n        # && cd /tmp \\\n        # && wget https://github.com/tideways/php-xhprof-extension/archive/master.zip \\\n        # && unzip master.zip \\\n        # && cd php-xhprof-extension-master \\\n        # && phpize \\\n        # && ./configure \\\n        # && make \\\n        # && make install \\\n        # && docker-php-ext-enable opcache tideways_xhprof \\\n        && docker-php-ext-enable opcache \\\n        && apt-get purge -y --auto-remove  $buildDeps \\\n        && rm -rf /tmp/* \\\n        && rm -rf /usr/local/lib/php/.registry/.channel.pecl.php.net/* \\\n        # config opcache\n        # && echo 'opcache.enable_cli=1' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-opcache.ini \\\n        # && echo 'opcache.file_cache=/tmp' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-opcache.ini\n        # 默认不启用 xdebug\n        && mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n          /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.default \\\n        # && mv /usr/local/etc/php/conf.d/docker-php-ext-tideways_xhprof.ini \\\n        #   /usr/local/etc/php/conf.d/docker-php-ext-tideways_xhprof.ini.default \\\n        # 创建日志文件夹\n        && mkdir -p /var/log/php-fpm \\\n        && ln -sf /dev/stdout /var/log/php-fpm/access.log \\\n        && ln -sf /dev/stderr /var/log/php-fpm/error.log \\\n        && ln -sf /dev/stderr /var/log/php-fpm/xdebug-remote.log \\\n        && chmod -R 777 /var/log/php-fpm\n\n# install composer\n\nENV COMPOSER_ALLOW_SUPERUSER=1 COMPOSER_HOME=/tmp \\\n    COMPOSER_VERSION=1.8.6 \\\n    PS1=\"[\\u@\\h \\w]# \"\n\n# https://github.com/composer/docker\n\nRUN --mount=type=bind,from=arm32v7/composer:1.8.6,source=/usr/bin/composer,target=/opt/bin/composer \\\n    echo \"memory_limit=-1\" > \"$PHP_INI_DIR/conf.d/memory-limit.ini\" \\\n    && echo \"date.timezone=${PHP_TIMEZONE:-PRC}\" > \"$PHP_INI_DIR/conf.d/date_timezone.ini\" \\\n #    && curl -s -f -L -o /tmp/installer.php https://raw.githubusercontent.com/composer/getcomposer.org/cb19f2aa3aeaa2006c0cd69a7ef011eb31463067/web/installer \\\n #    && php -r \" \\\n #       \\$signature = '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5'; \\\n #       \\$hash = hash('sha384', file_get_contents('/tmp/installer.php')); \\\n #       if (!hash_equals(\\$signature, \\$hash)) { \\\n #           unlink('/tmp/installer.php'); \\\n #           echo 'Integrity check failed, installer is either corrupt or worse.' . PHP_EOL; \\\n #           exit(1); \\\n #       }\" \\\n # && php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer --version=${COMPOSER_VERSION} \\\n && curl -fsSL https://raw.githubusercontent.com/composer/docker/master/1.8/docker-entrypoint.sh > /docker-entrypoint.composer.sh \\\n && chmod +x /docker-entrypoint.composer.sh \\\n && cp -a /opt/bin/composer /usr/bin/composer \\\n && composer --ansi --version --no-interaction \\\n \\\n # composer 中国镜像\n && composer config -g repo.packagist composer https://packagist.laravel-china.org \\\n \\\n # laravel 安装程序\n && composer global require --prefer-dist \"laravel/installer\" \\\n \\\n # php-cs-fixer\n # https://github.com/FriendsOfPHP/PHP-CS-Fixer\n && composer global require --prefer-dist \"friendsofphp/php-cs-fixer\" \\\n \\\n # Sami an API documentation generator\n # https://github.com/FriendsOfPHP/Sami \\\n && curl -fsSL https://get.sensiolabs.org/sami.phar > /usr/local/bin/sami \\\n && chmod +x /usr/local/bin/sami \\\n\n && ln -sf /tmp/vendor/bin/* /usr/local/bin \\\n && rm -rf /tmp/cache /tmp/installer.php /tmp/*.pub /tmp/composer.lock\n\nWORKDIR /app\n"
}