{
  "startTime": 1674235612521,
  "endTime": 1674235612781,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "####\n# Dockerfile for nshmp-haz.\n#\n# Usage:\n#   docker run \\\n#       -e PROGRAM=<deagg | deagg-epsilon | deagg-iml | hazard | hazard-2018 | rate> \\\n#       -e MODEL=<WUS-20[08|14|18] | CEUS-20[08|14|18] | COUS-20[08|14|18] | AK-2007> \\\n#       -e ACCESS_VISUALVM=<true | false> \\\n#       -e VISUALVM_PORT=<port> \\\n#       -e VISUALVM_HOSTNAME=<hostname> \\\n#       -v /absolute/path/to/sites/file:/app/sites.<geojson | csv> \\\n#       -v /absolute/path/to/config/file:/app/config.json \\\n#       -v /absolute/path/to/output:/app/output \\\n#       usgs/nshmp-haz\n#\n# Usage with custom model:\n#   docker run \\\n#       -e PROGRAM=<deagg | deagg-epsilon | deagg-iml | hazard | hazard-2018 | rate> \\\n#       -e ACCESS_VISUALVM=<true | false> \\\n#       -e VISUALVM_PORT=<port> \\\n#       -e VISUALVM_HOSTNAME=<hostname> \\\n#       -e MOUNT_MODEL=true \\\n#       -v /absolute/path/to/model:/app/model \\\n#       -v /absolute/path/to/sites/file:/app/sites.<geojson | csv> \\\n#       -v /absolute/path/to/config/file:/app/config.json \\\n#       -v /absolute/path/to/output:/app/output \\\n#       usgs/nshmp-haz\n#\n# Note: Models load as requested. While all supported models are\n# available, requesting them all will eventually result in an\n# OutOfMemoryError. Increase -Xmx to -Xmx16g or -Xmx24g, if available.\n####\n\n# Project\nARG project=nshmp-haz\n\n# Builder image working directory\nARG builder_workdir=/app/${project}\n\n# Path to JAR file in builder image\nARG jar_path=${builder_workdir}/build/libs/${project}.jar\n\n####\n# Builder Image: Java 8 in usgsnshmp/centos image\n#   - Install git\n#   - Build nshmp-haz\n####\nFROM usgsnshmp/openjdk:jdk8 as builder\n\n# Get builder workdir\nARG builder_workdir\n\n# Set working directory\nWORKDIR ${builder_workdir}\n\n# Copy project over to container\nCOPY . ${builder_workdir}/.\n\n# Install git\nRUN yum install -y git && rm -rf /var/cache/yum\n\n# Build nshmp-haz\nRUN ./gradlew assemble\n\n####\n# Application Image: Java 8 in usgsnshmp/centos image\n#   - Install jq\n#   - Copy JAR file from builder image\n#   - Download model\n#   - Run nshmp-haz (docker-entrypoint.sh)\n####\nFROM usgsnshmp/openjdk:jdk8\n\n# Set author\nLABEL maintainer=\"Peter Powers <pmpowers@usgs.gov>\"\n\n# Set working directory\nWORKDIR /app\n\n# Install file and jq\nRUN yum install -y add file epel-release && rm -rf /var/cache/yum\nRUN yum install -y jq && rm -rf /var/cache/yum\n\n# Get JAR path\nARG jar_path\n\n# Get builder working directory\nARG builder_workdir\n\n# Copy JAR file from builder image\nCOPY --from=builder ${jar_path} .\n\n# Copy entrypoint script\nCOPY docker-entrypoint.sh .\n\n# NSHM repository version\nENV NSHM_VERSION=master\n\n# Set Java memory\nENV JAVA_XMS 8g\nENV JAVA_XMX 8g\n\n# NSHM\nENV MODEL \"\"\n\n# Whether to mount the model instead of selecting a model\nENV MOUNT_MODEL false\n\n# Program to run: deagg | deagg-epsilon | hazard | rate\nENV PROGRAM hazard\n\n# Return period for deagg\nENV RETURN_PERIOD \"\"\n\n# Intensity measure level (in units of g) for deagg-iml\nENV IML \"\"\n\n# Optional config file\nENV CONFIG_FILE \"config.json\"\n\n# Whether to have access to Java VisualVM\nENV ACCESS_VISUALVM false\n\n# Port for Java VisualVM\nENV VISUALVM_PORT 9090\n\n# Java VisualVM hostname\nENV VISUALVM_HOSTNAME localhost\n\n# Set volume for output\nVOLUME [ \"/app/output\" ]\n\n# Create empty config file\nRUN echo \"{}\" > ${CONFIG_FILE}\n\n# Run nshmp-haz\nENTRYPOINT [ \"bash\", \"docker-entrypoint.sh\" ]\n\n# Expose Java VisualVM port\nEXPOSE ${VISUALVM_PORT}\n"
}