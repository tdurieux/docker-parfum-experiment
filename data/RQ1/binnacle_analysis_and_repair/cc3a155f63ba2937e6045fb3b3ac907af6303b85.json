{
  "startTime": 1674239870710,
  "endTime": 1674239870922,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\nENV container docker\n\n# Getting systemd to run correctly inside Docker is very tricky. Need to\n# ensure that it doesn't start things it shouldn't, without stripping out so\n# much as to make it useless.\n#\n# References:\n#\n# * <https://hub.docker.com/_/centos/>: Good start, but badly broken.\n# * <https://github.com/solita/docker-systemd>: For Ubuntu, but works!\n# * <https://github.com/moby/moby/issues/28614>: Also some useful info.\nRUN find /etc/systemd/system \\\n         /lib/systemd/system \\\n         -path '*.wants/*' \\\n         -not -name '*journald*' \\\n         -not -name '*systemd-tmpfiles*' \\\n         -not -name '*systemd-user-sessions*' \\\n         -exec rm \\{} \\;\nRUN systemctl set-default multi-user.target\nSTOPSIGNAL SIGRTMIN+3\n\n# Install and start SSH.\n#\n# References:\n#\n# * <https://stackoverflow.com/questions/18173889/cannot-access-centos-sshd-on-docker>\nRUN yum update -y\nRUN yum install -y openssh-server sudo initscripts && rm -rf /var/cache/yum\nRUN /usr/bin/systemctl enable sshd\nRUN /usr/bin/systemctl enable systemd-user-sessions.service\n\n# Create the SSH user.\nRUN useradd ansible_test\nRUN echo 'ansible_test:secret' | chpasswd\nRUN echo 'ansible_test ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nVOLUME [ \"/sys/fs/cgroup\" ]\nEXPOSE 22\nCMD [\"/usr/sbin/init\"]\n\n"
}