{
  "startTime": 1674236338624,
  "endTime": 1674236338764,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 1,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 1,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for running NuGEN's Fusion Workflow\n\nFROM ubuntu:14.04\nMAINTAINER Anand Patel\n\nRUN echo \"1.0\" > /version\n\nENV PATH /opt/miniconda/bin:$PATH\n\n# Get basic ubuntu packages needed\nRUN apt-get update && apt-get install --no-install-recommends -y -qq \\\n\twget build-essential git zip unzip tar libncurses-dev && rm -rf /var/lib/apt/lists/*;\n\n# Set up Miniconda environment for python2\nRUN cd /opt; \\\n\twget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh; \\\n\tchmod +x miniconda.sh; \\\n\t./miniconda.sh -p /opt/miniconda -b; \\\n\tconda update --yes conda\\\n\n\tconda install --yes python=2.7; \\\n#\tconda install --yes numpy; \\\n#\tconda install --yes pandas=0.15.2; \\\n#\tconda install --yes matplotlib\n\nRUN cd /opt; \\\n\twget https://zlib.net/zlib-1.2.8.tar.gz; \\\n\ttar xzvf zlib-1.2.8.tar.gz; \\\n\tcd zlib-1.2.8; \\\n\tmake distclean; \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n\tmake; \\\n\tmake install; \\\n\trm ../zlib-1.2.8.tar.gz\n\n# Installs samtools 1.3\n#RUN cd /opt;\\\n#\twget https://github.com/samtools/samtools/releases/download/1.3/samtools-1.3.tar.bz2;\\\n#\ttar xjvf samtools-1.3.tar.bz2;\\\n#\tcd samtools-1.3;\\\n#\t./configure --enable-plugins --without-curses --prefix /usr;\\\n#\tmake all all-htslib;\\\n#\tmake install install-htslib;\\\n#\trm ../samtools-1.3.tar.bz2\n\n\n# Installs samtools 1.2\n#RUN cd /opt;\\\n#\twget https://github.com/samtools/samtools/releases/download/1.2/samtools-1.2.tar.bz2;\\\n#\ttar xjvf samtools-1.2.tar.bz2;\\\n#\tcd samtools-1.2;\\\n#\t./configure --enable-plugins --without-curses --prefix /usr;\\\n#\tmake all all-htslib;\\\n#\tmake install install-htslib;\\\n#\trm ../samtools-1.2.tar.bz2\n\n# Installs samtools 0.1.19\nRUN cd /opt;\\\n\twget https://github.com/samtools/samtools/archive/0.1.19.tar.gz;\\\n\ttar xzvf 0.1.19.tar.gz;\\\n\tcd samtools-0.1.19;\\\n\tmake;\\\n\tcp samtools /usr/bin;\\\n\trm ../0.1.19.tar.gz\n\n\n\nRUN pip install --no-cache-dir --upgrade pip\n\n#ADD ./cprog/fastq-multx /usr/local/bin/fastq-multx\nADD . /opt/nudup/\n\n#ADD ./docker-entrypoint.sh /docker-entrypoint.sh\n#ENTRYPOINT [\"/docker-entrypoint.sh\"]\n\n\n\n"
}