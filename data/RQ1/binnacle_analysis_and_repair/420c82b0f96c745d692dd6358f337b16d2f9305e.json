{
  "startTime": 1674641703888,
  "endTime": 1674641703993,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM microsoft/dotnet:2.1-sdk AS build\n\n# install node and npm\n# replace shell with bash so we can source files\nRUN curl -f --silent -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh | sh\n\nENV NODE_VERSION=10.13.0\nENV NVM_DIR /root/.nvm\n\nRUN . $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_VERSION \\\n\t&& nvm use $NODE_VERSION \\\n\t&& apt-get update \\\n\t&& apt-get install --no-install-recommends -y \\\n\tdos2unix \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules\nENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n\nWORKDIR /src\n\nCOPY tgstation-server.sln ./\n\nCOPY src/Tgstation.Server.Host.Console/Tgstation.Server.Host.Console.csproj src/Tgstation.Server.Host.Console/\nCOPY src/Tgstation.Server.Host.Watchdog/Tgstation.Server.Host.Watchdog.csproj src/Tgstation.Server.Host.Watchdog/\nCOPY src/Tgstation.Server.Host/Tgstation.Server.Host.csproj src/Tgstation.Server.Host/\nCOPY src/Tgstation.Server.Api/Tgstation.Server.Api.csproj src/Tgstation.Server.Api/\n\nRUN dotnet restore -nowarn:MSB3202,nu1503 -p:RestoreUseSkipNonexistentTargets=false\n\nCOPY . .\n\n#run dos2unix on tgs.docker.sh so we can build without issue on windows\nRUN dos2unix build/tgs.docker.sh\n\nWORKDIR /src/src/Tgstation.Server.Host.Console\nRUN dotnet publish -c Release -o /app\n\nWORKDIR /src/src/Tgstation.Server.Host\nRUN dotnet publish -c Release -o /app/lib/Default && mv /app/lib/Default/appsettings* /app\n\nFROM microsoft/dotnet:2.1-aspnetcore-runtime\nEXPOSE 80\n\n#needed for byond\nRUN apt-get update \\\n\t&& apt-get install --no-install-recommends -y \\\n\tgcc-multilib \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nWORKDIR /app\n\nCOPY --from=build /app .\nCOPY --from=build /src/build/tgs.docker.sh tgs.sh\n\nVOLUME [\"/config_data\", \"/tgs_logs\", \"/app/lib\"]\n\nENTRYPOINT [\"./tgs.sh\"]\n"
}