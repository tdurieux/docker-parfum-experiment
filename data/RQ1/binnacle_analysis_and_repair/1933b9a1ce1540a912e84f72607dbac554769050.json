{
  "startTime": 1674235385241,
  "endTime": 1674235385567,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 33,
        "columnEnd": 133
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:edge\nMAINTAINER Paul Smith <pa.ulsmith.net>\n\n# Add repos\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories\n\n# Add basics first\nRUN apk update && apk upgrade && apk add --no-cache \\\n\tbash apache2 php5-apache2 curl ca-certificates openssl git php5 php5-phar php5-json php5-iconv php5-openssl tzdata openntpd vim nano\n\n# Setup apache and php\nRUN apk add \\\r\n\tphp5-ftp \\\r\n\tphp5-mcrypt \\\r\n\tphp5-soap \\\r\n\tphp5-gmp \\\r\n\tphp5-pdo_odbc \\\r\n\tphp5-dom \\\r\n\tphp5-pdo \\\r\n\tphp5-zip \\\r\n\tphp5-mysqli \\\r\n\tphp5-sqlite3 \\\r\n\tphp5-pdo_pgsql \\\r\n\tphp5-bcmath \\\r\n\tphp5-gd \\\r\n\tphp5-odbc \\\r\n\tphp5-pdo_mysql \\\r\n\tphp5-pdo_sqlite \\\r\n\tphp5-gettext \\\r\n\tphp5-xmlrpc \\\r\n\tphp5-bz2 \\\r\n\tphp5-pdo_dblib \\\r\n\tphp5-curl \\\r\n\tphp5-ctype \\\r\n\tsqlite \\\r\n\trsync pwgen netcat-openbsd\\\r\n\t&& cp /usr/bin/php5 /usr/bin/php \\\r\n    && rm -f /var/cache/apk/*\n\n# Add Composer\nRUN curl -f -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer\n\n# enabling SSH\nRUN apk --update add --no-cache openssh \\\r\n  && sed -i s/#PermitRootLogin.*/PermitRootLogin\\ yes/ /etc/ssh/sshd_config \\\r\n  && echo \"root:THISISNOTFORLOGIN102i3709123\" | chpasswd \\\r\n  && rm -rf /var/cache/apk/*\nRUN sed -ie 's/#Port 22/Port 22/g' /etc/ssh/sshd_config\nRUN sed -ri 's/#HostKey \\/etc\\/ssh\\/ssh_host_key/HostKey \\/etc\\/ssh\\/ssh_host_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_rsa_key/HostKey \\/etc\\/ssh\\/ssh_host_rsa_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_dsa_key/HostKey \\/etc\\/ssh\\/ssh_host_dsa_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_ecdsa_key/HostKey \\/etc\\/ssh\\/ssh_host_ecdsa_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_ed25519_key/HostKey \\/etc\\/ssh\\/ssh_host_ed25519_key/g' /etc/ssh/sshd_config\nRUN printf \"\\\\nClientAliveInterval 15\\\\nClientAliveCountMax 8\" >> /etc/ssh/sshd_config\nRUN /usr/bin/ssh-keygen -A\nRUN ssh-keygen -t rsa -b 4096 -f /etc/ssh/ssh_host_key\n\n# Add apache to run and configure\nRUN mkdir /run/apache2 \\\r\n    && sed -i \"s/#LoadModule\\ rewrite_module/LoadModule\\ rewrite_module/\" /etc/apache2/httpd.conf \\\r\n    && sed -i \"s/#LoadModule\\ session_module/LoadModule\\ session_module/\" /etc/apache2/httpd.conf \\\r\n    && sed -i \"s/#LoadModule\\ session_cookie_module/LoadModule\\ session_cookie_module/\" /etc/apache2/httpd.conf \\\r\n    && sed -i \"s/#LoadModule\\ session_crypto_module/LoadModule\\ session_crypto_module/\" /etc/apache2/httpd.conf \\\r\n    && sed -i \"s/#LoadModule\\ deflate_module/LoadModule\\ deflate_module/\" /etc/apache2/httpd.conf \\\r\n    && sed -i \"s#^DocumentRoot \\\".*#DocumentRoot \\\"/var/www/html\\\"#g\" /etc/apache2/httpd.conf \\\r\n    && sed -i \"s#/var/www/localhost/htdocs#/var/www/html#\" /etc/apache2/httpd.conf \\\r\n    && printf \"\\n<Directory \\\"/var/www/html\\\">\\n\\tAllowOverride All\\n</Directory>\\n\" >> /etc/apache2/httpd.conf\n\n# add flag\nARG username\nENV username=${username}\n\n# create user\nRUN adduser -D -u 1000 $username\n\n# create webroot directory\nRUN mkdir -p /var/www/html\n\n# add challs\nADD challs /var/www/html\n\n# remove README.md\nRUN rm -f /var/www/html/README.md\n\n# change ownership and mode\nRUN chown -R root:$username /var/www/html/* && chmod -R 775 /var/www/html/* && mkdir bootstrap\nRUN chown -R apache:apache /var/www/html/sqlite\nRUN chown -R apache:apache /var/www/html/assets\nRUN chown -R apache:apache /var/www/html/runtime\n\n# composer install\nWORKDIR /var/www/html\nRUN composer install --no-dev\n\n# store\nARG flag\nARG flag_name\nARG password\nENV flag=${flag}\nENV flag_name=${flag_name}\nENV password=${password}\nRUN echo \"$username:$password\" | chpasswd\n\n# store and securing flag\nRUN echo $flag > /var/www/html/flag/$flag_name\nRUN sed -i \"s/flag.txt/$flag_name/g\" /var/www/html/views/site/index.php\nRUN chown -R root:root /var/www/html/flag && chmod -R 755 /var/www/html/flag\n\n#bootstrap\nADD start.sh /bootstrap/\nRUN chmod +x /bootstrap/start.sh\n\nEXPOSE 80 22\nENTRYPOINT [\"/bootstrap/start.sh\"]\n"
}