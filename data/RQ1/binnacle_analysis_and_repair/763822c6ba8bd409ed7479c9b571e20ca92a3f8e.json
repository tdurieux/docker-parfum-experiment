{
  "startTime": 1674235860086,
  "endTime": 1674235860307,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 78,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 69,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Inspired by\n#  https://github.com/cockroachdb/cockroach/blob/master/build/Dockerfile\n# MAINTAINER Tamir Duberstein <tamird@gmail.com>\nFROM ubuntu:16.04\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n\tnet-tools && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -fsSL -O https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb \\\n && dpkg -i dumb-init_1.2.0_amd64.deb && rm dumb-init_1.2.0_amd64.deb\n\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n\nRUN curl -fsSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n && echo 'deb https://deb.nodesource.com/node_6.x xenial main' | tee /etc/apt/sources.list.d/nodesource.list \\\n && curl -fsSL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo 'deb https://dl.yarnpkg.com/debian/ stable main' | tee /etc/apt/sources.list.d/yarn.list\n\n# autoconf - crosstool-ng/bootstrap / c-deps: jemalloc\n# bison - crosstool-ng/configure\n# bzip2 - crosstool-ng/configure\n# clang - msan: -fsanitize\n# cmake - msan: libcxx\n# file - crosstool-ng/build\n# flex - crosstool-ng/configure\n# g++ - crosstool-ng/build\n# gawk - crosstool-ng/configure\n# git - crosstool-ng/configure\n# golang - go: bootstrap\n# gperf - crosstool-ng/configure\n# help2man - crosstool-ng/configure\n# iptables - acceptance tests' partition nemesis\n# libncurses-dev - crosstool-ng/configure\n# make - crosstool-ng boostrap / CRDB build system\n# nodejs - ui: all\n# openssh-client - terraform / jepsen\n# patch - crosstool-ng/configure\n# python - msan: libcxx\n# texinfo - crosstool-ng/configure\n# unzip - terraform\n# xz-utils - msan: libcxx / CRDB build system\n# yarn - ui: all\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    autoconf \\\n    bison \\\n    bzip2 \\\n    #clang \n    cmake \\\n    #file \n    #flex \n    g++ \\\n    #gawk \n    git \\\n    #golang \n    #gperf \n    #help2man \n    #iptables \n    libncurses-dev \\\n    make \\\n    nodejs \\\n    #openssh-client \n    #patch \n    #python \n    #texinfo \n    unzip \\\n    xz-utils \\\n    yarn && rm -rf /var/lib/apt/lists/*;\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\nWORKDIR $GOPATH\n\n### Avoid blocking - https://storage.googleapis.com/golang/go1.9.2.linux-amd64.tar.gz\nRUN curl -fsSL \\\n        https://172.17.4.50:48080/Downloads/99-mirror/https0x3A0x2F0x2Fgolang.org0x2Fdl/go1.9.2.linux-amd64.tar.gz \\\n    | gunzip | tar -x -C /usr/local\n\n#RUN apt-get install -y --no-install-recommends wget \\\n#    && wget --quiet --recursive --no-host-directories --cut-dirs=1 \\\n#        http://172.17.4.50:48080/go/src/github.com/cockroachdb/cockroach \\\n#    && apt-get autoremove -y wget\nRUN git clone --depth=1 https://github.com/cockroachdb/cockroach $GOPATH/src/github.com/cockroachdb/cockroach\n\nWORKDIR $GOPATH/src/github.com/cockroachdb/cockroach\nRUN make build \\\n    && mv cockroach /usr/local/bin\n\nWORKDIR $GOPATH\n\n### Finally clean\n#RUN apt-get autoremove -y gcc g++ \\\n#    rm -rf /var/lib/apt/lists \\\n#    rm -rf /usr/local/go \\\n#    rm -rf $GOPATH/bin/* $GOPATH/pkg $GOPATH/native $GOPATH/src/github.com/cockroachdb/cockroach\n\nCMD [\"cockroach\"]\n"
}