{
  "startTime": 1674245854492,
  "endTime": 1674245854568,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG  NODE_VERSION=8.12.0-slim\nFROM node:${NODE_VERSION}\n\n# A \"Hacker\" Docker file for local usage.\n# This will retrieve all the source code directly from local source\n\n# Create app directory\nWORKDIR /opt/fiware-pep-proxy\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY ./package*.json ./\n\nRUN apt-get update && \\\n  apt-get install -y  --no-install-recommends make gcc g++ python && \\\n  npm install --production --silent && \\\n  rm -rf /root/.npm/cache/* && \\\n  apt-get clean && \\\n  apt-get remove -y make gcc g++ python && \\\n  apt-get -y autoremove && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n# Bundle app source\nCOPY ./ .\n\n# Copy over a config template file - the default ARG exposes ENV variables for each paramter\n# Replace with config.js.template for a simple hard-coded JavaScript configuration file\nARG  CONFIG_TEMPLATE=extras/docker/config.js.template\nCOPY ${CONFIG_TEMPLATE} config.js\n\n\n# Ports used by idm\nEXPOSE ${PEP_PROXY_PORT:-1027}\n\nCMD [\"npm\", \"start\" ]"
}