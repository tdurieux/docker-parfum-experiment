{
  "startTime": 1674235891863,
  "endTime": 1674235891965,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 43,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6-alpine\n\nRUN apk add --no-cache --update build-base nodejs yarn npm\nRUN npm install --global webpack webpack-cli && npm cache clean --force;\n\nRUN mkdir /install/\n\n# Copy in just setup.py and install, this will install all of the\n# Python dependencies ONLY if setup.py has been changed, not just if ANY\n# file has been changed\nCOPY src/setup.py /install/hub/setup.py\nRUN mkdir /install/hub/home_automation_hub\nRUN pip install --no-cache-dir -e /install/hub\n\n# Copy just package.json in for now and install dependencies, this means\n# that dependencies will be reinstalled ONLY if package.json is changed\nCOPY src/home_automation_hub/package.json /install/hub/home_automation_hub/package.json\nRUN cd /install/hub/home_automation_hub && yarn install && yarn cache clean;\n\n# Now copy in the frontend source code and build it, this means that\n# we will rebuild the frontend ONLY if a piece of frontend source code\n# is modified\nCOPY src/home_automation_hub/frontend_src /install/hub/home_automation_hub/frontend_src\nCOPY src/home_automation_hub/webpack.conf.js /install/hub/home_automation_hub/webpack.conf.js\nRUN cd /install/hub/home_automation_hub && yarn run build:dev\n\n# Remove node_modules as this is no longer required now that we have\n# built the frontend and leaving it in places causes issues with pip\nRUN rm -rf /install/hub/home_automation_hub/node_modules\n\n# Now copy in the rest of the system and run pip install again, this\n# will not reinstall all Python dependencies as they have been don\n# above\nCOPY src /install/hub\nRUN pip install --no-cache-dir /install/hub\n\nCOPY modules /install/modules\nRUN pip install --no-cache-dir /install/modules/*\n\n# PYTHONUNBUFFERED ensures that log lines from the application are\n# output immediately when using docker logs or docker attach rather than\n# being \"batched\" and displayed very infrequently\nENV PYTHONUNBUFFERED=0\nCMD [\"home-automation-hub\"]"
}