{
  "startTime": 1674248208271,
  "endTime": 1674248208603,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 99,
        "columnEnd": 134
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "# Use an official Python runtime as a parent image\nFROM drupaldocker/php:7.2-cli\n\n###########################\n# Install headless Chrome\n# Borrowed from https://github.com/GoogleChrome/puppeteer/docs/troubleshooting.md#running-puppeteer-in-docker\n###########################\n\n# See https://crbug.com/795759\nRUN apt-get update && apt-get install --no-install-recommends -yq gnupg2 libgconf-2-4 && rm -rf /var/lib/apt/lists/*;\n\n# Install latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n# Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer\n# installs, work.\nRUN apt-get update && apt-get install -y wget --no-install-recommends \\\n    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n    && apt-get update \\\n    && apt-get install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont \\\n      --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get purge --auto-remove -y curl \\\n    && rm -rf /src/*.deb\n\n# It's a good idea to use dumb-init to help prevent zombie chrome processes.\nADD https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 /usr/local/bin/dumb-init\nRUN chmod +x /usr/local/bin/dumb-init\n\n\n###########################\n# Install build tools things\n###########################\n\n# Set the working directory to /build-tools-ci\nWORKDIR /build-tools-ci\n\n# Copy the current directory contents into the container at /build-tools-ci\nADD . /build-tools-ci\n\n# Collect the components we need for this image\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y ruby jq curl && rm -rf /var/lib/apt/lists/*;\nRUN gem install circle-cli\nRUN composer -n global require -n \"hirak/prestissimo:^0.3\"\n\n# Create an unpriviliged testuser\nRUN groupadd -g 999 tester && \\\n    useradd -r -m -u 999 -g tester tester && \\\n    chown -R tester /usr/local && \\\n    chown -R tester /build-tools-ci\nUSER tester\n\nRUN mkdir -p /usr/local/share/terminus\nRUN /usr/bin/env COMPOSER_BIN_DIR=/usr/local/bin composer -n --working-dir=/usr/local/share/terminus require pantheon-systems/terminus:\"^2\"\n\nRUN mkdir -p /usr/local/share/clu\nRUN /usr/bin/env COMPOSER_BIN_DIR=/usr/local/bin composer -n --working-dir=/usr/local/share/clu require danielbachhuber/composer-lock-updater:^0.4.0\n\nRUN mkdir -p /usr/local/share/drush\nRUN /usr/bin/env composer -n --working-dir=/usr/local/share/drush require drush/drush \"^8\"\nRUN ln -fs /usr/local/share/drush/vendor/drush/drush/drush /usr/local/bin/drush\nRUN chmod +x /usr/local/bin/drush\n\n# Add a collection of useful Terminus plugins\nenv TERMINUS_PLUGINS_DIR /usr/local/share/terminus-plugins\nRUN mkdir -p /usr/local/share/terminus-plugins\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-build-tools-plugin:^2.0.0-beta12\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-secrets-plugin:^1.3\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-rsync-plugin:^1.1\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-quicksilver-plugin:^1.3\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-composer-plugin:^1.1\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-drupal-console-plugin:^1.1\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-mass-update:^1.1\nRUN composer -n create-project --no-dev -d /usr/local/share/terminus-plugins pantheon-systems/terminus-aliases-plugin:^1.2\n# TODO: Re-add the site clone plugin once it has been updated to work with Terminus 2\nRUN composer -n create-project -d /usr/local/share/terminus-plugins pantheon-systems/terminus-site-clone-plugin:^2\n\n# Add hub in case anyone wants to automate GitHub PR creation, etc.\nRUN curl -f -LO https://github.com/github/hub/releases/download/v2.11.2/hub-linux-amd64-2.11.2.tgz && tar xzvf hub-linux-amd64-2.11.2.tgz && ln -s /build-tools-ci/hub-linux-amd64-2.11.2/bin/hub /usr/local/bin/hub && rm hub-linux-amd64-2.11.2.tgz\n\n# Add lab in case anyone wants to automate GitLab MR creation, etc.\nRUN curl -f -s https://raw.githubusercontent.com/zaquestion/lab/master/install.sh | bash\n\n# Add phpcs for use in checking code style\nRUN mkdir ~/phpcs && cd ~/phpcs && COMPOSER_BIN_DIR=/usr/local/bin composer require squizlabs/php_codesniffer:^2.7\n\n# Add phpunit for unit testing\nRUN mkdir ~/phpunit && cd ~/phpunit && COMPOSER_BIN_DIR=/usr/local/bin composer require phpunit/phpunit:^6\n\n# Add bats for functional testing\nRUN git clone https://github.com/sstephenson/bats.git; bats/install.sh /usr/local\n\n# Add behat for more functional testing\nRUN mkdir ~/behat && \\\n    cd ~/behat && \\\n    COMPOSER_BIN_DIR=/usr/local/bin \\\n    composer require \\\n        \"behat/behat:^3.5\" \\\n        \"behat/mink:*\" \\\n        \"behat/mink-extension:^2.2\" \\\n        \"behat/mink-goutte-driver:^1.2\" \\\n        \"drupal/drupal-extension:*\"\n\nENTRYPOINT [\"dumb-init\", \"--\"]\n"
}