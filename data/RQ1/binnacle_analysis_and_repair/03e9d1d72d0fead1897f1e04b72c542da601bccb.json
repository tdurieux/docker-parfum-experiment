{
  "startTime": 1674234306139,
  "endTime": 1674234306392,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.2-fpm-alpine\n\nARG DRUPAL_ENV=prod\n\nRUN apk add --no-cache --virtual .persistent-deps git curl openssl freetype libpng libjpeg-turbo \\\n    && apk add --no-cache --virtual .build-deps build-base libpng-dev freetype-dev libjpeg-turbo-dev tzdata zlib-dev \\\n    && docker-php-ext-install mbstring opcache pdo_mysql zip bcmath exif \\\n    # GD\n    && docker-php-ext-configure gd \\\n        --with-gd \\\n        --with-freetype-dir=/usr/include/ \\\n        --with-png-dir=/usr/include/ \\\n        --with-jpeg-dir=/usr/include/ \\\n    && NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) \\\n    && docker-php-ext-install -j${NPROC} gd \\\n    # Set Europe/Moscow as local timezone\n    && cp /usr/share/zoneinfo/Europe/Moscow /etc/localtime \\\n    && echo \"Europe/Moscow\" > /etc/timezone \\\n    # Cleanup\n    && apk del .build-deps \\\n    && rm -rf /tmp/*\n\n# Install PHP Extensions\nRUN apk add --no-cache --virtual .build-deps build-base autoconf \\\n    && yes | pecl install apcu xdebug opcache \\\n    # APCU\n    && echo \"extension=apcu.so\" > /usr/local/etc/php/conf.d/apcu.ini \\\n    && echo \"apc.enable_cli=1\" >> /usr/local/etc/php/conf.d/apcu.ini \\\n    # Opcache\n    && echo \"zend_extension=opcache.so\" > /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \\\n    && echo \"opcache.enable = 1\" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \\\n    && echo \"opcache.validate_timestamps = 1\" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \\\n    && echo \"opcache.revalidate_freq = 2\" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \\\n    && echo \"opcache.max_accelerated_files = 20000\" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \\\n    && echo \"opcache.memory_consumption = 96\" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \\\n    && echo \"opcache.interned_strings_buffer = 16\" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \\\n    && echo \"opcache.fast_shutdown = 1\" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \\\n    # Cleanup\n    && apk del .build-deps \\\n    && rm -rf /tmp/*\n\nRUN if [ $DRUPAL_ENV = \"dev\" ] ; then \\\n    # Xdebug config\n    echo \"zend_extension=xdebug.so\" > /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.remote_enable = 1\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.remote_autostart = 1\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.remote_host = 127.0.0.1\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.max_nesting_level = 1000\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n    ; fi\n\n# Add Composer\nENV COMPOSER_ALLOW_SUPERUSER 1\nRUN curl -f --silent --show-error https://getcomposer.org/installer | \\\n    php -- --install-dir=/usr/bin/ --filename=composer && \\\n    composer global require hirak/prestissimo && \\\n    composer clear-cache\n\nADD . /var/www/html\nCOPY docker/php/www.conf /usr/local/etc/php-fpm.d/www.conf\n\nWORKDIR /var/www/html\n\n# Blackfire\n#RUN version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") \\\n#    && curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/alpine/amd64/$version \\\n#    && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \\\n#    && mv /tmp/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so \\\n#    && echo \"extension=blackfire.so\" > /usr/local/etc/php/conf.d/blackfire.ini \\\n#    && echo \"blackfire.agent_socket=tcp://blackfire:8707\" >> /usr/local/etc/php/conf.d/blackfire.ini\n\nRUN composer install --no-dev --no-scripts --no-autoloader --no-suggest && \\\n    composer clear-cache\n\nRUN composer dump --optimize\n#RUN bin/console --env=prod cache:warmup\n#RUN bin/phpunit tests\n\nCMD [\"php-fpm\", \"--allow-to-run-as-root\"]\n"
}