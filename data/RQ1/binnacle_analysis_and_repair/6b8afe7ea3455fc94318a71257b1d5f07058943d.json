{
  "startTime": 1674241219168,
  "endTime": 1674241219288,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 8,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 8,
        "columnEnd": 128
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2015 Tigera, Inc. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n#\n### calico/test\n# This image is used by various calico repositories and components to run UTs\n# and STs. It has libcalico, nose, and other common python libraries\n# already installed\n#\n# For UTs:\n#  - volume mount in python code that uses libcalico\n#  - volume mount in your unit tests for this code\n#  - run 'nosetests'\n#\n# This container can also be used for running STs written in python. This\n# eliminates all dependencies besides docker on the host system to enable\n# running of the ST frameworks. Additionally, this allows for sharing of\n# common ST framework code (which calico-containers and libnetwork both use).\n# To run:\n# - volume mount the docker socket, allowing the STs to launch docker\n#   containers alongside itself.\n# - eliminate most isolation, (--uts=host --pid=host --net=host --privileged)\n# - volume mount your ST source code\n# - run 'nosetests'\nFROM docker:1.13.0\nMAINTAINER Tom Denham <tom@projectcalico.org>\n\n# Running STs in this containers require that it has all dependencies installed\n# for executing calicoctl. Install these dependencies (including glibc:\n# https://github.com/jeanblanchard/docker-alpine-glibc/blob/master/Dockerfile)\n# We install glibc onto the official docker image (instead of adding docker to\n# the libc image) since glibc installs are more constant than the\n# docker-in-docker installation and configuration.\nRUN apk add --update python python-dev py2-pip py-setuptools openssl-dev libffi-dev \\\n        git musl-dev gcc tshark netcat-openbsd \\\n        iptables ip6tables iproute2 iputils ipset curl && \\\n        curl -f -o glibc.apk -L \"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.23-r1/glibc-2.23-r1.apk\" && \\\n        apk add --allow-untrusted glibc.apk && \\\n        curl -f -o glibc-bin.apk -L \"https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.23-r1/glibc-bin-2.23-r1.apk\" && \\\n        apk add --allow-untrusted glibc-bin.apk && \\\n        /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc/usr/lib && \\\n        echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf && \\\n        rm -f glibc.apk glibc-bin.apk && \\\n        rm -rf /var/cache/apk/*\n\n# Install libcalico and its requirements\nADD . /tmp/pycalico\nRUN pip install --no-cache-dir /tmp/pycalico\nRUN pip install --no-cache-dir -r /tmp/pycalico/calico_test/requirements.txt\n\n# Add the testing framework\nADD calico_test/tests tests\n\n# Install etcdctl\nRUN wget https://github.com/coreos/etcd/releases/download/v2.3.3/etcd-v2.3.3-linux-amd64.tar.gz && \\\n    tar -xzf etcd-v2.3.3-linux-amd64.tar.gz && \\\n    cd etcd-v2.3.3-linux-amd64 && \\\n    ln -s etcdctl /usr/local/bin/ && rm etcd-v2.3.3-linux-amd64.tar.gz\n\n# The container is used by mounting the code-under-test to /code\nWORKDIR /code/\n"
}