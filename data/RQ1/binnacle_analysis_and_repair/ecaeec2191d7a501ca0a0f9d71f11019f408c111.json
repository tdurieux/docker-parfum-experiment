{
  "startTime": 1674236579243,
  "endTime": 1674236579542,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.fedoraproject.org/f27/s2i-base:latest\n\n# This image provides an Apache+PHP environment for running PHP\n# applications.\n\nEXPOSE 8080\nEXPOSE 8443\n\nENV PHP_VERSION=7.1 \\\n    PATH=$PATH:/usr/bin\n\nENV SUMMARY=\"Platform for building and running PHP $PHP_VERSION applications\" \\\n    DESCRIPTION=\"PHP $PHP_VERSION available as container is a base platform for \\\nbuilding and running various PHP $PHP_VERSION applications and frameworks. \\\nPHP is an HTML-embedded scripting language. PHP attempts to make it easy for developers \\\nto write dynamically generated web pages. PHP also offers built-in database integration \\\nfor several commercial and non-commercial database management systems, so writing \\\na database-enabled webpage with PHP is fairly simple. The most common use of PHP coding \\\nis probably as a replacement for CGI scripts.\"\n\nENV NAME=php \\\n    VERSION=0 \\\n    RELEASE=1 \\\n    ARCH=x86_64\n\nLABEL summary=\"$SUMMARY\" \\\n      description=\"$DESCRIPTION\" \\\n      io.k8s.description=\"$DESCRIPTION\" \\\n      io.k8s.display-name=\"Apache 2.4 with PHP 7.1\" \\\n      io.openshift.expose-services=\"8080:http\" \\\n      io.openshift.tags=\"builder,php,php71,rh-php71\" \\\n      name=\"$FGC/$NAME\" \\\n      com.redhat.component=\"$NAME\" \\\n      version=\"$VERSION\" \\\n      usage=\"s2i build https://github.com/sclorg/s2i-php-container.git --context-dir=/7.1/test/test-app $FGC/$NAME sample-server\" \\\n      maintainer=\"SoftwareCollections.org <sclorg@redhat.com>\"\n\n# Install Apache httpd and PHP\nRUN INSTALL_PKGS=\"php php-mysqlnd php-bcmath \\\n                  php-gd php-intl php-ldap php-mbstring php-pdo \\\n                  php-process php-soap php-opcache php-xml \\\n                  php-gmp php-pecl-apcu mod_ssl hostname\" && \\\n    yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS --nogpgcheck && \\\n    rpm -V $INSTALL_PKGS && \\\n    yum clean all -y && rm -rf /var/cache/yum\n\nENV PHP_CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/php/ \\\n    APP_DATA=${APP_ROOT}/src \\\n    PHP_DEFAULT_INCLUDE_PATH=/usr/share/pear \\\n    PHP_SYSCONF_PATH=/etc/ \\\n    PHP_HTTPD_CONF_FILE=php.conf \\\n    HTTPD_CONFIGURATION_PATH=${APP_ROOT}/etc/conf.d \\\n    HTTPD_MAIN_CONF_PATH=/etc/httpd/conf \\\n    HTTPD_MAIN_CONF_D_PATH=/etc/httpd/conf.d \\\n    HTTPD_VAR_RUN=/var/run/httpd \\\n    HTTPD_DATA_PATH=/var/www \\\n    HTTPD_DATA_ORIG_PATH=/var/www \\\n    HTTPD_VAR_PATH=/var\n\n# Copy the S2I scripts from the specific language image to $STI_SCRIPTS_PATH\nCOPY ./s2i/bin/ $STI_SCRIPTS_PATH\n\n# Copy extra files to the image.\nCOPY ./root/ /\n\n# Reset permissions of filesystem to default values\n# Generate SSL certs and reset permissions of filesystem to default values\nRUN /usr/libexec/httpd-ssl-gencerts && \\\n    /usr/libexec/container-setup && rpm-file-permissions\n\n# Fedora uses by default 'event' MPM module\n# switch to 'prefork' to provide same user experience as with RHEL image\n# Code taken from 'config_mpm()' function in sclorg/httpd-container repo\nENV HTTPD_MPM=prefork \\\n    HTTPD_MAIN_CONF_MODULES_D_PATH=/etc/httpd/conf.modules.d\n\nRUN if [ -v HTTPD_MPM -a -f ${HTTPD_MAIN_CONF_MODULES_D_PATH}/00-mpm.conf ]; then \\\n    mpmconf=${HTTPD_MAIN_CONF_MODULES_D_PATH}/00-mpm.conf; \\\n    sed -i -e 's,^LoadModule,#LoadModule,' ${mpmconf}; \\\n    sed -i -e \"/LoadModule mpm_${HTTPD_MPM}/s,^#LoadModule,LoadModule,\" ${mpmconf}; \\\n    echo \"---> Set MPM to ${HTTPD_MPM} in ${mpmconf}\"; \\\n  fi\n\nUSER 1001\n\n# Set the default CMD to print the usage of the language image\nCMD $STI_SCRIPTS_PATH/usage\n"
}