{
  "startTime": 1674250707848,
  "endTime": 1674250708302,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gcr.io/kaggle-images/python\nLABEL maintainer=\"florian.geigl@gmail.com\"\n\nCOPY layer_cleanup.sh /usr/local/bin/\n# pre-req to find fastest apt mirror\nRUN chmod +x /usr/local/bin/layer_cleanup.sh && \\\n    mkdir -p /data/ && \\\n    apt-key update && apt-get update && \\\n    apt-get install netselect-apt -y --no-install-recommends --no-upgrade && \\\n    # echo \"Europe/Vienna\" > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata && \\\n    # cp /etc/timezone /tz/ && cp /etc/localtime /tz/ && \\\n    layer_cleanup.sh && rm -rf /var/lib/apt/lists/*;\n\n# Define mount volume\nVOLUME [\"/data\", \"/var/log\"]\n\n# Install apt stuff, graph-tool, setup ssh, set timezone and update conda\nRUN cat /etc/apt/sources.list && \\\n    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4 && \\\n    echo \"deb http://repo.mongodb.org/apt/debian stretch/mongodb-org/4.0 main\" | tee /etc/apt/sources.list.d/mongodb-org-4.0.list && \\\n    echo \"deb http://deb.debian.org/debian stretch-backports main\" | tee /etc/apt/sources.list.d/stretch-backports.list && \\\n    # find fastest apt mirror\n    # netselect-apt && \\\n    # mv ./sources.list /etc/apt/sources.list && \\\n    cat /etc/apt/sources.list && \\\n    apt-key update && apt-get update && \\\n    # add more packages here \\\n    apt-get install bash-completion vim-tiny screen htop less git openssh-server supervisor dos2unix \\\n        mongodb-org-shell mongodb-org-tools \\\n        -y --no-install-recommends --no-upgrade && \\\n    # setup ssh\n    mkdir /var/run/sshd && \\\n    echo 'root:datascience' | chpasswd && \\\n    sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \\\n    sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd && \\\n    conda config --add channels conda-forge && \\\n    # fix ldconfig (libstdc++.so.6: version `CXXABI_1.3.9' not found)\n    echo \"/opt/conda/lib\" > /etc/ld.so.conf && \\\n    ldconfig && \\\n    layer_cleanup.sh && rm -rf /var/lib/apt/lists/*;\n\n# Install conda/pip python3 libs and notebook extensions\nCOPY jupyter_custom.js py_default_imports.js /tmp/\nRUN pip install --no-cache-dir --upgrade pip && \\\n    conda install libev jupyterlab flake8 jupyter_contrib_nbextensions yapf ipywidgets pandasql \\\n        dask distributed pyodbc pymc3 geopy hdf5 h5py ffmpeg autopep8 datashader bqplot pyspark \\\n        bokeh python-snappy lz4 gxx_linux-64 pika pathos pymssql tabulate gensim textblob \\\n        geocoder scikit-optimize matplotlib-venn dask-searchcv jupyterthemes \\\n        libarchive pyhive elasticsearch-dsl libpng libtiff jupyter_latex_envs tmux \\\n        kafka-python scikit-plot fire pdir2 h2o turbodbc \\\n        -y --no-channel-priority && \\\n            # --no-update-deps\n    conda install -c damianavila82 rise -y && \\\n    jupyter serverextension enable --py jupyterlab --sys-prefix && \\\n    jupyter contrib nbextension install --sys-prefix && \\\n    git clone https://github.com/Calysto/notebook-extensions.git /opt/calysto_notebook-extensions && \\\n        cd /opt/calysto_notebook-extensions && jupyter nbextension install calysto --sys-prefix && \\\n    echo \"codefolding/main code_font_size/code_font_size toc2/main autosavetime/main \\\n        scratchpad/main search-replace/main comment-uncomment/main select_keymap/main \\\n        spellchecker/main toggle_all_line_numbers/main chrome-clipboard/main execute_time/ExecuteTime \\\n        notify/notify tree-filter/index printview/main table_beautifier/main highlighter/highlighter \\\n        navigation-hotkeys/main addbefore/main snippets_menu/main datestamper/main help_panel/help_panel \\\n        hide_header/main freeze/main limit_output/main varInspector/main \\\n        # calysto\n        calysto/cell-tools/main calysto/document-tools/main\" \\\n        # install cmd\n            | xargs -n1 jupyter nbextension enable && \\\n        jupyter nbextension enable --py --sys-prefix widgetsnbextension && \\\n    # install custom jss & default imports extension\n    mkdir -p /root/.jupyter/custom/ && \\\n    cat /tmp/jupyter_custom.js >> /root/.jupyter/custom/custom.js && \\\n    mkdir -p /tmp/py_default_imports/ && \\\n    mv /tmp/py_default_imports.js /tmp/py_default_imports/main.js && \\\n    jupyter nbextension install --sys-prefix /tmp/py_default_imports && \\\n    jupyter nbextension enable --sys-prefix py_default_imports/main && \\\n    pip install --no-cache-dir ftfy scales pyflux cookiecutter segtok pandas-ply influxdb bpython implicit \\\n        cassandra-driver sklearn-pandas readchar lightfm python-tds tpot dask-ec2 pylzma \\\n        hdfs cqlsh tables xgbfir pygelf featexp pycm awscli lime && \\\n    # set default notebook theme, font etc.\n    jt -t grade3 -f sourcemed -T -N -cellw 1200 && \\\n    # disable notebook authentication\n    echo \"c.NotebookApp.token = ''\\nc.NotebookApp.password = ''\\n\" >> /root/.jupyter/jupyter_notebook_config.py && \\\n    # install graph-tool\n    # conda install gtk3 -c pkgw-forge --no-channel-priority -y && \\\n    # conda install pygobject --no-channel-priority -y && \\\n    # conda install graph-tool -c ostrokach-forge --no-channel-priority -y && \\\n    # conda update jupyter notebook jupyter_core --no-channel-priority  -y && \\\n    # tmp fixes for tensorflow\n    # pip install --upgrade pip && \\\n    # pip install --upgrade tensorflow && \\\n    layer_cleanup.sh\n\n# Copy some start script into the container.\nCOPY export_environment.sh \\\n    init.sh \\\n    /usr/local/bin/\n\n# Fix permissions and bash-completion\nCOPY append2bashprofile.sh \\\n    append2bashrc.sh \\\n    /tmp/\n\nRUN chmod +x /usr/local/bin/init.sh /usr/local/bin/export_environment.sh && \\\n    cat /tmp/append2bashrc.sh >> /etc/bash.bashrc && \\\n    cat /tmp/append2bashrc.sh >> ~/.bashrc && \\\n    cat /tmp/append2bashprofile.sh >> ~/.bash_profile && \\\n    layer_cleanup.sh\n\n# Expose jupyter notebook (8888), jupyter labs (8889), ss port (22) and supervisor web interface (9001).\nEXPOSE 8888 8889 22 9001\n\n# copy supervisor conf\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# Start all scripts\nENTRYPOINT [\"init.sh\"]\nCMD [\"\"]\n\n# test basic notebook\nCOPY tests/py3_test_notebook.ipynb /tmp/\nRUN cd /tmp/ && \\\n    jupyter nbconvert --ExecutePreprocessor.timeout=600 --to notebook --execute py3_test_notebook.ipynb && \\\n    layer_cleanup.sh\n"
}