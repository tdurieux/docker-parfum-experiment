{
  "startTime": 1674239210935,
  "endTime": 1674239211421,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 3,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 3,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 12,
        "columnStart": 44,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 12,
        "columnStart": 44,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile is used to build an image containing basic stuff to be used as a Jenkins slave build node.\nFROM jenkinsci/jnlp-slave:3.27-1\nMAINTAINER Johannes Sch√ºth <j.schueth@gentics.com>\nUSER root\n\n# APT\nRUN echo 'deb http://debian.apa.at/debian stretch main contrib non-free' > /etc/apt/sources.list\nRUN echo 'deb http://debian.apa.at/debian stretch-backports main' >> /etc/apt/sources.list\nRUN echo 'deb http://security.debian.org/ stretch/updates main contrib' >> /etc/apt/sources.list\n\nRUN apt-get update && apt-get -y upgrade && apt-get install --no-install-recommends -y git-core gawk sed wget curl sudo \\\n  less vim curl tar wget sed psmisc file pwgen locales zip unzip software-properties-common devscripts \\\n  bzip2 rsync maven && rm -rf /var/lib/apt/lists/*;\n\n# Docker\nRUN curl -f \"https://get.docker.com/builds/`uname -s`/`uname -m`/docker-latest.tgz\" > docker.tgz && \\\n    tar -xvzf docker.tgz && \\\n    mv docker/* /usr/bin && \\\n    rm -rf docke* && rm docker.tgz\n\n# Install Java 8\nRUN mkdir -p /usr/lib/jvm/ && \\\n   cd /usr/lib/jvm/ && \\\n   wget -nv -O jdk-8-x64.tar.gz \"https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u202-b08/OpenJDK8U-jdk_x64_linux_hotspot_8u202b08.tar.gz\" && \\\n   tar xfz jdk-8-x64.tar.gz && \\\n   rm *.gz && \\\n   mv jdk8u202-b08/ java-8 && rm jdk-8-x64.tar.gz\nENV JAVA_1_8_HOME /usr/lib/jvm/java-8\n\n# Install Java 11\nRUN mkdir -p /usr/lib/jvm/ && \\\n   cd /usr/lib/jvm/ && \\\n   wget -nv -O openjdk-11.tar.gz \"https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.3%2B7/OpenJDK11U-jre_x64_linux_hotspot_11.0.3_7.tar.gz\" && \\\n   tar xfz openjdk-11.tar.gz && \\\n   rm *.gz && \\\n   mv jdk-11* java-11 && rm openjdk-11.tar.gz\nENV JAVA_1_11_HOME /usr/lib/jvm/java-11\n\n# Add Jenkins user\nRUN echo \"jenkins:jenkins\" | chpasswd\nRUN mkdir -p /home/jenkins/workspace && mkdir -p /home/jenkins/.ssh\n\nADD ./files/settings.xml /home/jenkins/.m2/settings.xml\n#ADD ./files/gentics /home/jenkins/.gnupg/gentics\nRUN chown jenkins: /home/jenkins -R\n\nRUN echo \"root:root\" | chpasswd\nADD ./files/config /home/jenkins/.ssh/config\nRUN ssh-keyscan github.com >> /home/jenkins/.ssh/known_hosts\nRUN ssh-keyscan git.gentics.com >> /home/jenkins/.ssh/known_hosts\n\nRUN mkdir -p /home/jenkins/.m2/repository\nRUN chown jenkins: /home/jenkins -R\n\n# Update Bash RC\nRUN rm /home/jenkins/.bashrc\nRUN echo '. /etc/profile.d/*.sh' > /home/jenkins/.bashrc\nRUN chown jenkins: /home/jenkins/.bashrc\n\n# Setup locale\nRUN sed -i  's/.*\\(en_US.UTF-8.*\\)/\\1/' /etc/locale.gen\nRUN locale-gen\nRUN locale-gen en_US.UTF-8\nRUN update-locale LANG=en_US.UTF-8\n\nRUN echo \"LC_ALL=en_US.UTF-8\" > /etc/default/locale\nRUN echo \"LANG=en_US.UTF-8\" > /etc/default/locale\nRUN echo \"LANGUAGE=en_US:en\" >> /etc/default/locale\n\n# Setup timezone\nRUN cp /usr/share/zoneinfo/Europe/Vienna /etc/localtime\nRUN echo \"Europe/Vienna\" > /etc/timezone\n\n# Setup Git\nADD ./files/.gitconfig /home/jenkins/.gitconfig\nRUN chown jenkins: /home/jenkins/.gitconfig\n\nRUN chown jenkins: /opt -R\n\n# Fix docker socket permission issue\nRUN groupadd -g 117 docker && usermod -aG docker jenkins\n\nENV LANG en_US.UTF-8\n\n# Add credentials\n#RUN sudo -u jenkins gpg --import /home/jenkins/credentials/gpg/gentics/gpg-key.asc\n#RUN sudo -u jenkins gpg --import /home/jenkins/credentials/gpg/gentics/gpg-secret-key.asc\n\nUSER jenkins\n\n"
}