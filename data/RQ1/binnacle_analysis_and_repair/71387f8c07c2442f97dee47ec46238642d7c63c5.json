{
  "startTime": 1674244091232,
  "endTime": 1674244091462,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# this is our first build stage, it will not persist in the final image\nFROM python:3.6 as intermediate\n\n# install git\nRUN apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\n# add credentials on build\nARG SSH_PRIVATE_KEY\nRUN mkdir /root/.ssh/\nRUN echo \"${SSH_PRIVATE_KEY}\" > /root/.ssh/id_rsa\nRUN chmod 600 /root/.ssh/id_rsa\n\n# make sure your domain is accepted\nRUN touch /root/.ssh/known_hosts\nRUN ssh-keyscan github.com >> /root/.ssh/known_hosts\n\n# copy requirements.txt\nCOPY requirements.txt /\n# download packages\nWORKDIR /pip-packages/\nRUN pip download -r /requirements.txt\n\n# create new image\nFROM python:3.6\n# copy downloaded packages\nWORKDIR /pip-packages/\nCOPY --from=intermediate /pip-packages/ /pip-packages/\n# install packages\nRUN pip install --no-cache-dir --no-index --find-links=/pip-packages/ /pip-packages/*\n\nWORKDIR /code/\n"
}