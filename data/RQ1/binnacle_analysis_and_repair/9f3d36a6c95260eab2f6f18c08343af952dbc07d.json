{
  "startTime": 1674238542453,
  "endTime": 1674238542584,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\n\nENV ANSIBLE_VERSION 2.5.0\n\nENV BUILD_PACKAGES \\\n  bash \\\n  curl \\\n  tar \\\n  openssh-client \\\n  sshpass \\\n  git \\\n  python \\\n  py-boto \\\n  py-dateutil \\\n  py-httplib2 \\\n  py-jinja2 \\\n  py-paramiko \\\n  py-pip \\\n  py-yaml \\\n  ca-certificates\n\n# If installing ansible@testing\n#RUN \\\n#\techo \"@testing http://nl.alpinelinux.org/alpine/edge/testing\" >> #/etc/apk/repositories\n\nRUN set -x && \\\n    \\\n    echo \"==> Adding build-dependencies...\"  && \\\n    apk --update add --virtual build-dependencies \\\n      gcc \\\n      musl-dev \\\n      libffi-dev \\\n      openssl-dev \\\n      python-dev && \\\n    \\\n    echo \"==> Upgrading apk and system...\"  && \\\n    apk update && apk upgrade && \\\n    \\\n    echo \"==> Adding Python runtime...\"  && \\\n    apk add --no-cache ${BUILD_PACKAGES} && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir python-keyczar docker-py && \\\n\n    echo \"==> Installing Ansible...\" && \\\n    pip install --no-cache-dir ansible==${ANSIBLE_VERSION} && \\\n\n    echo \"==> Cleaning up...\" && \\\n    apk del build-dependencies && \\\n    rm -rf /var/cache/apk/* && \\\n\n    echo \"==> Adding hosts for convenience...\" && \\\n    mkdir -p /etc/ansible /ansible && \\\n    echo \"[local]\" >> /etc/ansible/hosts && \\\n    echo \"localhost\" >> /etc/ansible/hosts\n\nENV ANSIBLE_GATHERING smart\nENV ANSIBLE_HOST_KEY_CHECKING false\nENV ANSIBLE_RETRY_FILES_ENABLED false\nENV ANSIBLE_ROLES_PATH /ansible/playbooks/roles\nENV ANSIBLE_SSH_PIPELINING True\nENV PYTHONPATH /ansible/lib\nENV PATH /ansible/bin:$PATH\nENV ANSIBLE_LIBRARY /ansible/library\n\nWORKDIR /ansible/playbooks\n\nENTRYPOINT [\"ansible-playbook\"]"
}