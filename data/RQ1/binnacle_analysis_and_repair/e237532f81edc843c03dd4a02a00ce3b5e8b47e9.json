{
  "startTime": 1674234462249,
  "endTime": 1674234463616,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 5,
        "columnEnd": 74
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 190,
        "lineEnd": 190,
        "columnStart": 5,
        "columnEnd": 107
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 244,
        "lineEnd": 244,
        "columnStart": 5,
        "columnEnd": 58
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 134,
        "lineEnd": 134,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 5,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 248,
        "lineEnd": 248,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 290,
        "lineEnd": 290,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 311,
        "lineEnd": 311,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 35,
        "lineEnd": 92,
        "columnStart": 5,
        "columnEnd": 45
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 5,
        "columnEnd": 113
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 5,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 5,
        "columnEnd": 63
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 5,
        "columnEnd": 76
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 302,
        "lineEnd": 304,
        "columnStart": 5,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2018, 2019 IBM Corp. and others\n#\n# This program and the accompanying materials are made available under\n# the terms of the Eclipse Public License 2.0 which accompanies this\n# distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n# or the Apache License, Version 2.0 which accompanies this distribution and\n# is available at https://www.apache.org/licenses/LICENSE-2.0.\n#\n# This Source Code may also be made available under the following\n# Secondary Licenses when the conditions for such availability set\n# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n# General Public License, version 2 with the GNU Classpath\n# Exception [1] and GNU General Public License, version 2 with the\n# OpenJDK Assembly Exception [2].\n#\n# [1] https://www.gnu.org/software/classpath/license.html\n# [2] http://openjdk.java.net/legal/assembly-exception.html\n#\n# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n# To use this docker file:\n# First copy your public ssh key into a file named authorized_keys next to the Dockerfile\n# Then include a known_hosts file next to the Dockerfile, with github as a saved host\n# This can be done with \"ssh-keyscan github.com >> path_to_dockerfile/known_hosts\"\n# Make sure you are in the directory containing the Dockerfile, authorized_keys file, and known_hosts file\n# Then run:\n#   docker build -t openj9 -f Dockerfile .\n#   docker run -it openj9\n\nFROM centos:centos6.9\n\n# Install required OS tools\n\nENV USER=\"jenkins\"\n\nRUN yum -y update \\\n  && yum -y install \\\n    alsa-lib-devel \\\n    bind-utils \\\n    bison \\\n    bzip2 \\\n    ca-certificates \\\n    cups-devel \\\n    cpio \\\n    curl-devel `# This is being used for git` \\\n    elfutils-libelf-devel \\\n    expat-devel `# This is being used for the xml parser and git` \\\n    file-devel \\\n    file-libs \\\n    flex \\\n    fontconfig \\\n    fontconfig-devel \\\n    freetype-devel \\\n    gettext \\\n    gettext-devel `# This is being used for git` \\\n    glibc \\\n    glibc-common \\\n    glibc-devel \\\n    gmp-devel \\\n    java-1.7.0-openjdk-devel \\\n    java-1.8.0-openjdk-devel \\\n    lbzip2 \\\n    libdwarf \\\n    libstdc++-static \\\n    libX11-devel \\\n    libXext-devel \\\n    libXi-devel \\\n    libXrandr-devel \\\n    libXrender-devel \\\n    libXt-devel \\\n    libXtst-devel \\\n    make \\\n    mesa-libGL-devel \\\n    mpfr-devel \\\n    nasm \\\n    numactl-devel \\\n    ntp \\\n    openssl-devel `# This is being used in git, etc` \\\n    openssh-server \\\n    openssh-clients \\\n    perl-CPAN \\\n    perl-DBI \\\n    perl-devel \\\n    perl-ExtUtils-MakeMaker `# This is being used for git` \\\n    perl-GD \\\n    perl-libwww-perl \\\n    perl-Time-HiRes \\\n    unzip \\\n    vim \\\n    wget\\\n    xorg-x11-server-Xvfb \\\n    xz \\\n    zip \\\n    zlib-devel `# This is being used for git` \\\n  && yum clean all && rm -rf /var/cache/yum\n\nRUN yum -y update \\\n  && yum -y install https://$(rpm -E '%{?centos:centos}%{!?centos:rhel}%{rhel}').iuscommunity.org/ius-release.rpm \\\n  && yum -y install libdwarf-devel \\\n  && yum clean all && rm -rf /var/cache/yum\n\n# Install autoconf version 2.69\nRUN cd /usr/src/ \\\n  && wget https://fossies.org/linux/misc/autoconf-2.69.tar.gz \\\n  && tar -xzf autoconf-2.69.tar.gz \\\n  && rm -f autoconf-2.69.tar.gz \\\n  && cd autoconf-2.69 \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make \\\n  && make install \\\n  && cd .. \\\n  && rm -rf /usr/src/autoconf-2.69\n\n# Install GCC-7.3\nRUN yum -y update \\\n  && yum -y install centos-release-scl \\\n  && yum -y install devtoolset-7-gcc-7.3* devtoolset-7-binutils \\\n  && yum -y install devtoolset-7-gcc-c++-7.3* devtoolset-2-gcc-gfortran-7.3* \\\n  && yum clean all \\\n  && ln -s /opt/rh/devtoolset-7/root/usr/bin/gcc /usr/bin/cc \\\n  && ln -s /opt/rh/devtoolset-7/root/usr/bin/gcc /usr/bin/gcc \\\n  && ln -s /opt/rh/devtoolset-7/root/usr/bin/g++ /usr/bin/g++ && rm -rf /var/cache/yum\n\n# Dependency required by test framework\nRUN wget -O - https://cpanmin.us | perl - --self-upgrade \\\n  && cpanm Text::CSV \\\n  && cpanm JSON \\\n  && cpanm XML::Parser\n\n# Install make 4.1\nRUN cd /tmp \\\n  && wget -O make-4.1.tar.gz \"https://ftp.gnu.org/gnu/make/make-4.1.tar.gz\" \\\n  && tar xvf make-4.1.tar.gz \\\n  && rm -f make-4.1.tar.gz \\\n  && cd make-4.1/ \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make \\\n  && make install \\\n  && rm -f /usr/local/bin/gmake \\\n  && ln -s /usr/local/bin/make /usr/local/bin/gmake \\\n  && cd .. \\\n  && rm -rf /tmp/make-4.1\n\n# Install nasm-2.13.03\nRUN cd /tmp \\\n  && wget https://www.nasm.us/pub/nasm/releasebuilds/2.13.03/nasm-2.13.03.tar.gz \\\n  && tar xzf nasm-2.13.03.tar.gz \\\n  && rm /tmp/nasm-2.13.03.tar.gz \\\n  && cd /tmp/nasm-2.13.03 \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix=/usr/local \\\n  && make install \\\n  && rm -rf /tmp/nasm-2.13.03\n\n# Install cmake version 3.11.4\nRUN cd /tmp \\\n  && wget https://cmake.org/files/v3.11/cmake-3.11.4.tar.gz \\\n  && tar xzf cmake-3.11.4.tar.gz \\\n  && rm cmake-3.11.4.tar.gz \\\n  && cd /tmp/cmake-3.11.4 \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make \\\n  && make install\n\n#Building and setting up git version 2.5.3\nRUN cd /usr/src \\\n  && wget https://www.kernel.org/pub/software/scm/git/git-2.5.3.tar.gz \\\n  && tar xzf git-2.5.3.tar.gz \\\n  && rm git-2.5.3.tar.gz \\\n  && cd git-2.5.3 \\\n  && make prefix=/usr/local all \\\n  && make prefix=/usr/local install \\\n  && cd .. \\\n  && rm -rf /usr/src/git-2.5.3\n\n# Install ant version 1.10.5.\nRUN wget https://www.us.apache.org/dist/ant/binaries/apache-ant-1.10.5-bin.tar.gz \\\n  && tar xvfz apache-ant-1.10.5-bin.tar.gz -C /opt \\\n  && rm apache-ant-1.10.5-bin.tar.gz \\\n  && ln -s /opt/apache-ant-1.10.5 /opt/ant \\\n  && ln -s /opt/ant/bin/ant /usr/bin/ant \\\n  && cd /opt/ant/lib \\\n  && wget https://sourceforge.net/projects/ant-contrib/files/ant-contrib/1.0b3/ant-contrib-1.0b3-bin.tar.gz \\\n  && tar xfvz ant-contrib-1.0b3-bin.tar.gz -C . \\\n  && rm ant-contrib-1.0b3-bin.tar.gz \\\n  && cd ant-contrib \\\n  && mv ant-contrib-1.0b3.jar .. \\\n  && cd .. \\\n  && rm -rf ant-contrib\n\n# Install Cuda version 7.5.18\nRUN cd /usr/src/ \\\n  && wget https://developer.download.nvidia.com/compute/cuda/7.5/Prod/local_installers/cuda_7.5.18_linux.run \\\n  && chmod +x cuda_7.5.18_linux.run \\\n  && /usr/src/cuda_7.5.18_linux.run --silent --toolkit --override \\\n  && rm -f /usr/src/cuda_7.5.18_linux.run\n\n# add user home/jenkins\nRUN useradd -ms /bin/bash ${USER} \\\n  && mkdir /home/${USER}/.ssh/\nCOPY authorized_keys /home/${USER}/.ssh/authorized_keys\nCOPY known_hosts /home/${USER}/.ssh/known_hosts\nRUN chown -R ${USER}:${USER} /home/${USER} \\\n  && chmod 644 /home/${USER}/.ssh/authorized_keys \\\n  && chmod 644 /home/${USER}/.ssh/known_hosts\n\n# set up sshd config\nRUN mkdir /var/run/sshd \\\n  && sed -i 's/#PermitRootLogin/PermitRootLogin/' /etc/ssh/sshd_config \\\n  && sed -i 's/#RSAAuthentication.*/RSAAuthentication yes/' /etc/ssh/sshd_config \\\n  && sed -i 's/#PubkeyAuthentication.*/PubkeyAuthentication yes/' /etc/ssh/sshd_config\n\n# SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n\n# Setup boot JDK for building Java 8\nRUN ln -s java-1.7.0 /usr/lib/jvm/java-1.7.0-openjdk\n\n# Setup boot JDK for building Java 11 and 12\nRUN mkdir -p /usr/lib/jvm/adoptojdk-java-11 \\\n  && cd /usr/lib/jvm/adoptojdk-java-11 \\\n  && wget -O bootjdk11.tar.gz \"https://api.adoptopenjdk.net/v2/binary/releases/openjdk11?openjdk_impl=openj9&os=linux&arch=x64&release=latest&type=jdk&heap_size=normal\" \\\n  && tar -xzf bootjdk11.tar.gz \\\n  && rm -f bootjdk11.tar.gz \\\n  && mv $(ls | grep -i jdk-11) bootjdk11 \\\n  && mv bootjdk11/* /usr/lib/jvm/adoptojdk-java-11 \\\n  && rm -rf bootjdk11\n\n# Setup boot JDK for building Java 13 and higher\nRUN mkdir -p /usr/lib/jvm/adoptojdk-java-12 \\\n  && cd /usr/lib/jvm/adoptojdk-java-12 \\\n  && wget -O bootjdk12.tar.gz \"https://api.adoptopenjdk.net/v2/binary/releases/openjdk12?openjdk_impl=openj9&os=linux&arch=x64&release=latest&type=jdk&heap_size=normal\" \\\n  && tar -xzf bootjdk12.tar.gz \\\n  && rm -f bootjdk12.tar.gz \\\n  && mv $(ls | grep -i jdk-12) bootjdk12 \\\n  && mv bootjdk12/* /usr/lib/jvm/adoptojdk-java-12 \\\n  && rm -rf bootjdk12\n\n# Install Freemaker for building OpenJ9. Used in bash ./configure --with-freemarker-jar=<path-to-freemaker-jar>\nRUN cd /home/${USER} \\\n  && wget https://sourceforge.net/projects/freemarker/files/freemarker/2.3.8/freemarker-2.3.8.tar.gz/download -O freemarker.tgz \\\n  && tar -xzf freemarker.tgz freemarker-2.3.8/lib/freemarker.jar --strip=2 \\\n  && rm -f freemarker.tgz\n\n# Install Curl version 7.24.0.\nRUN cd /usr/src \\\n  && wget https://curl.haxx.se/download/curl-7.24.0.tar.bz2 \\\n  && tar xfj curl-7.24.0.tar.bz2 \\\n  && rm -f curl-7.24.0.tar.bz2 \\\n  && cd curl-7.24.0 \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n  && make \\\n  && make install \\\n  && cd .. \\\n  && rm -rf /usr/src/curl-7.24.0\n\n# Setup a reference repository cache for faster clones in the container\nRUN mkdir /home/${USER}/openjdk_cache \\\n  && cd /home/${USER}/openjdk_cache \\\n  && git init --bare \\\n  && git remote add jdk8 https://github.com/ibmruntimes/openj9-openjdk-jdk8.git \\\n  && git remote add jdk11 https://github.com/ibmruntimes/openj9-openjdk-jdk11.git \\\n  && git remote add jdk12 https://github.com/ibmruntimes/openj9-openjdk-jdk12.git \\\n  && git remote add jdk13 https://github.com/ibmruntimes/openj9-openjdk-jdk13.git \\\n  && git remote add jdk https://github.com/ibmruntimes/openj9-openjdk-jdk.git \\\n  && git remote add openj9 https://github.com/eclipse/openj9.git \\\n  && git remote add omr https://github.com/eclipse/openj9-omr.git \\\n  && git fetch --all \\\n  && git gc --aggressive --prune=all\n\n# Install OpenSSL v1.1.1b\n# Required for JITaaS  & Crypto functional testing\nRUN cd /tmp \\\n  && wget https://github.com/openssl/openssl/archive/OpenSSL_1_1_1b.tar.gz \\\n  && tar -xzf OpenSSL_1_1_1b.tar.gz \\\n  && rm -f OpenSSL_1_1_1b.tar.gz \\\n  && cd /tmp/openssl-OpenSSL_1_1_1b \\\n  && ./config --prefix=/usr/local/openssl-1.1.1b --openssldir=/usr/local/openssl-1.1.1b \\\n  && make \\\n  && make install \\\n  && cd .. \\\n  && rm -rf openssl-OpenSSL_1_1_1b \\\n  && echo \"/usr/local/openssl-1.1.1b/lib\" > /etc/ld.so.conf.d/openssl-1.1.1b.conf \\\n  && echo \"PATH=/usr/local/openssl-1.1.1b/bin:$PATH\" > /etc/environment\n\n# Install Protobuf v3.5.1\n# Required for JITaaS\nRUN cd /tmp \\\n  && wget https://github.com/protocolbuffers/protobuf/releases/download/v3.5.1/protobuf-cpp-3.5.1.tar.gz \\\n  && tar -xzf protobuf-cpp-3.5.1.tar.gz \\\n  && rm -f protobuf-cpp-3.5.1.tar.gz \\\n  && cd /tmp/protobuf-3.5.1 \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make \\\n  && make install \\\n  && cd .. \\\n  && rm -rf protobuf-3.5.1\n# Run ldconfig to create necessary links and cache to protobuf libraries\nRUN echo \"/usr/local/lib\" > /etc/ld.so.conf.d/usr-local.conf \\\n  && echo \"/usr/local/lib64\" >> /etc/ld.so.conf.d/usr-local.conf \\\n  && ldconfig\n\n# Install Python3 v3.7.3\nRUN yum -y update \\\n  && yum -y install \\\n    zlib-devel \\\n    libffi-devel \\\n  && yum clean all \\\n  && cd /tmp \\\n  && wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tar.xz \\\n  && tar -xJf Python-3.7.3.tar.xz \\\n  && rm -f Python-3.7.3.tar.xz \\\n  && cd /tmp/Python-3.7.3 \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n  && make \\\n  && make install \\\n  && cd .. \\\n  && rm -rf Python-3.7.3 && rm -rf /var/cache/yum\n\n# Expose SSH port and run SSHD\nEXPOSE 22\n\n# Enable SSH daemon program to provide secure encrypted communications\nRUN mkdir -p /var/run/sshd \\\n  && service sshd start \\\n  && service sshd stop\n\n# Adding bash profile so ${USER} max user processes will be unlimited\nRUN echo >> /home/${USER}/.bashrc \\\n  && echo \"# Change max user processes in ${USER}\" >> /home/${USER}/.bashrc \\\n  && echo \"ulimit -u unlimited\" >> /home/${USER}/.bashrc\n"
}