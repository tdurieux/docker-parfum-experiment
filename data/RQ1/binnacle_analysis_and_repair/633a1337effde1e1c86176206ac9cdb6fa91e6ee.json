{
  "startTime": 1674241854741,
  "endTime": 1674241854912,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:2.7-alpine\nMAINTAINER Jurrian Tromp <jurrian@argu.co>\n\nCOPY ocd_frontend/requirements.txt /opt/ori/ocd_frontend/requirements.txt\n\n# Install build base for alpine including gcc for Pillow\nRUN apk add --no-cache --update build-base python-dev py-pip jpeg-dev zlib-dev \\\n  && pip install --no-cache-dir --upgrade pip \\\n  && pip install --no-cache-dir -r /opt/ori/ocd_frontend/requirements.txt \\\n  && apk del build-base python-dev py-pip\n\n# Create static data folder shared with the backend\nRUN mkdir -p /opt/ori/data/static \\\n  && adduser -D -H gunicorn\n\n# Copy all files, except for .dockerignore entries\nCOPY ocd_frontend /opt/ori/ocd_frontend\nCOPY version.py /opt/ori/ocd_frontend/version.py\n\nRUN chown -R 1000:1000 /opt/ori\n\n# Specify the volume last\n# https://docs.docker.com/engine/reference/builder/#notes-about-specifying-volumes\nVOLUME /opt/ori/data\n\n# For production run the gunicorn wsgi server\nUSER gunicorn\nWORKDIR /opt/ori\nCMD gunicorn -w 2 -b 0.0.0.0:5000 ocd_frontend.wsgi\n"
}