{
  "startTime": 1674245380550,
  "endTime": 1674245380734,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nARG arch=amd64\n\n# dependencies which must be installed for the target architecture\n# we must do cross-builds on i386 as phantomjs is not available for i386\nARG _crossdeps=\"libglib2.0-dev libgudev-1.0-dev libjson-glib-dev libkeyutils-dev liblvm2-dev libnm-glib-dev \\\n    libpam0g-dev libpcp3-dev libpcp-import1-dev libpcp-pmda3-dev libpolkit-agent-1-dev libpolkit-gobject-1-dev \\\n    libssh-dev libsystemd-dev libkrb5-dev libgnutls28-dev \\\n    glib-networking glib-networking-dbg libc6-dbg libglib2.0-0-dbg pkg-config\"\n\n# HACK: Avoid libssh security update, it breaks keyboard-interactive (https://bugs.debian.org/913870)\nRUN dpkg --add-architecture ${arch} && echo ${arch} > /arch && apt-get update && \\\n    apt-get install -y --no-install-recommends build-essential gcc-multilib clang python3 \\\n      autoconf automake gdb gtk-doc-tools intltool libjavascript-minifier-xs-perl libjson-perl valgrind \\\n      xmlto xsltproc npm nodejs-legacy git libfontconfig1 dbus ssh curl chromium-browser appstream-util \\\n      $(for p in ${_crossdeps}; do echo $p:${arch}; done) && \\\n    apt-get install --no-install-recommends -y --allow-downgrades libssh-dev:${arch}=0.6.3-4.3 libssh-4:${arch}=0.6.3-4.3 && \\\n    echo 'deb http://archive.ubuntu.com/ubuntu bionic universe' > /etc/apt/sources.list.d/stable.list && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y pyflakes pyflakes3 python3-pep8 && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# use latest npm/node\n# add system user to avoid same UIDs as host's source volume\nRUN npm install -g n && n stable && \\\n    adduser --system --gecos \"Builder\" builder && npm cache clean --force;\n\n# HACK: Working around Node.js screwing around with stdio\nENV NODE_PATH /usr/local/bin/nodejs\nRUN mv /usr/local/bin/node /usr/local/bin/nodejs\nADD turd-polish /usr/local/bin/node\n\nUSER builder\nENV LANG=C.UTF-8\n\nVOLUME /source\nCMD [\"/source/containers/unit-tests/run.sh\"]\n"
}