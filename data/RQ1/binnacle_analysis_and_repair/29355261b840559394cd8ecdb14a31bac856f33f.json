{
  "startTime": 1674240159320,
  "endTime": 1674240160273,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 75,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 122,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 122,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE=amd64/debian:stretch-slim\n\nFROM $IMAGE as builder\n\nMAINTAINER datarhei <info@datarhei.org>\n\nARG NASM_VERSION=2.14.02\nARG LAME_VERSION=3.100\nARG X264_VERSION=20190409-2245-stable\nARG X265_VERSION=3.0\nARG FFMPEG_VERSION=4.1.3\nARG NGINX_VERSION=1.14.2\nARG NGINXRTMP_VERSION=1.2.1\nARG NODE_VERSION=10.15.3\n\nENV SRC=\"/usr/local/\" \\\n    LD_LIBRARY_PATH=\"/usr/local/lib\" \\\n    PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\"\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        pkg-config \\\n        curl \\\n        libpcre3-dev \\\n        libtool \\\n        libssl-dev \\\n        zlib1g-dev \\\n        libasound2-dev \\\n        build-essential \\\n        cmake && rm -rf /var/lib/apt/lists/*;\n\n# nasm\nRUN mkdir -p /dist && cd /dist && \\\n    curl -f -OL \"https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VERSION}/nasm-${NASM_VERSION}.tar.xz\" && \\\n    tar -xvJ -f nasm-${NASM_VERSION}.tar.xz && \\\n    cd nasm-${NASM_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j$(nproc) && \\\n    make install && rm nasm-${NASM_VERSION}.tar.xz\n\n# x264\nRUN mkdir -p /dist && cd /dist && \\\n    curl -f -OL \"https://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2\" && \\\n    tar -xvj -f x264-snapshot-${X264_VERSION}.tar.bz2 && \\\n    cd x264-snapshot-${X264_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-shared && \\\n    make -j$(nproc) && \\\n    make install && rm x264-snapshot-${X264_VERSION}.tar.bz2\n\n# x265\nRUN mkdir -p /dist && cd /dist && \\\n    curl -f -OL \"https://ftp.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz\" && \\\n    tar -xvz -f x265_${X265_VERSION}.tar.gz && \\\n    cd x265_${X265_VERSION}/build && \\\n    cmake ../source && \\\n    make -j$(nproc) && \\\n    make install && rm x265_${X265_VERSION}.tar.gz\n\n# libmp3lame\nRUN mkdir -p /dist && cd /dist && \\\n    curl -f -OL \"https://kent.dl.sourceforge.net/project/lame/lame/${LAME_VERSION}/lame-${LAME_VERSION}.tar.gz\" && \\\n    tar -xvz -f lame-${LAME_VERSION}.tar.gz && \\\n    cd lame-${LAME_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --enable-nasm && \\\n    make -j$(nproc) && \\\n    make install && rm lame-${LAME_VERSION}.tar.gz\n\n# ffmpeg && patch\nCOPY ./contrib/ffmpeg /dist/restreamer/contrib/ffmpeg\n\nRUN mkdir -p /dist && cd /dist && \\\n    curl -f -OL \"https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz\" && \\\n    tar -xvz -f ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n    cd ffmpeg-${FFMPEG_VERSION} && \\\n    patch -p1 < /dist/restreamer/contrib/ffmpeg/bitrate.patch && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --bindir=\"${SRC}/bin\" \\\n        --extra-cflags=\"-I${SRC}/include\" \\\n        --extra-ldflags=\"-L${SRC}/lib\" \\\n        --prefix=\"${SRC}\" \\\n        --enable-nonfree \\\n        --enable-gpl \\\n        --enable-version3 \\\n        --enable-libmp3lame \\\n        --enable-libx264 \\\n        --enable-libx265 \\\n        --enable-openssl \\\n        --enable-postproc \\\n        --enable-small \\\n        --enable-static \\\n        --disable-debug \\\n        --disable-doc \\\n        --disable-shared && \\\n    make -j$(nproc) && \\\n    make install && rm ffmpeg-${FFMPEG_VERSION}.tar.gz\n\n# nginx-rtmp\nRUN mkdir -p /dist && cd /dist && \\\n    curl -f -OL \"https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" && \\\n    tar -xvz -f \"nginx-${NGINX_VERSION}.tar.gz\" && \\\n    curl -f -OL \"https://github.com/arut/nginx-rtmp-module/archive/v${NGINXRTMP_VERSION}.tar.gz\" && \\\n    tar -xvz -f \"v${NGINXRTMP_VERSION}.tar.gz\" && \\\n    cd nginx-${NGINX_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/nginx --with-http_ssl_module --with-http_v2_module --add-module=/dist/nginx-rtmp-module-${NGINXRTMP_VERSION} && \\\n    make -j$(nproc) && \\\n    make install && rm \"nginx-${NGINX_VERSION}.tar.gz\"\n\n# node.js\nRUN mkdir -p /dist && cd /dist && \\\n    curl -f -OL \"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz\" && \\\n    tar -xvJ -f \"node-v${NODE_VERSION}-linux-x64.tar.xz\" && \\\n    cd node-v${NODE_VERSION}-linux-x64 && \\\n    cp -R bin /usr/local && \\\n    cp -R lib /usr/local && rm \"node-v${NODE_VERSION}-linux-x64.tar.xz\"\n\nFROM $IMAGE\n\nCOPY --from=builder /usr/local/bin /usr/local/bin\nCOPY --from=builder /usr/local/nginx /usr/local/nginx\nCOPY --from=builder /usr/local/lib /usr/local/lib\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        ca-certificates \\\n        git \\\n        procps \\\n        libpcre3 \\\n        openssl \\\n        libssl1.1 \\\n        zlib1g \\\n        v4l-utils \\\n        libv4l-0 \\\n        alsa-utils && rm -rf /var/lib/apt/lists/*;\n\nCOPY . /restreamer\nWORKDIR /restreamer\n\nRUN cd /restreamer && \\\n    npm install -g grunt-cli nodemon eslint && \\\n    npm install && \\\n    grunt build && \\\n    npm prune --production && \\\n    npm cache verify && \\\n    npm uninstall -g grunt-cli nodemon eslint && \\\n    npm prune --production && \\\n    apt-get remove -y \\\n        git \\\n        curl && \\\n    apt autoremove -y && npm cache clean --force;\n\nEXPOSE 8080\nEXPOSE 8181\n\nVOLUME [\"/restreamer/db\"]\n\nCMD [\"./run.sh\"]\n"
}