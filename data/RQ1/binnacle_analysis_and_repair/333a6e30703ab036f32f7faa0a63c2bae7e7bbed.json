{
  "startTime": 1674249031484,
  "endTime": 1674249031962,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 5,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 5,
        "columnEnd": 76
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 5,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 56,
        "columnEnd": 108
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2016 The Kubernetes Authors All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# This file creates a standard build environment for building cross\n# platform go binary for the architecture kubernetes cares about.\n\nFROM  golang:1.4.2\n\nENV GOARM 6\nENV KUBE_DYNAMIC_CROSSPLATFORMS \\\n  armel\n\nENV KUBE_CROSSPLATFORMS \\\n  linux/386 \\\n  linux/arm \\\n  darwin/amd64 darwin/386 \\\n  windows/amd64 windows/386\n\nRUN cd /usr/src/go/src \\\n  && for platform in ${KUBE_CROSSPLATFORMS}; do GOOS=${platform%/*} GOARCH=${platform##*/} ./make.bash --no-clean; done\n\n# Install g++, then download and install protoc for generating protobuf output\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y g++ rsync \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p /usr/local/src/protobuf && cd /usr/local/src/protobuf &&\\\n    wget -q https://github.com/google/protobuf/releases/download/v3.0.0-beta-2/protobuf-cpp-3.0.0-beta-2.tar.gz &&\\\n    tar xzvf protobuf-cpp-3.0.0-beta-2.tar.gz &&\\\n    cd protobuf-3.0.0-beta-2 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make install && \\\n    ldconfig && \\\n    cd .. && \\\n    rm -rf protobuf-3.0.0-beta-2 && \\\n    protoc --version && rm protobuf-cpp-3.0.0-beta-2.tar.gz\n\n# Use dynamic cgo linking for architectures other than amd64 for the server platforms\n# More info here: https://wiki.debian.org/CrossToolchains\nRUN echo \"deb http://emdebian.org/tools/debian/ jessie main\" > /etc/apt/sources.list.d/cgocrosscompiling.list \\\n  && curl -f -s https://emdebian.org/tools/debian/emdebian-toolchain-archive.key | apt-key add - \\\n  && for platform in ${KUBE_DYNAMIC_CROSSPLATFORMS}; do dpkg --add-architecture ${platform}; done \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y build-essential \\\n  && for platform in ${KUBE_DYNAMIC_CROSSPLATFORMS}; do apt-get install --no-install-recommends -y crossbuild-essential-${platform}; done \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# work around 64MB tmpfs size in Docker 1.6\nENV TMPDIR /tmp.k8s\n\n# Get the code coverage tool and godep\nRUN mkdir $TMPDIR && \\\n    go get golang.org/x/tools/cmd/cover github.com/tools/godep\n\n# Download and symlink etcd.  We need this for our integration tests.\nRUN export ETCD_VERSION=v2.2.1; \\\n    mkdir -p /usr/local/src/etcd &&\\\n    cd /usr/local/src/etcd &&\\\n    curl -fsSLO https://github.com/coreos/etcd/releases/download/$ETCD_VERSION/etcd-$ETCD_VERSION-linux-amd64.tar.gz &&\\\n    tar xzf etcd-$ETCD_VERSION-linux-amd64.tar.gz && \\\n    ln -s ../src/etcd/etcd-$ETCD_VERSION-linux-amd64/etcd /usr/local/bin/ && rm etcd-$ETCD_VERSION-linux-amd64.tar.gz\n"
}