{
  "startTime": 1674245988866,
  "endTime": 1674245989225,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 124
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM i386/ubuntu:trusty\n\nARG mono_version\n\nRUN if [ -z \"${mono_version}\" ]; then echo -e \"\\n\\nargument mono-version is mandatory!\\n\\n\"; exit 1; fi\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install wget && \\\n    cd /root && \\\n    wget -O- 'https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x1E9377A2BA9EF27F' | apt-key add - && \\\n    wget -O- 'https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x8E51A6D660CD88D67D65221D90BD7EACED8E640A' | apt-key add - && \\\n    echo 'deb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu trusty main' >> /etc/apt/sources.list && \\\n    echo 'deb http://ppa.launchpad.net/mc3man/trusty-media/ubuntu trusty main' >> /etc/apt/sources.list && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y gcc-8 g++-8 libudev-dev libx11-dev libxcursor-dev libxrandr-dev libasound2-dev libpulse-dev \\\n            libfreetype6-dev libgl1-mesa-dev libglu1-mesa-dev libxi-dev libxinerama-dev git scons cmake perl make bzip2 yasm && \\\n    ln -sf /usr/bin/gcc-ranlib-8 /usr/bin/gcc-ranlib && \\\n    ln -sf /usr/bin/gcc-ar-8 /usr/bin/gcc-ar && \\\n    ln -sf /usr/bin/gcc-8 /usr/bin/gcc && \\\n    ln -sf /usr/bin/g++-8 /usr/bin/g++ && \\\n    wget -O- https://download.mono-project.com/sources/mono/mono-${mono_version}.tar.bz2 | tar xj && \\\n    cd mono-${mono_version} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --sysconfdir=/etc --localstatedir=/var/lib/mono --disable-boehm --host=i386-linux-gnu && \\\n    make -j && \\\n    make install && \\\n    cert-sync /etc/ssl/certs/ca-certificates.crt && \\\n    wget https://download.mono-project.com/repo/ubuntu/pool/main/m/msbuild/msbuild_16.0+xamarinxplat.2018.09.26.17.53-0xamarin3+ubuntu1404b1_all.deb && \\\n    wget https://download.mono-project.com/repo/ubuntu/pool/main/c/core-setup/msbuild-libhostfxr_2.0.0.2017.07.06.00.01-0xamarin21+ubuntu1404b1_i386.deb && \\\n    wget https://download.mono-project.com/repo/ubuntu/pool/main/m/msbuild/msbuild-sdkresolver_16.0+xamarinxplat.2018.09.26.17.53-0xamarin3+ubuntu1404b1_all.deb && \\\n    wget https://download.mono-project.com/repo/ubuntu/pool/main/n/nuget/nuget_4.7.0.5148.bin-0xamarin2+ubuntu1404b1_all.deb && \\\n    dpkg -i --force-all *.deb && \\\n    sed -i '/Depends.*mono/d' /var/lib/dpkg/status && \\\n    ln -s /usr/bin/mono /usr/bin/cli && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/ && \\\n    rm *.deb && \\\n    rm -rf /root/mono-${mono_version} && rm -rf /var/lib/apt/lists/*;\n\nENV MONO32_PREFIX=/usr\nENV MONO64_PREFIX=/usr\n\nCMD ['/bin/bash']\n"
}