{
  "startTime": 1674242445512,
  "endTime": 1674242445822,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 22,
        "columnEnd": 31
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 1,
        "columnEnd": 19
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 2,
        "columnEnd": 50
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 3,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\n\nARG BUILD_PHP_VERSION=\"7.1.7\"\nARG BUILD_GPG_KEYS=\"A917B1ECDA84AEC2B568FED6F50ABC807BD5DCD0 528995BFEDFBA7191D46839EF9BA0ADA31CBD89E\"\nARG BUILD_PHP_SHA256=\"0d42089729be7b2bb0308cbe189c2782f9cb4b07078c8a235495be5874fff729\"\nARG BUILD_CHECK_SIGNATURE=true\nARG BUILD_CUSTOM_URL=''\nARG BUILD_REPO_URL=''\n\nENV PHPIZE_DEPS \\\n\t\tautoconf \\\n\t\tdpkg-dev \\\n\t\tfile \\\n\t\tg++ \\\n\t\tgcc \\\n\t\tlibc-dev \\\n\t\tlcov \\\n\t\tlibpcre3-dev \\\n\t\tmake \\\n\t\tpkg-config \\\n\t\tre2c\nENV PHP_INI_DIR /usr/local/etc/php\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nENV GPG_KEYS=\"$BUILD_GPG_KEYS\"\nENV PHP_VERSION=\"$BUILD_PHP_VERSION\"\nENV PHP_URL=\"https://secure.php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror\"\nENV PHP_ASC_URL=\"https://secure.php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror\"\nENV PHP_SHA256=\"$BUILD_PHP_SHA256\"\nENV CHECK_SIGNATURE=\"$BUILD_CHECK_SIGNATURE\"\nENV CUSTOM_URL=\"$BUILD_CUSTOM_URL\"\nENV REPO_URL=\"$BUILD_REPO_URL\"\n\nRUN apt-get update && apt-get install -y \\\n\t\t$PHPIZE_DEPS \\\n\t\tca-certificates \\\n\t\tcurl \\\n\t\tlibedit2 \\\n\t\tlibsqlite3-0 \\\n\t\tlibxml2 \\\n\t\txz-utils \\\n        libjpeg-dev \\\n        libpng-dev \\\n        libfreetype6-dev \\\n        libzip-dev \\\n\t--no-install-recommends && rm -r /var/lib/apt/lists/*\nRUN mkdir -p $PHP_INI_DIR/conf.d\nRUN set -xe; \\\n\n\tfetchDeps=' \\\n\t\twget \\\n\t\tunzip \\\n\t'; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends $fetchDeps; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\tmkdir -p /usr/src; rm -rf /usr/src \\\n\tcd /usr/src; \\\n\tif [ -n \"$REPO_URL\" ]; then \\\n    \twget -O php-src-master.zip \"$REPO_URL\"; \\\n\telif [ -n \"$CUSTOM_URL\" ]; then \\\n\t    wget -O php.tar.xz \"$CUSTOM_URL\"; \\\n\telse \\\n\t    wget -O php.tar.xz \"$PHP_URL\"; \\\n\tfi; \\\n\tif [ -n \"$PHP_SHA256\" ] && [ \"$CHECK_SIGNATURE\" = \"true\" ]; then \\\n\t\techo \"$PHP_SHA256  *php.tar.xz\" | sha256sum -c -; \\\n\tfi; \\\n\tif [ -n \"$PHP_ASC_URL\" ] && [ \"$CHECK_SIGNATURE\" = \"true\" ]; then \\\n\t\twget -O php.tar.xz.asc \"$PHP_ASC_URL\"; \\\n\t\texport GNUPGHOME=\"$(mktemp -d)\"; rm -rf -d \\\n\t\tfor key in $GPG_KEYS; do \\\n\t\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n\t\tdone; \\\n\t\tgpg --batch --verify php.tar.xz.asc php.tar.xz; \\\n\t\trm -r \"$GNUPGHOME\"; \\\n\tfi;\n\nCOPY scripts/docker-php-* /usr/local/bin/\n\nRUN set -xe \\\n\t&& buildDeps=\" \\\n\t\t$PHP_EXTRA_BUILD_DEPS \\\n\t\tlibcurl4-openssl-dev \\\n\t\tlibedit-dev \\\n\t\tlibsqlite3-dev \\\n\t\tlibssl-dev \\\n\t\tlibxml2-dev \\\n\t\tbuild-essential \\\n\t\tautoconf \\\n        automake \\\n        libtool \\\n        bison \\\n        re2c \\\n\t\" \\\n\t&& apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \\\n\t&& export CFLAGS=\"$PHP_CFLAGS\" \\\n\t\tCPPFLAGS=\"$PHP_CPPFLAGS\" \\\n\t\tLDFLAGS=\"$PHP_LDFLAGS\"\n\nRUN docker-php-source extract \\\n\t&& cd /usr/src/php \\\n\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& debMultiarch=\"$(dpkg-architecture --query DEB_BUILD_MULTIARCH)\" \\\n\t&& if [ -n \"$REPO_URL\" ]; then ./buildconf; fi \\\n\t&& ./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--with-config-file-path=\"$PHP_INI_DIR\" \\\n\t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \\\n\t\t--enable-ftp \\\n\t\t--enable-mbstring \\\n\t\t--enable-mysqlnd \\\n\t\t--enable-zip \\\n\t\t--with-curl \\\n\t\t--enable-gcov \\\n\t\t--with-libedit \\\n\t\t--with-openssl \\\n\t\t--with-zlib \\\n\t\t--with-gd \\\n        --with-jpeg-dir \\\n        --with-png-dir \\\n\t\t--with-pcre-regex \\\n\t\t--with-libdir=\"lib/$debMultiarch\" \\\n\t\t$PHP_EXTRA_CONFIGURE_ARGS \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make install \\\n\t&& { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \\\n\t&& cd / \\\n\t&& pecl update-channels \\\n\t&& rm -rf /tmp/pear ~/.pearrc \\\n\t&& apt-get purge -y --auto-remove $fetchDeps\n\nRUN cd /usr/src/php/scripts/dev \\\n    && rm generate-phpt.phar \\\n    && php -d phar.readonly=0 generate-phpt/gtPackage.php \\\n    && cd /\n\nWORKDIR /usr/src/php/\nCMD [\"/bin/bash\"]\n"
}