{
  "startTime": 1674246315075,
  "endTime": 1674246315846,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 21,
        "columnEnd": 89
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Yoshiyuki Ieyama <44uk@github.com>\n\nWORKDIR /tmp\n\nRUN sed -i.bak -e \"s%http://[^ ]\\+%http://linux.yz.yamagata-u.ac.jp/ubuntu/%g\" /etc/apt/sources.list\nRUN apt-get update -y && apt-get upgrade -y && apt-get clean && apt-get install -y --no-install-recommends \\\n  git \\\n  curl \\\n  wget \\\n  vim \\\n  autoconf \\\n  automake \\\n  apt-file \\\n  build-essential \\\n  software-properties-common \\\n  pkg-config \\\n  python3 \\\n  libc6-dev \\\n  libssl-dev \\\n  libsasl2-dev \\\n  libtool \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# gcc,g++ 7\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test \\\n  && apt-get update && apt-get install -y --no-install-recommends gcc-7 g++-7 \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/* \\\n  && rm /usr/bin/gcc /usr/bin/g++ \\\n  && ln -s /usr/bin/gcc-7 /usr/bin/gcc \\\n  && ln -s /usr/bin/g++-7 /usr/bin/g++\n\n# cmake\nRUN git clone https://gitlab.kitware.com/cmake/cmake.git -b v3.11.1 --depth 1 \\\n  && cd cmake \\\n  && ./bootstrap --prefix=/usr/local && make -j4 && make install \\\n  && cd -\n\n# boost\nRUN wget https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz \\\n  && tar xzf boost_1_65_1.tar.gz && cd boost_1_65_1 \\\n  && ./bootstrap.sh && ./b2 toolset=gcc install --prefix=/usr/local -j4 \\\n  && cd - && rm boost_1_65_1.tar.gz\n\n# gtest\nRUN git clone https://github.com/google/googletest.git -b release-1.8.0 --depth 1 \\\n  && mkdir -p googletest/_build && cd googletest/_build \\\n  && cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. && make -j4 && make install \\\n  && cd -\n\n# rocksdb\nRUN git clone https://github.com/facebook/rocksdb.git -b v5.12.4 --depth 1 \\\n  && mkdir -p rocksdb/_build && cd rocksdb/_build \\\n  && cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. && make -j4 && make install \\\n  && cd -\n\n# zmqlib\nRUN git clone https://github.com/zeromq/libzmq.git -b v4.2.3 --depth 1 \\\n  && mkdir -p libzmq/_build && cd libzmq/_build \\\n  && cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. && make -j4 && make install \\\n  && cd -\n\n# cppzmq\nRUN git clone https://github.com/zeromq/cppzmq.git -b v4.2.3 --depth 1 \\\n  && mkdir -p cppzmq/_build && cd cppzmq/_build \\\n  && cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. && make -j4 && make install \\\n  && cd -\n\n# mongo-c\nRUN git clone https://github.com/mongodb/mongo-c-driver.git -b 1.4.3 --depth 1 && cd mongo-c-driver \\\n  && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-automatic-init-and-cleanup --prefix=/usr/local \\\n  && make -j4 && make install \\\n  && cd -\n#RUN wget https://github.com/mongodb/mongo-c-driver/releases/download/1.4.2/mongo-c-driver-1.4.2.tar.gz \\\n#  && tar xzf mongo-c-driver-1.4.2.tar.gz && cd mongo-c-driver-1.4.2 \\\n#  && ./configure --disable-automatic-init-and-cleanup --prefix=/usr/local \\\n#  && make -j4 && make install \\\n#  && cd -\n\n# mongo-cxx\nRUN git clone https://github.com/mongodb/mongo-cxx-driver.git -b r3.0.2 --depth 1 && cd mongo-cxx-driver/build \\\n  && cmake -DBSONCXX_POLY_USE_BOOST=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local .. \\\n  && make -j4 && make install \\\n  && cd -\n\n# catapult\nRUN git clone https://github.com/nemtech/catapult-server.git -b master --depth 1 \\\n  && cd catapult-server \\\n  && mkdir _build && cd _build \\\n  && cmake -DCMAKE_BUILD_TYPE=RelWithDebugInfo \\\n    -DCMAKE_CXX_FLAGS=\"-pthread\" \\\n    -DPYTHON_EXECUTABLE=/usr/bin/python3 \\\n    -DBSONCXX_LIB=/usr/local/lib/libbsoncxx.so \\\n    -DMONGOCXX_LIB=/usr/local/lib/libmongocxx.so \\\n    .. \\\n  && make publish && make -j4\n\n# ------------------------------------\n# ここから先は作業用に都合よくやっている\n# 行儀が良いとは思ってないよ\n\nCOPY patch/config-user.patch .\nRUN cd catapult-server \\\n  && patch -p1 < /tmp/config-user.patch \\\n  && mkdir -p seed/mijin-test \\\n  && mkdir data \\\n  && cd _build \\\n  && mv resources resources.bk \\\n  && cp -r ../resources .\n\n  # generate nemesis block\n  # && ./bin/catapult.tools.nemgen ../tools/nemgen/resources/mijin-test.properties \\\n  # && cp -r ../seed/mijin-test/00000 ../data/\n\nWORKDIR catapult-server/_build\n"
}