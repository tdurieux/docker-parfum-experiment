{
  "startTime": 1674236196107,
  "endTime": 1674236196310,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 166
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 42,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\nLABEL maintainer=\"mstewart@riotgames.com\"\n\n# Yum workaround to stalled mirror\nRUN sed -i -e 's/enabled=1/enabled=0/g' /etc/yum/pluginconf.d/fastestmirror.conf\n\nRUN rm -f /var/lib/rpm/__*\nRUN rpm --rebuilddb -v -v\nRUN yum clean all\n\n\n# see https://bugs.debian.org/775775\n# and https://github.com/docker-library/java/issues/19#issuecomment-70546872\nENV CA_CERTIFICATES_JAVA_VERSION 20140324\n\nRUN yum -v install -y \\\n    wget \\\n    zip \\\n    openssh-client \\\n    unzip \\\n    java-1.8.0-openjdk \\\n    git \\\n    dos2unix \\\n    && yum clean all && rm -rf /var/cache/yum\n\n#RUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\n\n# Install Tini\nENV TINI_VERSION 0.9.0\nENV TINI_SHA fa23d1e20732501c3bb8eeeca423c89ac80ed452\n\n# Use tini as subreaper in Docker container to adopt zombie processes\nRUN curl -fsSL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static -o /bin/tini && chmod +x /bin/tini \\\n  && echo \"$TINI_SHA  /bin/tini\" | sha1sum -c -\n\n# SET Jenkins Environment Variables\nENV JENKINS_HOME /var/jenkins_home\nENV JENKINS_SLAVE_AGENT_PORT 50000\nENV JENKINS_VERSION 2.125\nENV JENKINS_UC https://updates.jenkins-ci.org\nENV COPY_REFERENCE_FILE_LOG $JENKINS_HOME/copy_reference_file.log\n\n# Jenkins is run with user `jenkins`, uid = 1000\n# If you bind mount a volume from the host or a data container,\n# ensure you use the same uid\nRUN useradd -d \"$JENKINS_HOME\" -u 1000 -m -s /bin/bash jenkins\n\n# `/usr/share/jenkins/ref/` contains all reference configuration we want\n# to set on a fresh new installation. Use it to bundle additional plugins\n# or config file with your custom jenkins Docker image.\nRUN mkdir -p /usr/share/jenkins/ref/init.groovy.d\n\n# Install Jenkins\nRUN curl -fL https://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war -o /usr/share/jenkins/jenkins.war\n\nENV JAVA_OPTS=\"-Xmx8192m\"\nENV JENKINS_OPTS=\"--logfile=/var/log/jenkins/jenkins.log  --webroot=/var/cache/jenkins/war\"\n\n# Prep Jenkins Directories\nRUN chown -R jenkins \"$JENKINS_HOME\" /usr/share/jenkins/ref\nRUN mkdir /var/log/jenkins\nRUN mkdir /var/cache/jenkins\nRUN chown -R jenkins:jenkins /var/log/jenkins\nRUN chown -R jenkins:jenkins /var/cache/jenkins\n\n# Expose Ports for web and slave agents\nEXPOSE 8080\nEXPOSE 50000\n\nCOPY plugins.sh /usr/local/bin/plugins.sh\nRUN chmod +x /usr/local/bin/plugins.sh\nRUN dos2unix /usr/local/bin/plugins.sh\n\n# Install default plugins\nCOPY plugins.txt /tmp/plugins.txt\nRUN dos2unix /tmp/plugins.txt\n\nRUN /usr/local/bin/plugins.sh /tmp/plugins.txt\n\n# Copy in local config files\nCOPY initagent.groovy /usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy\n\n# Copy startup script\nCOPY jenkins.sh /usr/local/bin/jenkins.sh\nRUN chmod +x /usr/local/bin/jenkins.sh\nRUN dos2unix /usr/local/bin/jenkins.sh\n\n# Setup Jenkins data and folders\nCOPY jenkinsexport.tar.gz /tmp/jenkinsexport.tar.gz\nCOPY jenkinsdefaultsecrets.tar.gz /tmp/jenkinsdefaultsecrets.tar.gz\nCOPY jobs /var/jenkins_home/jobs\nRUN tar -xvf /tmp/jenkinsexport.tar.gz && tar -xvf /tmp/jenkinsdefaultsecrets.tar.gz && rm /tmp/jenkinsexport.tar.gz\nRUN rm /tmp/jenkinsexport.tar.gz && rm /tmp/jenkinsdefaultsecrets.tar.gz\nRUN chown -R jenkins:jenkins /var/jenkins_home\n\n# Switch to the jenkins user\nUSER jenkins\n\n# Tini as the entry point to manage zombie processes\nENTRYPOINT [\"/bin/tini\", \"--\", \"/usr/local/bin/jenkins.sh\"]"
}