{
  "startTime": 1674251206130,
  "endTime": 1674251206255,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6-alpine3.7 AS development\nWORKDIR /app\n\n# Node\nRUN apk add --no-cache -U nodejs\nCOPY package.json /app\nRUN npm install -g grunt-cli clientjade jshint && npm cache clean --force;\nRUN npm install && npm cache clean --force;\n\n# Python\nRUN apk add --no-cache -U postgresql-libs git libmagic libjpeg-turbo bash pcre \\\n    libxml2 libxslt xmlsec\nRUN pip install --no-cache-dir --upgrade pip pip-tools\n\nCOPY requirements.in requirements.txt ./\n\n# Install a virtual package with build dependencies voor pip install\n# run pip install and remove build dependencies.\nRUN apk add --no-cache -U --virtual build-deps \\\n    python3-dev build-base linux-headers pcre-dev musl-dev \\\n    postgresql-dev libffi-dev libjpeg-turbo-dev libressl-dev zlib-dev \\\n    libxml2-dev libxslt-dev xmlsec-dev && \\\n    pip-sync && \\\n    pip install --no-cache-dir uwsgi && \\\n    pip install --no-cache-dir -r requirements.txt && \\\n    pip install --no-cache-dir -r requirements.txt && \\\n    apk del build-deps\n\n\nFROM development AS production\n\n# Copy the source into the image for production\nCOPY src/ /app/src\nRUN mkdir -p /app/src/js/global && \\\n    clientjade src/jade/ > src/js/global/jade.js\n\nCOPY . /app\nRUN grunt clean && grunt prod\nRUN pybabel compile -d app/translations\nRUN npm run build\n"
}