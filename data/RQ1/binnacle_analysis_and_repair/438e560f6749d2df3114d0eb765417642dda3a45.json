{
  "startTime": 1674252727977,
  "endTime": 1674252728146,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 9,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 9,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 9,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 9,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 9,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 9,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "# Use a Pre-Built CircleCI Docker Image known to work with Composer\nFROM circleci/php:7.1-node-browsers-legacy\n\n\n# Define the user as circleci, as provided by the parent image\nUSER circleci\n\n# Set working directory\nWORKDIR documentation\n\n# Install Ruby\nRUN sudo apt-get install -y --no-install-recommends ruby-full && rm -rf /var/lib/apt/lists/*;\n\n# Install Ruby dependencies\nRUN sudo apt-get install -y --no-install-recommends zlib1g-dev && rm -rf /var/lib/apt/lists/*;\nRUN sudo gem install pkg-config -v \"~> 1.1\"\nRUN sudo chown -R circleci /var/lib/gems/ /usr/local/bin .\nRUN gem install bundler --no-rdoc --no-ri\nCOPY --chown=circleci:circleci Gemfile ./\nRUN bundle install --jobs=4\n\n# Update Composer\n#RUN composer self-update\n\n# Install PHP dependencies\nCOPY --chown=circleci:circleci composer.json ./\nCOPY --chown=circleci:circleci composer.lock ./\nRUN composer install\n\n# Install node dependencies\nCOPY --chown=circleci:circleci package.json ./\nRUN npm install && npm cache clean --force;\n\n# Copy the working directories into the container\nCOPY --chown=circleci:circleci ./features /documentation/features\nCOPY --chown=circleci:circleci ./behat.yml ./budget.json ./Gruntfile.js ./Rakefile ./sculpin.json ./wraith.yaml /documentation/\n\n# Copy the app directory\nCOPY --chown=circleci:circleci ./app /documentation/app\n\n# Install Terminus Globally\nRUN composer global require pantheon-systems/terminus\n\n# Compile assets (CSS and Terminus Manual)\nCOPY --chown=circleci:circleci ./source /documentation/source\nRUN node_modules/.bin/grunt\nRUN ~/.composer/vendor/pantheon-systems/terminus/bin/terminus list > /documentation/source/docs/assets/terminus/commands.json --format=json\nRUN curl -f https://api.github.com/repos/pantheon-systems/terminus/releases > /documentation/source/docs/assets/terminus/releases.json\n\n# Generate the site in development mode (include drafts)\nRUN bin/sculpin generate --env=dev\n\n# Symlink source inside output_dev\nRUN cd output_dev && ln -s ./ source\n\n# Copy scripts into the container\nCOPY --chown=circleci:circleci ./scripts /documentation/scripts\n\n# Run changelog fix script\nRUN ./scripts/fix-changelog-index.sh\n\n# Make port 8000 available to the world outside this container\nEXPOSE 8000\n\n# Add Versioning\nADD VERSION .\n"
}