{
  "startTime": 1674234375012,
  "endTime": 1674234375197,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 68
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 113
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 18,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.4\n\n# Alpine FFMPG from Bruno Celeste <bruno@coconut.co>\n\nENV FFMPEG_VERSION=3.0.8\n\nWORKDIR /tmp/ffmpeg\n\nRUN apk add --no-cache --update --update-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing/ fdk-aac-dev\n\nRUN apk add build-base curl nasm tar bzip2 \\\n zlib-dev openssl-dev yasm-dev lame-dev libogg-dev x264-dev libvpx-dev libvorbis-dev\\\n x265-dev freetype-dev libass-dev libwebp-dev rtmpdump-dev libtheora-dev opus-dev && \\\n\n  DIR=$(mktemp -d) && cd ${DIR} && \\\n\n  curl -f -s https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz | tar zxvf - -C . && \\\n  cd ffmpeg-${FFMPEG_VERSION} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  --enable-version3 --enable-gpl --enable-nonfree --enable-small --enable-libmp3lame --enable-libx264 --enable-libx265 \\\n  --enable-libvpx --enable-libtheora --enable-libvorbis --enable-libopus --enable-libass --enable-libwebp --enable-librtmp \\\n  --enable-postproc --enable-avresample --enable-libfreetype --enable-openssl --enable-libfdk-aac --disable-debug && \\\n  make && \\\n  make install && \\\n  make distclean && \\\n\n  rm -rf ${DIR} && \\\n  apk del build-base curl tar bzip2 x264 openssl nasm && rm -rf /var/cache/apk/*\n\nRUN apk update && apk add --no-cache ca-certificates wget\n\n# where external videos will be mounted\nRUN mkdir /storage\n\nRUN mkdir /lib64 && ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2\n\nRUN wget https://github.com/mobileblobs/chrometizer/raw/master/dist/chrometizer && \\\n  chmod +x chrometizer && mv chrometizer /usr/local/bin\n\nCMD chrometizer\n"
}