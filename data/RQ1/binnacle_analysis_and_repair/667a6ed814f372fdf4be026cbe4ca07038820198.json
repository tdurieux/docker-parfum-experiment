{
  "startTime": 1674241346428,
  "endTime": 1674241346881,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 5,
        "columnEnd": 52
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 5,
        "columnEnd": 52
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 163
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7.5.1804 AS build\nWORKDIR /home\n\n# COMMON BUILD TOOLS\nRUN yum install -y -q bzip2 make autoconf libtool git wget ca-certificates pkg-config gcc gcc-c++ bison flex patch epel-release yum-devel libcurl-devel zlib-devel; rm -rf /var/cache/yum\n\n# Install cmake\nARG CMAKE_VER=3.13.1\nARG CMAKE_REPO=https://cmake.org/files\nRUN wget -O - ${CMAKE_REPO}/v${CMAKE_VER%.*}/cmake-${CMAKE_VER}.tar.gz | tar xz && \\\n    cd cmake-${CMAKE_VER} && \\\n    ./bootstrap --prefix=\"/usr\" --system-curl && \\\n    make -j8 && \\\n    make install\n\n# Install automake, use version 1.14 on CentOS\nARG AUTOMAKE_VER=1.14\nARG AUTOMAKE_REPO=https://ftp.gnu.org/pub/gnu/automake/automake-${AUTOMAKE_VER}.tar.xz\nRUN wget -O - ${AUTOMAKE_REPO} | tar xJ && \\\n    cd automake-${AUTOMAKE_VER} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --libdir=/usr/lib64 --disable-doc && \\\n    make -j8 && \\\n    make install\n\n# Build NASM\nARG NASM_VER=2.13.03\nARG NASM_REPO=https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VER}/nasm-${NASM_VER}.tar.bz2\nRUN wget ${NASM_REPO} && \\\n     tar -xaf nasm* && \\\n     cd nasm-${NASM_VER} && \\\n     ./autogen.sh && \\\n     ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/usr\" --libdir=/usr/lib64 && \\\n     make -j8 && \\\n     make install\n\n# Build YASM\nARG YASM_VER=1.3.0\nARG YASM_REPO=https://www.tortall.net/projects/yasm/releases/yasm-${YASM_VER}.tar.gz\nRUN wget -O - ${YASM_REPO} | tar xz && \\\n     cd yasm-${YASM_VER} && \\\n     sed -i \"s/) ytasm.*/)/\" Makefile.in && \\\n     ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/usr\" --libdir=/usr/lib64 && \\\n     make -j8 && \\\n     make install\n\n#build ISPC\n\nARG ISPC_VER=1.9.1\nARG ISPC_REPO=https://downloads.sourceforge.net/project/ispcmirror/v${ISPC_VER}/ispc-v${ISPC_VER}-linux.tar.gz\nRUN wget -O - ${ISPC_REPO} | tar xz\nENV ISPC_EXECUTABLE=/home/ispc-v${ISPC_VER}-linux/ispc\n\n#build embree\n\nRUN yum install -y -q tbb-devel mesa-libGL-devel && rm -rf /var/cache/yum\n\nARG EMBREE_REPO=https://github.com/embree/embree.git\nARG EMBREE_VER=df0b324\nRUN git clone ${EMBREE_REPO} && \\\n    mkdir embree/build && \\\n    cd embree/build && \\\n    git checkout ${EMBREE_VER} && \\\n    cmake .. -Wno-dev -DEMBREE_TUTORIALS=OFF && \\\n    make -j 8 && \\\n    make install\n\n#build ospray\n\nRUN yum install -y -q libtiff-devel zlib-devel libpng-devel libjpeg-devel python-devel boost-devel && rm -rf /var/cache/yum\n\nARG OpenEXR_VER=0ac2ea3\nARG OpenEXR_REPO=https://github.com/openexr/openexr.git\nRUN git clone ${OpenEXR_REPO}; \\\n    mkdir openexr/build; \\\n    cd openexr/build; \\\n    git checkout ${OpenEXR_VER}; \\\n    cmake ..; \\\n    make -j 8; \\\n    make install\n\nARG OpenImageIO_VER=5daa9a1\nARG OpenImageIO_REPO=https://github.com/OpenImageIO/oiio.git\nRUN git clone ${OpenImageIO_REPO}; \\\n    mkdir oiio/build; \\\n    cd oiio/build; \\\n    git checkout ${OpenImageIO_VER}; \\\n    cmake ..; \\\n    make -j 8; \\\n    make install\n\n#build ospray\n\nRUN yum install -y -q glfw-devel mesa-dri-drivers mpich-devel openssh-server openssh-clients && rm -rf /var/cache/yum\n\nENV PATH=$PATH:/usr/lib64/mpich/bin\n\nARG OSPRAY_VER=c42a885\nARG OSPRAY_REPO=https://github.com/ospray/ospray.git\nRUN git clone ${OSPRAY_REPO}; \\\n    mkdir ospray/build; \\\n    cd ospray/build; \\\n    git checkout ${OSPRAY_VER}; \\\n    cmake .. -DOSPRAY_MODULE_MPI=ON -DOSPRAY_SG_OPENIMAGEIO=ON; \\\n    make -j 8\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/ospray/build\n\nRUN mkdir -p /var/run/sshd; \\\n    sed -i 's/^#Port/Port/g' /etc/ssh/sshd_config; \\\n    sed -i 's/^Port 22/Port 2222/g' /etc/ssh/sshd_config; \\\n    sed -i 's/^#PermitRootLogin/PermitRootLogin/g' /etc/ssh/sshd_config; \\\n    sed -i 's/^PermitRootLogin.*/PermitRootLogin yes/g' /etc/ssh/sshd_config; \\\n    sed -i 's/#   Port 22/Port 2222/g' /etc/ssh/ssh_config; \\\n    echo 'root:ospray' |chpasswd; \\\n    /usr/sbin/sshd-keygen; \\\n    sed -i 's/#   StrictHostKeyChecking ask/   StrictHostKeyChecking no/g' /etc/ssh/ssh_config; \\\n    /usr/bin/ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa; \\\n    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n\n#include(ospray-example_san-miguel.m4)\n#include(ospray-example_xfrog.m4)\n\nFROM build\nLABEL Description=\"This is the base image for ospray-oiio-mpi CentOS 7.5\"\nLABEL Vendor=\"Intel Corporation\"\nWORKDIR /home\n"
}