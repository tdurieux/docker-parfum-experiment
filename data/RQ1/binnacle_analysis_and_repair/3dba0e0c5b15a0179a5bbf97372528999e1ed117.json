{
  "startTime": 1674240960502,
  "endTime": 1674240961048,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 5,
        "columnEnd": 74
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 5,
        "columnEnd": 20
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 27,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 5,
        "columnEnd": 57
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 102
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 92,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nENV AGENT_DIR  /opt/buildAgent\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tlxc iptables aufs-tools ca-certificates curl wget software-properties-common language-pack-en \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Fix locale.\nENV LANG en_US.UTF-8\nENV LC_CTYPE en_US.UTF-8\nRUN locale-gen en_US && update-locale LANG=en_US.UTF-8 LC_CTYPE=en_US.UTF-8\n\n# grab gosu for easy step-down from root\nENV GOSU_VERSION 1.7\nRUN set -x \\\n    && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n    && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n    && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n    && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n    && chmod +x /usr/local/bin/gosu \\\n    && gosu nobody true && rm -rf -d\n\n# Install java-8-oracle\nRUN echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections \\\n\t&& echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections \\\n\t&& add-apt-repository -y ppa:webupd8team/java \\\n\t&& apt-get update \\\n  \t&& apt-get install -y --no-install-recommends \\\n      oracle-java8-installer ca-certificates-java \\\n  \t&& rm -rf /var/lib/apt/lists/* /var/cache/oracle-jdk8-installer/*.tar.gz /usr/lib/jvm/java-8-oracle/src.zip /usr/lib/jvm/java-8-oracle/javafx-src.zip \\\n      /usr/lib/jvm/java-8-oracle/jre/lib/security/cacerts \\\n  \t&& ln -s /etc/ssl/certs/java/cacerts /usr/lib/jvm/java-8-oracle/jre/lib/security/cacerts \\\n  \t&& update-ca-certificates\n\n# Install docker\nENV DOCKER_BUCKET get.docker.com\nENV DOCKER_VERSION 1.11.1\nENV DOCKER_SHA256 893e3c6e89c0cd2c5f1e51ea41bc2dd97f5e791fcfa3cee28445df277836339d\nRUN set -x \\\n  && curl -fSL \"https://${DOCKER_BUCKET}/builds/Linux/x86_64/docker-$DOCKER_VERSION.tgz\" -o docker.tgz \\\n  && echo \"${DOCKER_SHA256}  *docker.tgz\" | sha256sum -c - \\\n  && tar -xzvf docker.tgz \\\n  && mv docker/* /usr/local/bin/ \\\n  && rmdir docker \\\n  && rm docker.tgz \\\n  && docker -v\n\nRUN groupadd docker && adduser --disabled-password --gecos \"\" teamcity \\\n\t&& sed -i -e \"s/%sudo.*$/%sudo ALL=(ALL:ALL) NOPASSWD:ALL/\" /etc/sudoers \\\n\t&& usermod -a -G docker,sudo teamcity\n\n# Install jq (from github, repo contains ancient version)\nRUN curl -f -o /usr/local/bin/jq -SL https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 \\\n\t&& chmod +x /usr/local/bin/jq\n\n# Install nodejs (from official node dockerfile)\n\n# gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n  && for key in \\\n    9554F04D7259F04124DE6B476D5A82AC7E37093B \\\n    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n    0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 \\\n    FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n    B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8; \\\n  do \\\n    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n  done\n\nENV NODE_VERSION 4.2.6\nENV NPM_VERSION 3.5.0\n\nRUN curl -f -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" \\\n  && curl -f -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n  && gpg --batch --verify SHASUMS256.txt.asc \\\n  && grep \" node-v$NODE_VERSION-linux-x64.tar.gz\\$\" SHASUMS256.txt.asc | sha256sum -c - \\\n  && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 \\\n  && rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc \\\n  && npm install -g \"npm@$NPM_VERSION\" \\\n  && npm cache clear --force\n\n# Install ruby build repositories\nRUN apt-add-repository ppa:brightbox/ruby-ng \\\n\t&& apt-get update \\\n    && apt-get upgrade -y \\\n\t&& apt-get install --no-install-recommends -y ruby2.1 ruby2.1-dev ruby ruby-switch unzip \\\n\tiptables lxc fontconfig libffi-dev build-essential git python-dev libssl-dev python-pip \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Install httpie (with SNI), awscli, docker-compose\nRUN pip install --no-cache-dir --upgrade pyopenssl pyasn1 ndg-httpsclient httpie awscli docker-compose==1.6.0\nRUN ruby-switch --set ruby2.1\nRUN npm install -g bower grunt-cli && npm cache clean --force;\nRUN gem install rake bundler compass --no-ri --no-rdoc\n\n# Install the magic wrapper.\nADD wrapdocker /usr/local/bin/wrapdocker\n\nADD docker-entrypoint.sh /docker-entrypoint.sh\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nVOLUME /var/lib/docker\nVOLUME /opt/buildAgent\n\n\nEXPOSE 9090\n"
}