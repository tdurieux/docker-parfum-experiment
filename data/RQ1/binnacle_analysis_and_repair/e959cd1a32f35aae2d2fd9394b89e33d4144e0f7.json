{
  "startTime": 1674251174574,
  "endTime": 1674251174784,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 3,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 3,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 3,
        "columnEnd": 175
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 3,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 3,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 3,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 3,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 3,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 3,
        "columnEnd": 175
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 3,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 3,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 3,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 3,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04 as builder\nLABEL maintainer=MagnaChain \\\n    version=0.0.1 \\\n    desp='MagnaChain Docker image builder'\n#工作目录\nWORKDIR /root\n\n#copy code to docker\nCOPY . /root/code\n\n# setup ENV\nRUN pwd \\ \n# && mv /etc/apt/sources.list /etc/apt/sources.list.bak \\\n# && echo \"deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\" >> /etc/apt/sources.list \\\n# && echo \"deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\" >> /etc/apt/sources.list \\\n# && echo \"deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\" >> /etc/apt/sources.list \\\n# && echo \"deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\" >> /etc/apt/sources.list \\\n# && echo \"deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\" >> /etc/apt/sources.list \\\n# && echo \"deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\" >> /etc/apt/sources.list \\\n# && echo \"deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\" >> /etc/apt/sources.list \\\n# && echo \"deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\" >> /etc/apt/sources.list \\\n# && echo \"deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\" >> /etc/apt/sources.list \\\n&& apt-get update \\\n&& apt-get install --no-install-recommends build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils -y \\\n&& apt-get install --no-install-recommends libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libboost-iostreams-dev -y \\\n&& apt-get install --no-install-recommends software-properties-common -y \\\n&& add-apt-repository ppa:bitcoin/bitcoin \\\n&& apt-get update \\\n&& apt-get install --no-install-recommends libdb4.8-dev libdb4.8++-dev -y \\\n&& apt-get install --no-install-recommends libminiupnpc-dev -y \\\n&& apt-get install --no-install-recommends libzmq3-dev -y \\\n&& cd /root/code \\\n&& sh ./autogen.sh \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-gui \\\n&& make \\\n&& mkdir -p /root/dist \\\n&& perl ./docker_deploy.pl /root/code /root/dist && rm -rf /var/lib/apt/lists/*;\n#ENV done\n# RUN cd /root/code \\\n# && sh ./autogen.sh \\\n# && ./configure --without-gui \\\n# && make \\\n# && mkdir -p /root/dist \\\n# && perl ./docker_deploy.pl /root/dist \\\n\n\nFROM ubuntu:18.04 as result\n#定义区块数据挂载点和环境变量\nWORKDIR /root\nENV APP=/root/app\nENV CHAIN_DATA=${APP}/blocks\nENV PATH ${APP}:$PATH\n#暴露节点端口\nEXPOSE 8332\n#复制所需的依赖库和可执行文件\nCOPY --from=builder /root/dist /root/app/\nCOPY --from=builder /root/code/docker-entrypoint.sh /usr/local/bin/\n# COPY ./app /root/app/\n# COPY docker-entrypoint.sh /usr/local/bin/\n#设置可执行权限，并且建立区块数据存放目录，main为主链数据，side为侧链数据\n#添加so库的查找路径\nRUN cd ${APP} \\\n&& ls -l \\\n&& chmod +x ${APP}/magnachaind ${APP}/magnachain-cli /usr/local/bin/docker-entrypoint.sh \\\n&&  mkdir -p blocks/main blocks/side \\\n&& echo ${APP} >> /etc/ld.so.conf.d/app.conf \\\n&& ldconfig\n#TODO HEALTHCHECK健康检查\n# HEALTHCHECK   \n#启动节点\nENTRYPOINT [ \"docker-entrypoint.sh\",\"magnachaind\"]\n#   printtoconsole just for debug\n# CMD [ \"-printtoconsole\", \"-datadir=/root/app/blocks/main\" ]\nCMD [ \"-datadir=/root/app/blocks/main\" ]"
}