{
  "startTime": 1674250995048,
  "endTime": 1674250995177,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 354
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 354
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM thinktopic/cortex-base\n# gives us ubuntu 16.10, CUDA, not sure about CUDNNN, lein, vault\nMAINTAINER ThinkTopic\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y -q \\\n    build-essential ant checkinstall cmake pkg-config yasm gfortran git libjpeg-dev libpng-dev libtiff-dev libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev libxine2-dev libv4l-dev libgtk2.0-dev libtbb-dev libatlas-base-dev libmp3lame-dev libtheora-dev libvorbis-dev libxvidcore-dev libopencore-amrnb-dev libopencore-amrwb-dev x264 v4l-utils && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -L https://github.com/opencv/opencv/archive/3.3.0.tar.gz | tar xvz\nENV OPENCV_SRC_DIR /opencv-3.3.0\n\nRUN pwd\n\n# change dir to simplify build commands:\nWORKDIR ${OPENCV_SRC_DIR}\n\n# so CMake knows to build the Java bindings:\nENV JAVA_HOME /usr/lib/jvm/java-8-oracle\n# Turned off CUDA support here because it introduced a gcc dependency conflict on my machine and we don't need it for OpenCV\nRUN mkdir build && cd build && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_CUDA=OFF ..\nRUN cd build && make -j$(nproc)\n# Turn the .so into a jar so we can install it to local maven later on using localrepo plugin:\nRUN mkdir -p native/linux/x86_64 && cp build/lib/*java*.so native/linux/x86_64/ && jar -cMf opencv-native-330.jar native\n\n\nENV DIR /usr/src/app\nVOLUME ${DIR}\n\nRUN chmod 777 ${DIR}\n\n# we use the project.clj next to the Dockerfile just to install opencv jars locally, so the\n# container runner's app (in DIR) can access them\nWORKDIR /\n\nADD profiles.clj.for-docker-use /etc/leiningen/profiles.clj\nADD install-opencv-jar.sh /install-opencv-jar.sh\n\nENV LEIN_REPL_HOST \"0.0.0.0\"\nENV LEIN_REPL_PORT 6666\n# this is to do with weirdness around the lein install from the base image\n# being specific to the root user\nRUN unset LEIN_HOME\nRUN unset LEIN_JAR\n\nWORKDIR ${DIR}\nENV HOME ${DIR}\n# this will install opencv for the running user, then open a repl\n# doing the install inside the dockerfile would make it only work for root\n# doing it on run allows for us to run the container as a non superuser\n# contrary to my expectations, there's no way of having a system-wide, local maven repo AND a user-specific one\nENTRYPOINT [\"bash\", \"/install-opencv-jar.sh\"]\n\n\n"
}