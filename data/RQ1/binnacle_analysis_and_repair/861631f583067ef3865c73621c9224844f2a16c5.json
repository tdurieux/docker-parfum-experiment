{
  "startTime": 1674252378939,
  "endTime": 1674252379202,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 2,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedDockerfile": "#JENKINS expects this file to be copied as Dockerfile to the root of the repo when Jenkins job is run for building\nFROM ubuntu:14.04\n\n## Not supported by docker-compose\n\nARG GITHUB_TAG\nARG GITHUB_DIR=tags/\n\n#### Basic image utilities\nRUN apt-get update && \\\n     apt-get upgrade -y && \\\n     apt-get install --no-install-recommends -y python && \\\n     apt-get install --no-install-recommends -y python3-pip && \\\n     apt-get install --no-install-recommends -y wget curl unzip gcc python-dev python-setuptools git less lynx hdfview && rm -rf /var/lib/apt/lists/*;\n##########\n\n# Install some more useful tools\nRUN apt-get install --no-install-recommends -y \\\n aufs-tools \\\n automake \\\n bedtools \\\n btrfs-tools \\\n build-essential \\\n dpkg-sig \\\n iptables \\\n samtools \\\n software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n#### Specific for google cloud support\nRUN wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip \\\n    && unzip google-cloud-sdk.zip \\\n    && rm google-cloud-sdk.zip\n\nRUN google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --bash-completion=true --rc-path=/.bashrc --disable-installation-options\nVOLUME [\"/root/.config\"]\nENV PATH /google-cloud-sdk/bin:$PATH\n\nRUN yes | gcloud components update\nRUN yes | gcloud components update preview\n###########\n\n# Set environment variables.\nENV HOME /root\n\n# Define working directory.\nWORKDIR /root\n\n# Define default command.\nCMD [\"bash\"]\n\n# Installing Java 8.... dockerfile snippet from https://github.com/dockerfile/java/blob/master/oracle-java8/Dockerfile\nRUN \\\n  echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \\\n  add-apt-repository -y ppa:webupd8team/java && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y oracle-java8-installer && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  rm -rf /var/cache/oracle-jdk8-installer\n\n# Define commonly used JAVA_HOME variable\nENV JAVA_HOME /usr/lib/jvm/java-8-oracle\nENV JAVA_LIBRARY_PATH /usr/lib/jni\n\n# Added from GATK4 public (Getting R setup)\nRUN mkdir -p /usr/local/lib/R/ && \\\n    mkdir -p ~/site-library && \\\n    ln -sFv ~/site-library /usr/local/lib/R/site-library\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 && \\\n    add-apt-repository \"deb http://cran.rstudio.com/bin/linux/ubuntu trusty/\" && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y --force-yes \\\n        r-base-dev=3.1.3-1trusty \\\n        r-base-core=3.1.3-1trusty && rm -rf /var/lib/apt/lists/*;\n\n# R setup complete...\n\n# Installing GATK4 protected (from repo: gatk-protected)\n#  This Dockerfile is getting the specified tag of gatk4-protected\n#  This Dockerfile generates a jar file that will work without spark or in spark standalone.  Not on a spark cluster.\n\n# Install R dependencies and build the shadowJar\nENV GITHUB_TAG ${GITHUB_TAG}\nENV GITHUB_DIR ${GITHUB_DIR}\nRUN mkdir -p /root/gatk-protected/\nCOPY . /root/gatk-protected/\nWORKDIR /root/gatk-protected/\nRUN Rscript /root/gatk-protected/scripts/install_R_packages.R\nRUN ./gradlew clean compileTestJava shadowJar\n\nWORKDIR /root\n\n# Make sure we can see a help message\nRUN ln -sFv /root/gatk-protected/build/libs/gatk-protected.jar\nRUN java -jar gatk-protected.jar -h\n\n# Install git lfs and get latest big files\nWORKDIR /root/gatk-protected/\nRUN bash scripts/install_git_lfs.sh\n\nRUN echo This docker image is running gatk-protected `git describe --tags` > /root/GATK_PROTECTED_VERSION\n\n# Create a simple unit test runner\nENV CI true\nRUN echo \"cd /root/gatk-protected/ && ./gradlew test\" >/root/run_unit_tests.sh\n\nWORKDIR /root\n"
}