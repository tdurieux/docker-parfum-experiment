{
  "startTime": 1674236304860,
  "endTime": 1674236304976,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Basic docker image for PokemonGo-Map\n# Usage:\n#   docker build -t pokemongo-map .\n#   docker run -d -P pokemongo-map -a ptc -u YOURUSERNAME -p YOURPASSWORD -l \"Seattle, WA\" -st 10 --gmaps-key CHECKTHEWIKI\n\nFROM python:2.7-alpine\n\n# Default port the webserver runs on\nEXPOSE 5000\n\n# Working directory for the application\nWORKDIR /usr/src/app\n\n# Set Entrypoint with hard-coded options\nENTRYPOINT [\"dumb-init\", \"-r\", \"15:2\", \"python\", \"./runserver.py\", \"--host\", \"0.0.0.0\"]\n\n# Set default options when container is run without any command line arguments\nCMD [\"-h\"]\n\n# Install required system packages\nRUN apk add --no-cache ca-certificates git\n\nCOPY requirements.txt /usr/src/app/\n\nRUN apk add --no-cache build-base \\\n && pip install --no-cache-dir dumb-init \\\n && pip install --no-cache-dir -r requirements.txt \\\n && apk del build-base\n\nCOPY package.json Gruntfile.js /usr/src/app/\nCOPY static /usr/src/app/static\n\nRUN apk add --no-cache build-base nodejs \\\n && npm install \\\n && npm run build \\\n && rm -rf node_modules \\\n && apk del build-base nodejs && npm cache clean --force;\n\n# Copy everything to the working directory (Python files, templates, config) in one go.\nCOPY . /usr/src/app/\n"
}