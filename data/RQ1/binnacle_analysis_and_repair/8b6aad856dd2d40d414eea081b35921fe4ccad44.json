{
  "startTime": 1674250976587,
  "endTime": 1674250976970,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 62,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y git wget curl build-essential unzip ca-certificates libjpeg-dev libpng-dev \\\n                       autoconf libtool pkg-config libopenblas-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get upgrade -y\n\n\nWORKDIR /opt\n\n# Get rid of old cmake\nRUN apt-get remove -y cmake && apt-get purge -y --auto-remove cmake\nRUN wget https://cmake.org/files/v3.12/cmake-3.12.4.tar.gz && tar -xzvf cmake-3.12.4.tar.gz && rm cmake-3.12.4.tar.gz\nRUN cd cmake-3.12.4 && ./bootstrap && make -j $(nproc) && make install && cmake --version\n\n# Install gRPC\nRUN git clone -b v1.15.0 https://github.com/grpc/grpc\nRUN cd grpc && git submodule update --init\nRUN cd grpc && make -j $(nproc) REQUIRE_CUSTOM_LIBRARIES_opt=1 static\nRUN cd grpc && make install\nRUN cd grpc/third_party/protobuf && make install\n\n# Install LevelDB\nRUN git clone https://github.com/google/leveldb.git\nRUN cd leveldb && git reset --hard 1cb384088184be9840bd59b4040503a9fa9aee66\nRUN cd leveldb && mkdir -p build && cd build && cmake -DCMAKE_BUILD_TYPE=Release ..\nRUN cd leveldb && cd build && make -j $(nproc)\nRUN cd leveldb && cd build && make install\n\n# PyTorch\nARG PYTHON_VERSION=3.6\nRUN curl -f -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n     chmod +x ~/miniconda.sh && \\\n     ~/miniconda.sh -b -p /opt/conda && \\\n     rm ~/miniconda.sh && \\\n     /opt/conda/bin/conda install -y python=$PYTHON_VERSION numpy pyyaml scipy ipython mkl mkl-include cython typing && \\\n     /opt/conda/bin/conda clean -ya\nENV PATH /opt/conda/bin:$PATH\nRUN pip install --no-cache-dir grpcio-tools\nWORKDIR /opt/pytorch\nRUN git clone https://github.com/pytorch/pytorch.git\nWORKDIR /opt/pytorch/pytorch\n\nRUN git checkout v1.0.1 && git submodule update --init && mkdir build\n\nRUN cd build && python ../tools/build_libtorch.py\n\nRUN cd / && git clone https://github.com/perone/euclidesdb.git && \\\n    cd /euclidesdb && git submodule update --init\n\nRUN ln -s /opt/pytorch/pytorch/torch/lib/tmp_install /euclidesdb/libtorch\nRUN mv /euclidesdb/libtorch/include/google /euclidesdb/libtorch/include/g\n\nRUN mkdir -p /euclidesdb/build\nRUN cd /euclidesdb/build && cmake -DCMAKE_BUILD_TYPE=Release ..\nRUN cd /euclidesdb/build && make -j $(nproc) VERBOSE=1\nRUN cd /euclidesdb/build && make package\n\nWORKDIR /euclidesdb/build\n"
}