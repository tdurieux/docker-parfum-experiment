{
  "startTime": 1674240514982,
  "endTime": 1674240515605,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 109,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 9,
        "columnEnd": 132
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 123,
        "lineEnd": 124,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 9,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 6,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 9,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 50,
        "columnStart": 9,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 57,
        "columnStart": 9,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 9,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 9,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 50,
        "columnStart": 9,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 57,
        "columnStart": 9,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 9,
        "columnEnd": 83
      }
    }
  ],
  "repairedDockerfile": "FROM akabe/ocaml:debian8_ocaml4.07.0\n\nENV PATH               $PATH:/home/opam/.local/bin\nENV TENSORFLOW_VERSION 1.1.0\nENV LD_LIBRARY_PATH    /usr/lib:$LD_LIBRARY_PATH\nENV LIBRARY_PATH       /usr/lib:$LIBRARY_PATH\n# For phantomjs:\nENV QT_QPA_PLATFORM    offscreen\n\nADD ocaml-jupyter-datascience-extra.list /etc/apt/sources.list.d/ocaml-jupyter-datascience-extra.list\n\nRUN sudo apt-get install --no-install-recommends -y python3 python3-dev python3-pip && \\\n    sudo pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --user --no-cache-dir 'setuptools>=18.5' 'six>=1.9.0' jupyter jupyter_contrib_nbextensions && \\\n    jupyter contrib nbextension install --user && \\\n    mkdir -p /home/opam/.jupyter && \\\n    sudo apt-get purge -y python3-dev && \\\n    sudo apt-get autoremove -y && \\\n    sudo apt-get autoclean && rm -rf /var/lib/apt/lists/*;\n\nRUN sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db && \\\n    sudo apt-get update && \\\n    sudo apt-get upgrade -y && \\\n    sudo apt-get install --no-install-recommends -y \\\n      m4 \\\n      git \\\n      xz-utils \\\n      openssl \\\n      rsync \\\n      gcc \\\n      gfortran \\\n      aspcud \\\n      pkg-config \\\n      ssh \\\n      libzmq3-dev \\\n      libffi-dev libffi-dev \\\n      libgmp-dev libgmp-dev \\\n      libcairo2-dev libcairo2-dev \\\n      libplplot-dev plplot12-driver-cairo \\\n\n      libgsl0-dev \\\n      libfftw3-dev \\\n      libsvm-dev \\\n\n      libmariadb-dev \\\n      libpq-dev \\\n      libsqlite3-dev \\\n\n      mecab libmecab-dev mecab-ipadic-utf8 \\\n      imagemagick \\\n      ffmpeg libffi-dev \\\n      libgsl0-dev \\\n      libfftw3-dev \\\n      libsvm-dev \\\n      libcairo2-dev \\\n      libmariadb-dev \\\n      libpq-dev \\\n      libsqlite3-dev \\\n      libgmp-dev \\\n\n\n\n    && \\\n    sudo apt-get install --no-install-recommends -t jessie-backports -y \\\n      libblas3 libblas-dev \\\n      liblapack3 liblapack-dev \\\n      libopenblas-dev \\\n      liblapacke liblapacke-dev \\\n      phantomjs \\\n    && \\\n    sudo ln -sf /usr/lib/x86_64-linux-gnu/libmysqlclient.so.20 /usr/lib/libmysqlclient.so && \\\n    sudo ln -sf /usr/lib/x86_64-linux-gnu/libshp.so.2 /usr/lib/libshp.so && \\\n    sudo ln -sf /etc/fonts /usr/lib/x86_64-linux-gnu/fonts && \\\n\n    curl -f -L https://github.com/neologd/mecab-ipadic-neologd/archive/master.tar.gz \\\n         -o /tmp/mecab-ipadic-neologd-master.tar.gz && \\\n    tar zxf /tmp/mecab-ipadic-neologd-master.tar.gz -C /tmp && \\\n    ( cd /tmp/mecab-ipadic-neologd-master && ./bin/install-mecab-ipadic-neologd -n -y ) && \\\n    rm -rf /tmp/mecab-ipadic-neologd-master.tar.gz /tmp/mecab-ipadic-neologd-master && \\\n\n    eval $(opam config env) && \\\n\n    opam update && \\\n    opam upgrade -y && \\\n    opam install -y \\\n      batteries \\\n      'core>=v0.9.0' \\\n      'async>=v0.9.0' \\\n      'lwt>=3.0.0' \\\n      lwt_ssl \\\n      'cstruct>=3.1.1' 'ppx_cstruct>=3.1.1' 'tls>=0.8.0' \\\n      cohttp-async \\\n      'cohttp-lwt-unix>=1.0.0' \\\n      cohttp-top \\\n      'merlin>=3.0.0' jupyter jupyter-archimedes \\\n      lacaml \\\n      slap \\\n      lbfgs \\\n      ocephes \\\n      oml \\\n      gsl \\\n      gpr \\\n      fftw3 \\\n      'dolog>=3.0' 'eigen>=0.0.3' 'oasis>=0.4.10' 'owl>=0.2.6' \\\n      mysql \\\n      'mariadb>=0.8.1' \\\n      postgresql \\\n      sqlite3 \\\n      lambdasoup \\\n      csv csv-lwt \\\n      camomile \\\n      mecab \\\n      ppx_sexp_conv \\\n      'ppx_deriving_yojson>=3.1' \\\n      ppx_regexp && \\\n\n    : install kernel && \\\n    jupyter kernelspec install --user --name ocaml-jupyter \"$(opam config var share)/jupyter\" && \\\n\n    : install libsvm && \\\n    curl -f -L https://bitbucket.org/ogu/libsvm-ocaml/downloads/libsvm-ocaml-0.9.3.tar.gz \\\n         -o /tmp/libsvm-ocaml-0.9.3.tar.gz && \\\n    tar zxf /tmp/libsvm-ocaml-0.9.3.tar.gz -C /tmp && \\\n    ( cd /tmp/libsvm-ocaml-0.9.3 && \\\n      oasis setup && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$(opam config var prefix) && \\\n      make && \\\n      make install) \\\n    && \\\n    rm -rf /tmp/libsvm-ocaml-0.9.3.tar.gz /tmp/libsvm-ocaml-0.9.3 && \\\n\n    : install tensorflow && \\\n    sudo curl -f -L \"https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-$TENSORFLOW_VERSION.tar.gz\" | sudo tar xz -C /usr && \\\n    curl -f -L \"https://github.com/LaurentMazare/tensorflow-ocaml/archive/0.0.10.1.tar.gz\" \\\n         -o /tmp/tensorflow-ocaml-0.0.10.1.tar.gz && \\\n    tar zxf /tmp/tensorflow-ocaml-0.0.10.1.tar.gz -C /tmp && \\\n    ( \\\n      cd /tmp/tensorflow-ocaml-0.0.10.1 && \\\n      sed -i 's/(no_dynlink)//' src/wrapper/jbuild && \\\n      sed -i 's/(modes (native))//' src/wrapper/jbuild \\\n    ) && \\\n    opam pin add -y /tmp/tensorflow-ocaml-0.0.10.1 && \\\n    rm -rf /tmp/tensorflow-ocaml-0.0.10.1.tar.gz /tmp/tensorflow-ocaml-0.0.10.1 && \\\n\n    rm -rf $HOME/.opam/archives \\\n           $HOME/.opam/repo/default/archives \\\n           $HOME/.opam/$OCAML_VERSION/man \\\n           $HOME/.opam/$OCAML_VERSION/build && \\\n\n    sudo apt-get purge -y m4 git xz-utils openssl rsync gcc gfortran aspcud pkg-config && \\\n    sudo apt-get autoremove -y && \\\n    sudo apt-get autoclean && rm -rf /var/lib/apt/lists/*;\n\nVOLUME /notebooks\nVOLUME /home/opam/.jupyter\nWORKDIR /notebooks\n\nCOPY entrypoint.sh /\nCOPY .ocamlinit    /home/opam/.ocamlinit\nCOPY .jupyter      /home/opam/.jupyter\n\nEXPOSE 8888\n\nENTRYPOINT [ \"/entrypoint.sh\" ]\nCMD [ \"jupyter\", \"notebook\", \"--no-browser\", \"--ip=*\" ]\n"
}