{
  "startTime": 1674251548053,
  "endTime": 1674251548294,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 46,
        "columnStart": 34,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ALPINE_VERSION=3.7\nFROM alpine:$ALPINE_VERSION\n\nRUN apk --update add pcre libbz2 ca-certificates libressl && rm /var/cache/apk/*\n\nRUN adduser -h /etc/nginx -D -s /bin/sh nginx\nWORKDIR /tmp\n\nENV NGINX_VERSION=1.13.12\n\n# add compilation env, build required C based gems and cleanup\nRUN apk --update add --virtual build_deps build-base zlib-dev pcre-dev libressl-dev \\\n    && wget -O - https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz | tar xzf - \\\n    && cd nginx-$NGINX_VERSION && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n       --prefix=/usr/share/nginx \\\n       --sbin-path=/usr/sbin/nginx \\\n       --conf-path=/etc/nginx/nginx.conf \\\n       --error-log-path=stderr \\\n       --http-log-path=/dev/stdout \\\n       --pid-path=/var/run/nginx.pid \\\n       --lock-path=/var/run/nginx.lock \\\n       --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n       --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n       --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n       --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n       --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n       --user=nginx \\\n       --group=nginx \\\n       --with-http_addition_module \\\n       --with-http_auth_request_module \\\n       --with-http_gunzip_module \\\n       --with-http_gzip_static_module \\\n       --with-http_realip_module \\\n       --with-http_ssl_module \\\n       --with-http_stub_status_module \\\n       --with-http_sub_module \\\n       --with-http_v2_module \\\n       --with-threads \\\n       --with-stream \\\n       --with-stream_ssl_module \\\n       --without-http_memcached_module \\\n       --without-mail_pop3_module \\\n       --without-mail_imap_module \\\n       --without-mail_smtp_module \\\n       --with-pcre-jit \\\n       --with-cc-opt='-g -O2 -fstack-protector-strong -Wformat -Werror=format-security' \\\n       --with-ld-opt='-Wl,-z,relro -Wl,--as-needed' \\\n    && make install \\\n    && cd .. && rm -rf nginx-$NGINX_VERSION \\\n    && mkdir /var/cache/nginx \\\n    && rm /etc/nginx/*.default \\\n    && apk del build_deps && rm /var/cache/apk/*\n\nCOPY nginx.conf /etc/nginx/\nADD  conf.d /etc/nginx/conf.d\n\nVOLUME [\"/var/cache/nginx\"]\nEXPOSE 80 443\n\nCMD [\"nginx\"]\n"
}