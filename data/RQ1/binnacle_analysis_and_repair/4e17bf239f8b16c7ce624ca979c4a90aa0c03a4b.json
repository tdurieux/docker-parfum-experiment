{
  "startTime": 1674245151264,
  "endTime": 1674245151421,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Sal Dockerfile\nFROM ubuntu:14.04\n\nMAINTAINER Graham Gilbert <graham@grahamgilbert.com>\n\nENV HOME /root\nENV DEBIAN_FRONTEND noninteractive\nENV APPNAME Sal\nENV APP_DIR /home/docker/sal\nENV DOCKER_SAL_TZ Europe/London\nENV DOCKER_SAL_ADMINS Docker User, docker@localhost\nENV DOCKER_SAL_LANG en_GB\nENV DOCKER_SAL_DISPLAY_NAME Sal\nENV DOCKER_SAL_DEBUG false\nENV WAIT_FOR_POSTGRES false\nENV MAINT_FREQUENCY 300\n# ENV DOCKERIZE_VERSION v0.3.0\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y libc-bin && \\\n    apt-get install --no-install-recommends -y software-properties-common && \\\n    apt-get -y update && \\\n    add-apt-repository -y ppa:nginx/stable && \\\n    apt-get -y --no-install-recommends install \\\n    git \\\n    nginx \\\n    python-setuptools \\\n    postgresql \\\n    postgresql-contrib \\\n    libpq-dev \\\n    python-dev \\\n    curl \\\n    supervisor \\\n    libffi-dev && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    mkdir /tmp/setup\nCOPY setup/requirements.txt /tmp/setup/requirements.txt\nCOPY requirements.txt /tmp/requirements.txt\nRUN easy_install pip && \\\n    pip install --no-cache-dir -r /tmp/requirements.txt && \\\n    rm /tmp/requirements.txt && \\\n    rm -rf /tmp/setup && \\\n    update-rc.d -f postgresql remove && \\\n    update-rc.d -f nginx remove && \\\n    mkdir -p /home/app && \\\n    mkdir -p /home/backup\nCOPY / $APP_DIR\nCOPY docker/settings.py $APP_DIR/sal/\nCOPY docker/supervisord.conf $APP_DIR/supervisord.conf\nCOPY docker/settings_import.py $APP_DIR/sal/\nCOPY docker/wsgi.py $APP_DIR/\nCOPY docker/gunicorn_config.py $APP_DIR/\nCOPY docker/run.sh /run.sh\nCOPY docker/nginx/nginx-env.conf /etc/nginx/main.d/\nCOPY docker/nginx/sal.conf /etc/nginx/sites-enabled/sal.conf\nCOPY docker/nginx/nginx.conf /etc/nginx/nginx.conf\n\nRUN chmod 755 /run.sh && \\\n    rm -f /etc/nginx/sites-enabled/default && \\\n    ln -s $APP_DIR /home/app/sal && \\\n    mkdir -p /var/log/gunicorn &&\\\n    touch /var/log/gunicorn/gunicorn-error.log &&\\\n    touch /var/log/gunicorn/gunicorn-access.log &&\\\n    chown -R www-data:www-data $APP_DIR &&\\\n    chmod go+x $APP_DIR &&\\\n    touch $APP_DIR/sal.log &&\\\n    chmod 777 $APP_DIR/sal.log\n\nWORKDIR $APP_DIR\nEXPOSE 8000\n\nCMD [\"/run.sh\"]\n\nVOLUME [\"$APP_DIR/plugins\"]\n"
}