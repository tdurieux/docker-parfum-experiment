{
  "startTime": 1674252100346,
  "endTime": 1674252100493,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# A portable reverse engineering environment using docker\n\nFROM debian:stable-slim\nMAINTAINER ClÃ©ment Boin\n\nARG username=\"re\"\nARG password=\"docker\"\n\nRUN apt-get update \\\n    && apt-get -y upgrade \\\n    && apt-get install -y --no-install-recommends apt-utils \\\n    && apt-get install --no-install-recommends -y \\\n        build-essential \\\n        gdb \\\n        radare2 \\\n        strace \\\n        ltrace \\\n        xxd \\\n        bsdiff \\\n        libcapstone-dev \\\n        libcapstone3 \\\n        flasm \\\n        python-pip \\\n        python3 \\\n        python3-pip \\\n        libffi-dev \\\n        git \\\n        vim \\\n        wget \\\n        llvm \\\n        clang \\\n        lldb \\\n        volatility \\\n        binwalk \\\n        python3-binwalk \\\n        sudo \\\n        locales \\\n        tmux \\\n        gcc-multilib && rm -rf /var/lib/apt/lists/*;\n\n# Set up locale for tmux\nRUN sed -i '/en_US.UTF-8/s/^#//g' /etc/locale.gen\nRUN locale-gen\n\n# Create a standard user\nRUN useradd -ms /bin/bash ${username}\nRUN echo \"${username}:${password}\" | chpasswd\nRUN adduser ${username} sudo\nUSER ${username}\nWORKDIR /home/${username}\n\n# Install gdb-peda\nRUN git clone https://github.com/longld/peda.git ~/peda \\\n    && echo \"source ~/peda/peda.py\" >> ~/.gdbinit \\\n    && echo \"DONE! debug your program with gdb and enjoy\"\n\n# Install angr\nRUN pip install --no-cache-dir angr\n"
}