{
  "startTime": 1674245451835,
  "endTime": 1674245452024,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedDockerfile": "# This image adds 2 things on top of the vanilla Orka scamarvels image:\n#  * Jlsca toolbox, with tutorials\n#  * data and scripts for reproducing experiments with dimensionality reduction techniques\n#\n# 1. To build this image, you need first to get and build images marvelsbase\n# and scamarvels from ScaMarvels Orka images. See the instructions in Orka's README.md.\n# Once you have built them, build this image:\n# docker build --no-cache -t scamarvelsplus ./marvelsplus\n#\n# 2. This is how to start this container:\n# docker run --privileged -it -p 8888:8888 scamarvelsplus\n#\n# 3. To have a shared folder (e.g. for persistent storage or to copy files from the host),\n# add the option\n# -v ~/dockershare:/mnt\n# to the above command, where ~/dockershare is an existing host file system folder\n#\n# 4. Two ways to start the notebook server in the container:\n# julia -e 'using IJulia; notebook()'\n# or \n# ~/.julia/v0.6/Conda/deps/usr/bin/jupyter notebook\n# The first one is preferential beacuse it can be preceded by JULIA_NUM_THREADS=2\n# setting that will make the server start with 2 threads (or whatever nubmer you choose).\n#\n# Once the notebook server is started, go to localhost:8888 in your browser on the host\n\n# Use ScaMarvels image as base\nFROM scamarvels\nMAINTAINER Ilya Kizhvatov <ilya.kizhvatov@gmail.com>\n\n# Git Large File Storage extension (experimental repo stores tracesets using LFS)\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y curl \\\n    && curl -f -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash \\\n    && apt-get install --no-install-recommends -y git-lfs \\\n    && git lfs install && rm -rf /var/lib/apt/lists/*;\n\n# time, for benchmarking\nRUN apt-get install --no-install-recommends -y time && rm -rf /var/lib/apt/lists/*;\n\n# matplotlib in python3 (installs numpy as a dependency)\nRUN apt-get install --no-install-recommends -y python3-matplotlib && rm -rf /var/lib/apt/lists/*;\n\n# Julia (stick to 0.6.2 for now to avoid incompatibilites)\nRUN wget https://julialang-s3.julialang.org/bin/linux/x64/0.6/julia-0.6.2-linux-x86_64.tar.gz \\\n    && tar xf julia-0.6.2-linux-x86_64.tar.gz \\\n    && rm julia-0.6.2-linux-x86_64.tar.gz \\\n    && ls -d julia-* | xargs -t -I foo ln -s ~/foo/bin/julia /usr/local/bin/julia\n\n# Install IJulia and other packages, letting Julia do an internal miniconda install,\n# then adjust jupyter config to make notebook server launchable\nRUN julia -e 'Pkg.init(); ENV[\"PYTHON\"]=\"\"; Pkg.add(\"PyPlot\"); Pkg.add(\"IJulia\")' \\\n    && mkdir .jupyter \\\n    && echo \"c.NotebookApp.allow_root = True\\nc.NotebookApp.ip = '*'\\nc.NotebookApp.open_browser = False\\nc.NotebookApp.token = ''\" > .jupyter/jupyter_notebook_config.py\n\n# Install Jlsca as Julia package\n# TODO: install a particular release\nRUN julia -e 'Pkg.clone(\"https://github.com/Riscure/Jlsca\")'\n\n# Get Jlsca tutorials\nRUN git clone https://github.com/ikizhvatov/jlsca-tutorials\n\n# Get the experimental package for the conditional reduction paper\nRUN git clone https://github.com/ikizhvatov/conditional-reduction\n\n# Keep zsh as entrypoint as scamarvels stuff is made for it\n# For running jlsca stuff go into bash manually\nENTRYPOINT zsh\n"
}