{
  "startTime": 1674245125262,
  "endTime": 1674245125315,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Start from argon (latest long term supported version of node)\n# - argon : Full node dev env (640 MB) : python inside\n# - argon-slim : Light node env (200 MB) : no python, can be an issue for npm installs / builds\nFROM node:argon-slim\n\nMAINTAINER St√®ve Sfartz\n\nEXPOSE 8080\n\n# create 'not priviledged' user\nRUN useradd -c 'Node.js user' -m -d /home/node -s /bin/bash node\n\n# isolate code distribution\nRUN mkdir -p /home/node/sparkbot\nWORKDIR /home/node/sparkbot\n\n# build application\n# [TIP] minimize image rebuilds needs by isolating dependencies from declarative aspects \nCOPY package.json /home/node/sparkbot/package.json\nRUN npm install && npm cache clean --force;\n\n# check the .dockerignore file\nCOPY . /home/node/sparkbot\n\n# Switch to user mode\nRUN chown -R node:node /home/node/sparkbot\nUSER node\nENV HOME /home/node\nENV SCRIPT templates/onEvent-all-all.js\n\n# Run default sample\nCMD /usr/local/bin/node $SCRIPT\n\n"
}