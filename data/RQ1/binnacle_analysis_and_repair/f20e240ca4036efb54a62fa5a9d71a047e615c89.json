{
  "startTime": 1674234741565,
  "endTime": 1674234741661,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2015 bradley childs, All rights reserved.\n#\n\nFROM centos:7\nMAINTAINER bradley childs, bchilds@gmail.com\n# AWS CLI build deps\nRUN yum update -y\nRUN yum install -y libcurl-devel unzip && rm -rf /var/cache/yum\nRUN yum install -y less && rm -rf /var/cache/yum\n\n\n# Provisioner build deps\nRUN yum install -y automake gcc-c++ git make openssl-devel golang && rm -rf /var/cache/yum\n\n# Build the S3FS provisioner\n\n\n\n# Build the AWS CLI and create a bootstrap script\nRUN mkdir -p /root/aws_cli\nWORKDIR  /root/aws_cli\n\nRUN curl -f \"https://s3.amazonaws.com/aws-cli/awscli-bundle.zip\" -o \"awscli-bundle.zip\"\nRUN unzip awscli-bundle.zip\nRUN ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws\n\n# RUN echo $'#!/bin/sh\\n \\\n#          echo \"using aws_access_key_id:\"\\n \\\n#          echo $aws_access_key_id\\n \\\n#          echo \"aws_secret_access_key:\"\\n \\\n#          echo $aws_secret_access_key\\n \\\n#          exec /usr/local/bin/aws \"$@\"' > /root/aws.sh\n# RUN chmod +x /root/aws.sh\n\n# RUN mkdir -p /opt/src/github.com/childsb\n# WORKDIR  /opt/src/github.com/childsb/\n# ENV GOPATH /opt/\n# ENV PATH $PATH:$GOPATH/bin\n\n# install the shell flex script that the provisioner uses.\nRUN mkdir -p  /opt/go/src/github.com/childsb/s3fs-container/flex/s3fs-container\nCOPY flex/s3fs-container/s3fs-container /opt/go/src/github.com/childsb/s3fs-container/flex/s3fs-container/\n\n# RUN git clone https://github.com/childsb/s3fs-container.git\n# RUN go get github.com/kubernetes-incubator/nfs-provisioner\n# RUN go get github.com/tools/godep\n\n# WORKDIR  /opt/src/github.com/childsb/s3fs-container\n# RUN make\n\n# install the go kube piece of provisioner\nRUN mkdir -p  /opt/go/src/github.com/childsb/s3fs-container/\nCOPY s3fs-container /opt/go/src/github.com/childsb/s3fs-container/\n\n\n# ENTRYPOINT [\"/root/aws.sh\"]\nENTRYPOINT [\"/opt/go/src/github.com/childsb/s3fs-container/s3fs-container\"]\n\n"
}