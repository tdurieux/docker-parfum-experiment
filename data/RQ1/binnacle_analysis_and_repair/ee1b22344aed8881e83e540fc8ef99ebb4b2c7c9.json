{
  "startTime": 1674235906313,
  "endTime": 1674235907595,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 51,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 15,
        "columnEnd": 141
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 51,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 15,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 94,
        "columnEnd": 162
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 152
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 63,
        "columnEnd": 140
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 59,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 22,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 65,
        "columnEnd": 138
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 22,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 22,
        "columnEnd": 114
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 94,
        "columnEnd": 162
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 54,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 22,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 22,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 22,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 63,
        "columnEnd": 127
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 63,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 22,
        "columnEnd": 242
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 22,
        "columnEnd": 157
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 22,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 22,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 102,
        "columnEnd": 170
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 129,
        "lineEnd": 138,
        "columnStart": 53,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 142,
        "lineEnd": 161,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 164,
        "lineEnd": 170,
        "columnStart": 22,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\nARG BRIDGE=false\nARG INSTALL_TURTLEBOT2_DEMO_DEPS=false\nARG INSTALL_CONNEXT_DEBS=false\nARG PLATFORM=x86\nARG ROS1_DISTRO=melodic\nARG UBUNTU_DISTRO=bionic\nARG COMPILE_WITH_CLANG=false\n\n# Prevent errors from apt-get.\n# See: http://askubuntu.com/questions/506158/unable-to-initialize-frontend-dialog-when-using-ssh\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\n\n# net-tools is for ifconfig\n# Get curl for fetching the repo keys.\n# Get https transport for APT.\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  lsb-release net-tools sudo \\\n  curl \\\n  gnupg2 \\\n  apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\n# Add the ROS repositories to the apt sources list.\nRUN echo \"deb http://repositories.ros.org/ubuntu/testing/ `lsb_release -cs` main\" > /etc/apt/sources.list.d/ros-latest.list\nRUN echo \"Bust Cache for key update 2019-06-08\" && curl -f --silent https://repositories.ros.org/repos.key | apt-key add -\n\n# Add the OSRF repositories to the apt sources list.\nRUN echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu `lsb_release -cs` main\" > /etc/apt/sources.list.d/gazebo-latest.list\nRUN curl -f --silent https://packages.osrfoundation.org/gazebo.key | apt-key add -\n\n# Install some development tools.\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential ccache cmake pkg-config python3-empy python3-setuptools python3-vcstool && rm -rf /var/lib/apt/lists/*;\nRUN if test ${UBUNTU_DISTRO} != xenial; then \\\n apt-get update && apt-get install --no-install-recommends -y python3-lark-parser python3-opencv; rm -rf /var/lib/apt/lists/*; fi\n\n# Install build and test dependencies of ROS 2 packages.\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  clang-format \\\n  cppcheck \\\n  git \\\n  liblog4cxx-dev \\\n  libxml2-dev \\\n  libxml2-utils \\\n  libxslt-dev \\\n  pydocstyle \\\n  pyflakes \\\n  python3-coverage \\\n  python3-cryptography \\\n  python3-flake8 \\\n  python3-lxml \\\n  python3-mock \\\n  python3-nose \\\n  python3-numpy \\\n  python3-pep8 \\\n  python3-pyparsing \\\n  python3-yaml \\\n  uncrustify && rm -rf /var/lib/apt/lists/*;\n\n# Install and self update pip/setuptools to the latest version.\nRUN apt-get update && apt-get install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir -U setuptools pip virtualenv\n\n# Install clang if build arg is true\nRUN if test ${COMPILE_WITH_CLANG} = true; then \\\n apt-get update && apt-get install --no-install-recommends -y clang libc++-dev libc++abi-dev; rm -rf /var/lib/apt/lists/*; fi\n\n# Install coverage build dependencies.\nRUN apt-get update && apt-get install --no-install-recommends -y gcovr && rm -rf /var/lib/apt/lists/*;\n\n# Install the OpenSplice binary from the OSRF repositories.\nRUN apt-get update && apt-get install --no-install-recommends -y libopensplice69=6.9.190403+osrf1-1~$UBUNTU_DISTRO && rm -rf /var/lib/apt/lists/*;\n# Update default domain id.\nRUN sed -i \"s/<Id>0<\\/Id>/<Id>108<\\/Id>/\" /usr/etc/opensplice/config/ospl.xml\n\n# Install the Connext binary from the OSRF repositories.\nRUN if test \\( ${PLATFORM} = x86 -a ${INSTALL_CONNEXT_DEBS} = true \\); then \\\n apt-get update && RTI_NC_LICENSE_ACCEPTED=yes apt-get --no-install-recommends install -y rti-connext-dds-5.3.1; rm -rf /var/lib/apt/lists/*; fi\n\n# Install the RTI dependencies.\nRUN if test ${PLATFORM} = x86; then \\\n apt-get update && apt-get install --no-install-recommends -y default-jre-headless; rm -rf /var/lib/apt/lists/*; fi\n\n# Install dependencies for RTI web binaries install script.\nRUN apt-get update && apt-get install --no-install-recommends -y python3-pexpect && rm -rf /var/lib/apt/lists/*;\n\n# Get and install the RTI web binaries.\nRUN cd /tmp && curl -f --silent https://s3.amazonaws.com/RTI/Bundles/5.3.1/Evaluation/rti_connext_dds_secure-5.3.1-eval-x64Linux3gcc5.4.0.tar.gz | tar -xz\nRUN cd /tmp && tar -xvf /tmp/openssl-1.0.2n-target-x64Linux3gcc5.4.0.tar.gz && rm /tmp/openssl-1.0.2n-target-x64Linux3gcc5.4.0.tar.gz\nADD rti_web_binaries_install_script.py /tmp/rti_web_binaries_install_script.py\n\n# Add the RTI license file.\nADD rticonnextdds-license/rti_license.dat /tmp/rti_license.dat\n\n# Add the RTI binaries we made.\n# ADD rticonnextdds-src/librticonnextdds52_5.2.3-1_amd64.deb /tmp/librticonnextdds52_5.2.3-1_amd64.deb\n# ADD rticonnextdds-src/librticonnextdds52-dev_5.2.3-1_amd64.deb /tmp/librticonnextdds52-dev_5.2.3-1_amd64.deb\n# ADD rticonnextdds-src/rticonnextdds-tools_5.2.3-1_amd64.deb /tmp/rticonnextdds-tools_5.2.3-1_amd64.deb\n\n# Install the eProsima dependencies.\nRUN apt-get update && apt-get install --no-install-recommends -y libasio-dev libssl-dev libtinyxml2-dev valgrind && rm -rf /var/lib/apt/lists/*;\n\n# Install OpenCV.\nRUN apt-get update && apt-get install --no-install-recommends -y libopencv-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install console_bridge for class_loader et al.\nRUN if test ${UBUNTU_DISTRO} != xenial; then \\\n apt-get update && apt-get install --no-install-recommends -y libconsole-bridge-dev; rm -rf /var/lib/apt/lists/*; fi\n\n# Install build dependencies for class_loader.\n# We are building poco from source on xenial as we need at least 1.4.1p1 and xenial ships with 1.3.6p1 (https://github.com/ros2/poco_vendor/pull/10)\nRUN if test ${UBUNTU_DISTRO} != xenial; then \\\n apt-get update && apt-get install --no-install-recommends -y libpoco-dev; rm -rf /var/lib/apt/lists/*; fi\n\n# Install build dependencies for rviz et al.\nRUN apt-get update && apt-get install --no-install-recommends -y libassimp-dev libcurl4-openssl-dev libfreetype6-dev libgles2-mesa-dev libglu1-mesa-dev libqt5core5a libqt5gui5 libqt5opengl5 libqt5widgets5 libxaw7-dev libxrandr-dev qtbase5-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install build dependencies for rqt et al.\nRUN apt-get update && apt-get install --no-install-recommends -y pyqt5-dev python3-pyqt5 python3-pyqt5.qtsvg python3-sip-dev python3-pydot python3-pygraphviz && rm -rf /var/lib/apt/lists/*;\n\n# Install dependencies for robot_model and robot_state_publisher\nRUN apt-get update && apt-get install --no-install-recommends -y libtinyxml-dev libeigen3-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install Python3 development files.\nRUN apt-get update && apt-get install --no-install-recommends -y python3-dev && rm -rf /var/lib/apt/lists/*;\n\n# automatic invalidation once every day.\nRUN echo \"@today_str\"\n\nRUN if test \\( ${BRIDGE} = true -o ${INSTALL_TURTLEBOT2_DEMO_DEPS} = true \\) ; then \\\n apt-get update && apt-get install --no-install-recommends -y ros-${ROS1_DISTRO}-catkin; rm -rf /var/lib/apt/lists/*; fi\n\n# Install build and test dependencies of ros1_bridge.\nRUN if test ${BRIDGE} = true; then \\\n apt-get update && apt-get install --no-install-recommends -y \\\n    python-rospkg \\\n    ros-${ROS1_DISTRO}-common-msgs \\\n    ros-${ROS1_DISTRO}-rosbash \\\n    ros-${ROS1_DISTRO}-roscpp \\\n    ros-${ROS1_DISTRO}-roslaunch \\\n    ros-${ROS1_DISTRO}-rosmsg \\\n    ros-${ROS1_DISTRO}-roscpp-tutorials \\\n    ros-${ROS1_DISTRO}-rospy-tutorials \\\n    ros-${ROS1_DISTRO}-tf2-msgs; rm -rf /var/lib/apt/lists/*; fi\n\n# Install build dependencies for turtlebot demo (not supported on xenial).\nRUN if test \\( ${UBUNTU_DISTRO} != xenial -a ${INSTALL_TURTLEBOT2_DEMO_DEPS} = true \\) ; then \\\n    apt-get update && apt-get install --no-install-recommends -y \\\n    libatlas-base-dev \\\n    libboost-iostreams-dev \\\n    libboost-regex-dev \\\n    libboost-system-dev \\\n    libboost-thread-dev \\\n    libcairo2-dev \\\n    libceres-dev \\\n    libgoogle-glog-dev \\\n    liblua5.2-dev \\\n    libpcl-dev \\\n    libprotobuf-dev \\\n    libprotoc-dev \\\n    libsdl1.2-dev libsdl-image1.2-dev \\\n    libudev-dev \\\n    libusb-1.0-0-dev \\\n    libyaml-cpp-dev \\\n    protobuf-compiler \\\n    python3-sphinx \\\n    ros-${ROS1_DISTRO}-kobuki-driver ros-${ROS1_DISTRO}-kobuki-ftdi; rm -rf /var/lib/apt/lists/*; fi\n\n# Install dependencies for RViz visual tests\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    libgl1-mesa-dri \\\n    libglapi-mesa \\\n    libosmesa6 \\\n    mesa-utils \\\n    xvfb \\\n    matchbox-window-manager && rm -rf /var/lib/apt/lists/*;\n\nENV DISPLAY=:99\n\n# Create a user to own the build output.\nRUN useradd -u 1234 -m rosbuild\nRUN sudo -H -u rosbuild -- git config --global user.email \"jenkins@ci.ros2.org\"\nRUN sudo -H -u rosbuild -- git config --global user.name \"Jenkins ROS 2\"\nRUN echo 'rosbuild ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nWORKDIR \"@workdir\"\n\n# Add an entry point which changes rosbuild's UID from 1234 to the UID of the invoking user.\n# This means that the generated files will have the same ownership as the host OS user.\nADD entry_point.sh /entry_point.sh\nRUN chmod 755 /entry_point.sh\n\nENTRYPOINT [\"/entry_point.sh\"]\n\nCMD [\"matchbox-window-manager > /dev/null 2>&1 & python3 -u run_ros2_batch.py $CI_ARGS\"]\n"
}