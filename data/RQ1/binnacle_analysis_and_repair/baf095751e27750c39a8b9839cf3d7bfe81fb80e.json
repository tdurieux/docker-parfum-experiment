{
  "startTime": 1674239715694,
  "endTime": 1674239715975,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 25,
        "columnEnd": 139
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 2,
        "columnEnd": 187
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04 AS build\n\nRUN mkdir -p /app/build /build/.task /build/build/work\nRUN ln -snf /build/.task /app/.task\nRUN ln -snf /build/build/work /app/build/work\nWORKDIR /app\n\nENV DOCKER_DEV true\nENV NOKOGIRI_USE_SYSTEM_LIBRARIES 1\n\nCOPY build/package_dependencies.sh /app/build/package_dependencies.sh\nCOPY tasks/helpers.sh /app/tasks/helpers.sh\nCOPY tasks/helpers/detect_os_release.sh /app/tasks/helpers/detect_os_release.sh\nCOPY tasks/install-system-build-dependencies /app/tasks/install-system-build-dependencies\nRUN env INSTALL_TEST_DEPENDENCIES=true /app/tasks/install-system-build-dependencies\n\nCOPY Makefile.in /app/Makefile.in\nCOPY Taskfile.yml /app/Taskfile.yml\nCOPY configure /app/configure\nCOPY tasks/bootstrap-* /app/tasks/\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\n\nCOPY build/patches /app/build/patches\nCOPY tasks/deps /app/tasks/deps\nCOPY tasks/clean/dev /app/tasks/clean/dev\nRUN make deps && make clean:dev\n\nCOPY tasks/build-deps /app/tasks/build-deps\nRUN make build-deps && make clean:dev\n\nCOPY Gemfile /app/Gemfile\nCOPY Gemfile.lock /app/Gemfile.lock\nCOPY tasks/test-deps /app/tasks/test-deps\nRUN make test-deps && make clean:dev\n\nCOPY src/api-umbrella/admin-ui/.yarnrc /app/src/api-umbrella/admin-ui/.yarnrc\nCOPY src/api-umbrella/admin-ui/package.json /app/src/api-umbrella/admin-ui/package.json\nCOPY src/api-umbrella/admin-ui/yarn.lock /app/src/api-umbrella/admin-ui/yarn.lock\nCOPY src/api-umbrella/web-app/Gemfile /app/src/api-umbrella/web-app/Gemfile\nCOPY src/api-umbrella/web-app/Gemfile.lock /app/src/api-umbrella/web-app/Gemfile.lock\nCOPY tasks/app-deps /app/tasks/app-deps\nRUN make app-deps && make clean:dev\n\nCOPY . /app\nRUN make && make clean:dev\n\nRUN rm -rf build/work/tasks\n\nFROM ubuntu:18.04\n\nCOPY --from=build /app /app\nCOPY --from=build /build /build\nWORKDIR /app\nRUN env INSTALL_TEST_DEPENDENCIES=true /app/tasks/install-system-build-dependencies\n\n# Add Chrome for integration tests, similar to how the CircleCI images add it:\n# https://github.com/CircleCI-Public/circleci-dockerfiles/blob/c24e69355b400aaba34a1ddfc55cdb1fef9dedff/buildpack-deps/images/xenial/browsers/Dockerfile#L47\nRUN set -x && \\\n  apt-get update && \\\n  curl --silent --show-error --location --fail --retry 3 --output /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && \\\n  (dpkg -i /tmp/google-chrome-stable_current_amd64.deb || apt-get -fy install) && \\\n  rm -f /tmp/google-chrome-stable_current_amd64.deb && \\\n  sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g' /opt/google/chrome/google-chrome && \\\n  google-chrome --version\nRUN set -x && \\\n  CHROME_VERSION=\"$(google-chrome --version)\" && \\\n  export CHROMEDRIVER_RELEASE=\"$(echo $CHROME_VERSION | sed 's/^Google Chrome //')\" && export CHROMEDRIVER_RELEASE=${CHROMEDRIVER_RELEASE%%.*} && \\\n  CHROMEDRIVER_VERSION=$( curl --location --fail --retry 3 https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROMEDRIVER_RELEASE}) && \\\n  curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip \"https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip\" && \\\n  cd /tmp && \\\n  unzip chromedriver_linux64.zip && \\\n  rm -rf chromedriver_linux64.zip && \\\n  mv chromedriver /usr/local/bin/chromedriver && \\\n  chmod +x /usr/local/bin/chromedriver && \\\n  chromedriver --version\n\nRUN groupadd -r api-umbrella && \\\n  useradd -r -g api-umbrella -s /sbin/nologin -d /opt/api-umbrella -c \"API Umbrella user\" api-umbrella\n\nENV PATH \"/app/bin:/build/build/work/dev-env/sbin:/build/build/work/dev-env/bin:/build/build/work/test-env/sbin:/build/build/work/test-env/bin:/build/build/work/stage/opt/api-umbrella/sbin:/build/build/work/stage/opt/api-umbrella/bin:/build/build/work/stage/opt/api-umbrella/embedded/sbin:/build/build/work/stage/opt/api-umbrella/embedded/bin:${PATH}\"\nENV API_UMBRELLA_ROOT /build/build/work/stage/opt/api-umbrella\nENV HTTP_PORT 8080\nENV HTTPS_PORT 8443\n\nENTRYPOINT [\"/app/docker/dev/docker-entrypoint\"]\nCMD [\"/app/docker/dev/docker-start\"]\n"
}