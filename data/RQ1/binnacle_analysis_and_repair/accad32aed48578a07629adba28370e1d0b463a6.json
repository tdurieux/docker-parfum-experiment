{
  "startTime": 1674244805804,
  "endTime": 1674244806267,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 46,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ngraph_base\n\n# install dependencies\n# python-dev and python-pip are installed in ngraph_base image\n# for the appropriate python2 or python3 version\nWORKDIR /root\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y cmake && \\\n    apt-get clean autoclean && \\\n    apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\n\n# install aeon dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y clang libcurl4-openssl-dev libopencv-dev libsox-dev libgtest-dev && \\\n    apt-get clean autoclean && \\\n    apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\n\n# install ONNX dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y protobuf-compiler libprotobuf-dev && \\\n    apt-get clean autoclean && \\\n    apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /usr/src/gtest\nRUN cmake CMakeLists.txt\nRUN make\nRUN cp *.a /usr/local/lib\n\nWORKDIR /root/ngraph-test\nADD contrib/docker/private-aeon /root/private-aeon\nWORKDIR /root/private-aeon\nRUN pip install --no-cache-dir -r requirements.txt\nRUN mkdir -p build && cd build && cmake .. && pip install --no-cache-dir . && cd ..\n\nWORKDIR /root/ngraph-test\nADD . /root/ngraph-test\n\n# This disables a warning from opencv from a defunct driver\nRUN ln /dev/null /dev/raw1394\n\n# build Baidu's Warp-CTC\n# dependencies for deepspeech example\nWORKDIR /root\nRUN git clone https://github.com/baidu-research/warp-ctc.git\nRUN cd warp-ctc\nADD . /root/warp-ctc\nWORKDIR /root/warp-ctc\nRUN mkdir -p build\nRUN cd build && cmake ../ && make && cd ../..\nENV WARP_CTC_PATH=/root/warp-ctc/build\nENV WARP_CTC_LIB=$WARP_CTC_PATH/libwarpctc.so\nENV LD_LIBRARY_PATH=$WARP_CTC_PATH:$LD_LIBRARY_PATH\nRUN env\nRUN ls -l $WARP_CTC_PATH\n\nWORKDIR /root/ngraph-test\nADD . /root/ngraph-test\nRUN make gpu_prepare\nRUN make test_prepare\nRUN make install\n\n# add in autoflex.  This should will only be added if the user building\n# this dockerfile has permission to access the autoflex repo.  This is a\n# temporary solution to get things working quickly.\nWORKDIR /root/ngraph-test\nADD contrib/docker/autoflex /root/autoflex\nRUN pip install --no-cache-dir -e /root/autoflex\n\nADD tests/config/jupyter_nbconvert_config.py /root/.jupyter/jupyter_nbconvert_config.py\n\nWORKDIR /root/ngraph-test\n"
}