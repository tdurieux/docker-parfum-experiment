{
  "startTime": 1674238438254,
  "endTime": 1674238438507,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nRUN apt-get update\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        wget \\\n        git \\\n        python \\\n        python-dev \\\n        python-pip \\\n        python-wheel \\\n        python-numpy \\\n        libcurl3-dev  \\\n        ca-certificates \\\n        gcc \\\n        sox \\\n        libsox-fmt-mp3 \\\n        htop \\\n        nano \\\n        swig \\\n        cmake \\\n        libboost-all-dev \\\n        zlib1g-dev \\\n        libbz2-dev \\\n        liblzma-dev \\\n        locales \\\n        pkg-config \\\n        libsox-dev && rm -rf /var/lib/apt/lists/*;\n\n\nRUN apt-get install --no-install-recommends -y python3 python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir 'tensorflow-gpu==1.6.0' pandas python_speech_features pyxdg progressbar2 scipy\n\nRUN git clone https://github.com/mozilla/DeepSpeech.git\nWORKDIR /DeepSpeech/\nRUN git reset --hard e00bfd0f413912855eb2312bc1efe3bd2b023b25\n\n# GPU Environment Setup\nENV TF_NEED_CUDA 1\nENV CUDA_TOOLKIT_PATH /usr/local/cuda\nENV CUDA_PKG_VERSION 9-0=9.0.176-1\nENV CUDA_VERSION 9.0.176\nENV TF_CUDA_VERSION 9.0\nENV TF_CUDNN_VERSION 7.4.1\nENV CUDNN_INSTALL_PATH /usr/lib/x86_64-linux-gnu/\nENV TF_CUDA_COMPUTE_CAPABILITIES 6.0\n\n# Common Environment Setup\nENV TF_BUILD_CONTAINER_TYPE GPU\nENV TF_BUILD_OPTIONS OPT\nENV TF_BUILD_DISABLE_GCP 1\nENV TF_BUILD_ENABLE_XLA 0\nENV TF_BUILD_PYTHON_VERSION PYTHON2\nENV TF_BUILD_IS_OPT OPT\nENV TF_BUILD_IS_PIP PIP\n\n# Other Parameters\nENV CC_OPT_FLAGS -mavx -mavx2 -msse4.1 -msse4.2 -mfma\nENV TF_NEED_GCP 0\nENV TF_NEED_HDFS 0\nENV TF_NEED_JEMALLOC 1\nENV TF_NEED_OPENCL 0\nENV TF_CUDA_CLANG 0\nENV TF_NEED_MKL 0\nENV TF_ENABLE_XLA 0\n\nENV GIT_LFS_SKIP_SMUDGE=1\n\nRUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1\nRUN cp /usr/include/cudnn.h /usr/local/cuda/include/cudnn.h\n\n# Set library paths\nENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:/usr/lib/x86_64-linux-gnu/:/usr/local/cuda/lib64/stubs/\nWORKDIR /DeepSpeech/\n\nRUN python3 util/taskcluster.py --arch gpu --target native_client/ --branch=v0.2.0\nRUN python3 bin/import_ldc93s1.py ldc93s1\nRUN wget https://raw.githubusercontent.com/roscisz/TensorHive/master/examples/deepspeech/deepspeech_benchmarking.patch\nRUN git apply deepspeech_benchmarking.patch\nENV LD_LIBRARY_PATH=native_client/\n\n"
}