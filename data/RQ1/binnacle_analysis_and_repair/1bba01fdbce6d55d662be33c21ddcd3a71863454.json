{
  "startTime": 1674245979230,
  "endTime": 1674245980012,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 151,
        "lineEnd": 151,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 195,
        "lineEnd": 225,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 89,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 231,
        "lineEnd": 231,
        "columnStart": 3,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 238,
        "lineEnd": 240,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 254,
        "lineEnd": 254,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 238,
        "lineEnd": 240,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 254,
        "lineEnd": 254,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 2,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 231,
        "lineEnd": 231,
        "columnStart": 3,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 238,
        "lineEnd": 240,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 254,
        "lineEnd": 254,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 238,
        "lineEnd": 240,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 254,
        "lineEnd": 254,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\n\n# Docker base environment\n# Includes most dependences for deep learning, computer vision\n\nENV DEBIAN_FRONTEND noninteractive\n\nMAINTAINER Adam Harvey\n\n# Ubuntu 16.04 + Cuda 8.0 + CUDNN 6.0 + Python2.7 + Python3.5\n# Using Nvidia driver 367.51 and nvidia-docker\n# Install Nvidia driver 367.51:\n#   add-apt-repository ppa:graphics-drivers/ppa\n#   apt-get install nvidia-367\n\n# [ environment paths ]\n\nRUN echo export CUDA_HOME=/usr/local/cuda/ >> /etc/bash.bashrc\nRUN echo export PATH=/root/bin/:${CUDA_HOME}/bin:${PATH} >> /etc/bash.bashrc\nRUN echo export LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/lib\" >> /etc/bash.bashrc\n\n# --------------------------------------------------------\n\n# [ Update and upgrade Ubuntu ]\n\nRUN apt-get update\n\nRUN apt-get install -y --no-install-recommends software-properties-common && \\\n  add-apt-repository \"deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc) multiverse\" && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && \\\n  apt-get upgrade -y\n\n\n# --------------------------------------------------------\n\n# [ System dependencies ]\n\nRUN apt-get install --no-install-recommends -y \\\n  ant \\\n  bc \\\n  build-essential \\\n  checkinstall \\\n  cmake \\\n  curl \\\n  default-jdk \\\n  doxygen \\\n  git \\\n  gfortran \\\n  gir1.2-gst-plugins-base-0.10 \\\n  gir1.2-gstreamer-0.10 \\\n  imagemagick \\\n  iproute2 \\\n  mediainfo \\\n  nano \\\n  nginx \\\n  pkg-config \\\n  protobuf-compiler \\\n  python-cffi \\\n  python-dev \\\n  python-magic \\\n  python-h5py \\\n  python-numpy \\\n  python-pip \\\n  python-pythonmagick \\\n  python-tk \\\n  python-qt4 \\\n  python-yaml \\\n  python-xtermcolor \\\n  qt5-default \\\n  rsync \\\n  supervisor \\\n  screen \\\n  sphinx-common \\\n  texlive-latex-extra \\\n  tesseract-ocr \\\n  x264 \\\n  v4l-utils \\\n  vim \\\n  unzip \\\n  vlc \\\n  wget \\\n  xauth \\\n  yasm \\\n  youtube-dl \\\n  zip \\\n  zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update\n\nRUN apt-get install --no-install-recommends -y \\\n  libatlas-base-dev \\\n  libavcodec-dev \\\n  libavformat-dev \\\n  libcurl3-dev \\\n  libdc1394-22-dev \\\n  libeigen3-dev \\\n  libfaac-dev \\\n  libffi-dev \\\n  libgflags-dev \\\n  libfreetype6-dev \\\n  libgoogle-glog-dev \\\n  libgstreamer-plugins-base0.10-0 \\\n  libgstreamer-plugins-base0.10-dev \\\n  libgstreamer0.10-0 \\\n  libgstreamer0.10-dev \\\n  libgtk2.0-dev \\\n  libhdf5-dev \\\n  libhdf5-serial-dev \\\n  libjasper-dev \\\n  libjpeg-dev \\\n  libjpeg8-dev \\\n  libleveldb-dev \\\n  liblmdb-dev \\\n  libmp3lame-dev \\\n  libopencore-amrnb-dev \\\n  libopencore-amrwb-dev \\\n  libopenexr-dev \\\n  libpng12-dev \\\n  libprotobuf-dev \\\n  libqt4-dev \\\n  libqt4-opengl-dev \\\n  libreadline-dev \\\n  libsnappy-dev \\\n  libssl-dev \\\n  libswscale-dev \\\n  libtbb-dev \\\n  libtheora-dev \\\n  libtiff5-dev \\\n  libvtk5-qt4-dev \\\n  libv4l-dev \\\n  libxine2-dev \\\n  libvorbis-dev \\\n  libx264-dev \\\n  libatlas-base-dev \\\n  libgphoto2-dev \\\n  libxvidcore-dev \\\n  libzmq3-dev && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && \\\n  apt-get install -y --no-install-recommends libboost-all-dev && \\\n  apt-get install --no-install-recommends -y pv locate inkscape && \\\n  updatedb && rm -rf /var/lib/apt/lists/*;\n\n\n# [ install pip2/3 ]\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y python-dev python-pip python3-dev python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip2 install --no-cache-dir -U pip\nRUN pip3 install --no-cache-dir -U pip\n\n\n# [ add Github creds ]\n\nRUN git config --global user.name \"docker\" && \\\n  git config --global user.email \"docker@docker.com\"\n\n\n# [ Install Python2.7 packages ]\n\nRUN pip2.7 install -U \\\n  setuptools \\\n  packaging \\\n  pyparsing \\\n  six \\\n  cython \\\n  svgwrite \\\n  numpy \\\n  sklearn \\\n  scikit-image \\\n  scikit-learn \\\n  imutils \\\n  Pillow \\\n  matplotlib \\\n  argparse \\\n  jupyter \\\n  scipy \\\n  easydict \\\n  click \\\n  pandas \\\n  ipdb \\\n  python-osc \\\n  tqdm \\\n  xmltodict \\\n  librosa \\\n  uwsgi \\\n  Flask \\\n  requests \\\n  bcolz \\\n  sympy\n\n# [ Install Python3 packages ]\n\nRUN pip3 install --no-cache-dir -U \\\n  setuptools \\\n  packaging \\\n  pyparsing \\\n  six \\\n  cython \\\n  svgwrite \\\n  numpy \\\n  sklearn \\\n  scikit-image \\\n  scikit-learn \\\n  imutils \\\n  Pillow \\\n  matplotlib \\\n  argparse \\\n  jupyter \\\n  scipy \\\n  easydict \\\n  click \\\n  pandas \\\n  ipdb \\\n  python-osc \\\n  tqdm \\\n  xmltodict \\\n  librosa \\\n  uwsgi \\\n  Flask \\\n  requests \\\n  python-dateutil \\\n  bcolz \\\n  sympy\n\n\n# [ ffmpeg ]\n\nRUN apt-get update && \\\n   apt-get install --no-install-recommends -y --upgrade ffmpeg && rm -rf /var/lib/apt/lists/*;\n\n\n# [ additional ]\n\nRUN apt-get update -y\n\nRUN apt-get install --no-install-recommends \\\n  libcanberra-gtk-module \\\n  python3-tk -y && rm -rf /var/lib/apt/lists/*;\n\n\n# [ define docker user ]\n\nENV DOCKER_USER docker\n\n# [ Install ZSH, in home directory ]\n\n#RUN adduser --disabled-password --gecos \"\" ${DOCKER_USER} && \\\n#    echo '${DOCKER_USER} ALL=NOPASSWD: ALL' >> /etc/sudoers\n\nRUN useradd -d /home/${DOCKER_USER} -ms /bin/bash -g root -G sudo -p ${DOCKER_USER} ${DOCKER_USER}\n\nRUN apt install --no-install-recommends -y zsh && rm -rf /var/lib/apt/lists/*;\nRUN git clone git://github.com/robbyrussell/oh-my-zsh.git /home/${DOCKER_USER}/.oh-my-zsh\nRUN cp /home/${DOCKER_USER}/.oh-my-zsh/templates/zshrc.zsh-template /home/${DOCKER_USER}/.zshrc\nRUN chsh -s $(which zsh)\n\n\n# [ update config ]\n\nRUN su -c 'python -c \"import matplotlib.pyplot\"' ${DOCKER_USER} && \\\n    python -c 'import matplotlib.pyplot' && \\\n    echo 'ln -f /dev/null /dev/raw1394 2>/dev/null' >> /etc/bash.bashrc && \\\n    echo 'export PATH=/work/bin:/root/bin:${PATH}' >> /etc/bash.bashrc\n\nWORKDIR /home/${DOCKER_USER}"
}