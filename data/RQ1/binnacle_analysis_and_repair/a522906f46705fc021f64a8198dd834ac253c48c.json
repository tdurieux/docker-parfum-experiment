{
  "startTime": 1674234389768,
  "endTime": 1674234390123,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 53,
        "columnEnd": 115
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 53,
        "columnEnd": 104
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# models_base\nFROM ubuntu:18.04\n\nWORKDIR /home\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y -q --no-install-recommends iputils-ping git && rm -rf /var/lib/apt/lists/*;\n\n# Fetch python3 and Install python3\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y -q --no-install-recommends libprotobuf-dev \\\n    python3-dev python3-pip virtualenv zlib1g-dev libssl-dev libssl-doc python3-setuptools python3-wheel && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir numpy scipy -i https://pypi.tuna.tsinghua.edu.cn/simple/ --trusted-host pypi.tuna.tsinghua.edu.cn\n\n# Install the MO in the DLDT\nARG DLDT_VER=2018_R4\nARG DLDT_REPO=https://github.com/opencv/dldt.git\nARG MO=/home/dldt/model-optimizer\nRUN git clone -b ${DLDT_VER} ${DLDT_REPO}; \\\n    cd dldt; \\\n    git submodule init; \\\n    git submodule update --recursive; \\\n    cd ${MO}; \\\n    pip3 install --no-cache-dir -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple/ --trusted-host pypi.tuna.tsinghua.edu.cn\n\n# Fetch the models\nARG MODEL_ZOO_VER=2018\nARG MODEL_ZOO_REPO=https://github.com/opencv/open_model_zoo.git\nRUN git clone -b ${MODEL_ZOO_VER} ${MODEL_ZOO_REPO}\n\nRUN pip3 install --no-cache-dir pyyaml requests\n\n# Download and convert the Mobilenet-SSD model\nARG MO=/home/dldt/model-optimizer\nARG MODELS_DOWNLOAD_DIR=/home/tmp_models\nARG MODEL_ZOO_DIR=/home/video-analytics/models\nARG MODEL_NAME=mobilenet-ssd\nARG DEPLOY_MODEL_NAME=object_detection\nARG DEPLOY_MODEL_VERSION=1\n\nRUN cd /home/open_model_zoo/model_downloader; \\\n    python3 downloader.py --name ${MODEL_NAME} -o ${MODELS_DOWNLOAD_DIR}; \\\n    mkdir -p ${MODEL_ZOO_DIR}/${DEPLOY_MODEL_NAME}/${DEPLOY_MODEL_VERSION}/FP32; \\\n    cd ${MODEL_ZOO_DIR}/${DEPLOY_MODEL_NAME}/${DEPLOY_MODEL_VERSION}/FP32; \\\n    ${MO}/mo.py --framework caffe --data_type FP32 --input_shape [1,3,300,300] --input data --mean_values data[127.5,127.5,127.5] --scale_values data[127.50223128904757] --output detection_out --input_model ${MODELS_DOWNLOAD_DIR}/object_detection/common/mobilenet-ssd/caffe/${MODEL_NAME}.caffemodel --input_proto ${MODELS_DOWNLOAD_DIR}/object_detection/common/mobilenet-ssd/caffe/${MODEL_NAME}.prototxt\n\n\n# Download and convert the face-detection-adas-0001 model\nARG MODEL_NAME=face-detection-adas-0001\nARG OUTPUT=Transportation/object_detection/face/pruned_mobilenet_reduced_ssd_shared_weights/dldt\nARG DEPLOY_MODEL_NAME=face_detection_adas\nARG DEPLOY_MODEL_VERSION=1\n\nRUN cd /home/open_model_zoo/model_downloader; \\\n    python3 downloader.py --name ${MODEL_NAME} -o ${MODELS_DOWNLOAD_DIR}; \\\n    mkdir -p ${MODEL_ZOO_DIR}/${DEPLOY_MODEL_NAME}/${DEPLOY_MODEL_VERSION}/FP32; \\\n    cd ${MODEL_ZOO_DIR}/${DEPLOY_MODEL_NAME}/${DEPLOY_MODEL_VERSION}/FP32; \\\n    cp ${MODELS_DOWNLOAD_DIR}/${OUTPUT}/* .\n\n# Download and convert the face-detection-retail-0004 model\nARG MODEL_NAME=face-detection-retail-0004\nARG OUTPUT=Retail/object_detection/face/sqnet1.0modif-ssd/0004/dldt\nARG DEPLOY_MODEL_NAME=face_detection_retail\nARG DEPLOY_MODEL_VERSION=1\n\nRUN cd /home/open_model_zoo/model_downloader; \\\n    python3 downloader.py --name ${MODEL_NAME} -o ${MODELS_DOWNLOAD_DIR}; \\\n    mkdir -p ${MODEL_ZOO_DIR}/${DEPLOY_MODEL_NAME}/${DEPLOY_MODEL_VERSION}/FP32; \\\n    cd ${MODEL_ZOO_DIR}/${DEPLOY_MODEL_NAME}/${DEPLOY_MODEL_VERSION}/FP32; \\\n    cp ${MODELS_DOWNLOAD_DIR}/${OUTPUT}/* .\n\n# Download and convert the face-reidentification-retail-0095 model\nARG MODEL_NAME=face-reidentification-retail-0095\nARG OUTPUT=Retail/object_reidentification/face/mobilenet_based/dldt\nARG DEPLOY_MODEL_NAME=face_reidentification\nARG DEPLOY_MODEL_VERSION=1\n\nRUN cd /home/open_model_zoo/model_downloader; \\\n    python3 downloader.py --name ${MODEL_NAME} -o ${MODELS_DOWNLOAD_DIR}; \\\n    mkdir -p ${MODEL_ZOO_DIR}/${DEPLOY_MODEL_NAME}/${DEPLOY_MODEL_VERSION}/FP32; \\\n    cd ${MODEL_ZOO_DIR}/${DEPLOY_MODEL_NAME}/${DEPLOY_MODEL_VERSION}/FP32; \\\n    cp ${MODELS_DOWNLOAD_DIR}/${OUTPUT}/* .\n\n# Download and convert the emotions-recognition-retail-0003 model\nARG MODEL_NAME=emotions-recognition-retail-0003\nARG OUTPUT=Retail/object_attributes/emotions_recognition/0003/dldt\nARG DEPLOY_MODEL_NAME=emotion_recognition\nARG DEPLOY_MODEL_VERSION=1\n\nRUN cd /home/open_model_zoo/model_downloader; \\\n    python3 downloader.py --name ${MODEL_NAME} -o ${MODELS_DOWNLOAD_DIR}; \\\n    mkdir -p ${MODEL_ZOO_DIR}/${DEPLOY_MODEL_NAME}/${DEPLOY_MODEL_VERSION}/FP32; \\\n    cd ${MODEL_ZOO_DIR}/${DEPLOY_MODEL_NAME}/${DEPLOY_MODEL_VERSION}/FP32; \\\n    cp ${MODELS_DOWNLOAD_DIR}/${OUTPUT}/* .\n\n# Download and convert the landmarks-regression-retail-0009 model\nARG MODEL_NAME=landmarks-regression-retail-0009\nARG OUTPUT=Retail/object_attributes/landmarks_regression/0009/dldt\nARG DEPLOY_MODEL_NAME=landmarks_regression\nARG DEPLOY_MODEL_VERSION=1\n\nRUN cd /home/open_model_zoo/model_downloader; \\\n    python3 downloader.py --name ${MODEL_NAME} -o ${MODELS_DOWNLOAD_DIR}; \\\n    mkdir -p ${MODEL_ZOO_DIR}/${DEPLOY_MODEL_NAME}/${DEPLOY_MODEL_VERSION}/FP32; \\\n    cd ${MODEL_ZOO_DIR}/${DEPLOY_MODEL_NAME}/${DEPLOY_MODEL_VERSION}/FP32; \\\n    cp ${MODELS_DOWNLOAD_DIR}/${OUTPUT}/* .\n\nRUN rm -rf ${MODELS_DOWNLOAD_DIR} && \\\n    rm -rf /var/lib/apt/lists/*;\n"
}