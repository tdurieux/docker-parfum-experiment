{
  "startTime": 1674250611842,
  "endTime": 1674250611896,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "####################################\n# PHPDocker.io PHP 7.0 / CLI image #\n####################################\n\nFROM ubuntu:xenial\n\n# PHP7, composer and selected extensions\nRUN apt-get update \\\n    && apt-get -y --no-install-recommends install \\\n        curl \\\n        ca-certificates \\\n        unzip \\\n        php-cli \\\n        php-apcu \\\n        php-curl \\\n        php-json \\\n        php-mcrypt \\\n        php-mbstring \\\n        php-opcache \\\n        php-readline \\\n        php-xml \\\n        php-zip \\\n    && curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* ~/.composer\n\nCMD [\"php\", \"-a\"]\n\n# If you'd like to be able to use this container on a docker-compose environment as a quiescent PHP CLI container\n# you can /bin/bash into, override CMD with the following - bear in mind that this will make docker-compose stop\n# slow on such a container, docker-compose kill might do if you're in a hurry\n# CMD [\"tail\", \"-f\", \"/dev/null\"]\n"
}