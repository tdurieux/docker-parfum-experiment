{
  "startTime": 1674239066983,
  "endTime": 1674239067047,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Create the container from the alpine linux image\nFROM alpine:3.7\n\n# Add nginx and nodejs\nRUN apk add --no-cache --update nginx nodejs\n\n# Create the directories we will need\nRUN mkdir -p /tmp/nginx/aura\nRUN mkdir -p /var/log/nginx\nRUN mkdir -p /var/www/html\n\n# Copy the respective nginx configuration files\nCOPY nginx_config/nginx.conf /etc/nginx/nginx.conf\nCOPY nginx_config/default.conf /etc/nginx/conf.d/default.conf\n\n# Set the directory we want to run the next commands for\nWORKDIR /tmp/nginx/aura\n# Copy our source code into the container\nCOPY . .\n# Install the dependencies, can be commented out if you're running the same node version\nRUN npm install && npm cache clean --force;\n\n# run webpack and the vue-loader\nRUN npm run build\n\n# copy the built app to our served directory\nRUN cp -r dist/* /var/www/html\n\n# make all files belong to the nginx user\nRUN chown nginx:nginx /var/www/html\n\n# start nginx and keep the process from backgrounding and the container from quitting\nCMD [\"nginx\", \"-g\", \"daemon off;\"]"
}