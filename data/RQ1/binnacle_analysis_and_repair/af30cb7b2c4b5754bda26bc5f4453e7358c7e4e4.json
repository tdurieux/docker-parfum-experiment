{
  "startTime": 1674235391892,
  "endTime": 1674235391980,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for deepvisualminer image with all required dependencies.\n#\n# The TensorFlow installed is a custom build with support for 'haswell' architecture instruction\n# sets -  MOVBE, MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, POPCNT, AVX, AVX2, AES, PCLMUL, FSGSBASE, RDRND, FMA, BMI, BMI2 and F16C.\n# See https://gcc.gnu.org/onlinedocs/gcc-5.4.0/gcc/x86-Options.html#x86-Options for all available architectures.\n#\n# Check /proc/cpuinfo that these instructions are available in the docker host before running\n# a container off this image. Otherwise, it'll result in illegal instruction error.\n\nFROM ubuntu:16.04\n\n# launch-tensorflow.sh should have been executed prior to this.\nCOPY ./shared/tensorflow /root/tensorflow\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends python3 python3-setuptools python3-pip ffmpeg && \\\n    pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --no-cache-dir numpy opencv-python opencv-contrib-python sklearn scipy imageio PyYAML simplejson && \\\n    pip3 install --no-cache-dir /root/tensorflow/* && \\\n    apt-get remove -y python3-pip python3-setuptools && \\\n    apt-get autoremove -y && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm -rf /var/cache/apt/* && \\\n    rm -rf /root/.cache/pip/*\n\n# build-image.sh should have been launched prior to this.\nCOPY ./shared/darkflow /root/darkflow\n\nCOPY ./opencv/data /root/data\n\n# TODO Install the video mining scripts\nCOPY ./deepvisualminer /root/deepvisualminer\n\n#ADD ./my_service.py /my_service.py\n#ENTRYPOINT [\"python\", \"/my_service.py\"]\n"
}