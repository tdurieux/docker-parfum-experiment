{
  "startTime": 1674241836360,
  "endTime": 1674241837033,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 152,
        "lineEnd": 152,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 21,
        "columnEnd": 41
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 50,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 50,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 99
      }
    }
  ],
  "repairedDockerfile": "#######################################################################\n# Dockerfile to build Kaldi (speech recognition engine container      #\n# image - based on Ubuntu + SRILM                                     #\n#######################################################################\n\nFROM ubuntu:18.04\n\n########################## BEGIN INSTALLATION #########################\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    autoconf \\\n    automake \\\n    libtool-bin \\\n    make \\\n    gcc \\\n    g++ \\\n    gfortran \\\n    git \\\n    subversion \\\n    curl \\\n    wget \\\n    libjson-c3 \\\n    libjson-c-dev \\\n    zlib1g-dev \\\n    bzip2 \\\n    gsl-bin libgsl-dev \\\n    libatlas-base-dev \\\n    glpk-utils \\\n    libglib2.0-dev && rm -rf /var/lib/apt/lists/*;\n\n# Python 2.7 required for building Kaldi\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python2.7 \\\n    python-pip \\\n    python-yaml \\\n    python-simplejson \\\n    python-gi && \\\n    pip install --no-cache-dir ws4py==0.3.2 && \\\n    pip install --no-cache-dir tornado && \\\n    ln -s /usr/bin/python2.7 /usr/bin/python; rm -rf /var/lib/apt/lists/*; ln -s -f bash /bin/sh\n\n# Add sox and graphviz for kaldi, vim and nano to edit scripts\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    sox \\\n    graphviz \\\n    vim \\\n    nano \\\n    zsh \\\n    unzip \\\n    tree \\\n    ffmpeg && rm -rf /var/lib/apt/lists/*;\n\n# Get and Build Kaldi\nWORKDIR /\n\nRUN echo \"===> install Kaldi (latest from source)\"  && \\\n    git clone https://github.com/kaldi-asr/kaldi && \\\n    cd /kaldi/tools && \\\n    make && \\\n    ./install_portaudio.sh && \\\n    cd /kaldi/src && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --shared && \\\n    sed -i '/-g # -O0 -DKALDI_PARANOID/c\\-O3 -DNDEBUG' kaldi.mk && \\\n    make depend && make && \\\n    cd /kaldi/src/online && make depend && make\n\nCOPY srilm-1.7.2.tar.gz /kaldi/tools/srilm.tgz\n\nWORKDIR /kaldi/tools\n\nRUN apt-get install -y --no-install-recommends gawk && \\\n    chmod +x extras/* && \\\n    ./extras/install_liblbfgs.sh && \\\n    ./extras/install_srilm.sh && \\\n    chmod +x env.sh && \\\n    source ./env.sh && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y libssl-dev libsqlite3-dev libbz2-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /tmp\n\n# Add python 3.6\nRUN wget https://www.python.org/ftp/python/3.6.6/Python-3.6.6.tgz && \\\n    tar xvf Python-3.6.6.tgz && \\\n    cd Python-3.6.6 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations --enable-loadable-sqlite-extensions && \\\n    make -j8 && \\\n    make altinstall && rm Python-3.6.6.tgz\n\n# Add python packages and their dependencies\nRUN apt-get install --no-install-recommends -y python3-dev python3-pip python3-certifi python3-venv && \\\n    pip3.6 install numpy pympi-ling praatio pydub && rm -rf /var/lib/apt/lists/*;\n\n# Add a task runner\nRUN curl -f -s https://taskfile.org/install.sh | sh && mv ./bin/task /bin/\n\n# Add jq\nRUN wget https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 && \\\n    chmod +x jq-linux64 && \\\n    mv jq-linux64 /usr/local/bin/jq\n\n# Add node, npm and xml-js\nRUN apt-get install --no-install-recommends -y nodejs build-essential npm && \\\n    #ln -s /usr/bin/nodejs /usr/bin/node && \\\n    npm install -g xml-js && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n# Add moustache templates as mo\nRUN curl -f -sSO https://raw.githubusercontent.com/tests-always-included/mo/master/mo && \\\n    chmod +x mo && \\\n    mv mo /usr/local/bin\n\n# Clean up package manager\nRUN apt-get clean autoclean\n\n# Add random number generator to skip Docker building cache\nADD http://www.random.org/strings/?num=10&len=8&digits=on&upperalpha=on&loweralpha=on&unique=on&format=plain&rnd=new /uuid\n\n# Elpis\nWORKDIR /\nRUN git clone https://github.com/CoEDL/elpis.git\n\nWORKDIR /elpis\nRUN git submodule update --init --recursive && cd elpis-gui && git pull origin master\nRUN npm build\n\n# Get Kaldi-Helpers and install it\nRUN cd /tmp && git clone https://github.com/CoEDL/kaldi-helpers.git /kaldi-helpers\nRUN cd /kaldi-helpers && python3.6 setup.py install\n\n# Get example corpora\nRUN cd /tmp && git clone https://github.com/CoEDL/toy-corpora.git && \\\n    mv toy-corpora/* /kaldi-helpers/resources/corpora/\n\nRUN cd /tmp && sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n\nWORKDIR /kaldi-helpers\n\nRUN echo \"FLASK_ENV=development\" >> ~/.bashrc\nRUN echo \"FLASK_APP=elpis\" >> ~/.bashrc\nRUN echo \"export LC_ALL=C.UTF-8\" >> ~/.bashrc\nRUN echo \"export LANG=C.UTF-8\" >> ~/.bashrc\n\n# Move ENV lines up. Putting here for now so I can build on top of cached builds\nENV FLASK_ENV='development'\nENV FLASK_APP='elpis'\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\nWORKDIR /kaldi-helpers\nRUN python3.6 setup.py bdist_egg && \\\n    cp dist/kaldi_helpers-0.23-py3.6.egg /usr/local/lib/python3.6/site-packages/kaldi_helpers-0.2-py3.6.egg\n\nWORKDIR /elpis/elpis-gui\nRUN npm install && \\\n    npm run build && npm cache clean --force;\n\nWORKDIR /elpis\nRUN pip3.6 install appdirs pystache && \\\n    pip3.6 install -r requirements.txt\n\nENTRYPOINT [\"flask\", \"run\", \"--host\", \"0.0.0.0\"]\n\nEXPOSE 5000:5000\nEXPOSE 8008:8008\n"
}