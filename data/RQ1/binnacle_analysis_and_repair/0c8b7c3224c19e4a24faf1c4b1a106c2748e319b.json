{
  "startTime": 1674242599804,
  "endTime": 1674242599855,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "ARG GOLANG_VERSION\n\nFROM golang:${GOLANG_VERSION}-stretch AS golang\n\nFROM thecodingmachine/gotenberg:base\n\n# |--------------------------------------------------------------------------\n# | Common libraries\n# |--------------------------------------------------------------------------\n# |\n# | Libraries used in the build process of this image.\n# |\n\nRUN apt-get install --no-install-recommends -y git gcc && rm -rf /var/lib/apt/lists/*;\n\n# |--------------------------------------------------------------------------\n# | Golang\n# |--------------------------------------------------------------------------\n# |\n# | Installs Golang.\n# |\n\nCOPY --from=golang /usr/local/go /usr/local/go\n\nRUN export PATH=\"/usr/local/go/bin:$PATH\" &&\\\n    go version\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\n# |--------------------------------------------------------------------------\n# | Final touch\n# |--------------------------------------------------------------------------\n# |\n# | Last instructions of this build.\n# |\n\n# Define our workding outside of $GOPATH (we're using go modules).\nWORKDIR /tests\n\n# Copy our module dependencies definitions.\nCOPY go.mod .\nCOPY go.sum .\n\n# Install module dependencies.\nRUN go mod download\n\nENTRYPOINT [ \"build/tests/docker-entrypoint.sh\" ]"
}