{
  "startTime": 1674249415872,
  "endTime": 1674249415999,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM kitware/smqtk/caffe:1.0-gpu-cuda8.0-cudnn6\n\n#\n# Download Resnet-50 Caffe models.\n# This reflects the same models used as the IQR Playground container.\n#\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends -y curl \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n # - Get MSRA ResNet-50 model files\n && mkdir -p /caffe/models/msra_resnet \\\n && curl -f https://data.kitware.com/api/v1/item/5939a7828d777f16d01e4e5d/download \\\n        -o /caffe/models/msra_resnet/LICENSE.txt \\\n && curl -f https://data.kitware.com/api/v1/item/5939a61e8d777f16d01e4e52/download \\\n        -o /caffe/models/msra_resnet/ResNet_mean.binaryproto \\\n && curl -f https://data.kitware.com/api/v1/item/5939a6188d777f16d01e4e40/download \\\n        -o /caffe/models/msra_resnet/ResNet-50-deploy.prototxt \\\n && curl -f https://data.kitware.com/api/v1/item/5939a6198d777f16d01e4e43/download \\\n        -o /caffe/models/msra_resnet/ResNet-50-model.caffemodel\n\n#\n# SMQTK install\n#\nCOPY docs /smqtk/source/docs\nCOPY etc /smqtk/source/etc\nCOPY python /smqtk/source/python\nCOPY src /smqtk/source/src\nCOPY TPL /smqtk/source/TPL\nCOPY CMakeLists.txt LICENSE.txt pytest.* README.md setup.* setup_env.* VERSION \\\n     /smqtk/source/\nRUN mkdir /smqtk/build \\\n && cd /smqtk/build \\\n && cmake \\\n    -DCMAKE_BUILD_TYPE:STRING=Release \\\n    -DCMAKE_INSTALL_PREFIX:PATH=/usr/local \\\n    -DSMQTK_BUILD_FLANN:BOOL=OFF \\\n    /smqtk/source \\\n && make install -j12 \\\n && cd / \\\n && rm -rf smqtk \\\n # Create directory for standard configuration file mounting\n && mkdir /configuration\n\nADD devops/docker/smqtk_classifier_service/default_server.gpu.json /configuration/server.json\nADD devops/docker/smqtk_classifier_service/entrypoint.sh /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nEXPOSE 5002\n"
}