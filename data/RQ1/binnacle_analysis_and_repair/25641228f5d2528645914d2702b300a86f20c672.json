{
  "startTime": 1674245227047,
  "endTime": 1674245227435,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 56,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 72,
        "lineEnd": 74,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 86,
        "lineEnd": 87,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 54,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\n\nRUN apk --no-cache add \\\n\tca-certificates \\\n\tperl-datetime \\\n\tperl-timedate\n\nENV HOME /home/user\nRUN adduser -u 1001 -D user \\\n\t&& mkdir -p $HOME/.irssi \\\n\t&& chown -R user:user $HOME\n\nENV LANG C.UTF-8\n\nENV IRSSI_VERSION 1.2.0\n# https://otr.cypherpunks.ca/index.php#downloads\nENV LIB_OTR_VERSION 4.1.1\n# https://github.com/cryptodotis/irssi-otr/releases\nENV IRSSI_OTR_VERSION 1.0.2\n\nRUN set -x \\\n\t&& apk add --no-cache --virtual .build-deps \\\n\t\tautoconf \\\n\t\tautomake \\\n\t\tcurl \\\n\t\tgcc \\\n\t\tglib-dev \\\n\t\tgnupg \\\n\t\tlibc-dev \\\n\t\tlibgcrypt-dev \\\n\t\tlibtool \\\n\t\tlynx \\\n\t\tmake \\\n\t\tncurses-dev \\\n\t\topenssl-dev \\\n\t\tperl-dev \\\n\t\tpkgconf \\\n\t\ttar \\\n\t\txz \\\n\t&& curl -f -sSL \"https://github.com/irssi/irssi/releases/download/${IRSSI_VERSION}/irssi-${IRSSI_VERSION}.tar.xz\" -o /tmp/irssi.tar.xz \\\n\t&& curl -f -sSL \"https://github.com/irssi/irssi/releases/download/${IRSSI_VERSION}/irssi-${IRSSI_VERSION}.tar.xz.asc\" -o /tmp/irssi.tar.xz.asc \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n# gpg: key DDBEF0E1: public key \"The Irssi project <staff@irssi.org>\" imported\n\t&& gpg --batch --no-tty --keyserver ha.pool.sks-keyservers.net --recv-keys 7EE65E3082A5FB06AC7C368D00CCB587DDBEF0E1 \\\n\t&& gpg --batch --verify /tmp/irssi.tar.xz.asc /tmp/irssi.tar.xz \\\n\t&& rm -rf \"$GNUPGHOME\" /tmp/irssi.tar.xz.asc \\\n\t&& mkdir -p /usr/src \\\n\t&& tar -xJf /tmp/irssi.tar.xz -C /usr/src \\\n\t&& rm /tmp/irssi.tar.xz \\\n\t&& ( cd /usr/src/irssi-$IRSSI_VERSION \\\n\t\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t\t--enable-true-color \\\n\t\t\t--with-bot \\\n\t\t\t--with-proxy \\\n\t\t\t--with-socks \\\n\t\t\t--prefix=/usr \\\n\t\t&& make -j$(getconf _NPROCESSORS_ONLN) \\\n\t\t&& make install) \\\n\n\t&& curl -f -sSL \"https://otr.cypherpunks.ca/libotr-${LIB_OTR_VERSION}.tar.gz\" -o /tmp/libotr.tar.gz \\\n\t&& curl -f -sSL \"https://otr.cypherpunks.ca/libotr-${LIB_OTR_VERSION}.tar.gz.asc\" -o /tmp/libotr.tar.gz.asc \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n# gpg: key 42C2ABAD: public key \"OTR Dev Team (Signing Key) <otr@cypherpunks.ca>\" imported\n\t&& curl -f -sSL https://otr.cypherpunks.ca/gpgkey.asc | gpg --batch --no-tty --import \\\n\t&& gpg --batch --verify /tmp/libotr.tar.gz.asc /tmp/libotr.tar.gz \\\n\t&& rm -rf \"$GNUPGHOME\" /tmp/libotr.tar.gz.asc \\\n\t&& mkdir -p /usr/src/libotr \\\n\t&& tar -xzf /tmp/libotr.tar.gz -C /usr/src/libotr --strip-components 1 \\\n\t&& rm /tmp/libotr.tar.gz \\\n\t&& ( cd /usr/src/libotr \\\n\t\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t\t--with-pic \\\n\t\t\t--prefix=/usr \\\n\t\t&& make \\\n\t\t&& make install) \\\n\n\t&& mkdir -p /usr/src/irssi-otr \\\n\t&& curl -f -sSL \"https://github.com/cryptodotis/irssi-otr/archive/v${IRSSI_OTR_VERSION}.tar.gz\" -o /tmp/irssi-otr.tar.gz \\\n\t&& mkdir -p /usr/src/irssi-otr \\\n\t&& tar -xf /tmp/irssi-otr.tar.gz -C /usr/src/irssi-otr --strip-components 1 \\\n\t&& rm -f /tmp/irssi-otr.tar.gz \\\n\t&& ( cd /usr/src/irssi-otr \\\n\t\t&& ./bootstrap \\\n\t\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t\t--prefix=/usr \\\n\t\t&& make \\\n\t\t&& make install) \\\n\n\t&& rm -rf /usr/src/irssi-$IRSSI_VERSION \\\n\t&& rm -rf /usr/src/libotr \\\n\t&& rm -rf /usr/src/irssi-otr \\\n\t&& runDeps=\"$( \\\n\t\tscanelf --needed --nobanner --recursive /usr \\\n\t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n\t\t\t| sort -u \\\n\t\t\t| xargs -r apk info --installed \\\n\t\t\t| sort -u \\\n\t)\" \\\n\t&& apk add --no-cache --virtual .irssi-rundeps $runDeps perl-libwww \\\n\t&& apk del .build-deps\n\nWORKDIR $HOME\nVOLUME $HOME/.irssi\n\nUSER user\nCMD [\"irssi\"]\n"
}