{
  "startTime": 1674242576334,
  "endTime": 1674242576654,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 22,
        "columnStart": 36,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 8,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 8,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 22,
        "columnStart": 36,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 8,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "## Dockerfile to build a docker image contain Darknet, OPENCV, and CUDA.\n## Author : Taha Emara, Email:taha@emaraic.com\n\n\n\n\nFROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\n\nARG https_proxy\nARG http_proxy\n\n\n###  OPENCV INSTALL  ###\n\nRUN apt-get update --fix-missing && apt-get install --no-install-recommends -qy \\\n\tcmake \\\n\tpython-numpy python-scipy python-pip python-setuptools \\\n\tpython3-numpy python3-scipy python3-pip python3-setuptools \\\n\twget \\\n\txauth \\\n\tlibjpeg-dev libtiff5-dev libjasper1 libjasper-dev libpng12-dev libavcodec-dev libavformat-dev \\\n\tlibswscale-dev libv4l-dev libxvidcore-dev libx264-dev libgtk2.0-dev libatlas-base-dev \\\n\tgfortran python2.7-dev python3-dev build-essential pkg-config && rm -rf /var/lib/apt/lists/*;\n\n\n\n# Build OpenCV 3.3.0\nRUN \\\n\tcd /root && \\\n\twget https://github.com/opencv/opencv/archive/3.3.0.tar.gz -O opencv.tar.gz && \\\n\ttar zxf opencv.tar.gz && rm -f opencv.tar.gz && \\\n\twget https://github.com/opencv/opencv_contrib/archive/3.3.0.tar.gz -O contrib.tar.gz && \\\n\ttar zxf contrib.tar.gz && rm -f contrib.tar.gz && \\\n\tcd opencv-3.3.0 && mkdir build && cd build && \\\n\tcmake -D CMAKE_BUILD_TYPE=RELEASE \\\n\t-D CMAKE_INSTALL_PREFIX=/usr/local \\\n\t-D INSTALL_PYTHON_EXAMPLES=OFF \\\n\t-D OPENCV_EXTRA_MODULES_PATH=/root/opencv_contrib-3.3.0/modules \\\n\t-D WITH_CUDA=ON \\\n\t-D CUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \\\n\t-D BUILD_DOCS=OFF \\\n\t-D BUILD_TESTS=OFF \\\n\t-D BUILD_EXAMPLES=OFF \\\n\t-D BUILD_opencv_python2=OFF \\\n\t-D BUILD_opencv_python3=ON \\\n\t-D WITH_1394=OFF \\\n\t-D WITH_MATLAB=OFF \\\n\t-D WITH_OPENCL=OFF \\\n\t-D WITH_OPENCLAMDBLAS=OFF \\\n\t-D WITH_OPENCLAMDFFT=OFF \\\n\t-D CMAKE_CXX_FLAGS=\"-O3 -funsafe-math-optimizations\" \\\n\t-D CMAKE_C_FLAGS=\"-O3 -funsafe-math-optimizations\" \\\n\t.. && make && make install && \\\n\tcd /root && rm -rf opencv-3.3.0 opencv_contrib-3.3.0\n\n###  DARKNET INSTALL  ###\nRUN apt-get -qy --no-install-recommends install git-core && rm -rf /var/lib/apt/lists/*;\n\nRUN  \tcd / \\\n\t&& git clone https://github.com/pjreddie/darknet \\\n\t&& cd darknet \\\n\t&& sed -i 's/GPU=0/GPU=1/g' Makefile \\\n\t&& sed -i 's/OPENCV=0/OPENCV=1/g' Makefile \\\n\t&& make\n\n###Download YOLO v3 tiny weights \nRUN \tcd / \\\n\t&& mkdir weights && cd /weights \\\n\t&& wget https://pjreddie.com/media/files/yolov3-tiny.weights\n\n#RUN   \texport PATH=$PATH:/darknet/darknet\nRUN apt-get install --no-install-recommends -qqy x11-apps && rm -rf /var/lib/apt/lists/*;\n\n\n\nWORKDIR /darknet\n#uncomment the following line to prevent runing docker image alongwith the darknet executable file\nENTRYPOINT [ \"./darknet\",\"-nogpu\", \"detect\" , \"/darknet/cfg/yolov3-tiny.cfg\" , \"/weights/yolov3-tiny.weights\" , \"/darknet/data/dog.jpg\" ]\n\n"
}