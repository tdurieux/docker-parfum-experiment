{
  "startTime": 1674249780231,
  "endTime": 1674249780300,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This simulation tests that if there are node both for and against the DAO hard\n# fork in a single network, then the moment the hard fork commences the two sides\n# will partition apart and never merge back.\n#\n# This is important because at a protocol/networking level the two blockchains\n# are still fully compatible with each other, only content wise do they differ.\n# However if they do not split apart, then all kinds of anomalies will arise when\n# nodes from different forks try to sync with each other, especially during the\n# fast and light sync algos which do not have access to historical content to\n# verify which chain their peer's on.\nFROM alpine:latest\n\n# The test needs a fork-independent bootstrap node. Build from the go-ethereum repo.\nRUN \\\n  apk add --update go git make gcc musl-dev ca-certificates linux-headers && \\\n  git clone --depth 1 https://github.com/ethereum/go-ethereum             && \\\n  (cd go-ethereum && make all)                                            && \\\n  cp go-ethereum/build/bin/bootnode /bootnode                             && \\\n  apk del go git make gcc musl-dev                                        && \\\n  rm -rf /go-ethereum && rm -rf /var/cache/apk/*\n\nRUN apk add --no-cache --update bash curl jq\n\n# Configure the clients for the simulation\nADD genesis.json /genesis.json\nENV HIVE_FORK_DAO_BLOCK 10\n\n# Inject the simulator startup script\nADD simulator.sh /simulator.sh\nRUN chmod +x /simulator.sh\n\n# Export the devp2p data port to allow running a local bootstrap node\nEXPOSE 30303\n\nENTRYPOINT [\"/simulator.sh\"]\n"
}