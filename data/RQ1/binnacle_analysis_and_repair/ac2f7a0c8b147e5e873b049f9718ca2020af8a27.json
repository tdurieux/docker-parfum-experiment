{
  "startTime": 1674234539427,
  "endTime": 1674234540929,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 74,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 164
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 115,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 213,
        "lineEnd": 220,
        "columnStart": 7,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#upstream: https://github.com/jenkinsci/docker\nFROM alpine:3.8\nMAINTAINER 若虚 <slpcat@qq.com>\n\n# Container variables\nENV \\\n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n\n# Set timezone and locales\nRUN set -ex \\\n    && apk update \\\n    && apk upgrade \\\n    && apk add --no-cache \\\n           bash \\\n           tzdata \\\n           vim \\\n           tini \\\n           su-exec \\\n           gzip \\\n           tar \\\n           wget \\\n           curl \\\n    && echo \"${TIMEZONE}\" > /etc/TZ \\\n    && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n    # Network fix\n    && echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf\n\n# Here we install GNU libc (aka glibc) and set en_US.UTF-8 locale as default.\n\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" && \\\n    ALPINE_GLIBC_PACKAGE_VERSION=\"2.28-r0\" && \\\n    ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    apk add --no-cache --virtual=.build-dependencies wget ca-certificates && \\\n    wget \\\n        \"https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub\" \\\n        -O \"/etc/apk/keys/sgerrand.rsa.pub\" && \\\n    wget \\\n        \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" && \\\n    apk add --no-cache \\\n        \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" && \\\n    \\\n    rm \"/etc/apk/keys/sgerrand.rsa.pub\" && \\\n    /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true && \\\n    echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh && \\\n    \\\n    apk del glibc-i18n && \\\n    \\\n    rm \"/root/.wget-hsts\" && \\\n    apk del .build-dependencies && \\\n    rm \\\n        \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\n\nENV JAVA_VERSION=8 \\\n    JAVA_UPDATE=191 \\\n    JAVA_BUILD=12 \\\n    JAVA_PATH=2787e4a523244c269598db4e85c51e0c \\\n    JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\n\nRUN apk add --no-cache --virtual=build-dependencies wget ca-certificates unzip && \\\n    cd \"/tmp\" && \\\n    wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \\\n        \"https://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/${JAVA_PATH}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" && \\\n    tar -xzf \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" && \\\n    mkdir -p \"/usr/lib/jvm\" && \\\n    mv \"/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}\" \"/usr/lib/jvm/java-${JAVA_VERSION}-oracle\" && \\\n    ln -s \"java-${JAVA_VERSION}-oracle\" \"$JAVA_HOME\" && \\\n    ln -s \"$JAVA_HOME/bin/\"* \"/usr/bin/\" && \\\n    rm -rf \"$JAVA_HOME/\"*src.zip && \\\n    rm -rf \"$JAVA_HOME/lib/missioncontrol\" \\\n           \"$JAVA_HOME/lib/visualvm\" \\\n           \"$JAVA_HOME/lib/\"*javafx* \\\n           \"$JAVA_HOME/jre/lib/plugin.jar\" \\\n           \"$JAVA_HOME/jre/lib/ext/jfxrt.jar\" \\\n           \"$JAVA_HOME/jre/bin/javaws\" \\\n           \"$JAVA_HOME/jre/lib/javaws.jar\" \\\n           \"$JAVA_HOME/jre/lib/desktop\" \\\n           \"$JAVA_HOME/jre/plugin\" \\\n           \"$JAVA_HOME/jre/lib/\"deploy* \\\n           \"$JAVA_HOME/jre/lib/\"*javafx* \\\n           \"$JAVA_HOME/jre/lib/\"*jfx* \\\n           \"$JAVA_HOME/jre/lib/amd64/libdecora_sse.so\" \\\n           \"$JAVA_HOME/jre/lib/amd64/\"libprism_*.so \\\n           \"$JAVA_HOME/jre/lib/amd64/libfxplugins.so\" \\\n           \"$JAVA_HOME/jre/lib/amd64/libglass.so\" \\\n           \"$JAVA_HOME/jre/lib/amd64/libgstreamer-lite.so\" \\\n           \"$JAVA_HOME/jre/lib/amd64/\"libjavafx*.so \\\n           \"$JAVA_HOME/jre/lib/amd64/\"libjfx*.so && \\\n    rm -rf \"$JAVA_HOME/jre/bin/jjs\" \\\n           \"$JAVA_HOME/jre/bin/keytool\" \\\n           \"$JAVA_HOME/jre/bin/orbd\" \\\n           \"$JAVA_HOME/jre/bin/pack200\" \\\n           \"$JAVA_HOME/jre/bin/policytool\" \\\n           \"$JAVA_HOME/jre/bin/rmid\" \\\n           \"$JAVA_HOME/jre/bin/rmiregistry\" \\\n           \"$JAVA_HOME/jre/bin/servertool\" \\\n           \"$JAVA_HOME/jre/bin/tnameserv\" \\\n           \"$JAVA_HOME/jre/bin/unpack200\" \\\n           \"$JAVA_HOME/jre/lib/ext/nashorn.jar\" \\\n           \"$JAVA_HOME/jre/lib/jfr.jar\" \\\n           \"$JAVA_HOME/jre/lib/jfr\" \\\n           \"$JAVA_HOME/jre/lib/oblique-fonts\" && \\\n    wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \\\n        \"https://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION}/jce_policy-${JAVA_VERSION}.zip\" && \\\n    unzip -jo -d \"${JAVA_HOME}/jre/lib/security\" \"jce_policy-${JAVA_VERSION}.zip\" && \\\n    rm \"${JAVA_HOME}/jre/lib/security/README.txt\" && \\\n    apk del build-dependencies && \\\n    rm \"/tmp/\"* && rm \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\"\n\nRUN apk add --no-cache git openssh-client curl unzip bash ttf-dejavu coreutils tini docker\n\nARG user=jenkins\nARG group=jenkins\nARG uid=1000\nARG gid=1000\nARG http_port=8080\nARG agent_port=50000\nARG JENKINS_HOME=/var/jenkins_home\n\nENV JENKINS_HOME $JENKINS_HOME\nENV JENKINS_SLAVE_AGENT_PORT ${agent_port}\n\n# Jenkins is run with user `jenkins`, uid = 1000\n# If you bind mount a volume from the host or a data container,\n# ensure you use the same uid\nRUN mkdir -p $JENKINS_HOME \\\n    && chown ${uid}:${gid} $JENKINS_HOME \\\n    && addgroup -g ${gid} ${group} \\\n    && adduser -h \"$JENKINS_HOME\" -u ${uid} -G ${group} -s /bin/bash -D ${user}\n\n# Jenkins home directory is a volume, so configuration and build history\n# can be persisted and survive image upgrades\nVOLUME $JENKINS_HOME\n\n# `/usr/share/jenkins/ref/` contains all reference configuration we want\n# to set on a fresh new installation. Use it to bundle additional plugins\n# or config file with your custom jenkins Docker image.\nRUN mkdir -p /usr/share/jenkins/ref/init.groovy.d\n\nCOPY init.groovy /usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy\nCOPY executors.groovy /usr/share/jenkins/ref/init.groovy.d/executors.groovy\n\n# jenkins version being bundled in this docker image\n#ENV JENKINS_VERSION ${JENKINS_VERSION:-2.150.1}\n\n# jenkins.war checksum, download will be validated using it\n#ARG JENKINS_SHA=d8ed5a7033be57aa9a84a5342b355ef9f2ba6cdb490db042a6d03efb23ca1e83\n\n# Can be used to customize where jenkins.war get downloaded from\n#http://mirrors.jenkins.io/war-stable/latest/jenkins.war\n#ARG JENKINS_URL=https://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war\nARG JENKINS_URL=http://mirrors.jenkins.io/war-stable/latest/jenkins.war\n\n# could use ADD but this one does not check Last-Modified header neither does it allow to control checksum\n# see https://github.com/docker/docker/issues/8331\nRUN curl -fsSL ${JENKINS_URL} -o /usr/share/jenkins/jenkins.war\n#  && echo \"${JENKINS_SHA}  /usr/share/jenkins/jenkins.war\" | sha256sum -c -\n\nENV JENKINS_UC https://updates.jenkins.io\nENV JENKINS_UC_EXPERIMENTAL=https://updates.jenkins.io/experimental\nRUN chown -R ${user} \"$JENKINS_HOME\" /usr/share/jenkins/ref\n\n# for main web interface:\nEXPOSE ${http_port}\n\n# will be used by attached slave agents:\nEXPOSE ${agent_port}\n\nENV COPY_REFERENCE_FILE_LOG $JENKINS_HOME/copy_reference_file.log\n\nUSER ${user}\n\nCOPY jenkins-support /usr/local/bin/jenkins-support\nCOPY jenkins.sh /usr/local/bin/jenkins.sh\nCOPY tini-shim.sh /bin/tini\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/usr/local/bin/jenkins.sh\"]\n\n# from a derived Dockerfile, can use `RUN plugins.sh active.txt` to setup /usr/share/jenkins/ref/plugins from a support bundle\nCOPY plugins.sh /usr/local/bin/plugins.sh\nCOPY install-plugins.sh /usr/local/bin/install-plugins.sh\nUSER root\nWORKDIR /tmp\n\n# Environment variables used throughout this Dockerfile\n#\n# $JENKINS_HOME     will be the final destination that Jenkins will use as its\n#                   data directory. This cannot be populated before Marathon\n#                   has a chance to create the host-container volume mapping.\n#\nENV JENKINS_FOLDER /usr/share/jenkins\n\n# Build Args\nARG BLUEOCEAN_VERSION=latest\nARG JENKINS_STAGING=/usr/share/jenkins/ref/\nARG CURL_RETRY=20\nARG CURL_RETRY_MAX_TIME=900\n\n# install dependencies\nRUN \\\n    apk update \\\n    && apk add --no-cache \\\n       python \\\n       jq \\\n       git \\\n       bzip2 \\\n       openssh-client \\\n       unzip \\\n       zip\n\n# Override the default property for DNS lookup caching\nRUN echo 'networkaddress.cache.ttl=60' >> ${JAVA_HOME}/jre/lib/security/java.security\n\nRUN mkdir -p \"$JENKINS_HOME\" \"${JENKINS_FOLDER}/war\"\n\n# jenkins setup\nCOPY conf/jenkins/config.xml \"${JENKINS_STAGING}/config.xml\"\n#COPY conf/jenkins/jenkins.model.JenkinsLocationConfiguration.xml \"${JENKINS_STAGING}/jenkins.model.JenkinsLocationConfiguration.xml\"\n#COPY conf/jenkins/nodeMonitors.xml \"${JENKINS_STAGING}/nodeMonitors.xml\"\n#COPY conf/jenkins/hudson.model.UpdateCenter.xml \"${JENKINS_HOME}/hudson.model.UpdateCenter.xml\"\n# lets configure Jenkins with some defaults\n#COPY config/*.xml /usr/share/jenkins/ref/\n\n# add plugins\nRUN /usr/local/bin/install-plugins.sh       \\\n  blueocean-autofavorite:latest             \\\n  blueocean-commons:${BLUEOCEAN_VERSION}    \\\n  blueocean-config:${BLUEOCEAN_VERSION}     \\\n  blueocean-dashboard:${BLUEOCEAN_VERSION}  \\\n  blueocean-display-url:latest              \\\n  blueocean-events:${BLUEOCEAN_VERSION}     \\\n  blueocean-git-pipeline:${BLUEOCEAN_VERSION}          \\\n  blueocean-github-pipeline:${BLUEOCEAN_VERSION}       \\\n  blueocean-i18n:${BLUEOCEAN_VERSION}       \\\n  blueocean-jwt:${BLUEOCEAN_VERSION}        \\\n  blueocean-personalization:${BLUEOCEAN_VERSION}    \\\n  blueocean-pipeline-api-impl:${BLUEOCEAN_VERSION}  \\\n  blueocean-pipeline-editor:${BLUEOCEAN_VERSION}           \\\n  blueocean-pipeline-scm-api:${BLUEOCEAN_VERSION}   \\\n  blueocean-rest-impl:${BLUEOCEAN_VERSION}  \\\n  blueocean-rest:${BLUEOCEAN_VERSION}       \\\n  blueocean-web:${BLUEOCEAN_VERSION}        \\\n  blueocean:${BLUEOCEAN_VERSION}            \\\n  ace-editor:latest              \\\n  android-emulator:latest        \\\n  android-lint:latest            \\\n  ant:latest                     \\\n  ansible:latest                 \\\n  ansicolor:latest               \\\n  antisamy-markup-formatter:latest \\\n  artifactory:latest             \\\n  audit-trail:latest             \\\n  authentication-tokens:latest   \\\n  azure-credentials:latest       \\\n  azure-vm-agents:latest         \\\n  bouncycastle-api:latest        \\\n  branch-api:latest              \\\n  build-failure-analyzer:latest  \\\n  build-name-setter:latest       \\\n  build-pipeline-plugin:latest   \\\n  build-timeout:latest           \\\n  build-token-root:latest        \\\n  cloudbees-folder:latest        \\\n  credentials:latest             \\\n  credentials-binding:latest     \\\n  cloverphp:latest               \\\n  conditional-buildstep:latest   \\\n  config-file-provider:latest    \\\n  copyartifact:latest            \\\n  cvs:latest                     \\\n  dashboard-view:latest          \\\n  delivery-pipeline-plugin:latest \\\n  description-setter:latest      \\\n  dingding-notifications:latest  \\\n  display-url-api:latest         \\\n  docker-commons:latest          \\\n  docker-build-publish:latest    \\\n  docker-workflow:latest         \\\n  durable-task:latest            \\\n  ec2:latest                     \\\n  email-ext:latest               \\\n  embeddable-build-status:latest \\\n  external-monitor-job:latest    \\\n  favorite:latest                \\\n  ghprb:latest                   \\\n  git:latest                     \\\n  git-client:latest              \\\n  git-changelog:latest           \\\n  git-server:latest              \\\n  github:latest                  \\\n  github-api:latest              \\\n  github-branch-source:latest    \\\n  github-issues:latest           \\\n  github-oauth:latest            \\\n  github-organization-folder:latest \\\n  github-pullrequest:latest      \\\n  github-pr-coverage-status:latest \\\n  gitlab:latest                  \\\n  gitlab-hook:latest             \\\n  gitlab-merge-request-jenkins:latest \\\n  gitlab-oauth:latest            \\\n  gitlab-plugin:latest           \\\n  gradle:latest                  \\\n  gravatar:latest                \\\n  greenballs:latest              \\\n  handlebars:latest              \\\n  icon-shim:latest               \\\n  ivy:latest                     \\\n  jackson2-api:latest            \\\n  javadoc:latest                 \\\n  jenkins-multijob-plugin:latest \\\n  job-dsl:latest                 \\\n  jquery:latest                  \\\n  junit:latest                   \\\n  kerberos-sso:latest            \\\n  kpp-management-plugin:latest   \\\n  kubernetes:latest              \\\n  kubernetes-ci:latest           \\\n  kubernetes-cd:latest           \\\n  ldap:latest                    \\\n  mailer:latest                  \\\n  mapdb-api:latest               \\\n  marathon:latest                \\\n  matrix-auth:latest             \\\n  matrix-project:latest          \\\n  maven-plugin:latest            \\\n  mercurial:latest               \\\n  mesos:latest                   \\\n  metrics:latest                 \\\n  momentjs:latest                \\\n  monitoring:latest              \\\n  msbuild:latest                 \\\n  nant:latest                    \\\n  node-iterator-api:latest       \\\n  oauth-credentials:latest       \\\n  oic-auth:latest                \\\n  openshift-login:latest         \\\n  pam-auth:latest                \\\n  parameterized-trigger:latest   \\\n  performance:latest             \\\n  pipeline-build-step:latest     \\\n  pipeline-github-lib:latest     \\\n  pipeline-githubnotify-step:latest \\\n  pipeline-graph-analysis:latest \\\n  pipeline-input-step:latest     \\\n  pipeline-milestone-step:latest \\\n  pipeline-model-api:latest      \\\n  pipeline-model-definition:latest \\\n  pipeline-model-extensions:latest \\\n  pipeline-rest-api:latest       \\\n  pipeline-stage-step:latest     \\\n  pipeline-stage-tags-metadata:latest \\\n  pipeline-stage-view:latest     \\ \n  pipeline-utility-steps:latest  \\\n  plain-credentials:latest       \\\n  postbuildscript:latest         \\\n  publish-over-cifs:latest       \\\n  publish-over-ftp:latest        \\\n  publish-over-ssh:latest        \\\n  pubsub-light:latest            \\\n  puppet:latest                  \\ \n  rebuild:latest                 \\\n  resource-disposer:latest       \\\n  role-strategy:latest           \\\n  run-condition:latest           \\\n  s3:latest                      \\\n  saferestart:latest             \\\n  saml:latest                    \\\n  saltstack:latest               \\\n  scm-api:latest                 \\\n  script-security:latest         \\\n  sse-gateway:latest             \\\n  ssh-agent:latest               \\\n  ssh-credentials:latest         \\\n  ssh-slaves:latest              \\\n  ssh2easy:latest                \\\n  slave-setup:latest             \\\n  structs:latest                 \\\n  subversion:latest              \\\n  timestamper:latest             \\\n  token-macro:latest             \\\n  translation:latest             \\\n  uno-choice:latest              \\\n  url-auth-sso:latest            \\\n  variant:latest                 \\\n  view-job-filters:latest        \\\n  windows-slaves:latest          \\\n  workflow-aggregator:latest     \\\n  workflow-api:latest            \\\n  workflow-basic-steps:latest    \\\n  workflow-cps:latest            \\\n  workflow-cps-global-lib:latest \\\n  workflow-durable-task-step:latest \\\n  workflow-job:latest            \\\n  workflow-multibranch:latest    \\\n  workflow-scm-step:latest       \\\n  workflow-step-api:latest       \\\n  workflow-support:latest        \\\n  ws-cleanup:latest\n\n# copy custom built plugins\n#COPY plugins/*.hpi /usr/share/jenkins/ref/plugins/\n\n# so we can use jenkins cli\n#COPY config/jenkins.properties /usr/share/jenkins/ref/\n\n# disable first-run wizard\nRUN echo 2.0 > /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state\n\n# remove executors in master\nCOPY src/main/docker/master-executors.groovy /usr/share/jenkins/ref/init.groovy.d/\n\n# ENV JAVA_OPTS=\"-Djava.util.logging.config.file=/var/jenkins_home/log.properties\"\nENV JAVA_OPTS=\"-server -Djava.awt.headless=true -XX:MetaspaceSize=128m \\\n         -XX:MaxMetaspaceSize=512m -XX:ReservedCodeCacheSize=240M \\\n         -XX:MaxRAMFraction=2 -XshowSettings:vm -XX:+AggressiveOpts \\\n         -XX:-UseBiasedLocking -XX:+UseFastAccessorMethods -XX:+UnlockExperimentalVMOptions \\\n         -XX:+UseCGroupMemoryLimitForHeap -XX:-UseLargePages -XX:+UseG1GC \\\n         -XX:SoftRefLRUPolicyMSPerMB=0 -XX:+DisableExplicitGC -XX:G1ReservePercent=25 \\\n         -XX:G1NewSizePercent=10 -XX:G1MaxNewSizePercent=25 -XX:MaxGCPauseMillis=20 \\\n         -XX:-OmitStackTraceInFastThrow -XX:+ParallelRefProcEnabled -XX:ParallelGCThreads=8 \\\n         -XX:MaxTenuringThreshold=1 -XX:G1HeapWastePercent=10 -XX:SurvivorRatio=8 \\\n         -XX:G1MixedGCCountTarget=16 -XX:G1MixedGCLiveThresholdPercent=90 \\\n         -XX:InitiatingHeapOccupancyPercent=35 -XX:G1HeapRegionSize=32m \\\n         -XX:-ResizePLAB -Djenkins.install.runSetupWizard=false -Dhudson.udp=-1 \\\n         -Dhudson.DNSMultiCast.disabled=true\"\nENV JENKINS_OPTS=\"--webroot=${JENKINS_FOLDER}/war --httpListenAddress=0.0.0.0\"\n"
}