{
  "startTime": 1674239955926,
  "endTime": 1674239956584,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 7,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 7,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 7,
        "columnEnd": 106
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 7,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.6\n\nLABEL maintainer=\"mritd <mritd@linux.com>\"\n\nENV NGINX_VERSION 1.11.8\nENV LUAJIT_VERSION 2.0.4\nENV LUAJIT_MAIN_VERSION 2.0\nENV LUAJIT_LIB /usr/local/lib\nENV LUAJIT_INC /usr/local/include/luajit-$LUAJIT_MAIN_VERSION\nENV NGINX_LUA_MODULE_VERSION 0.10.7\n\nRUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n    && CONFIG=\"\\\n        --prefix=/etc/nginx \\\n        --sbin-path=/usr/sbin/nginx \\\n        --modules-path=/usr/lib/nginx/modules \\\n        --conf-path=/etc/nginx/nginx.conf \\\n        --error-log-path=/var/log/nginx/error.log \\\n        --http-log-path=/var/log/nginx/access.log \\\n        --pid-path=/var/run/nginx.pid \\\n        --lock-path=/var/run/nginx.lock \\\n        --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n        --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n        --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n        --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n        --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n        --user=nginx \\\n        --group=nginx \\\n        --with-http_ssl_module \\\n        --with-http_realip_module \\\n        --with-http_addition_module \\\n        --with-http_sub_module \\\n        --with-http_dav_module \\\n        --with-http_flv_module \\\n        --with-http_mp4_module \\\n        --with-http_gunzip_module \\\n        --with-http_gzip_static_module \\\n        --with-http_random_index_module \\\n        --with-http_secure_link_module \\\n        --with-http_stub_status_module \\\n        --with-http_auth_request_module \\\n        --with-http_xslt_module=dynamic \\\n        --with-http_image_filter_module=dynamic \\\n        --with-http_geoip_module=dynamic \\\n        --with-http_perl_module=dynamic \\\n        --with-threads \\\n        --with-stream \\\n        --with-stream_ssl_module \\\n        --with-stream_ssl_preread_module \\\n        --with-stream_realip_module \\\n        --with-stream_geoip_module=dynamic \\\n        --with-http_slice_module \\\n        --with-mail \\\n        --with-mail_ssl_module \\\n        --with-compat \\\n        --with-file-aio \\\n        --with-http_v2_module \\\n        --with-ld-opt=-Wl,-rpath,$LUAJIT_LIB \\\n        --add-module=/usr/src/ngx_http_google_filter_module \\\n        --add-module=/usr/src/ngx_http_substitutions_filter_module \\\n        --add-module=/usr/src/lua-nginx-module-$NGINX_LUA_MODULE_VERSION \\\n    \" \\\n    && addgroup -S nginx \\\n    && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \\\n    && apk add --no-cache --virtual .build-deps \\\n        gcc \\\n        libc-dev \\\n        make \\\n        openssl-dev \\\n        pcre-dev \\\n        zlib-dev \\\n        linux-headers \\\n        curl \\\n        gnupg \\\n        libxslt-dev \\\n        gd-dev \\\n        geoip-dev \\\n        perl-dev \\\n        git \\\n        python \\\n    && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n    && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n    && curl -fSL https://luajit.org/download/LuaJIT-$LUAJIT_VERSION.tar.gz -o LuaJIT-$LUAJIT_VERSION.tar.gz \\\n    && curl -fSL https://github.com/openresty/lua-nginx-module/archive/v$NGINX_LUA_MODULE_VERSION.tar.gz -o lua-nginx-module-v$NGINX_LUA_MODULE_VERSION.tar.gz \\\n    && git clone https://github.com/cuber/ngx_http_google_filter_module /usr/src/ngx_http_google_filter_module \\\n    && git clone https://github.com/yaoweibin/ngx_http_substitutions_filter_module /usr/src/ngx_http_substitutions_filter_module \\\n    && git clone https://github.com/alexazhou/VeryNginx.git /usr/src/VeryNginx \\\n    && tar -zxC /usr/src -f lua-nginx-module-v$NGINX_LUA_MODULE_VERSION.tar.gz \\\n    && tar -zxC /usr/src -f LuaJIT-$LUAJIT_VERSION.tar.gz \\\n    && rm lua-nginx-module-v$NGINX_LUA_MODULE_VERSION.tar.gz \\\n    && rm LuaJIT-$LUAJIT_VERSION.tar.gz \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEYS\" \\\n    && gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n    && rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \\\n    && tar -zxC /usr/src -f nginx.tar.gz \\\n    && rm nginx.tar.gz \\\n    && cd /usr/src/VeryNginx \\\n    && python install.py install verynginx \\\n    && cd /usr/src/LuaJIT-$LUAJIT_VERSION \\\n    && make -j$(getconf _NPROCESSORS_ONLN) \\\n    && make install \\\n    && ln -s /usr/local/lib/libluajit-5.1.so.$LUAJIT_VERSION /usr/local/lib/libluajit-5.1.so.2 \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && cd /usr/src/nginx-$NGINX_VERSION \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $CONFIG --with-debug \\\n    && make -j$(getconf _NPROCESSORS_ONLN) \\\n    && mv objs/nginx objs/nginx-debug \\\n    && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n    && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n    && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \\\n    && mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so \\\n    && mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $CONFIG \\\n    && make -j$(getconf _NPROCESSORS_ONLN) \\\n    && make install \\\n    && rm -rf /etc/nginx/html/ \\\n    && mkdir /etc/nginx/conf.d/ \\\n    && mkdir -p /usr/share/nginx/html/ \\\n    && install -m644 html/index.html /usr/share/nginx/html/ \\\n    && install -m644 html/50x.html /usr/share/nginx/html/ \\\n    && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n    && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n    && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n    && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \\\n    && install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so \\\n    && install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \\\n    && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n    && strip /usr/sbin/nginx* \\\n    && strip /usr/lib/nginx/modules/*.so \\\n    && rm -rf /usr/src/nginx-$NGINX_VERSION \\\n    && rm -rf /usr/src/ngx_http_google_filter_module \\\n    && rm -rf /usr/src/ngx_http_substitutions_filter_module \\\n    && rm -rf /usr/src/VeryNginx \\\n    && rm -rf /usr/src/LuaJIT-$LUAJIT_VERSION \\\n    && rm -rf /usr/src/lua-nginx-module-$NGINX_LUA_MODULE_VERSION \\\n\n    # Bring in gettext so we can get `envsubst`, then throw\n    # the rest away. To do this, we need to install `gettext`\n    # then move `envsubst` out of the way so `gettext` can\n    # be deleted completely, then move `envsubst` back.\n    && apk add --no-cache --virtual .gettext gettext \\\n    && mv /usr/bin/envsubst /tmp/ \\\n\n    && runDeps=\"$( \\\n        scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \\\n            | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n            | sort -u \\\n            | xargs -r apk info --installed \\\n            | sort -u \\\n    )\" \\\n    && apk add --no-cache --virtual .nginx-rundeps $runDeps libgcc \\\n    && apk del .build-deps \\\n    && apk del .gettext \\\n    && mv /tmp/envsubst /usr/local/bin/ \\\n\n    # forward request and error logs to docker log collector\n    && ln -sf /dev/stdout /var/log/nginx/access.log \\\n    && ln -sf /dev/stderr /var/log/nginx/error.log\n\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY nginx.vh.default.conf /etc/nginx/conf.d/default.conf\n\nEXPOSE 80 443\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}