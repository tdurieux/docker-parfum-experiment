{
  "startTime": 1674241244813,
  "endTime": 1674241245029,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 17,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# build:\n#   docker build --force-rm -t qas/boilerplate-server-node-swagger-api .\n# run:\n#   docker run --rm --it --env-file=path/to/.env --name boilerplate-server-node-swagger-api -p 80:7071 qas/boilerplate-server-node-swagger-api\n#\n\n### BASE\nFROM node:8.9.4-alpine AS base\nLABEL maintainer \"Qasim Soomro <qasim@soomro.com>\"\n# Set the working directory\nWORKDIR /app\n# Copy project specification and dependencies lock files\nCOPY package.json tsconfig.json yarn.lock tsoa.json ./\n# Install yarn\nRUN apk --no-cache add yarn\n\n\n### DEPENDENCIES\nFROM base AS dependencies\n# Install Node.js dependencies (only production)\nRUN yarn --production\n# Copy production dependencies aside\nRUN cp -R node_modules /tmp/node_modules\n\n\n### TEST\nFROM dependencies AS test\n# Copy app sources\nCOPY . .\n# Install ALL Node.js dependencies\nRUN yarn\n# Build Swagger and routes\nRUN yarn swagger-gen && routes-gen\n# Run linters and tests\nRUN yarn lint && yarn test && yarn cache clean;\n\n\n### BUILD\nFROM base as build\n# Copy app sources\nCOPY . .\n# Install ALL Node.js dependencies\nRUN yarn\n# Run build\nRUN yarn build\n# Copy production distribution source aside\nRUN cp -R build /tmp/build\n\n\n### RELEASE\nFROM base AS release\n# Copy production dependencies\nCOPY --from=dependencies /tmp/node_modules ./node_modules\n# Copy app sources\nCOPY --from=build /tmp/build ./build\n# Expose application port\nEXPOSE 7070\n# In production environment\nENV NODE_ENV production\n# Run\n# TODO: Replace to PM2 after fixing PM2 memory leak bug\n# CMD yarn run pm2-runtime --env production --raw process.json | yarn run bunyan\nCMD yarn start\n"
}