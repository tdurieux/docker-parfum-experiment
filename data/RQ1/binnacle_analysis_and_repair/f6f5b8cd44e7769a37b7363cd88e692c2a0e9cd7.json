{
  "startTime": 1674243523083,
  "endTime": 1674243523417,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM     ubuntu:16.04\nLABEL maintainer=\"benoit [dot] lavenier [at] e-is [dot] pro\"\n\nENV DEBIAN_FRONTEND=noninteractive \\\n    ANDROID_HOME=/opt/android-sdk-linux \\\n    NODE_VERSION=5.12.0 \\\n    NPM_VERSION=3.8.6 \\\n    IONIC_VERSION=1.7.16 \\\n    BOWER_VERSION=1.8.0 \\\n    CORDOVA_VERSION=6.5.0 \\\n    GRADLE_VERSION=4.1 \\\n    NDK_VERSION=r10e\n\n# Install basics\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y git wget curl unzip build-essential ruby ruby-dev ruby-ffi gcc make && \\\n    curl -f --retry 3 -SLO \"http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" && \\\n    tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 && \\\n    rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" && \\\n    npm install -g npm@\"$NPM_VERSION\" && \\\n    npm install -g bower@\"$BOWER_VERSION\" cordova@\"$CORDOVA_VERSION\" ionic@\"$IONIC_VERSION\" && \\\n    npm cache clear --force && rm -rf /var/lib/apt/lists/*;\n\n# install python-software-properties (so you can do add-apt-repository)\nRUN apt-get update && apt-get install --no-install-recommends -y -q python-software-properties software-properties-common && \\\n    add-apt-repository ppa:webupd8team/java -y && \\\n    echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections && \\\n    apt-get update && apt-get -y --no-install-recommends install oracle-java8-installer && rm -rf /var/lib/apt/lists/*;\n\n#ANDROID STUFF\nRUN echo ANDROID_HOME=\"${ANDROID_HOME}\" >> /etc/environment && \\\n    dpkg --add-architecture i386 && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y --force-yes expect ant wget zipalign libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5 lib32z1 qemu-kvm kmod && \\\n    apt-get clean && \\\n    apt-get autoclean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install Android SDK\nRUN cd /opt && \\\n    wget --output-document=android-sdk.tgz --quiet https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz && \\\n    tar xzf android-sdk.tgz && \\\n    rm -f android-sdk.tgz && \\\n    chown -R root. /opt\n\nRUN cd /opt/ && \\\n  wget --output-document=android-ndk.zip --quiet  https://dl.google.com/android/repository/android-ndk-$NDK_VERSION-linux-x86_64.zip && \\\n  unzip android-ndk.zip && \\\n  rm android-ndk.zip && \\\n  chown -R root. /opt\n\n# Install Gradle\nRUN wget https://services.gradle.org/distributions/gradle-\"$GRADLE_VERSION\"-bin.zip && \\\n    mkdir /opt/gradle && \\\n    unzip -d /opt/gradle gradle-\"$GRADLE_VERSION\"-bin.zip && \\\n    rm -rf gradle-\"$GRADLE_VERSION\"-bin.zip\n\n# Setup environment\n\nENV PATH ${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:/opt/tools:/opt/gradle/gradle-\"$GRADLE_VERSION\"/bin\n\n# Install sdk elements\nCOPY resources/android/build/tools /opt/tools\nRUN chmod u+x /opt/tools/*.sh\nRUN [\"/opt/tools/android-accept-licenses.sh\", \"android update sdk --all --no-ui --filter platform-tools,tools,build-tools-26.0.0,android-26,build-tools-25.0.0,android-25,extra-android-support,extra-android-m2repository,extra-google-m2repository\"]\nRUN unzip ${ANDROID_HOME}/temp/*.zip -d ${ANDROID_HOME}\n\n\n# Install source code\n#RUN git config --global user.email \"user.name@domain.com\" && \\\n#    git config --global user.name \"User Name\" && \\\nRUN git clone git@git.duniter.org:clients/cesium-grp/cesium.git && \\\n    cd cesium && \\\n    npm install && npm cache clean --force;\n\n# Restore cordova platforms\nRUN cd cesium && \\\n    ionic state restore\n\n# TODO: Test First Build so that it will be faster later\n##  ionic cordova build android --prod --no-interactive --release\n\nWORKDIR cesium\nEXPOSE 8100 35729\nCMD [\"ionic\", \"serve\"]\n"
}