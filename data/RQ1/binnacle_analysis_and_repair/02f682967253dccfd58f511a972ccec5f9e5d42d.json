{
  "startTime": 1674244206877,
  "endTime": 1674244207062,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##############################################################################\n# keylime TPM 2.0 Dockerfile\n#\n# This file is for automatic test running of Keylime.\n# It is not recommended for use beyond testing scenarios.\n##############################################################################\n\nFROM fedora:29\nMAINTAINER Luke Hinds <lhinds@redhat.com>\nLABEL version=\"3.0.0\" description=\"Keylime - Bootstrapping and Maintaining Trust in the Cloud\"\n\nENV container docker\n# environment variables\nARG BRANCH=master\n\nENV container docker\nENV HOME /root\nENV KEYLIME_HOME ${HOME}/keylime\nENV TPM_HOME ${HOME}/swtpm2\nENV TPM2_TSS ${HOME}/tpm2-tss\nENV TPM2_TOOLS ${HOME}/tpm2-tools\nENV TPM2_ABRMD ${HOME}/tpm2-abrmd\nRUN useradd --system --user-group tss\n\n# Packaged dependencies\nRUN dnf -y update\nRUN dnf -y install dnf-plugins-core --allowerasing\nRUN dnf -y builddep tpm2-tss\nRUN dnf -y builddep tpm2-tools\nRUN dnf -y install git \\\n           dbus-devel \\\n           golang \\\n           openssl-devel \\\n           python-devel \\\n           python-pip \\\n           python-setuptools \\\n           python-tornado \\\n           python-virtualenv \\\n           python2-zmq \\\n           python-yaml \\\n           procps \\\n           libtool \\\n           tpm2-abrmd \\\n           gcc \\\n           make \\\n           automake \\\n           m2crypto \\\n           redhat-rpm-config \\\n           libselinux-python \\\n           gnulib \\\n           glib2-devel \\\n           glib2-static \\\n           uthash-devel \\\n           wget \\\n           which\n\nRUN dnf clean all\n\nRUN cd \"/lib/systemd/system/sysinit.target.wants/\"; \\\n    for i in *; do [ $i = systemd-tmpfiles-setup.service ] || rm -f \"$i\"; done\n\nRUN rm -f /lib/systemd/system/multi-user.target.wants/* \\\n    /etc/systemd/system/*.wants/* \\\n    /lib/systemd/system/local-fs.target.wants/* \\\n    /lib/systemd/system/sockets.target.wants/*udev* \\\n    /lib/systemd/system/sockets.target.wants/*initctl* \\\n    /lib/systemd/system/basic.target.wants/* \\\n    /lib/systemd/system/anaconda.target.wants/*\n\nRUN systemctl set-default multi-user.target\nENV init /lib/systemd/systemd\n\n# TPM-TSS\n\nRUN git clone https://github.com/tpm2-software/tpm2-tss.git ${TPM2_TSS}\nWORKDIR ${TPM2_TSS}\nRUN ./bootstrap\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --disable-doxygen-doc\nRUN make\nRUN make install\n\n# TPM2-TOOLS\nRUN git clone https://github.com/keylime/tpm2-tools.git ${TPM2_TOOLS}\nWORKDIR ${TPM2_TOOLS}\nRUN ./bootstrap\nRUN SAPI_CFLAGS=' ' SAPI_LIBS='-ltss2-sys -L/usr/lib/' ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local\nRUN make\nRUN make install\n\n# Enable TPM-ABRMD service\nRUN git clone https://github.com/tpm2-software/tpm2-abrmd.git ${TPM2_ABRMD}\nWORKDIR ${TPM2_ABRMD}\nRUN ./bootstrap\nRUN TSS2_SYS_CFLAGS=' ' TSS2_SYS_LIBS='-ltss2-sys -L/usr/lib/' ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr\nRUN make\nRUN make install\nRUN ldconfig\n\n# Build and install TPM 2.0 simulator\nWORKDIR ${TPM_HOME}\nRUN wget --content-disposition https://sourceforge.net/projects/ibmswtpm2/files/ibmtpm1119.tar.gz/download\nRUN tar -zxvf ibmtpm1119.tar.gz && rm ibmtpm1119.tar.gz\nWORKDIR ${TPM_HOME}/src\nRUN make\nRUN install -c tpm_server /usr/local/bin/tpm_server\n\nVOLUME [ \"/sys/fs/cgroup\" ]\n\nENTRYPOINT [\"/lib/systemd/systemd\"]\n"
}