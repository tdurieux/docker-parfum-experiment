{
  "startTime": 1674243678828,
  "endTime": 1674243679048,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 148
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openshift/base-centos7\n\nMAINTAINER Ben Browning <bbrownin@redhat.com>\n\nEXPOSE 8080\n\nLABEL io.openshift.s2i.destination=\"/opt/s2i/destination\"\n\nENV APP_PATH=$HOME/app \\\n    ENV_PATH=$HOME/tmp/env \\\n    BUILD_PATH=$HOME/tmp/build \\\n    CACHE_PATH=$HOME/tmp/cache \\\n    BUILDPACK_PATH=$HOME/tmp/buildpacks \\\n    USER=1001 \\\n    PORT=8080\n\n# Install common packages useful for buildpacks\nRUN yum groupinstall -y \"Development Tools\"\nRUN yum install -y \\\n        java-1.7.0-openjdk \\\n        java-1.7.0-openjdk-headless \\\n        libffi-devel \\\n        libyaml-devel \\\n        ncurses-devel \\\n        openssl-libs \\\n        python-devel \\\n        readline-devel \\\n        ruby \\\n        ruby-devel \\\n        tcl-devel && rm -rf /var/cache/yum\n\n\n# Install Herokuish to detect and run buildpacks\nENV HEROKUISH_VERSION 0.3.10\nRUN curl -f --silent -L https://github.com/gliderlabs/herokuish/releases/download/v{$HEROKUISH_VERSION}/herokuish_${HEROKUISH_VERSION}_linux_x86_64.tgz | tar -xzC /bin \\\n    && ln -s /bin/herokuish /build \\\n    && ln -s /bin/herokuish /start \\\n    && ln -s /bin/herokuish /exec\n\n\n\n# CloudFoundry Java buildpack environment variables\nENV JAVA_BUILDPACK_VERSION=3.3.1 \\\n    OPENJDK_VERSION=1.8.0_60 \\\n    MEMORY_CALC_VERSION=2.0.0_RELEASE \\\n    MEMORY_LIMIT=2G \\\n    TMPDIR=$HOME/tmp\nENV JBP_CONFIG_OPEN_JDK_JRE=\"{jre: {version: ${OPENJDK_VERSION} }, memory_calculator: {version: ${MEMORY_CALC_VERSION} }}\"\n\n# Install the CloudFoundry Java buildpack\nRUN mkdir -p $BUILDPACK_PATH/java-buildpack \\\n    && wget -nv -O /tmp/java-buildpack.zip \"https://github.com/cloudfoundry/java-buildpack/releases/download/v${JAVA_BUILDPACK_VERSION}/java-buildpack-offline-v${JAVA_BUILDPACK_VERSION}.zip\" \\\n    && unzip /tmp/java-buildpack.zip -d $BUILDPACK_PATH/java-buildpack/\n\n# Make an OpenJDK build available for CentOS7\nRUN wget -nv -O $BUILDPACK_PATH/java-buildpack/resources/cache/https%3A%2F%2Fdownload.run.pivotal.io%2Fopenjdk%2Fcentos6%2Fx86_64%2Fopenjdk-${OPENJDK_VERSION}.tar.gz.cached \"https://download.run.pivotal.io/openjdk/centos6/x86_64/openjdk-${OPENJDK_VERSION}.tar.gz\" \\\n    && echo -e \"---\\n${OPENJDK_VERSION}: https://download.run.pivotal.io/openjdk/centos6/x86_64/openjdk-${OPENJDK_VERSION}.tar.gz\" > $BUILDPACK_PATH/java-buildpack/resources/cache/https%3A%2F%2Fdownload.run.pivotal.io%2Fopenjdk%2Fcentos7%2Fx86_64%2Findex.yml.cached\n\n# Make a memory-calculator tool available for CentOS7\nRUN wget -nv -O $BUILDPACK_PATH/java-buildpack/resources/cache/https%3A%2F%2Fdownload.run.pivotal.io%2Fmemory-calculator%2Fcentos6%2Fx86_64%2Fmemory-calculator-${MEMORY_CALC_VERSION}.tar.gz.cached \"https://download.run.pivotal.io/memory-calculator/centos6/x86_64/memory-calculator-${MEMORY_CALC_VERSION}.tar.gz\" \\\n    && echo -e \"---\\n${MEMORY_CALC_VERSION}: https://download.run.pivotal.io/memory-calculator/centos6/x86_64/memory-calculator-${MEMORY_CALC_VERSION}.tar.gz\" > $BUILDPACK_PATH/java-buildpack/resources/cache/https%3A%2F%2Fdownload.run.pivotal.io%2Fmemory-calculator%2Fcentos7%2Fx86_64%2Findex.yml.cached\n\n\n\n# CloudFoundry Node buildpack environment variables\nENV NODE_BUILDPACK_VERSION=1.5.11 \\\n    CF_STACK=cflinuxfs2\n\n# Install the CloudFoundry NodeJS buildpack\nRUN mkdir -p $BUILDPACK_PATH/node-buildpack \\\n    && wget -nv -O /tmp/node-buildpack.zip \"https://github.com/cloudfoundry/nodejs-buildpack/releases/download/v${NODE_BUILDPACK_VERSION}/nodejs_buildpack-cached-v${NODE_BUILDPACK_VERSION}.zip\" \\\n    && unzip /tmp/node-buildpack.zip -d $BUILDPACK_PATH/node-buildpack/\n\n\n# Copy our OpenShift S2I scripts\nRUN mkdir -p $STI_SCRIPTS_PATH\nCOPY bin/assemble bin/run bin/vcap_env /${STI_SCRIPTS_PATH}/\n\n# Tie up loose ends\nRUN mkdir -p /opt/s2i/destination/src \\\n    && chmod -R go+rw /opt/s2i/destination \\\n    && chmod +x $STI_SCRIPTS_PATH/* \\\n    && mkdir -p $APP_PATH \\\n    && chown -R $USER:$USER $APP_PATH \\\n    && chmod -R go+rw $APP_PATH \\\n    && mkdir -p $HOME/tmp \\\n    && chown -R $USER:$USER $HOME/tmp \\\n    && chmod -R go+rw $HOME/tmp\n\n# Herokuish is already running as an unprivileged user so stub out\n# any usermod commands it uses.\n# TODO: Long-term, fork Herokuish to work natively on CentOS / RHEL\nRUN mkdir -p $HOME/bin \\\n    && echo '' > $HOME/bin/usermod \\\n    && echo '' > $HOME/bin/chown \\\n    && echo -e 'shift\\neval \"$@\"' > $HOME/bin/setuidgid \\\n    && chmod +x $HOME/bin/*\n\n# Uncomment to enable debug logging for buildpacks\n# ENV TRACE=1 \\\n#     JBP_LOG_LEVEL=DEBUG\n\nUSER $USER\n"
}