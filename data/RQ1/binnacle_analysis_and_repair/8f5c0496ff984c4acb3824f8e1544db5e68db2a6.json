{
  "startTime": 1674243417544,
  "endTime": 1674243417664,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\n\nENV VERSION 5.0.0\nENV FILENAME_VERSION 5.0.0-linux-x86_64\nENV URL http://staging.elastic.co/5.0.0-ccd69424/downloads/kibana/kibana-${FILENAME_VERSION}.tar.gz\n\n# Cache variable can be set during building to invalidate the build cache with `--build-arg CACHE=$(date +%s) .`\nARG CACHE=1\n\n# add our user and group first to make sure their IDs get assigned consistently\nRUN groupadd -r kibana && useradd -r -m -g kibana kibana\n\nRUN apt-get update && apt-get install -y ca-certificates curl --no-install-recommends && rm -rf /var/lib/apt/lists/*\n\n# grab gosu for easy step-down from root\nRUN gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4\nRUN arch=\"$(dpkg --print-architecture)\" \\\n\t&& set -x \\\n\t&& curl -f -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/1.3/gosu-$arch\" \\\n\t&& curl -f -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/1.3/gosu-$arch.asc\" \\\n\t&& gpg --batch --verify /usr/local/bin/gosu.asc \\\n\t&& rm /usr/local/bin/gosu.asc \\\n\t&& chmod +x /usr/local/bin/gosu\n\nRUN set -x \\\n\t&& curl -fSL \"$URL?${CACHE}\" -o kibana.tar.gz \\\n\t&& mkdir -p /opt/kibana \\\n\t&& tar -xz --strip-components=1 -C /opt/kibana -f kibana.tar.gz \\\n\t&& chown -R kibana:kibana /opt/kibana \\\n\t&& rm kibana.tar.gz\n\nENV PATH /opt/kibana/bin:$PATH\n\nCOPY ./docker-entrypoint.sh /\n\nEXPOSE 5601\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"kibana\"]\n\n\n\n"
}