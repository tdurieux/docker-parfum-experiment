{
  "startTime": 1674238520340,
  "endTime": 1674238520775,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 62,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 42,
        "columnStart": 25,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 42,
        "columnStart": 25,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nENV release_name=xenial\nENV etcd_version=2.3.5\nENV redis_version=3.0.7\nENV ocaml_version=4.07.1+default-unsafe-string\n\n\n# force our apt to use look at mirrors (by prepending a mirrors line)\n# RUN sed 's@archive.ubuntu.com@ubuntu.mirror.atratoip.net@' -i /etc/apt/sources.list\nRUN sed -i \"1s;^;deb mirror://mirrors.ubuntu.com/mirrors.txt ${release_name}-updates main restricted universe multiverse\\n;\" /etc/apt/sources.list\nRUN sed -i \"1s;^;deb mirror://mirrors.ubuntu.com/mirrors.txt ${release_name}         main restricted universe multiverse\\n;\" /etc/apt/sources.list\nRUN apt-get -y update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        build-essential m4 apt-utils \\\n        libffi-dev libssl-dev \\\n        libbz2-dev \\\n        libgmp3-dev \\\n        libev-dev \\\n        libsnappy-dev \\\n        libxen-dev \\\n        help2man \\\n        pkg-config \\\n        time \\\n        aspcud \\\n        wget \\\n        curl \\\n        darcs \\\n        git \\\n        unzip \\\n        automake \\\n        python-dev \\\n        python-pip \\\n        debhelper \\\n        psmisc \\\n        sudo \\\n        libtool \\\n        iptables \\\n        net-tools \\\n        ncurses-dev \\\n        tzdata \\\n        librdmacm-dev \\\n        protobuf-compiler \\\n        socat && rm -rf /var/lib/apt/lists/*;\n\nARG HOST_UID\nRUN useradd jenkins -u $HOST_UID -g root --create-home\nRUN echo \"jenkins ALL=NOPASSWD: ALL\" >/etc/sudoers.d/jenkins\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip --disable-pip-version-check --no-cache-dir install fabric junit-xml nose simplejson python-etcd\n\n# Install etcd:\n\nRUN wget -q \\\n    https://github.com/coreos/etcd/releases/download/v${etcd_version}/etcd-v${etcd_version}-linux-amd64.tar.gz -O - \\\n    | tar zxf - \\\n    && cp etcd-v${etcd_version}-linux-amd64/etcd /usr/bin \\\n    && cp etcd-v${etcd_version}-linux-amd64/etcdctl /usr/bin \\\n    && rm -rf etcd-*\n\n# Install redis:\n\nRUN wget -q \\\n    https://download.redis.io/releases/redis-${redis_version}.tar.gz -O - \\\n    | tar zxf - \\\n    && make -j$(nproc 2>/dev/null || echo 1) -C redis-${redis_version} \\\n    && cp redis-${redis_version}/src/redis-server /usr/bin \\\n    && cp redis-${redis_version}/src/redis-cli /usr/bin \\\n    && rm -rf redis-${redis_version}\n\nRUN wget https://github.com/ocaml/opam/releases/download/2.0.3/opam-2.0.3-x86_64-linux \\\n    && mv opam-2.0.3-x86_64-linux /usr/bin/opam \\\n    && chmod a+x /usr/bin/opam\n\nUSER jenkins\n\n\nENV OPAMROOT=/home/jenkins/OPAM\n\n# The special variable NO_PROXY contains host and port for accessing\n# the hosts SSH_AUTH_SOCK\nENV SSH_AUTH_SOCK /tmp/auth.sock\nRUN mkdir /home/jenkins/.ssh\nRUN echo \"\\nHost *\\n    StrictHostKeyChecking=no\" >> /home/jenkins/.ssh/config\n\nenv opam_env=\"opam config env --root=${OPAMROOT}\"\n\nRUN opam init --root ${OPAMROOT} --compiler=${ocaml_version} --disable-sandboxing\nADD opam.switch opam.switch\nADD opam-repository ovs-opam-repository\n\nRUN socat UNIX-LISTEN:${SSH_AUTH_SOCK},unlink-early,mode=777,fork TCP:${NO_PROXY} & \\\n    eval `${opam_env}` && \\\n    opam repo add ovs ovs-opam-repository && \\\n    opam update -v\n\nRUN socat UNIX-LISTEN:${SSH_AUTH_SOCK},unlink-early,mode=777,fork TCP:${NO_PROXY} & \\\n    eval `${opam_env}` && export OPAMROOT=${OPAMROOT} && \\\n    opam switch import opam.switch -y --strict\n\nRUN eval ${opam_env} && export OPAMROOT=${OPAMROOT} && \\\n    opam list && \\\n    opam switch export /home/jenkins/opam.switch.out && ls && \\\n    cat /home/jenkins/opam.switch.out\n\nRUN opam list && bash -c 'diff opam.switch <(opam switch export -)'\n\nENTRYPOINT [\"/home/jenkins/arakoon/docker/docker-entrypoint.sh\"]\n"
}