{
  "startTime": 1674234492382,
  "endTime": 1674234492609,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 72,
        "columnStart": 12,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 12,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM        ubuntu:14.04\n\nARG         BUILD_DATE\nARG         DEBIAN_FRONTEND=noninteractive\n\nLABEL       maintainer=\"Emmanuel Dyan <emmanueldyan@gmail.com>\"\nLABEL       org.label-schema.build-date=$BUILD_DATE\n\n# Set a default conf for apt install\nRUN echo 'apt::install-recommends \"false\";' > /etc/apt/apt.conf.d/no-install-recommends && \\\n            # Upgrade the system + Install all packages\n            apt-get update && \\\n            apt upgrade -y && \\\n            # Packages\n            apt install --no-install-recommends -y \\\n                iptables \\\n                # php5-adodb \\\n                php5-apcu \\\n                # php5-cgi \\\n                php5-cli \\\n                php5-curl \\\n                # php5-dbg \\\n                # php5-dev \\\n                # php5-enchant \\\n                # php5-exactimage\n                # php5-ffmpeg \\\n                php5-fpm \\\n                php5-gd \\\n                # php5-gdcm \\\n                # php5-gearman \\\n                php5-geoip \\\n                # php5-gmp \\\n                # php5-gnupg\n                php5-imagick \\\n                php5-imap \\\n                # php5-interbase \\\n                php5-intl \\\n                php5-json \\\n                # php5-lasso \\\n                php5-ldap \\\n                # php5-librdf\n                # php5-mapscript \\\n                php5-mcrypt \\\n                php5-memcache \\\n                php5-memcached \\\n                # php5-ming \\\n                # php5-mysql \\\n                php5-mysqlnd \\\n                # php5-odbc \\\n                php5-pgsql \\\n                # php5-pinba \\\n                # php5-ps \\\n                php5-pspell \\\n                # php5-radius \\\n                php5-readline \\\n                php5-recode \\\n                php5-redis \\\n                # php5-remctl \\\n                # php5-rrd \\\n                # php5-sasl \\\n                # php5-snmp \\\n                php5-sqlite \\\n                # php5-spplus \\\n                # php5-svn \\\n                # php5-sybase \\\n                # php5-tidy \\\n                # php5-tokyo-tyrant \\\n                # php5-vtkgdcm \\\n                # php5-xcache \\\n                php5-xdebug \\\n                php5-xmlrpc \\\n                php5-xsl \\\n                libssh2-php && \\\n            # Now Build\n            php5enmod imap mcrypt && \\\n            apt-get install --no-install-recommends -y build-essential pkg-config libssl-dev php5-dev && \\\n            pecl channel-update pecl.php.net && \\\n            pecl install xhprof-beta mongo && \\\n            echo \"extension=xhprof.so\" > /etc/php5/mods-available/xhprof.ini && \\\n            php5enmod xhprof && \\\n            echo \"extension=mongo.so\" > /etc/php5/mods-available/mongo.ini && \\\n            php5enmod mongo && \\\n            apt-get purge -y build-essential pkg-config libssl-dev php5-dev && \\\n            # Clean\n            apt-get autoremove -y && \\\n            apt-get autoclean && \\\n            apt-get clean && \\\n            find /root /tmp -mindepth 1 -delete && \\\n            rm -rf /build /var/lib/apt/lists/* /usr/share/man/* /usr/share/doc/* \\\n                   /var/cache/* /var/log/* /usr/share/php/docs /usr/share/php/tests\n\nCOPY        php-cli.ini    /etc/php5/cli/conf.d/30-custom-php.ini\nCOPY        php-fpm.ini    /etc/php5/fpm/conf.d/30-custom-php.ini\nCOPY        www.conf       /etc/php5/fpm/pool.d/\n\n\n# For custom Configuration that comes from outside (via a docker compose mount)\nRUN         mkdir /etc/php5/fpm/user-conf.d && \\\n            echo \"; Default empty file\" > /etc/php5/fpm/user-conf.d/example.conf && \\\n            # Global Logs\n            mkdir /var/log/php && \\\n            # Create home for www-data\n            mkdir /home/www-data && \\\n            chown www-data:www-data /home/www-data && \\\n            usermod -d /home/www-data www-data\n\nCOPY        run.sh     /run.sh\nRUN         chmod +x    /run.sh\n\nENV         ENVIRONMENT dev\nENV         FPM_UID 33\nENV         FPM_GID 33\n\nEXPOSE      9000\n\nCMD         [\"/run.sh\"]\n"
}