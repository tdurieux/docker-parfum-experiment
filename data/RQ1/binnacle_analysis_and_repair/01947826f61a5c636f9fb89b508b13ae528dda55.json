{
  "startTime": 1674251563824,
  "endTime": 1674251563994,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 35,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 27,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 34,
        "columnStart": 27,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM elixir:1.8.1\nMAINTAINER Chris McGrath <chris@chrismcg.com>\n\n# Important!  Update this no-op ENV variable when this Dockerfile\n# is updated with the current date. It will force refresh of all\n# of the base images and things like `apt-get update` won't be using\n# old cached versions when the Dockerfile is built.\nENV REFRESHED_AT=2019-04-06.1 \\\n  APP_ROOT=/opt/app \\\n  UID=1000 \\\n  GID=1000 \\\n  # Set this so that CTRL+G works properly\n  TERM=xterm\n\n# create default user with same UID/GID as on host\n# so can create files without problems\nRUN \\\n  useradd -u \"${UID}\" -G root -m default && \\\n  mkdir -p \"${APP_ROOT}\" && \\\n  chown -R \"${UID}:${GID}\" \"${APP_ROOT}\"\n\nRUN apt-get update -yqq && apt-get install -yqq --no-install-recommends \\\n  apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash -\n\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\n\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | \\\n  tee /etc/apt/sources.list.d/yarn.list\n\nRUN apt-get update -yqq && apt-get install -yqq --no-install-recommends \\\n  nodejs \\\n  yarn \\\n  inotify-tools && rm -rf /var/lib/apt/lists/*;\n\nUSER default\n\nRUN mix local.hex --force && mix local.rebar --force\n\nCOPY --chown=default:default mix.* \"${APP_ROOT}/\"\nWORKDIR \"${APP_ROOT}\"\nRUN mix deps.get && mix deps.compile\n\nCOPY --chown=default:default assets/package.json assets/yarn.lock \"${APP_ROOT}/assets/\"\nWORKDIR \"${APP_ROOT}/assets\"\nRUN ls -la \"${APP_ROOT}/assets\" && yarn install && yarn cache clean;\n\nCOPY --chown=default:default . \"${APP_ROOT}\"\n\nWORKDIR \"${APP_ROOT}\"\nCMD [\"mix\", \"phx.server\"]\n"
}