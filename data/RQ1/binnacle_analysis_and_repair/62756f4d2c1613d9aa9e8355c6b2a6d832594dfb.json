{
  "startTime": 1674244131028,
  "endTime": 1674244131197,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nENV TZ=America/Chicago\nRUN    ln --symbolic --no-dereference --force /usr/share/zoneinfo/$TZ /etc/localtime \\\n    && echo $TZ > /etc/timezone\n\nRUN apt update                                                               \\\n    && apt upgrade --yes \\\n    && apt install --no-install-recommends --yes \\\n        autoconf bison clang-6.0 cmake curl flex gcc libboost-test-dev \\\n        libcrypto++-dev libffi-dev libjemalloc-dev libmpfr-dev libprocps-dev \\\n        libsecp256k1-dev libssl-dev libtool libyaml-dev lld-6.0 llvm-6.0-tools \\\n        make maven opam openjdk-8-jdk pandoc pkg-config python3 python-pygments \\\n        python-recommonmark python-sphinx time zlib1g-dev protobuf-compiler \\\n        libprotobuf-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java\n\nRUN curl -f -sSL https://get.haskellstack.org/ | sh\n\nRUN    git clone 'https://github.com/z3prover/z3' --branch=z3-4.6.0 \\\n    && cd z3                                                        \\\n    && python scripts/mk_make.py                                    \\\n    && cd build                                                     \\\n    && make -j8                                                     \\\n    && make install                                                 \\\n    && cd ../..                                                     \\\n    && rm -rf z3\n\nARG USER_ID=1000\nARG GROUP_ID=1000\nRUN    groupadd --gid $GROUP_ID user                                        \\\n    && useradd --create-home --uid $USER_ID --shell /bin/sh --gid user user\n\nUSER $USER_ID:$GROUP_ID\n\nADD --chown=user:user deps/k/llvm-backend/src/main/native/llvm-backend/install-rust deps/k/llvm-backend/src/main/native/llvm-backend/rust-checksum /home/user/.install-rust/\nRUN    cd /home/user/.install-rust \\\n    && ./install-rust\n\nADD deps/k/k-distribution/src/main/scripts/bin/k-configure-opam-dev deps/k/k-distribution/src/main/scripts/bin/k-configure-opam-common /home/user/.tmp-opam/bin/\nADD deps/k/k-distribution/src/main/scripts/lib/opam  /home/user/.tmp-opam/lib/opam/\nRUN    cd /home/user \\\n    && ./.tmp-opam/bin/k-configure-opam-dev\n\nENV LC_ALL=C.UTF-8\nADD --chown=user:user deps/k/haskell-backend/src/main/native/haskell-backend/stack.yaml /home/user/.tmp-haskell/\nADD --chown=user:user deps/k/haskell-backend/src/main/native/haskell-backend/kore/package.yaml /home/user/.tmp-haskell/kore/\nRUN    cd /home/user/.tmp-haskell \\\n    && stack build --only-snapshot --test --bench --no-haddock-deps --haddock --library-profiling\n\nENV LD_LIBRARY_PATH=/usr/local/lib\nENV PATH=/home/user/.local/bin:/home/user/.cargo/bin:$PATH\n"
}