{
  "startTime": 1674252005287,
  "endTime": 1674252005408,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 2,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update && \\\n  apt-get -y --no-install-recommends install build-essential cmake wget && rm -rf /var/lib/apt/lists/*;\n\n# Download and install OpenTracing-cpp\nRUN get_latest_release() { \\\n  { \\\n  wget -qO- \"https://api.github.com/repos/$1/releases/latest\" | grep '\"tag_name\":' | sed -E 's/.*\"([^\"]+)\".*/\\1/'; \\\n  } && \\\n  DD_OPENTRACING_CPP_VERSION=\"$(get_latest_release DataDog/dd-opentracing-cpp)\" && \\\n  OPENTRACING_VERSION=\"$(get_latest_release opentracing/opentracing-cpp)\" && \\\n  wget https://github.com/opentracing/opentracing-cpp/archive/${OPENTRACING_VERSION}.tar.gz -O opentracing-cpp.tar.gz && \\\n  mkdir -p opentracing-cpp/.build && \\\n  tar zxvf opentracing-cpp.tar.gz -C ./opentracing-cpp/ --strip-components=1 && \\\n  cd opentracing-cpp/.build && \\\n  cmake .. && \\\n  make && \\\n  make install && \\\n  # Install dd-opentracing-cpp shared plugin.\n  wget https://github.com/DataDog/dd-opentracing-cpp/releases/download/${DD_OPENTRACING_CPP_VERSION}/linux-amd64-libdd_opentracing_plugin.so.gz && \\\n  gunzip linux-amd64-libdd_opentracing_plugin.so.gz -c > /usr/local/lib/libdd_opentracing_plugin.so \\\n} && rm opentracing-cpp.tar.gz\n\n\nCOPY tracer_example.cpp .\n\nRUN g++ -std=c++11 -o tracer_example tracer_example.cpp -lopentracing\n# Add /usr/local/lib to LD_LIBRARY_PATH\nRUN ldconfig\n\nCMD sleep 5 && ./tracer_example && sleep 25\n"
}