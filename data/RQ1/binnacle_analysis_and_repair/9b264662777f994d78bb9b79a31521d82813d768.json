{
  "startTime": 1674234247620,
  "endTime": 1674234247823,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:trusty\n\nUSER root\nENV HOME /root\n\n# install packages\nRUN apt-get update && apt-get -y --no-install-recommends install wget curl git build-essential libtool autoconf pkgconf && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -q -y mysql-server libmysqld-dev && rm -rf /var/lib/apt/lists/*;\n\n# install go1.9.3\nRUN wget https://dl.google.com/go/go1.9.3.linux-amd64.tar.gz\nRUN tar -C /usr/local -xzf go1.9.3.linux-amd64.tar.gz && rm go1.9.3.linux-amd64.tar.gz\n\nRUN mkdir $HOME/go\n\nENV PATH $PATH:/usr/local/go/bin\nENV GOPATH $HOME/go\nRUN echo \"export PATH=$PATH:/usr/local/go/bin\" >> ~/.bashrc\nRUN echo \"export GOPATH=$HOME/go\" >> ~/.bashrc\n\n# intall openssl 1.1.1\nRUN wget https://www.openssl.org/source/openssl-1.1.1-pre7.tar.gz\nRUN tar -C $HOME -xzf openssl-1.1.1-pre7.tar.gz && rm openssl-1.1.1-pre7.tar.gz\nWORKDIR $HOME/openssl-1.1.1-pre7\nRUN $HOME/openssl-1.1.1-pre7/config\nRUN make && make install\nRUN echo '/usr/local/lib' >> /etc/ld.so.conf\n\n# install libcoap\nWORKDIR $HOME\nRUN git clone https://github.com/obgm/libcoap.git\nWORKDIR $HOME/libcoap\nRUN git checkout 1365dea39a6129a9b7e8c579537e12ffef1558f6\nRUN ./autogen.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-documentation --with-openssl\nRUN make && make install\nRUN ldconfig\n\n# install go-dots\nWORKDIR $HOME\nRUN go get -u github.com/nttdots/go-dots/...\nWORKDIR $GOPATH/src/github.com/nttdots/go-dots/\nRUN make && make install"
}