{
  "startTime": 1674234571558,
  "endTime": 1674234571702,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 42,
        "columnStart": 5,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM malice/alpine\n\nLABEL maintainer \"https://github.com/blacktop\"\n\nLABEL malice.plugin.repository = \"https://github.com/malice-plugins/yara.git\"\nLABEL malice.plugin.category=\"av\"\nLABEL malice.plugin.mime=\"*\"\nLABEL malice.plugin.docker.engine=\"*\"\n\nENV YARA 3.7.0\n\n# Install Yara\nCOPY . /go/src/github.com/maliceio/malice-yara\nRUN apk --update add --no-cache openssl file bison jansson ca-certificates\nRUN apk --update add --no-cache -t .build-deps \\\n                                   openssl-dev \\\n                                   jansson-dev \\\n                                   build-base \\\n                                    mercurial \\\n                                    musl-dev \\\n                                   libc-dev \\\n                                   file-dev \\\n                                   automake \\\n                                   autoconf \\\n                                   libtool \\\n                                   flex \\\n                                    bash \\\n                                    wget \\\n                                    git \\\n                                    gcc \\\n                                    go \\\n                                   git \\\n                                   gcc \\\n  && echo \"===> Install Yara from source...\" \\\n  && cd /tmp \\\n  && git clone --recursive --branch v${YARA} https://github.com/VirusTotal/yara.git \\\n  && cd /tmp/yara \\\n  && ./bootstrap.sh \\\n  && sync \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-crypto \\\n                 --enable-magic \\\n                 --enable-cuckoo \\\n                 --enable-dotnet \\\n  && make \\\n  && make install \\\n  && echo \"===> Building scan Go binary...\" \\\n  && cd /go/src/github.com/maliceio/malice-yara \\\n  && export GOPATH=/go \\\n  && YARA_SRC=\"/tmp/yara\" \\\n  && export CGO_CFLAGS=\"-I${YARA_SRC}/libyara/include\" \\\n  && export CGO_LDFLAGS=\"-L${YARA_SRC}/libyara/.libs -lyara\" \\\n  && export PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\" \\\n  && go version \\\n  && go get -d \\\n  && CGO_ENABLED=1 go build -ldflags \"-X main.Version=$(cat VERSION) -X main.BuildTime=$(date -u +%Y%m%d)\" -o /bin/scan\n  # && rm -rf /go /usr/local/go /usr/lib/go /tmp/* \\\n  # && apk del --purge .build-deps\n\n# Install malice plugin\n# COPY . /go/src/github.com/maliceio/malice-yara\n# RUN apk --update add --no-cache -t .build-deps \\\n#                                     openssl-dev \\\n#                                     jansson-dev \\\n#                                     build-base \\\n#                                     mercurial \\\n#                                     musl-dev \\\n#                                     openssl \\\n#                                     bash \\\n#                                     wget \\\n#                                     git \\\n#                                     gcc \\\n#                                     go \\\n#   && echo \"===> Building scan Go binary...\" \\\n#   && cd /go/src/github.com/maliceio/malice-yara \\\n#   && export GOPATH=/go \\\n#   && export CGO_CFLAGS=\"-I/usr/local/include\" \\\n#   && export CGO_LDFLAGS=\"-L/usr/local/lib -lyara\" \\\n#   && go version \\\n#   && go get \\\n#   && go build -ldflags \"-X main.Version=$(cat VERSION) -X main.BuildTime=$(date -u +%Y%m%d)\" -o /bin/scan \\\n#   && rm -rf /go /usr/local/go /usr/lib/go /tmp/* \\\n#   && apk del --purge .build-deps\n\nCOPY rules /rules\n\nVOLUME [\"/malware\"]\nVOLUME [\"/rules\"]\n\nWORKDIR /malware\n\nENTRYPOINT [\"su-exec\",\"malice\",\"/sbin/tini\",\"--\",\"scan\"]\nCMD [\"--help\"]\n"
}