{
  "startTime": 1674236246326,
  "endTime": 1674236246700,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#####################\n#  Building Stage   #\n#####################\nFROM gitlab/gitlab-ce:10.7.7-ce.0 as builder\n\nENV GITLAB_DIR=/opt/gitlab/embedded/service/gitlab-rails\nENV GITLAB_GIT_ZH=https://gitlab.com/xhang/gitlab.git\n\n# Reference:\n# * https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/config/software/gitlab-rails.rb\n# * https://gitlab.com/gitlab-org/gitlab-ce/blob/master/.gitlab-ci.yml\nRUN set -xe \\\n    && echo \" # Preparing ...\" \\\n    && export DEBIAN_FRONTEND=noninteractive \\\n    && export SSL_CERT_DIR=/etc/ssl/certs/ \\\n    && export GIT_SSL_CAPATH=/etc/ssl/certs/ \\\n    && curl -f -sL https://deb.nodesource.com/setup_8.x | bash - \\\n    && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n    && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -yqq lsb-release patch nodejs python build-essential yarn cmake && rm -rf /var/lib/apt/lists/*;\n\nRUN set -xe \\\n    && echo \" # Generating translation patch ...\" \\\n    && cd /tmp \\\n    && git clone ${GITLAB_GIT_ZH} gitlab \\\n    && cd gitlab \\\n    && export IGNORE_DIRS=':!qa :!spec :!features :!.gitignore :!.gitlab :!locale :!app/assets/ :!vendor/assets/' \\\n    && git diff --diff-filter=d v10.7.7..v10.7.7-zh -- . ${IGNORE_DIRS} > ../zh_CN.diff \\\n    && echo \" # Patching ...\" \\\n    && patch -d ${GITLAB_DIR} -p1 < ../zh_CN.diff \\\n    && echo \" # Copy assets files ...\" \\\n    && git checkout v10.7.7-zh \\\n    && cp -R locale ${GITLAB_DIR}/ \\\n    && mkdir -p ${GITLAB_DIR}/app \\\n    && cp -R app/assets ${GITLAB_DIR}/app/ \\\n    && mkdir -p ${GITLAB_DIR}/vendor \\\n    && cp -R vendor/assets ${GITLAB_DIR}/vendor/\n\nRUN set -xe \\\n    && echo \" # Regenerating the assets\" \\\n    && cd ${GITLAB_DIR} \\\n    && cp config/gitlab.yml.example config/gitlab.yml \\\n    && cp config/database.yml.postgresql config/database.yml \\\n    && cp config/secrets.yml.example config/secrets.yml \\\n    && rm -rf public/assets \\\n    && export NODE_ENV=production \\\n    && export RAILS_ENV=production \\\n    && export SETUP_DB=false \\\n    && export USE_DB=false \\\n    && export SKIP_STORAGE_VALIDATION=true \\\n    && export WEBPACK_REPORT=true \\\n    && export NO_COMPRESSION=true \\\n    && export NO_PRIVILEGE_DROP=true \\\n    && export NODE_OPTIONS=--max-old-space-size=4086 \\\n    && yarn install --frozen-lockfile \\\n    && bin/bundle install --frozen \\\n    && bin/rake gettext:compile \\\n    && bin/rake gitlab:assets:compile && yarn cache clean;\n\nRUN set -xe \\\n    && echo \" # Cleaning ...\" \\\n    && yarn cache clean \\\n    && rm -rf log \\\n        tmp \\\n        config/gitlab.yml \\\n        config/database.yml \\\n        config/secrets.yml \\\n        .secret \\\n        .gitlab_shell_secret \\\n        .gitlab_workhorse_secret \\\n        app/assets \\\n        node_modules \\\n    && find /usr/lib/ -name __pycache__ | xargs rm -rf \\\n    && rm -rf /tmp/gitlab /tmp/*.diff /root/.cache /var/lib/apt/lists/*\n\n\n######################\n#  Production Stage  #\n######################\nFROM gitlab/gitlab-ce:10.7.7-ce.0 as production\n\nRUN set -xe \\\n    && export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -yqq locales tzdata \\\n    && locale-gen en_US.UTF-8 \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8\nENV TZ=Asia/Shanghai\n\nENV GITLAB_VERSION=v10.7.7\nENV GITLAB_DIR=/opt/gitlab/embedded/service/gitlab-rails\nENV GITLAB_GIT_ZH=https://gitlab.com/xhang/gitlab.git\nENV GITLAB_GIT_COMMIT_UPSTREAM=v10.7.7\nENV GITLAB_GIT_COMMIT_ZH=v10.7.7-zh\n\nCOPY --from=builder ${GITLAB_DIR}/app                   ${GITLAB_DIR}/app\nCOPY --from=builder ${GITLAB_DIR}/public                ${GITLAB_DIR}/public\nCOPY --from=builder ${GITLAB_DIR}/config/application.rb ${GITLAB_DIR}/config/application.rb\nCOPY --from=builder ${GITLAB_DIR}/config/initializers   ${GITLAB_DIR}/config/initializers\nCOPY --from=builder ${GITLAB_DIR}/config/locales        ${GITLAB_DIR}/config/locales\nCOPY --from=builder ${GITLAB_DIR}/lib/gitlab            ${GITLAB_DIR}/lib/gitlab\nCOPY --from=builder ${GITLAB_DIR}/locale                ${GITLAB_DIR}/locale\n"
}