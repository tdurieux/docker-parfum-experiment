{
  "startTime": 1674244365369,
  "endTime": 1674244365426,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This uses the offical metricbeat version : 5.5.1\nFROM docker.elastic.co/beats/metricbeat:5.5.1\n\n####################################################\n#\n# Required volumes and network bindings\n#\n####################################################\n\n# Metricbeat required host mount volumes\nVOLUME /hostfs/proc;\nVOLUME /hostfs/sys/fs/cgroup;\nVOLUME /hostfs;\n\n# Note that you will need to bind the network to host\n# aka : --net=host\n#\n# to properly get the host network metric,\n# due to the network interface limitations\n# see: https://www.elastic.co/guide/en/beats/metricbeat/current/running-on-docker.html\n\n####################################################\n#\n# Environment variable configurations\n#\n####################################################\n\n#-----------------------------------------------\n# Elasticsearch settings\n#-----------------------------------------------\n\n# Elasticsearch host to push into\nENV ES_HOST    elasticsearch\n\n# Elasticsearch port to push into\nENV ES_PORT    9200\n\n# Elasticsearch protocall to use\nENV ES_PROT    \"http\"\n\n# Elasticsearch username to use\nENV ES_USER    elasticsearch\n\n# Elasticsearch password to use\nENV ES_PASS    PleaseChangeThisToActualPassword\n\n# Elasticsearch index to use\nENV ES_INDEX  \"metricbeat-%{+yyyy.MM.dd}\"\n\n#-----------------------------------------------\n# metricbeat settings\n#-----------------------------------------------\n\n# Interval of capturing metrics\n#\n# NOTE: due to the docker API requiring more then 2 seconds\n#       metric period should ATLEAST be 10 seconds to prevent timeouts\n# SEE:  https://www.elastic.co/guide/en/beats/metricbeat/current/metricbeat-module-docker.html\nENV METRIC_PERIOD 1s\n\n# Docker metrics, are polled on a 10 minute basis\n# Due to prolification of microservices, this keeps metrics \"sane\"\n#\n# Due to the potential size of this dataset, it is highly recommended\n# to never go below a minute-by-minute period\nENV DOCKER_METRIC_PERIOD 10m\n\n# File system interval (as fluctuations isnt as large)\n# nor critical to be monitoring on short timeframes\nENV FS_METRIC_PERIOD 1m\n\n# Regex to use, to filter for file systems, and to drop file systems\n# from metric measurment. In event that for, and drop overlap. For takes priority.\n#\n# For example,\n# if regex matches FS_FOR_REGEX only, the filesystem is monitored\n# if regex matches FS_DROP_REGEX but not FS_FOR_REGEX, the file system is not monitored\n# if regex matches FS_DROP_REGEX and FS_FORE_REGEX, the file system is monitored\n#\n# The default setting monitor the \"/\" root filesystem, and\n# any file system (assuming a raid array) following the \"/dev/mdX\" convention.\n# All other file systems are ignored.\n#\n# (Note: currently dropped, till actual functionality is fixed)\nENV FS_FOR_REGEX \"^(/|/dev/md.*)$\"\nENV FS_DROP_REGEX \"^.*$\"\n\n# Likewise process metrics are trottled to limit logging size\n# This logs both process list, and socket information\n#\n# This information is mainly used for detecting malicious process / socket intrusion\n#\n# Due to the size of this dataset, it is highly recommended\n# to never go below a minute-by-minute period\nENV PROC_METRIC_PERIOD 10m\n\n# Process only top X of CPU / ram processes only.\nENV PROC_TOP_ENABLE \"false\"\nENV PROC_CPU_TOP 25\nENV PROC_RAM_TOP 25\n\n# Socket logging, with reverese DNS lookup\nENV SOCKET_REVERSE_LOOKUP \"true\"\n\n# Enable / disable system monitoring\nENV SYSTEM_ENABLE \"true\"\n\n# Enable / disable docker conatainer monitoring\nENV DOCKER_ENABLE \"true\"\n\n# Logging level to output, production should use warning\nENV LOGGING_LEVEL \"warning\"\n\n####################################################\n#\n# Actual build and entrypoint\n#\n####################################################\n\n# Perform setup as root user\nUSER root\n\n# Install some common modules needed\nRUN yum install -y curl vim && yum clean all && rm -rf /var/cache/yum\n# RUN curl -fsSL https://get.docker.com/ | sh && yum clean all\n# RUN usermod -aG docker metricbeat\n\n# Copying over the relevent metricbeat configuration\nCOPY metricbeat.yml /usr/share/metricbeat/metricbeat.yml\n# RUN chown metricbeat /usr/share/metricbeat/metricbeat.yml\n\n# Revert as metricbeat user\n#\n# NOTE: We are not reverting due to a user permission issue\n# with groups, which can be rather host specific. See\n# https://discuss.elastic.co/t/trouble-running-metricbeat-5-3-0-with-docker-module/82204/6\n# for details and possible long term solution\n#\n# @TODO : Test automated groupid assignment on run solution\n#\n# USER metricbeat\n\n# Build version check logging (for debugging)\nRUN metricbeat --version\n\n# Perform a configration file test\nRUN metricbeat -c /usr/share/metricbeat/metricbeat.yml -configtest\n\n# Assumes hostfs metricbeat binding\n# (as that is what this container is for)\nENTRYPOINT [\"metricbeat\", \"-system.hostfs=/hostfs\"]"
}