{
  "startTime": 1674245409099,
  "endTime": 1674245409515,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 81,
        "lineEnd": 106,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 81,
        "lineEnd": 106,
        "columnStart": 22,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM caffe2ai/caffe2:c2v0.8.1.cuda8.cudnn7.ubuntu16.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\n\n# Add Bazel distribution URI as a package source\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list \\\n    && curl -f https://bazel.build/bazel-release.pub.gpg | apt-key add -\n\n# Install some dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        tcl \\\n        tk \\\n        ant \\\n        apt-utils \\\n        bazel \\\n        bc \\\n        build-essential \\\n        cmake \\\n        default-jdk \\\n        doxygen \\\n        gfortran \\\n        golang \\\n        iptables \\\n        libav-tools \\\n        libboost-all-dev \\\n        libeigen3-dev \\\n        libfreetype6-dev \\\n        libhdf5-dev \\\n        libjpeg-turbo8-dev \\\n        liblcms2-dev \\\n        libopenblas-dev \\\n        liblapack-dev \\\n        libpng12-dev \\\n        libprotobuf-dev \\\n        libsdl2-dev \\\n        libtiff-dev \\\n        libtiff5-dev \\\n        libvncserver-dev \\\n        libzmq3-dev \\\n        nano \\\n        net-tools \\\n        openmpi-bin \\\n    && update-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3 && rm -rf /var/lib/apt/lists/*;\n\nRUN pip --no-cache-dir install \\\n        Cython \\\n        h5py \\\n        ipykernel \\\n        jupyter \\\n        matplotlib \\\n        numpy \\\n        pandas \\\n        path.py \\\n        pyyaml \\\n        scipy \\\n        six \\\n        sklearn \\\n        sympy \\\n        Pillow \\\n        zmq \\\n        dlib \\\n        incremental \\\n        nltk \\\n        textacy \\\n        scikit-image \\\n        spacy \\\n        tqdm \\\n        wheel \\\n        datmo\n\n# Install xgboost\nRUN git clone --recursive https://github.com/dmlc/xgboost \\\n    && cd xgboost \\\n    && make -j$(nproc) \\\n    && cd python-package \\\n    && python setup.py install \\\n    && cd ../.. \\\n    && rm -rf xgboost\n\nARG OPENCV_VERSION=3.4.0\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        python-opencv \\\n        libavcodec-dev \\\n        libavformat-dev \\\n        libavresample-dev \\\n        libdc1394-22-dev \\\n        libgdal-dev \\\n        libgphoto2-dev \\\n        libgtk2.0-dev \\\n        libjasper-dev \\\n        liblapacke-dev \\\n        libopencore-amrnb-dev \\\n        libopencore-amrwb-dev \\\n        libopencv-dev \\\n        libopenexr-dev \\\n        libswscale-dev \\\n        libtbb2 \\\n        libtbb-dev \\\n        libtheora-dev \\\n        libv4l-dev \\\n        libvorbis-dev \\\n        libvtk6-dev \\\n        libx264-dev \\\n        libxine2-dev \\\n        libxvidcore-dev \\\n        qt5-default && rm -rf /var/lib/apt/lists/*;\n\nRUN cd ~/ && \\\n    git clone https://github.com/Itseez/opencv.git --branch ${OPENCV_VERSION} --single-branch && \\\n    git clone https://github.com/Itseez/opencv_contrib.git --branch ${OPENCV_VERSION} --single-branch && \\\n    cd opencv && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n        -DWITH_QT=ON \\\n        -DWITH_OPENGL=ON \\\n        -D WITH_CUDA=ON \\\n        -D CUDA_CUDA_LIBRARY=/usr/local/cuda/lib64/stubs/libcuda.so \\\n        -D ENABLE_FAST_MATH=1 \\\n        -D CUDA_FAST_MATH=1 \\\n        -D WITH_CUBLAS=1 \\\n        -DFORCE_VTK=ON \\\n        -DWITH_TBB=ON \\\n        -DWITH_GDAL=ON \\\n        -DWITH_XINE=ON \\\n        -DBUILD_EXAMPLES=ON \\\n        -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \\\n        .. && \\\n    make -j\"$(nproc)\" && \\\n    make install && \\\n    ldconfig && \\\n # Remove the opencv folders to reduce image size\n    rm -rf ~/opencv*"
}