{
  "startTime": 1674243759875,
  "endTime": 1674243759920,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## bundle web assets\nFROM node:10 as webpack-bundle\nRUN curl -f -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.7.0\n\nENV HOME /root\nENV PATH $HOME/.yarn/bin:$PATH\nENV GOPATH /go\nENV PROJECT github.com/linkerd/linkerd2\nENV PACKAGE $PROJECT/web/app\nENV ROOT $GOPATH/src/$PROJECT\nENV PACKAGEDIR $GOPATH/src/$PACKAGE\nWORKDIR $PACKAGEDIR\n\n# copy build script\nCOPY bin/web $ROOT/bin/web\n\n# install yarn dependencies\nCOPY web/app/package.json web/app/yarn.lock ./\nRUN $ROOT/bin/web setup install --frozen-lockfile\n\n# build frontend assets\n# set the env to production *after* yarn has done an install, to make sure all\n# libraries required for building are included.\nENV NODE_ENV production\nCOPY web/app .\nRUN $ROOT/bin/web build\n\n## compile go server\nFROM gcr.io/linkerd-io/go-deps:b3c7654e as golang\nWORKDIR /go/src/github.com/linkerd/linkerd2\nRUN mkdir -p web\nCOPY web/main.go web\nCOPY web/srv web/srv\nCOPY controller controller\nCOPY pkg pkg\n\nRUN CGO_ENABLED=0 GOOS=linux go build -o web/web ./web\n\n## package it all up\nFROM gcr.io/linkerd-io/base:2019-02-19.01\nWORKDIR /linkerd\n\nCOPY LICENSE .\nCOPY --from=golang /go/src/github.com/linkerd/linkerd2/web/web .\nRUN mkdir -p app\nCOPY --from=webpack-bundle /go/src/github.com/linkerd/linkerd2/web/app/dist app/dist\nCOPY web/templates templates\n\nARG LINKERD_VERSION\nENV LINKERD_CONTAINER_VERSION_OVERRIDE=${LINKERD_VERSION}\n\nENTRYPOINT [\"./web\"]\n"
}