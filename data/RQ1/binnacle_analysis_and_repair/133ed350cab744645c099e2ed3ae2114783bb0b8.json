{
  "startTime": 1674239778269,
  "endTime": 1674239778326,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 5,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "# cpppo/cpppo Dockerfile.\n#\n# DESCRIPTION\n#     Base image for cpppo Dockerfiles.  Use this Docker image in a 'FROM cpppo/cpppo' line\n# when building other Dockerfiles based on cpppo.\n#\n# EXAMPLE\n#\n#     Come on in and look around:\n#\n#   $ docker -i -t run /bin/bash\n#\n#     Manually run any cpppo-based service; a simple simulated Logix controller for example:\n#\n#   $ docker run -p 44818:44818 -d cpppo/cpppo python -m cpppo.server.enip SCADA=dint[1000]\n#\nFROM\t\tcpppo/base\nMAINTAINER\tPerry Kundert \"perry@hardconsulting.com\"\nRUN apt-get -y --no-install-recommends install python python-pip \\\n\t\t\t\t\t\t&& apt-get clean && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir cpppo\n"
}