{
  "startTime": 1674251832727,
  "endTime": 1674251832864,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 74,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 109
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG DOCKER_IMG=laurmarinovici/tesp\nARG DOCKER_IMG_VERSION=:base\n\nFROM ${DOCKER_IMG}${DOCKER_IMG_VERSION} AS tesp-helics-builder\n# -----------------------------------------------------\n# Environment variables giving the location where TESP\n# related software will be installed on the Docker container.\n# -----------------------------------------------------\nENV TESP=${WORK_DIR}/tesp-platform\nENV HELICS_INSTALL=${TESP}/HELICSInstall\nENV GLD_INSTALL=${TESP}/GridLABDInstall\nENV NS3_INSTALL=${TESP}/ns3Install\n\n# ----------------------------------------------------\n# Because I want to use the software versions I already have\n# installed on the current VM, I am going to use\n# directly the downloads and repositories I have, letting aside\n# the commands that are performing the actual downloads, and\n# repository cloning.\n# Hence, from the context of the folder where I have all my downloads\n# and clones, I only add the needed ones.\n# I am running the image building script from inside the folder where\n# all repositories have been already cloned in the source folders below.\n# --------------------------------------------------------------\n# HELICS branch = develop\nENV HELICS_SOURCE=\"HELICS-src\"\n# -------------------------------\n# GridLAB-D branch = feature/1146\nENV GLD_SOURCE=\"gridlab-d\"\n# -------------------------------\n# ns3 branch = ns-3-dev\n# with helics-ns3 and fnss-ns3\nENV NS3_SOURCE=\"ns-3-dev\"\n# The folder on the image where all source files will be copied to,\n# so that installation can proceed.\nENV SOURCE_DIR=\"${WORK_DIR}/sources/\"\n\n# --------------------------------------------------------------\n# Environment variables needed for the package installation\n# --------------------------------------------------------------\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${HELICS_INSTALL}/lib\nENV HELICS_LIBRARY=${HELICS_INSTALL}/lib\nENV HELICS_INCLUDE_DIR=${HELICS_INSTALL}/include\nENV PATH=${PATH}:${HELICS_INSTALL}/bin:${GLD_INSTALL}/bin\nENV GLPATH=\"${GLD_INSTALL}/lib/gridlabd:${GLD_INSTALL}/share/gridlabd\"\n# default values\nENV HELICS_LOG_FILE=no\nENV HELICS_LOG_STDOUT=no\nENV HELICS_LOG_TRACE=no\nENV HELICS_LOG_LEVEL=DEBUG4\n\n# ------------------------------------------------------------------\n# Adding the host source folders to the Docker image source folders\n# ------------------------------------------------------------------\nCOPY --chown=tesp-user:tesp-user ./ ${SOURCE_DIR}\n\nRUN mkdir -p ${SOURCE_DIR} && \\\n    mkdir -p ${TESP} && \\\n# ----------------------------------------------------\n# INSTALL HELICS\n# ----------------------------------------------------\n    cd ${SOURCE_DIR}${HELICS_SOURCE} && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_INSTALL_PREFIX=${HELICS_INSTALL} -DBUILD_PYTHON_INTERFACE=ON -DCMAKE_CXX_FLAGS=\"-O2\" -DCMAKE_C_FLAGS=\"-O2\" ../ && \\\n    make -j 2 && \\\n    make install && \\\n    /bin/rm -r ${SOURCE_DIR}${HELICS_SOURCE} && \\\n    export PYTHONPATH=${HELICS_INSTALL}/python:$PYTHONPATH && \\\n# ----------------------------------------------------\n# INSTALL GridLAB-D\n# ----------------------------------------------------\n    cd ${SOURCE_DIR}${GLD_SOURCE} && \\\n    autoreconf -isf && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${GLD_INSTALL} --with-helics=${HELICS_INSTALL} --enable-silent-rules \\\n    'CPP=gcc -E' 'CXXPP=g++ -E' 'CC=gcc' 'CXX=g++' \\ 'CXXPP=g++ -E' 'CC=gcc' 'CXX=g++' \\\n    'CFLAGS=-w -O3 -fno-inline-functions' 'CXXFLAGS=-w -O3 -fno-inline-functions -std=c++14' 'LDFLAGS=-w -O3' && \\\n    make && \\\n    make install && \\\n    /bin/rm -r ${SOURCE_DIR}${GLD_SOURCE} && \\\n# -----------------------------------------------------\n# INSTALL ns3-helics\n# -----------------------------------------------------\n    cd ${SOURCE_DIR}${NS3_SOURCE} && \\\n    ./waf configure --disable-werror --with-helics=${HELICS_INSTALL} --prefix=${NS3_INSTALL} && \\\n    ./waf install\n\nFROM ${DOCKER_IMG}${DOCKER_IMG_VERSION} AS tesp-helics-production\n# -----------------------------------------------------\n# Environment variables giving the location where TESP\n# related software will be installed on the Docker container.\n# -----------------------------------------------------\nENV TESP=${WORK_DIR}/tesp-platform\nENV HELICS_INSTALL=${TESP}/HELICSInstall\nENV GLD_INSTALL=${TESP}/GridLABDInstall\nENV NS3_INSTALL=${TESP}/ns3Install\n# --------------------------------------------------------------\n# Environment variables needed for the package installation\n# --------------------------------------------------------------\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${HELICS_INSTALL}/lib\nENV HELICS_LIBRARY=${HELICS_INSTALL}/lib\nENV HELICS_INCLUDE_DIR=${HELICS_INSTALL}/include\nENV PATH=${PATH}:${HELICS_INSTALL}/bin:${GLD_INSTALL}/bin\nENV GLPATH=${GLD_INSTALL}/lib/gridlabd:${GLD_INSTALL}/share/gridlabd\nENV PYTHONPATH=${HELICS_INSTALL}/python:$PYTHONPATH\nCOPY --from=tesp-helics-builder --chown=tesp-user ${WORK_DIR} ${WORK_DIR}"
}