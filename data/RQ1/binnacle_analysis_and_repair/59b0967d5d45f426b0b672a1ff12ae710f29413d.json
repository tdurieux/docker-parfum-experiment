{
  "startTime": 1674240178832,
  "endTime": 1674240179022,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 95
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 125
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.8-alpine\n\nENV ROCKSDB_VERSION=5.0.1\n\nRUN apk --update --no-cache add bash curl jq \\\n    && apk add --no-cache --virtual .builddeps build-base perl linux-headers musl-dev bzip2-dev snappy-dev zlib-dev coreutils git docker \\\n    && cd /tmp \\\n    && curl -f --insecure -sL https://github.com/facebook/rocksdb/archive/v$ROCKSDB_VERSION.tar.gz | tar zx \\\n    && mv rocksdb-$ROCKSDB_VERSION rocksdb \\\n    && ( cd /tmp/rocksdb ; INSTALL_PATH=/usr make install-shared ) \\\n    && rm -rf /tmp/rocksdb \\\n    # build hyperledger fabric peer\r\n    && ( mkdir -p /var/hyperledger ; cd /var/hyperledger ; mkdir db production fabric ) \\\n    # clone hyperledger code\r\n    && mkdir -p $GOPATH/src/github.com/hyperledger \\\n    && cd $GOPATH/src/github.com/hyperledger \\\n    && git clone --single-branch -b master --depth 1 http://gerrit.hyperledger.org/r/fabric \\\n    # install gotools\r\n    && ( cd $GOPATH/src/github.com/hyperledger/fabric/ ;  make gotools ) \\\n    # build peer\r\n    && cd $GOPATH/src/github.com/hyperledger/fabric/peer \\\n    && CGO_CFLAGS=\" \" CGO_LDFLAGS=\"-lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy\" go install \\\n    && cp core.yaml $GOPATH/bin \\\n    && go clean \\\n    # build orderer\r\n    && cd $GOPATH/src/github.com/hyperledger/fabric/orderer \\\n    && go install \\\n    && cp orderer.yaml $GOPATH/bin \\\n    && go clean \\\n    && ls -al $GOPATH/bin \\\n    && ( apk del .builddeps ; rm -rf /tmp/* )\n# [FAB-1054] Remove rocksdb\nWORKDIR $GOPATH/src/github.com/hyperledger/fabric\n"
}