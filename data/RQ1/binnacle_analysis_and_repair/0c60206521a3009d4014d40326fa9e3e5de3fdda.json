{
  "startTime": 1674242904475,
  "endTime": 1674242904654,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openbuildservice/base\n\nRUN /root/bin/docker-bootstrap.sh frontend\n\n# Install other requirements\nRUN npm install -g jshint && npm cache clean --force;\n\n# Ensure there are ruby, gem and irb commands without ruby suffix\nRUN for i in ruby gem irb; do ln -s /usr/bin/$i.ruby2.5 /usr/local/bin/$i; done\n\n# foreman, which we only run in docker, needs a different thor version than OBS.\n# Installing the gem directly spares us from having to rpm package two different thor versions.\nRUN gem.ruby2.5 install --no-format-executable thor:0.19 foreman mailcatcher\n\n# We copy the Gemfiles into this intermediate build stage so it's checksum\n# changes and all the subsequent stages (a.k.a. the bundle install call below)\n# have to be rebuild. Otherwise, after the first build of this image,\n# docker would use it's cache for this and the following stages.\nADD Gemfile /obs/src/api/Gemfile\nADD Gemfile.lock /obs/src/api/Gemfile.lock\nRUN chown -R frontend /obs/src/api\n\n# Now do the rest as the user with the same ID as the user who\n# builds this container\nUSER frontend\nWORKDIR /obs/src/api\n\n# We install our bundle here as kind of a cache. So developers, that often\n# rebuild their frontend image which is based on this, don't have to install\n# _all_ gems _all_ the time. We keep this cache warm by automatically\n# rebuilding this image every time there is a commit to master. See\n# https://hub.docker.com/r/openbuildservice/frontend-base/builds/\nRUN export NOKOGIRI_USE_SYSTEM_LIBRARIES=1; bundle install --jobs=3 --retry=3 || bundle install --jobs=3 --retry=3\n\n# Switch to root again so we don't block changing our frontend user id...\nUSER root\n\n# Run our command\nCMD [\"/bin/bash\", \"-l\"]\n"
}