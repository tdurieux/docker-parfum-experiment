{
  "startTime": 1674242324734,
  "endTime": 1674242325199,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 30,
        "columnEnd": 41
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 28,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "FROM php:apache\n\nRUN rm -rf /var/www/html/*\n# ADD soure/ /var/www/html/\n\nADD sources.list /etc/apt/sources.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y gcc wget mariadb-client && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://xmlsoft.org/sources/libxml2-2.9.4.tar.gz -O /home/libxml2-2.9.4.tar.gz\n\nRUN cd /home/ && tar -zxvf libxml2-2.9.4.tar.gz && rm -f /home/libxml2-2.9.4.tar.gz\n\nRUN cd /home/libxml2-2.9.4 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && make clean && cd / && rm -rf /home/libxml2-2.9.4\n\nRUN wget https://launchpadlibrarian.net/36710455/curl_7.19.7.orig.tar.gz -O /home/curl_7.19.7.tar.gz\n\nRUN cd /home/ && tar -zxvf curl_7.19.7.tar.gz && rm -f /home/curl_7.19.7.tar.gz\n\nRUN cd /home/curl-7.19.7 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && make clean && cd / && rm -rf /home/curl-7.19.7\n\n# ReInstall php\nRUN set -xe \\\n\t&& buildDeps=\" \\\n\t\t$PHP_EXTRA_BUILD_DEPS \\\n\t\tlibcurl4-openssl-dev \\\n\t\tlibedit-dev \\\n\t\tlibsqlite3-dev \\\n\t\tlibssl-dev \\\n\t\tlibxml2-dev \\\n\t\" \\\n\t&& apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \\\n\t\\\n\t&& docker-php-source extract \\\n\t&& cd /usr/src/php \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t--with-config-file-path=\"$PHP_INI_DIR\" \\\n\t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \\\n\n\t\t--disable-cgi \\\n\n# --enable-ftp is included here because ftp_ssl_connect() needs ftp to be compiled statically (see https://github.com/docker-library/php/issues/236)\n\t\t--enable-ftp \\\n# --enable-mbstring is included here because otherwise there's no way to get pecl to use it properly (see https://github.com/docker-library/php/issues/195)\n\t\t--enable-mbstring \\\n# --enable-mysqlnd is included here because it's harder to compile after the fact than extensions are (since it's a plugin for several extensions, not an extension in itself)\n\t\t--enable-mysqlnd \\\n\n\t\t--with-curl \\\n\t\t--with-libedit \\\n\t\t--with-openssl \\\n\t\t--with-zlib \\\n\t\t\\\n\t\t$PHP_EXTRA_CONFIGURE_ARGS \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make install \\\n\t&& { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \\\n\t&& make clean \\\n\t&& docker-php-source delete \\\n\n\t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps wget\n\n# Install php - redis ext\n# http://stackoverflow.com/questions/31369867/how-to-install-php-redis-extension-using-the-official-php-docker-image-approach\nRUN mkdir -p /usr/src/php/ext/redis && rm -rf /usr/src/php/ext/redis\n\nADD phpredis-3.1.2/ /usr/src/php/ext/redis\n\nRUN echo 'redis' >> /usr/src/php-available-exts \\\n    && docker-php-ext-install redis\n\n# Install php - mysqli ext\nRUN docker-php-ext-install mysqli\nADD sql.sql /\n\n# Install mysql client\n# RUN DEBIAN_FRONTEND=noninteractive apt-get -y install mariadb-client\n\n# Open htaccess\nRUN cp /etc/apache2/mods-available/rewrite.load /etc/apache2/mods-enabled/\nRUN sed -i 's/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf\n\n# Add some php - safe config\n\n# Open port\nEXPOSE 80\n\nRUN chown www-data:www-data /var/www/html -R\nRUN chmod -R 755 /var/www/html\n\n#COPY docker-entrypoint.sh /\n#RUN chmod +x /docker-entrypoint.sh\n\n#ENTRYPOINT /docker-entrypoint.sh\n"
}