{
  "startTime": 1674237063422,
  "endTime": 1674237063912,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 0,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 0,
        "columnEnd": 23
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 17,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 0,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 0,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 13,
        "columnStart": 0,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 0,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 54,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 0,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 13,
        "columnStart": 0,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 0,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 54,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "## Dockerized speech recognition with Kaldi + Pop Up Archive models\nFROM ubuntu:16.10\nMAINTAINER Steve McLaughlin <stephen.mclaughlin@utexas.edu>\n\nENV PYTHONWARNINGS=\"ignore:a true SSLContext object\"\nENV SHELL /bin/bash\n\n## Installing core system dependencies\nRUN apt-get update && \\\n apt-get install --no-install-recommends -y \\\ng++ zlib1g-dev make automake autoconf libtool-bin git build-essential && \\\n apt-get install --no-install-recommends -y \\\nsoftware-properties-common subversion libatlas3-base bzip2 wget curl gawk \\\nzip unzip libperl4-corelibs-perl libjson-perl python2.7 python-pip && \\\n pip install --no-cache-dir -U ftfy==4.4.3 && \\\nln -s -f bash /bin/sh && rm -rf /var/lib/apt/lists/*;\n\n## Installing old C/C++ compilers\nRUN apt-get update && \\\n apt-get install --no-install-recommends -y gcc-4.8 g++-4.8 libgcc-4.8-dev && \\\nalias gcc='gcc-4.8' && alias cc='gcc-4.8' && \\\nalias g++='g++-4.8' && alias c++='c++-4.8' && rm -rf /var/lib/apt/lists/*;\n\n## Installing Perl dependencies\nRUN curl -f -L https://cpanmin.us | perl - App::cpanminus && cpanm File::Slurp::Tiny Data::Dump\n\n## Installing sclite\nRUN apt-get update && apt-get install --no-install-recommends -y sctk && \\\nalias sclite=\"sctk sclite\" && rm -rf /var/lib/apt/lists/*;\n\n## Setting UTF-8 as default encoding format for terminal\nRUN apt-get install --no-install-recommends -y language-pack-en && rm -rf /var/lib/apt/lists/*;\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n## Downloading Kaldi and PUA resources\nRUN git clone https://github.com/kaldi-asr/kaldi.git kaldi --origin upstream && \\\ncd /kaldi/egs/ && git clone https://github.com/popuparchive/american-archive-kaldi && \\\ncd /kaldi/egs/american-archive-kaldi/sample_experiment/ && \\\nwget https://sourceforge.net/projects/popuparchive-kaldi/files/exp2.tar.gz && \\\ntar -xvzf exp2.tar.gz && rm exp2.tar.gz\n\n## Cleaning up\nRUN rm /kaldi/egs/american-archive-kaldi/sample_experiment/exp2.tar.gz\n\n## Creating expected symlinks\nRUN ln -s /kaldi/egs/wsj/s5/steps /kaldi/egs/american-archive-kaldi/sample_experiment/exp && \\\nln -s /kaldi/egs/wsj/s5/utils /kaldi/egs/american-archive-kaldi/sample_experiment/exp && \\\nln -s /kaldi/egs/wsj/s5/steps /kaldi/egs/american-archive-kaldi/sample_experiment/ && \\\nln -s /kaldi/egs/wsj/s5/utils /kaldi/egs/american-archive-kaldi/sample_experiment/\n\n## Installing SoX and FFmpeg\nRUN apt-get update && apt-get install --no-install-recommends -y \\\nsox libsox-fmt-alsa libsox-fmt-base libsox2 ffmpeg && rm -rf /var/lib/apt/lists/*;\n\n## Compiling Kaldi\nRUN cd /kaldi/tools && make -j 8 && \\\ncd /kaldi/src && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make depend && make -j 8\n\n## Installing pip and ftfy\nRUN apt-get update && apt-get install --no-install-recommends -y python-pip && \\\n pip install --no-cache-dir ftfy==4.4.3 && \\\nalias python=python2.7 && rm -rf /var/lib/apt/lists/*;\n\n## Installing IRSTLM\nRUN apt-get update && apt-get install --no-install-recommends -y cmake irstlm && rm -rf /var/lib/apt/lists/*;\n\n## Installing nano\nRUN apt-get update && apt-get install --no-install-recommends -y nano && rm -rf /var/lib/apt/lists/*;\n\n## Installing CMUseg\nRUN cd /kaldi/egs/american-archive-kaldi/sample_experiment/ && \\\nsh install-cmuseg.sh && \\\nchmod -R 755 ./tools/CMUseg_0.5/bin/linux/\n\n## Setting script permissions\nRUN chmod 755 -R /kaldi/egs/american-archive-kaldi/sample_experiment/scripts/\nRUN chmod 755 -R /kaldi/egs/american-archive-kaldi/sample_experiment/run.sh\n\n## Configuration tweaks\nRUN cd /kaldi/egs/american-archive-kaldi/sample_experiment && \\\nrm path.sh && \\\nwget https://raw.githubusercontent.com/hipstas/kaldi-pop-up-archive/master/scripts/path.sh && \\\nchmod 755 path.sh && \\\nrm set-kaldi-path.sh && \\\nwget https://raw.githubusercontent.com/hipstas/kaldi-pop-up-archive/master/scripts/set-kaldi-path.sh && \\\nchmod 755 set-kaldi-path.sh && \\\ncd /kaldi/egs/wsj/s5/utils/ && \\\nrm run.pl && \\\nwget https://raw.githubusercontent.com/hipstas/kaldi-pop-up-archive/master/scripts/run.pl && \\\nchmod 755 run.pl && \\\nmkdir /audio_in\n\nWORKDIR /audio_in\n\n## Plans for next iteration\n# Pass local directory pathname as a shared volume in docker run command, then launch setup.sh as CMD or ENTRYPOINT.\n# Handle troublesome filename characters by quoting arguments in run.sh ... or just remove them.\n# Set nj prefs in a yaml file or some such.\n\n# Transcript output location: /kaldi/egs/american-archive-kaldi/sample_experiment/output\n"
}