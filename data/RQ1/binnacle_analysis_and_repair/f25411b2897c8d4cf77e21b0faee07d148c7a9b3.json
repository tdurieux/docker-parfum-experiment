{
  "startTime": 1674248471180,
  "endTime": 1674248471699,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 58,
        "columnEnd": 69
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 23,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 23,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 78
      }
    }
  ],
  "repairedDockerfile": "FROM gcr.io/kaggle-images/rcran\nARG ncpus=1\n\nADD clean-layer.sh  /tmp/clean-layer.sh\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends apt-transport-https && \\\n    /tmp/clean-layer.sh && rm -rf /var/lib/apt/lists/*;\n\n# libv8-dev is needed for package DiagrammR, which xgboost needs\nRUN apt-get update && \\\n    (echo N; echo N) | apt-get install --no-install-recommends -y -f r-cran-rgtk2 && \\\n    apt-get install --no-install-recommends -y -f libv8-dev libgeos-dev libgdal-dev libproj-dev libsndfile1-dev \\\n    libtiff5-dev fftw3 fftw3-dev libfftw3-dev libjpeg-dev libhdf4-0-alt libhdf4-alt-dev \\\n    libhdf5-dev libx11-dev cmake libglu1-mesa-dev libgtk2.0-dev librsvg2-dev libxt-dev \\\n    patch && \\\n    # data.table added here because rcran missed it, and xgboost needs it\n    # `ncpus` matches the number of CPU offered by the biggest machine available on GCB.\n    install2.r --error --ncpus $ncpus --repo http://cran.rstudio.com \\\n    DiagrammeR mefa gridSVG lattice rgeos rgdal Matrix rARPACK foreign prevR nnet rpart \\\n    class imager Amelia \\\n    # Packages necessary for /tmp/package_installs.R\n    MASS mgcv survival KernSmooth && \\\n    # Rattle installation currently broken by missing \"cairoDevice\" error\n    # rattle \\\n    # XGBoost gets special treatment because the nightlies are hard to build with devtools.\n    cd /usr/local/src && git clone --recursive https://github.com/dmlc/xgboost && \\\n    cd xgboost && make -j $ncpus Rbuild && R CMD INSTALL xgboost_*.tar.gz && \\\n    # Prereq for installing udunits2 package; see https://github.com/edzer/units\n    cd /usr/local/src && wget ftp://ftp.unidata.ucar.edu/pub/udunits/udunits-2.2.24.tar.gz && \\\n    tar zxf udunits-2.2.24.tar.gz && cd udunits-2.2.24 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n    ldconfig && echo 'export UDUNITS2_XML_PATH=\"/usr/local/share/udunits/udunits2.xml\"' >> ~/.bashrc && \\\n    export UDUNITS2_XML_PATH=\"/usr/local/share/udunits/udunits2.xml\" && rm udunits-2.2.24.tar.gz && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install --no-install-recommends -y libatlas-base-dev libopenblas-dev libopencv-dev && \\\n    cd /usr/local/src && git clone --recursive --depth=1 --branch v1.4.x https://github.com/apache/incubator-mxnet.git mxnet && \\\n    cd mxnet && make -j $ncpus USE_OPENCV=1 USE_BLAS=openblas && make rpkg && \\\n    # Needed for \"h5\" library\n    apt-get install --no-install-recommends -y libhdf5-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y libzmq3-dev python-pip default-jdk && \\\n    apt-get install --no-install-recommends -y python-dev libcurl4-openssl-dev && \\\n    pip install --no-cache-dir jupyter pycurl && \\\n    # to avoid breaking UI change, pin the jupyter notebook package\n    # the latest version also has a regression on the NotebookApp.ip option\n    # see: https://www.google.com/url?q=https://github.com/jupyter/notebook/issues/3946&sa=D&usg=AFQjCNFieP7srXVWqX8PDetXGfhyxRmO4Q\n    pip install --no-cache-dir notebook==5.5.0 && \\\n    R -e 'IRkernel::installspec()' && \\\n    # Build pyzmq from source instead of using a pre-built binary.\n    yes | pip uninstall pyzmq && \\\n    pip install --no-cache-dir pyzmq --no-binary pyzmq && \\\n    cp -r /root/.local/share/jupyter/kernels/ir /usr/local/share/jupyter/kernels && \\\n    # Make sure Jupyter won't try to \"migrate\" its junk in a read-only container\n    mkdir -p /root/.jupyter/kernels && \\\n    cp -r /root/.local/share/jupyter/kernels/ir /root/.jupyter/kernels && \\\n    touch /root/.jupyter/jupyter_nbconvert_config.py && touch /root/.jupyter/migrated && rm -rf /var/lib/apt/lists/*;\n\n# Tensorflow and Keras\n# Keras sets up a virtualenv and installs tensorflow\n# in the WORKON_HOME directory, so choose an explicit location for it.\nENV WORKON_HOME=/usr/local/share/.virtualenvs\nRUN pip install --no-cache-dir --user virtualenv && R -e 'keras::install_keras()'\n\n# Install kaggle libraries.\n# Do this at the end to avoid rebuilding everything when any change is made.\nADD kaggle/ /kaggle/\n# RProfile sources files from /kaggle/ so ensure this runs after ADDing it.\nENV R_HOME=/usr/local/lib/R\nADD RProfile.R /usr/local/lib/R/etc/Rprofile.site\nADD install_iR.R  /tmp/install_iR.R\nADD bioconductor_installs.R /tmp/bioconductor_installs.R\nADD package_installs.R /tmp/package_installs.R\nADD nbconvert-extensions.tpl /opt/kaggle/nbconvert-extensions.tpl\nRUN Rscript /tmp/package_installs.R\nRUN Rscript /tmp/bioconductor_installs.R\nRUN Rscript /tmp/install_iR.R\n\n# Py3 handles a read-only environment fine, but Py2.7 needs\n# help https://docs.python.org/2/using/cmdline.html#envvar-PYTHONDONTWRITEBYTECODE\nENV PYTHONDONTWRITEBYTECODE=1\n# keras::install_keras puts the new libraries inside a virtualenv called r-tensorflow. Importing the\n# library triggers a reinstall/rebuild unless the reticulate library gets a strong hint about\n# where to find it.\n# https://rstudio.github.io/reticulate/articles/versions.html\nENV RETICULATE_PYTHON=\"/usr/local/share/.virtualenvs/r-tensorflow/bin/python\"\n\nCMD [\"R\"]\n"
}