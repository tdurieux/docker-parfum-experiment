{
  "startTime": 1674242677707,
  "endTime": 1674242678583,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 14,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 148
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 20,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 139
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 139
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER leoatchina,leoatchina@gmail.com\nCOPY sources.list /etc/apt/sources.list\nRUN apt update -y && apt upgrade -y && \\\n    apt install --no-install-recommends -y wget curl net-tools iputils-ping apt-transport-https openssh-server \\\n    unzip bzip2 apt-utils gdebi-core tmux \\\n    git htop supervisor xclip cmake sudo \\\n    libapparmor1 libcurl4-openssl-dev libxml2 libxml2-dev libssl-dev libncurses5-dev libncursesw5-dev libjansson-dev \\\n    build-essential gfortran libcairo2-dev libxt-dev automake bash-completion \\\n    libapparmor1 libedit2 libc6 psmisc rrdtool libzmq3-dev libtool software-properties-common \\\n    bioperl libdbi-perl tree python-dev python3-dev \\\n    locales && locale-gen en_US.UTF-8 && \\\n    cpan -i Try::Tiny && \\\n    add-apt-repository ppa:jonathonf/vim -y && \\\n    apt update -y && \\\n    apt install --no-install-recommends -y vim && \\\n    apt autoremove && apt clean && apt purge && rm -rf /tmp/* /var/tmp/* /root/.cpan/* && rm -rf /var/lib/apt/lists/*;\n# configuration\nCOPY .bashrc .inputrc .configrc /root/\nRUN git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf && ~/.fzf/install --all\nRUN mkdir -p /opt/rc && cp /root/.bashrc /root/.inputrc /root/.configrc /opt/rc\n# bash && ctags\nRUN cd /tmp && \\ \n    wget https://ftp.gnu.org/gnu/bash/bash-5.0.tar.gz && \\\n    tar xvzf bash-5.0.tar.gz && \\\n    cd bash-5.0 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install && \\\n    cd /tmp && \\\n    curl -f -LO https://github.com/BurntSushi/ripgrep/releases/download/11.0.1/ripgrep_11.0.1_amd64.deb && \\\n    dpkg -i ripgrep_11.0.1_amd64.deb && \\\n    cd /tmp && \\\n    git clone --depth 1 https://github.com/universal-ctags/ctags.git && cd ctags && \\\n    ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n    cd /tmp && \\\n    curl -f https://ftp.vim.org/ftp/gnu/global/global-6.6.3.tar.gz -o global.tar.gz && \\\n    tar xvzf global.tar.gz && cd global-6.6.3 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-sqlite3 && make && make install && \\\n    apt autoremove && apt clean && apt purge && rm -rf /tmp/* /var/tmp/* /root/.cpan/* && rm bash-5.0.tar.gz\n# node and yarn\nRUN apt install --no-install-recommends -y nodejs nodejs-legacy npm && \\\n    npm config set registry https://registry.npm.taobao.org && \\\n    npm install -g n && n stable && \\\n    npm install -g yarn && \\\n    apt autoremove && apt clean && apt purge && rm -rf /tmp/* /var/tmp/* /root/.cpan/* && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n# R\nRUN add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu xenial-cran35/' && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 && \\\n    add-apt-repository ppa:ubuntugis/ppa -y && \\\n    apt update -y && \\\n    apt install --no-install-recommends -y r-base-dev r-base r-base-core r-recommended && \\\n    apt install --no-install-recommends -y libv8-3.14-dev libudunits2-dev libgdal1i libgdal1-dev libproj-dev gdal-bin proj-bin libgdal-dev libgeos-dev libclang-dev && \\\n    apt autoremove && apt clean && apt purge && rm -rf /tmp/* /var/tmp/* /root/.cpan/* && rm -rf /var/lib/apt/lists/*;\n# rstudio\nRUN cd /tmp && \\\n    curl -f https://download2.rstudio.org/server/trusty/amd64/rstudio-server-1.2.1335-amd64.deb -o rstudio.deb && \\\n    gdebi -n rstudio.deb && \\\n    apt autoremove && apt clean && apt purge && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n# PATH, if not set here, conda cmd not work\nENV PATH=/opt/anaconda3/bin:$PATH\n# anaconda3\nRUN cd /tmp && \\\n    version=$( curl -f -s https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/ | grep Linux | grep _64 | tail -1 | awk -F'\"' '/^<a href/ {print $2}') && \\\n    curl -f https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/$version -o Anaconda3.sh && \\\n    bash Anaconda3.sh -b -p /opt/anaconda3 && rm Anaconda3.sh && \\\n    conda clean  -a -y\n## 使用清华的源\nRUN conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ && \\\n    conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r/ && \\\n    conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/mro/ && \\\n    conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ && \\\n    conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/ && \\\n    conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/ && \\\n    conda config --set show_channel_urls yes\nRUN conda install -c bioconda java-jdk && \\\n\t\tconda clean -a -y && R CMD javareconf && \\\n    apt autoremove && apt clean && apt purge && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n## R kernel for anaconda3\nRUN Rscript -e \"options(encoding = 'UTF-8');\\\n    options('repos' = c(CRAN='https://mirrors.tuna.tsinghua.edu.cn/CRAN/'));\\\n    install.packages(c('devtools', 'RCurl', 'crayon', 'repr', 'IRdisplay', 'pbdZMQ', 'IRkernel'));\\\n    IRkernel::installspec();\\\n    system('rm -rf /tmp/*') \"\n# coder server\nRUN cd /tmp && \\\n    curl -f -L https://github.com/cdr/code-server/releases/download/1.1156-vsc1.33.1/code-server1.1156-vsc1.33.1-linux-x64.tar.gz -o code-server.tar.gz && \\\n    tar xvzf code-server.tar.gz && \\\n    mv code-server1.1156-vsc1.33.1-linux-x64 /opt/code-server && \\\n    rm -rf /tmp/*.* && rm code-server.tar.gz\n# pip install something\nCOPY pip.conf /root/.pip/\nRUN pip install --no-cache-dir PyHamcrest && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir neovim mysql-connector-python python-language-server mock radian requests pygments && \\\n    pip install --no-cache-dir flake8 --ignore-installed && \\\n    rm -rf /root/.cache/pip/* /tmp/* && \\\n    apt autoremove && apt clean && apt purge && rm -rf /tmp/* /var/tmp/* /root/.cpan/*\n## system local config\nRUN cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo 'Asia/Shanghai' >/etc/timezone && \\\n    echo \"export LC_ALL=en_US.UTF-8\"  >> /etc/profile\n## users\nRUN useradd rserver -d /home/rserver && mkdir /jupyter && mkdir /var/run/sshd\nWORKDIR /jupyter\n## config dir\nRUN mkdir -p /etc/rstudio /opt/config /opt/log  && chmod -R 777 /opt/config /opt/log\n## set up passwd in entrypoin.sh\nENV PASSWD=jupyter\nCOPY rserver.conf /etc/rstudio/\nCOPY jupyter_lab_config.py supervisord.conf passwd.py entrypoint.sh /opt/config/\nENTRYPOINT [\"bash\", \"/opt/config/entrypoint.sh\"]\n## share\nEXPOSE 8888 8787 8443 8822\nVOLUME [\"/home/rserver\",\"/jupyter\"]\n"
}