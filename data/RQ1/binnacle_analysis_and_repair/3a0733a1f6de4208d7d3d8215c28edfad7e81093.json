{
  "startTime": 1674244647317,
  "endTime": 1674244647478,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7-alpine\n\nMAINTAINER HarvestHub\n\n# Makes manage.py commands able to show output\nENV PYTHONUNBUFFERED 1\n\nADD requirements.txt /requirements.txt\n\nRUN set -ex \\\n    # Install build dependencies\n    && apk add --no-cache --virtual .build-deps \\\n        # General build dependencies\n        python-dev \\\n        build-base \\\n        linux-headers \\\n        pcre-dev \\\n        # Pillow build depenencies\n        jpeg-dev \\\n        zlib-dev \\\n        freetype-dev \\\n        lcms2-dev \\\n        openjpeg-dev \\\n        tiff-dev \\\n        tk-dev \\\n        tcl-dev \\\n        # Postgres build dependencies\n        postgresql-dev \\\n    # Upgrade pip \\\n    && pip install --no-cache-dir -U pip \\\n    # Install requirements.txt\n    && pip install --no-cache-dir -r /requirements.txt \\\n    # Install gunicorn\n    && pip install --no-cache-dir gunicorn \\\n    # Scans project and collects runtime dependencies\n    && runDeps=\"$( \\\n        scanelf --needed --nobanner --recursive \\\n            $(python -c 'import site; print(site.getsitepackages()[0])') \\\n            | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n            | sort -u \\\n            | xargs -r apk info --installed \\\n            | sort -u \\\n    )\" \\\n    # Install Node and Less for compiling .less in development\n    && apk add --no-cache npm \\\n    && npm install -g less \\\n    # Add the runtime dependencies we need to keep\n    && apk add --no-cache --virtual .python-rundeps $runDeps \\\n    # Delete the build dependencies we no longer need\n    && apk del .build-deps && npm cache clean --force;\n\nWORKDIR /app\nADD . /app\n\nRUN set -ex \\\n    # Collect static files for production\n    && python manage.py collectstatic --noinput \\\n    # Compile static files for production\n    && python manage.py compress --force\n\nCMD [\"gunicorn\", \"wsgi\", \"-b :5000\"]\n"
}