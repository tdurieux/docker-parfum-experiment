{
  "startTime": 1674248430011,
  "endTime": 1674248430178,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 23,
        "columnEnd": 39
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "FROM crystallang/crystal:0.27.2\n\n# base\nRUN apt-get clean -y && apt-get update -y\nRUN apt-get install --no-install-recommends curl libcurl3 libreadline-dev \\\n            libcurl3-gnutls libcurl4-openssl-dev wget zip unzip \\\n            dnsutils locales locales-all nodejs npm -y && rm -rf /var/lib/apt/lists/*;\n\nENV LANG ja_JP.UTF-8\nENV LANGUAGE ja_JP.UTF-8\nENV LC_ALL ja_JP.UTF-8\n\n# ruby\nENV RUBY_VERSION 2.6.0\nENV RBENV_ROOT /root/.rbenv\nRUN git clone https://github.com/rbenv/rbenv.git $RBENV_ROOT && \\\n  git clone https://github.com/sstephenson/ruby-build.git $RBENV_ROOT/plugins/ruby-build\nRUN $RBENV_ROOT/plugins/ruby-build/install.sh\nENV PATH $RBENV_ROOT/bin:$RBENV_ROOT/shims:$RBENV_ROOT/versions/$RUBY_VERSION/bin:$PATH\nRUN echo 'eval \"$(rbenv init -)\"' >> /etc/profile.d/rbenv.sh\nENV CONFIGURE_OPTS --disable-install-doc\nRUN rbenv install $RUBY_VERSION && rbenv global $RUBY_VERSION\nRUN rbenv exec gem install bundler\nRUN rbenv exec gem update --system\n\nWORKDIR /opt/hd\n\nCOPY Gemfile Gemfile.lock ./\n\n# gems\nRUN gem install rake\nRUN bundle install --system\nRUN mv $RBENV_ROOT/versions/$RUBY_VERSION/bin/danger \\\n  $RBENV_ROOT/versions/$RUBY_VERSION/bin/danger_ruby\n\n# js\nRUN npm cache clean --force && npm install n -g && npm cache clean --force;\nRUN n stable\nRUN apt-get purge -y nodejs npm\nRUN npm install -g yarn && npm cache clean --force;\nRUN yarn global add danger\nRUN ln -s /usr/local/bin/danger /usr/local/bin/danger_js\n\nEXPOSE 80\n\nCOPY Dangerfile.default shard.yml shard.lock ./\nCOPY src ./src\n\nRUN shards build --release\nENV PATH $PATH:/opt/hd/bin\n\nCMD hosted-danger\n"
}