{
  "startTime": 1674248376691,
  "endTime": 1674248377003,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6-slim-stretch\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN set -x; \\\n    apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        g++ \\\n        libssl-dev \\\n        git \\\n        locales \\\n        gettext \\\n        ca-certificates \\\n        nginx \\\n        curl \\\n    && rm -rf /var/lib/apt/lists/*\n\n\n# Setup locale settings\nRUN locale-gen en_US.UTF-8 && dpkg-reconfigure locales\n# specify LANG to ensure python installs locals properly\nENV LANG C\nENV LANG en_US.UTF-8\nENV LC_TYPE en_US.UTF-8\nENV PYTHONIOENCODING UTF-8\nRUN locale-gen en_US.UTF-8 && locale -a\n\n# Preparing Nginx data\nCOPY taiga-back /usr/src/taiga-back\nCOPY taiga-front-dist/ /usr/src/taiga-front-dist\nCOPY conf/locale.gen /etc/locale.gen\n\n# Setup Nginx configurations\nRUN rm /etc/nginx/sites-enabled/default\nRUN sed -i \"s/user www-data/user root/g\" /etc/nginx/nginx.conf\nRUN sed -i \"s/worker_connections 768/worker_connections 1024/g\" /etc/nginx/nginx.conf\nCOPY conf/nginx/sites-available/* /etc/nginx/sites-available/\nCOPY conf/nginx/snippets/*        /etc/nginx/snippets/\n# forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log\nRUN ln -sf /dev/stderr /var/log/nginx/error.log\n\n# Setup symbolic links for configuration files\nRUN mkdir -p /taiga\nCOPY conf/taiga/local.py /taiga/local.py\nCOPY conf/taiga/docker.py /taiga/docker.py\nCOPY conf/taiga/conf.json /taiga/conf.json\nRUN ln -s /taiga/local.py /usr/src/taiga-back/settings/local.py\nRUN ln -s /taiga/docker.py /usr/src/taiga-back/settings/docker.py\nRUN ln -s /taiga/conf.json /usr/src/taiga-front-dist/dist/conf.json\n\n# Backwards compatibility\nRUN mkdir -p /usr/src/taiga-front-dist/dist/js/ && rm -rf /usr/src/taiga-front-dist/dist/js/\nRUN ln -s /taiga/conf.json /usr/src/taiga-front-dist/dist/js/conf.json\n\nWORKDIR /usr/src/taiga-back\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Define default env vars\nENV TAIGA_SSL False\nENV TAIGA_SSL_BY_REVERSE_PROXY False\nENV TAIGA_ENABLE_EMAIL False\nENV TAIGA_HOSTNAME localhost\nENV TAIGA_SECRET_KEY \"!!!REPLACE-ME-j1598u1J^U*(y251u98u51u5981urf98u2o5uvoiiuzhlit3)!!!\"\n\nEXPOSE 80 443\nVOLUME /usr/src/taiga-back/media\n\n# Health checks\nHEALTHCHECK CMD curl --fail http://localhost/conf.json || exit 1\nHEALTHCHECK CMD curl --fail http://localhost/api/v1/ || exit 1\nHEALTHCHECK CMD curl --fail http://localhost || exit 1\n\n\nCOPY scripts /scripts\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"gunicorn\", \"-w 3\", \"-t 60\", \"--pythonpath=.\", \"-b 127.0.0.1:8000\", \"taiga.wsgi\"]\n"
}