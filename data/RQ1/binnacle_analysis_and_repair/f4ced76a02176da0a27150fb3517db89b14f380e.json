{
  "startTime": 1674244811936,
  "endTime": 1674244812056,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 13,
        "columnStart": 44,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 13,
        "columnStart": 44,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for running fuzzer backend (aka fuzzer-be)\n# This involves compiling Skia and running afl-fuzz\nFROM launcher.gcr.io/google/clang-debian9 AS build\n\n# Things we need to build Skia\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y \\\n  git \\\n  python \\\n  curl \\\n  make \\\n  build-essential \\\n  libfontconfig-dev \\\n  libgl1-mesa-dev \\\n  libglu1-mesa-dev \\\n  && groupadd -g 2000 skia \\\n  && useradd -u 2000 -g 2000 skia && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p -m 0755 /opt/afl && \\\n  mkdir -p -m 0777 /opt/depot_tools\n\nENV AFL_VERSION=2.51b CC=/usr/local/bin/clang CXX=/usr/local/bin/clang++ AFL_SKIP_CPUFREQ=1\n\nADD https://storage.googleapis.com/skia-fuzzer/afl-mirror/afl-$AFL_VERSION.tgz /tmp/afl.tgz\n\n# Make afl-fuzz\nRUN tar -C /opt/afl -zxf /tmp/afl.tgz --strip=1 \"afl-\"$AFL_VERSION && \\\n  rm /tmp/afl.tgz && \\\n  cd /opt/afl && \\\n  make\n# Can't build afl-clang-fast because llvm-config not on image\n# TODO(kjlubick): Do that if we need the performance boost\n\nCOPY . /\n\nRUN mkdir -m 0777 /mnt/fuzzing/\n\nUSER skia\n\nRUN git clone 'https://chromium.googlesource.com/chromium/tools/depot_tools.git' /opt/depot_tools\n\n# This is different from how we normally do things (normally we do ENTRYPOINT and CMD)\n# because we want these flags to be set for all fuzzer instances. What is set in the\n# Kubernetes config will just be the unique settings (e.g. what fuzzers to run)\nENTRYPOINT [\"/fuzzer-be\", \"--logtostderr\", \"--skia_root=/mnt/fuzzing/skia-be\", \\\n            \"--clang_path=/usr/local/bin/clang\", \"--clang_p_p_path=/usr/local/bin/clang++\", \\\n            \"--depot_tools_path=/opt/depot_tools\", \"--afl_root=/opt/afl\", \\\n            \"--afl_output_path=/mnt/fuzzing/afl-out\", \"--fuzz_samples=/mnt/fuzzing/samples\", \\\n            \"--generator_working_dir=/mnt/fuzzing/generator-wd\", \\\n            \"--aggregator_working_dir=/mnt/fuzzing/aggregator-wd\", \\\n            \"--executable_cache_path=/mnt/fuzzing/executable_cache\", \\\n            \"--fuzz_path=/mnt/fuzzing/fuzzes\", \\\n            \"--status_period=10s\", \"--analysis_timeout=5s\"]"
}