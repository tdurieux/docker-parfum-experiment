{
  "startTime": 1674241839379,
  "endTime": 1674241839542,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 42,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 115,
        "columnEnd": 142
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 146,
        "columnEnd": 172
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get clean && apt-get -y update && apt-get install --no-install-recommends -y locales && locale-gen en_US.UTF-8 && update-locale && apt-get install --no-install-recommends -y libblas3 && apt-get install --no-install-recommends -y libxml2 \\\n&& (echo \"deb http://cran.mtu.edu/bin/linux/ubuntu xenial/\" >> /etc/apt/sources.list && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9) && \\\napt-get update -q && apt-get upgrade -y -q && apt-get install -y -q --no-install-recommends r-base \\\n                                              r-base-dev \\\n                                              gdebi-core \\\n                                              libapparmor1  \\\n                                              sudo \\\n                                              libcurl4-openssl-dev \\\n                                              libssl1.0.0 \\\n                                              build-essential \\\n                                              cmake \\\n                                              curl \\\n                                              vim \\\n                                              ca-certificates \\\n                  && apt-get clean \\\n                  && rm -rf /tmp/* /var/tmp/* \\\n                  && rm -rf /var/lib/apt/lists/*\n\nRUN sudo su - -c \"R -e \\\"install.packages('tidyverse', repos='http://cran.rstudio.com/')\\\"\"\nRUN sudo su - -c \"R -e \\\"install.packages('lubridate', repos='http://cran.rstudio.com/')\\\"\"\nRUN sudo su - -c \"R -e \\\"install.packages('caret', repos='http://cran.rstudio.com/')\\\"\"\nRUN sudo su - -c \"R -e \\\"install.packages('randomForest', repos='http://cran.rstudio.com/')\\\"\"\nRUN sudo su - -c \"R -e \\\"install.packages('xgboost', repos='http://cran.rstudio.com/')\\\"\"\n\nRUN curl -f -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n     chmod +x ~/miniconda.sh && \\\n     ~/miniconda.sh -b -p /usr/conda && \\\n     rm ~/miniconda.sh && \\\n     /usr/conda/bin/conda install -y numpy scipy pandas scikit-learn joblib tqdm ipython pip cython numba && usr/conda/bin/conda install -y pytorch-cpu -c pytorch && \\\n     /usr/conda/bin/conda clean -ya && \\\n     /usr/conda/bin/pip install xgboost lightgbm catboost statsmodels && \\\n     /usr/conda/bin/pip install --upgrade tensorflow && \\\n     /usr/conda/bin/pip install keras\n\nRUN /usr/conda/bin/pip install --upgrade --force xlearn ml_metrics tsfresh mlxtend"
}