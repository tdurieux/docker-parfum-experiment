{
  "startTime": 1674236249754,
  "endTime": 1674236249815,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This dockerfile trains or evaluates ImageNet from ${DATA_DIR}/imagenet\n#\n# It assumes being run on Kubernetes therefore\n#  * takes CLUSTER_CONF as an ENV, set by k8s via configMap\n#  * takes POD_NAME as entry to evaluate its role and task id via POD_NAME=<job name>-<task id>\n#\n# Note: this is hugely inspired from Google's Tensorflow Worshop\n# from August (old version of https://github.com/amygdala/tensorflow-workshop)\n\nFROM tensorflow/tensorflow:1.3.0-gpu\n\nMAINTAINER Samuel Cozannet <samuel.cozannet@madeden.com>\n\nENV DATA_DIR=/var/tensorflow/\nENV IMAGENET_USERNAME=username\nENV IMAGENET_ACCESS_KEY=api_key\nENV MODEL=imagenet\n\nRUN apt update && apt install -yqq --no-install-recommends \\\n        wget \\\n        jq \\\n\t\tcurl \\\n\t\tgit && \\\n\tapt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    git clone https://github.com/tensorflow/models.git /models\n\n# We need to add a custom PPA to pick up JDK8, since trusty doesn't\n# have an openjdk8 backport.  openjdk-r is maintained by a reliable contributor:\n# Matthias Klose (https://launchpad.net/~doko).  It will do until\n# we either update the base image beyond 14.04 or openjdk-8 is\n# finally backported to trusty; see e.g.\n#   https://bugs.launchpad.net/trusty-backports/+bug/1368094\nRUN add-apt-repository -y ppa:openjdk-r/ppa && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y openjdk-8-jdk openjdk-8-jre-headless && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" \\\n    >>/root/.bazelrc\nENV BAZELRC /root/.bazelrc\n\nCOPY bin/bazel /bin/bazel\nCOPY bin/bazel-real /bin/bazel-real\nCOPY download.sh /download.sh\nCOPY worker.sh /worker.sh\nCOPY ps.sh /ps.sh\nCOPY eval.sh /eval.sh\n\n# Note: we use train by default as downloading from GPU doesn't make sense\n# but we still load download.sh to give flexibility\nCMD [ \"/worker.sh\" ]\n"
}