{
  "startTime": 1674238458909,
  "endTime": 1674238459236,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 53,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 55,
        "lineEnd": 56,
        "columnStart": 0,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 50,
        "columnEnd": 72
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 67,
        "columnEnd": 85
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7 as platformlibs\n\nLABEL maintainer=\"cgiraldo@gradiant.org\"\nLABEL organization=\"gradiant.org\"\n\nCOPY docker/hdfs_root_uri_conf.diff /\nRUN apk add --no-cache git bash python py2-pip && pip install --no-cache-dir setuptools\nRUN git clone https://github.com/pndaproject/platform-libraries.git\nRUN cd platform-libraries && git checkout tags/release/4.0 && \\\n    export VERSION=$(git describe --tags) && \\\n    git apply /hdfs_root_uri_conf.diff && \\\n    python setup.py bdist_egg\n\nFROM alpine:3.7\n\nCOPY --from=platformlibs /platform-libraries/dist/platformlibs-0.1.5-py2.7.egg /\nCOPY docker /\nENV SPARK_HOME=/opt/spark\n\nRUN apk add --no-cache bash python2 py2-pip postgresql-dev libpng-dev freetype-dev ca-certificates build-base python2-dev krb5-dev libffi-dev cyrus-sasl-dev nodejs shadow python3 python3-dev openjdk8-jre && \\\n    echo 'Installing python2 requirements' && \\\n    pip2 install --no-cache-dir -r /requirements/requirements-jupyter.txt && \\\n    pip2 install --no-cache-dir -r /requirements/app-packages-requirements.txt && pip2 install --no-cache-dir j2cli && \\\n    /usr/bin/python2 -m ipykernel.kernelspec --name python2 --display-name \"Python 2\" && \\\n    echo 'Instaling  python3 requirements' && \\\n    pip3 install --no-cache-dir -r /requirements/requirements-jupyter.txt && \\\n    /usr/bin/python3 -m ipykernel.kernelspec --name python3 --display-name \"Python 3\" && \\\n    echo 'Adding pyspark2 support' && \\\n    mkdir -p /usr/local/share/jupyter/kernels/pyspark2 && mkdir -p /opt && \\\n    wget -O- https://archive.apache.org/dist/spark/spark-2.3.0/spark-2.3.0-bin-hadoop2.7.tgz | tar -xvz -C /tmp && \\\n    mv /tmp/spark-2.3.0-bin-hadoop2.7 /opt/spark && \\\n    echo 'Adding jupyter-scala_extension_spark' && \\\n    jupyter nbextension enable --py widgetsnbextension --system && \\\n    jupyter-kernelspec install  /usr/lib/python3.6/site-packages/sparkmagic/kernels/sparkkernel && \\\n    jupyter serverextension enable --py sparkmagic && \\\n    echo 'Adding jupyter-extensions' && \\\n    apk add --no-cache libxml2-dev libxslt-dev && \\\n    pip3 install --no-cache-dir -r /requirements/requirements-jupyter-extensions.txt && \\\n    jupyter serverextension enable --py jupyter_spark --system && \\\n    jupyter nbextension install --py jupyter_spark --system && \\\n    jupyter nbextension enable --py jupyter_spark --system && \\\n    jupyter nbextension enable --py widgetsnbextension --system && \\\n    echo 'Adding jupyterhub' && \\\n    pip3 install --no-cache-dir -r /requirements/requirements-jupyterhub.txt && \\\n    npm install -g configurable-http-proxy && mkdir -p /var/log/pnda && \\\n    echo 'auth    required    pam_exec.so    debug log=/var/log/pnda/login.log /create_notebook_dir.sh' >> /etc/pam.d/login && npm cache clean --force;\nRUN echo 'Adding pnda platform-libraries' && \\\n    mkdir /etc/platformlibs && /usr/bin/python2 -m easy_install /platformlibs-0.1.5-py2.7.egg && \\\n    adduser -D pnda && echo \"pnda:pnda\" | chpasswd && \\\n    mkdir -p /opt/pnda && mv /notebooks /opt/pnda/jupyter_notebooks && \\\n    echo 'auth required pam_listfile.so item=user sense=deny file=/etc/login.deny onerr=succeed' >> /etc/pam.d/login && \\\n    echo 'root' >> /etc/login.deny\n\nRUN wget https://central.maven.org/maven2/org/apache/spark/spark-sql-kafka-0-10_2.11/2.3.0/spark-sql-kafka-0-10_2.11-2.3.0.jar \\\n-O /opt/spark/jars/spark-sql-kafka-0-10_2.11-2.3.0.jar && \\\n wget https://central.maven.org/maven2/org/apache/kafka/kafka-clients/1.0.0/kafka-clients-1.0.0.jar \\\n-O /opt/spark/jars/kafka-clients-1.0.0.jar\n\nENTRYPOINT /entrypoint.sh\n\n"
}