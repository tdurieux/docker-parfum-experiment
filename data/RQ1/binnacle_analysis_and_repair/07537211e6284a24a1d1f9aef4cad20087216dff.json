{
  "startTime": 1674239845159,
  "endTime": 1674239846085,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use an official Python runtime as a parent image\nFROM gadgetron/ubuntu_1804_cuda92_cudnn7_base:latest\n\n# set arguments\nARG GADGETRON_URL=https://github.com/gadgetron/gadgetron\nARG ISMRMRD_URL=https://github.com/ismrmrd/ismrmrd.git\nARG ISMRMRD_PYTHON_API_URL=https://github.com/ismrmrd/ismrmrd-python.git\nARG ISMRMRD_PYTHON_TOOLS_URL=https://github.com/ismrmrd/ismrmrd-python-tools.git\nARG BART_URL=https://github.com/mrirecon/bart.git\nARG SIEMENS_TO_ISMRMRD_URL=https://github.com/ismrmrd/siemens_to_ismrmrd.git\nARG PHILIPS_TO_ISMRMRD_URL=https://github.com/ismrmrd/philips_to_ismrmrd.git\nARG ITK_URL=http://itk.org/ITK.git\nARG ITK_BRANCH=v4.13.1\nARG ELASTIX_URL=https://github.com/SuperElastix/elastix.git\nARG CSMOCO_URL=https://github.com/thomaskuestner/CS_MoCo_LAB.git\n\n# Copy the current directory contents into the container at /app\nADD . /tmp\n\n# install newest version of cmake\nRUN apt-get -y purge cmake \\\n\t&& wget https://cmake.org/files/v3.13/cmake-3.13.0.tar.gz \\\n\t&& tar -xzvf cmake-*.tar.gz \\\n\t&& cd cmake-3*/ \\\n\t&& ./bootstrap \\\n\t&& make -j$(expr $(nproc) + 1)\\\n\t&& make install \\\n\t&& cd .. \\\n\t&& rm -rf cmake-3* \\\n\t# update system\n\t&& apt-get -y update \\\n\t&& apt-get -y upgrade \\\n\t# install NumPy dependency \\\n\t&& apt-get -y --no-install-recommends install python-numpy \\\n\t# install other software\n\t&& apt-get -y --no-install-recommends install gcc-6 g++-6 gfortran \\\n\t# and cleanup\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/* && rm cmake-*.tar.gz\n\n# install ISMRMRD\nRUN\tcd /opt/code \\\n\t&& git clone ${ISMRMRD_URL} \\\n\t&& cd ismrmrd \\\n\t&& mkdir build \\\n\t&& cd build \\\n\t&& cmake ../ \\\n\t&& make -j$(expr $(nproc) + 1) \\\n\t&& make install \\\n\t&& cd ../.. \\\n\t&& rm -rf ismrmrd/build\n\n# Fix compiler error with CUDA for now\nRUN\tsed -i \"s;#error -- unsupported GNU version! gcc versions later than 4.9 are not supported!;//#error -- unsupported GNU version! gcc versions later than 4.9 are not supported!;g\" /usr/local/cuda/include/host_config.h\n\n# install BART\nRUN\tcd /opt/code \\\n\t&& git clone ${BART_URL} \\\n\t&& cd bart \\\n\t&& mkdir build \\\n\t&& cd build \\\n\t&& cmake -DBART_FPIC=ON -DBART_ENABLE_MEM_CFL=ON -DBART_REDEFINE_PRINTF_FOR_TRACE=ON -DBART_LOG_BACKEND=ON -DBART_LOG_GADGETRON_BACKEND=ON ../ \\\n\t&& make -j$(expr $(nproc) + 1) \\\n\t&& make install \\\n\t&& cd ../.. \\\n\t&& rm -rf bart/build\n\n# install GADGETRON\nRUN\tcd /opt/code \\\n\t&& git clone ${GADGETRON_URL} \\\n\t&& cd gadgetron \\\n\t&& mkdir build \\\n\t&& cd build \\\n\t&& cmake -DCUDA_NVCC_FLAGS=\"-ccbin gcc-6\" -DBUILD_WITH_PYTHON3=ON ../ \\\n\t&& make -j$(expr $(nproc) + 1) \\\n\t&& make install \\\n\t&& /opt/code/gadgetron/docker/manifest --key .io.gadgetron.gadgetron.sha1 --value `git rev-parse HEAD` \\\n\t&& cp ${GADGETRON_HOME}/share/gadgetron/config/gadgetron.xml.example ${GADGETRON_HOME}/share/gadgetron/config/gadgetron.xml \\\n\t&& cp /opt/code/gadgetron/docker/start_supervisor /opt/ \\\n\t&& cp /opt/code/gadgetron/docker/supervisord.conf /opt/ \\\n\t&& cd ../.. \\\n\t&& rm -rf gadgetron/build\n\n# HASH for ISMRMRD\nRUN\tcd /opt/code/ismrmrd \\\n\t&& /opt/code/gadgetron/docker/manifest --key .io.gadgetron.ismrmrd.sha1 --value `git rev-parse HEAD`\n\n# install ISMRMRD PYTHON API\nRUN\tcd /opt/code \\\n\t&& git clone ${ISMRMRD_PYTHON_API_URL} \\\n\t&& cd ismrmrd-python \\\n\t&& python3 setup.py install \\\n\t&& /opt/code/gadgetron/docker/manifest --key .io.gadgetron.ismrmrdpython.sha1 --value `git rev-parse HEAD`\n\n# install ISMRMRD PYTHON TOOLS\nRUN\tcd /opt/code \\\n\t&& git clone ${ISMRMRD_PYTHON_TOOLS_URL} \\\n\t&& cd ismrmrd-python-tools \\\n\t&& python3 setup.py install \\\n\t&& /opt/code/gadgetron/docker/manifest --key .io.gadgetron.ismrmrdpythontools.sha1 --value `git rev-parse HEAD`\n\n# install SIEMENS_TO_ISMRMRD\nRUN\tcd /opt/code \\\n\t&& git clone ${SIEMENS_TO_ISMRMRD_URL} \\\n\t&& cd siemens_to_ismrmrd \\\n\t&& mkdir build \\\n\t&& cd build \\\n\t&& cmake ../ \\\n\t&& make -j$(expr $(nproc) + 1) \\\n\t&& make install \\\n\t&& /opt/code/gadgetron/docker/manifest --key .io.gadgetron.siemens_to_ismrmrd.sha1 --value `git rev-parse HEAD` \\\n\t&& cd ../.. \\\n\t&& rm -rf siemens_to_ismrmrd/build\n\n# install PHILIPS_TO_ISMRMRD\nRUN\tcd /opt/code \\\n\t&& git clone ${PHILIPS_TO_ISMRMRD_URL} \\\n\t&& cd philips_to_ismrmrd \\\n\t&& mkdir build \\\n\t&& cd build \\\n\t&& cmake ../ \\\n\t&& make -j $(nproc) \\\n\t&& make install \\\n\t&& /opt/code/gadgetron/docker/manifest --key .io.gadgetron.philips_to_ismrmrd.sha1 --value `git rev-parse HEAD` \\\n\t&& cd ../.. \\\n\t&& rm -rf philips_to_ismrmrd/build\n\n# install ITK\nRUN\tcd /opt/code \\\n\t&& git clone -b ${ITK_BRANCH} ${ITK_URL} \\\n\t&& mkdir ITK/build \\\n\t&& cd ITK/build \\\n\t&& cmake ../ \\\n\t&& make -j$(expr $(nproc) + 1)\\\n\t&& make install \\\n\t&& cd ../.. \\\n\t&& rm -rf ITK/build\n\n# install elastix (twice)\nRUN\tcd /opt/code \\\n\t&& git clone ${ELASTIX_URL} \\\n\t&& mkdir elastix/build \\\n\t&& cd elastix/build \\\n\t&& cmake ../ \\\n\t&& make -j$(expr $(nproc) + 1)\\\n\t&& make install \\\n\t&& cd ../.. \\\n\t&& patch elastix/CMakeLists.txt < /tmp/elastix.patch \\\n\t&& rm -rf elastix/build \\\n\t&& mkdir elastix/build \\\n\t&& cd elastix/build \\\n\t&& cmake ../ \\\n\t&& make -j$(expr $(nproc) + 1)\\\n\t&& make install \\\n\t&& cd ../.. \\\n\t&& mkdir /usr/local/lib/cmake/Elastix \\\n\t&& ln -s /opt/code/elastix/build/ElastixConfig.cmake /usr/local/lib/cmake/Elastix/ElastixConfig.cmake\n\n# install CS_MoCo_LAB\nRUN\tcd /opt/code \\\n\t&& git clone ${CSMOCO_URL} \\\n\t&& cd CS_MoCo_LAB/reconstruction/gadgetron/CS_LAB_Gadget \\\n\t&& mkdir build \\\n\t&& cd build \\\n\t&& cmake ../ \\\n\t&& make -j$(expr $(nproc) + 1)\\\n\t&& make install \\\n\t&& cd .. \\\n\t&& rm -rf build\n\n# Set the shell entry point to the container\nWORKDIR /opt/data\n\n# set CMD\nCMD [\"/opt/start_supervisor\"]\n"
}