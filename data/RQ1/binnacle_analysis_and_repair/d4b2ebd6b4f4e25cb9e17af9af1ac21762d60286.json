{
  "startTime": 1674250539089,
  "endTime": 1674250539949,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 4,
        "columnEnd": 188
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 197,
        "lineEnd": 197,
        "columnStart": 4,
        "columnEnd": 118
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM Fedora-Docker-Base-23-20151030.x86_64\nMAINTAINER Hamish.K.Mackenzie@gmail.com\n\nRUN dnf -y install sudo && dnf clean all\n\nENV WINE wine\nENV WINEDEBUG -all\nENV WINEPATH_U winepath -u\n\nRUN sudo dnf -y --enablerepo updates-testing update && \\\n    sudo dnf clean all\n\nRUN sudo dnf -y --enablerepo updates-testing install \\\n                           wine.x86_64 \\\n                           wine.i686 \\\n                           mingw64-gtksourceview3.noarch \\\n                           mingw32-winpthreads \\\n                           mingw64-enchant \\\n                           mingw64-libsoup \\\n                           mingw64-libidn \\\n                           mingw64-sqlite \\\n                           mingw64-gstreamer1-plugins-base \\\n                           mingw64-libwebp \\\n                           mingw64-libxslt \\\n                           mingw32-enchant \\\n                           mingw32-libsoup \\\n                           mingw32-libidn \\\n                           mingw32-sqlite \\\n                           mingw32-gstreamer1-plugins-base \\\n                           mingw32-libwebp \\\n                           mingw32-libxslt \\\n                           mingw32-gtk3 \\\n                           bison \\\n                           flex \\\n                           gettext \\\n                           gobject-introspection-devel \\\n                           atk-devel \\\n                           libsoup-devel \\\n                           webkitgtk3-devel \\\n                           webkitgtk4-devel \\\n                           gtksourceview3-devel \\\n                           poppler-glib-devel \\\n                           vte291-devel \\\n                           libnotify-devel \\\n                           gstreamer1-devel \\\n                           gstreamer1-plugins-base-devel \\\n                           gperf \\\n                           ruby \\\n                           wget \\\n                           tar \\\n                           xz \\\n                           make \\\n                           p7zip \\\n                           unzip \\\n                           cabextract \\\n                           cabal-install \\\n                           git \\\n                           msitools \\\n                           Xvfb \\\n                           which \\\n                           mono-core \\\n                           mono-locale-extras \\\n                           libxslt \\\n                           rpm-build\n\nRUN sudo dnf -y --enablerepo updates-testing install dnf-plugins-core\n\nRUN dnf download --source mingw32-webkitgtk3 && \\\n    rpm -i mingw-webkitgtk3-2.4.9-1.fc23.src.rpm\n\nRUN ls /usr/src\n\nADD linux/specfiles/mingw-webkitgtk3.spec /root/rpmbuild/SPECS/\n\nRUN cd /root/rpmbuild/SOURCES && \\\n    wget https://raw.githubusercontent.com/Alexpux/MINGW-packages/master/mingw-w64-webkitgtk3/0101-webkitgtk-2.4.3-gcc-asm.all.patch\n\nRUN cd /root/rpmbuild/SPECS && \\\n    rpmbuild -ba mingw-webkitgtk3.spec\n\nRUN sudo rpm -i /root/rpmbuild/RPMS/noarch/mingw64-webkitgtk3-2.4.9-1.fc23.noarch.rpm\n\nRUN rm -rf /root/rpmbuild\nRUN sudo dnf clean all\n\nRUN wget https://winetricks.org/winetricks && \\\n    sudo cp winetricks /usr/bin && \\\n    sudo chmod +x /usr/bin/winetricks\n\n# Install pkg-config for using in Wine and Windows\nRUN wget https://pkgconfig.freedesktop.org/releases/pkg-config-0.28.tar.gz && \\\n    tar -xzf pkg-config-0.28.tar.gz && \\\n    cd pkg-config-0.28 && \\\n    mingw64-configure && \\\n    make && \\\n    sudo make install && \\\n    make clean && \\\n    rm -rf pkg-config-0.28.tar.gz pkg-config-0.28\n\n# Fix the broken pkg-config files (it is important to use ${prefix} or they will not work\n# when used on Windows or in Wine:\nRUN grep -lZ '^Cflags:.*-I/usr/x86_64-w64-mingw32/sys-root/mingw' /usr/x86_64-w64-mingw32/sys-root/mingw/lib/pkgconfig/*.pc | xargs -0 -l sudo sed -i.bak -e '/^Cflags:/ s|-I/usr/x86_64-w64-mingw32/sys-root/mingw|-I${prefix}|g'\n\n# Initialize Wine:\nRUN wineboot && wine cmd /C echo \"Wine OK\" && wineserver -w && \\\n    ( export WINEPREFIX=~/.wine32 && export WINEARCH=win32 && \\\n      wineboot && wine cmd /C echo \"Wine 32 OK\" && xvfb-run winetricks --unattended dotnet40 corefonts && wineserver -w \\\n    )\n\nENV GHCVER 7.10.3\n\n# Install Windows version of GHC (but not the old mingw that comes with it):\nRUN cd ~/.wine/drive_c && \\\n    wget https://www.haskell.org/ghc/dist/$GHCVER/ghc-$GHCVER-x86_64-unknown-mingw32.tar.xz && \\\n    tar -xJf ghc-$GHCVER-x86_64-unknown-mingw32.tar.xz && \\\n    rm -rf ghc-*/mingw && \\\n    rm ghc-*-x86_64-unknown-mingw32.tar.xz\n\n# Use `wine regedit` to add a `Path` to `HKEY_CURRENT_USER\\Environment`:\nRUN ( echo 'REGEDIT4' && \\\n      echo && \\\n      echo '[HKEY_CURRENT_USER\\Environment]' && \\\n      echo '\"Path\"=\"C:\\\\users\\\\root\\\\Application Data\\\\cabal\\\\bin;C:\\\\ghc-'$GHCVER'\\\\bin;C:\\\\bin;Z:\\\\usr\\\\x86_64-w64-mingw32\\\\sys-root\\\\mingw\\\\bin;%PATH%\"') > Environment.reg && \\\n    wine regedit Environment.reg && \\\n    ( echo 'REGEDIT4' && \\\n      echo && \\\n      echo '[HKEY_CURRENT_USER\\Environment]' && \\\n      echo '\"Path\"=\"C:\\\\users\\\\root\\\\Application Data\\\\cabal\\\\bin;C:\\\\ghc-'$GHCVER'\\\\bin;C:\\\\bin;Z:\\\\usr\\\\i686-w64-mingw32\\\\sys-root\\\\mingw\\\\bin;%PATH%\"') > Environment.reg && \\\n    ( export WINEPREFIX=~/.wine32 && export WINEARCH=win32 && \\\n      wine regedit Environment.reg && wineserver -w \\\n    ) && \\\n    rm Environment.reg\n\n# Replace the MinGW that comes with GHC:\nRUN cd ~/.wine/drive_c/ghc-$GHCVER && \\\n    wget https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/4.9.2/threads-posix/seh/x86_64-4.9.2-release-posix-seh-rt_v4-rev2.7z && \\\n    7za x x86_64-4.9.2-release-posix-seh-rt_v4-rev2.7z && \\\n    mv mingw64 mingw && \\\n    rm -rf x86_64-4.9.2-release-posix-seh-rt_v4-rev2.7z\n\n# Install WiX Toolset:\nADD wix39-binaries.zip /root/\nRUN mkdir ~/.wine32/drive_c/bin && \\\n    cd ~/.wine32/drive_c/bin && \\\n    unzip ~/wix39-binaries.zip && \\\n    rm ~/wix39-binaries.zip\n\n# Install 64bit Windows version of cabal-install:\nRUN mkdir ~/.wine/drive_c/bin && \\\n    cd ~/.wine/drive_c/bin && \\\n    wget https://leksah.org/packages/cabal-mingw64.7z && \\\n    7za x cabal-mingw64.7z && \\\n    rm cabal-mingw64.7z\n\n# Run `cabal update` and install some packages we will need.\n# Some packages need us to run `mingw64-configure` manually (after `wine cabal configure` fails):\nRUN wineserver -p1 && \\\n    cabal update && \\\n    wine cabal update && \\\n    wine cabal install Cabal && \\\n    wine cabal install old-locale && \\\n    cabal unpack network && \\\n    cd network-* && \\\n    (wine cabal configure || true) && \\\n    mingw64-configure && \\\n    wine cabal build && \\\n    wine cabal copy && \\\n    wine cabal register && \\\n    cd .. && \\\n    cabal unpack old-time && \\\n    cd old-time-* && \\\n    (wine cabal configure || true) && \\\n    mingw64-configure && \\\n    wine cabal build && \\\n    wine cabal copy && \\\n    wine cabal register && \\\n    cd .. && \\\n    wine cabal install alex happy && \\\n    wine cabal install gtk2hs-buildtools && \\\n    wineserver -w && \\\n    rm -rf network-* old-time-*\n\n# Install fonts to bundle with Leksah\nRUN sudo dnf -y install \\\n                   dejavu-sans-fonts \\\n                   dejavu-serif-fonts \\\n                   dejavu-sans-mono-fonts \\\n                   dejavu-lgc-sans-fonts \\\n                   dejavu-lgc-serif-fonts \\\n                   dejavu-lgc-sans-mono-fonts && \\\n    sudo dnf clean all && \\\n    mkdir -p ~/.wine32/drive_c/dejavu-fonts/ttf && \\\n    ln -s /usr/share/fonts/dejavu/* ~/.wine32/drive_c/dejavu-fonts/ttf\n\n# Install grep to bundle with Leksah:\nRUN mkdir grep && \\\n    cd grep && \\\n    wget https://sourceforge.net/projects/mingw/files/MSYS/Base/grep/grep-2.5.4-2/grep-2.5.4-2-msys-1.0.13-bin.tar.lzma && \\\n    tar --lzma -xvf grep-2.5.4-2-msys-1.0.13-bin.tar.lzma && \\\n    sudo cp bin/*grep.exe /usr/x86_64-w64-mingw32/sys-root/mingw/bin && \\\n    rm grep-2.5.4-2-msys-1.0.13-bin.tar.lzma\n\nRUN wineserver -p1 && \\\n    wine cabal update && \\\n    wineserver -w\n\nRUN wineserver -p1 && \\\n    wine cabal install shakespeare lens hlint hscolour && \\\n    wineserver -w\n\nRUN git clone https://github.com/haskell-gi/haskell-gi-base.git && \\\n    git clone https://github.com/haskell-gi/haskell-gi.git && \\\n    git clone https://github.com/ghcjs/jsaddle.git && \\\n    git clone https://github.com/ghcjs/jsaddle-dom.git && \\\n    git clone https://github.com/ghcjs/ghcjs-dom.git\n\nRUN sudo dnf copr -y enable petersen/ghc-$GHCVER\nRUN sudo dnf install -y ghc cabal-install\nRUN cabal install happy alex\n\nRUN ghc-pkg list\n\nRUN cabal install ./haskell-gi-base ./haskell-gi --force-reinstalls\n\nRUN cd haskell-gi/bindings && \\\n    LANG=en_GB.UTF-8 PATH=/root/.cabal/bin:$PATH ./genBindings.sh\n\n# Add Leksah files to Docker:\nADD leksah.cabal LICENSE LICENSE.rtf Readme.md Setup.lhs SetupLocale.lhs sources.txt leksah/\n\n# Docker has no way to COPY or ADD two directories at once!?!?\nADD bew leksah/bew\nADD data leksah/data\nADD doc leksah/doc\nADD language-specs leksah/language-specs\nADD linux leksah/linux\nADD main leksah/main\nADD osx leksah/osx\nADD pics leksah/pics\nADD po leksah/po\nADD scripts leksah/scripts\nADD src leksah/src\nADD tests leksah/tests\nADD vendor leksah/vendor\nADD win32 leksah/win32\n\nRUN wineserver -p1 && \\\n    rm -rf haskell-gi-base/dist && \\\n    wine cabal install \\\n                 ./haskell-gi-base \\\n                 ./haskell-gi/bindings/GLib \\\n                 ./haskell-gi/bindings/Gdk \\\n                 ./haskell-gi/bindings/Gtk \\\n                 ./haskell-gi/bindings/Atk \\\n                 ./haskell-gi/bindings/GdkPixbuf \\\n                 ./haskell-gi/bindings/Pango \\\n                 ./haskell-gi/bindings/Cairo \\\n                 ./haskell-gi/bindings/PangoCairo \\\n                 ./haskell-gi/bindings/WebKit \\\n                 ./haskell-gi/bindings/Gio \\\n                 ./haskell-gi/bindings/JavaScriptCore-3.0 \\\n                 ./haskell-gi/bindings/GtkSource \\\n                 ./haskell-gi/bindings/Notify \\\n                 ./haskell-gi/bindings/GObject \\\n                 ./haskell-gi/bindings/Soup && \\\n    wineserver -w\n\nRUN git clone https://github.com/gtk2hs/gi-gtk-hs.git\n\nRUN wineserver -p1 && \\\n    rm -rf haskell-gi-base/dist && \\\n    wine cabal install \\\n                 ./gi-gtk-hs ./jsaddle ./jsaddle-dom ./ghcjs-dom \\\n                 ./leksah/vendor/haskellVCSGUI/vcsgui && \\\n    wineserver -w\n\n# Build leksah and make the MSI file:\nRUN wineserver -p1 && \\\n    cd leksah && \\\n    ./win32/makeinstaller.sh && \\\n    wineserver -w\n\n"
}