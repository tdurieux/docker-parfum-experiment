{
  "startTime": 1674240537276,
  "endTime": 1674240537593,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 126
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=ubuntu:18.04\nFROM $BASE_IMAGE\n\nLABEL maintainer=\"contact@dongyue.io\"\n\n# https://github.com/dyweb/gommon/issues/98\nRUN \\\n    export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get update \\\n    && apt-get upgrade -y --no-install-recommends \\\n    && apt-get install -y --no-install-recommends \\\n        bash \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        wget \\\n        git-core \\\n        ssh-client \\\n        man \\\n        vim \\\n        zip \\\n        unzip \\\n        tmux \\\n        netcat \\\n        telnet \\\n        tree \\\n        strace \\\n    && apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nENV GOPATH=/go\nENV PATH=$GOPATH/bin:/usr/local/go/bin:$PATH\n# TODO: do we need chmod -R 777 like https://github.com/docker-library/golang/blob/master/Dockerfile-debian.template\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\"\n\nARG BUILD_GO_VERSION=1.11.2\n\n# glide no longer have release, just hard code it to latest version\nENV GO_VERSION=$BUILD_GO_VERSION \\\n    GLIDE_VERSION=v0.13.2\n\n# TODO: might put glide under GOPATH/bin\nRUN \\\n    curl -f -L https://dl.google.com/go/go$GO_VERSION.linux-amd64.tar.gz | tar -C /usr/local -xz \\\n    && curl -f -sSL https://github.com/Masterminds/glide/releases/download/$GLIDE_VERSION/glide-$GLIDE_VERSION-linux-amd64.tar.gz \\\n       | tar -vxz -C /usr/local/bin --strip=1 \\\n    && rm /usr/local/bin/README.md /usr/local/bin/LICENSE\n\n# TODO: install dep may have problem when go mod is enabled ...\n# dep releases are way behind master, so we install from source\nRUN go get -u -v github.com/golang/dep/cmd/dep \\\n    && go get -u -v golang.org/x/tools/cmd/goimports\n\nWORKDIR $GOPATH"
}