{
  "startTime": 1674252305323,
  "endTime": 1674252305387,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.3.3\n\nRUN apt-get update -qq && \\\n    apt-get install --no-install-recommends -y \\\n        build-essential \\\n        libpq-dev \\\n        nodejs \\\n        rsync && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nARG env=development\n\nWORKDIR /app\nCOPY /app /app/app\nCOPY /bin /app/bin\nCOPY /config /app/config\nCOPY /db /app/db\nCOPY /lib /app/lib\nCOPY /public /app/public\nCOPY /spec /app/spec\nCOPY /config.ru /app/\nCOPY /Gemfile /app/\nCOPY /Gemfile.lock /app/\nCOPY /Rakefile /app/\nCOPY /gen-sitemaps-and-run.sh /app/gen-sitemaps-and-run.sh\n# files could be mounted in dev for realtime code changes without rebuild\n# typically that would be: .:/app\n\n# copy build cache for the requested environment only\nCOPY /build-cache/$env/bundle/ /usr/local/bundle/\n\nRUN mkdir /var/www && \\\n    chown -R www-data /app /var/www /usr/local/bundle\n\nUSER www-data\n\n# install a matching bundler to Gemfile.lock\nRUN gem install bundler -v 1.17.2\n\n# install all gems\nARG env=development\nARG bundle_opts=\n\nENV RAILS_ENV $env\nENV RACK_ENV $env\n\nRUN echo \"Running \\\"bundle install $bundle_opts\\\" with environment set to \\\"$env\\\"...\" && \\\n    bundle install $bundle_opts\n\nEXPOSE 3000\n\nENTRYPOINT [\"bundle\", \"exec\"]\nCMD [\"./gen-sitemaps-and-run.sh\"]\n"
}