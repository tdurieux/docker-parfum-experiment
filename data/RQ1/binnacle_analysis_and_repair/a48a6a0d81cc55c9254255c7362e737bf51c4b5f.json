{
  "startTime": 1674246166282,
  "endTime": 1674246166507,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.8 as builder\n\n# Let's create the builder\n\nRUN apk add --update --no-cache \\\n    ca-certificates \\\n    autoconf \\\n    automake \\\n    build-base \\\n    libressl \\\n    libtool \\\n    gmp-dev \\\n    python \\\n    python-dev \\\n    python3 \\\n    sqlite-dev \\\n    wget \\\n    git \\\n    file \\\n    gnupg \\\n    swig \\\n    zlib-dev\n\nARG CORE_VERSION=\"0.17.1\"\nENV TARBALL bitcoin-${CORE_VERSION}-x86_64-linux-gnu.tar.gz\nENV URL https://bitcoincore.org/bin/bitcoin-core-${CORE_VERSION}\n\nRUN wget ${URL}/SHA256SUMS.asc \\\n && gpg --batch --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys \"01EA5486DE18A882D4C2684590C8019E36C2E964\" \\\n && gpg --batch --verify SHA256SUMS.asc \\\n && wget ${URL}/${TARBALL} \\\n && grep ${TARBALL} SHA256SUMS.asc | sha256sum -c - \\\n && tar -xzC . -f ${TARBALL} bitcoin-${CORE_VERSION}/bin/bitcoin-cli --strip-components=2 \\\n && rm -rf ${TARBALL} SHA256SUMS.asc \\\n && apk del gnupg\n\nENV LIGHTNINGD_VERSION=master\n\nARG DEVELOPER=1\nRUN git clone -b v0.7.0 --single-branch --recursive https://github.com/ElementsProject/lightning.git \\\n && cd lightning \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/tmp/lightning_install \\\n && make -j3 DEVELOPER=${DEVELOPER} \\\n && make install\n\n# Let's create the actual image that will be run\n\nFROM alpine:3.8\n\n# Taking care of glibc shit (glibc not natively supported by Alpine but Bitcoin Core uses it)\n\nENV GLIBC_VERSION 2.27-r0\nENV GLIBC_SHA256 938bceae3b83c53e7fa9cc4135ce45e04aae99256c5e74cf186c794b97473bc7\nENV GLIBCBIN_SHA256 3a87874e57b9d92e223f3e90356aaea994af67fb76b71bb72abfb809e948d0d6\n# Download and install glibc (https://github.com/jeanblanchard/docker-alpine-glibc/blob/master/Dockerfile)\nRUN wget -O /etc/apk/keys/sgerrand.rsa.pub https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/sgerrand.rsa.pub \\\n && wget -O glibc.apk \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk\" \\\n && echo \"$GLIBC_SHA256  glibc.apk\" | sha256sum -c - \\\n && wget -O glibc-bin.apk \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk\" \\\n && echo \"$GLIBCBIN_SHA256  glibc-bin.apk\" | sha256sum -c - \\\n && apk add --update --no-cache glibc-bin.apk glibc.apk \\\n && /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib \\\n && echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf \\\n && rm -rf glibc.apk glibc-bin.apk\n\nRUN apk add --update --no-cache \\\n    gmp-dev \\\n    sqlite-dev \\\n    inotify-tools \\\n    socat \\\n    bash \\\n    zlib-dev \\\n    su-exec\n\nENV LIGHTNINGD_DATA=/.lightning\nENV LIGHTNINGD_RPC_PORT=9835\n\nVOLUME [\"/.bitcoin\", \"/.lightning\"]\n\nCOPY --from=builder /tmp/lightning_install/ /usr/local/\nCOPY --from=builder /bitcoin-cli /usr/bin\nCOPY bitcoin.conf /.bitcoin/bitcoin.conf\n\nEXPOSE 9735\n\nENTRYPOINT [\"su-exec\"]\n# docker run -d --rm --name cln -p 9735:9735 -v /home/pi/lndata:/.lightning clnimg `id -u lnuser`:`id -g lnuser` lightningd\n"
}