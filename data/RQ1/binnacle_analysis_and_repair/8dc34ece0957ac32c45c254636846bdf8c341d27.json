{
  "startTime": 1674243559889,
  "endTime": 1674243560095,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 169
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 169
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 169
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 193
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 121
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y wget lsb-release gcc g++ make cmake git-core libevent-dev libev-dev libssl-dev libffi-dev psmisc iptables zip unzip python-dev python-pip vim curl && rm -rf /var/lib/apt/lists/*;\n\n# Install libcouchbase binary\nRUN wget https://packages.couchbase.com/releases/couchbase-release/couchbase-release-1.0-6-amd64.deb\nRUN dpkg -i couchbase-release-1.0-6-amd64.deb\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y --allow-unauthenticated libcouchbase-dev libcouchbase2-bin build-essential && rm -rf /var/lib/apt/lists/*;\n\n\nWORKDIR /\nRUN git clone git://github.com/couchbase/testrunner.git\nWORKDIR testrunner\nARG BRANCH=master\nRUN git checkout $BRANCH\nRUN git pull origin $BRANCH\nRUN git fetch\nRUN git reset --hard origin/$BRANCH\n\n# install python deps\nRUN pip2 install --no-cache-dir --upgrade packaging appdirs\nRUN pip install --no-cache-dir -U pip setuptools\nRUN pip install --no-cache-dir paramiko && \\\n    pip install --no-cache-dir gevent && \\\n    pip install --no-cache-dir boto && \\\n    pip install --no-cache-dir httplib2 && \\\n    pip install --no-cache-dir pyyaml && \\\n    pip install --no-cache-dir couchbase && \\\n    pip install --no-cache-dir Geohash && \\\n    pip install --no-cache-dir pytz\n\nCOPY local.ini local.ini\nCOPY upgrade_local.ini upgrade_local.ini\nCOPY host2ip.sh host2ip.sh\nCOPY sync.sh sync.sh\nCOPY testrunner testrunner\nCOPY testrunner scripts/testrunner-docker\nRUN cp testrunner scripts/testrunner-orig\n\n# make sure tests use storage memory and avoid htp (for now)\nRUN sed -i 's/IS_CONTAINER.*/IS_CONTAINER = True/' lib/testconstants.py\nRUN sed -i 's/ALLOW_HTP.*/ALLOW_HTP=False/' lib/testconstants.py\nRUN echo git pull origin $BRANCH > /tmp/.pull\nRUN chmod +x /tmp/.pull\nENTRYPOINT [\"./testrunner\"]\n"
}