{
  "startTime": 1674239157580,
  "endTime": 1674239158983,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nMAINTAINER The Analytics-Zoo Authors https://github.com/intel-analytics/analytics-zoo\n\nWORKDIR /opt/work\n\nENV JAVA_7_HOME\t\t/opt/work/jdk7\nENV JAVA_8_HOME\t\t/opt/work/jdk8\nENV JAVA_HOME\t\t${JAVA_8_HOME}\nENV SCALA_HOME\t\t/opt/work/scala\nENV CONDA_HOME\t\t/opt/work/conda\nENV JENKINS_HOME\t/opt/work/jenkins\nENV SPARK_1_6_HOME      /opt/work/spark-1.6.3\nENV SPARK_2_1_HOME      /opt/work/spark-2.1.3\nENV SPARK_2_2_HOME      /opt/work/spark-2.2.2\nENV SPARK_2_3_HOME      /opt/work/spark-2.3.2\nENV SPARK_2_4_HOME      /opt/work/spark-2.4.0\nENV PATH                $SCALA_HOME/bin:${JAVA_HOME}/bin:${CONDA_HOME}/bin:${PATH}\nENV LANG \t\ten_US.UTF-8\nENV LC_ALL \t\ten_US.UTF-8\n\nADD ./run-slave.sh \t/opt/work/jenkins/run-slave.sh\nADD ./slave.groovy \t/opt/work/jenkins/slave.groovy\n\nRUN apt-get update --fix-missing && \\\n    apt-get install --no-install-recommends -y vim curl nano wget unzip maven git bzip2 && \\\n    apt-get install --no-install-recommends -y locales && locale-gen en_US.UTF-8 && \\\n    apt-get install --no-install-recommends -y build-essential && \\\n    apt-get install --no-install-recommends -y protobuf-compiler libprotoc-dev && \\\n    apt-get install --no-install-recommends -y libgtk2.0-dev && rm -rf /var/lib/apt/lists/*;\n\n#jdk8\nRUN wget https://build.funtoo.org/distfiles/oracle-java/jdk-8u152-linux-x64.tar.gz && \\\n    gunzip jdk-8u152-linux-x64.tar.gz && \\\n    tar -xf jdk-8u152-linux-x64.tar -C /opt && \\\n    rm jdk-8u152-linux-x64.tar && \\\n    ln -s /opt/jdk1.8.0_152 ${JAVA_8_HOME} && \\\n#jdk7\n    wget https://build.funtoo.org/distfiles/oracle-java/jdk-7u80-linux-x64.tar.gz && \\\n    gunzip jdk-7u80-linux-x64.tar.gz && \\\n    tar -xf jdk-7u80-linux-x64.tar -C /opt && \\\n    rm jdk-7u80-linux-x64.tar && \\\n    ln -s /opt/jdk1.7.0_80 ${JAVA_7_HOME} && \\\n#scala\n    wget https://downloads.lightbend.com/scala/2.11.8/scala-2.11.8.tgz && \\\n    gunzip scala-2.11.8.tgz && \\\n    tar -xf scala-2.11.8.tar -C /opt && \\\n    rm scala-2.11.8.tar && \\\n    ln -s /opt/scala-2.11.8 ${SCALA_HOME} && \\\n#Jenkins\n    chmod a+x /opt/work/jenkins/run-slave.sh && \\\n    chmod a+x /opt/work/jenkins/slave.groovy && \\\n    wget https://repo.jenkins-ci.org/releases/org/jenkins-ci/main/remoting/3.14/remoting-3.14.jar && \\\n    mv remoting-3.14.jar ${JENKINS_HOME} && \\\n#spark 1.6.3 2.1.3 2.2.2 2.3.2 2.4.0\n    wget https://archive.apache.org/dist/spark/spark-1.6.3/spark-1.6.3-bin-hadoop2.6.tgz && \\\n    tar -xf spark-1.6.3-bin-hadoop2.6.tgz -C /opt/work && \\\n    rm spark-1.6.3-bin-hadoop2.6.tgz && \\\n    ln -s /opt/work/spark-1.6.3-bin-hadoop2.6 ${SPARK_1_6_HOME} && \\\n    wget https://archive.apache.org/dist/spark/spark-2.1.3/spark-2.1.3-bin-hadoop2.7.tgz && \\\n    tar -xf spark-2.1.3-bin-hadoop2.7.tgz -C /opt/work && \\\n    rm spark-2.1.3-bin-hadoop2.7.tgz && \\\n    ln -s /opt/work/spark-2.1.3-bin-hadoop2.7 ${SPARK_2_1_HOME} && \\\n    wget https://archive.apache.org/dist/spark/spark-2.2.2/spark-2.2.2-bin-hadoop2.7.tgz && \\\n    tar -xf spark-2.2.2-bin-hadoop2.7.tgz -C /opt/work && \\\n    rm spark-2.2.2-bin-hadoop2.7.tgz && \\\n    ln -s /opt/work/spark-2.2.2-bin-hadoop2.7 ${SPARK_2_2_HOME} && \\\n    wget https://archive.apache.org/dist/spark/spark-2.3.2/spark-2.3.2-bin-hadoop2.7.tgz && \\\n    tar -xf spark-2.3.2-bin-hadoop2.7.tgz -C /opt/work && \\\n    rm spark-2.3.2-bin-hadoop2.7.tgz && \\\n    ln -s /opt/work/spark-2.3.2-bin-hadoop2.7 ${SPARK_2_3_HOME} && \\\n    wget https://archive.apache.org/dist/spark/spark-2.4.0/spark-2.4.0-bin-hadoop2.7.tgz && \\\n    tar -xf spark-2.4.0-bin-hadoop2.7.tgz -C /opt/work && \\\n    rm spark-2.4.0-bin-hadoop2.7.tgz && \\\n    ln -s /opt/work/spark-2.4.0-bin-hadoop2.7 ${SPARK_2_4_HOME} && \\\n#cmake\n    wget https://cmake.org/files/v3.12/cmake-3.12.1.tar.gz && \\\n    tar xf cmake-3.12.1.tar.gz && \\\n    cd cmake-3.12.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j16 && \\\n    make install && \\\n    cd .. && \\\n#python-conda\n    wget https://repo.continuum.io/miniconda/Miniconda3-4.3.31-Linux-x86_64.sh && \\\n    /bin/bash Miniconda3-4.3.31-Linux-x86_64.sh -f -b -p ${CONDA_HOME} && \\\n    rm Miniconda3-4.3.31-Linux-x86_64.sh && \\\n    conda config --system --prepend channels conda-forge && \\\n    conda config --system --set auto_update_conda false && \\\n    conda config --system --set show_channel_urls true && \\\n    conda update --all --quiet --yes && \\\n    conda clean -tipsy && rm cmake-3.12.1.tar.gz\n\n#TENSORFLOW MODELS\nENV PYTHONPATH /opt/work/models/research/slim:${PYTHONPATH}\nRUN git clone https://github.com/tensorflow/models.git\n\n#keras=1.2.2\nRUN export TENSOR_FLOW_VERION=1.10.0 && \\\n    export KERAS_VERSION=1.2.2 && \\\n#py27\n    conda create -y -n py27 python=2.7 && \\\n    conda install -y -n py27 -c conda-forge mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter \\\n        plotly nltk twine pytest pytest-xdist h5py moviepy \\\n        libprotobuf tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION \\\n        typing protobuf numpy pyyaml mkl mkl-include mkl-service setuptools \\\n        cmake cffi robotframework requests networkx==2.2 tensorboard && \\\n    conda install -y -n py27 --channel https://conda.anaconda.org/menpo opencv3 && \\\n    conda install -y -n py27 -c mingfeima mkldnn && \\\n    conda install -y -n py27 -c pytorch pytorch-cpu=1.0.0 torchvision-cpu=0.2.1 && \\\n    /bin/bash -c \"source activate py27 && pip install onnx==1.3.0 && source deactivate\" && \\\n#py35\n    conda create -y -n py35 python=3.5 && \\\n    conda install -y -n py35 -c conda-forge mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter \\\n        plotly nltk twine pytest pytest-xdist h5py moviepy imageio-ffmpeg \\\n        typing numpy pyyaml mkl mkl-include mkl-service setuptools \\\n        cmake cffi robotframework requests networkx==2.2 tensorboard \\\n        libprotobuf protobuf tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION && \\\n    conda install -y -n py35 -c anaconda protobuf && \\\n    conda install -y -n py35 --channel https://conda.anaconda.org/menpo opencv3 && \\\n    conda install -y -n py35 -c mingfeima mkldnn && \\\n    conda install -y -n py35 -c pytorch pytorch-cpu=1.0.0 torchvision-cpu=0.2.1 && \\\n    /bin/bash -c \"source activate py35 && pip install onnx==1.3.0 && source deactivate\" && \\\n#py36\n    conda create -y -n py36 python=3.6 && \\\n    conda install -y -n py36 -c conda-forge mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter \\\n        plotly nltk twine pytest pytest-xdist h5py moviepy imageio-ffmpeg \\\n        typing numpy pyyaml mkl mkl-include mkl-service setuptools \\\n        cmake cffi robotframework requests networkx==2.2 tensorboard \\\n        libprotobuf protobuf tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION && \\\n    conda install -y -n py36 -c anaconda protobuf && \\\n    conda install -y -n py36 --channel https://conda.anaconda.org/menpo opencv3 && \\\n    conda install -y -n py36 -c mingfeima mkldnn && \\\n    conda install -y -n py36 -c pytorch pytorch-cpu=1.0.0 torchvision-cpu=0.2.1 && \\\n    /bin/bash -c \"source activate py36 && pip install onnx==1.3.0 && source deactivate\" && \\\n#keras=2.1.6\n    export TENSOR_FLOW_VERION=1.10.0 && \\\n    export KERAS_VERSION=2.1.6 && \\\n#py27k216\n    conda create -y -n py27k216 python=2.7 mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter && \\\n    conda install -y -n py27k216 plotly nltk twine pytest pytest-xdist h5py moviepy && \\\n    conda install -y -n py27k216 -c conda-forge tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION && \\\n    conda install -y -n py27k216 -c conda-forge opencv==3.4.1 && \\\n    conda install -y -n py27k216 typing protobuf numpy pyyaml mkl mkl-include setuptools cmake cffi && \\\n    conda install -y -n py27k216 -c mingfeima mkldnn && \\\n    conda install -y -n py27k216 -c conda-forge robotframework requests && \\\n#py35k216\n    conda create -y -n py35k216 python=3.5 mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter && \\\n    conda install -y -n py35k216 plotly nltk twine pytest pytest-xdist h5py moviepy && \\\n    conda install -y -n py35k216 -c conda-forge tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION && \\\n    conda install -y -n py35k216 -c conda-forge opencv==3.4.1 && \\\n    conda install -y -n py35k216 typing protobuf numpy pyyaml mkl mkl-include setuptools cmake cffi && \\\n    conda install -y -n py35k216 -c mingfeima mkldnn && \\\n    conda install -y -n py35k216 -c conda-forge robotframework requests && \\\n#py36k216\n    conda create -y -n py36k216 python=3.6 mkdocs scipy pandas scikit-learn matplotlib seaborn jupyter && \\\n    conda install -y -n py36k216 plotly nltk twine pytest pytest-xdist h5py moviepy && \\\n    conda install -y -n py36k216 -c conda-forge tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION && \\\n    conda install -y -n py36k216 -c conda-forge opencv==3.4.1 && \\\n    conda install -y -n py36k216 typing protobuf numpy pyyaml mkl mkl-include setuptools cmake cffi && \\\n    conda install -y -n py36k216 -c mingfeima mkldnn && \\\n    conda install -y -n py36k216 -c conda-forge robotframework requests\n\nCMD [\"/opt/work/jenkins/run-slave.sh\"]\n"
}