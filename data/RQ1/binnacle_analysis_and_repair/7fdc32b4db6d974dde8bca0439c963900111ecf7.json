{
  "startTime": 1674244491321,
  "endTime": 1674244491454,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 34,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "# Docker image for installing dependencies on Linux and running tests.\n# Build with:\n# docker build --tag=etheroll-linux --file=dockerfiles/Dockerfile-linux .\n# Run with:\n# docker run etheroll-linux /bin/sh -c 'make test'\n# Or using the entry point shortcut:\n# docker run etheroll-linux 'make test'\n# Or for interactive shell:\n# docker run -it --rm etheroll-linux\n# For running UI:\n# xhost +\"local:docker@\"\n# docker run -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix etheroll-linux 'make uitest'\nFROM ubuntu:18.04\n\nENV USER=\"user\"\nENV HOME_DIR=\"/home/${USER}\"\nENV WORK_DIR=\"${HOME_DIR}\"\n\n# configure locale\nRUN apt update -qq > /dev/null && apt install --yes --no-install-recommends \\\n    locales && \\\n    locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\n\n# install system dependencies\nRUN apt install --yes --no-install-recommends \\\n    build-essential \\\n    git \\\n    libsdl2-dev \\\n    libsdl2-image-dev \\\n    libsdl2-mixer-dev \\\n    libsdl2-ttf-dev \\\n    libssl-dev \\\n    lsb-release \\\n    make \\\n    pkg-config \\\n\tpython3 \\\n    python3-dev \\\n    sudo \\\n    tox \\\n    virtualenv && rm -rf /var/lib/apt/lists/*;\n\n# prepare non root env\nRUN useradd --create-home --shell /bin/bash ${USER}\n# with sudo access and no password\nRUN usermod -append --groups sudo ${USER}\nRUN echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\nUSER ${USER}\nWORKDIR ${WORK_DIR}\nCOPY . ${WORK_DIR}\n\nRUN sudo make system_dependencies\n# required by Kivy `App.user_data_dir`\nRUN mkdir ~/.config\nENTRYPOINT [\"./dockerfiles/start.sh\"]\n"
}