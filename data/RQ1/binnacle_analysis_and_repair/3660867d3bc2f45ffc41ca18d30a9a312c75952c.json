{
  "startTime": 1674235819473,
  "endTime": 1674235819603,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###########################################################\n#\n# Dockerfile for micro-dockerhub-hook\n#\n###########################################################\n\n# Setting the base to nodejs 10\nFROM mhart/alpine-node:10\n\n# Maintainer\nMAINTAINER Jonas Enge\n\n#### Begin setup ####\n\n# Installs docker\nRUN apk add --update --no-cache docker py-pip\nRUN apk add --no-cache bash bash-doc bash-completion\nRUN pip install --no-cache-dir docker-compose\n\n# Extra tools for native dependencies\n# RUN apk add --no-cache make gcc g++ python\n\n# Bundle app source\nENV WORKDIR /src\nCOPY . ${WORKDIR}\n\n# Change working directory\nWORKDIR \"${WORKDIR}\"\n\n# Install dependencies\nRUN npm install --production && npm cache clean --force;\n\n# Env variables\nENV SERVER_PORT ${PORT}\n# ENV TOKEN abc123\n# ENV DEBUG DISABLE\n\nEXPOSE ${PORT}\n\n# Startup\nENTRYPOINT npm start\n"
}