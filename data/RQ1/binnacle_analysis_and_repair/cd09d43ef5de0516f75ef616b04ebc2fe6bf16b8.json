{
  "startTime": 1674234826668,
  "endTime": 1674234826762,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build from official PHP image\nFROM php:7.1-cli\nCOPY config/php/app.ini ${PHP_INI_DIR}/conf.d/20-app.ini\n\n# Install Composer\nRUN DEBIAN_FRONTEND=noninteractive && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y git zlib1g-dev && \\\n    docker-php-ext-install -j$(nproc) zip && rm -rf /var/lib/apt/lists/*;\nCOPY --from=composer:latest /usr/bin/composer /usr/local/bin/composer\n\n# Install and configure XDebug\nRUN pecl install xdebug && docker-php-ext-enable xdebug\nCOPY config/php/xdebug.ini ${PHP_INI_DIR}/conf.d/xdebug.ini\n\n# Enable signal handling\nRUN docker-php-ext-install pcntl\n\n# Prepare for mounting the project's code as a volume\nVOLUME /opt\nWORKDIR /opt\n\n# Use a script as entrypoint\nCOPY script/docker-entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\n"
}