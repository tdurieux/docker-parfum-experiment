{
  "startTime": 1674243292303,
  "endTime": 1674243292495,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 5,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 76,
        "columnStart": 5,
        "columnEnd": 82
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM unocha/alpine-base-s6:%%UPSTREAM%%\n\nMAINTAINER Serban Teodorescu <teodorescu.serban@gmail.com>\n\n# based on ideas by: orakili <docker@orakili.net>\n# and: Pavel Litvinenko <gerasim13@gmail.com>\n# and: Adrian B. Danieli \"https://github.com/sickp\"\n\n# Parse arguments for the build command.\nARG VERSION\nARG VCS_URL\nARG VCS_REF\nARG BUILD_DATE\n\nENV NGINX_VERSION nginx-${VERSION}\nENV NGINX_UPLOADPROGRESS_VERSION master-HEAD\n\n# A little bit of metadata management.\n# See http://label-schema.org/\nLABEL org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.vendor=\"UN-OCHA\" \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.vcs-url=$VCS_URL \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.name=\"alpine-base-nginx-extras\" \\\n      org.label-schema.description=\"This service provides a base nginx platform with uploadprogress module.\" \\\n      org.label-schema.architecture=\"x86_64\" \\\n      org.label-schema.distribution=\"Alpine Linux\" \\\n      org.label-schema.distribution-version=\"3.6\" \\\n      info.humanitarianresponse.nginx=$VERSION \\\n      info.humanitarianresponse.nginx.modules=\"ssl realip addition sub sav flv mp4 gunzip gzip_static random_index secure_link stub_status auth_request threads stream ssl slice file-aio http_v2 uploadprogress\" \\\n      info.humanitarianresponse.nginx.uploadprogress=$NGINX_UPLOADPROGRESS_VERSION\n\nRUN build_pkgs=\"build-base git linux-headers openssl-dev pcre-dev wget zlib-dev\" \\\n  && runtime_pkgs=\"ca-certificates openssl pcre zlib\" \\\n  && apk add --update-cache ${build_pkgs} ${runtime_pkgs} \\\n  && cd /tmp \\\n  && git clone https://github.com/masterzen/nginx-upload-progress-module.git /tmp/nginx-upload-progress-module-${NGINX_UPLOADPROGRESS_VERSION} \\\n  && wget https://nginx.org/download/${NGINX_VERSION}.tar.gz \\\n  && tar xzf ${NGINX_VERSION}.tar.gz \\\n  && cd /tmp/${NGINX_VERSION} \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/etc/nginx \\\n    --sbin-path=/usr/sbin/nginx \\\n    --conf-path=/etc/nginx/nginx.conf \\\n    --error-log-path=/var/log/nginx/error.log \\\n    --http-log-path=/var/log/nginx/access.log \\\n    --pid-path=/var/run/nginx.pid \\\n    --lock-path=/var/run/nginx.lock \\\n    --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n    --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n    --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n    --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n    --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n    --user=nginx \\\n    --group=nginx \\\n    --with-http_ssl_module \\\n    --with-http_realip_module \\\n    --with-http_addition_module \\\n    --with-http_sub_module \\\n    --with-http_dav_module \\\n    --with-http_flv_module \\\n    --with-http_mp4_module \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_random_index_module \\\n    --with-http_secure_link_module \\\n    --with-http_stub_status_module \\\n    --with-http_auth_request_module \\\n    --with-threads \\\n    --with-stream \\\n    --with-stream_ssl_module \\\n    --with-http_slice_module \\\n    --with-file-aio \\\n    --with-http_v2_module \\\n    --add-module=/tmp/nginx-upload-progress-module-${NGINX_UPLOADPROGRESS_VERSION} \\\n  && make \\\n  && make install \\\n  && sed -i -e 's/#access_log  logs\\/access.log  main;/access_log \\/dev\\/stdout;/' -e 's/#error_log  logs\\/error.log  notice;/error_log stderr notice;/' /etc/nginx/nginx.conf \\\n  && adduser -D nginx \\\n  && rm -rf /tmp/* \\\n  && apk del ${build_pkgs} \\\n  && rm -rf /var/cache/apk/* \\\n  && nginx -V && rm ${NGINX_VERSION}.tar.gz\n"
}