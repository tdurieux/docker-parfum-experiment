{
  "startTime": 1674245929440,
  "endTime": 1674245929602,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 188
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lambci/lambda:build-python3.6\n\nENV LIBMAXMINDDB_VERSION=1.3.2\n\n# Compilation work for libmaxminddb\nRUN mkdir -p \"/tmp/libmaxminddb-${LIBMAXMINDDB_VERSION}-build\"\nWORKDIR \"/tmp/libmaxminddb-${LIBMAXMINDDB_VERSION}-build\"\nRUN curl -f -L -o \"libmaxminddb-${LIBMAXMINDDB_VERSION}.tar.gz\" \"https://github.com/maxmind/libmaxminddb/releases/download/${LIBMAXMINDDB_VERSION}/libmaxminddb-${LIBMAXMINDDB_VERSION}.tar.gz\"\nRUN tar xf \"libmaxminddb-${LIBMAXMINDDB_VERSION}.tar.gz\" && rm \"libmaxminddb-${LIBMAXMINDDB_VERSION}.tar.gz\"\nWORKDIR \"/tmp/libmaxminddb-${LIBMAXMINDDB_VERSION}-build/libmaxminddb-${LIBMAXMINDDB_VERSION}\"\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/\nRUN make -j 8\nRUN make install\nRUN ldconfig\n\n# Compilation work for python maxminddb & geoip2 libraries\nRUN pip install --no-cache-dir \\\n  --target=/opt/python/ \\\n  --global-option=build_ext --global-option=\"-L/var/lang/lib:/opt/lib\" \\\n  --global-option=build_ext --global-option=\"-I/var/lang/include/python3.6m:/opt/include\" \\\n  maxminddb --global-option=\"-L/var/lang/lib:/opt/lib\" \\\n  --global-option=build_ext --global-option=\"-I/var/lang/include/python3.6m:/opt/include\" \\\n  maxminddb --global-option=build_ext --global-option=\"-I/var/lang/include/python3.6m:/opt/include\" \\\n  maxminddb --global-option=\"-I/var/lang/include/python3.6m:/opt/include\" \\\n  maxminddb\nRUN pip install --no-cache-dir --target=/opt/python/ geoip2\n\n# Download the DBs!\nRUN mkdir /opt/maxminddb\nWORKDIR /opt/maxminddb\nRUN curl -f https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz | tar xz\nRUN curl -f https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz | tar xz\nRUN curl -f https://geolite.maxmind.com/download/geoip/database/GeoLite2-ASN.tar.gz | tar xz\nRUN mv */*.mmdb . && rm -r GeoLite2-{ASN,City,Country}_*/\n\n# set workdir back\nWORKDIR /var/task\n"
}