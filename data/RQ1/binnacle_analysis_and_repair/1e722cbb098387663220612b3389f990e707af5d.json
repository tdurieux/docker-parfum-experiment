{
  "startTime": 1674251276993,
  "endTime": 1674251277565,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 1,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 1,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 1,
        "columnEnd": 68
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 67,
        "columnStart": 1,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 1,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 1,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker.io/python:3-alpine\nMAINTAINER Ondrej Barta <ondrej@ondrej.it>\n\nRUN \\\n\techo http://nl.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories && \\\n\tapk update && \\\n\tapk add \\\n\tbash \\\n\ttzdata \\\n\tlibass \\\n\tlibstdc++ \\\n\tlibpng \\\n\tlibjpeg \\\n\txvidcore \\\n\tx264-libs \\\n\tx265 \\\n\tlibvpx \\\n\tlibvorbis \\\n\topus \\\n\tlame \\\n\tfdk-aac \\\n\tfreetype && \\\n\n\t# Install build tools\n\tapk add --virtual build-deps \\\n\tcoreutils \\\n\tfdk-aac-dev \\\n\tfreetype-dev \\\n\tx264-dev \\\n\tx265-dev \\\n\tyasm \\\n\tyasm-dev \\\n\tlibogg-dev \\\n\tlibvorbis-dev \\\n\topus-dev \\\n\tlibvpx-dev \\\n\tlame-dev \\\n\txvidcore-dev \\\n\tlibass-dev \\\n\topenssl-dev \\\n\tmusl-dev \\\n\tmake \\\n\tcmake \\\n\tgcc \\\n\tg++ \\\n\tbuild-base \\\n\tlibjpeg-turbo-dev \\\n\tlibpng-dev \\\n\tlibjasper \\\n\tclang-dev \\\n\tclang \\\n\tlinux-headers \\\n\tgit \\\n\tcurl && \\\n\n\t# FFmpeg\n\texport SRC=/usr \\\n\texport FFMPEG_VERSION=3.4.1 \\\n\n\tDIR=$(mktemp -d) && cd ${DIR} && \\\n\tcurl -f -Os https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n\ttar xzvf ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n\tcd ffmpeg-${FFMPEG_VERSION} && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --extra-cflags=\"-I${SRC}/include\" --extra-ldflags=\"-L${SRC}/lib\" --bindir=\"${SRC}/bin\" \\\n\t\t--extra-libs=-ldl --enable-version3 --enable-libmp3lame --enable-pthreads --enable-libx264 --enable-libxvid --enable-gpl \\\n\t\t--enable-postproc --enable-nonfree --enable-avresample --enable-libfdk-aac --disable-debug --enable-small --enable-openssl \\\n\t\t--enable-libx265 --enable-libopus --enable-libvorbis --enable-libvpx --enable-libfreetype --enable-libass \\\n\t\t--enable-shared --enable-pic && \\\n\tmake -j8 && \\\n\tmake install && \\\n\tmake distclean && \\\n\thash -r && \\\n\tcd /tmp && \\\n\trm -rf ${DIR} && \\\n\n\t# PIP\n\tpip install --no-cache-dir \\\n\tCython==0.27.3 \\\n\tnumpy==1.14.0 \\\n\tPillow==5.0.0 \\\n\tav==0.3.3 && \\\n\n\t# OpenCV\n\texport OPENCV_VERSION=3.4.0 \\\n\texport CC=/usr/bin/clang \\\n\texport CXX=/usr/bin/clang++ \\\n\texport PYTHON_VERSION=`python -c 'import platform; print(\".\".join(platform.python_version_tuple()[:2]))'` && \\\n\n\tDIR=$(mktemp -d) && cd ${DIR} && \\\n\tcurl -f -sSL -Os https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz && \\\n\ttar xzvf ${OPENCV_VERSION}.tar.gz && \\\n\tcd opencv-${OPENCV_VERSION} && \\\n\tmkdir build && \\\n\tcd build && \\\n\tcmake -D CMAKE_BUILD_TYPE=RELEASE \\\n\t\t-D INSTALL_C_EXAMPLES=OFF \\\n\t\t-D INSTALL_PYTHON_EXAMPLES=OFF \\\n\t\t-D CMAKE_INSTALL_PREFIX=/usr/local \\\n\t\t-D BUILD_EXAMPLES=OFF \\\n\t\t-D BUILD_opencv_python3=ON \\\n\t\t-D PYTHON_DEFAULT_EXECUTABLE=/usr/local/bin/python3 \\\n\t\t-D PYTHON_INCLUDE_DIRS=/usr/local/include/python${PYTHON_VERSION}m \\\n\t\t-D PYTHON_EXECUTABLE=/usr/local/bin/python${PYTHON_VERSION} \\\n\t\t-D PYTHON_LIBRARY=/usr/local/lib/libpython${PYTHON_VERSION}m.so \\\n\t\t.. && \\\n\tmake -j8 && \\\n\tmake install && \\\n\tcd /tmp && \\\n\trm -rf ${DIR} && \\\n\n\t# Cleaning up\n\tapk del build-deps && \\\n\trm -rf /var/cache/apk/* && rm ffmpeg-${FFMPEG_VERSION}.tar.gz\n"
}