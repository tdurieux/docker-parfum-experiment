{
  "startTime": 1674236438865,
  "endTime": 1674236439400,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# 声明变量\nARG INSTALL_XDEBUG\n\n\n\n\nFROM php:7.1.9-fpm\n\nRUN echo \"deb http://mirrors.aliyun.com/debian/ stretch main non-free contrib\" > /etc/apt/sources.list \\\n    && echo \"deb-src http://mirrors.aliyun.com/debian/ stretch main non-free contrib\" >> /etc/apt/sources.list \\\n    && echo \"deb http://mirrors.aliyun.com/debian-security stretch/updates main\" >> /etc/apt/sources.list \\\n    && echo \"deb-src http://mirrors.aliyun.com/debian-security stretch/updates main\" >> /etc/apt/sources.list \\\n    && echo \"deb http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib\" >> /etc/apt/sources.list \\\n    && echo \"deb-src http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib\" >> /etc/apt/sources.list \\\n    && echo \"deb http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib\" >> /etc/apt/sources.list \\\n    && echo \"deb-src http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib\" >> /etc/apt/sources.list\n\n# 安装基础\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    curl \\\n    sudo \\\n    iputils-ping \\\n    libicu-dev \\\n    libmemcached-dev \\\n    libz-dev \\\n    libpq-dev \\\n    libjpeg-dev \\\n    libpng-dev \\\n    libfreetype6-dev \\\n    libssl-dev \\\n    libmcrypt-dev \\\n    libxml2-dev \\\n    libbz2-dev \\\n    libjpeg62-turbo-dev \\\n    git \\\n    vim \\\n    openssh-server \\\n    openssh-client \\\n    subversion \\\n  && rm -rf /var/lib/apt/lists/*\n\n# 安装PHP插件\nRUN docker-php-ext-configure bcmath --enable-bcmath \\\n    && docker-php-ext-configure pcntl --enable-pcntl \\\n    && docker-php-ext-configure pdo_mysql --with-pdo-mysql \\\n    && docker-php-ext-configure pdo_pgsql --with-pgsql \\\n    && docker-php-ext-configure mbstring --enable-mbstring \\\n    && docker-php-ext-configure soap --enable-soap \\\n    && docker-php-ext-install \\\n        bcmath \\\n        intl \\\n        mbstring \\\n        mysqli \\\n        pcntl \\\n        pdo_mysql \\\n        pdo_pgsql \\\n        soap \\\n        sockets \\\n        zip \\\n  && docker-php-ext-configure gd \\\n    --enable-gd-native-ttf \\\n    --with-jpeg-dir=/usr/lib \\\n    --with-freetype-dir=/usr/include/freetype2 && \\\n    docker-php-ext-install gd \\\n  && docker-php-ext-install opcache \\\n  && docker-php-ext-enable opcache\n\n## AST\n#RUN git clone https://github.com/nikic/php-ast /usr/src/php/ext/ast/ && \\\n#    docker-php-ext-configure ast && \\\n#    docker-php-ext-install ast\n\n# ICU - intl requirements for Symfony\n# Debian is out of date, and Symfony expects the latest - so build from source, unless a better alternative exists(?)\n#RUN curl -sS -o /tmp/icu.tar.gz -L http://download.icu-project.org/files/icu4c/58.2/icu4c-58_2-src.tgz \\\n#    && tar -zxf /tmp/icu.tar.gz -C /tmp \\\n#    && cd /tmp/icu/source \\\n#    && ./configure --prefix=/usr/local \\\n#    && make \\\n#    && make install\n\n#RUN docker-php-ext-configure intl --with-icu-dir=/usr/local \\\n#    && docker-php-ext-install intl\n\n# 安装 Redis 扩展\nCOPY ./redis-3.1.3.tgz /home/redis.tgz\nRUN pecl install /home/redis.tgz \\\n\t&& echo \"extension=redis.so\" > /usr/local/etc/php/conf.d/redis.ini\n\n# 安装 PHP Memcached 扩展\nRUN curl -f -L -o /tmp/memcached.tar.gz \"https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz\" \\\n  && mkdir -p memcached \\\n  && tar -C memcached -zxvf /tmp/memcached.tar.gz --strip 1 \\\n  && ( cd memcached \\\n    && phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make -j$(nproc) \\\n    && make install) \\\n\n  && rm -r memcached \\\n  && rm /tmp/memcached.tar.gz \\\n  && docker-php-ext-enable memcached\n\n\n# 安装 PHP MongoDB 扩展\n#RUN pecl install mongodb && \\\n#    docker-php-ext-enable mongodb\n\n\n# 复制 opcache 配置\nCOPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini\n\n\n# 安装xDebug,如果启用\nRUN if [ ${INSTALL_XDEBUG} = true ]; then \\\n    # 安装xdebug扩展\n    pecl install xdebug && \\\n    docker-php-ext-enable xdebug \\\n;fi\n\n\n# 复制xdebug信任用于远程调试\n# COPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\n\n# 复制时区配置\nCOPY ./timezone.ini /usr/local/etc/php/conf.d/timezone.ini\n\n# 设置时区\nRUN rm /etc/localtime\nRUN ln -s /usr/share/zoneinfo/Europe/London /etc/localtime\nRUN \"date\"\n\n\n# Short open tags fix - another Symfony requirements\nCOPY ./custom-php.ini /usr/local/etc/php/conf.d/custom-php.ini\n\n# Composer\nENV COMPOSER_HOME /var/www/.composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- \\\n    --install-dir=/usr/bin \\\n    --filename=composer\nRUN composer config -g repo.packagist composer https://packagist.laravel-china.org\n\nRUN chown -R www-data:www-data /var/www/\n\n# 用户公钥\n\nRUN mkdir /root/.ssh \\\n    && chown -R www-data:www-data /root/.ssh\n# RUN sudo ssh-keygen -t rsa -C \"kfkdock\"  -f ~/.ssh/id_dsa\n#RUN ssh-keygen -t rsa -C \"kfkdock\" -f /root/.ssh/id_rsa\n\n\n# 部署公钥\nRUN mkdir /var/www/.ssh \\\n    && chown -R www-data:www-data /var/www/.ssh\n#RUN sudo -Hu www-data ssh-keygen -t rsa  -f /var/www/.ssh/id_rsa\n\n# coding webhook 日志\nRUN mkdir /var/log/webhook \\\n    && chown -R www-data:www-data /var/log/webhook \\\n    && sudo -Hu www-data touch /var/log/webhook/coding_webhook.log\n\nRUN mkdir -p $COMPOSER_HOME/cache\n\nVOLUME $COMPOSER_HOME\nWORKDIR /var/www"
}