{
  "startTime": 1674245910830,
  "endTime": 1674245910885,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Caner Dagli\nRUN apt-get update -y && apt-get install --no-install-recommends -y python-pip python-dev build-essential git && rm -rf /var/lib/apt/lists/*;\nCOPY . /app\nWORKDIR /app\nRUN pip install --no-cache-dir -r requirements.txt\nENTRYPOINT [\"python\", \"run.py\"]\n\n# docker build -t flask-api-starter .\n#\n# For Development Container\n# docker run -dt --name=flask-api-starter -v $PWD:/app -p 5000:5000 -e 'WORK_ENV=DEV' flask-api-starter\n#\n# For Production Container\n# docker run -dt --restart=always --name=flask-api-starter -p 5000:5000 -e 'WORK_ENV=PROD' flask-api-starter\n#\n# Remove the container\n# docker rm -f flask-api-starter\n\n# docker logs --follow flask-api-starter\n# docker exec -it flask-api-starter bash\n"
}