{
  "startTime": 1674234666212,
  "endTime": 1674234666413,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nRUN apt-get update && apt-get install --no-install-recommends -y git wget gcc build-essential automake python && rm -rf /var/lib/apt/lists/*;\nRUN mkdir /code\n\n# build, install valgrind\nRUN wget -O /code/valgrind.tar.bz2 https://sourceware.org/pub/valgrind/valgrind-3.15.0.tar.bz2\nRUN cd /code && \\\n    tar jxf /code/valgrind.tar.bz2 && \\\n    mv valgrind-3.15.0 valgrind && rm /code/valgrind.tar.bz2\nRUN cd /code/valgrind && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=`pwd`/build && \\\n    make && \\\n    make install\n\n# clone taintgrind\nRUN cd /code/valgrind && \\\n    git clone https://github.com/wmkhoo/taintgrind\n\n# build capstone\nRUN cd /code/valgrind/taintgrind && \\\n    wget https://github.com/aquynh/capstone/archive/3.0.4.tar.gz -O capstone.tar.gz && \\\n    tar xf capstone.tar.gz && \\\n    sh configure_capstone.sh `pwd`/../build && \\\n    cd capstone-3.0.4 && \\\n    sh make_capstone.sh && rm capstone.tar.gz\n\n# build taintgrind\nRUN cd /code/valgrind/taintgrind && \\\n    ../autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=`pwd`/../build && \\\n    make && \\\n    make install && \\\n    make check\n\n# dispatch via entrypoint script\n# recommend mapping the /pwd volume, probably like (for ELF file):\n#\n#    docker run -it --rm -v $(pwd):/pwd taintgrind /pwd/someexe\nVOLUME /pwd\nWORKDIR /code/valgrind/taintgrind\nRUN chmod +x /code/valgrind/taintgrind/entrypoint.sh\nENTRYPOINT [\"/code/valgrind/taintgrind/entrypoint.sh\"]\n"
}