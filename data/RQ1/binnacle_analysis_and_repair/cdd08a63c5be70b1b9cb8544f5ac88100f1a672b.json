{
  "startTime": 1674246466693,
  "endTime": 1674246467209,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 105
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 8,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile for moodle\n#\nFROM appsvcorg/nginx-fpm:php7.3.1\nLABEL maintainer =\"Azure App Service Container Images <appsvc-images@microsoft.com>\"\n# ========\n# ENV vars\n# ========\n# ssh\nENV SSH_PASSWD \"root:Docker!\"\nENV SSH_PORT 2222\n#nginx\nENV NGINX_VERSION 1.14.0\nENV NGINX_LOG_DIR \"/home/LogFiles/nginx\"\n#php\nENV PHP_HOME \"/usr/local/etc/php\"\nENV PHP_CONF_DIR $PHP_HOME\nENV PHP_CONF_FILE $PHP_CONF_DIR\"/php.ini\"\n# mariadb\nENV MARIADB_DATA_DIR \"/home/data/mysql\"\nENV MARIADB_LOG_DIR \"/home/LogFiles/mysql\"\n# phpmyadmin\nENV PHPMYADMIN_SOURCE \"/usr/src/phpmyadmin\"\nENV PHPMYADMIN_HOME \"/home/phpmyadmin\"\n# moodle\nENV MOODLE_HOME \"/home/site/wwwroot\"\nENV MOODLE_SOURCE \"/usr/src/moodle\"\n# redis\nENV PHPREDIS_VERSION 4.2.0\n# memcached\nENV MEMCACHED_VERSION 1.5.12\nENV MEMCACHED_SHA1 f67096ba64b0c47668bcad5b680010c4f8987d4c\n#\nENV DOCKER_BUILD_HOME \"/dockerbuild\"\n# ====================\n# Download and Install\n# ~. tools\n# 1. redis\n# 2. moodle\n# ====================\nWORKDIR $DOCKER_BUILD_HOME\nRUN set -ex \\\n    # --------\n\t# ~. tools\n\t# --------\n    && apk update \\\n    && apk add --no-cache redis \\    \n\t# --------\n\t# 1. PHP extensions\n\t# -------- \n    && docker-php-source extract \\\n    && curl -f -L -o /tmp/redis.tar.gz https://github.com/phpredis/phpredis/archive/$PHPREDIS_VERSION.tar.gz \\\n    && tar xfz /tmp/redis.tar.gz \\\n    && rm -r /tmp/redis.tar.gz \\\n    && mv phpredis-$PHPREDIS_VERSION /usr/src/php/ext/redis \\\n    && apk add --no-cache                   \\\n            --virtual .build-dependencies   \\\n                $PHPIZE_DEPS                \\\n                zlib-dev                    \\\n                cyrus-sasl-dev              \\\n                git                         \\\n                autoconf                    \\\n                g++                         \\\n                libtool                     \\\n                make                        \\\n                pcre-dev                    \\    \n                tini                        \\\n                libintl                     \\\n                icu                         \\\n                icu-dev                     \\\n                libxml2-dev                 \\\n                postgresql-dev              \\\n                freetype-dev                \\\n                libjpeg-turbo-dev           \\\n                libpng-dev                  \\\n                gmp                         \\\n                gmp-dev                     \\\n                libmemcached-dev            \\\n                imagemagick-dev             \\\n                libssh2                     \\\n                libssh2-dev                 \\\n                libxslt-dev                 \\\n                libmemcached-libs           \\\n                zlib-dev                    \\\n                libzip-dev \\\n    # Install igbinary (memcached's deps)\n    && pecl install igbinary \\\n    # Install memcached\n    && ( pecl install --nobuild memcached && \\\n        cd \"$(pecl config-get temp_dir)/memcached\" && \\\n        phpize && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-memcached-igbinary && \\\n        make -j$(nproc) && \\\n        make install && \\\n        cd /tmp/) \\\n\n    && docker-php-ext-enable igbinary memcached \\\n    #   \n\t&& docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \\\n    && docker-php-ext-install -j \"$(nproc)\" gd zip redis xmlrpc soap intl \\\n    && find /usr/local/lib/php/extensions -name '*.a' -delete \\\n    && find /usr/local/lib/php/extensions -name '*.so' -exec strip --strip-all '{}' \\; \\\n    && runDeps=\"$( \\\n        scanelf --needed --nobanner --recursive \\\n        /usr/local/lib/php/extensions \\\n        | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n        | sort -u \\\n        | xargs -r apk info --installed \\\n        | sort -u \\\n    )\" \\\n    && apk add --virtual .phpext-rundeps $runDeps \\\n    && apk del .build-dependencies \\\n    && docker-php-source delete \\\n    # session_save_path\n    && mkdir -p /usr/local/php/tmp \\\n    && chmod 777 /usr/local/php/tmp \\\n    # ------------\t\n\t# ~. memcached\n\t# ------------\n    && addgroup -g 11211 memcache && adduser -D -u 11211 -G memcache memcache \\\n\t&& apk add --no-cache --virtual .build-deps \\\n\t\tca-certificates \\\n\t\tcoreutils \\\n\t\tcyrus-sasl-dev \\\n\t\tdpkg-dev dpkg \\\n\t\tgcc \\\n\t\tlibc-dev \\\n\t\tlibevent-dev \\\n\t\tlibressl \\\n\t\tlinux-headers \\\n\t\tmake \\\n\t\tperl \\\n\t\tperl-utils \\\n\t\ttar \\\n\t\twget \\\n\n\t&& wget -O memcached.tar.gz \"https://memcached.org/files/memcached-$MEMCACHED_VERSION.tar.gz\" \\\n\t&& echo \"$MEMCACHED_SHA1  memcached.tar.gz\" | sha1sum -c - \\\n\t&& mkdir -p /usr/src/memcached \\\n\t&& tar -xzf memcached.tar.gz -C /usr/src/memcached --strip-components=1 \\\n\t&& rm memcached.tar.gz \\\n\n\t&& cd /usr/src/memcached \\\n\n\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& enableExtstore=\"$( \\\n# https://github.com/docker-library/memcached/pull/38\n\t\tcase \"$gnuArch\" in \\\n# https://github.com/memcached/memcached/issues/381 \"--enable-extstore on s390x (IBM System Z mainframe architecture) fails tests\"\n\t\t\ts390x-*) ;; \\\n\t\t\t*) echo '--enable-extstore' ;; \\\n\t\tesac \\\n\t)\" \\\n\t&& ./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--enable-sasl \\\n\t\t$enableExtstore \\\n\t&& make -j \"$(nproc)\" \\\n\n# TODO https://github.com/memcached/memcached/issues/382 \"t/chunked-extstore.t is flaky on arm32v6\"\n\t&& make test \\\n\t&& make install \\\n\n\t&& cd / && rm -rf /usr/src/memcached \\\n\n\t&& runDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\" \\\n\t&& apk add --virtual .memcached-rundeps $runDeps \\\n\t&& apk del .build-deps \\\n\n\t&& memcached -V \\\n\t# ------------\t\n\t# ~. moodle\n\t# ------------\n    # git pull\n    && mkdir -p $MOODLE_SOURCE \\\n    # cp in final\t\n\t# ----------\n\t# ~. upgrade/clean up\n\t# ----------\n\t&& apk update \\\n\t&& apk upgrade \\\n\t&& rm -rf /var/cache/apk/* \\\n\t&& rm -rf /tmp/*\n# =========\n# Configure\n# =========\n# nginx\nCOPY default.conf /etc/nginx/conf.d/\n# =====\n# final\n# =====\nCOPY moodle_src/. $MOODLE_SOURCE/\n# php\nCOPY opcache-recommended.ini /usr/local/etc/php/conf.d/opcache-recommended.ini\nCOPY php.ini /usr/local/etc/php/php.ini\nCOPY xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\n# mariadb\nCOPY my.cnf /etc/mysql/my.cnf\n#\nCOPY entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/entrypoint.sh\nEXPOSE 2222 80\nENTRYPOINT [\"entrypoint.sh\"]\n"
}