{
  "startTime": 1674238770217,
  "endTime": 1674238770545,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 3,
        "columnEnd": 84
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE_VERSION=someversion\nFROM hilbert/base:${IMAGE_VERSION}\n\nMAINTAINER Oleksandr Motsak <malex984+hilbert.omd@gmail.com>\n\n# Install OMD, see http://labs.consol.de/OMD/\nRUN gpg --batch --keyserver keys.gnupg.net --recv-keys F8C1CA08A57B9ED7 && \\\n    gpg --batch --armor --export F8C1CA08A57B9ED7 | apt-key add - && \\\n    echo 'deb http://labs.consol.de/repo/stable/ubuntu trusty main' >> /etc/apt/sources.list\n\nRUN update.sh \\\n&& install.sh \\\n    ssl-cert libpython2.7 net-tools netcat xinetd at \\\n    time traceroute libsnmp-python dialog dnsutils \\\n    fping graphviz libapache2-mod-fcgid libapache2-mod-proxy-html \\\n    apache2-mpm-prefork apache2-utils \\\n    libboost-program-options1.54.0 libboost-system1.54.0 libdbi1 \\\n    libevent-1.4-2 libnet-snmp-perl libpango1.0-0 libreadline5 \\\n    libsnmp-perl mysql-server patch php5-cli \\\n    php5-cgi libradiusclient-ng2 php5-gd php5-mcrypt \\\n    php5-sqlite php-pear pyro rsync smbclient snmp unzip xvfb python-ldap \\\n&& wget \"https://files.omdistro.org/releases/1.30/omd-1.30.trusty.amd64.deb\" -P /tmp/ \\\n&& dpkg -i /tmp/omd-1.30.trusty.amd64.deb \\\n&& install.sh -fy \\\n&& clean.sh\n\n\n#### due to http://www.monitoring-portal.org/wbb/index.php?page=Thread&threadID=32891\n#### http://labs.consol.de/repo/testing/ubuntu (instead of stable)\n#### is supposed to provide Icinga 2...\n\n\n# Install the agent to monitor localhost\n## http://mathias-kettner.de/download/check-mk-agent_1.2.4p5-2_all.deb\n## check-mk-agent_1.2.4p5-2_all.deb\n\n\nRUN echo yes | omd setup\nRUN a2enmod proxy && a2enmod proxy_http\n# /usr/sbin/setsebool httpd_can_network_connect 1\n\n\n# Fix some stuff in apache: no change ulimit and give the server a name\nRUN echo \"APACHE_ULIMIT_MAX_FILES=true\" >> /etc/apache2/envvars\nRUN echo ServerName basic-docker-omd > /etc/apache2/conf-available/docker-servername.conf\nRUN a2enconf docker-servername\n\n\n### Fix warning in syslog-ng in ubuntu 13.10:\n## https://bugs.launchpad.net/ubuntu/+source/syslog-ng/+bug/1009920\n## RUN sed -i 's/^SYSLOGNG_OPTS.*/SYSLOGNG_OPTS=\"--no-caps --default-modules=affile,afprog,afsocket,afuser,basicfuncs,csvparser,dbparser,syslogformat\"/' /etc/default/syslog-ng\n\n\n#####################################################################################\n# Setup the initial OMD site 'default'\n#\n# This method is a little bit hacky, and I had to do some workarounds:\n#  1. tmpfs is not supported by standard docker (can be recompiled).\n#    In OMD can be disabled, but I don't know how to do it before initilize the site.\n#\n#    Solution: try to create the site and change the config after.\n#\n#  2. Second issue: the new user created by OMD needs to be in the group crontab\n#     to be able to change the cronjobs. But you need first to get the user to change it!\n\n# Set up a default site\nRUN omd create default || true\n\n### RUN sed \"s/CONFIG_TMPFS='on'/CONFIG_TMPFS='off'/\" -i /omd/sites/default/etc/omd/site.conf\n\n# * We don't want TMPFS as it requires higher privileges\n# * Accept connections on any IP address, since we get a random one\n\nRUN omd config default set TMPFS \"off\" && \\\n omd config default set ADMIN_MAIL \"malex984+omd@gmail.com\" && \\\n omd config default set LIVESTATUS_TCP \"on\" && \\\n omd config default set MKEVENTD \"on\"  && \\\n omd config default set NAGIOS_THEME \"classicui\"  && \\\n omd config default set NAGVIS_URLS \"nagios\"  && \\\n omd config default set NSCA \"on\"  && \\\n omd config default set PNP4NAGIOS \"on\"  && \\\n omd config default set APACHE_TCP_ADDR \"0.0.0.0\"  && \\\n omd config default set CORE \"nagios\"  && \\\n omd config default set CRONTAB \"on\"  && \\\n omd config default set DEFAULT_GUI \"welcome\"  && \\\n omd config default set DOKUWIKI_AUTH \"off\"\n# && \\\n# omd config default set MOD_GEARMAN \"off\"  && \\\n# omd config default set MONGODB \"off\"  && \\\n# omd config default set MULTISITE_AUTHORISATION \"off\"  && \\\n# omd config default set MULTISITE_COOKIE_AUTH \"off\"  && \\\n# omd config default set MYSQL \"off\"  && \\\n# omd config default set THRUK_COOKIE_AUTH \"off\"\n# omd config default set LIVESTATUS_TCP_PORT \"6557\" && \\\n# omd config default set APACHE_TCP_PORT \"5000\"  && \\\n# omd config default set AUTOSTART \"on\"  && \\\n# omd config default set NSCA_TCP_PORT \"5667\"  && \\\n# omd config default set APACHE_MODE \"own\"  && \\\n# && \\\n\n#RUN omd config default set TMPFS \"Cleaning up temp filesystem...OK\"\n# omd config default set MKEVENTD_SNMPTRAP \"off\"  && \\\n# omd config default set MKEVENTD_SYSLOG \"off\"  && \\\n# omd config default set MKEVENTD_SYSLOG_TCP \"off\"  && \\\n\n## RUN omd config default set CORE \"icinga\"\n## RUN omd config default set NAGVIS_URLS \"check_mk\"\nRUN omd config default show\n\n# Add the new user to crontab, to avoid error merging crontabs\nRUN adduser default crontab\n\n#####################################################################################\n# Initial configuration of the site and image\n\n# Add localhost as node monitored\n#?# ADD hosts.mk /omd/sites/default/etc/check_mk/conf.d/wato/hosts.mk\n\n# First OMD service discovery and compile\n# RUN /etc/init.d/xinetd start && su - default -c \"cmk -II\"\n# RUN su - default -c \"cmk -R\"\n####su - default -c 'cmd -u -II && cmk -R'\n\n# Fix some permission issues (not sure why it happens)\nRUN chown -R default.default /omd/sites/default\n\n# Set up runtime options\nEXPOSE 80\nEXPOSE 514\nEXPOSE 6556\nEXPOSE 5667\nEXPOSE 5000\n\n# http://omdistro.org/doc/generic_quickstart\n# http://omdistro.org/doc/configuration_basics\n# http://omdistro.org/start\n\n# check the web frontend: http://myhost/mysite/nagios. The default web user is omdadmin / omd\n# To find out the IP address, run ip addr in the container shell.\n\n# omd status\n# cat  /etc/apache2/conf.d/zzz_omd.conf\n# omd create foo\n# omd create mysite && omd start foo\n# mount\n\n\n\n# Add scripts to start services in baseimage my_init:\n## COPY 10_startup_base_services 20_startup_omd_master /etc/my_init.d/\nCOPY omd_entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/omd_entrypoint.sh\n\n## ENTRYPOINT [\"omd_entrypoint.sh\"]\n\n############## https://github.com/SpringerSBM/basic-docker-omd\n\n\n\n\nARG GIT_NOT_CLEAN_CHECK\n# Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE=someday\nARG VCS_REF=HEAD\nARG VCS_URL=\"https://github.com/hilbert/hilbert-docker-images\"\n\nARG DOCKERFILE=\"/images/omd/Dockerfile\"\nLABEL org.label-schema.description=\"containes pre-cofigured OMD service instance\" \\\n      org.label-schema.build-date=\"${BUILD_DATE}\" \\\n      org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n      org.label-schema.vcs-url=\"${VCS_URL}\" \\\n      org.label-schema.version=\"${IMAGE_VERSION}\" \\\n      com.microscaling.docker.dockerfile=\"${DOCKERFILE}\" \\\n      IMAGE_VERSION=\"${IMAGE_VERSION}\" \\\n      GIT_NOT_CLEAN_CHECK=\"${GIT_NOT_CLEAN_CHECK}\" \\\n      org.label-schema.name=\"Hilbert\" \\\n      org.label-schema.vendor=\"IMAGINARY gGmbH\" \\\n      org.label-schema.url=\"https://hilbert.github.io\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      com.microscaling.license=\"Apache-2.0\"    \n\nONBUILD LABEL org.label-schema.build-date=\"\" \\\n      org.label-schema.name=\"\" \\\n      org.label-schema.description=\"\" \\\n      org.label-schema.vendor=\"\" \\\n      org.label-schema.url=\"\" \\\n      org.label-schema.vcs-ref=\"\" \\\n      org.label-schema.vcs-url=\"\" \\\n      org.label-schema.version=\"\" \\\n      org.label-schema.schema-version=\"\" \\\n      com.microscaling.license=\"\" \\\n      com.microscaling.docker.dockerfile=\"\" \\\n      IMAGE_VERSION=\"\" \\\n      GIT_NOT_CLEAN_CHECK=\"\"\n\n"
}