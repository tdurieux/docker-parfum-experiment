{
  "startTime": 1674239086383,
  "endTime": 1674239086658,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 220
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 62,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 62,
        "columnStart": 22,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\nLABEL Description=\"Aktualizr testing dockerfile for Ubuntu Bionic with p11\"\n\nENV DEBIAN_FRONTEND noninteractive\n\n# It is important to run these in the same RUN command, because otherwise\n# Docker layer caching breaks us\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n  apt-transport-https \\\n  autoconf \\\n  asn1c \\\n  automake \\\n  bison \\\n  clang-format-6.0 \\\n  cmake \\\n  curl \\\n  e2fslibs-dev \\\n  fiu-utils \\\n  g++ \\\n  gcc \\\n  git \\\n  lcov \\\n  libarchive-dev \\\n  libboost-dev \\\n  libboost-log-dev \\\n  libboost-program-options-dev \\\n  libboost-system-dev \\\n  libboost-test-dev \\\n  libboost-thread-dev \\\n  libcurl4-openssl-dev \\\n  libdpkg-dev \\\n  libengine-pkcs11-openssl \\\n  libexpat1-dev \\\n  libffi-dev \\\n  libfiu-dev \\\n  libfuse-dev \\\n  libglib2.0-dev \\\n  libgpgme11-dev \\\n  libgtest-dev \\\n  liblzma-dev \\\n  libp11-3 \\\n  libp11-dev \\\n  libsodium-dev \\\n  libsqlite3-dev \\\n  libssl-dev \\\n  libsystemd-dev \\\n  libtool \\\n  lshw \\\n  make \\\n  opensc \\\n  net-tools \\\n  pkg-config \\\n  psmisc \\\n  python3-dev \\\n  python3-gi \\\n  python3-openssl \\\n  python3-pip \\\n  python3-venv \\\n  softhsm2 \\\n  sqlite3 \\\n  valgrind \\\n  wget \\\n  zip && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /ostree\nRUN git init && git remote add origin https://github.com/ostreedev/ostree\nRUN git fetch origin v2018.9 && git checkout FETCH_HEAD\nRUN NOCONFIGURE=1 ./autogen.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CFLAGS='-Wno-error=missing-prototypes' --with-libarchive --disable-gtk-doc --disable-gtk-doc-html --disable-gtk-doc-pdf --disable-man --with-builtin-grub2-mkconfig --with-curl --without-soup --prefix=/usr\nRUN make VERBOSE=1 -j4\nRUN make install\n\nRUN pip3 install --no-cache-dir awscli\n\nRUN useradd testuser\n\nWORKDIR /\n"
}