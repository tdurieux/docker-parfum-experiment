{
  "startTime": 1674250336724,
  "endTime": 1674250336786,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base image\nFROM node:6\n\n# Install yarn\n# N.B. - We don't use the preferred method because it has to be implemented\n# differently on different platforms (depending on whether sudo is preset)\nRUN npm install --global yarn && npm cache clean --force;\n\n# Create app directory\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# ARG NPM_TOKEN\n# RUN yarn config set always-auth true\n# RUN yarn config set scope @xogeny\n# RUN yarn config set '//registry.npmjs.org/:_authToken' $NPM_TOKEN\n# RUN yarn config set registry https://registry.npmjs.org\n# RUN echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc\n# RUN cat ~/.npmrc\n\nCOPY . /usr/src/app\n\n# Install dependencies using Yarn\nRUN yarn install --ignore-optional && yarn cache clean;\n\n# Now get rid of the embedded \"secret\" used to access private repositories\nRUN rm -f .npmrc\n\n# Ports to EXPOSE\nEXPOSE 3000\n\n# NPM Scripts to run *during build*\nRUN npm run compile\n\nCMD [ \"npm\", \"run\", \"server\" ]\n"
}