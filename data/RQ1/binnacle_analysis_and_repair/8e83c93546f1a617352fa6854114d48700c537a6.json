{
  "startTime": 1674246569463,
  "endTime": 1674246569737,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 85,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 81,
        "columnStart": 22,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tensorflow/tensorflow:1.7.0-devel-gpu-py3\n\nLABEL maintainer=\"richard@nodeflux.io\"\n\n# Initial Dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates \\\n        cmake \\\n        cython3 \\\n        g++ \\\n        git \\\n        libswscale-dev \\\n        libtbb2 \\\n        libtbb-dev \\\n        libjpeg-dev \\\n        libpng-dev \\\n        libtiff-dev \\ \n        libjasper-dev \\\n        libavformat-dev \\\n        libpq-dev \\\n        libgtk2.0-dev \\\n        pkg-config \\\n        python3-dev \\\n        python3-wheel \\\n        wget \\\n        unzip \\\n        yasm && \\\n    rm -rf /var/lib/apt/lists/*\n\n\n# Build OpenCV\nENV OPENCV_VERSION=\"3.3.1\"\nCOPY 3.3.1.zip /\n\nWORKDIR /\nRUN unzip ${OPENCV_VERSION}.zip && \\ \n    mkdir /opencv-${OPENCV_VERSION}/cmake_binary && \\\n    cd /opencv-${OPENCV_VERSION}/cmake_binary && \\\n    cmake \\\n        -DBUILD_TIFF=ON \\ \n        -DBUILD_opencv_java=OFF \\\n        -DWITH_CUDA=OFF \\\n        -DENABLE_AVX=ON \\\n        -DWITH_OPENGL=ON \\\n        -DWITH_OPENCL=ON \\\n        -DWITH_IPP=ON \\\n        -DWITH_TBB=ON \\\n        -DWITH_EIGEN=ON \\\n        -DWITH_V4L=ON \\\n        -DWITH_GTK=ON \\\n        -DWITH_GTK_2_X=ON \\\n        -DBUILD_TESTS=OFF \\\n        -DBUILD_PERF_TESTS=OFF \\\n        -DCMAKE_BUILD_TYPE=RELEASE \\\n        -DCMAKE_INSTALL_PREFIX=$(python3 -c \"import sys; print(sys.prefix)\") \\\n        -DPYTHON_EXECUTABLE=$(which python3) \\\n        -DPYTHON_INCLUDE_DIR=$(python3 -c \"from distutils.sysconfig import get_python_inc; print(get_python_inc())\") \\\n        -D PYTHON3_NUMPY_INCLUDE_DIRS:PATH=/usr/local/lib/python3.5/dist-packages/numpy/core/include \\\n        -DPYTHON_PACKAGES_PATH=/usr/local/lib/python3.5/dist-packages .. && \\\n    make -j \"$(nproc)\" install && \\\n    rm /${OPENCV_VERSION}.zip && \\\n    rm -r /opencv-${OPENCV_VERSION}\n\n# Build Darkflow\nCOPY darkflow /darkflow\n\nRUN cd darkflow && \\\n    pip3 install --no-cache-dir .\n\n# Build TensorRT\n\nENV TENSORRT_VERSION 3.0\n\nCOPY nv-tensorrt-repo-ubuntu1604-ga-cuda9.0-trt3.0.4-20180208_1-1_amd64.deb /tmp/\n\nRUN cd /tmp/ && \\\n    dpkg -i nv-tensorrt-repo-ubuntu1604-ga-cuda9.0-trt3.0.4-20180208_1-1_amd64.deb && \\\n    apt-get update && apt-get install -y --no-install-recommends \\\n        tensorrt \\\n        python3-libnvinfer-doc \\\n        uff-converter-tf && \\\n    rm -rf nv-tensorrt-repo-ubuntu1604-ga-cuda9.0-trt3.0.4-20180208_1-1_amd64.deb && rm -rf /var/lib/apt/lists/*;\n\n# Upgrade numpy and pillow version for tensorRT\nRUN pip3 install --no-cache-dir --upgrade \\\n        numpy \\\n        pillow \\\n        enum34\n\n# Install pyCUDA\nWORKDIR /\nADD pycuda-2017.1.1.tar.gz /\n\n#RUN tar -xzvf / pycuda-2017.1.1.tar.gz && \\\n#    rm -rf pycuda-2017.1.1.tar.gz\n\nENV CUDA_ROOT=/usr/local/cuda\n\nRUN cd pycuda-2017.1.1 && \\\n    #rm ./siteconf.py && \\\n    python3 configure.py && \\\n    make -j \"$(nproc)\" install && \\\n    pip3 install --no-cache-dir ."
}