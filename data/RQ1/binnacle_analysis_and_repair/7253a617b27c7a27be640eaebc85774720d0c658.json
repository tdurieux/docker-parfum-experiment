{
  "startTime": 1674242971661,
  "endTime": 1674242971796,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 40,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# ----- Go Builder Image ------\n#\nFROM golang:1.8-alpine3.6 AS builder\n\n# install required packages: curl and bash\nRUN apk add --no-cache bash curl git || apk update && apk upgrade\n\n# github-release - Github Release and upload artifacts\nARG GITHUB_RELEASE=v0.7.2\nRUN curl -f -s -LS \"https://github.com/aktau/github-release/releases/download/${GITHUB_RELEASE}/linux-amd64-github-release.tar.bz2\" | tar -xj -C /tmp && \\\n    mv /tmp/bin/linux/amd64/github-release /usr/local/bin/\n\n# install gosu\n# gosu version and sha256\nARG GOSU_VERSION=1.10\nARG GOSU_SHA_256=5b3b03713a888cee84ecbf4582b21ac9fd46c3d935ff2d7ea25dd5055d302d3c\nRUN curl -f -s -o /tmp/gosu-amd64 -LS \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64\" && \\\n    echo \"${GOSU_SHA_256}  gosu-amd64\" > /tmp/gosu-amd64.sha256 && \\\n    cd /tmp && sha256sum -c gosu-amd64.sha256 && \\\n    mv /tmp/gosu-amd64 /usr/local/bin/gosu && \\\n    chmod +x /usr/local/bin/gosu\n\n# set working directory\nRUN mkdir -p /go/src/github.com/codefresh-io/microci\nWORKDIR /go/src/github.com/codefresh-io/microci\n\n# copy sources\nCOPY . .\n\n# set entrypoint to bash\nENTRYPOINT [\"/bin/bash\"]\n\n# run test and calculate coverage\nRUN VERSION=$(cat VERSION) script/coverage.sh\n# upload coverage reports to Codecov.io: pass CODECOV_TOKEN as build-arg\nARG CODECOV_TOKEN\n# default codecov bash uploader (sometimes it's worth to use GitHub version or custom one, to avoid bugs)\nARG CODECOV_BASH_URL=https://codecov.io/bash\n# set Codecov expected env\nARG VCS_COMMIT_ID\nARG VCS_BRANCH_NAME\nARG VCS_SLUG\nARG CI_BUILD_URL\nARG CI_BUILD_ID\nRUN if [ \"$CODECOV_TOKEN\" != \"\" ]; then \\\n curl -f -s $CODECOV_BASH_URL | bash -s; fi\n\n# build microci binary\n\nRUN VERSION=$(cat VERSION) script/go_build.sh\n\n#\n# ------ MicroCI runtime image ------\n#\nFROM alpine:3.6\n\n# add root certificates\nRUN apk add --no-cache ca-certificates\n\n# copy gosu\nCOPY --from=builder /usr/local/bin/gosu /usr/local/bin/gosu\n# add user:group, gosu nobody\nRUN addgroup microci && adduser -s /bin/bash -D -G microci microci && gosu nobody true\n\nCOPY --from=builder /go/src/github.com/codefresh-io/microci/dist/bin/microci /usr/bin/microci\nCOPY docker_entrypoint.sh /\nRUN chmod +x /docker_entrypoint.sh\n\nENTRYPOINT [\"/docker_entrypoint.sh\"]\nCMD [\"microci\", \"--help\"]\n\nARG GIT_COMMIT=dev\nLABEL org.label-schema.vcs-ref=$GIT_COMMIT \\\n      org.label-schema.vcs-url=\"https://github.com/codefresh-io/microci\" \\\n      org.label-schema.description=\"MicroCI is a native continuous integration for Docker-based microservices\" \\\n      org.label-schema.vendor=\"Codefresh Inc.\" \\\n      org.label-schema.url=\"https://github.com/codefresh-io/microci\" \\\n      org.label-schema.version=\"0.2.0\" \\\n      org.label-schema.docker.cmd=\"docker run -d --rm -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock codefreshio/microci microci server\" \\\n      org.label-schema.docker.cmd.help=\"docker run -it --rm codefreshio/microci microci --help\"\n"
}