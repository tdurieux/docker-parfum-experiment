{
  "startTime": 1674234208381,
  "endTime": 1674234208516,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM metabrainz/python:3.7\n\nENV DOCKERIZE_VERSION v0.2.0\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\n# PostgreSQL client\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\nENV PG_MAJOR 9.5\nRUN echo 'deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y postgresql-client-$PG_MAJOR \\\n    && rm -rf /var/lib/apt/lists/*\n# Specifying password so that client doesn't ask scripts for it...\nENV PGPASSWORD \"mbspotify\"\n\nRUN mkdir /code\nWORKDIR /code\n\n# Python dependencies\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n                       build-essential \\\n                       git \\\n                       libpq-dev \\\n                       libffi-dev \\\n                       libssl-dev \\\n                       libxml2-dev \\\n                       libxslt1-dev && rm -rf /var/lib/apt/lists/*;\nCOPY requirements.txt /code/\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY . /code/\n\nCMD dockerize -wait tcp://db:5432 -timeout 25s /bin/bash \\\n              ./sql/setup.sh; \\\n              py.test --junitxml=/data/test_report.xml \\\n                      --cov-report xml:/data/coverage.xml \\\n                      --cov-report html:/data/coverage-html\n"
}