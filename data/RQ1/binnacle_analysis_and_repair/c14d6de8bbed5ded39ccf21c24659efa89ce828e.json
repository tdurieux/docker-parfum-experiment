{
  "startTime": 1674234518648,
  "endTime": 1674234519324,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 7,
        "columnEnd": 139
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 7,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 7,
        "columnEnd": 114
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 7,
        "columnEnd": 114
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 7,
        "columnEnd": 109
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 151,
        "lineEnd": 151,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 7,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tiredofit/nodejs:12-debian-latest\nLABEL maintainer=\"Dave Conroy (dave at tiredofit dot ca)\"\n\n### Set Defaults\n   ENV DB_EMBEDDED=TRUE \\\n       ENABLE_CRON=TRUE \\\n       ENABLE_SMTP=TRUE \\\n       ASTERISK_VERSION=16.3.0 \\\n       BCG729_VERSION=1.0.4 \\\n       SPANDSP_VERSION=20180108 \\\n       FREEPBX_VERSION=15.0.15.3 \\\n       UCP_FIRST=TRUE\n\n### Install Dependencies\n   RUN set -x && \\\n       apt-get update && \\\n       apt-get install --no-install-recommends -y wget && \\\n       curl -f https://packages.sury.org/php/apt.gpg | apt-key add - && \\\n       echo 'deb https://packages.sury.org/php/ stretch main' > /etc/apt/sources.list.d/deb.sury.org.list && \\\n       apt-get update && \\\n       apt-get install --no-install-recommends -y debconf locales locales-all && \\\n       apt-get -y upgrade && \\\n\n### Install Development Dependencies\n       ASTERISK_BUILD_DEPS=' \\\n            autoconf \\\n            automake \\\n            bison \\\n            build-essential \\\n            doxygen \\\n            flex \\\n            libasound2-dev \\\n            libcurl4-openssl-dev \\\n            libedit-dev \\\n            libical-dev \\\n            libiksemel-dev \\\n            libjansson-dev \\\n            libmariadbclient-dev \\\n            libncurses5-dev \\\n            libneon27-dev \\\n            libnewt-dev \\\n            libogg-dev \\\n            libresample1-dev \\\n            libspandsp-dev \\\n            libsqlite3-dev \\\n            libsrtp0-dev \\\n            libssl-dev \\\n            libtiff-dev \\\n            libtool-bin \\\n            libvorbis-dev \\\n            libxml2-dev \\\n            linux-headers-amd64 \\\n            pkg-config \\\n            python-dev \\\n            subversion \\\n            unixodbc-dev \\\n            uuid-dev \\\n            ' \\\n            && \\\n\n### Install Runtime Dependencies\n    apt-get install --no-install-recommends -y \\\n            $ASTERISK_BUILD_DEPS \\\n            apache2 \\\n            composer \\\n            fail2ban \\\n            flite \\\n            ffmpeg \\\n            git \\\n            g++ \\\n            iproute2 \\\n            iptables \\\n            lame \\\n            libiodbc2 \\\n            libicu-dev \\\n            libsrtp0 \\\n            locales-all \\\n            mariadb-client \\\n            mariadb-server \\\n            mongodb \\\n            mpg123 \\\n            net-tools \\\n            php5.6 \\\n            php5.6-cli \\\n            php5.6-curl \\\n            php5.6-gd \\\n            php5.6-ldap \\\n            php5.6-mbstring \\\n            php5.6-mysql \\\n            php5.6-sqlite \\\n            php5.6-xml \\\n            php5.6-zip \\\n            php-pear \\\n            procps \\\n            sox \\\n            sqlite3 \\\n            sudo \\\n            unixodbc \\\n            uuid \\\n            wget \\\n            whois \\\n            xmlstarlet \\\n            && \\\n\n### Install MySQL Connector\n       cd /usr/src && \\\n       mkdir -p mariadb-connector && \\\n       curl -f -sSL https://downloads.mariadb.com/Connectors/odbc/connector-odbc-2.0.18/mariadb-connector-odbc-2.0.18-ga-debian-x86_64.tar.gz | tar xvfz - -C /usr/src/mariadb-connector && \\\n       cp mariadb-connector/lib/libmaodbc.so /usr/lib/x86_64-linux-gnu/odbc/ && \\\n\n### Add Users\n       addgroup --gid 2600 asterisk && \\\n       adduser --uid 2600 --gid 2600 --gecos \"Asterisk User\" --disabled-password asterisk && \\\n\n### Build SpanDSP\n       mkdir -p /usr/src/spandsp && \\\n       curl -f -kL https://www.soft-switch.org/downloads/spandsp/snapshots/spandsp-${SPANDSP_VERSION}.tar.gz | tar xvfz - --strip 1 -C /usr/src/spandsp && \\\n       cd /usr/src/spandsp && \\\n       ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n       make && \\\n       make install && \\\n\n### Build Asterisk\n       cd /usr/src && \\\n       mkdir -p asterisk && \\\n       curl -f -sSL https://downloads.asterisk.org/pub/telephony/asterisk/releases/asterisk-${ASTERISK_VERSION}.tar.gz | tar xvfz - --strip 1 -C /usr/src/asterisk && \\\n       cd /usr/src/asterisk/ && \\\n       make distclean && \\\n       contrib/scripts/get_mp3_source.sh && \\\n       ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-resample --with-pjproject-bundled --with-jansson-bundled --with-ssl=ssl --with-srtp && \\\n       make menuselect/menuselect menuselect-tree menuselect.makeopts && \\\n       menuselect/menuselect --disable BUILD_NATIVE \\\n                             --enable app_confbridge \\\n                             --enable app_fax \\\n                             --enable app_macro \\\n                             --enable codec_opus \\\n                             --enable codec_silk \\\n                             --enable format_mp3 \\\n                             --enable BETTER_BACKTRACES \\\n                             --disable MOH-OPSOUND-WAV \\\n                             --enable MOH-OPSOUND-GSM \\\n       make && \\\n       make install && \\\n       make config && \\\n       ldconfig && \\\n\n#### Add G729 Codecs\n       git clone https://github.com/BelledonneCommunications/bcg729 /usr/src/bcg729 && \\\n       cd /usr/src/bcg729 && \\\n       git checkout tags/$BCG729_VERSION && \\\n       ./autogen.sh && \\\n       ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --libdir=/lib && \\\n       make && \\\n       make install && \\\n\n       mkdir -p /usr/src/asterisk-g72x && \\\n       curl -f https://bitbucket.org/arkadi/asterisk-g72x/get/default.tar.gz | tar xvfz - --strip 1 -C /usr/src/asterisk-g72x && \\\n       cd /usr/src/asterisk-g72x && \\\n       ./autogen.sh && \\\n       ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-bcg729 --with-asterisk160 --enable-penryn && \\\n       make && \\\n       make install && \\\n\n### Cleanup \n       mkdir -p /var/run/fail2ban && \\\n       cd / && \\\n       rm -rf /usr/src/* /tmp/* /etc/cron* && \\\n       apt-get purge -y $ASTERISK_BUILD_DEPS libspandsp-dev && \\\n       apt-get -y autoremove && \\\n       apt-get clean && \\\n       apt-get install --no-install-recommends -y make && \\\n       rm -rf /var/lib/apt/lists/* && \\\n\n### FreePBX Hacks\n       sed -i -e \"s/memory_limit = 128M/memory_limit = 256M/g\" /etc/php/5.6/apache2/php.ini && \\\n       sed -i 's/\\(^upload_max_filesize = \\).*/\\120M/' /etc/php/5.6/apache2/php.ini && \\\n       a2disconf other-vhosts-access-log.conf && \\\n       a2enmod rewrite && \\\n       a2enmod headers && \\\n       rm -rf /var/log/* && \\\n       mkdir -p /var/log/asterisk && \\\n       mkdir -p /var/log/apache2 && \\\n       mkdir -p /var/log/httpd && \\\n\n### Zabbix Setup\n       echo '%zabbix ALL=(asterisk) NOPASSWD:/usr/sbin/asterisk' >> /etc/sudoers && \\\n\n### Setup for Data Persistence\n       mkdir -p /assets/config/var/lib/ /assets/config/home/ && \\\n       mv /home/asterisk /assets/config/home/ && \\\n       ln -s /data/home/asterisk /home/asterisk && \\\n       mv /var/lib/asterisk /assets/config/var/lib/ && \\\n       ln -s /data/var/lib/asterisk /var/lib/asterisk && \\\n       ln -s /data/usr/local/fop2 /usr/local/fop2 && \\\n       mkdir -p /assets/config/var/run/ && \\\n       mv /var/run/asterisk /assets/config/var/run/ && \\\n       mv /var/lib/mysql /assets/config/var/lib/ && \\\n       mkdir -p /assets/config/var/spool && \\\n       mv /var/spool/cron /assets/config/var/spool/ && \\\n       ln -s /data/var/spool/cron /var/spool/cron && \\\n       mkdir -p /var/run/mongodb && \\\n       rm -rf /var/lib/mongodb && \\\n       ln -s /data/var/lib/mongodb /var/lib/mongodb && \\\n       ln -s /data/var/run/asterisk /var/run/asterisk && \\\n       rm -rf /var/spool/asterisk && \\\n       ln -s /data/var/spool/asterisk /var/spool/asterisk && \\\n       rm -rf /etc/asterisk && \\\n       ln -s /data/etc/asterisk /etc/asterisk\n\n### Networking Configuration\n   EXPOSE 80 443 4445 4569 5060/udp 5160/udp 5061 5161 8001 8003 8008 8009 18000-20000/udp\n\n### Files Add\n   ADD install /\n"
}