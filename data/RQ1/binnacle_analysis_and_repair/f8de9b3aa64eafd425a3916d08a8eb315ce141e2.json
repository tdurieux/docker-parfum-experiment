{
  "startTime": 1674248887621,
  "endTime": 1674248888071,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 95,
        "columnEnd": 216
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 2,
        "columnEnd": 191
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 2,
        "columnEnd": 191
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 2,
        "columnEnd": 31
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Jekyll (static blog engine) in a container\n# With NCFTP for FTP deployment\n#\n# USAGE :\n#   docker run --rm -it \\\n#     -v $(pwd):/srv/jekyll \\\n#     -p 127.0.0.1:4000:4000 \\\n#     jdecool/jekyll jekyll [COMMAND]\n\nFROM jekyll/jekyll:2.5\nMAINTAINER Jérémy DECOOL <contact@jdecool.fr>\n\nRUN apk --update --no-cache add ncftp\n\n# Java 8 installation\nENV JAVA_VERSION_MAJOR=8 \\\n  JAVA_VERSION_MINOR=102 \\\n  JAVA_VERSION_BUILD=14 \\\n  JAVA_PACKAGE=jdk \\\n  JAVA_JCE=standard \\\n  JAVA_HOME=/opt/jdk \\\n  PATH=${PATH}:/opt/jdk/bin \\\n  GLIBC_VERSION=2.23-r3 \\\n  LANG=C.UTF-8\n\nRUN apk upgrade --update && \\\n  apk add --update libstdc++ curl ca-certificates bash && \\\n  for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION} glibc-i18n-${GLIBC_VERSION}; do curl -f -sSL https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/${pkg}.apk -o /tmp/${pkg}.apk; done && \\\n  apk add --allow-untrusted /tmp/*.apk && \\\n  rm -v /tmp/*.apk && \\\n  ( /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true ) && \\\n  echo \"export LANG=C.UTF-8\" > /etc/profile.d/locale.sh && \\\n  /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib && \\\n  mkdir /opt && \\\n  curl -f -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/java.tar.gz \\\n    https://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz && \\\n  gunzip /tmp/java.tar.gz && \\\n  tar -C /opt -xf /tmp/java.tar && \\\n  ln -s /opt/jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR} /opt/jdk && \\\n  if [ \"${JAVA_JCE}\" == \"unlimited\" ]; then \\\n  echo \"Installing Unlimited JCE policy\" >&2 && \\\n    curl -f -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/jce_policy-${JAVA_VERSION_MAJOR}.zip \\\n      https://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION_MAJOR}/jce_policy-${JAVA_VERSION_MAJOR}.zip && \\\n    cd /tmp && unzip /tmp/jce_policy-${JAVA_VERSION_MAJOR}.zip && \\\n    cp -v /tmp/UnlimitedJCEPolicyJDK8/*.jar /opt/jdk/jre/lib/security; \\\n  fi && \\\n  sed -i s/#networkaddress.cache.ttl=-1/networkaddress.cache.ttl=30/ $JAVA_HOME/jre/lib/security/java.security && \\\n  apk del curl glibc-i18n && \\\n  rm -rf /opt/jdk/*src.zip \\\n     /opt/jdk/lib/missioncontrol \\\n     /opt/jdk/lib/visualvm \\\n     /opt/jdk/lib/*javafx* \\\n     /opt/jdk/jre/plugin \\\n     /opt/jdk/jre/bin/javaws \\\n     /opt/jdk/jre/bin/jjs \\\n     /opt/jdk/jre/bin/keytool \\\n     /opt/jdk/jre/bin/orbd \\\n     /opt/jdk/jre/bin/pack200 \\\n     /opt/jdk/jre/bin/policytool \\\n     /opt/jdk/jre/bin/rmid \\\n     /opt/jdk/jre/bin/rmiregistry \\\n     /opt/jdk/jre/bin/servertool \\\n     /opt/jdk/jre/bin/tnameserv \\\n     /opt/jdk/jre/bin/unpack200 \\\n     /opt/jdk/jre/lib/javaws.jar \\\n     /opt/jdk/jre/lib/deploy* \\\n     /opt/jdk/jre/lib/desktop \\\n     /opt/jdk/jre/lib/*javafx* \\\n     /opt/jdk/jre/lib/*jfx* \\\n     /opt/jdk/jre/lib/amd64/libdecora_sse.so \\\n     /opt/jdk/jre/lib/amd64/libprism_*.so \\\n     /opt/jdk/jre/lib/amd64/libfxplugins.so \\\n     /opt/jdk/jre/lib/amd64/libglass.so \\\n     /opt/jdk/jre/lib/amd64/libgstreamer-lite.so \\\n     /opt/jdk/jre/lib/amd64/libjavafx*.so \\\n     /opt/jdk/jre/lib/amd64/libjfx*.so \\\n     /opt/jdk/jre/lib/ext/jfxrt.jar \\\n     /opt/jdk/jre/lib/ext/nashorn.jar \\\n     /opt/jdk/jre/lib/oblique-fonts \\\n     /opt/jdk/jre/lib/plugin.jar \\\n     /tmp/* /var/cache/apk/* && \\\n  echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf && rm /tmp/java.tar\n\nRUN gem install glynn --source http://gemcutter.org \\\n  && gem install chronic yui-compressor algoliasearch-jekyll\n"
}