{
  "startTime": 1674246214965,
  "endTime": 1674246215187,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:19.04\nARG JDK_VERSION=8\nARG SPARK_VERSION=2.4.3\n\n# Environment\nENV DEBIAN_FRONTEND noninteractive\n\n# Install all basic requirements\nRUN \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y software-properties-common && \\\n    add-apt-repository ppa:openjdk-r/ppa && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y tar unzip wget openjdk-$JDK_VERSION-jdk libgomp1 && \\\n    # Python\n    wget https://repo.continuum.io/miniconda/Miniconda3-4.5.12-Linux-x86_64.sh && \\\n    bash Miniconda3-4.5.12-Linux-x86_64.sh -b -p /opt/python && \\\n    # Maven\n    wget https://apache.osuosl.org/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz && \\\n    tar xvf apache-maven-3.6.1-bin.tar.gz -C /opt && \\\n    ln -s /opt/apache-maven-3.6.1/ /opt/maven && \\\n    # Spark\n    wget https://archive.apache.org/dist/spark/spark-$SPARK_VERSION/spark-$SPARK_VERSION-bin-hadoop2.7.tgz && \\\n    tar xvf spark-$SPARK_VERSION-bin-hadoop2.7.tgz -C /opt && \\\n    ln -s /opt/spark-$SPARK_VERSION-bin-hadoop2.7 /opt/spark && rm apache-maven-3.6.1-bin.tar.gz && rm -rf /var/lib/apt/lists/*;\n\nENV PATH=/opt/python/bin:/opt/spark/bin:/opt/maven/bin:$PATH\n\n# Install Python packages\nRUN \\\n    pip install --no-cache-dir numpy scipy pandas scikit-learn\n\nENV GOSU_VERSION 1.10\n\n# Install lightweight sudo (not bound to TTY)\nRUN set -ex; \\\n    wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64\" && \\\n    chmod +x /usr/local/bin/gosu && \\\n    gosu nobody true\n\n# Set default JDK version\nRUN update-java-alternatives -v -s java-1.$JDK_VERSION.0-openjdk-amd64\n\n# Default entry-point to use if running locally\n# It will preserve attributes of created files\nCOPY entrypoint.sh /scripts/\n\nWORKDIR /workspace\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n"
}