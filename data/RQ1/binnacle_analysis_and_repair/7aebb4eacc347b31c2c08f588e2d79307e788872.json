{
  "startTime": 1674235523456,
  "endTime": 1674235523506,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# \n# DEER Dockerfile \n# https://github.com/kvndrsslr/deer_dockerized \n# \n# pull base image. \nFROM maven:3-jdk-8 \n# maintainer details \nMAINTAINER Kevin Dre√üler \"dressler@informatik.uni-leipzig.de\" \nRUN \\  \nexport DEBIAN_FRONTEND=noninteractive && \\  \nmkdir -p /local \n\n# for now we need to download limes and build it ourselves \nWORKDIR /local \n\nRUN apt-get update && apt-get install --no-install-recommends -y openjfx && rm -rf /var/lib/apt/lists/*;\n\n# get DEER repository and run maven \nRUN git clone https://github.com/SLIPO-EU/DEER.git \n\nWORKDIR /local/DEER \n\nRUN \\  \nmvn clean compile assembly:assembly && \\  \nmv target/deer-0.5.0-jar-with-dependencies.jar ../deer.jar \n\n# attach volumes \nVOLUME /volume/data \n\nWORKDIR /volume/data \n\n# set an entrypoint for use as executable \nENTRYPOINT [\"java\", \"-jar\", \"/local/deer.jar\"] \n\n# run with default parameter of \"config.ttl\" \nCMD [\"config.ttl\"] \n\n# run terminal \n#CMD [\"/bin/bash\"] \n\n"
}