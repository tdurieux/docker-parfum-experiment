{
  "startTime": 1674234724592,
  "endTime": 1674234724657,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10.15.3-jessie AS build-js\n\n# see https://github.com/nodejs/docker-node/blob/master/docs/BestPractices.md#non-root-user\nUSER node\nWORKDIR /home/node\n\nCOPY --chown=node package*.json ./\nRUN npm install --only=production && npm cache clean --force;\n\nCOPY --chown=node Gruntfile.js ./\nCOPY --chown=node src/main/resources/public/js ./src/main/resources/public/js\nRUN npm run --silent grunt-build\n\nFROM gradle:5.4.0-jdk8-alpine AS build-java\n\nUSER gradle\nRUN mkdir -p /home/gradle/app/build/resources/main/public/js\nWORKDIR /home/gradle/app\n\nCOPY --chown=gradle build.gradle .\nCOPY --chown=gradle src ./src\nRUN rm -f src/main/resources/public/js/*.js\nCOPY --chown=gradle --from=build-js /home/node/build/resources/main/public/js/app.min.js ./src/main/resources/public/js/\n\nRUN gradle --info build -x test\n\nFROM adoptopenjdk/openjdk8:alpine-jre\n\nLABEL maintainer=\"Sebastian Peters <Sebastian.Peters@gmail.com>\"\n\nENV USER lvz-viz\n\nRUN addgroup $USER \\\n  && adduser -D -G $USER -S $USER\n\nUSER $USER\nWORKDIR /home/$USER\n\nCOPY --chown=lvz-viz dewac_175m_600.crf.ser.gz .\nCOPY --chown=lvz-viz --from=build-java /home/gradle/app/build/libs/*.jar ./app.jar\n\nEXPOSE 8080\n\nENTRYPOINT [\"java\",\"-XshowSettings:vm\",\"-XX:+UnlockExperimentalVMOptions\",\"-XX:+UseCGroupMemoryLimitForHeap\",\"-XX:MaxRAMFraction=1\",\"-Djava.security.egd=file:/dev/./urandom\",\"-jar\",\"./app.jar\"]\n"
}