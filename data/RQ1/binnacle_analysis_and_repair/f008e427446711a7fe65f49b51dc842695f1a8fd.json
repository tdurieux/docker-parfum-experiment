{
  "startTime": 1674234814783,
  "endTime": 1674234814903,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 108
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# openshift-origin-broker\n#\n# To build, cd into the origin-server source directory and run:\n# docker build --rm -t openshift-origin-broker .\n#\n# To run origin-broker:\n# docker run -d -i -t -e \"MONGO_HOST_PORT=<mongo_host_port>\" -e \"AUTH_SALT=<broker_auth_salt>\" -p <port_on_host>:443 openshift-origin-broker\n# Where MONGO_HOST_PORT and AUTH_SALT are the config values as defined in broker.conf and <port_on_host> is the port you want to map\n# You can get an AUTH_SALT by running \"openssl rand -base64 64\"\n# Any values defined in broker.conf can be overridden by passing additional -e flags during the run command, alternatively you can\n# modify the broker.conf file in your source and re-build instead of passing -e flags.\n#\n# To run oo-* admin commands:\n# docker run --rm -i -t -e \"MONGO_HOST_PORT=<mongo_host_port>\" -e \"AUTH_SALT=<broker_auth_salt>\" openshift-origin-broker /bin/bash --login\n# Where MONGO_HOST_PORT and AUTH_SALT are the config values as defined in broker.conf\n\nFROM fedora\nRUN yum -y install which gcc-c++ openssl-devel readline libyaml-devel readline-devel zlib zlib-devel openssl && rm -rf /var/cache/yum\n\n# Install and setup ruby 1.9.3 using rvm and install bundler\nRUN curl -f -L --connect-timeout 30 get.rvm.io | bash -s stable\nRUN /bin/bash --login -c \"rvm install 1.9.3\"\nRUN /bin/bash --login -c \"rvm use 1.9.3 --default\"\nRUN /bin/bash --login -c \"gem install bundler\"\n\n# Setup default ssl key and cert\nRUN openssl req -new -x509 -nodes -out /etc/pki/tls/certs/localhost.crt -keyout /etc/pki/tls/private/localhost.key -batch\n\n# BROKER_SOURCE tells the broker to include gems based on source locations\nENV BROKER_SOURCE 1\n\n# OPENSHIFT_ENABLE_ENV_CONFIG tells the broker to check for config values as environment variables before checking the broker.conf file\nENV OPENSHIFT_ENABLE_ENV_CONFIG 1\n\n# Add all necessary source from origin-server\nADD util /usr/sbin\nADD common /var/www/openshift/common\nADD admin-console /var/www/openshift/admin-console\nADD broker-util /var/www/openshift/broker-util\nADD plugins /var/www/openshift/plugins\nADD broker /var/www/openshift/broker\nADD controller /var/www/openshift/controller\n\n# Copy configuration files to expected locations\nRUN mkdir -p ~/.openshift && cp /var/www/openshift/broker/misc/docker_broker_plugins.rb ~/.openshift/broker_plugins.rb\nRUN mkdir -p /etc/openshift && cp -r /var/www/openshift/broker/conf/* /etc/openshift/\nRUN cp /var/www/openshift/plugins/dns/bind/conf/openshift-origin-dns-bind.conf.example /etc/openshift/plugins.d/openshift-origin-dns-bind.conf\nRUN cp /var/www/openshift/plugins/msg-broker/mcollective/conf/openshift-origin-msg-broker-mcollective.conf.example /etc/openshift/plugins.d/openshift-origin-msg-broker-mcollective.conf\n\n# Install broker oo-* scripts\nRUN cp /var/www/openshift/broker-util/oo-* /usr/sbin/ && chmod 750 /usr/sbin/oo-*\nRUN cp /var/www/openshift/broker-util/lib/* /usr/local/rvm/rubies/ruby-1.9.3-*/lib/ruby/1.9.1/\n\nWORKDIR /var/www/openshift/broker\nRUN /bin/bash --login -c \"bundle install\"\nCMD /bin/bash --login -c \"bundle exec rails s puma\"\n"
}