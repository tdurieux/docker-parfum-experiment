{
  "startTime": 1674245100219,
  "endTime": 1674245100481,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 85
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 5,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM mikkelkrogsholm/r-base\n\nARG RSTUDIO_VERSION\nARG PANDOC_TEMPLATES_VERSION\nENV PANDOC_TEMPLATES_VERSION ${PANDOC_TEMPLATES_VERSION:-1.18}\n\n## Add RStudio binaries to PATH\nENV PATH /usr/lib/rstudio-server/bin:$PATH\n\n## Download and install RStudio server & dependencies\n## Attempts to get detect latest version, otherwise falls back to version given in $VER\n## Symlink pandoc, pandoc-citeproc so they are available system-wide\nRUN RSTUDIO_LATEST=$(wget --no-check-certificate -qO- https://s3.amazonaws.com/rstudio-server/current.ver) \\\n  && [ -z \"$RSTUDIO_VERSION\" ] && RSTUDIO_VERSION=$RSTUDIO_LATEST || true \\\n  && wget -q https://download2.rstudio.org/rstudio-server-${RSTUDIO_VERSION}-amd64.deb \\\n  && dpkg -i rstudio-server-${RSTUDIO_VERSION}-amd64.deb \\\n  && rm rstudio-server-*-amd64.deb \\\n  ## Symlink pandoc & standard pandoc templates for use system-wide\n  && ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc /usr/local/bin \\\n  && ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc-citeproc /usr/local/bin \\\n  && wget https://github.com/jgm/pandoc-templates/archive/${PANDOC_TEMPLATES_VERSION}.tar.gz \\\n  && mkdir -p /opt/pandoc/templates && tar zxf ${PANDOC_TEMPLATES_VERSION}.tar.gz \\\n  && cp -r pandoc-templates*/* /opt/pandoc/templates && rm -rf pandoc-templates* \\\n  && mkdir /root/.pandoc && ln -s /opt/pandoc/templates /root/.pandoc/templates \\\n  && rm ${PANDOC_TEMPLATES_VERSION}.tar.gz \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/ \\\n  ## RStudio wants an /etc/R, will populate from $R_HOME/etc\n  && mkdir -p /etc/R \\\n  ## Write config files in $R_HOME/etc\n  && echo '\\n\\\n    \\n# Configure httr to perform out-of-band authentication if HTTR_LOCALHOST \\\n    \\n# is not set since a redirect to localhost may not work depending upon \\\n    \\n# where this Docker container is running. \\\n    \\nif(is.na(Sys.getenv(\"HTTR_LOCALHOST\", unset=NA))) { \\\n    \\n  options(httr_oob_default = TRUE) \\\n    \\n}' >> /usr/local/lib/R/etc/Rprofile.site \\\n  && echo \"PATH=\\\"${PATH}\\\"\" >> /usr/local/lib/R/etc/Renviron \\\n  ## Need to configure non-root user for RStudio\n  && useradd rstudio \\\n  && echo \"rstudio:rstudio\" | chpasswd \\\n\t&& mkdir /home/rstudio \\\n\t&& chown rstudio:rstudio /home/rstudio \\\n\t&& addgroup rstudio staff \\\n  ## configure git not to request password each time\n  && git config --system credential.helper 'cache --timeout=3600' \\\n  && git config --system push.default simple \\\n  ## Set up S6 init system\n  && wget -P /tmp/ https://github.com/just-containers/s6-overlay/releases/download/v1.11.0.1/s6-overlay-amd64.tar.gz \\\n  && tar xzf /tmp/s6-overlay-amd64.tar.gz -C / \\\n  && mkdir -p /etc/services.d/rstudio \\\n  && echo '#!/bin/bash \\\n           \\n exec /usr/lib/rstudio-server/bin/rserver --server-daemonize 0' \\\n           > /etc/services.d/rstudio/run \\\n   && echo '#!/bin/bash \\\n           \\n rstudio-server stop' \\\n           > /etc/services.d/rstudio/finish && rm /tmp/s6-overlay-amd64.tar.gz\n\nCOPY userconf.sh /etc/cont-init.d/userconf\n\nEXPOSE 8787\n\nCMD [\"/init\"]\n"
}