{
  "startTime": 1674236045477,
  "endTime": 1674236045716,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG REPO\nARG TAG\nFROM ${REPO}/k3os-base:${TAG} as base\n\nARG REPO\nARG TAG\nFROM ${REPO}/k3os-progs:${TAG} as progs\n\nARG REPO\nARG TAG\nFROM ${REPO}/k3os-k3s:${TAG} as k3s\n\nFROM base as k3os-build\nARG VERSION\nARG ARCH\nRUN apk add --no-cache squashfs-tools\nCOPY --from=base /bin /usr/src/image/bin/\nCOPY --from=base /lib /usr/src/image/lib/\nCOPY --from=base /sbin /usr/src/image/sbin/\nCOPY --from=base /etc /usr/src/image/etc/\nCOPY --from=base /usr /usr/src/image/usr/\n\n# Fix up more stuff to move everything to /usr\nRUN cd /usr/src/image && \\\n    for i in usr/*; do \\\n        if [ -e $(basename $i) ]; then \\\n            tar cvf - $(basename $i) | tar xvf - -C usr && \\\n            rm -rf $(basename $i) \\\n        ;fi && \\\n        mv $i . \\\n   ;done && \\\n   rmdir usr\n\n# Fix coreutils links\nRUN cd /usr/src/image/bin && \\\n    mv coreutils coreutils.save && \\\n    find -xtype l -exec rm {} \\; -exec ln -s coreutils {} \\; && \\\n    mv coreutils.save coreutils\n\n# Fix sudo\nRUN chmod +s /usr/src/image/bin/sudo\n\n# Add empty dirs to bind mount\nRUN mkdir -p /usr/src/image/lib/modules && rm -rf /usr/src/image/lib/modules\n\n# setup /usr/local\nRUN rm -rf /usr/src/image/local && \\\n    ln -s /var/local /usr/src/image/local\n\n# cleanup files hostname/hosts\nRUN rm -rf \\\n    /usr/src/image/etc/hosts \\\n    /usr/src/image/etc/hostname \\\n    /usr/src/image/etc/alpine-release \\\n    /usr/src/image/etc/apk \\\n    /usr/src/image/etc/ca-certificates* \\\n    /usr/src/image/etc/os-release \\\n    /usr/src/image/etc/ssl/* \\\n    && ln -s /usr/lib/os-release /usr/src/image/etc/os-release && \\\n    mkdir -p /usr/src/image/etc/ssl/certs/ && \\\n    cp -rf /etc/ssl/certs/ca-certificates.crt /usr/src/image/etc/ssl/certs && rm -rf /usr/src/image/etc/ssl/certs/\n\nRUN rm -rf \\\n    /usr/src/image/usr/sbin/apk \\\n    /usr/src/image/usr/include \\\n    /usr/src/image/usr/lib/apk \\\n    /usr/src/image/usr/lib/pkgconfig \\\n    /usr/src/image/usr/lib/systemd \\\n    /usr/src/image/usr/lib/udev \\\n    /usr/src/image/usr/share/apk \\\n    /usr/src/image/usr/share/applications \\\n    /usr/src/image/usr/share/ca-certificates \\\n    /usr/src/image/usr/share/icons \\\n    /usr/src/image/usr/share/mkinitfs \\\n    /usr/src/image/usr/share/vim/vim81/spell \\\n    /usr/src/image/usr/share/vim/vim81/tutor \\\n    /usr/src/image/usr/share/vim/vim81/doc\n\nCOPY --from=k3s /output/install.sh /usr/src/image/libexec/k3os/k3s-install.sh\nCOPY --from=progs /output/rc.init /usr/src/image/bin/rc.init\nCOPY --from=progs /output/k3os-config /usr/src/image/libexec/k3os/k3os-config\nCOPY --from=progs /output/ccapply /usr/src/image/sbin/ccapply\nCOPY --from=progs /output/metadata /usr/src/image/sbin/metadata\n\nCOPY overlay/ /usr/src/image/\nCOPY install.sh /usr/src/image/libexec/k3os/install\nRUN sed -i -e \"s/%VERSION%/${VERSION}/g\" -e \"s/%ARCH%/${ARCH}/g\" /usr/src/image/lib/os-release\nRUN mkdir -p /output && \\\n    mksquashfs /usr/src/image /output/rootfs.squashfs\n"
}