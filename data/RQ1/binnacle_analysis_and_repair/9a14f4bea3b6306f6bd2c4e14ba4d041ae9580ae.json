{
  "startTime": 1674244961831,
  "endTime": 1674244962030,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 165
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 165
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 165
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 189
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedDockerfile": "FROM hyperledger/fabric-orderer:amd64-1.3.0\n\nRUN apt-get update\nRUN apt-get -y --no-install-recommends install python-software-properties debconf-utils git-all build-essential python-pip python-dev curl libc6-dev-i386 autoconf software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:webupd8team/java\nRUN apt-get update\n\nRUN echo \"oracle-java8-installer shared/accepted-oracle-license-v1-1 select true\" | debconf-set-selections\nRUN apt-get install --no-install-recommends -y oracle-java8-installer && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -O https://dl.google.com/go/go1.10.3.linux-amd64.tar.gz\nRUN tar -xvf go1.10.3.linux-amd64.tar.gz && rm go1.10.3.linux-amd64.tar.gz\nRUN mv go /usr/local\n\nENV PATH=$PATH:/usr/local/go/bin\nENV GOPATH=/go/\n\nRUN echo $PATH\nRUN echo $GOPATH\nRUN /usr/local/go/bin/go version\nRUN go version\n\nWORKDIR /go/src/github.com/hyperledger/\nRUN git clone https://github.com/jcs47/fabric.git\nWORKDIR /go/src/github.com/hyperledger/fabric/\n\nRUN pip install --no-cache-dir --upgrade pip\n\nRUN git checkout release-1.3\n\nRUN devenv/setupUbuntuOnPPC64le.sh\n\nRUN make configtxgen orderer peer\n\nWORKDIR /go/src/github.com/hyperledger/fabric/orderer/sample_clients/broadcast_msg/\nRUN go build\nWORKDIR /go/src/github.com/hyperledger/fabric/orderer/sample_clients/broadcast_config/\nRUN go build\nWORKDIR /go/src/github.com/hyperledger/fabric/orderer/sample_clients/deliver_stdout/\nRUN go build\n\nWORKDIR /go/src/github.com/hyperledger/fabric/\n\nENV FABRIC_CFG_PATH=/go/src/github.com/hyperledger/fabric/sampleconfig\n\nADD temp/fabric_conf /go/src/github.com/hyperledger/fabric/sampleconfig\nARG SYS_CHAN_NAME\nRUN .build/bin/configtxgen -profile SampleSingleMSPBFTsmart -channelID $SYS_CHAN_NAME -outputBlock ./genesisblock\n\nRUN cp /go/src/github.com/hyperledger/fabric/.build/bin/orderer /usr/local/bin/orderer\nRUN cp /go/src/github.com/hyperledger/fabric/.build/bin/configtxgen /usr/local/bin/configtxgen\n\nWORKDIR /\n\nENV JAVA_HOME=/usr/lib/jvm/java-8-oracle/\n\nRUN git clone https://github.com/mcfunley/juds.git\nWORKDIR /juds\nRUN ./autoconf.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make\nRUN make install\n\nWORKDIR /\n\nENTRYPOINT [\"/bin/bash\"]\n\n"
}