{
  "startTime": 1674249509603,
  "endTime": 1674249509775,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# mkvtoolnix Dockerfile\n#\n# https://github.com/jlesage/docker-mkvtoolnix\n#\n\n# Pull base image.\nFROM jlesage/baseimage-gui:alpine-3.9-v3.5.2\n\n# Define software versions.\nARG MKVTOOLNIX_VERSION=35.0.0\nARG MEDIAINFO_VERSION=19.04\n\n# Define software download URLs.\nARG MKVTOOLNIX_URL=https://mkvtoolnix.download/sources/mkvtoolnix-${MKVTOOLNIX_VERSION}.tar.xz\nARG MEDIAINFO_URL=https://github.com/MediaArea/MediaInfo/archive/v${MEDIAINFO_VERSION}.tar.gz\n\n# Define working directory.\nWORKDIR /tmp\n\n# Install dependencies.\nRUN add-pkg \\\n        boost-system \\\n        boost-regex \\\n        boost-filesystem \\\n        libmagic \\\n        libmatroska \\\n        libebml \\\n        flac \\\n        qt5-qtmultimedia \\\n        mesa-dri-swrast \\\n        # For MediaInfo\n        libmediainfo \\\n        qt5-qtsvg \\\n        && \\\n    add-pkg cmark-dev --repository http://dl-cdn.alpinelinux.org/alpine/edge/community\n\n# Install MKVToolNix.\nRUN \\\n\n    add-pkg --virtual build-dependencies \\\n        curl \\\n        patch \\\n        imagemagick \\\n        build-base \\\n        ruby-rake \\\n        ruby-json \\\n        qt5-qtbase-dev \\\n        qt5-qtmultimedia-dev \\\n        boost-dev \\\n        file-dev \\\n        zlib-dev \\\n        libmatroska-dev \\\n        flac-dev \\\n        libogg-dev \\\n        libvorbis-dev \\\n        docbook-xsl \\\n        gettext-dev \\\n        && \\\n\n    # Download the MKVToolNix package.\n    echo \"Downloading MKVToolNix package...\" && \\\n    curl -f -# -L ${MKVTOOLNIX_URL} | tar xJ && \\\n\n    # Remove embedded profile from PNGs to avoid the \"known incorrect sRGB\n    # profile\" warning.\n    find mkvtoolnix-${MKVTOOLNIX_VERSION} -name \"*.png\" -exec convert -strip {} {} \\; && \\\n\n    # Compile MKVToolNix.\n    cd mkvtoolnix-${MKVTOOLNIX_VERSION} && \\\n    curl -f -# -L https://raw.githubusercontent.com/jlesage/docker-mkvtoolnix/master/disable-high-dpi-scaling-override.patch | patch -p1 && \\\n    env LIBINTL_LIBS=-lintl ./configure \\\n        --prefix=/usr \\\n        --mandir=/tmp/mkvtoolnix-man \\\n        --disable-update-check \\\n        && \\\n    rake -j8 && \\\n    rake install && \\\n    strip /usr/bin/mkv* && \\\n    cd .. && \\\n\n    # Cleanup.\n    del-pkg build-dependencies && \\\n    rm -rf /tmp/* /tmp/.[!.]*\n\n# Compile and install MediaInfo.\nRUN \\\n\n    add-pkg --virtual build-dependencies \\\n        build-base \\\n        curl \\\n        qt5-qtbase-dev \\\n        libmediainfo-dev \\\n        && \\\n    # Download sources.\n    echo \"Downloading MediaInfo package...\" && \\\n    mkdir mediainfo && \\\n    curl -f -# -L ${MEDIAINFO_URL} | tar xz --strip 1 -C mediainfo && \\\n    # Compile.\n    cd mediainfo/Project/QMake/GUI && \\\n    /usr/lib/qt5/bin/qmake && \\\n    make -j$(nproc) install && \\\n    cd ../../../../ && \\\n    # Install\n    strip -v /usr/bin/mediainfo-gui && \\\n    cd ../ && \\\n    # Cleanup.\n    del-pkg build-dependencies && \\\n    rm -rf /tmp/* /tmp/.[!.]*\n\n# Adjust the openbox config.\nRUN \\\n    # Maximize only the main/initial window.\n    sed-patch 's/<application type=\"normal\">/<application type=\"normal\" name=\"mkvtoolnix-gui\">/' \\\n        /etc/xdg/openbox/rc.xml && \\\n    # Make sure the main window is always in the background.\n    sed-patch '/<application type=\"normal\" name=\"mkvtoolnix-gui\">/a \\    <layer>below</layer>' \\\n        /etc/xdg/openbox/rc.xml\n\n# Misc adjustments.\nRUN  \\\n    # Clear stuff from /etc/fstab to avoid showing irrelevant devices.\n    echo > /etc/fstab\n\n# Generate and install favicons.\nRUN \\\n    APP_ICON_URL=https://github.com/jlesage/docker-templates/raw/master/jlesage/images/mkvtoolnix-icon.png && \\\n    install_app_icon.sh \"$APP_ICON_URL\"\n\n# Add files.\nCOPY rootfs/ /\n\n# Set environment variables.\nENV APP_NAME=\"MKVToolNix\"\n\n# Define mountable directories.\nVOLUME [\"/config\"]\nVOLUME [\"/storage\"]\n\n# Metadata.\nLABEL \\\n      org.label-schema.name=\"mkvtoolnix\" \\\n      org.label-schema.description=\"Docker container for MKVToolNix\" \\\n      org.label-schema.version=\"unknown\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-mkvtoolnix\" \\\n      org.label-schema.schema-version=\"1.0\"\n"
}