{
  "startTime": 1674240505183,
  "endTime": 1674240505223,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 15,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 15,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Hubl.in Docker container\n#\n# Build\n#    docker build -t linagora/hublin .\n#\n# Run server and expose 8080\n#    docker run -p 8080:8080 linagora/hublin\n#\n# Run in interactive mode (start the container and launch the bash shell)\n#    docker run -i -t linagora/hublin /bin/bash\n#\n\nFROM node:8\n\nLABEL maintainer=\"Linagora Folks <lgs-openpaas-dev@linagora.com>\"\nLABEL description=\"Provides an image with Hublin\"\n\n# Cache NPM install of package.json has not been changed\n# cf http://www.clock.co.uk/blog/a-guide-on-how-to-cache-npm-install-with-docker\nADD package.json /src/package.json\n\n# Cache bower\nADD bower.json /src/bower.json\nADD .bowerrc /src/.bowerrc\n\nRUN cd /src && npm install bower && npm cache clean --force;\nRUN cd /src && npm install --production --unsafe-perm && npm cache clean --force;\n\nADD . /src\n\nADD config/db.json.docker /src/config/db.json\n\nENV REDIS_HOST redis\nENV REDIS_PORT 6379\n\nEXPOSE 8080 8443\n\nWORKDIR /src\nCMD [\"npm\", \"start\"]\n"
}