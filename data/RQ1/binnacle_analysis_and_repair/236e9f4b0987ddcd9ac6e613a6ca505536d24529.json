{
  "startTime": 1674641747956,
  "endTime": 1674641748024,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) Microsoft Corporation. All rights reserved.\n# Licensed under the MIT License.\n#\n# Docker image file that describes an Amazon Linux image with PowerShell\n# installed from RHEL7 PowerShell package\n\n# Define arg(s) needed for the From statement\nARG fromTag=2.0.20181010\nARG imageRepo=amazonlinux\n\nFROM ${imageRepo}:${fromTag} AS installer-env\n\n# Define Args for the needed to add the package\nARG PS_VERSION=6.1.0\nARG PS_PACKAGE=powershell-${PS_VERSION}-1.rhel.7.x86_64.rpm\nARG PS_PACKAGE_URL=https://github.com/PowerShell/PowerShell/releases/download/v${PS_VERSION}/${PS_PACKAGE}\nARG PS_INSTALL_VERSION=6\n\n# Define Args and Env needed to create links\nENV PS_INSTALL_FOLDER=/opt/microsoft/powershell/$PS_INSTALL_VERSION\n\n# Define Args and Env needed to create links\nENV PS_INSTALL_FOLDER=/opt/microsoft/powershell/$PS_INSTALL_VERSION \\\n    \\\n    # Define ENVs for Localization/Globalization\n    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false \\\n    LC_ALL=en_US.UTF-8 \\\n    LANG=en_US.UTF-8 \\\n    # Set up PowerShell module analysis cache path\n    PSModuleAnalysisCachePath=/var/cache/microsoft/powershell/PSModuleAnalysisCache/ModuleAnalysisCache\n\n# Installation\nRUN curl -f -sSL ${PS_PACKAGE_URL} -o /tmp/powershell-linux.rpm \\\n    # install dependencies\n    && yum install -y \\\n\t    # required for help in PowerShell\n\t    less \\\n\t    # NTLM remoting\n\t    epel-release \\\n            gssntlmssp \\\n    # install powershell package\n    && yum install -y /tmp/powershell-linux.rpm \\\n    # remove powershell package\n    && rm -f /tmp/powershell-linux.rpm \\\n    # intialize powershell module cache\n    && pwsh \\\n        -NoLogo \\\n        -NoProfile \\\n        -Command \" \\\n          \\$ErrorActionPreference = 'Stop' ; \\\n          \\$ProgressPreference = 'SilentlyContinue' ; \\\n          while(!(Test-Path -Path \\$env:PSModuleAnalysisCachePath)) {  \\\n            Write-Host \"'Waiting for $env:PSModuleAnalysisCachePath'\" ; \\\n            Start-Sleep -Seconds 6 ; \\\n          }\" \\\n    # upgrade packages\n    && yum upgrade -y \\\n    # clean cached data\n    && yum clean all \\\n    # remove cache folders and files\n    && rm -rf /var/cache/yum\n\n# Define args needed only for the labels\nARG IMAGE_NAME=pshorg/powershellcommunity:amazonlinux-2.0.20181114\nARG VCS_REF=\"none\"\n\n# Add label last as it's just metadata and uses a lot of parameters\nLABEL maintainer=\"PowerShell Team <powershellteam@hotmail.com>\" \\\n      readme.md=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      description=\"This Dockerfile will install the latest release of PowerShell.\" \\\n      org.label-schema.usage=\"https://github.com/PowerShell/PowerShell/tree/master/docker#run-the-docker-image-you-built\" \\\n      org.label-schema.url=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      org.label-schema.vcs-url=\"https://github.com/PowerShell/PowerShell-Docker\" \\\n      org.label-schema.name=\"powershell\" \\\n      org.label-schema.vendor=\"PowerShell\" \\\n      org.label-schema.vcs-ref=${VCS_REF} \\\n      org.label-schema.version=${PS_VERSION} \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.docker.cmd=\"docker run ${IMAGE_NAME} pwsh -c '$psversiontable'\" \\\n      org.label-schema.docker.cmd.devel=\"docker run ${IMAGE_NAME}\" \\\n      org.label-schema.docker.cmd.test=\"docker run ${IMAGE_NAME} pwsh -c Invoke-Pester\" \\\n      org.label-schema.docker.cmd.help=\"docker run ${IMAGE_NAME} pwsh -c Get-Help\"\n\nCMD [ \"pwsh\" ]\n"
}