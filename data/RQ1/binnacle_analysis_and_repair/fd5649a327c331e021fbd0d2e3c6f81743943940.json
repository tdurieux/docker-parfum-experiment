{
  "startTime": 1674243206252,
  "endTime": 1674243206663,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 5,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 5,
        "columnEnd": 128
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 5,
        "columnEnd": 151
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 5,
        "columnEnd": 141
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 5,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 5,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 5,
        "columnEnd": 162
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 5,
        "columnEnd": 131
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nLABEL name=\"deis-go-dev\" \\\n      maintainer=\"Matt Boersma <matt.boersma@microsoft.com>\"\n\nENV AZCLI_VERSION=2.0.66 \\\n    GO_VERSION=1.12.6 \\\n    GLIDE_VERSION=v0.13.2 \\\n    GLIDE_HOME=/root \\\n    HELM_VERSION=v2.14.1 \\\n    KUBECTL_VERSION=v1.12.8 \\\n    ETCDCTL_VERSION=v3.1.8 \\\n    GOLANGCI_LINT_VERSION=v1.17.1 \\\n    PROTOBUF_VERSION=3.7.0 \\\n    SHELLCHECK_VERSION=v0.6.0 \\\n    SHFMT_VERSION=2.6.4 \\\n    PATH=$PATH:/usr/local/go/bin:/go/bin:/usr/local/bin/docker \\\n    GOPATH=/go\n\n# This is a huge one-liner to optimize the Docker image layer.\n# We disable source repos to speed up apt-get update.\nRUN \\\n  sed -i -e 's/^deb-src/#deb-src/' /etc/apt/sources.list && \\\n  export DEBIAN_FRONTEND=noninteractive && \\\n  apt-get update && \\\n  apt-get upgrade -y --no-install-recommends && \\\n  apt-get install -y --no-install-recommends \\\n    bash \\\n    build-essential \\\n    ca-certificates \\\n    curl \\\n    git-core \\\n    jq \\\n    libffi-dev \\\n    libssl-dev \\\n    man \\\n    mercurial \\\n    net-tools \\\n    netcat \\\n    openssh-client \\\n    procps \\\n    python \\\n    python-dev \\\n    python-pip \\\n    python-setuptools \\\n    rsync \\\n    ruby \\\n    unzip \\\n    upx \\\n    util-linux \\\n    vim \\\n    wamerican \\\n    wget \\\n    zip \\\n  && curl -f -L https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz | tar -C /usr/local -xz \\\n  && curl -f -sSL https://github.com/Masterminds/glide/releases/download/${GLIDE_VERSION}/glide-${GLIDE_VERSION}-linux-amd64.tar.gz \\\n    | tar -vxz -C /usr/local/bin --strip=1 \\\n  && curl -f -sSL -o /tmp/protoc.zip https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protoc-${PROTOBUF_VERSION}-linux-x86_64.zip \\\n  && unzip /tmp/protoc.zip 'bin/protoc' -d /usr/local \\\n  && rm /tmp/protoc.zip \\\n  && curl -f -sSL https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl \\\n  && chmod +x /usr/local/bin/kubectl \\\n  && mkdir -p ${GOPATH}/src/k8s.io/helm \\\n  && curl -f -sSL https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz \\\n    | tar -vxz -C /usr/local/bin --strip=1 \\\n  && mkdir -p /go/bin \\\n  && curl -f https://raw.githubusercontent.com/golang/dep/master/install.sh | sh \\\n  && curl -f -sSL https://aka.ms/downloadazcopy-v10-linux | tar -vxz -C /usr/local/bin --strip=1 \\\n  && mv /usr/local/bin/azcopy /usr/local/bin/azcopy-preview \\\n  && wget https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod/pool/main/a/azcopy/azcopy_7.2.0-netcore_ubuntu16.04_x64.deb \\\n  && dpkg -i azcopy_7.2.0-netcore_ubuntu16.04_x64.deb || echo \"missing dependencies\" \\\n  && rm -f azcopy_7.2.0-netcore_ubuntu16.04_x64.deb \\\n  && apt-get update && apt-get -f -y install \\\n  && curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-17.05.0-ce.tgz \\\n  && tar xzvf docker-17.05.0-ce.tgz -C /usr/local/bin \\\n  && chmod +x -R /usr/local/bin/docker \\\n  && rm docker-17.05.0-ce.tgz \\\n  && curl -f -L https://github.com/coreos/etcd/releases/download/${ETCDCTL_VERSION}/etcd-${ETCDCTL_VERSION}-linux-amd64.tar.gz -o /tmp/etcd-${ETCDCTL_VERSION}.tar.gz \\\n  && tar -C /tmp -xvzf /tmp/etcd-${ETCDCTL_VERSION}.tar.gz --strip-components=1 etcd-${ETCDCTL_VERSION}-linux-amd64/etcdctl \\\n  && mv /tmp/etcdctl /usr/local/bin/etcdctl \\\n  && rm /tmp/etcd-${ETCDCTL_VERSION}.tar.gz \\\n  && go get -u -v \\\n    github.com/AlekSi/gocov-xml \\\n    github.com/axw/gocov/gocov \\\n    github.com/constabulary/gb/... \\\n    github.com/derekparker/delve/cmd/dlv \\\n    github.com/dgrijalva/jwt-go/cmd/jwt \\\n    github.com/golang/protobuf/protoc-gen-go \\\n    github.com/haya14busa/goverage \\\n    github.com/jteeuwen/go-bindata/... \\\n    github.com/mitchellh/gox \\\n    github.com/onsi/ginkgo/ginkgo \\\n    github.com/hashicorp/packer \\\n    gopkg.in/alecthomas/gometalinter.v2 \\\n  && ln -s ${GOPATH}/bin/gometalinter.v2 ${GOPATH}/bin/gometalinter \\\n  && gometalinter.v2 --install \\\n  && curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b ${GOPATH}/bin ${GOLANGCI_LINT_VERSION} \\\n  && curl -f -o /usr/local/bin/shellcheck -sSL https://shellcheck.storage.googleapis.com/shellcheck-${SHELLCHECK_VERSION}.linux-x86_64 \\\n  && chmod +x /usr/local/bin/shellcheck \\\n  && go get -u mvdan.cc/sh/cmd/shfmt \\\n  && git -C \"$GOPATH/src/mvdan.cc/sh\" checkout -q \"v$SHFMT_VERSION\" \\\n  && go install -a -ldflags '-extldflags \"-static\"' mvdan.cc/sh/cmd/shfmt \\\n  && pip install --disable-pip-version-check --no-cache-dir azure-cli==${AZCLI_VERSION} shyaml \\\n  && apt-get purge --auto-remove -y libffi-dev python-dev python-pip \\\n  && apt-get autoremove -y \\\n  && apt-get clean -y \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/doc ${GOPATH}/pkg/* ${GOPATH}/src/* /root/cache /root/.cache \\\n  && go clean -cache -testcache -modcache\n\nWORKDIR /go\n\nCOPY . /\n"
}