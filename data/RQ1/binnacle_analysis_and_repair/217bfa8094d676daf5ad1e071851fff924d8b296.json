{
  "startTime": 1674239350440,
  "endTime": 1674239350547,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use phusion/baseimage as base image. To make your builds\n# reproducible, make sure you lock down to a specific version, not\n# to `latest`! See\n# https://github.com/phusion/baseimage-docker/blob/master/Changelog.md\n# for a list of version numbers.\n# Note also that we use phusion because, as explained on the\n# http://phusion.github.io/baseimage-docker/ page, it automatically\n# contains and starts all needed services (like logging), it\n# takes care of sending around signals when stopped, etc.\n##\n# Actually, I use passenger-full that already has ngingx and python\n# https://github.com/phusion/passenger-docker#using\nFROM phusion/passenger-customizable:0.9.19\n\nMAINTAINER Giovanni Pizzi <giovanni.pizzi@epfl.ch>\n\nARG SEEKPATH_VERSION=1.2.0\n\n# Set correct environment variables.\nENV HOME /root\n\n# Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n\n# If you're using the 'customizable' variant, you need to explicitly opt-in\n# for features. Uncomment the features you want:\n#\n    #   Build system and git.\nRUN /pd_build/utilities.sh && \\\n    #   Python support (2.7 and 3.x - it is 3.5.x in this ubuntu 16.04)\n    /pd_build/python.sh && \\\n    # Enable Nginx and passenger\n    rm -f /etc/service/nginx/down\n\n##########################################\n############ Installation Setup ##########\n##########################################\n\n# First, install pip (for python 2)\n# install required software\n## Note: to install instead pip3 for python3, install the package python3-pip\n## However, then one has to configure the web server to use wsgi with python3\nRUN apt-get update \\\n    && apt-get -y --no-install-recommends install \\\n    python-pip \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get clean all\n\n# install rest of the packages as normal user (app, provided by passenger)\nUSER app\n\n# set $HOME\nENV HOME /home/app\n\n# Download code\nRUN mkdir -p $HOME/code/\nWORKDIR $HOME/code\nRUN git clone \\\n      https://github.com/giovannipizzi/seekpath && \\\n    cd seekpath && \\\n    git checkout v$SEEKPATH_VERSION\n\n# Install SeeK-path\n# Note: if you want to deploy with python3, use 'pip3' instead of 'pip'\nWORKDIR /home/app/code/seekpath\nRUN pip install --no-cache-dir -U --user pip setuptools && \\\n    pip install --no-cache-dir --user -U .[bz,webservice]\n\n# Create empty public dir, needed by passenger\nRUN mkdir webservice/public\n\n# Create a proper wsgi file file\n#\n# NOTE! For the time being, I just disable X-Sendfile,\n# that exists only in apache. For nginx, it is called\n# X-Accel-Redirect, requires some changes to the code though\n# Note that this means, however, that serving static files\n# will be quite slow\n#\nENV SP_WSGI_FILE=webservice/passenger_wsgi.py\nRUN echo \"import sys\" > $SP_WSGI_FILE && \\\n    echo \"sys.path.insert(0, '/home/app/code/seekpath/webservice')\" >> $SP_WSGI_FILE && \\\n    echo \"from seekpath_app import app as application\" >> $SP_WSGI_FILE && \\\n    echo \"application.use_x_sendfile = False\" >> $SP_WSGI_FILE\n\n# Go back to root.\n# Also, it should remain as user root for startup\nUSER root\n\n# Setup nginx\n# Disable default nginx site\nRUN rm /etc/nginx/sites-enabled/default\nADD conf/seekpath-nginx.conf /etc/nginx/sites-enabled/seekpath.conf\n# Set startup script to create the secret key\nRUN mkdir -p /etc/my_init.d\nADD ./conf/create_secret_key.sh /etc/my_init.d/create_secret_key.sh\n\n# Web\nEXPOSE 80\n\n"
}