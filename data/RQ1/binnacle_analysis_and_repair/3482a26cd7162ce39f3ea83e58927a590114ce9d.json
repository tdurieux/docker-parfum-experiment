{
  "startTime": 1674243782311,
  "endTime": 1674243782398,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM containership/alpine-node-yarn:3.5-6.9.2-0.18.1\n\nMAINTAINER ContainerShip Developers <developers@containership.io>\n\n# create /app and add files\nWORKDIR /app\nADD . /app\n\n# set default NODE_ENV=development\nENV NODE_ENV development\nENV CS_NO_ANALYTICS true\n\n# install required packages and dependencies\nRUN apk --update add --no-cache --virtual .build-deps build-base python-dev ruby-dev ruby-bundler libffi-dev \\\n    && apk add --no-cache ca-certificates git iptables ruby-irb \\\n    && yarn install --pure-lockfile --ignore-engines --production \\\n    && gem install ohai --no-document \\\n    && apk del .build-deps \\\n    && rm -rf /var/cache/apk/* && yarn cache clean;\n\n# create tmp directory for codexd snapshots\nRUN mkdir -p /tmp/codexd\n\n# expose ports\nEXPOSE 2666\nEXPOSE 2777\nEXPOSE 80\n\n# specify volumes\nVOLUME /var/run/docker.sock\nVOLUME /var/log/containership\nVOLUME /root/.containership\nVOLUME /opt/containership\n\n# set entrypoint\nENTRYPOINT [\"node\", \"index.js\"]\n"
}