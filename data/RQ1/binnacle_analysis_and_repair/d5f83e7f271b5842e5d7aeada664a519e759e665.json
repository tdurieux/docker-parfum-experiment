{
  "startTime": 1674241599538,
  "endTime": 1674241599747,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 70,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 11,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 82,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###############################\n# Build the FFmpeg-build image.\nFROM alpine:3.8 as build\n\nARG FFMPEG_VERSION=4.1.2\n\nARG PREFIX=/opt/ffmpeg\nARG LD_LIBRARY_PATH=/opt/ffmpeg/lib\nARG MAKEFLAGS=\"-j4\"\n\n# FFmpeg build dependencies.\nRUN apk add --no-cache --update \\\n  build-base \\\n  coreutils \\\n  freetype-dev \\\n  gcc \\\n  lame-dev \\\n  libogg-dev \\\n  libass \\\n  libass-dev \\\n  libvpx-dev \\\n  libvorbis-dev \\\n  libwebp-dev \\\n  libtheora-dev \\\n  opus-dev \\\n  pkgconf \\\n  pkgconfig \\\n  rtmpdump-dev \\\n  wget \\\n  x264-dev \\\n  x265-dev \\\n  yasm\n\n# Get fdk-aac from testing.\nRUN echo http://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories && \\\n  apk add --no-cache --update fdk-aac-dev\n\n# Get ffmpeg source.\nRUN cd /tmp/ && \\\n  wget https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n  tar zxf ffmpeg-${FFMPEG_VERSION}.tar.gz && rm ffmpeg-${FFMPEG_VERSION}.tar.gz\n\n# Compile ffmpeg.\nRUN cd /tmp/ffmpeg-${FFMPEG_VERSION} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  --enable-version3 \\\n  --enable-gpl \\\n  --enable-nonfree \\\n  --enable-small \\\n  --enable-libmp3lame \\\n  --enable-libx264 \\\n  --enable-libx265 \\\n  --enable-libvpx \\\n  --enable-libtheora \\\n  --enable-libvorbis \\\n  --enable-libopus \\\n  --enable-libfdk-aac \\\n  --enable-libass \\\n  --enable-libwebp \\\n  --enable-librtmp \\\n  --enable-postproc \\\n  --enable-avresample \\\n  --enable-libfreetype \\\n  --enable-openssl \\\n  --disable-debug \\\n  --disable-doc \\\n  --disable-ffplay \\\n  --extra-cflags=\"-I${PREFIX}/include\" \\\n  --extra-ldflags=\"-L${PREFIX}/lib\" \\\n  --extra-libs=\"-lpthread -lm\" \\\n  --prefix=\"${PREFIX}\" && \\\n  make && make install && make distclean\n\n# Cleanup.\nRUN rm -rf /var/cache/apk/* /tmp/*\n\n##########################\n# Build the release image.\nFROM alpine:3.8\nLABEL MAINTAINER Alfred Gutierrez <alf.g.jr@gmail.com>\nENV PATH=/opt/ffmpeg/bin:$PATH\n\nRUN apk add --no-cache --update \\\n  ca-certificates \\\n  openssl \\\n  pcre \\\n  lame \\\n  libogg \\\n  libass \\\n  libvpx \\\n  libvorbis \\\n  libwebp \\\n  libtheora \\\n  opus \\\n  rtmpdump \\\n  x264-dev \\\n  x265-dev\n\nCOPY --from=build /opt/ffmpeg /opt/ffmpeg\nCOPY --from=build /usr/lib/libfdk-aac.so.2 /usr/lib/libfdk-aac.so.2\n\nCMD [\"/usr/local/bin/ffmpeg\"]\n"
}