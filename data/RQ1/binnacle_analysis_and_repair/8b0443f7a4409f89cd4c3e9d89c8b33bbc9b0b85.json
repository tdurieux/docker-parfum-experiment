{
  "startTime": 1674240627446,
  "endTime": 1674240627660,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 18,
        "columnEnd": 55
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# cka:v1\nFROM python:3.6.5-alpine3.7\nMAINTAINER xiaolong@caicloud.io\n\nCOPY Docker/requirements.txt /tmp/\n# 准备配置环境\n# pip freeze > requirements.txt\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\n\n# 配置 cfssl\nCOPY cfssl/cfssl_linux-amd64 /usr/bin/cfssl\nCOPY cfssl/cfssljson_linux-amd64 /usr/bin/cfssljson\nCOPY cfssl/cfssl-certinfo_linux-amd64 /usr/bin/cfssl-certinfo\nCOPY kubectl /usr/bin/kubectl\n\nRUN chmod +x /usr/bin/cfssl /usr/bin/cfssljson /usr/bin/cfssl-certinfo /usr/bin/kubectl\n# 配置 rsync openssh\nRUN apk update && apk add --no-cache rsync openssh ca-certificates\nRUN apk --update --no-cache add --virtual build-dependencies python-dev libffi-dev openssl-dev build-base && \\\n    pip install --no-cache-dir --upgrade cffi && \\\n    pip install --no-cache-dir ansible && \\\n    apk del build-dependencies\n\n# 配置时区\n# see: http://wiki.alpinelinux.org/wiki/Setting_the_timezone\nRUN apk --update add tzdata && \\\n    apk add libstdc++ bash curl && \\\n    cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \\\n    echo \"Asia/Shanghai\" > /etc/timezone && \\\n    apk del tzdata && \\\n    rm -rf /tmp/* /var/cache/apk/* && \\\n    echo \"UTC+8:00\" > /etc/TZ\n# 设置时区 中国的时区有多种表述 分别为: UTC+8:00 GMT+8\n# 写/etc/TZ, 不要设置TZ环境变量 ENV TZ UTC+8:00\n\nENV LANG=C.UTF-8\n\n# Here we install GNU libc (aka glibc) and set C.UTF-8 locale as default.\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" && \\\n    ALPINE_GLIBC_PACKAGE_VERSION=\"2.27-r0\" && \\\n    ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    apk add --no-cache --virtual=.build-dependencies wget ca-certificates && \\\n    wget \\\n        \"https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub\" \\\n        -O \"/etc/apk/keys/sgerrand.rsa.pub\" && \\\n    wget \\\n        \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" && \\\n    apk add --no-cache \\\n        \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" && \\\n    \\\n    rm \"/etc/apk/keys/sgerrand.rsa.pub\" && \\\n    /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true && \\\n    echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh && \\\n    \\\n    apk del glibc-i18n && \\\n    \\\n    rm \"/root/.wget-hsts\" && \\\n    apk del .build-dependencies && \\\n    rm \\\n        \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\n\nWORKDIR /cka/service\nRUN mkdir logs\nCOPY inventory .\nCOPY service ."
}