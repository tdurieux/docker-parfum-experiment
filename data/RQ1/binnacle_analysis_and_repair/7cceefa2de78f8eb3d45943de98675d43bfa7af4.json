{
  "startTime": 1674244348568,
  "endTime": 1674244348625,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 58,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:7.10-alpine \n\n# install webpack, and jess at once \nRUN npm install webpack jest -g --quiet && npm cache clean --force;\n\nWORKDIR /tmp \nCOPY package.json /tmp/ \nRUN npm config set registry http://registry.npmjs.org/ && npm install --quiet && npm cache clean --force;\n\nWORKDIR /usr/src/app \nCOPY . /usr/src/app/ \nRUN cp -a /tmp/node_modules /usr/src/app/ \n\n# permission all files under /usr/src/app to node \n# this user comes by default with the node parent docker image \nRUN chown -R node /usr/src/app \n\n# run as non-root user \nUSER node \n\n# package the content based on webpack.config.js \nRUN webpack --config config/webpack.config.js \n\n# tell npm to run in prod mode \nENV NODE_ENV=production \n\n# start node \nCMD [\"npm\", \"start\"] \nEXPOSE 8080 \n\n"
}