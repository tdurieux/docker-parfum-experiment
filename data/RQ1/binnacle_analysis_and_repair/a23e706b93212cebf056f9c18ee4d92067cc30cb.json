{
  "startTime": 1674242083152,
  "endTime": 1674242083252,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6\nLABEL vendor=\"dProg - Philippe Docourt\" maintainer=\"Philippe Docourt\" description=\"Demo Site for Django QR code\"\n\nENV PYTHONUNBUFFERED 1\n\n# Set env variables used in this Dockerfile (add a unique prefix, such as <app name>)\n# Directory in container for project source files.\nARG APP_BASE_DIR=/usr/src/app\n\n# Declare a proper Django settings file.\nENV DJANGO_SETTINGS_MODULE=demo_site.settings\n\n# Make app dir.\nRUN mkdir -p \"$APP_BASE_DIR\"\nWORKDIR \"$APP_BASE_DIR\"\n\n# Install dumb-init is a simple process supervisor and init system designed to run as PID 1 inside minimal container environments.\nRUN pip install --no-cache-dir dumb-init==1.2.1\n\n# Install requirements (separate step for caching intermediate image).\nCOPY requirements.txt \"$APP_BASE_DIR/\"\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY requirements-web-deployment.txt \"$APP_BASE_DIR/\"\nRUN pip install --no-cache-dir -r requirements-web-deployment.txt\n\n# Copy entrypoint script into the image.\nCOPY ./docker-entrypoint.sh /\n\n# Runs \"/usr/local/bin/dumb-init -- /docker-entrypoint\"\nENTRYPOINT [\"/usr/local/bin/dumb-init\", \"--\"]\n\n# Invoke app's entrypoint via dumb-init so that sub-processes are handled properly.\nCMD [\"/docker-entrypoint.sh\"]\n"
}