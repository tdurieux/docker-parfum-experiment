{
  "startTime": 1674252799747,
  "endTime": 1674252800671,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 154
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 156
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 156
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 158
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 220,
        "lineEnd": 220,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 151,
        "lineEnd": 151,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 221,
        "lineEnd": 221,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 183,
        "lineEnd": 186,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 183,
        "lineEnd": 186,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 76,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 183,
        "lineEnd": 186,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 183,
        "lineEnd": 186,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedDockerfile": "# This dockerfile and configuration is derived by\n# Jason Martin <jason@greenpx.co.uk>\n# Many Thanks to the  author in this place!\n\n\nFROM j1mr10rd4n/debian-baseimage-docker:8.2.1\nMAINTAINER Michael Mayer <swd@michael-mayer.biz>\n\n\n# Set environment variables\nENV DEBIAN_FRONTEND noninteractive\nENV ASTERISKUSER asterisk\n\nRUN mkdir -p /var/run/asterisk \\ \n\t&& mkdir -p /etc/asterisk \\\n\t&& mkdir -p /var/lib/asterisk \\\n\t&& mkdir -p /var/log/asterisk \\\n\t&& mkdir -p /var/spool/asterisk \\\n\t&& mkdir -p /usr/lib/asterisk \\\n\t&& mkdir -p /var/www/\n\n# Add Asterisk user\nRUN useradd -m $ASTERISKUSER \\\n\t&& chown $ASTERISKUSER. /var/run/asterisk \\ \n\t&& chown -R $ASTERISKUSER. /etc/asterisk \\\n\t&& chown -R $ASTERISKUSER. /var/lib/asterisk \\\n\t&& chown -R $ASTERISKUSER. /var/log/asterisk \\\n\t&& chown -R $ASTERISKUSER. /var/spool/asterisk \\\n\t&& chown -R $ASTERISKUSER. /usr/lib/asterisk \\\n\t&& chown -R $ASTERISKUSER. /var/www/\n\n\n# Download extra high quality sounds\nWORKDIR /var/lib/asterisk/sounds\nRUN curl -f -o asterisk-core-sounds-en-wav-current.tar.gz -L https://downloads.asterisk.org/pub/telephony/sounds/asterisk-core-sounds-en-wav-current.tar.gz \\\n\t&& tar -xzf asterisk-core-sounds-en-wav-current.tar.gz \\\n\t&& rm -f asterisk-core-sounds-en-wav-current.tar.gz \\\n\t&& curl -f -o asterisk-extra-sounds-en-wav-current.tar.gz -L https://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-wav-current.tar.gz \\\n\t&& tar -xzf asterisk-extra-sounds-en-wav-current.tar.gz \\\n\t&& rm -f asterisk-extra-sounds-en-wav-current.tar.gz \\\n\t&& curl -f -o asterisk-core-sounds-en-g722-current.tar.gz -L https://downloads.asterisk.org/pub/telephony/sounds/asterisk-core-sounds-en-g722-current.tar.gz \\\n\t&& tar -xzf asterisk-core-sounds-en-g722-current.tar.gz \\\n\t&& rm -f asterisk-core-sounds-en-g722-current.tar.gz \\\n\t&& curl -f -o asterisk-extra-sounds-en-g722-current.tar.gz -L https://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-g722-current.tar.gz \\\n\t&& tar -xzf asterisk-extra-sounds-en-g722-current.tar.gz \\\n\t&& rm -f asterisk-extra-sounds-en-g722-current.tar.gz\n\nRUN apt-get update && apt-get install --no-install-recommends -y unzip && rm -rf /var/lib/apt/lists/*;\n\n# Download German sounds\nRUN mkdir /var/lib/asterisk/sounds/de\nWORKDIR /var/lib/asterisk/sounds/de\nRUN curl -f -o core.zip -L https://www.asterisksounds.org/de/download/asterisk-sounds-core-de-sln16.zip \\\n\t&& curl -f -o extra.zip -L https://www.asterisksounds.org/de/download/asterisk-sounds-extra-de-sln16.zip \\\n\t&& unzip -u core.zip \\\n\t&& unzip -u extra.zip\nRUN rm -f core.zip \\\n\t&& rm -f extra.zip\nRUN chown -R $ASTERISKUSER.$ASTERISKUSER /var/lib/asterisk/sounds/de  \\\n\t&& find /var/lib/asterisk/sounds/de -type d -exec chmod 0775 {} \\;\n\n\n\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen\n\n# Upgrade base system\nRUN apt-get update && apt-get -y upgrade\n\n# Run this command on docker start\nCMD [\"/sbin/my_init\"]\n\n# *Loosely* Following steps on FreePBX wiki\n# http://wiki.freepbx.org/display/FOP/Installing+FreePBX+13+on+Ubuntu+Server+14.04.2+LTS\n\n\n# Install Required Dependencies\nRUN apt-get install --no-install-recommends -y \\\n\t\tapache2 \\\n\t\tautoconf \\\n\t\tautomake \\\n\t\tbison \\\n\t\tbuild-essential \\\n\t\tcurl \\\n\t\tflex \\\n\t\tgit \\\n\t\tlibasound2-dev \\\n\t\tlibcurl4-openssl-dev \\\n\t\tlibical-dev \\\n\t\tlibmyodbc \\\n\t\tlibmysqlclient-dev \\\n\t\tlibncurses5-dev \\\n\t\tlibneon27-dev \\\n\t\tlibnewt-dev \\\n\t\tlibodbc1 \\\n\t\tlibogg-dev \\\n\t\tlibspandsp-dev \\\n\t\tlibsqlite3-dev \\\n\t\tlibsrtp0-dev \\\n\t\tlibssl-dev \\\n\t\tlibtool \\\n\t\tlibvorbis-dev \\\n\t\tlibxml2-dev \\\n\t\tmpg123 \\\n\t\tmysql-client \\\n\t\tmysql-server \\\n\t\topenssh-server \\\n\t\tphp-pear \\\n\t\tphp5 \\\n\t\tphp5-cli \\\n\t\tphp5-curl \\\n\t\tphp5-gd \\\n\t\tphp5-mysql \\\n\t\tpkg-config \\\n\t\tsox \\\n\t\tsubversion \\\n\t\tsqlite3 \\\n\t\tunixodbc-dev \\\n\t\tuuid \\\n\t\tuuid-dev && rm -rf /var/lib/apt/lists/*;\n\n# Replace default conf files to reduce memory usage\nCOPY conf/my-small.cnf /etc/mysql/my.cnf\nCOPY conf/mpm_prefork.conf /etc/apache2/mods-available/mpm_prefork.conf\n\nRUN chown -R $ASTERISKUSER. /var/www/* \\\n\t&& rm -rf /var/www/html\n\n\n# Install Legacy pear requirements\nRUN pear install Console_Getopt\n\n# Compile and install pjproject\nWORKDIR /usr/src\nRUN curl -sf -o pjproject.tar.bz2 -L https://www.pjsip.org/release/2.4/pjproject-2.4.tar.bz2 \\\n\t&& tar -xjvf pjproject.tar.bz2 \\\n\t&& rm -f pjproject.tar.bz2 \\\n\t&& cd pjproject-2.4 \\\n\t&& CFLAGS='-DPJ_HAS_IPV6=1' ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared --disable-sound --disable-resample --disable-video --disable-opencore-amr \\\n\t&& make dep \\\n\t&& make \\\n\t&& make install \\\n\t&& rm -r /usr/src/pjproject-2.4\n\n# Compile and Install jansson\nWORKDIR /usr/src\nRUN curl -sf -o jansson.tar.gz -L https://www.digip.org/jansson/releases/jansson-2.7.tar.gz \\\n\t&& mkdir jansson \\\n\t&& tar -xzf jansson.tar.gz -C jansson --strip-components=1 \\\n\t&& rm jansson.tar.gz \\\n\t&& cd jansson \\\n\t&& autoreconf -i \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& make \\\n\t&& make install \\\n\t&& rm -r /usr/src/jansson\n\n# Compile and Install Asterisk\nWORKDIR /usr/src\nRUN curl -f -o asterisk.tar.gz -L https://downloads.asterisk.org/pub/telephony/certified-asterisk/asterisk-certified-13.13-current.tar.gz\nRUN mkdir asterisk \\\n\t&& tar -xzf /usr/src/asterisk.tar.gz -C /usr/src/asterisk --strip-components=1 \\\n\t&& rm asterisk.tar.gz\n\nWORKDIR /usr/src/asterisk\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN contrib/scripts/get_mp3_source.sh\nRUN make menuselect.makeopts\n\n# RUN ./menuselect/menuselect --list-options \nRUN ./menuselect/menuselect --enable=chan_sip --enable=format_mp3 --disable=BUILD_NATIVE\nRUN\tcat menuselect.makeopts\nRUN make\nRUN make install \\\n\t&& make config \\\n\t&& ldconfig \\\n\t&& update-rc.d -f asterisk remove\n\nRUN rm -r /usr/src/asterisk\n\nWORKDIR /tmp\n\n\n# 2nd dependency download (Placing it here avoids recompiling asterisk&co during docker build)\nRUN apt-get install --no-install-recommends -y \\\n\t\tsudo \\\n\t\tnet-tools \\\n\t\tcoreutils && rm -rf /var/lib/apt/lists/*;\n\n# Configure apache\nRUN sed -i 's/\\(^upload_max_filesize = \\).*/\\120M/' /etc/php5/apache2/php.ini \\\n\t&& sed -i 's/^\\(User\\|Group\\).*/\\1 asterisk/' /etc/apache2/apache2.conf \\\n\t&& sed -i 's/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf \\\n\t&& sed -i 's/VirtualHost \\*:80/VirtualHost \\*:8082/' /etc/apache2/sites-available/000-default.conf \\\n\t&& sed -i 's/Listen 80/Listen 8082/' /etc/apache2/ports.conf\n\n\n# Setup services\nCOPY start-apache2.sh /etc/service/apache2/run\nRUN chmod +x /etc/service/apache2/run\n\nCOPY start-mysqld.sh /etc/service/mysqld/run\nRUN chmod +x /etc/service/mysqld/run\n\nCOPY start-asterisk.sh /etc/service/asterisk/run\nRUN chmod +x /etc/service/asterisk/run\n\nCOPY start-amportal.sh /etc/my_init.d/start-amportal.sh\n\n\n#Make CDRs work\nCOPY conf/cdr/odbc.ini /etc/odbc.ini\nCOPY conf/cdr/odbcinst.ini /etc/odbcinst.ini\nCOPY conf/cdr/cdr_adaptive_odbc.conf /etc/asterisk/cdr_adaptive_odbc.conf\nRUN chown asterisk:asterisk /etc/asterisk/cdr_adaptive_odbc.conf \\\n\t&& chmod 775 /etc/asterisk/cdr_adaptive_odbc.conf\n\n# Download and prepare FreePBX\nWORKDIR /usr/src\n\n# Download and unzip\nRUN curl -f -o freepbx.tgz -L https://mirror.freepbx.org/modules/packages/freepbx/freepbx-13.0-latest.tgz\nRUN tar xfz freepbx.tgz && rm freepbx.tgz\nRUN rm -rf freepbx.tgz\n\n# Prepare install\nRUN a2enmod rewrite\nCOPY ./conf/asterisk.conf /etc/asterisk/\n\n# install\nCOPY install-freepbx.sh /\nRUN chmod +x /install-freepbx.sh\nRUN /install-freepbx.sh\nRUN rm -rf /usr/src/freepbx\n\n\n\n\n\n\n\n\n\n##################\n# Cleanup\n##################\nRUN apt-get remove -y --purge autoconf \\\n\t\tautomake \\\n\t\tbison \\\n\t\tbuild-essential \\\n\t\tflex \\\n\t\tgit \\\n\t\tlibasound2-dev \\\n\t\tlibcurl4-openssl-dev \\\n\t\tlibical-dev \\\n\t\tlibmysqlclient-dev \\\n\t\tlibncurses5-dev \\\n\t\tlibneon27-dev \\\n\t\tlibnewt-dev \\\n\t\tlibogg-dev \\\n\t\tlibspandsp-dev \\\n\t\tlibsqlite3-dev \\\n\t\tlibsrtp0-dev \\\n\t\tlibssl-dev \\\n\t\tlibvorbis-dev \\\n\t\tlibxml2-dev \\\n\t\topenssh-server \\\n\t\tsubversion \\\n\t\tunixodbc-dev \\\n\t\tuuid-dev\n\n\n\nRUN apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nVOLUME [\"/etc/asterisk\",\"/etc/apache2\",\"/var/www/html\",\"/var/lib/mysql\",\"/var/spool/asterisk\",\"/var/lib/asterisk\"]"
}