{
  "startTime": 1674244881168,
  "endTime": 1674244881248,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 5,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Composer Docker Container\n# Base Dockerfile: composer/base\nFROM php:5-cli\nMAINTAINER Rob Loach <robloach@gmail.com>\n\n# Packages\nRUN apt-get update && \\\n  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    libfreetype6-dev \\\n    libjpeg62-turbo-dev \\\n    libmcrypt-dev \\\n    libpng12-dev \\\n    libbz2-dev \\\n    libxslt-dev \\\n    libldap2-dev \\\n    php-pear \\\n    curl \\\n    git \\\n    subversion \\\n    unzip \\\n    wget \\\n  && rm -r /var/lib/apt/lists/*\n\n# PHP Extensions\nRUN docker-php-ext-install bcmath mcrypt zip bz2 mbstring pcntl xsl \\\n  && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n  && docker-php-ext-install gd \\\n  && docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ \\\n  && docker-php-ext-install ldap\n\n# Memory Limit\nRUN echo \"memory_limit=-1\" > $PHP_INI_DIR/conf.d/memory-limit.ini\n\n# Time Zone\nRUN echo \"date.timezone=${PHP_TIMEZONE:-UTC}\" > $PHP_INI_DIR/conf.d/date_timezone.ini\n\n# Disable Populating Raw POST Data\n# Not needed when moving to PHP 7.\n# http://php.net/manual/en/ini.core.php#ini.always-populate-raw-post-data\nRUN echo \"always_populate_raw_post_data=-1\" > $PHP_INI_DIR/conf.d/always_populate_raw_post_data.ini\n\n# Register the COMPOSER_HOME environment variable\nENV COMPOSER_HOME /composer\n\n# Add global binary directory to PATH and make sure to re-export it\nENV PATH /composer/vendor/bin:$PATH\n\n# Allow Composer to be run as root\nENV COMPOSER_ALLOW_SUPERUSER 1\n\n# Setup the Composer installer\nRUN curl -f -o /tmp/composer-setup.php https://getcomposer.org/installer \\\n  && curl -f -o /tmp/composer-setup.sig https://composer.github.io/installer.sig \\\n  && php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\"\n\n# Set up the volumes and working directory\nVOLUME [\"/app\"]\nWORKDIR /app\n\n# Set up the command arguments\nCMD [\"-\"]\nENTRYPOINT [\"composer\", \"--ansi\"]\n"
}