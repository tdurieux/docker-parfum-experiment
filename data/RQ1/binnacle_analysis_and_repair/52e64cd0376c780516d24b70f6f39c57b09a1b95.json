{
  "startTime": 1674244646615,
  "endTime": 1674244646672,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This GDAL image comes with support for FileGDB and has Python 3.6 already installed.\n# Based on image _/ubuntu.\n\nFROM geometalab/gdal-docker:v3.0.0\n\nUSER root\n\nENV PYTHONUNBUFFERED=non-empty-string PYTHONIOENCODING=utf-8 LC_ALL=C.UTF-8 LANG=C.UTF-8\nENV DJANGO_OSMAXX_CONVERSION_SERVICE_USERNAME=default_user DJANGO_OSMAXX_CONVERSION_SERVICE_PASSWORD=default_password\nENV NUM_WORKERS=5 DATABASE_HOST=frontenddatabase DATABASE_PORT=5432 APP_PORT=8000 APP_HOST=0.0.0.0\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get clean \\\n    && DEBIAN_FRONTEND=noninteractive apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    git \\\n    libpq-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install required Python packages:\nENV USER py\nENV HOME /home/$USER\nWORKDIR $HOME\n\nRUN pip3 install --no-cache-dir honcho\nADD ./requirements.txt $HOME/requirements.txt\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# TODO: this is just a temporary solution, use pip for production as soon as geometalab.osmaxx is published there\nADD ./ $HOME\n\nRUN mkdir -p $HOME/docker_entrypoint/osmaxx/web_frontend $HOME/entrypoint\nCOPY ./docker_entrypoint/osmaxx/web_frontend $HOME/entrypoint\nCOPY ./docker_entrypoint/wait-for-it/wait-for-it.sh $HOME/entrypoint/wait-for-it.sh\n\nEXPOSE 8000\n\nENTRYPOINT [\"/home/py/entrypoint/entrypoint.sh\"]\nCMD [\"honcho\", \"-f\", \"./web_frontend/Procfile.django.prod\", \"start\"]\n"
}