{
  "startTime": 1674234959325,
  "endTime": 1674234959544,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 22,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8\nLABEL maintainer=\"Haaroon Yousaf (h.yousaf [at] ucl.ac.uk)\"\n\n################## BEGIN INSTALLATION ######################\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common \\\n    wget \\\n    apt-transport-https \\\n    gnupg \\\n    curl \\\n    build-essential \\\n    checkinstall \\\n    libreadline-gplv2-dev \\\n    libncursesw5-dev \\\n    libssl-dev \\\n    libsqlite3-dev \\\n    tk-dev \\\n    libgdbm-dev \\\n    libc6-dev \\\n    libbz2-dev \\\n    pandoc \\\n    scala \\\n    git && rm -rf /var/lib/apt/lists/*;\n\n# download and install apache spark from the mirror\nRUN mkdir -p /opt/spark && \\\n    wget -q --show-progress http://mirror.ox.ac.uk/sites/rsync.apache.org/spark/spark-2.2.0/spark-2.2.0-bin-hadoop2.7.tgz && \\\n    tar -xzf spark-2.2.0-bin-hadoop2.7.tgz && \\\n    cp -r spark-2.2.0-bin-hadoop2.7/* /opt/spark && \\\n    rm -rf spark-2.2.0-bin-hadoop2.7.tgz spark-2.2.0-bin-hadoop2.7 && \\\n    cd  /opt/spark && \\\n    wget https://jdbc.postgresql.org/download/postgresql-42.2.2.jar\n\nENV SPARK_CLASSPATH=/opt/spark\nENV SPARK_HOME=/opt/spark\nENV PATH=$SPARK_HOME/bin:$PATH\n\n#RUN set -ex && \\\n#    echo 'deb http://deb.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list && \\\n#    apt-get update -y && \\\n#    apt-get install -t jessie-backports \\\n#        --force-yes openjdk-8-jre-headless \\\n#        ca-certificates-java \\\n#        openjdk-8-jdk \\\n\nRUN apt-get update && apt-get install --no-install-recommends -y python2.7 python-pip python-dev python-tk && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir python-bitcoinrpc==1.0 \\\n        SQLAlchemy==1.1.13 \\\n        Flask \\\n        pypandoc \\\n        jsonschema \\\n        networkx \\\n        numpy \\\n        matplotlib \\\n        pandas \\\n        pycrypto \\\n        python-dateutil \\\n        requests \\\n        simplejson \\\n        ijson && \\\n    pip install --no-cache-dir pyspark==2.2.0.post0\n\nRUN echo \"spark.driver.extraClassPath = /opt/spark/postgresql-42.2.2.jar\" >> /opt/spark/conf/spark-defaults.conf\nRUN echo \"spark.executor.extraClassPath = /opt/spark/postgresql-42.2.2.jar\" >> /opt/spark/conf/spark-defaults.conf\n\nRUN apt-get update && apt-get install --no-install-recommends -y ipython && rm -rf /var/lib/apt/lists/*;\nENV PYSPARK_DRIVER_PYTHON=/usr/bin/ipython\nENV SCRIPTS /root/scripts\nRUN mkdir -p $SCRIPTS\nADD docker/*.py $SCRIPTS/\nADD docker/runAll.sh $SCRIPTS/\nRUN chmod u+x $SCRIPTS/runAll.sh\nENV RESEARCH /root/research\nRUN mkdir -p $RESEARCH\nADD docker/addresses/*.* $RESEARCH/\n\nVOLUME [\"/root/research\"]\n\nCMD [\"bash\"]\n"
}