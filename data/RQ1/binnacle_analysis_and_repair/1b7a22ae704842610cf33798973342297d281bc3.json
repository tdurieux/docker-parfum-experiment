{
  "startTime": 1674251401410,
  "endTime": 1674251401912,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 133
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nARG CLANG_VERSION=7.0.1\nARG CMAKE_VERSION=3.13.4\nARG PROTOBUF_VERSION=3.7.0\n\n# Install the basics\nRUN apt-get update && apt-get install --no-install-recommends -y curl python-software-properties build-essential xz-utils libreadline-dev && rm -rf /var/lib/apt/lists/*;\n\n# Make latest NodeJS available\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\n\n# Install all required packages\nRUN apt-get install --no-install-recommends -y \\\n    autoconf \\\n    git \\\n    libcurl4-openssl-dev \\\n    libicu-dev \\\n    libssl-dev \\\n    libtool \\\n    ninja-build \\\n    nodejs \\\n    pkg-config \\\n    unzip && rm -rf /var/lib/apt/lists/*;\n\n# Install ruby 2.6\nRUN git clone https://github.com/rbenv/rbenv.git ~/.rbenv \\\n    && cd ~/.rbenv && src/configure && make -C src \\\n    && mkdir -p ~/.rbenv/plugins && git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build \\\n    && echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >> ~/.bashrc && echo 'eval \"$(rbenv init -)\"' >> ~/.bashrc && . ~/.bashrc \\\n    && rbenv install 2.6.3 && rbenv global 2.6.3 \\\n    && ruby -v\n\n# Install clang\nENV CLANG_VERSION=$CLANG_VERSION\nRUN curl -fSsL https://releases.llvm.org/$CLANG_VERSION/clang+llvm-$CLANG_VERSION-x86_64-linux-gnu-ubuntu-16.04.tar.xz -o clang.tar.xz \\\n    && tar -xJf clang.tar.xz --directory /usr --strip-components=1 \\\n    && rm -rf clang.tar.xz\n\n# Install Boost\nRUN curl -fSsL https://dl.bintray.com/boostorg/release/1.66.0/source/boost_1_66_0.tar.gz -o boost.tar.gz \\\n    && tar xzf boost.tar.gz \\\n    && mv boost_1_66_0/boost /usr/include \\\n    && rm -rf boost* && rm boost.tar.gz\n\n# Install CMake\nENV CMAKE_VERSION=$CMAKE_VERSION\nRUN cd /usr/local/src \\\n    && curl -fSsOL https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/cmake-$CMAKE_VERSION.tar.gz \\\n    && tar xvf cmake-$CMAKE_VERSION.tar.gz \\\n    && cd cmake-$CMAKE_VERSION \\\n    && ./bootstrap --system-curl \\\n    && make \\\n    && make install \\\n    && cd .. \\\n    && rm -rf cmake* && rm cmake-$CMAKE_VERSION.tar.gz\nRUN cmake --version\n\n# Clean Up\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Clone repo\nENV CC=/usr/bin/clang\nENV CXX=/usr/bin/clang++\nRUN git clone https://github.com/TrustWallet/wallet-core.git \\\n    && cd wallet-core \\\n    && export PREFIX=/usr/local \\\n    && tools/install-dependencies\n\nCMD [\"/bin/bash\"]\n"
}