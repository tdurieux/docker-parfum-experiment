{
  "startTime": 1674246532304,
  "endTime": 1674246532822,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedDockerfile": "#####################################################################################################\n# Pytorch image from: https://github.com/ufoym/deepo/blob/master/docker/Dockerfile.pytorch-py36-cu100\n#####################################################################################################\nFROM nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04\nENV LANG C.UTF-8\nRUN APT_INSTALL=\"apt-get install -y --no-install-recommends\" && \\\n    PIP_INSTALL=\"python -m pip --no-cache-dir install --upgrade\" && \\\n    GIT_CLONE=\"git clone --depth 10\" && \\\n\n    rm -rf /var/lib/apt/lists/* \\\n           /etc/apt/sources.list.d/cuda.list \\\n           /etc/apt/sources.list.d/nvidia-ml.list && \\\n\n    apt-get update && \\\n\n# tools\n    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \\\n        build-essential \\\n        apt-utils \\\n        ca-certificates \\\n        wget \\\n        git \\\n        vim \\\n        && \\\n\n    $GIT_CLONE https://github.com/Kitware/CMake ~/cmake && \\\n    cd ~/cmake && \\\n    ./bootstrap && \\\n    make -j\"$(nproc)\" install && \\\n\n# python\n    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \\\n        software-properties-common \\\n        && \\\n    add-apt-repository ppa:deadsnakes/ppa && \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \\\n        python3.6 \\\n        python3.6-dev \\\n        python3-distutils-extra \\\n        && \\\n    wget -O ~/get-pip.py \\\n        https://bootstrap.pypa.io/get-pip.py && \\\n    python3.6 ~/get-pip.py && \\\n    ln -s /usr/bin/python3.6 /usr/local/bin/python3 && \\\n    ln -s /usr/bin/python3.6 /usr/local/bin/python && \\\n    $PIP_INSTALL \\\n        setuptools \\\n        && \\\n    $PIP_INSTALL \\\n        numpy \\\n        scipy \\\n        pandas \\\n        cloudpickle \\\n        scikit-learn \\\n        matplotlib \\\n        Cython \\\n        && \\\n\n# pytorch\n    $PIP_INSTALL \\\n        future \\\n        numpy \\\n        protobuf \\\n        enum34 \\\n        pyyaml \\\n        typing \\\n        torchvision_nightly \\\n        && \\\n    $PIP_INSTALL \\\n        torch_nightly -f \\\n        https://download.pytorch.org/whl/nightly/cu100/torch_nightly.html\n#####################################################################################################\n# Install LASER\n#####################################################################################################\nRUN apt-get install --no-install-recommends -y unzip \\\n    g++ wget cpio \\\n    libgtest-dev swig3.0 \\\n    libopenblas-dev && rm -rf /var/lib/apt/lists/*;\n\n# python modules\nRUN pip install --no-cache-dir transliterate jieba\n\n#install faiss\nRUN cd /opt && \\\n    git clone https://github.com/facebookresearch/faiss.git && \\\n    cd faiss && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-cuda=/usr/local/cuda --with-swig=swig3.0 && \\\n    make -j 8 && make -C python && make install && make -C python install\n\n#install LASER\nRUN cd /opt && \\\n    git clone https://github.com/facebookresearch/LASER.git && \\\n    cd LASER && \\\n    LASER=/opt/LASER bash ./install_models.sh\n\n#install LASER tools-external\nRUN cd /opt/LASER && sed -i \"s#g++ -std=c++11 -pthread -O3 fast.cc -o fast#g++ -std=c++11 -pthread -O3 fastBPE/main.cc -IfastBPE -o fast#g\" install_external_tools.sh && \\\n    LASER=/opt/LASER bash ./install_external_tools.sh\n\n#install fastBPE\nRUN cd /opt/LASER/tools-external/fastBPE && python setup.py install\n\n#install mecab\nRUN cd /tmp && \\\n    wget -O mecab-0.996.tar.gz \"https://drive.google.com/uc?export=download&id=0B4y35FiV1wh7cENtOXlicTFaRUE\" && \\\n    tar xvzf mecab-0.996.tar.gz && \\\n    cd mecab-0.996 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix /opt/LASER/tools-external/mecab --with-charset=utf8 && \\\n    make install && \\\n    rm -rf mecab-0.996.tar.gz mecab-0.996\n\nRUN cd /tmp && \\\n    wget -O mecab-ipadic-2.7.0-XXXX.tar.gz \"https://drive.google.com/uc?export=download&id=0B4y35FiV1wh7MWVlSDBCSXZMTXM\" && \\\n    tar xvzf mecab-ipadic-2.7.0-XXXX.tar.gz && \\\n    cd mecab-ipadic-2.7.0-20070801/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/LASER/tools-external/mecab --with-mecab-config=/opt/LASER/tools-external/mecab/bin/mecab-config --with-charset=utf8 && \\\n    make install && \\\n    rm -rf mecab-ipadic-2.7.0-XXXX.tar.gz mecab-ipadic-2.7.0-20070801\n\nRUN echo \"export LASER=/opt/LASER\" >> /etc/bash.bashrc && echo \"export LC_ALL=C.UTF-8\" >> /etc/bash.bashrc\n#####################################################################################################\n# config & cleanup\n#####################################################################################################\nRUN ldconfig && \\\n    apt-get clean && \\\n    apt-get autoremove && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* ~/*\n#####################################################################################################\n# nmt-wizard-docker\n#####################################################################################################\nADD nmtwizard /nmtwizard\nADD requirements.txt /\nRUN pip --no-cache-dir install -r /requirements.txt && rm /requirements.txt\n\nADD utilities/tuminer/entrypoint.py /\nENTRYPOINT [\"python3\", \"/entrypoint.py\"]\n"
}