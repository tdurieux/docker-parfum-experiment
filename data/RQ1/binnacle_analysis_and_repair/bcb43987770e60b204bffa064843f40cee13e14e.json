{
  "startTime": 1674252436202,
  "endTime": 1674252436558,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 163
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 163
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM maven AS xsdcache\n\n# install schema-fetcher\nRUN git clone --depth=1 https://github.com/mfalaize/schema-fetcher.git && \\\n    cd schema-fetcher && \\\n    mvn install\n\n# fetch XSD file for package.xml\nRUN mkdir -p /opt/xsd/package.xml && \\\n    java -jar schema-fetcher/target/schema-fetcher-1.0.0-SNAPSHOT.jar /opt/xsd/package.xml http://download.ros.org/schema/package_format2.xsd\n\n# fetch XSD file for roslaunch\nRUN mkdir -p /opt/xsd/roslaunch && \\\n    java -jar schema-fetcher/target/schema-fetcher-1.0.0-SNAPSHOT.jar /opt/xsd/roslaunch https://gist.githubusercontent.com/nalt/dfa2abc9d2e3ae4feb82ca5608090387/raw/roslaunch.xsd\n\n# fetch XSD files for SDF\nRUN mkdir -p /opt/xsd/sdf && \\\n    java -jar schema-fetcher/target/schema-fetcher-1.0.0-SNAPSHOT.jar /opt/xsd/sdf http://sdformat.org/schemas/root.xsd && \\\n    sed -i 's|http://sdformat.org/schemas/||g' /opt/xsd/sdf/*\n\n# fetch XSD file for URDF\nRUN mkdir -p /opt/xsd/urdf && \\\n    java -jar schema-fetcher/target/schema-fetcher-1.0.0-SNAPSHOT.jar /opt/xsd/urdf https://raw.githubusercontent.com/ros/urdfdom/master/xsd/urdf.xsd\n\nFROM osrf/ros:kinetic-desktop\n\nMAINTAINER Yosuke Matsusaka <yosuke.matsusaka@gmail.com>\n\nRUN useradd -m developer\n\n# need to renew the key for some reason\nRUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n\n# workaround to enable bash completion for apt-get\n# see: https://github.com/tianon/docker-brew-ubuntu-core/issues/75\nRUN rm /etc/apt/apt.conf.d/docker-clean\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends apt-transport-https && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# OSRF distribution is better for gazebo\nRUN sh -c 'echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main\" > /etc/apt/sources.list.d/gazebo-stable.list' && \\\n    curl -f -L https://packages.osrfoundation.org/gazebo.key | apt-key add -\n\n# nice to have nodejs for web goodies\nRUN sh -c 'echo \"deb https://deb.nodesource.com/node_11.x `lsb_release -cs` main\" > /etc/apt/sources.list.d/nodesource.list' && \\\n    curl -f -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y bash-completion less wget dos2unix vim-tiny clang-6.0 clang-format-6.0 clang-tools-6.0 ipython python-pip openjdk-8-jdk-headless nodejs sudo && \\\n    update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-6.0 100 && \\\n    update-alternatives --install /usr/bin/clang clang /usr/bin/clang-6.0 100 && \\\n    update-alternatives --install /usr/bin/clangd clangd /usr/bin/clangd-6.0 100 && \\\n    update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-6.0 100 && \\\n    npm install -g yarn && \\\n    echo developer ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/developer && \\\n    chmod 0440 /etc/sudoers.d/developer && \\\n    apt-get clean && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n# basic python packages\nRUN pip install --no-cache-dir jedi==0.13.3 pylint==1.9.4 pyflakes autopep8 python-language-server\n\n# tweak catkin_create_pkg command to enable XML code completion\nRUN sed -i 's|<package format=\"2\">|<package format=\"2\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\\n    xsi:noNamespaceSchemaLocation=\"http://download.ros.org/schema/package_format2.xsd\">|g' /usr/lib/python2.7/dist-packages/catkin_pkg/templates/package.xml.in\n\nCOPY .devcontainer/entrypoint.sh /entrypoint.sh\n\nCOPY --from=xsdcache /opt/xsd /opt/xsd\n\n# workaround for git on windows may copy .sh file in crlf line endings\nRUN dos2unix /entrypoint.sh && chmod 755 /entrypoint.sh\n\nUSER developer\nWORKDIR /home/developer\n\nENV HOME /home/developer\nENV SHELL /bin/bash\n\n# clang shows readable compile error\nENV CC /usr/bin/clang\nENV CXX /usr/bin/clang++\n\n# jre is required to use XML editor extension\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64\n\n# enable bash completion\nRUN git clone --depth=1 https://github.com/Bash-it/bash-it.git ~/.bash_it && \\\n    ~/.bash_it/install.sh --silent && \\\n    rm ~/.bashrc.bak && \\\n    echo \"source /usr/share/bash-completion/bash_completion\" >> ~/.bashrc && \\\n    bash -i -c \"bash-it enable completion pip\"\n\n# install theia web IDE\nCOPY .devcontainer/theia-next.package.json /home/developer/package.json\nRUN yarn --cache-folder ./ycache && rm -rf ./ycache && \\\n    NODE_OPTIONS=\"--max_old_space_size=4096\" yarn theia build\n\n# enter ROS world\nRUN echo \"source /opt/ros/$ROS_DISTRO/setup.bash\" >> ~/.bashrc\n\nEXPOSE 3000\n\nENTRYPOINT [ \"/entrypoint.sh\" ]\nCMD [ \"yarn\", \"theia\", \"start\", \"/workspace\", \"--hostname=0.0.0.0\"  ]\n"
}