{
  "startTime": 1674249149501,
  "endTime": 1674249149920,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 11,
        "columnEnd": 89
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 11,
        "columnEnd": 75
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 11,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 11,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 11,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 11,
        "columnEnd": 38
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# 使用超小的Linux镜像alpine\nFROM alpine:3.6\n\nMAINTAINER YoungCoding <bingdianfeishui@gmail.com>\n\nENV HOME /root\n\n# 安装准备\nRUN    apk update \\\n        && apk add --no-cache --virtual .build-deps bash gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev\n\n# 下载fastdfs、libfastcommon、nginx插件的源码\nRUN cd /root \\\n        && curl -fSL https://github.com/happyfish100/libfastcommon/archive/V1.0.36.tar.gz -o fastcommon.tar.gz \\\n        && curl -fSL  https://codeload.github.com/happyfish100/fastdfs/tar.gz/V5.11 -o fastfs.tar.gz \\\n        && curl -fSL  https://github.com/happyfish100/fastdfs-nginx-module/archive/master.tar.gz -o nginx-module.tar.gz \\\n        && tar zxf fastcommon.tar.gz \\\n        && tar zxf fastfs.tar.gz \\\n        && tar zxf nginx-module.tar.gz && rm fastcommon.tar.gz\n\n# 安装libfastcommon\nRUN     cd ${HOME}/libfastcommon-1.0.36/ \\\n        && ./make.sh \\\n        && ./make.sh install\n\n# 安装fastdfs v5.11\nRUN     cd ${HOME}/fastdfs-5.11/ \\\n        && ./make.sh \\\n        && ./make.sh install\n\n# 配置fastdfs: base_dir\nRUN     cd /etc/fdfs/ \\\n        && cp storage.conf.sample storage.conf \\\n        && cp tracker.conf.sample tracker.conf \\\n        && cp client.conf.sample client.conf \\\n        && sed -i \"s|/home/yuqing/fastdfs|/var/local/fdfs/tracker|g\" /etc/fdfs/tracker.conf \\\n        && sed -i \"s|/home/yuqing/fastdfs|/var/local/fdfs/storage|g\" /etc/fdfs/storage.conf \\\n        && sed -i \"s|/home/yuqing/fastdfs|/var/local/fdfs/storage|g\" /etc/fdfs/client.conf\n\n# 获取nginx源码，与fastdfs插件一起编译\nRUN cd ${HOME} \\\n        && curl -fSL https://nginx.org/download/nginx-1.12.2.tar.gz -o nginx-1.12.2.tar.gz \\\n        && tar zxf nginx-1.12.2.tar.gz \\\n        && chmod u+x ${HOME}/fastdfs-nginx-module-master/src/config \\\n        && cd nginx-1.12.2 \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --add-module=${HOME}/fastdfs-nginx-module-master/src \\\n        && make && make install && rm nginx-1.12.2.tar.gz\n\n# 设置nginx和fastdfs联合环境，并配置nginx\nRUN     cp ${HOME}/fastdfs-nginx-module-master/src/mod_fastdfs.conf /etc/fdfs/ \\\n        && sed -i \"s|^store_path0.*$|store_path0=/var/local/fdfs/storage|g\" /etc/fdfs/mod_fastdfs.conf \\\n        && sed -i \"s|^url_have_group_name =.*$|url_have_group_name = true|g\" /etc/fdfs/mod_fastdfs.conf \\\n        && cd ${HOME}/fastdfs-5.11/conf/ \\\n        && cp http.conf mime.types anti-steal.jpg /etc/fdfs/ \\\n        && echo -e \"\\\nevents {\\n\\\n    worker_connections  1024;\\n\\\n}\\n\\\nhttp {\\n\\\n    include       mime.types;\\n\\\n    default_type  application/octet-stream;\\n\\\n    server {\\n\\\n        listen 8888;\\n\\\n        server_name localhost;\\n\\\n\n        location ~ /group[0-9]/M00 {\\n\\\n            ngx_fastdfs_module;\\n\\\n        }\\n\\\n    }\\n\\\n}\">/usr/local/nginx/conf/nginx.conf\n\n# 清理文件\nRUN rm -rf ${HOME}/*\nRUN apk del .build-deps gcc libc-dev make openssl-dev linux-headers curl gnupg libxslt-dev gd-dev geoip-dev\nRUN apk add --no-cache bash pcre-dev zlib-dev\n\n\n# 配置启动脚本，在启动时中根据环境变量替换nginx端口、fastdfs端口\n# 默认nginx端口\nENV WEB_PORT 8888\n# 默认fastdfs端口\nENV FDFS_PORT 22122\n# 创建启动脚本\nRUN     echo -e \"\\\nmkdir -p /var/local/fdfs/storage/data /var/local/fdfs/tracker; \\n\\\nln -s /var/local/fdfs/storage/data/ /var/local/fdfs/storage/data/M00; \\n\\n\\\nsed -i \\\"s/listen\\ .*$/listen\\ \\$WEB_PORT;/g\\\" /usr/local/nginx/conf/nginx.conf; \\n\\\nsed -i \\\"s/http.server_port=.*$/http.server_port=\\$WEB_PORT/g\\\" /etc/fdfs/storage.conf; \\n\\n\\\nif [ \\\"\\$IP\\\" = \\\"\\\" ]; then \\n\\\n    IP=\\`ifconfig eth0 | grep inet | awk '{print \\$2}'| awk -F: '{print \\$2}'\\`; \\n\\\nfi \\n\\\nsed -i \\\"s/^tracker_server=.*$/tracker_server=\\$IP:\\$FDFS_PORT/g\\\" /etc/fdfs/client.conf; \\n\\\nsed -i \\\"s/^tracker_server=.*$/tracker_server=\\$IP:\\$FDFS_PORT/g\\\" /etc/fdfs/storage.conf; \\n\\\nsed -i \\\"s/^tracker_server=.*$/tracker_server=\\$IP:\\$FDFS_PORT/g\\\" /etc/fdfs/mod_fastdfs.conf; \\n\\n\\\n/etc/init.d/fdfs_trackerd start; \\n\\\n/etc/init.d/fdfs_storaged start; \\n\\\n/usr/local/nginx/sbin/nginx; \\n\\\ntail -f /usr/local/nginx/logs/access.log \\\n\">/start.sh \\\n&& chmod u+x /start.sh\n\n# 暴露端口。改为采用host网络，不需要单独暴露端口\n# EXPOSE 80 22122\n\nENTRYPOINT [\"/bin/bash\",\"/start.sh\"]"
}