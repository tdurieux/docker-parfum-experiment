{
  "startTime": 1674240786781,
  "endTime": 1674240787629,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 6,
        "columnEnd": 75
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 6,
        "columnEnd": 75
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 6,
        "columnEnd": 76
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 6,
        "columnEnd": 76
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 6,
        "columnEnd": 77
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 6,
        "columnEnd": 77
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 6,
        "columnEnd": 77
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 6,
        "columnEnd": 77
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 6,
        "columnEnd": 74
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 6,
        "columnEnd": 74
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 6,
        "columnEnd": 74
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 6,
        "columnEnd": 74
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 6,
        "columnEnd": 75
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 6,
        "columnEnd": 75
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 6,
        "columnEnd": 78
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 6,
        "columnEnd": 78
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 6,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 6,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 6,
        "columnEnd": 89
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 6,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 6,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "######################################################################\n# Copyright (c) 2019 Claudio André <claudioandre.br at gmail.com>\n#\n# This program comes with ABSOLUTELY NO WARRANTY; express or implied.\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, as expressed in version 2, seen at\n# http://www.gnu.org/licenses/gpl-2.0.html\n######################################################################\n\nFROM ubuntu:18.04\nLABEL maintainer Claudio André (c) 2017-2019 1.9.0J1\nLABEL software John the Ripper 1.9.0 Jumbo 1\n\nCOPY john/ /john\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s /usr/local/bin/docker-entrypoint.sh / # backwards compat\n\nRUN apt-get update -qq && \\\n    apt-get install --no-install-recommends -y \\\n        build-essential libssl-dev zlib1g-dev yasm libgmp-dev libpcap-dev pkg-config \\\n        libbz2-dev wget git libusb-1.0-0-dev && \\\n    useradd -U -m JtR && \\\n    # Build John the Ripper\n    cd john/src && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests --disable-openmp CPPFLAGS='-msse2' && make -s clean && make -sj2 && mv ../run/john ../run/john-sse2-no-omp && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests                  CPPFLAGS='-msse2' && make -s clean && make -sj2 && mv ../run/john ../run/john-sse2 && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests --disable-openmp CPPFLAGS='-mssse3' && make -s clean && make -sj2 && mv ../run/john ../run/john-ssse3-no-omp && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests                  CPPFLAGS='-mssse3' && make -s clean && make -sj2 && mv ../run/john ../run/john-ssse3 && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests --disable-openmp CPPFLAGS='-msse4.1' && make -s clean && make -sj2 && mv ../run/john ../run/john-sse4.1-no-omp && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests                  CPPFLAGS='-msse4.1' && make -s clean && make -sj2 && mv ../run/john ../run/john-sse4.1 && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests --disable-openmp CPPFLAGS='-msse4.2' && make -s clean && make -sj2 && mv ../run/john ../run/john-sse4.2-no-omp && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests                  CPPFLAGS='-msse4.2' && make -s clean && make -sj2 && mv ../run/john ../run/john-sse4.2 && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests --disable-openmp CPPFLAGS='-mavx' && make -s clean && make -sj2 && mv ../run/john ../run/john-avx-no-omp && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests                  CPPFLAGS='-mavx' && make -s clean && make -sj2 && mv ../run/john ../run/john-avx && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests --disable-openmp CPPFLAGS='-mxop' && make -s clean && make -sj2 && mv ../run/john ../run/john-xop-no-omp && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests                  CPPFLAGS='-mxop' && make -s clean && make -sj2 && mv ../run/john ../run/john-xop && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests --disable-openmp CPPFLAGS='-mavx2' && make -s clean && make -sj2 && mv ../run/john ../run/john-avx2-no-omp && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests                  CPPFLAGS='-mavx2' && make -s clean && make -sj2 && mv ../run/john ../run/john-avx2 && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests --disable-openmp CPPFLAGS='-mavx512f' && make -s clean && make -sj2 && mv ../run/john ../run/john-avx512f-no-omp && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests                  CPPFLAGS='-mavx512f' && make -s clean && make -sj2 && mv ../run/john ../run/john-avx512f && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests --disable-openmp CPPFLAGS='-mavx512bw' && make -s clean && make -sj2 && mv ../run/john ../run/john-avx512bw-no-omp && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests                  CPPFLAGS='-mavx512bw' && make -s clean && make -sj2 && mv ../run/john ../run/john-avx512bw && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests --enable-ztex --disable-openmp CPPFLAGS='-msse2' && make -s clean && make -sj2 && mv ../run/john ../run/john-ztex-no-omp && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-native-tests --enable-ztex                  CPPFLAGS='-msse2' && make -s clean && make -sj2 && mv ../run/john ../run/john-ztex && \\\n    # Clean the image\n    rm *.o && \\\n      apt-get -y remove --purge build-essential binutils-common yasm pkg-config perl fakeroot && \\\n      apt-get -y autoremove && \\\n      apt-get -y --no-install-recommends install libgomp1 && \\\n      apt-get -y clean && \\\n      rm -rf /var/lib/apt/lists/*\n\nUSER JtR\nENV BASE ubuntu\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"sse2\"]"
}