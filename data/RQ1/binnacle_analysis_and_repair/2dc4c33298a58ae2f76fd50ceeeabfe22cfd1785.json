{
  "startTime": 1674243713030,
  "endTime": 1674243713252,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 3,
        "columnEnd": 66
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 3,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 3,
        "columnEnd": 127
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:latest\nEXPOSE 3000\nENV BP=$GOPATH/src/github.com/gobuffalo/buffalo\nRUN go version\n\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash \\\n&& sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list' \\\n&& wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add - \\\n&& apt-get update \\\n&& apt-get install --no-install-recommends -y -q build-essential nodejs sqlite3 libsqlite3-dev postgresql postgresql-contrib libpq-dev mysql-client vim \\\n&& rm -rf /var/lib/apt/lists/*\n\nRUN service postgresql start && \\\n    su -c \"psql -c \\\"ALTER USER postgres  WITH PASSWORD 'postgres';\\\"\" - postgres\n\nRUN go get -u github.com/golang/dep/cmd/dep \\\n&& go get -tags sqlite -v -u github.com/gobuffalo/pop \\\n&& go get -tags sqlite -v -u github.com/gobuffalo/buffalo-pop \\\n&& go get -v -u github.com/gobuffalo/packr/packr \\\n&& go get -v -u github.com/gobuffalo/packr/v2/packr2 \\\n&& go get -v -u github.com/markbates/filetest \\\n&& go get -v -u github.com/markbates/grift \\\n&& go get -v -u github.com/markbates/refresh \\\n&& go get -u github.com/alecthomas/gometalinter \\\n&& gometalinter --install\n\n# clear out the src so that we can fill it with new versions\nRUN rm -rfv $GOPATH/src && mkdir -p $BP\nWORKDIR $BP\n\nADD go.mod .\nADD go.sum .\n\n# preps the module cache for those using modules in their images\nENV GO111MODULE=on\nRUN go mod download\nENV GO111MODULE=off\n\n\nRUN npm install -g --no-progress yarn \\\n&& yarn config set yarn-offline-mirror /npm-packages-offline-cache \\\n&& yarn config set yarn-offline-mirror-pruning true && npm cache clean --force; && yarn cache clean;\n\nCOPY . .\n\nRUN go get -tags sqlite -t -v ./... && packr2 && go install -v -tags sqlite ./buffalo\n\nRUN buffalo version\n\nWORKDIR $GOPATH/src\n"
}