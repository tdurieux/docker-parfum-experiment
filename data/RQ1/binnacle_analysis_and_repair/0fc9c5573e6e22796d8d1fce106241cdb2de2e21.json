{
  "startTime": 1674241102086,
  "endTime": 1674241102391,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 256
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:centos7\nMAINTAINER Imagine Chiu<imagine10255@gmail.com>\n\nENV SSH_PASSWORD=P@ssw0rd\n\n# Setting DateTime Zone\nRUN cp -p /usr/share/zoneinfo/Asia/Taipei /etc/localtime\n\n# Install base tool\nRUN yum -y install vim wget tar && rm -rf /var/cache/yum\nRUN yum -y groupinstall development\nRUN yum -y install perl-CPAN zlib zlib-devel curl-devel && rm -rf /var/cache/yum\n\n# Install PHP7-FPM (https://webtatic.com/packages/php71)\nRUN rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \\\r\n    rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm\nRUN yum -y install --enablerepo=webtatic-testing php71w-fpm php71w-opcache php71w-cli php71w-gd php71w-imap php71w-mysqlnd php71w-mbstring php71w-mcrypt php71w-pdo php71w-pecl-apcu php71w-pecl-mongodb php71w-pecl-redis php71w-pgsql php71w-xml php71w-xmlrpc && rm -rf /var/cache/yum\n\n# Install Nginx\nRUN rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm && \\\r\n    yum -y update nginx-release-centos && \\\r\n    cp -p /etc/yum.repos.d/nginx.repo /etc/yum.repos.d/nginx.repo.backup && \\\r\n    sed -i -e \"s/enabled=1/enabled=0/g\" /etc/yum.repos.d/nginx.repo\nRUN yum -y --enablerepo=nginx install nginx install && rm -rf /var/cache/yum\n\n# Ensure that PHP5 FPM is run as root.\nRUN sed -i -e 's/user = apache/user = nginx/' /etc/php-fpm.d/www.conf\nRUN sed -i -e 's/group = apache/group = nginx/' /etc/php-fpm.d/www.conf\n\n\n# Setting Composer\nRUN curl -f -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer && \\\n    echo 'export PATH=\"/root/.composer/vendor/bin:$PATH\"' >> /root/.bashrc\n\n# Install Supervisor\nRUN yum -y install supervisor && rm -rf /var/cache/yum\n\n# Install crontab service\nRUN yum -y install vixie-cron crontabs && rm -rf /var/cache/yum\nRUN sed -ie '/pam_loginuid/d' /etc/pam.d/crond\n\n\n# Install SSH Service\nRUN yum install -y openssh-server passwd && rm -rf /var/cache/yum\nRUN sed -ri 's/#UsePAM no/UsePAM no/g' /etc/ssh/sshd_config && \\\r\n    echo \"${SSH_PASSWORD}\" | passwd \"root\" --stdin && \\\r\n    ssh-keygen -q -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key && \\\r\n    ssh-keygen -q -t dsa -N '' -f  /etc/ssh/ssh_host_dsa_key && \\\r\n    ssh-keygen -q -t ecdsa -N '' -f /etc/ssh/ssh_host_ecdsa_key\n\n\n# Install Git\nRUN wget https://www.kernel.org/pub/software/scm/git/git-2.12.3.tar.gz && \\\r\n    tar zxf git-2.12.3.tar.gz && \\\r\n    cd git-2.12.3 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make prefix=/usr/local install && \\\n    echo \"export PATH=$PATH:/usr/local/git/bin\" >> /etc/bashrc && \\\n    source /etc/bashrc && rm git-2.12.3.tar.gz\n\n\n# Delete Install data-info\nRUN yum clean all && rm -f /var/log/yum.log\n\n\n# Add configuration files\nCOPY conf/nginx.conf /etc/nginx/\nCOPY conf/supervisord.conf /etc/supervisor/supervisord.conf\nCOPY conf/www.conf /etc/php-fpm.d/www.conf\nCOPY sites-module /etc/nginx/sites-module\n\n\nVOLUME [\"/var/www\", \"/etc/nginx/conf.d\"]\n\nEXPOSE 22 80 443 9000\n\n# Executing supervisord\n# -n / --nodaemon : runs in foreground ( required for docker )\n# -c <configfile> : specifies the config file\nENTRYPOINT /usr/bin/supervisord -n -c /etc/supervisor/supervisord.conf"
}