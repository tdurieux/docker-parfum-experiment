{
  "startTime": 1674245235546,
  "endTime": 1674245235705,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\n# you may not use this file except in compliance with the License.\\n\",\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Dockerfile\nFROM python:2.7.15-jessie\nWORKDIR /root\n\n# Installs pytorch and torchvision.\nRUN pip install --no-cache-dir torch==1.0.0 torchvision==0.2.1\n\n# Installs cloudml-hypertune for hyperparameter tuning.\n# It’s not needed if you don’t want to do hyperparameter tuning.\nRUN pip install --no-cache-dir cloudml-hypertune\n\n# Installs google cloud sdk, this is mostly for using gsutil to export model.\nRUN wget -nv \\\n    https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz && \\\n    mkdir /root/tools && \\\n    tar xvzf google-cloud-sdk.tar.gz -C /root/tools && \\\n    rm google-cloud-sdk.tar.gz && \\\n    /root/tools/google-cloud-sdk/install.sh --usage-reporting=false \\\n        --path-update=false --bash-completion=false \\\n        --disable-installation-options && \\\n    rm -rf /root/.config/* && \\\n    ln -s /root/.config /config && \\\n    # Remove the backup directory that gcloud creates\n    rm -rf /root/tools/google-cloud-sdk/.install/.backup\n\n# Path configuration\nENV PATH $PATH:/root/tools/google-cloud-sdk/bin\n# Make sure gsutil will use the default service account\nRUN echo '[GoogleCompute]\\nservice_account = default' > /etc/boto.cfg\n\n# Copies the trainer code\nRUN mkdir /root/trainer\nCOPY trainer/mnist.py /root/trainer/mnist.py\n\n# Sets up the entry point to invoke the trainer.\nENTRYPOINT [\"python\", \"trainer/mnist.py\"]\n"
}