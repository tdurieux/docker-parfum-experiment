{
  "startTime": 1674246351971,
  "endTime": 1674246352145,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 3,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 3,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 3,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 58,
        "columnStart": 3,
        "columnEnd": 3
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim \nMAINTAINER Abner G Jacobsen - http://daspanel.com <admin@daspanel.com> \n\n# A little bit of metadata management. \n# See http://label-schema.org/ \nLABEL org.label-schema.schema-version=\"1.0\" \\  \norg.label-schema.build-date=$BUILD_DATE \\  \norg.label-schema.version=$VERSION \\  \norg.label-schema.vcs-url=$VCS_URL \\  \norg.label-schema.vcs-ref=$VCS_REF \\  \norg.label-schema.name=\"abnerjacobsen/dizendo-dev\" \\  \norg.label-schema.description=\"Dizendo.ai dev\" \n# Debian and systemd \nENV container docker \nENV DEBIAN_FRONTEND noninteractive \nENV TERM=xterm \nENV init /lib/systemd/systemd \nENV SHELL=/bin/bash \n# Set the locale \nENV TZ=\"UTC\" \nENV LC_ALL=\"C.UTF-8\" \nENV LANG=\"C.UTF-8\" \nENV LANGUAGE=\"C.UTF-8\" \nENV LC_CTYPE=\"C.UTF-8\" \n# add contrib, non-free and backports repositories \nADD debian/sources.list /etc/apt/sources.list \n\n# pin stable repositories \nADD debian/preferences /etc/apt/preferences \n\nRUN apt-get -y update \\\n&& apt-get install --no-install-recommends -y ca-certificates apt-utils apt-transport-https \\\n&& apt-get -y upgrade \\\n&& apt-get clean \\\n&& apt-get install --no-install-recommends -y \\\nsystemd \\\nlocales \\\ntzdata \\\ngnupg \\\nnet-tools \\\nbash \\\ncurl \\\nwget \\\nunzip \\\npatch \\\nnano \\\nprocps \\\nlsof \\\ndos2unix \\\ntree \\\npwgen \\\ngit \\\nbzip2 \\\npython3 \\\npython3-all-dev \\\npython3-pip \\\nsudo \\\nfindutils \\\ntar \\\n\n&& apt-get install -y --no-install-recommends \\  \nportaudio19-dev \\  \nswig \\  \nlibpulse-dev \\  \nalsa-utils \\\n\n&& locale-gen C.UTF-8 \\\n&& ln -fs /usr/share/zoneinfo/${TZ} /etc/localtime \\\n\n# Python pip \n&& curl -f \"https://bootstrap.pypa.io/get-pip.py\" | python3 \\\n&& pip3 install --no-cache-dir --upgrade pip setuptools \\\n&& rm -r /root/.cache \\\n\n# Install pipenv \n&& pip3 install --no-cache-dir pipenv \\\n\n&& groupadd -g 1000 app \\\n&& useradd -u 1000 -d /home/app -s /bin/false -g app app \\\n\n# Cleanup \n&& apt-get clean \\\n&& rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/* \\\n\n# Systemd \n&& rm -f /lib/systemd/system/multi-user.target.wants/* \\  \n/etc/systemd/system/*.wants/* \\  \n/lib/systemd/system/local-fs.target.wants/* \\  \n/lib/systemd/system/sockets.target.wants/*udev* \\  \n/lib/systemd/system/sockets.target.wants/*initctl* \\  \n/lib/systemd/system/sysinit.target.wants/systemd-tmpfiles-setup* \\  \n/lib/systemd/system/systemd-update-utmp* \\\n&& systemctl set-default multi-user.target\n\n\n# Creating data directory \nRUN mkdir /data \nRUN chown -R app.app /data/ \n\n# Creating working directory \nWORKDIR /app \nRUN chown -R app.app /app/ \n\nENV PYTHONUNBUFFERED 1 \nEXPOSE 8080 \n\nVOLUME [ \"/sys/fs/cgroup\" ] \nENTRYPOINT [\"/lib/systemd/systemd\"] \n\n\n"
}