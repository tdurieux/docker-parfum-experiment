{
  "startTime": 1674239095011,
  "endTime": 1674239095310,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_VERSION=7.2.6\n\nFROM php:${PHP_VERSION}-fpm-alpine3.7\n\nLABEL maintainer=\"khs1994-docker/lnmp <khs1994@khs1994.com>\"\n\nENV TZ=Asia/Shanghai \\\n    APP_ENV=development\n\n# 构建变量默认值为原始值，笔记本构建统一使用 docker-compose 构建\n# 国内镜像地址在 docker-compose.yml 中定义\n\nARG ALPINE_URL=dl-cdn.alpinelinux.org\n\nRUN sed -i \"s/dl-cdn.alpinelinux.org/${ALPINE_URL}/g\" /etc/apk/repositories \\\n    && set -xe \\\n      # 新增的包\n      && KHS1994_PHP_FPM_APKS=\" \\\n                            git \\\n                            # 以下两个均为版本控制系统\n                            # subversion \\\n                            # mercurial \\\n                            openssh-client \\\n                            bash \\\n                            tini \\\n                            tzdata \\\n                            \" \\\n      # 不要删除\n      && KHS1994_PHP_FPM_RUN_DEPS=\" \\\n                         libmemcached \\\n                         libpq \\\n                         libzip \\\n                         libpng \\\n                         freetype \\\n                         libjpeg-turbo \\\n                         yaml \\\n                         \" \\\n      # *-dev 编译之后删除\n      && KHS1994_PHP_FPM_BUILD_DEPS=\" \\\n                         libressl-dev \\\n                         libmemcached-dev \\\n                         cyrus-sasl-dev \\\n                         postgresql-dev \\\n                         libzip-dev \\\n                         libpng-dev \\\n                         freetype-dev \\\n                         libjpeg-turbo-dev \\\n                         yaml-dev \\\n                         \" \\\n        && apk add --no-cache --virtual .khs1994-php-fpm-run-deps $KHS1994_PHP_FPM_RUN_DEPS \\\n        && apk add --no-cache linux-headers \\\n        && apk add --no-cache --virtual .khs1994-php-fpm-apks $KHS1994_PHP_FPM_APKS \\\n        && apk add --no-cache --virtual .khs1994-php-fpm-build-deps $KHS1994_PHP_FPM_BUILD_DEPS \\\n        && docker-php-ext-configure zip \\\n                                    --with-libzip \\\n        && docker-php-ext-configure gd \\\n                                    --disable-gd-jis-conv \\\n                                    --with-freetype-dir=/usr/include/ \\\n                                    --with-jpeg-dir=/usr/include/ \\\n        && docker-php-ext-install -j\"$(nproc)\" bcmath \\\n                                               pdo_pgsql \\\n                                               pdo_mysql \\\n                                               zip \\\n                                               gd \\\n                                               pcntl \\\n        && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \\\n        && pecl install mongodb \\\n                        igbinary \\\n                        redis \\\n                        memcached \\\n                        # 安装测试版的扩展，可以在扩展名后加 -beta\n                        xdebug \\\n                        yaml \\\n                        swoole \\\n        && docker-php-ext-enable mongodb \\\n                                 redis \\\n                                 memcached \\\n                                 xdebug \\\n                                 yaml \\\n                                 igbinary \\\n                                 # opcache 已默认安装，需要自行载入\n                                 opcache \\\n                                 swoole \\\n        && apk del .build-deps linux-headers .khs1994-php-fpm-build-deps \\\n        && rm -rf /tmp/*\n        # config opcache\n        # && echo 'opcache.enable_cli=1' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-opcache.ini \\\n        # && echo 'opcache.file_cache=/tmp' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-opcache.ini\n\n# install composer\n\nENV COMPOSER_ALLOW_SUPERUSER=1 COMPOSER_HOME=/tmp \\\n    COMPOSER_VERSION=1.6.5 \\\n    PS1=\"[\\u@\\h \\w]# \"\n\n# https://github.com/composer/docker\n\nRUN echo \"memory_limit=-1\" > \"$PHP_INI_DIR/conf.d/memory-limit.ini\" \\\n    && echo \"date.timezone=${PHP_TIMEZONE:-PRC}\" > \"$PHP_INI_DIR/conf.d/date_timezone.ini\" \\\n    && curl -s -f -L -o /tmp/installer.php https://raw.githubusercontent.com/composer/getcomposer.org/b107d959a5924af895807021fcef4ffec5a76aa9/web/installer \\\n    && php -r \" \\\n    \\$signature = '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061'; \\\n    \\$hash = hash('SHA384', file_get_contents('/tmp/installer.php')); \\\n    if (!hash_equals(\\$signature, \\$hash)) { \\\n        unlink('/tmp/installer.php'); \\\n        echo 'Integrity check failed, installer is either corrupt or worse.' . PHP_EOL; \\\n        exit(1); \\\n    }\" \\\n && php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer --version=${COMPOSER_VERSION} \\\n && composer --ansi --version --no-interaction \\\n && curl -fsSL https://raw.githubusercontent.com/composer/docker/master/1.6/docker-entrypoint.sh > /docker-entrypoint.composer.sh \\\n && chmod +x /docker-entrypoint.composer.sh \\\n # composer 中国镜像\n && composer config -g repo.packagist composer https://packagist.phpcomposer.com \\\n # laravel 安装程序\n && composer global require --prefer-dist \"laravel/installer\" \\\n # php-cs-fixer\n # https://github.com/FriendsOfPHP/PHP-CS-Fixer\n && composer global require --prefer-dist \"friendsofphp/php-cs-fixer\" \\\n # Sami an API documentation generator\n # https://github.com/FriendsOfPHP/Sami \\\n && curl -fsSL https://get.sensiolabs.org/sami.phar > /usr/local/bin/sami \\\n && ln -sf /tmp/vendor/bin/* /usr/local/bin \\\n && chmod +x /usr/local/bin/sami \\\n && rm -rf /tmp/cache /tmp/.htaccess /tmp/installer.php /tmp/*.pub \\\n # 默认不启用 xdebug\n && mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.default \\\n # 创建日志文件夹\n && mkdir -p /var/log/php-fpm \\\n && ln -sf /dev/stdout /var/log/php-fpm/access.log \\\n && ln -sf /dev/stderr /var/log/php-fpm/error.log \\\n && ln -sf /dev/stderr /var/log/php-fpm/xdebug-remote.log \\\n && chmod -R 777 /var/log/php-fpm\n\nWORKDIR /app\n"
}