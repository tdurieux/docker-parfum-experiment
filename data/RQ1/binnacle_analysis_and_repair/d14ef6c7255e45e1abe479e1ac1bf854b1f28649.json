{
  "startTime": 1674250845161,
  "endTime": 1674250845421,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASEIMAGE_VERSION=18.04\nFROM ppc64le/ubuntu:${BASEIMAGE_VERSION} AS base_image\n\nFROM base_image AS build_tools\n\n# Set DEBIAN_FRONTEND to skip any interactive post-install configuration steps\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get -qqy update && \\\n    apt-get -y --no-install-recommends install \\\n        curl \\\n        ca-certificates \\\n        build-essential && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN mkdir -p /opt/maven && \\\n    curl -fsSL https://apache.osuosl.org/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.tar.gz | \\\n        tar -xzC /opt/maven --strip-components=1 && \\\n    # Workaround for concurrent safe maven local repository\n    curl -f -O http://repo1.maven.org/maven2/io/takari/aether/takari-local-repository/0.11.2/takari-local-repository-0.11.2.jar && \\\n    mv takari-local-repository-0.11.2.jar ${M2_HOME}/lib/ext && \\\n    curl -f -O http://repo1.maven.org/maven2/io/takari/takari-filemanager/0.8.3/takari-filemanager-0.8.3.jar && \\\n    mv takari-filemanager-0.8.3.jar ${M2_HOME}/lib/ext\n\nRUN mkdir -p /opt/sbt && \\\n    curl -fsSL https://dl.bintray.com/sbt/native-packages/sbt/0.13.13/sbt-0.13.13.tgz | \\\n    tar -xzC /opt/sbt --strip-components=1\n\nRUN curl -fsSL https://cmake.org/files/v3.14/cmake-3.14.3.tar.gz \\\n    | tar xz && \\\n    cd cmake-3.14.3 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/cmake && \\\n    make -j2 && \\\n    make install && \\\n    cd .. && \\\n    rm -r cmake-3.14.3\n\nRUN curl -fsSL https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-cpp-3.5.1.tar.gz \\\n    | tar xz && \\\n    cd protobuf-3.5.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/protobuf && \\\n    make -j2 && \\\n    make install && \\\n    cd .. && \\\n    rm -rf protobuf-3.5.1\n\nFROM base_image AS base_builder_image\n\nCOPY --from=build_tools /opt /opt\n\nENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-ppc64el \\\n    M2_HOME=/opt/maven \\\n    MAVEN_HOME=/opt/maven\n\nRUN apt-get -qqy update && \\\n    apt-get -y --no-install-recommends install \\\n        wget \\\n        curl \\\n        ca-certificates \\\n        software-properties-common \\\n        git \\\n        build-essential \\\n        gnupg-agent \\\n        dirmngr \\\n        openjdk-8-jdk-headless \\\n        # Required for Datavec NativeImageLoader\n        libgtk2.0-dev && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    update-java-alternatives --set java-1.8.0-openjdk-ppc64el\n\nENV HOME /home/jenkins\n\nRUN groupadd jenkins -g 1001 && useradd -d ${HOME} -u 1001 -g 1001 -m jenkins\n\nUSER jenkins\n\nWORKDIR ${HOME}\n\nENV PATH=/opt/sbt/bin:/opt/cmake/bin:/opt/protobuf/bin:${MAVEN_HOME}/bin:${PATH} \\\n    JAVA_OPTS=\"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap ${JAVA_OPTS}\"\n\nCMD [\"cat\"]\n\n"
}