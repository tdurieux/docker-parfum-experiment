{
  "startTime": 1674251157102,
  "endTime": 1674251157317,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM joshuawarner32/avian-build\nMAINTAINER Joshua Warner, joshuawarner32@gmail.com\n\nRUN dpkg --add-architecture armel && \\\n    apt-get update && \\\n    mkdir -p /opt/arm && \\\n    apt-get download libc6-dev:armel \\\n            linux-headers-3.13-1-all-armel:armel \\\n            linux-libc-dev:armel \\\n            libc6:armel \\\n            zlib1g-dev:armel \\\n            zlib1g:armel && \\\n    for x in *.deb; do \\\n        dpkg -x $x /opt/arm; \\\n    done && \\\n    rm *.deb && \\\n    apt-get install --no-install-recommends -y \\\n        wget \\\n        libgmp-dev \\\n        libmpfr-dev \\\n        libmpc-dev \\\n        libisl-dev && \\\n    apt-get clean all && \\\n    for x in $(find /opt/arm -type l); do \\\n        r=$(readlink \"$x\" | sed 's,^/,/opt/arm/,g'); \\\n        rm \"$x\"; \\\n        ln -s \"$r\" \"$x\"; \\\n    done && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /var/src\n\n# Build & install binutils\nRUN wget ftp://sourceware.org/pub/binutils/snapshots/binutils-2.23.91.tar.bz2 -O /var/src/binutils.tar.bz2 && \\\n    cd /var/src/ && tar -xjf binutils.tar.bz2 && rm binutils.tar.bz2 && \\\n    cd /var/src/binutils* && \\\n    mkdir build && \\\n    cd build && \\\n    ../configure \\\n        --target=arm-linux-gnueabi \\\n        --prefix=/opt/arm \\\n        --disable-multilib \\\n        --program-prefix=arm-linux-gnueabi- \\\n        --with-sysroot=/opt/arm \\\n        --with-headers=/opt/arm/usr/include && \\\n    make && \\\n    make install && \\\n    cd /var/src && \\\n    rm -rf *\n\n# build & install gcc\nRUN wget https://www.netgull.com/gcc/releases/gcc-4.8.2/gcc-4.8.2.tar.bz2 -O /var/src/gcc.tar.bz2 && \\\n    cd /var/src/ && tar -xjf gcc.tar.bz2 && rm gcc.tar.bz2 && \\\n    cd /var/src/gcc* && \\\n    mkdir build && \\\n    cd build && \\\n    ../configure \\\n        --target=arm-linux-gnueabi \\\n        --enable-languages=c,c++ \\\n        --prefix=/opt/arm \\\n        --disable-multilib \\\n        --program-prefix=arm-linux-gnueabi- \\\n        --with-sysroot=/opt/arm \\\n        --with-headers=/opt/arm/usr/include && \\\n    make && \\\n    make install && \\\n    cd /var/src && \\\n    rm -rf *\n\nENV PATH $PATH:/opt/arm/bin\n"
}