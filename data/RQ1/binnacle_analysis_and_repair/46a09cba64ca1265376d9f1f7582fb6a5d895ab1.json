{
  "startTime": 1674241378203,
  "endTime": 1674241378478,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 11,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 14,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 6,
        "columnEnd": 93
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 6,
        "columnEnd": 83
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 6,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 6,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 6,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker:18.02\n\nMAINTAINER Orestis Akrivopoulos\n\nENV GLIBC \"2.25-r0\"\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" && \\\n    ALPINE_GLIBC_PACKAGE_VERSION=\"$GLIBC\" && \\\n    ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    apk add --no-cache --virtual=.build-dependencies wget ca-certificates && \\\n    wget \\\n        \"https://central.preprod.melicertes.eu/repo-loads/alpine35base/sgerrand.rsa.pub\" \\\n        -O \"/etc/apk/keys/sgerrand.rsa.pub\" && \\\n    wget \\\n        \"https://central.preprod.melicertes.eu/repo-loads/alpine35base/glibc-2.25-r0.apk\" \\\n        \"https://central.preprod.melicertes.eu/repo-loads/alpine35base/glibc-bin-2.25-r0.apk\" \\\n        \"https://central.preprod.melicertes.eu/repo-loads/alpine35base/glibc-i18n-2.25-r0.apk\" && \\\n    apk add --no-cache \\\n        \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" && \\\n\n    rm \"/etc/apk/keys/sgerrand.rsa.pub\" && \\\n    /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true && \\\n    echo \"export LANG=C.UTF-8\" > /etc/profile.d/locale.sh && \\\n\n    apk del glibc-i18n && \\\n    apk del .build-dependencies && \\\n    rm \\\n        \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\n\nENV LANG=C.UTF-8\n\nRUN mkdir -p /opt/csplogs/\n\nENV JAVA_VERSION=8 JAVA_UPDATE=131 JAVA_BUILD=11 JAVA_PATH=d54c1d3a095b4ff2b6607d096fa80163 JAVA_HOME=/usr/lib/jvm/default-jvm\nRUN apk add --no-cache --virtual=build-dependencies wget ca-certificates unzip && update-ca-certificates && cd \"/tmp\" \\\n   && wget \"https://central.preprod.melicertes.eu/repo-loads/java8/jdk-8u131-linux-x64.tar.gz\" \\\n   && tar -xzf \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" && mkdir -p \"/usr/lib/jvm\" \\\n   && mv \"/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}\" \"/usr/lib/jvm/java-${JAVA_VERSION}-oracle\" && ln -s \"java-${JAVA_VERSION}-oracle\" \"$JAVA_HOME\" \\\n   && ln -s \"$JAVA_HOME/bin/\"* \"/usr/bin/\" && rm -rf \"$JAVA_HOME/\"*src.zip \\\n   && rm -rf \"$JAVA_HOME/lib/missioncontrol\" \"$JAVA_HOME/lib/visualvm\" \"$JAVA_HOME/lib/\"*javafx* \"$JAVA_HOME/jre/lib/plugin.jar\" \"$JAVA_HOME/jre/lib/ext/jfxrt.jar\" \"$JAVA_HOME/jre/bin/javaws\" \"$JAVA_HOME/jre/lib/javaws.jar\" \"$JAVA_HOME/jre/lib/desktop\" \"$JAVA_HOME/jre/plugin\" \"$JAVA_HOME/jre/lib/\"deploy* \"$JAVA_HOME/jre/lib/\"*javafx* \"$JAVA_HOME/jre/lib/\"*jfx* \"$JAVA_HOME/jre/lib/amd64/libdecora_sse.so\" \"$JAVA_HOME/jre/lib/amd64/\"libprism_*.so \"$JAVA_HOME/jre/lib/amd64/libfxplugins.so\" \"$JAVA_HOME/jre/lib/amd64/libglass.so\" \"$JAVA_HOME/jre/lib/amd64/libgstreamer-lite.so\" \"$JAVA_HOME/jre/lib/amd64/\"libjavafx*.so \"$JAVA_HOME/jre/lib/amd64/\"libjfx*.so \\\n   && wget \"https://central.preprod.melicertes.eu/repo-loads/java8/jce_policy-8.zip\" \\\n   && unzip -jo -d \"${JAVA_HOME}/jre/lib/security\" \"jce_policy-${JAVA_VERSION}.zip\" && rm \"${JAVA_HOME}/jre/lib/security/README.txt\" && apk del build-dependencies && rm \"/tmp/\"* && rm \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\"\n\nRUN apk add --no-cache bash drill wget ca-certificates libressl python py2-pip py-jinja2 git \\\n   && pip install --no-cache-dir --upgrade pip \\\n   && pip install --no-cache-dir j2cli[yaml] && update-ca-certificates\nRUN pip install --no-cache-dir docker-compose\n\n\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\n"
}