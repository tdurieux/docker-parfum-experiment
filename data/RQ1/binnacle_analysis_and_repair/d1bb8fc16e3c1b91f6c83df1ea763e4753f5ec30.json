{
  "startTime": 1674246970922,
  "endTime": 1674246971199,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.4\nMAINTAINER Santiago Ramos, sramos@sitiodistinto.net\n\n# Set the base directory used in any further RUN, COPY, and ENTRYPOINT\n# commands.\nRUN apt-get update -qq && \\\n    apt-get install --no-install-recommends -qq -y build-essential nodejs && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p /railsapp\nWORKDIR /railsapp\n\n# Copy dependencies into the container\nCOPY Gemfile Gemfile.lock ./\nRUN gem install bundler -v '~>1' && bundle install --jobs 20 --retry 5 --without development test\n\n# Set the Rails environment to production\nENV RAILS_ENV production\nENV RAILS_SERVE_STATIC_FILES true\nENV RAILS_LOG_TO_STDOUT true\n\n# Copy the main application into the container\nCOPY . ./\n\n# Copy database config file\nCOPY config/database.yml.example ./config/database.yml\n\n# Precompile the Rails assets (with fake connection data)\nRUN bundle exec rake RAILS_ENV=production DB_HOST=127.0.0.1 DB_NAME=dbname DB_USER=dbuser DB_PASS=dbpass SECRET_KEY_BASE=blahblahblah assets:clean\nRUN bundle exec rake RAILS_ENV=production DB_HOST=127.0.0.1 DB_NAME=dbname DB_USER=dbuser DB_PASS=dbpass SECRET_KEY_BASE=blahblahblah assets:precompile\n\n# Expose a volume so that nginx will be able to read in assets in production.\n# (now is defined in docker-compose file)\n#VOLUME [\"/railsapp/public\"]\n\n# Start the application with Puma\nEXPOSE 3000\n\n# Run migrations and start the application with Puma\nENTRYPOINT [\"/railsapp/script/entrypoint\"]\nCMD bundle exec puma -C config/puma.rb\n"
}