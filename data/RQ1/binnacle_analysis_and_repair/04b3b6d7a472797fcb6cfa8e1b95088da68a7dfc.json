{
  "startTime": 1674251251076,
  "endTime": 1674251251181,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# NAV development container\n#\n# This container aims at providing all the build- and runtime dependencies of\n# NAV itself in a single container, and allowing for running them all directly\n# off the code in your source code checkout. It is intended to be used as part\n# of the docker-compose.yml file, where the PostgreSQL and Graphite services\n# are defined in separate containers.\n#\n# Run the container with your checked out NAV source code directory mounted on\n# the '/source' volume to build and run all the necessary components inside\n# the container. Changes to you SASS source files will be automatically\n# detected and compiled, and any changes to files in the python directory will\n# be immediately live in the web interface.\n#\n# The NAV web interface is exposed through the Django development server on\n# port 80.\n#\n# REQUIREMENT: For the users inside the container to be able to access the\n# source code mounted at /source, the directory and its files on the host must\n# be world-readable!\n#\n#\nFROM mbrekkevold/navbase-debian:stretch\n\n#### Install various build and runtime requirements as Debian packages ####\n\nRUN apt-get update \\\n    && apt-get -y --no-install-recommends install \\\n       git-core \\\n       libsnmp30 \\\n       cron \\\n       sudo \\\n       inotify-tools \\\n       postgresql-client \\\n       vim \\\n       less \\\n       nbtscan \\\n       python3-gammu \\\n       # Python package build deps: \\\n       libpq-dev \\\n       libjpeg-dev \\\n       libz-dev \\\n       libldap2-dev \\\n       libsasl2-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN adduser --system --group --no-create-home --home=/source --shell=/bin/bash nav\n\n\n\n#################################################################################\n### ADDing the requirements file to pip-install Python requirements may bust  ###\n### Docker's cache at this point, so everything you want to keep in the cache ###\n### should go before this.                                                    ###\n#################################################################################\n\nADD tools/docker/supervisord.conf /etc/supervisor/conf.d/nav.conf\n\nCOPY requirements/ /requirements\nADD requirements.txt /\nADD tests/requirements.txt /test-requirements.txt\nRUN pip3 install --no-cache-dir --upgrade pip tox setuptools && \\\n    hash -r && \\\n    # Since we used pip3 to install pip globally, pip should now be for Python 3 \\\n    pip install --no-cache-dir -r /requirements.txt && \\\n    pip install --no-cache-dir -r /test-requirements.txt\n\nADD tools/docker/full-nav-restore.sh /usr/local/sbin/full-nav-restore.sh\n\nVOLUME [\"/source\"]\nENV    DJANGO_SETTINGS_MODULE nav.django.settings\nEXPOSE 80\n\nENTRYPOINT [\"/source/tools/docker/entrypoint.sh\"]\nCMD        [\"/source/tools/docker/run.sh\"]\n"
}