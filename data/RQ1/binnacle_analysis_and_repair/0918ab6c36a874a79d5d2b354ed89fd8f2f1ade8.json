{
  "startTime": 1674249157262,
  "endTime": 1674249157320,
  "originalSmells": [
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ficusio/node-alpine:5.7\n\nWORKDIR /app\nONBUILD COPY package.json npm-shrinkwrap.json* /app/\n\n# Install NPM deps first to allow reusing of Docker image cache when package.json\n# has not changed.\n#\n# 1. Install development deps that might be needed to compile binary Node.js modules.\n#\n# 2. Install NPM-managed application deps, but don't install devDependencies.\n#    Rename node_modules to node_modules_new to prevent overwriting them with\n#    the ones copied from a developer's machine. This can happen if a developer\n#    didn't add node_nodules to a .dockerignore file.\n#\n# 3. Remove development deps from step 1.\n# 4. Clear various NPM caches.\n#\n \\\nRUN info() { \\\n { printf '\\n--\\n%s\\n--\\n\\n' \"$*\"; } \\\n && info '==> Installing build deps...' \\\n && apk add --no-cache --update --virtual build-deps \\\n    make gcc g++ python musl-dev openssl-dev zlib-dev \\\n    linux-headers binutils-gold \\\n && info '==> Installing NPM modules...' \\\n && npm install --production \\\n && mv node_modules node_modules_new \\\n && info '==> Finishing...' \\\n && apk del build-deps \\\n && npm cache clean --force \\\n && rm -rf ~/.node-gyp /tmp/* \\\n && info '==> Deps installed! =)' \\\n}ONBUILD\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Copy app files to the target directory.\n#\nONBUILD COPY . /app/\n\n# Rename node_modules_new back to node_modules.\n#\nONBUILD RUN rm -rf node_modules \\\n  && mv node_modules_new node_modules\n\n\nCMD [\"node\", \"index.js\"]\n"
}