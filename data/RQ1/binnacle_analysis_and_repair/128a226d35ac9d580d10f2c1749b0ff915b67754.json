{
  "startTime": 1674248860298,
  "endTime": 1674248861095,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 154,
        "lineEnd": 154,
        "columnStart": 4,
        "columnEnd": 133
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 187,
        "lineEnd": 187,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 39,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 138,
        "lineEnd": 139,
        "columnStart": 22,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 143,
        "lineEnd": 151,
        "columnStart": 22,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 138,
        "lineEnd": 139,
        "columnStart": 22,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 143,
        "lineEnd": 151,
        "columnStart": 22,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN useradd jenkins -u 1500 -g root\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        build-essential m4 apt-utils \\\n        libffi-dev libssl-dev \\\n        libbz2-dev \\\n        libgmp3-dev \\\n        libev-dev \\\n        libsnappy-dev \\\n        libxen-dev \\\n        help2man \\\n        pkg-config \\\n        time \\\n        aspcud \\\n        wget \\\n        rsync \\\n        darcs \\\n        git \\\n        unzip \\\n        protobuf-compiler \\\n        libgcrypt20-dev \\\n        libjerasure-dev \\\n        yasm \\\n        automake \\\n        python-dev \\\n        python-pip \\\n        debhelper \\\n        psmisc \\\n        strace \\\n        curl \\\n        g++ \\\n        libgflags-dev \\\n        sudo \\\n        libtool \\\n        libboost-all-dev \\\n        fuse \\\n        sysstat \\\n        ncurses-dev \\\n        liburiparser1 \\\n        libzmq5 \\\n        librabbitmq4 \\\n        tzdata && rm -rf /var/lib/apt/lists/*;\n\n# install specific orocksdb\nRUN git clone https://github.com/domsj/orocksdb.git \\\n    && cd orocksdb \\\n    && git checkout tags/0.3.0 \\\n    && ./install_rocksdb.sh\n\n\nRUN wget https://raw.github.com/ocaml/opam/master/shell/opam_installer.sh\n\nenv ocaml_version=4.04.2\nRUN sh ./opam_installer.sh /usr/local/bin ${ocaml_version}\n\nENV opam_root=/home/jenkins/OPAM\nENV opam_env=\"opam config env --root=${opam_root}\"\nRUN opam init --root=${opam_root} --comp ${ocaml_version}\n\nRUN eval `${opam_env}` && \\\n    opam repo add compat -k git https://github.com/toolslive/opam_anti_revisionism.git && \\\n    opam update -v && \\\n    opam install -y \\\n        oasis.0.4.10 \\\n        ocamlfind \\\n        omake.0.9.8.7 \\\n        ssl.0.5.3 \\\n        camlbz2 \\\n        snappy \\\n        sexplib \\\n        bisect \\\n        lwt_ssl.1.1.0 \\\n        lwt.3.0.0 \\\n        camltc.0.9.4 \\\n        ocplib-endian.1.0 \\\n        ctypes \\\n        ctypes-foreign \\\n        uuidm \\\n        zarith \\\n        mirage-no-xen.1 \\\n        quickcheck.1.0.2 \\\n        ounit.2.0.0 \\\n        cmdliner \\\n        conf-libev \\\n        depext \\\n        kinetic-client \\\n        cryptokit \\\n        tiny_json.1.1.4 \\\n        ppx_deriving.4.1 \\\n        ppx_deriving_yojson \\\n        base.v0.9.3 \\\n        core.v0.9.1 \\\n        redis.0.3.3 \\\n        uri.1.9.4 \\\n        piqi \\\n        result \\\n        ezxmlm\n\nRUN wget https://01.org/sites/default/files/downloads/intelr-storage-acceleration-library-open-source-version/isa-l-2.14.0.tar.gz && \\\n    tar xfzv isa-l-2.14.0.tar.gz && \\\n    cd isa-l-2.14.0 && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && make install && \\\n    cd .. && \\\n    rm -rf isa-l-2.14.0 && rm isa-l-2.14.0.tar.gz\n\n# c++\nRUN apt-get update && apt-get -y --no-install-recommends install libgtest-dev cmake && rm -rf /var/lib/apt/lists/*;\nRUN cd /usr/src/gtest \\\n        && cmake . \\\n        && make \\\n        && mv libg* /usr/lib/\n\n\n# install specific arakoon.\nRUN git clone https://github.com/openvstorage/arakoon.git\nRUN cd arakoon && git pull && git checkout tags/1.9.22\nRUN cd arakoon && eval `${opam_env}` && make\nRUN cd arakoon && eval `${opam_env}` \\\n    && export PREFIX=${opam_root}/${ocaml_version} \\\n    && export OCAML_LIBDIR=`ocamlfind printconf destdir` \\\n    && make install\n\n# install orocksdb\nRUN eval `${opam_env}` \\\n    && cd orocksdb \\\n    && make build install\n\n\n#for now, install ordma manually\nRUN apt-get update && apt-get -y --no-install-recommends install librdmacm-dev && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/toolslive/ordma.git \\\n    && cd ordma \\\n    && git checkout tags/0.0.2 \\\n    && eval `${opam_env}` \\\n    && make install\n\nrun apt-get update && apt-get -y --no-install-recommends --allow-unauthenticated install \\\n    libboost1.58-all-dev libboost1.58-all && rm -rf /var/lib/apt/lists/*;\n\n\nRUN echo \"deb http://apt.openvstorage.org unstable main\" > /etc/apt/sources.list.d/ovsaptrepo.list\nRUN apt-get update && apt-get -y --no-install-recommends --allow-unauthenticated install \\\n      clang-3.5 \\\n      liblttng-ust0 librdmacm1 libtokyocabinet9 \\\n      libstdc++6:amd64 librabbitmq1 libomnithread3c2 libomniorb4-1 \\\n      libhiredis0.13 liblz4-1 libxio-dev libxio0 \\\n      omniorb-nameserver \\\n      libunwind8-dev libaio1 libaio1-dbg libaio-dev \\\n      libz-dev libbz2-dev \\\n      libgoogle-glog-dev libibverbs-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install etcd:\nRUN curl -f -L https://github.com/coreos/etcd/releases/download/v2.2.4/etcd-v2.2.4-linux-amd64.tar.gz -o etcd-v2.2.4-linux-amd64.tar.gz\nRUN tar xzvf etcd-v2.2.4-linux-amd64.tar.gz && rm etcd-v2.2.4-linux-amd64.tar.gz\nRUN cp ./etcd-v2.2.4-linux-amd64/etcd /usr/bin \\\n    && cp ./etcd-v2.2.4-linux-amd64/etcdctl /usr/bin\n\n\n## installing voldrv packages only works from within the OVS LAN\n\nARG INSTALL_VOLDRV_PACKAGES=false\n\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'true' || echo 'we are NOT going to install the voldrv packages/testers'\n\n# http://10.100.129.100:8080/view/volumedriver/view/ubuntu/job/volumedriver-no-dedup-release-ubuntu-16.04/27/artifact/volumedriver-core/build/debian/volumedriver-no-dedup-base_6.10.0-0_amd64.deb\n\nENV voldrv_jenkins=http://10.100.129.100:8080/view/volumedriver/view/ubuntu/job/volumedriver-no-dedup-release-ubuntu-16.04/27/artifact/volumedriver-core/build/debian\n\nENV voldrv_base_pkg_name=volumedriver-no-dedup\nENV voldrv_version=6.10.0-0_amd64\nENV wget_mods='--timeout=10 --tries=2'\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' \\\n    || (wget ${wget_mods} ${voldrv_jenkins}/${voldrv_base_pkg_name}-base_${voldrv_version}.deb \\\n        && dpkg -i ${voldrv_base_pkg_name}-base_${voldrv_version}.deb )\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' \\\n    || (wget ${wget_mods} ${voldrv_jenkins}/${voldrv_base_pkg_name}-pitreplication_${voldrv_version}.deb \\\n        && dpkg -i ${voldrv_base_pkg_name}-pitreplication_${voldrv_version}.deb )\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' \\\n    || (wget ${wget_mods} ${voldrv_jenkins}/${voldrv_base_pkg_name}-server_${voldrv_version}.deb \\\n        && dpkg -i ${voldrv_base_pkg_name}-server_${voldrv_version}.deb )\nRUN test ${INSTALL_VOLDRV_PACKAGES} = 'false' \\\n    || (wget ${wet_mods} ${voldrv_jenkins}/${voldrv_base_pkg_name}-test_${voldrv_version}.deb \\\n        && dpkg -i ${voldrv_base_pkg_name}-test_${voldrv_version}.deb )\n\n\nRUN pip install --no-cache-dir fabric junit-xml\n\nRUN chmod ugoa+rxw -R ${opam_root}\nRUN su - -c \"echo 'eval `${opam_env}`' >> /home/jenkins/.profile\"\nRUN su - -c \"echo 'LD_LIBRARY_PATH=/usr/local/lib; export LD_LIBRARY_PATH;' >> /home/jenkins/.profile\"\nRUN su - -c \"echo 'VOLDRV_TEST=volumedriver_test; export VOLDRV_TEST;' >> /home/jenkins/.profile\"\nRUN su - -c \"echo 'VOLDRV_BACKEND_TEST=backend_test; export VOLDRV_BACKEND_TEST;' >> /home/jenkins/.profile\"\nRUN echo \"jenkins ALL=NOPASSWD: ALL\" >/etc/sudoers.d/jenkins\n\nenv ALBA_TEST=false\nENTRYPOINT [\"/bin/bash\", \"-c\", \"set -e && /home/jenkins/alba/docker/docker-entrypoint.sh $@\"]\n"
}