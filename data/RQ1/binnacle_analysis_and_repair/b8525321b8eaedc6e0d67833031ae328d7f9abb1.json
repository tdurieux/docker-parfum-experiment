{
  "startTime": 1674251624062,
  "endTime": 1674251624138,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# TODO(adamb) This is awful. Instead cache all files and install that way.\nFROM ubuntu:16.04\n\n###############################\n## A little Docker magic here\n\n# Force bash always\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n# Default miniconda installation\nENV CONDA_ENV_PATH /opt/miniconda\n\n################\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n build-essential bzip2 wget libglib2.0-0 libgl1-mesa-glx libxext6 libsm6 libxrender1 \\\n&& rm -rf /var/lib/apt/lists/*\n\n\n###############################\n# (mini)CONDA package manager\n\n# Download and create\nRUN wget --quiet \\\n    https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    bash Miniconda3-latest-Linux-x86_64.sh -b -p $CONDA_ENV_PATH && \\\n    rm Miniconda3-latest-Linux-x86_64.sh && \\\n    chmod -R a+rx $CONDA_ENV_PATH\nENV PATH $CONDA_ENV_PATH/bin:$PATH\n\n#######################\n# Install modules and dependencies\nARG CONDA_ENV_NAME\n\nADD conda/$CONDA_ENV_NAME.yml /tmp/environment.yml\nWORKDIR /tmp\nRUN [\"conda\", \"env\", \"create\"]\n\nCOPY . /code/tfi\nRUN pip install --no-cache-dir /code/tfi[${CONDA_ENV_NAME},serve]\n\nENV PYTHONUNBUFFERED 1\n\nWORKDIR /code\n# RUN useradd -m srv\n# USER srv\n\nADD conda/entrypoint.sh $CONDA_ENV_PATH/bin/entrypoint.sh\nENV CONDA_ENV_NAME ${CONDA_ENV_NAME}\nENTRYPOINT [\"entrypoint.sh\"]\nCMD [\"--bind=0.0.0.0:8888\", \"--serve\"]\n"
}