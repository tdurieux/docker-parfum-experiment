{
  "startTime": 1674247955875,
  "endTime": 1674247956024,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.2-base-ubuntu16.04\nMAINTAINER Jerry Tworek\n\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\n\n# Install some basic utilities\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl ca-certificates sudo git bzip2 libx11-6 \\\n    gcc g++ make cmake zlib1g-dev swig libsm6 libxext6 \\\n    build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev \\\n\tlibsqlite3-dev wget llvm libncurses5-dev xz-utils tk-dev \\\n    libxml2-dev libxmlsec1-dev libffi-dev \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir /userhome\nWORKDIR /userhome\n\n# Create a non-root user and switch to it\nRUN adduser --disabled-password --gecos '' --shell /bin/bash user && chown -R user:user /userhome\nRUN echo \"user ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/90-user\nUSER user\n\n# Setup Python installation, we'll be using pyenv\nENV PYENV_ROOT=\"/userhome/.pyenv\" PATH=\"/userhome/.pyenv/bin:/userhome/.pyenv/shims:$PATH\"\nRUN curl -f -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash\nRUN pyenv update && \\\n pyenv install 3.6.8 && \\\n pyenv global 3.6.8 && \\\n find $PYENV_ROOT/versions -type d '(' -name '__pycache__' -o -name 'test' -o -name 'tests' ')' -exec rm -rfv '{}' + && \\\n find $PYENV_ROOT/versions -type f '(' -name '*.py[co]' -o -name '*.exe' ')' -exec rm -fv '{}' +\n\n# Update pip and cython\nRUN pip install --no-cache-dir -U pip cython\n\n# Prepare vel directory\nCOPY --chown=user:user . /vel\nWORKDIR /vel\n\n# Install local installation of vel\nRUN pip install --no-cache-dir -e .[gym,mongo,dev]\nRUN mv .velproject.dummy.yaml .velproject.yaml\n\n# Some default training command\nCMD vel examples-configs/rl/atari/a2c/breakout_a2c.yaml train -d cuda:0\n"
}