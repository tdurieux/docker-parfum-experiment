{
  "startTime": 1674250673076,
  "endTime": 1674250673177,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##\n# Static assets builder\n#\nFROM node:6-slim AS assets\n\nENV PATH=/app/node_modules/.bin:$PATH\nWORKDIR /app\n\nCOPY package.json yarn.lock ./\nRUN yarn install --pure-lockfile && rm -rf /usr/local/share/.cache/yarn && yarn cache clean;\nRUN npm install gulp-cli -g && npm cache clean --force;\nCOPY gulpfile.js ./\nCOPY ./static ./static\nRUN gulp build --production\n\n##\n# Django app\n#\nFROM python:3.6-stretch AS webapp\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends libpq-dev postgresql-client build-essential gosu && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Extra python env\nENV PYTHONDONTWRITEBYTECODE=1\nENV PYTHONUNBUFFERED=1\nENV PIP_DISABLE_PIP_VERSION_CHECK=1\n\n# Project settings\nENV DJANGO_SETTINGS_MODULE=standup.settings\n\nEXPOSE 8000\nWORKDIR /app\nCMD [\"./bin/run.sh\", \"prod\"]\n\nCOPY requirements.txt ./\nRUN pip install --require-hashes --no-cache-dir -r requirements.txt\n\nCOPY . /app\nCOPY --from=assets /app/static_build /app/static_build\n\n# process static files\nRUN bin/phb-manage.sh collectstatic --noinput -l\n\n##\n# Dev and test image\n#\nFROM webapp AS devapp\n\nCMD [\"./bin/run.sh\", \"dev\"]\n\nCOPY requirements-dev.txt ./\nRUN pip install --require-hashes --no-cache-dir -r requirements-dev.txt\n"
}