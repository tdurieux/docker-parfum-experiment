{
  "startTime": 1674251486073,
  "endTime": 1674251486151,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12.2.0-alpine as builder\n\nWORKDIR /app\nCOPY ./builder/package.json /app/package.json\nRUN npm install && npm cache clean --force;\nCOPY ./builder /app\nRUN npm run build\n\nFROM python:3.7.0-slim-stretch\nENV PYTHONUNBUFFERED 1\nWORKDIR /app\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl \\\n && rm -rf /var/lib/apt/lists/*\n\nCOPY ./django/requirements.txt ./django/requirements-dev.txt /app/\n\nRUN pip install -U pip --no-cache-dir && \\\n    pip install -r requirements.txt -r requirements-dev.txt --no-cache-dir\n\nCOPY ./django /app\nCOPY --from=builder /app/build /app/static_built\n\nRUN SECRET_KEY=x python manage.py collectstatic --noinput\n\nHEALTHCHECK --interval=5s --timeout=8s --retries=3 \\\n    CMD curl --fail --header \"Host: $SERVER_NAME\" localhost:8000/healthcheck || exit 1\n\nENTRYPOINT [\"/bin/bash\", \"/app/docker-entrypoint.sh\"]\n"
}