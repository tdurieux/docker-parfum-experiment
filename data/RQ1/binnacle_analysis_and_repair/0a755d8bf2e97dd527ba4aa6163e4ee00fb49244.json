{
  "startTime": 1674238974157,
  "endTime": 1674238974688,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 78,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:latest\nMAINTAINER https://github.com/underworldcode/\n\n# install things\nRUN apt-get update -qq && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n        bash-completion \\\n        build-essential \\\n        git \\\n        python-minimal \\\n        python-dev \\\n        python-pip \\\n        libxml2-dev \\\n        xorg-dev \\\n        ssh \\\n        curl \\\n        libfreetype6-dev \\\n        libpng-dev \\\n        libxft-dev \\\n        xvfb \\\n        freeglut3 \\\n        freeglut3-dev \\\n        libgl1-mesa-dri \\\n        libgl1-mesa-glx \\\n        python-tk \\\n        rsync \\\n        vim \\\n        less \\\n        xauth \\\n        swig \\\n        gdb-minimal \\\n        python2.7-dbg \\\n        wget \\\n        gfortran  && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nARG MPICH_VERSION=\"3.1.4\"\nARG MPICH_CONFIGURE_OPTIONS=\"--enable-fast=all,O3 --prefix=/usr\"\nARG MPICH_MAKE_OPTIONS=\"-j4\"\nWORKDIR /tmp/mpich-build\nRUN wget https://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz && \\\n    tar xvzf mpich-${MPICH_VERSION}.tar.gz && \\\n    cd mpich-${MPICH_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" ${MPICH_CONFIGURE_OPTIONS} && \\\n    make ${MPICH_MAKE_OPTIONS} && \\\n    make install && \\\n    ldconfig && \\\n    cd /tmp && \\\n    rm -fr * && rm mpich-${MPICH_VERSION}.tar.gz\n\n\n# Install setuptools and wheel first, needed by plotly\nRUN pip install --no-cache-dir setuptools wheel && \\\n    pip install --no-cache-dir packaging \\\n        appdirs \\\n        numpy \\\n        jupyter \\\n        plotly \\\n        matplotlib \\\n        runipy \\\n        pillow \\\n        pyvirtualdisplay \\\n        ipython==4.2.0 \\\n        ipyparallel \\\n        pint \\\n        sphinx \\\n        sphinx_rtd_theme \\\n        sphinxcontrib-napoleon \\\n        mock \\\n        scipy \\ \n        tabulate\n# ^^^ Note we choose an older version of ipython because its tooltips work better.\n#     Also, the system six is too old, so we upgrade for the pip version\n\nWORKDIR /tmp/petsc-build\nRUN wget https://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-3.9.3.tar.gz\nRUN tar zxf petsc-lite-3.9.3.tar.gz && cd petsc-3.9.3 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-debugging=0 --prefix=/usr \\\n                --COPTFLAGS=\"-g -O3\" --CXXOPTFLAGS=\"-g -O3\" --FOPTFLAGS=\"-g -O3\" \\\n                --download-petsc4py=1 \\\n                --download-mpi4py=1 \\\n                --download-mumps=1 \\\n                --download-parmetis=1 \\\n                --download-metis=1 \\\n                --download-superlu=1 \\\n                --download-hypre=1 \\\n                --download-cmake=1 \\\n                --download-scalapack=1 \\\n                --download-superlu_dist=1 \\\n                --download-superlu=1 \\\n                --download-fblaslapack=1 \\\n                --download-hdf5=1 && \\\n    make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt all && \\\n    make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt install && \\\n    cd /tmp && \\\n    rm -fr * && rm petsc-lite-3.9.3.tar.gz\n\nENV PYTHONPATH $PYTHONPATH:/usr/lib\nRUN CC=mpicc HDF5_MPI=\"ON\" pip install --no-cache-dir --no-binary=h5py h5py\n\n# Install Tini.. this is required because CMD (below) doesn't play nice with notebooks for some reason: https://github.com/ipython/ipython/issues/7062, https://github.com/jupyter/notebook/issues/334\nRUN curl -f -L https://github.com/krallin/tini/releases/download/v0.10.0/tini > tini && \\\n    echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0  *tini\" | sha256sum -c - && \\\n    mv tini /usr/local/bin/tini && \\\n    chmod +x /usr/local/bin/tini\n\n# environment variable will internally run xvfb when glucifer is imported,\n#see /opt/underworld2/glucifer/__init__.py\nENV GLUCIFER_USE_XVFB 1\n\n# Add a notebook profile.\nRUN mkdir -p -m 700 /root/.jupyter/ && \\\n    echo \"c.NotebookApp.ip = '*'\" >> /root/.jupyter/jupyter_notebook_config.py\n\n# Setup ipyparallel for mpi profile\nWORKDIR /root/.jupyter\nRUN ipcluster nbextension enable && \\ \n    ipython profile create --parallel --profile=mpi && \\\n    echo \"c.IPClusterEngines.engine_launcher_class = 'MPIEngineSetLauncher'\" >> /root/.ipython/profile_mpi/ipcluster_config.py\n\nWORKDIR /\n\n# expose notebook port\nEXPOSE 8888\n\n# note we also use xvfb which is required for viz\nENTRYPOINT [\"/usr/local/bin/tini\", \"--\"]\n"
}