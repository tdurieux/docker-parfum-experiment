{
  "startTime": 1674235098487,
  "endTime": 1674235098645,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 96
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM omnetpp-compilers\n\nWORKDIR /root\n\nRUN wget https://omnetpp.org/omnetpp/send/30-omnet-releases/2319-omnetpp-5-2-core \\\n        --referer=https://omnetpp.org/omnetpp -O omnetpp-5.2-src-core.tgz --progress=dot:giga && \\\n    tar xf omnetpp-5.2-src-core.tgz && rm omnetpp-5.2-src-core.tgz\n\nWORKDIR /root/omnetpp-5.2\n\n# these are optional now\nRUN rm -rf samples\n\n# fetching and applying the patch for INET 4\nRUN wget https://raw.githubusercontent.com/inet-framework/inet/integration/misc/patch/inet-4.0-omnetpp-5.1_or_5.2.patch\nRUN patch -p 1 -i inet-4.0-omnetpp-5.1_or_5.2.patch\n\nWORKDIR /root\n\nRUN cp -r omnetpp-5.2 omnetpp-5.2-macosx\nRUN cp -r omnetpp-5.2 omnetpp-5.2-windows\nRUN mv omnetpp-5.2 omnetpp-5.2-linux\n\n\n#### building the linux version\n\nWORKDIR omnetpp-5.2-linux\n\n# Removing the default \"-march native\" options, as those are not practical in a Docker image.\n# We have to echo into configure.user because assignments with spaces in the value can't be passed as command line\n# arguments becauseof a bug in configure.in, and the environment variables are overridden by configure.user.\nRUN echo \"CFLAGS_RELEASE='-O3 -DNDEBUG=1 -D_XOPEN_SOURCE'\" >> configure.user\n# Adding O1 because without it, the INET fingerprint tests timed out on travis on a debug build, and we don't actually want to debug.\nRUN echo \"CFLAGS_DEBUG='-O1 -ggdb -Wall -Wextra -Wno-unused-parameter'\" >> configure.user\n\nENV PATH /root/omnetpp-5.2-linux/bin:$PATH\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" WITH_TKENV=no WITH_QTENV=no WITH_OSG=no WITH_OSGEARTH=no\nRUN make -j $(nproc)\n\n\n#### building the mac version using some linux tools\n\nWORKDIR /root/omnetpp-5.2-macosx\n\n# The _XOPEN_SOURCE macro has to be defined otherwise the deprecated context switching functions are not available.\n# Also we remove the default \"-march native\" options, as those are not practical in a Docker image.\n# We have to echo into configure.user because assignments with spaces in the value can't be passed as command line\n# arguments becauseof a bug in configure.in, and the environment variables are overridden by configure.user.\nRUN echo \"CFLAGS_RELEASE='-O3 -DNDEBUG=1 -D_XOPEN_SOURCE'\" >> configure.user\n# Adding O1 because without it, the INET fingerprint tests timed out on travis on a debug build, and we don't actually want to debug.\nRUN echo \"CFLAGS_DEBUG='-O1 -ggdb -Wall -Wextra -Wno-unused-parameter'\" >> configure.user\n\nENV PATH /root/omnetpp-5.2-macosx/bin:$PATH\n# yes, msgc is nedtool too, and we have to use that because it redirects using $PATH, so it would pick up the macosx one\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" WITH_TKENV=no WITH_QTENV=no WITH_OSG=no WITH_OSGEARTH=no --host=\"x86_64-apple-darwin15\" \\\n        CXX=\"x86_64-apple-darwin15-clang++-libc++\" CC=\"x86_64-apple-darwin15-clang\" \\\n        MSGC=\"/root/omnetpp-5.2-linux/bin/nedtool\" NEDTOOL=\"/root/omnetpp-5.2-linux/bin/nedtool\"\nRUN make -j $(nproc)\n\n\n#### building the windows version using some linux tools\n\n# ugly workaround for incorrect header name in sim/gettime.cc\nRUN ln -s /usr/x86_64-w64-mingw32/include/windows.h /usr/x86_64-w64-mingw32/include/Windows.h\n\nWORKDIR /root/omnetpp-5.2-windows\n\n# Removing the default \"-march native\" options, as those are not practical in a Docker image.\n# We have to echo into configure.user because assignments with spaces in the value can't be passed as command line\n# arguments becauseof a bug in configure.in, and the environment variables are overridden by configure.user.\nRUN echo \"CFLAGS_RELEASE='-O3 -DNDEBUG=1'\" >> configure.user\n# Adding O1 because without it, the INET fingerprint tests timed out on travis on a debug build, and we don't actually want to debug.\nRUN echo \"CFLAGS_DEBUG='-O1 -ggdb -Wall -Wextra -Wno-unused-parameter'\" >> configure.user\n\nENV PATH /root/omnetpp-5.2-windows/bin:$PATH\n# yes, msgc is nedtool too, and we have to use that because it redirects using $PATH, so it would pick up the macosx one\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" WITH_TKENV=no WITH_QTENV=no WITH_OSG=no WITH_OSGEARTH=no --host=x86_64-w64-mingw32 \\\n        MSGC=\"/root/omnetpp-5.2-linux/bin/nedtool\" NEDTOOL=\"/root/omnetpp-5.2-linux/bin/nedtool\"\nRUN make -j $(nproc)\n\n# switch back to using the linux tools\nENV PATH /root/omnetpp-5.2-linux/bin:$PATH\n\nWORKDIR /root\n\n"
}