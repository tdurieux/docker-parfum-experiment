{
  "startTime": 1674241186921,
  "endTime": 1674241187090,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#build stage\nARG GO_VERSION=1.12.1\nFROM golang:${GO_VERSION}-alpine AS build-stage\n\nENV SRT_VERSION v1.3.2\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib64\n\nRUN wget -O srt.tar.gz \"https://github.com/Haivision/srt/archive/${SRT_VERSION}.tar.gz\" \\\n    && mkdir -p /usr/src/srt \\\n    && tar -xzf srt.tar.gz -C /usr/src/srt --strip-components=1 \\\n    && rm srt.tar.gz \\\n    && cd /usr/src/srt \\\n    && apk add --no-cache --virtual .build-deps \\\n        ca-certificates \\\n        g++ \\\n        gcc \\\n        libc-dev \\\n        linux-headers \\\n        make \\\n        tcl \\\n        cmake \\\n        openssl-dev \\\n        tar \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install && rm -rf /usr/src/srt\n\nWORKDIR /go/src/github.com/openfresh/gosrt\nCOPY ./ /go/src/github.com/openfresh/gosrt\nRUN CGO_ENABLED=1 GOOS=`go env GOHOSTOS` GOARCH=`go env GOHOSTARCH` go build -o bin/livetransmit github.com/openfresh/gosrt/examples/livetransmit \\\n    && go test -short -v $(go list ./... | grep -v /vendor/)\n\n#production stage\nFROM alpine:3.9\n\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib64\n\nCMD [\"/livetransmit/bin/livetransmit\"]\n\nWORKDIR /livetransmit\n\nRUN apk add --no-cache libstdc++ openssl\n\nCOPY --from=build-stage /go/src/github.com/openfresh/gosrt/bin/livetransmit /livetransmit/bin/\nCOPY --from=build-stage /usr/local/lib64/libsrt* /usr/local/lib64/\n"
}