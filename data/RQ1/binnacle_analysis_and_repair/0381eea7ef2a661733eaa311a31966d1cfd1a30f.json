{
  "startTime": 1674235122167,
  "endTime": 1674235122500,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.7\n\n# We need git for pulling dependencies and bash for debugging.\n# git2go ref 241aa34d83b210ceaab7029c46e05794f2ea9797\n\n# Set the default timezone to EST.\nENV TZ=America/New_York\nRUN echo $TZ | tee /etc/timezone \\\n\t&& dpkg-reconfigure --frontend noninteractive tzdata\n\nRUN apt-get update && apt-get -q --no-install-recommends -y install \\\n\tgit openssl apt-transport-https ca-certificates curl g++ gcc libc6-dev make pkg-config \\\n\tlibssl-dev cmake && rm -rf /var/lib/apt/lists/*;\n\n# Build libssh2 from source\nRUN cd $HOME && curl -fsSL https://github.com/libssh2/libssh2/archive/libssh2-1.7.0.tar.gz -o libssh2.tar.gz \\\n  && mkdir libgit2 \\\n \t&& tar xvf libssh2.tar.gz -C libgit2 \\\n\t&& ls -la libgit2 \\\n\t&& cd libgit2/libssh2-libssh2-1.7.0 \\\n\t&& cmake -DBUILD_SHARED_LIBS=ON . \\\n\t&& cmake --build . \\\n\t&& make \\\n\t&& make install \\\n\t&& ldconfig && rm libssh2.tar.gz\n\n# Build libgit2 from source\nRUN cd $HOME && curl -fsSL https://github.com/libgit2/libgit2/archive/v0.24.1.tar.gz -o v0.24.1.tar.gz \\\n \t&& tar xvf v0.24.1.tar.gz -C libgit2 \\\n\t&& cd libgit2/libgit2-0.24.1 \\\n\t&& cmake -DCURL=OFF . \\\n\t&& cmake --build . \\\n\t&& make \\\n\t&& make install \\\n\t&& ldconfig \\\n\t&& rm -rf $HOME/libgit2 && rm v0.24.1.tar.gz\n\n# Copy in requisite files.\nCOPY ./infra /go/src/github.com/gophr-pm/gophr/infra\nCOPY ./router /go/src/github.com/gophr-pm/gophr/router\nCOPY ./lib /go/src/github.com/gophr-pm/gophr/lib\n\n# Build source and move things around.\nRUN cd /go/src/github.com/gophr-pm/gophr/router \\\n    && echo -e \"\\nFetching dependencies...\\n\" \\\n    && go get -d -v \\\n    && echo -e \"\\nBuilding the binary...\\n\" \\\n    && go build -v -o gophr-router-binary \\\n    && chmod +x ./gophr-router-binary \\\n    && echo -e \"\\nMoving things around...\\n\" \\\n    && mkdir /gophr \\\n    && mv ./gophr-router-binary /gophr/gophr-router-binary \\\n    && mv ../infra/scripts/wait-for-it.sh /gophr/wait-for-it.sh \\\n    && cd /gophr \\\n    && rm -rf /go\n\n# Remove all unnecessary\nRUN set -ex && apt-get -y remove git\n\n# Set the environment variables\nENV PORT=\"3000\"\nENV GOPHR_ENV=\"prod\"\nENV GOPHR_DB_ADDR=\"db-svc\"\nENV GOPHR_SECRETS_PATH=\"/secrets\"\nENV GOPHR_CONSTRUCTION_ZONE_PATH=\"/construction-zone\"\n\nVOLUME [\"/construction-zone\", \"/secrets\"]\n\n# Set the generated directory as the work directory.\nWORKDIR /gophr\n\n# Wait for db:9042 with no timeout, then start the binary.\nCMD ./wait-for-it.sh -h \"$GOPHR_DB_ADDR\" -p 9042 -t 0 \\\n    -- \\\n    ./gophr-router-binary --port \"$PORT\"\n"
}