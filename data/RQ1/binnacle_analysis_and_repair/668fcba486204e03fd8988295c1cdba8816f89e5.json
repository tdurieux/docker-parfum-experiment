{
  "startTime": 1674242244657,
  "endTime": 1674242244939,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 89
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 69,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.9-alpine\nMAINTAINER Kolide Developers <engineering@kolide.co>\n\nENV NPM_CONFIG_LOGLEVEL info\nENV NODE_VERSION 8.7.0\n\nRUN addgroup -g 1000 node \\\n    && adduser -u 1000 -G node -s /bin/sh -D node \\\n    && apk add --no-cache \\\n        libstdc++ \\\n    && apk add --no-cache --virtual .build-deps \\\n        binutils-gold \\\n        curl \\\n        g++ \\\n        gcc \\\n        gnupg \\\n        libgcc \\\n        linux-headers \\\n        make \\\n        python \\\n  # gpg keys listed at https://github.com/nodejs/node#release-team \\\n  && for key in \\\n    9554F04D7259F04124DE6B476D5A82AC7E37093B \\\n    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n    FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n    B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n    56730D5401028683275BD23C23EFEFE93C4CFFFE; \\\n  do \\\n    gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || \\\n    gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || \\\n    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n  done \\\n    && curl -f -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n    && curl -f -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n    && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n    && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n    && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n    && cd \"node-v$NODE_VERSION\" \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make -j$(getconf _NPROCESSORS_ONLN) \\\n    && make install \\\n    && apk del .build-deps \\\n    && cd .. \\\n    && rm -Rf \"node-v$NODE_VERSION\" \\\n    && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\n\nENV YARN_VERSION 1.2.0\n\nRUN apk add --no-cache --virtual .build-deps-yarn curl gnupg tar \\\n  && for key in \\\n    6A010C5166006599AA17F08146C2130DFD2497F5; \\\n  do \\\n    gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || \\\n    gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || \\\n    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n  done \\\n  && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n  && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n  && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n  && mkdir -p /opt/yarn \\\n  && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1 \\\n  && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \\\n  && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg \\\n  && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n  && apk del .build-deps-yarn\n\nRUN apk add --no-cache --update \\\n    git \\\n    alpine-sdk \\\n    openssl \\\n\topenssh-client\n\n\nRUN go get -u -v github.com/golang/dep/cmd/dep\n\n# git must be explicitly instructed to follow redirects for compatibility with\n# gopkg.in\nRUN git config --global http.https://gopkg.in.followRedirects true\n\nVOLUME   /go/src/github.com/kolide/fleet\nWORKDIR  /go/src/github.com/kolide/fleet\n\nEXPOSE 8080\n"
}