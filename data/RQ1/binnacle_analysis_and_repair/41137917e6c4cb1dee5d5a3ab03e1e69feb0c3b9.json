{
  "startTime": 1674242644441,
  "endTime": 1674242644680,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 14,
        "columnEnd": 50
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:5-fpm-alpine\n\nMaintainer Leon.Xu ( http://github.com/kairyou/ )\n\n# china mirrors (waiting for: mirrors.163.com)\nENV MIRROR_URL http://mirrors.aliyun.com/alpine/alpine/\n# ENV MIRROR_URL https://mirror.tuna.tsinghua.edu.cn/alpine/\n# ENV MIRROR_URL http://mirrors.ustc.edu.cn/alpine/\n# ENV MIRROR_URL http://mirrors.cug.edu.cn/alpine/\n\nENV ALPINE_VERSION v3.4\nRUN echo '' > /etc/apk/repositories; \\\n    echo \"${MIRROR_URL}${ALPINE_VERSION}/main\" >> /etc/apk/repositories; \\\n    echo \"${MIRROR_URL}${ALPINE_VERSION}/community\" >> /etc/apk/repositories;\n\nENV PHPREDIS_VERSION 2.2.8\n\n# RUN rm -rf /usr/local/etc/php/conf.d/docker-php-ext-*.ini;\n\nRUN apk update; \\\n  # mysql\n    # support mysql_connect() for Discuz_X3.2\n    docker-php-ext-install mysql; \\\n    docker-php-ext-install mysqli pdo pdo_mysql; \\\n  # postgresql\n    apk add --no-cache postgresql-dev; \\\n    docker-php-ext-install pgsql pdo pdo_pgsql; \\\n  # memcached\n    apk add --no-cache libmemcached-dev; \\\n    apk add --no-cache gcc autoconf make libc-dev zlib-dev pkgconf; \\\n    apk add --no-cache git && git clone https://github.com/php-memcached-dev/php-memcached.git && cd php-memcached; \\\n    # git checkout php7; \\\n    phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-memcached-sasl && make && make install; \\\n    docker-php-ext-enable memcached; \\\n    cd .. && rm -rf php-memcached; apk del git; \\\n  # redis\n    docker-php-source extract; \\\n    curl -f -L -o /tmp/redis.tar.gz https://github.com/phpredis/phpredis/archive/$PHPREDIS_VERSION.tar.gz; \\\n    tar xfz /tmp/redis.tar.gz && rm -r /tmp/redis.tar.gz && mv phpredis-$PHPREDIS_VERSION /usr/src/php/ext/redis; \\\n    docker-php-ext-install redis && docker-php-source delete; \\\n  # mongodb\n    apk add --no-cache openssl-dev; \\\n    pecl install mongodb && docker-php-ext-enable mongodb; \\\n  # imageMgick && gd && mcrypt (Already installed: iconv, mbstring)\n    apk add --no-cache freetype-dev libpng-dev libjpeg-turbo-dev autoconf gcc g++ imagemagick-dev libtool make; \\\n    pecl install -of imagick && docker-php-ext-enable imagick; \\\n    docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/; \\\n    docker-php-ext-install gd; \\\n    apk add --no-cache libmcrypt-dev && docker-php-ext-install mcrypt; \\\n  # xdebug (Failed loading .../xdebug.so)\n    pecl install -of xdebug && docker-php-ext-enable xdebug;\n\n# RUN echo \"date.timezone = Asia/Shanghai\" >> /usr/local/etc/php/php.ini\n  # sed -i \"s/;date.timezone =.*/date.timezone = Asia\\/Shanghai/\" /etc/php5/fpm/php.ini\n\n# RUN apk del autoconf g++ libtool make pkgconf && rm -rf /tmp/* /var/cache/apk/*;\n"
}