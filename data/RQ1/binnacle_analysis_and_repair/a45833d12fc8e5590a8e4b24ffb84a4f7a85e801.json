{
  "startTime": 1674235820196,
  "endTime": 1674235820420,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################################################\n# Dockerfile to build a VFX Platform docker image\n\nFROM centos/devtoolset-7-toolchain-centos7\n\nLABEL maintainer=\"Aloys.Baillet - Animal Logic\"\n\nARG current_host_ip_address\n\nENV BUILD_PROCS 7\nENV BUILD_DIR /opt/vfx\nENV TMP_DIR /tmp/vfx-build\nENV DOWNLOADS_DIR /tmp/vfx-downloads\nENV PATH $BUILD_DIR/bin:$PATH\nENV PKG_CONFIG_PATH=$BUILD_DIR/lib/pkgconfig:$PKG_CONFIG_PATH\nENV LD_LIBRARY_PATH=$BUILD_DIR/lib64:$BUILD_DIR/lib:$LD_LIBRARY_PATH\nENV PYTHON_SITE_PACKAGES=$BUILD_DIR/lib/python2.7/site-packages\nENV PYTHON_EXECUTABLE=python\nENV PYTHONPATH=$PYTHONPATH:/opt/usd/lib/python:/opt/usd/lib/python/site-packages:/opt/usd/lib64/python/site-packages\nENV HTTP_HOSTNAME=$current_host_ip_address\n\nUSER root\n\nRUN yum install -y --setopt=tsflags=nodocs wget make && yum clean all -y && rm -rf /var/cache/yum\n\nCOPY scripts/build_vfx.sh scripts/build_vfx_base.sh scripts/download_vfx.sh /tmp/\n\n# RUN /tmp/download_vfx.sh && \\\n#     /tmp/build_vfx_base.sh && \\\n#     /tmp/build_vfx.sh && \\\n#     rm -Rf $DOWNLOADS_DIR/*\n\nRUN /tmp/download_vfx.sh\n\n# @TODO MERGE IN ONE BUILD COMMAND!\nRUN yum install -y perl && rm -rf /var/cache/yum\nRUN mkdir -p $TMP_DIR\n\n#----------------------------------------------\n# build and install cmake\n#----------------------------------------------\nRUN cd $TMP_DIR &&\\\n    tar -zxf $DOWNLOADS_DIR/cmake-3.12.3.tar.gz &&\\\n    cd $TMP_DIR/cmake-3.12.3 && \\\n    ./bootstrap --prefix=$BUILD_DIR && \\\n    make -j ${BUILD_PROCS} && \\\n    make install && rm $DOWNLOADS_DIR/cmake-3.12.3.tar.gz\n\n#----------------------------------------------\n# build and install Qt\n#----------------------------------------------\nRUN cd $TMP_DIR && \\\n    tar -zxf $DOWNLOADS_DIR/Maya-Qt5.6.1-2018.3.tgz && \\\n    cd $TMP_DIR/src && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        -prefix $BUILD_DIR \\\n        -opensource \\\n        -confirm-license \\\n        -no-rpath \\\n        -nomake examples \\\n        -I $BUILD_DIR/include \\\n        -L $BUILD_DIR/lib && rm $DOWNLOADS_DIR/Maya-Qt5.6.1-2018.3.tgz\nRUN cd $TMP_DIR/src && make -j ${BUILD_PROCS}\nRUN cd $TMP_DIR/src && make install\n\n# #----------------------------------------------\n# # build and install PySide\n# #----------------------------------------------\nRUN yum install -y cmake python-pip python-setuptools python-devel libxml2-devel libxslt-devel && rm -rf /var/cache/yum\n\nRUN cd $TMP_DIR &&\\\n    unzip $DOWNLOADS_DIR/pyside2-maya2018.4.zip &&\\\n    cd pyside-setup &&\\\n    python setup.py build &&\\\n    python setup.py install\n\nCMD bash\n"
}