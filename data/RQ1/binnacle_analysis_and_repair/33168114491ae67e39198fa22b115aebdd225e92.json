{
  "startTime": 1674240112268,
  "endTime": 1674240113380,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 178,
        "lineEnd": 178,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 178,
        "lineEnd": 178,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM jupyter/datascience-notebook:160eb5183ace\nLABEL maintainer=\"Genomics Division, ITER (genomicsITER)\"\n\nUSER root\n\nWORKDIR /home/jovyan/software\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    autoconf \\\n    zlib1g-dev \\\n    cmake \\\n    default-jre \\\n    unzip \\\n    apt-transport-https \\\n    python2.7 \\\n    python-pip \\\n    strace \\\n    libhdf5-cpp-11 \\\n    libbz2-dev \\\n    liblzma-dev ncurses-dev libncurses5-dev libncursesw5-dev \\\n    python3 python3-setuptools libboost-all-dev \\\n    python3-h5py python3-numpy python3-dateutil python3-progressbar \\\n    libboost-filesystem1.58.0 libboost-program-options1.58.0 \\\n    libboost-system1.58.0 libboost-log1.58.0 libboost-thread1.58.0 \\\n    libboost-python1.58.0 graphviz parallel && rm -rf /var/lib/apt/lists/*;\n\n\nRUN pip install --no-cache-dir bash_kernel biopython nanosim-h jupyterlab HTSeq && \\\n    python -m bash_kernel.install\n\nRUN echo '**************************************' && \\\n    echo '*******Installing minimap2 ***********' && \\\n    echo '**************************************' && \\\n    git clone https://github.com/lh3/minimap2 && \\\n    cd minimap2 && make && \\\n    find . -name '*.o' -exec rm -f {} \\; && \\\n    cd ..\n\nRUN echo '**************************************' && \\\n    echo '*******Installing racon    ***********' && \\\n    echo '**************************************' && \\\n    git clone --recursive https://github.com/isovic/racon.git racon && \\\n    cd racon && mkdir build && cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Release .. && \\\n    make && \\\n    find . -name '*.o' -exec rm -f {} \\;\n\nRUN echo '**************************************' && \\\n    echo '*******Installing Unicycler **********' && \\\n    echo '**************************************' && \\\n    git clone https://github.com/rrwick/Unicycler.git && \\\n    cd Unicycler && make && \\\n    find . -name '*.o' -exec rm -f {} \\; && \\\n    cd ..\n\nRUN echo '**************************************' && \\\n    echo '*******Installing miniasm ************' && \\\n    echo '**************************************' && \\\n    git clone https://github.com/lh3/miniasm && \\\n    (cd miniasm && make && find . -name '*.o' -exec rm -f {} \\;)\n\nRUN echo '**************************************' && \\\n    echo '*******Installing canu ***************' && \\\n    echo '**************************************' && \\\n    git clone https://github.com/marbl/canu.git && \\\n    cd canu/src && make -j 1 && find . -name '*.o' -exec rm -f {} \\;\n\nRUN echo '**************************************' && \\\n    echo '*******Installing quast **************' && \\\n    echo '**************************************' && \\\n    git clone https://github.com/ablab/quast.git && \\ \n    cd quast && ./setup.py install && \\\n    find . -name '*.o' -exec rm -f {} \\; && \\\n    cd ..\n\nRUN echo '**************************************' && \\\n    echo '*******Installing Porechop ***********' && \\\n    echo '**************************************' && \\\n    git clone https://github.com/rrwick/Porechop.git && \\\n    cd Porechop && \\\n    python3 setup.py install && \\\n    find . -name '*.o' -exec rm -f {} \\;\n\nRUN echo '**************************************' && \\\n    echo '*******Installing Rebaler ************' && \\\n    echo '**************************************' && \\\n    git clone https://github.com/rrwick/Rebaler.git && \\\n    cd Rebaler && \\\n    python3 setup.py install\n\nRUN echo '***********************************' && \\\n    echo '*******Installing samtools  *******' && \\\n    echo '***********************************' && \\\n    wget \"https://sourceforge.net/projects/samtools/files/samtools/1.5/samtools-1.5.tar.bz2\" && \\\n    tar -xvjf samtools-1.5.tar.bz2 && rm samtools-1.5.tar.bz2 && \\\n    cd samtools-1.5 && autoheader && autoconf -Wno-syntax && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && cd ..\n\nRUN echo '***********************************' && \\\n    echo '*******Installing SPAdes  *******' && \\\n    echo '***********************************' && \\\n    wget \"https://cab.spbu.ru/files/release3.13.0/SPAdes-3.13.0-Linux.tar.gz\" && \\\n    tar -xvzf SPAdes-3.13.0-Linux.tar.gz && rm SPAdes-3.13.0-Linux.tar.gz\n\nRUN echo '***********************************' && \\\n    echo '*******Installing pilon ***********' && \\\n    echo '***********************************' && \\\n    mkdir pilon && cd pilon && \\ \n    wget \"https://github.com/broadinstitute/pilon/releases/download/v1.22/pilon-1.22.jar\" && \\\n    chown jovyan pilon-1.22.jar && cd ..\n\nRUN echo '***********************************' && \\\n    echo '*******Installing bwa *************' && \\\n    echo '***********************************' && \\\n    wget \"https://sourceforge.net/projects/bio-bwa/files/bwa-0.7.15.tar.bz2\" && \\\n    tar -xvjf bwa-0.7.15.tar.bz2 && \\\n    rm bwa-0.7.15.tar.bz2 && \\ \n    cd bwa-0.7.15 && make && \\\n    find . -name '*.o' -exec rm -f {} \\; && \\\n    cd ..\n\nRUN echo '***********************************' && \\\n    echo '*******Installing ncbi-blast+ *****' && \\\n    echo '***********************************' && \\\n    wget \"https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.7.1/ncbi-blast-2.7.1+-x64-linux.tar.gz‚Äù && \\\n    tar zxvpf ncbi-blast-2.7.1+-x64-linux.tar.gz && \\ \n    rm ncbi-blast-2.7.1+-x64-linux.tar.gz\n\nRUN echo '***********************************' && \\\n    echo '*******Installing MaSuRCA *********' && \\\n    echo '***********************************' && \\\n    wget \"https://github.com/alekseyzimin/masurca/releases/download/3.2.8/MaSuRCA-3.2.8.tar.gz\" && \\  \n    tar -xzvf MaSuRCA-3.2.8.tar.gz && \\\n    rm MaSuRCA-3.2.8.tar.gz && \\\n    cd MaSuRCA-3.2.8 && ./install.sh && \\\n    PERL_MM_USE_DEFAULT=1 perl -MCPAN -e 'install Statistics::Descriptive' && \\ \n    find . -name '*.o' -exec rm -f {} \\; && \\\n    cd ..\n\nRUN echo '*********************************************' && \\\n    echo '*******Installing rhdf5 (R bioconductor) ****' && \\\n    echo '*********************************************' && \\\n    echo 'local({r <- getOption(\"repos\"); r[\"CRAN\"] <- \"http://cran.cnr.berkeley.edu/\"; options(repos = r)})'  >> /home/jovyan/.Rprofile && \\\n    R -e \"source('http://www.bioconductor.org/biocLite.R'); biocLite('rhdf5'); install.packages(c('shiny','svDialogs','data.table','bit64'))\"\n\nRUN echo '***********************************' && \\\n    echo '*******Installing Flye ************' && \\\n    echo '***********************************' && \\\n    wget \"https://codeload.github.com/fenderglass/Flye/tar.gz/2.3.6\" && \\\n    tar -xzvf 2.3.6 && \\ \n    rm 2.3.6 && \\ \n    cd Flye-2.3.6 && \\  \n    python2 setup.py install && cd ..\n\nRUN echo '***********************************' && \\\n    echo '*******Installing nanopolish ******' && \\\n    echo '***********************************' && \\\n    git clone --recursive https://github.com/jts/nanopolish.git && \\\n    cd nanopolish && \\\n    make && \\\n    find . -name '*.o' -exec rm -f {} \\; && \\\n    cd ..\n\nRUN echo '***********************************' && \\\n    echo '*******Installing bowtie2 *********' && \\\n    echo '***********************************' && \\\n    wget \"https://sourceforge.net/projects/bowtie-bio/files/bowtie2-2.3.4.1-linux-x86_64.zip\" && \\\n    unzip bowtie2-2.3.4.1-linux-x86_64.zip -d ~/software && \\\n    rm bowtie2-2.3.4.1-linux-x86_64.zip\n\nRUN echo '****************************************************' && \\\n    echo '*******Installing albacore & fast5 (ONT software) **' && \\\n    echo '****************************************************' && \\\n    wget -O- https://mirror.oxfordnanoportal.com/apt/ont-repo.pub | apt-key add - && \\\n    echo \"deb http://mirror.oxfordnanoportal.com/apt xenial-stable non-free\" | tee /etc/apt/sources.list.d/nanoporetech.sources.list && \\\n    apt-get update && \\ \n    wget -qO python3-ont-albacore_2.3.3-1~xenial_amd64.deb https://mirror.oxfordnanoportal.com/software/analysis/python3-ont-albacore_2.3.3-1~xenial_amd64.deb && \\\n    apt-get install --no-install-recommends -y python3-ont-fast5-api && \\\n    dpkg -i python3-ont-albacore_2.3.3-1~xenial_amd64.deb && \\\n    rm python3-ont-albacore_2.3.3-1~xenial_amd64.deb && \\\n    apt-get install -fy && \\\n    apt-get -y --no-install-recommends install gnuplot-x11 qt5-default && rm -rf /var/lib/apt/lists/*;\n\nRUN echo '***********************************' && \\\n    echo '*******Installing Bandage *********' && \\\n    echo '***********************************' && \\\n    mkdir Bandage && cd Bandage && \\  \n    wget \"https://github.com/rrwick/Bandage/releases/download/v0.8.1/Bandage_Ubuntu_dynamic_v0_8_1.zip\" && \\  \n    unzip Bandage_Ubuntu_dynamic_v0_8_1.zip && \\  \n    rm Bandage_Ubuntu_dynamic_v0_8_1.zip\n\nRUN echo '***********************************' && \\\n    echo '*******Installing Nanosim *********' && \\\n    echo '***********************************' && \\\n    wget \"https://github.com/bcgsc/NanoSim/archive/v2.1.0.tar.gz\" && \\\n    tar -xzvf v2.1.0.tar.gz && \\\n    rm v2.1.0.tar.gz\n\n\nENV PATH \"$PATH:/home/jovyan/software/ncbi-blast-2.7.1+/bin\"\nENV PATH \"$PATH:/home/jovyan/software/Porechop\"\nENV PATH \"$PATH:/home/jovyan/software/SPAdes-3.13.0-Linux/bin\"\nENV PATH \"$PATH:/home/jovyan/software/minimap2\"\nENV PATH \"$PATH:/home/jovyan/software/racon/build/bin\"\nENV PATH \"$PATH:/home/jovyan/software/bowtie2-2.3.4.1-linux-x86_64\"\nENV PATH \"$PATH:/home/jovyan/software/samtools-1.5\"\nENV PATH \"$PATH:/home/jovyan/software/pilon/bin\"\nENV PATH \"$PATH:/home/jovyan/software/Unicycler\"\nENV PATH \"$PATH:/home/jovyan/software/bwa-0.7.15\"\nENV PATH \"$PATH:/home/jovyan/software/canu/Linux-amd64/bin\"\nENV PATH \"$PATH:/home/jovyan/software/quast\"\nENV PATH \"$PATH:/home/jovyan/software/miniasm\"\nENV PATH \"$PATH:/home/jovyan/software/pilon\"\nENV PATH \"$PATH:/home/jovyan/software/Flye-2.3.6/bin\"\nENV PATH \"$PATH:/home/jovyan/software/nanopolish\"\nENV PATH \"$PATH:/home/jovyan/software/MaSuRCA-3.2.8/bin\"\nENV PATH \"$PATH:/home/jovyan/software/Bandage\"\nENV PATH \"$PATH:/home/jovyan/software/NanoSim-2.1.0/src\"\n\nUSER jovyan\nWORKDIR /home/jovyan/notebooks\n\nCMD jupyter lab --allow-root\n"
}