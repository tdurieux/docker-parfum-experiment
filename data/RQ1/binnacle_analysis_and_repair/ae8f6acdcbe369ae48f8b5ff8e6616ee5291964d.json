{
  "startTime": 1674243166072,
  "endTime": 1674243166286,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 12,
        "columnEnd": 137
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 30,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.5\n\nRUN mkdir /opt/actioncenter\nWORKDIR /opt/actioncenter\n\nRUN apt-get update && \\\n  apt-get install -y --no-install-recommends \\\n    curl \\\n    build-essential \\\n    git \\\n    libpq-dev \\\n    libfontconfig \\\n    postgresql-client \\\n    cron \\\n    gnupg \\\n    libssl1.0-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN set -x; \\\n  curl -f -sL https://deb.nodesource.com/setup_6.x -o nodesource_setup.sh \\\n  && chmod +x nodesource_setup.sh \\\n  && ./nodesource_setup.sh \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    nodejs \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n  && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    yarn && rm -rf /var/lib/apt/lists/*;\n\n# Create a symlink to what will be the phantomjs exec path\nRUN ln -s /phantomjs-2.1.1-linux-x86_64/bin/phantomjs /bin/phantomjs\n\n# Set up phantomjs, making sure to check the known good sha256sum\nRUN cd / && curl -f -sLo phantomjs.tar.bz2 https://github.com/Medium/phantomjs/releases/download/v2.1.1/phantomjs-2.1.1-linux-x86_64.tar.bz2 && \\\n  bash -l -c '[ \"`sha256sum phantomjs.tar.bz2 | cut -f1 -d\" \"`\" = \"86dd9a4bf4aee45f1a84c9f61cf1947c1d6dce9b9e8d2a907105da7852460d2f\" ]' && \\\n  tar -jxvf phantomjs.tar.bz2 > /dev/null && \\\n  rm phantomjs.tar.bz2\n\nCOPY package.json package-lock.json ./\nRUN npm install && npm cache clean --force;\n\nADD Gemfile* ./\n\nRUN gem install bundler && bundle install\n\nADD bin/ ./bin\nADD config/ ./config\nADD config.ru ./\nADD Rakefile ./\nADD db/ ./db\nADD lib/ ./lib\nADD public/ ./public\nADD app/ ./app\nADD features/ ./features\nADD script/ ./script\nADD spec/ ./spec\nADD vendor/ ./vendor\nADD docker/ ./docker\nADD .rubocop.yml ./.rubocop.yml\nADD .sass-lint.yml ./.sass-lint.yml\n\nRUN usermod -u 1000 www-data\n\nCOPY docker/crontab /etc/cron.d/crontab\nRUN chmod 0644 /etc/cron.d/crontab\n\nRUN bundle exec rake assets:precompile \\\n  RAILS_ENV=production \\\n  SECRET_KEY_BASE=noop \\\n  devise_secret_key=noop \\\n  amazon_region=noop \\\n  DATABASE_URL=postgres://noop\nRUN bundle exec rake webshims:update_public\n\nRUN mkdir /opt/actioncenter/log \\\n          /var/www\nRUN chown -R www-data /opt/actioncenter/public \\\n                      /opt/actioncenter/db \\\n                      /opt/actioncenter/tmp \\\n                      /opt/actioncenter/log \\\n                      /var/www\n\nUSER www-data\nCMD [\"rails\", \"s\", \"-b\", \"0.0.0.0\"]\nENTRYPOINT [\"/opt/actioncenter/docker/entrypoint.sh\"]\n"
}