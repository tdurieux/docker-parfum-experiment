{
  "startTime": 1674243581169,
  "endTime": 1674243581379,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.2-fpm\n\n# install the PHP extensions we need\nRUN set -ex; \\\n\tpecl channel-update pecl.php.net; \\\n\t\\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\t\\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tlibfreetype6-dev \\\n\t\tlibjpeg62-turbo-dev \\\n\t    libmcrypt-dev \\\n\t    libpng-dev \\\n\t    libxml2-dev \\\n\t    libmemcached-dev \\\n\t    zlib1g-dev \\\n\t; \\\n\tdocker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/; \\\n\tdocker-php-ext-install -j$(nproc) iconv gd; \\\n\tdocker-php-ext-install \\\n\t\tsoap \\\n\t\tpdo_mysql \\\n\t\tzip \\\n\t\tmbstring \\\n\t\topcache \\\n\t; \\\n\tpecl install channel://pecl.php.net/mcrypt-1.0.1; \\\n\tpecl install memcached; \\\n\tdocker-php-ext-enable mcrypt; \\\n\tdocker-php-ext-enable memcached; \\\n# reset apt-mark's \"manual\" list so that \"purge --auto-remove\" will remove all build dependencies\n\tapt-mark auto '.*' > /dev/null; \\\n\tapt-mark manual $savedAptMark; \\\n\tldd \"$(php -r 'echo ini_get(\"extension_dir\");')\"/*.so \\\n\t\t| awk '/=>/ { print $3 }' \\\n\t\t| sort -u \\\n\t\t| xargs -r dpkg-query -S \\\n\t\t| cut -d: -f1 \\\n\t\t| sort -u \\\n\t\t| xargs -rt apt-mark manual; \\\n\t\\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\trm -rf /var/lib/apt/lists/*\n\n# set recommended PHP.ini settings\n# see https://secure.php.net/manual/en/opcache.installation.php\nRUN { \\\n\t\techo 'opcache.memory_consumption=128'; \\\n\t\techo 'opcache.interned_strings_buffer=8'; \\\n\t\techo 'opcache.max_accelerated_files=4000'; \\\n\t\techo 'opcache.revalidate_freq=2'; \\\n\t\techo 'opcache.fast_shutdown=1'; \\\n\t\techo 'opcache.enable_cli=1'; \\\n\t} > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\n# Install Composer\n# see https://getcomposer.org/download/\nRUN curl -f -s https://getcomposer.org/installer | php; \\\n\techo \"export PATH=${PATH}:/var/www/vendor/bin\" >> ~/.bashrc; \\\n\tmv composer.phar /usr/local/bin/composer\n\n## Load Plus(ThinkSNS+)\nCOPY . /usr/src/plus\nRUN set -ex; \\\n\trm -rf /var/www; \\\n\tmkdir /var/www; \\\n\tchown -R www-data:www-data /usr/src/plus; \\\n\tchown -R www-data:www-data /var/www\nUSER www-data\nRUN set -ex; \\\n\tcomposer install \\\n\t\t--no-dev \\\n\t\t--optimize-autoloader \\\n\t\t--classmap-authoritative \\\n\t\t--ignore-platform-reqs \\\n\t\t--working-dir=/usr/src/plus\nUSER root\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN set -ex; \\\n\tchmod -f +x /usr/local/bin/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nWORKDIR /var/www\nVOLUME /var/www\n\nCMD [\"php-fpm\"]\n"
}