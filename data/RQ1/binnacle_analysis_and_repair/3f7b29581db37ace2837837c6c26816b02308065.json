{
  "startTime": 1674251473905,
  "endTime": 1674251474161,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "FROM openhorizon/aarch64-tx2-cudabase:JetPack3.2-RC\n\n#AUTHOR bmwshop@gmail.com\nMAINTAINER nuculur@gmail.com\n\n# this installs darknet: http://pjreddie.com/darknet/install/\n# and then configures the tiny model for yolo\nRUN apt-get update && apt-get install --no-install-recommends -y git pkg-config wget && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y libopencv-dev && rm -rf /var/lib/apt/lists/*;\nWORKDIR /\nRUN git clone https://github.com/pjreddie/darknet.git\nWORKDIR /darknet\nCOPY Makefile /darknet/Makefile\n\nENV PATH /usr/local/cuda/bin:$PATH\nRUN make -j4\n\nRUN wget https://pjreddie.com/media/files/tiny-yolo.weights\nRUN wget https://pjreddie.com/media/files/tiny-yolo-voc.weights\nRUN wget https://pjreddie.com/media/files/yolo.weights\nCOPY tiny-yolo.cfg /darknet/cfg/tiny-yolo.cfg\n\n# now assuming you have an attached webcam (not the itegrated one, which is typically cam 0 (/dev/video0))\n# xhost + && docker run --privileged -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix --rm openhorizon/darknet-tx2 ./darknet detector demo cfg/tiny-yolo-voc.cfg tiny-yolo-voc.weights\n# or to test on one picture (it works even if you don't have X)\n# docker run --privileged -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix --rm openhorizon/darknet-tx2 ./darknet yolo test cfg/tiny-yolo.cfg tiny-yolo.weights data/person.jpg\n"
}