{
  "startTime": 1674250497809,
  "endTime": 1674250498308,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 74,
        "lineEnd": 108,
        "columnStart": 0,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 173,
        "lineEnd": 173,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 60,
        "columnStart": 0,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 133,
        "lineEnd": 140,
        "columnStart": 0,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04 as modsecurity-build\nLABEL maintainer=\"krish512 <krish512@hotmail.com>\"\n\n# Install Prereqs\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update -qq && \\\n    apt install  -qq -y --no-install-recommends --no-install-suggests \\\n    ca-certificates      \\\n    automake             \\\n    autoconf             \\\n    build-essential      \\\n    libcurl4-openssl-dev \\\n    libpcre++-dev        \\\n    libtool              \\\n    libxml2-dev          \\\n    libyajl-dev          \\\n    lua5.2-dev           \\\n    git                  \\\n    pkgconf              \\\n    ssdeep               \\\n    libgeoip-dev         \\\n    wget             &&  \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN cd /opt && \\\n    git clone --depth 1 -b v3/master --single-branch https://github.com/SpiderLabs/ModSecurity && \\\n    cd ModSecurity && \\\n    git submodule init && \\\n    git submodule update && \\\n    ./build.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install\n\nRUN strip /usr/local/modsecurity/bin/* /usr/local/modsecurity/lib/*.a /usr/local/modsecurity/lib/*.so*\n\n\nFROM ubuntu:18.04 AS nginx-build\n\nENV DEBIAN_FRONTEND noninteractive\nENV NGINX_VERSION 1.15.0\n\nRUN apt-get update -qq && \\\napt install  -qq -y --no-install-recommends --no-install-suggests \\\nca-certificates \\\nautoconf        \\\nautomake        \\\nbuild-essential \\\nlibtool         \\\npkgconf         \\\nwget            \\\ngit             \\\nzlib1g-dev      \\\nlibssl-dev      \\\nlibpcre3-dev    \\\nlibxml2-dev     \\\nlibyajl-dev     \\\nlua5.2-dev      \\\nlibgeoip-dev    \\\nlibcurl4-openssl-dev    \\\nopenssl && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /opt && \\\ngit clone --depth 1 https://github.com/SpiderLabs/ModSecurity-nginx.git\n\nRUN cd /opt && \\\ngit clone --recursive https://github.com/google/ngx_brotli.git\n\nCOPY --from=modsecurity-build /usr/local/modsecurity/ /usr/local/modsecurity/\n\nRUN wget -q -P /opt https://nginx.org/download/nginx-\"$NGINX_VERSION\".tar.gz\nRUN tar xvzf /opt/nginx-\"$NGINX_VERSION\".tar.gz -C /opt && rm /opt/nginx-\"$NGINX_VERSION\".tar.gz\n\nRUN cd /opt/nginx-\"$NGINX_VERSION\" && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr/local/nginx \\\n        --sbin-path=/usr/local/nginx/nginx \\\n        --modules-path=/usr/local/nginx/modules \\\n        --conf-path=/etc/nginx/nginx.conf \\\n        --error-log-path=/var/log/nginx/error.log \\\n        --http-log-path=/var/log/nginx/access.log \\\n        --pid-path=/run/nginx.pid \\\n        --lock-path=/var/lock/nginx.lock \\\n        --user=www-data \\\n        --group=www-data \\\n        --with-pcre-jit \\\n        --with-file-aio \\\n        --with-threads \\\n        --with-http_addition_module \\\n        --with-http_auth_request_module \\\n        --with-http_flv_module \\\n        --with-http_gunzip_module \\\n        --with-http_gzip_static_module \\\n        --with-http_mp4_module \\\n        --with-http_random_index_module \\\n        --with-http_realip_module \\\n        --with-http_slice_module \\\n        --with-http_ssl_module \\\n        --with-http_sub_module \\\n        --with-http_stub_status_module \\\n        --with-http_v2_module \\\n        --with-http_secure_link_module \\\n        --with-stream \\\n        --with-stream_realip_module \\\n        --add-module=/opt/ModSecurity-nginx \\\n        --add-module=/opt/ngx_brotli \\\n        --with-cc-opt='-g -O2 -specs=/usr/share/dpkg/no-pie-compile.specs -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC' \\\n        --with-ld-opt='-specs=/usr/share/dpkg/no-pie-link.specs -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie' \\\n        --with-http_dav_module\n\nRUN cd /opt/nginx-\"$NGINX_VERSION\" && \\\nmake && \\\nmake install && \\\nmake modules\n\nRUN mkdir -p /var/log/nginx/\nRUN touch /var/log/nginx/access.log\nRUN touch /var/log/nginx/error.log\n\n\nEXPOSE 80\n\nSTOPSIGNAL SIGTERM\n\nCMD [\"/usr/local/nginx/nginx\", \"-g\", \"daemon off;\"]\n\n\nFROM ubuntu:18.04\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Libraries for ModSecurity\nRUN apt update && \\\napt-get install --no-install-recommends --no-install-suggests -y \\\nca-certificates \\\nlibcurl4-openssl-dev  \\\nlibyajl-dev \\\nlua5.2-dev \\\nlibgeoip-dev \\\nvim \\\nlibxml2 && rm -rf /var/lib/apt/lists/*;\nRUN apt clean && \\\nrm -rf /var/lib/apt/lists/*\n\nCOPY --from=modsecurity-build /usr/local/modsecurity/ /usr/local/modsecurity/\nRUN ldconfig\n\nCOPY --from=nginx-build /usr/local/nginx/nginx /usr/local/nginx/nginx\n\nCOPY --from=nginx-build /etc/nginx /etc/nginx\n\nCOPY --from=nginx-build /usr/local/nginx/html /usr/local/nginx/html\n\n# NGiNX Create log dirs\nRUN mkdir -p /var/log/nginx/\nRUN touch /var/log/nginx/access.log\nRUN touch /var/log/nginx/error.log\n\nRUN sed -i '38i modsecurity on;\\n\\tmodsecurity_rules_file /etc/nginx/modsecurity.d/include.conf;' /etc/nginx/nginx.conf\nRUN mkdir -p /etc/nginx/modsecurity.d\nRUN echo \"include /etc/nginx/modsecurity.d/modsecurity.conf\" > /etc/nginx/modsecurity.d/include.conf\nCOPY --from=modsecurity-build /opt/ModSecurity/modsecurity.conf-recommended /etc/nginx/modsecurity.d\nRUN cd /etc/nginx/modsecurity.d && \\\n    mv modsecurity.conf-recommended modsecurity.conf\n\n## Version for ModSecurity Core Rule Set\nARG VERSION=3.0.2\n\n## Install Curl\nRUN apt-get update && apt-get install --no-install-recommends curl -y && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n## Get ModSecurity CRS\nRUN curl -f -s https://codeload.github.com/SpiderLabs/owasp-modsecurity-crs/tar.gz/v${VERSION} --output ~/modsec.tar.gz\nRUN tar -xzf ~/modsec.tar.gz -C /etc/nginx && rm ~/modsec.tar.gz\nRUN rm ~/modsec.tar.gz\n\n## Install ModSecurity CRS\nRUN cat /etc/nginx/owasp-modsecurity-crs-${VERSION}/crs-setup.conf.example /etc/nginx/owasp-modsecurity-crs-${VERSION}/rules/*.conf >> /etc/nginx/modsecurity.d/crs.conf\nRUN cp /etc/nginx/owasp-modsecurity-crs-${VERSION}/rules/*.data /etc/nginx/modsecurity.d/\nRUN rm -rf /etc/nginx/owasp-modsecurity-crs-*\nRUN echo \"include /etc/nginx/modsecurity.d/crs.conf\">>/etc/nginx/modsecurity.d/include.conf\nRUN sed -i -e 's/SecRuleEngine DetectionOnly/SecRuleEngine On/g' /etc/nginx/modsecurity.d/modsecurity.conf\n\n## Update nginx config\nCOPY nginx /etc/nginx/\n\nEXPOSE 80\n\nSTOPSIGNAL SIGTERM\n\nCMD [\"/usr/local/nginx/nginx\", \"-g\", \"daemon off;\"]"
}