{
  "startTime": 1674239902619,
  "endTime": 1674239902940,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 129
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2015-2017 Ivan Krizsan\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Elastalert Docker image running on Alpine Linux.\n# Build image with: docker build -t ivankrizsan/elastalert:latest .\n\nFROM alpine\n\nLABEL maintainer=\"Ivan Krizsan, https://github.com/krizsan\"\n\n# Set this environment variable to True to set timezone on container start.\nENV SET_CONTAINER_TIMEZONE False\n# Default container timezone as found under the directory /usr/share/zoneinfo/.\nENV CONTAINER_TIMEZONE Europe/Stockholm\n# URL from which to download Elastalert.\nENV ELASTALERT_URL https://github.com/Yelp/elastalert/archive/master.zip\n# Directory holding configuration for Elastalert and Supervisor.\nENV CONFIG_DIR /opt/config\n# Elastalert rules directory.\nENV RULES_DIRECTORY /opt/rules\n# Elastalert configuration file path in configuration directory.\nENV ELASTALERT_CONFIG ${CONFIG_DIR}/elastalert_config.yaml\n# Directory to which Elastalert and Supervisor logs are written.\nENV LOG_DIR /opt/logs\n# Elastalert home directory full path.\nENV ELASTALERT_HOME /opt/elastalert\n# Supervisor configuration file for Elastalert.\nENV ELASTALERT_SUPERVISOR_CONF ${CONFIG_DIR}/elastalert_supervisord.conf\n# Alias, DNS or IP of Elasticsearch host to be queried by Elastalert. Set in default Elasticsearch configuration file.\nENV ELASTICSEARCH_HOST elasticsearchhost\n# Port on above Elasticsearch host. Set in default Elasticsearch configuration file.\nENV ELASTICSEARCH_PORT 9200\n# Use TLS to connect to Elasticsearch (True or False)\nENV ELASTICSEARCH_TLS False\n# Verify TLS\nENV ELASTICSEARCH_TLS_VERIFY True\n# ElastAlert writeback index\nENV ELASTALERT_INDEX elastalert_status\n\nWORKDIR /opt\n\n# Install software required for Elastalert and NTP for time synchronization.\nRUN apk update && \\\n    apk upgrade && \\\n    apk add --no-cache ca-certificates openssl-dev openssl libffi-dev python2 python2-dev py2-pip py2-yaml gcc musl-dev tzdata openntpd wget && \\\n# Download and unpack Elastalert.\n    wget -O elastalert.zip \"${ELASTALERT_URL}\" && \\\n    unzip elastalert.zip && \\\n    rm elastalert.zip && \\\n    mv e* \"${ELASTALERT_HOME}\"\n\nWORKDIR \"${ELASTALERT_HOME}\"\n\n# Install Elastalert.\nRUN python setup.py install && \\\n    pip install --no-cache-dir -e . && \\\n    pip uninstall twilio --yes && \\\n    pip install --no-cache-dir twilio==6.0.0 && \\\n\n# Install Supervisor.\n    easy_install supervisor && \\\n\n# Create directories. The /var/empty directory is used by openntpd.\n    mkdir -p \"${CONFIG_DIR}\" && \\\n    mkdir -p \"${RULES_DIRECTORY}\" && \\\n    mkdir -p \"${LOG_DIR}\" && \\\n    mkdir -p /var/empty && \\\n\n# Clean up.\n    apk del python2-dev && \\\n    apk del musl-dev && \\\n    apk del gcc && \\\n    apk del openssl-dev && \\\n    apk del libffi-dev && \\\n    rm -rf /var/cache/apk/*\n\n# Copy the script used to launch the Elastalert when a container is started.\nCOPY ./start-elastalert.sh /opt/\n# Make the start-script executable.\nRUN chmod +x /opt/start-elastalert.sh\n\n# Define mount points.\nVOLUME [ \"${CONFIG_DIR}\", \"${RULES_DIRECTORY}\", \"${LOG_DIR}\"]\n\n# Launch Elastalert when a container is started.\nCMD [\"/opt/start-elastalert.sh\"]\n"
}