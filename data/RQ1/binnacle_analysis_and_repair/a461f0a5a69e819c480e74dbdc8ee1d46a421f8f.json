{
  "startTime": 1674235489450,
  "endTime": 1674235490044,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 5,
        "columnEnd": 77
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\n\nMAINTAINER Colin Wilson \"colin@wyveo.com\"\n\n# Let the container know that there is no tty\nENV DEBIAN_FRONTEND noninteractive\nENV NGINX_VERSION 1.15.12-1~stretch\nENV php_conf /etc/php/7.3/fpm/php.ini\nENV fpm_conf /etc/php/7.3/fpm/pool.d/www.conf\nENV COMPOSER_VERSION 1.8.5\n\n# Install Basic Requirements\nRUN apt-get update \\\n    && apt-get install --no-install-recommends --no-install-suggests -q -y gnupg2 dirmngr wget apt-transport-https lsb-release ca-certificates \\\n    && \\\n    NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62; \\\n\t\t\tfound=''; \\\n\t\t\tfor server in \\\n\t\t  ha.pool.sks-keyservers.net \\\n\t\t  hkp://keyserver.ubuntu.com:80 \\\n\t\t  hkp://p80.pool.sks-keyservers.net:80 \\\n\t\t  pgp.mit.edu \\\n\t  ; do \\\n\t\t  echo \"Fetching GPG key $NGINX_GPGKEY from $server\"; \\\n\t\t  apt-key adv --batch --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break; \\\n\t  done; \\\n    test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1; \\\n    echo \"deb http://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list \\\n    && wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \\\n    && echo \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" > /etc/apt/sources.list.d/php.list \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends --no-install-suggests -q -y \\\n            apt-utils \\\n            curl \\\n            nano \\\n            zip \\\n            unzip \\\n            python-pip \\\n            python-setuptools \\\n            git \\\n            nginx=${NGINX_VERSION} \\\n            php7.3-fpm \\\n            php7.3-cli \\\n            php7.3-bcmath \\\n            php7.3-dev \\\n            php7.3-common \\\n            php7.3-json \\\n            php7.3-opcache \\\n            php7.3-readline \\\n            php7.3-mbstring \\\n            php7.3-curl \\\n            php7.3-imagick \\\n            php7.3-gd \\\n            php7.3-mysql \\\n            php7.3-zip \\\n            php7.3-pgsql \\\n            php7.3-intl \\\n            php7.3-xml \\\n            php7.3-redis \\\n    && mkdir -p /run/php \\\n    && pip install --no-cache-dir wheel \\\n    && pip install --no-cache-dir supervisor supervisor-stdout \\\n    && echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d \\\n    && rm -rf /etc/nginx/conf.d/default.conf \\\n    && sed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" ${php_conf} \\\n    && sed -i -e \"s/memory_limit\\s*=\\s*.*/memory_limit = 256M/g\" ${php_conf} \\\n    && sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" ${php_conf} \\\n    && sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" ${php_conf} \\\n    && sed -i -e \"s/variables_order = \\\"GPCS\\\"/variables_order = \\\"EGPCS\\\"/g\" ${php_conf} \\\n    && sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.3/fpm/php-fpm.conf \\\n    && sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" ${fpm_conf} \\\n    && sed -i -e \"s/pm.max_children = 5/pm.max_children = 4/g\" ${fpm_conf} \\\n    && sed -i -e \"s/pm.start_servers = 2/pm.start_servers = 3/g\" ${fpm_conf} \\\n    && sed -i -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers = 2/g\" ${fpm_conf} \\\n    && sed -i -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g\" ${fpm_conf} \\\n    && sed -i -e \"s/pm.max_requests = 500/pm.max_requests = 200/g\" ${fpm_conf} \\\n    && sed -i -e \"s/www-data/nginx/g\" ${fpm_conf} \\\n    && sed -i -e \"s/^;clear_env = no$/clear_env = no/\" ${fpm_conf} \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -o /tmp/composer-setup.php https://getcomposer.org/installer \\\n  && curl -f -o /tmp/composer-setup.sig https://composer.github.io/installer.sig \\\n  && php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \\\n  && php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION} && rm -rf /tmp/composer-setup.php\n\n# Supervisor config\nADD ./supervisord.conf /etc/supervisord.conf\n\n# Override nginx's default config\nADD ./default.conf /etc/nginx/conf.d/default.conf\n\n# Override default nginx welcome page\nCOPY html /usr/share/nginx/html\n\n# Add Scripts\nADD ./start.sh /start.sh\n\nEXPOSE 80\n\nCMD [\"/start.sh\"]\n"
}