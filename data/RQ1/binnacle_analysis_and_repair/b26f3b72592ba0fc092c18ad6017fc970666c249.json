{
  "startTime": 1674641689947,
  "endTime": 1674641690111,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM microsoft/dotnet:2.1-sdk AS build-env\n\nWORKDIR /app\nCOPY . ./\n\nRUN sed -i 's#<PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"2.1.3\" />#<PackageReference Include=\"Npgsql.EntityFrameworkCore.PostgreSQL\" Version=\"2.1.2\" />#' src/SimplCommerce.WebHost/SimplCommerce.WebHost.csproj\nRUN sed -i 's/UseSqlServer/UseNpgsql/' src/SimplCommerce.WebHost/Program.cs\nRUN sed -i 's/UseSqlServer/UseNpgsql/' src/SimplCommerce.WebHost/Extensions/ServiceCollectionExtensions.cs\n\nRUN rm src/SimplCommerce.WebHost/Migrations/* && cp -f src/SimplCommerce.WebHost/appsettings.docker.json src/SimplCommerce.WebHost/appsettings.json\n\n# ef core migrations run in debug, so we have to build in Debug for copying module correctly\nRUN dotnet restore && dotnet build \\\n    && cd src/SimplCommerce.WebHost \\\n\t&& dotnet ef migrations add initialSchema \\\n    && dotnet ef migrations script -o dbscript.sql\n\nRUN dotnet build -c Release \\\n\t&& cd src/SimplCommerce.WebHost \\\n    && dotnet build -c Release \\\n\t&& dotnet publish -c Release -o out\n\n# remove BOM for psql\t\nRUN sed -i -e '1s/^\\xEF\\xBB\\xBF//' /app/src/SimplCommerce.WebHost/dbscript.sql\n\nFROM microsoft/dotnet:2.1.4-aspnetcore-runtime\n\n# hack to make postgresql-client install work on slim\nRUN mkdir -p /usr/share/man/man1 \\\n    && mkdir -p /usr/share/man/man7\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends postgresql-client \\\n\t&& apt-get install --no-install-recommends libgdiplus -y \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nWORKDIR /app\t\nCOPY --from=build-env /app/src/SimplCommerce.WebHost/out ./\nCOPY --from=build-env /app/src/SimplCommerce.WebHost/dbscript.sql ./\n\nRUN curl -f -SL \"https://github.com/rdvojmoc/DinkToPdf/raw/v1.0.8/v0.12.4/64%20bit/libwkhtmltox.so\" --output ./libwkhtmltox.so\n\nCOPY --from=build-env /app/docker-entrypoint.sh /\nRUN chmod 755 /docker-entrypoint.sh\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}