{
  "startTime": 1674238619122,
  "endTime": 1674238619196,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:carbon\n# Build variables\nARG TF_VAR_sentry_dsn\nARG TF_VAR_algolia_app_id\nARG TF_VAR_algolia_index\nARG ALGOLIA_SEARCH_KEY\nARG GTM_ID\nARG HOST\n\n# Add workspace directories\nRUN mkdir -p /usr/src/app && \\\n    mkdir -p /usr/src/app/types && \\\n    mkdir -p /usr/src/app/types/build && \\\n    mkdir -p /usr/src/app/tokenizer && \\\n    mkdir -p /usr/src/app/tokenizer/build && \\\n    mkdir -p /usr/src/app/theme-variables && \\\n    mkdir -p /usr/src/app/theme-variables/build && \\\n    mkdir -p /usr/src/app/frontend && \\\n    mkdir -p /usr/src/app/frontend/build && rm -rf /usr/src/app\n\nWORKDIR /usr/src/app\n\n# Add root workspace files\nCOPY ./yarn.lock ./package.json ./tsconfig.json ./\n# Add types\nCOPY ./types/package.json types\nCOPY ./types/build types/build\n# Add tokenizer\nCOPY ./tokenizer/package.json tokenizer\nCOPY ./tokenizer/build tokenizer/build\n# Add theme-variables\nCOPY ./theme-variables/package.json theme-variables\nCOPY ./theme-variables/build theme-variables/build\n# Add frontend\nCOPY ./frontend/package.json ./frontend/tsconfig.json ./frontend/typings.d.ts ./frontend/next.config.js ./frontend/server.ts ./frontend/run-server.sh frontend/\nCOPY ./frontend/build frontend/build\nCOPY ./frontend/static frontend/static\n\n# Environment variables\nENV NODE_ENV=production\nENV TF_VAR_sentry_dsn=${TF_VAR_sentry_dsn}\nENV TF_VAR_algolia_app_id=${TF_VAR_algolia_app_id}\nENV TF_VAR_algolia_index=${TF_VAR_algolia_index}\nENV ALGOLIA_SEARCH_KEY=${ALGOLIA_SEARCH_KEY}\nENV GTM_ID=${GTM_ID}\nENV HOST=${HOST}\n\n# Install dependencies and link workspaces\nRUN yarn --frozen-lockfile --production\n\nWORKDIR /usr/src/app/frontend\n\n# Expose frontend port\nEXPOSE 3000\n# Start frontend in production\nCMD [\"yarn\", \"start\"]\n\n"
}