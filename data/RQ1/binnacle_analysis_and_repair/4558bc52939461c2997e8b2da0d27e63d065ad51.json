{
  "startTime": 1674238519297,
  "endTime": 1674238519464,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n\nMAINTAINER Gunhan Gulsoy <gunan@google.com>\n\n# It is possible to override these for releases.\nARG TF_BRANCH=master\nARG BAZEL_VERSION=0.5.4\nARG TF_AVAILABLE_CPUS=32\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        git \\\n        golang \\\n        libcurl3-dev \\\n        libfreetype6-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        python-dev \\\n        python-pip \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        zip \\\n        zlib1g-dev \\\n        openjdk-8-jdk \\\n        openjdk-8-jre-headless \\\n        wget \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN pip --no-cache-dir install --upgrade \\\n        pip setuptools\n\nRUN pip --no-cache-dir install \\\n        ipykernel \\\n        jupyter \\\n        matplotlib \\\n        numpy \\\n        scipy \\\n        sklearn \\\n        pandas \\\n        wheel \\\n        && \\\n    python -m ipykernel.kernelspec\n\n# Set up our notebook config.\nCOPY jupyter_notebook_config.py /root/.jupyter/\n\n# Jupyter has issues with being run directly:\n#   https://github.com/ipython/ipython/issues/7062\n# We just add a little wrapper script.\nCOPY run_jupyter.sh /\n\n# Set up Bazel.\n\n# Running bazel inside a `docker build` command causes trouble, cf:\n#   https://github.com/bazelbuild/bazel/issues/134\n# The easiest solution is to set up a bazelrc file forcing --batch.\nRUN echo \"startup --batch\" >>/etc/bazel.bazelrc\n# Similarly, we need to workaround sandboxing issues:\n#   https://github.com/bazelbuild/bazel/issues/418\nRUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" \\\n    >>/etc/bazel.bazelrc\nWORKDIR /\nRUN mkdir /bazel && \\\n    cd /bazel && \\\n    wget --quiet https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    wget --quiet https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE && \\\n    chmod +x bazel-*.sh && \\\n    ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n\n# Download and build TensorFlow.\nWORKDIR /\nRUN git clone https://github.com/tensorflow/tensorflow.git && \\\n    cd tensorflow && \\\n    git checkout ${TF_BRANCH}\nWORKDIR /tensorflow\n\n# Configure the build for our CUDA configuration.\nENV CI_BUILD_PYTHON=python \\\n    LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:${LD_LIBRARY_PATH} \\\n    CUDNN_INSTALL_PATH=/usr/lib/x86_64-linux-gnu \\\n    PYTHON_BIN_PATH=/usr/bin/python \\\n    PYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages \\\n    TF_NEED_CUDA=1 \\\n    TF_CUDA_VERSION=9.0 \\\n    TF_CUDA_COMPUTE_CAPABILITIES=3.0,3.5,5.2,6.0,6.1,7.0 \\\n    TF_CUDNN_VERSION=7\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\n\n# Build and Install TensorFlow.\nRUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 && \\\n    LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH} \\\n    bazel build -c opt \\\n                --config=cuda \\\n                --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" \\\n                --jobs=${TF_AVAILABLE_CPUS} \\\n                tensorflow/tools/pip_package:build_pip_package && \\\n    mkdir /pip_pkg && \\\n    bazel-bin/tensorflow/tools/pip_package/build_pip_package /pip_pkg\n\n# Clean up pip wheel and Bazel cache when done.\nRUN pip --no-cache-dir install --upgrade /pip_pkg/tensorflow-*.whl && \\\n    rm -rf /pip_pkg && \\\n    rm -rf /root/.cache\n\nWORKDIR /root\n\n# TensorBoard\nEXPOSE 6006\n# IPython\nEXPOSE 8888\n\nRUN [\"/bin/bash\"]\n"
}