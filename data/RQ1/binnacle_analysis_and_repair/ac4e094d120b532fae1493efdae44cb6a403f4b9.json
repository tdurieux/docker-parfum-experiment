{
  "startTime": 1674252335284,
  "endTime": 1674252335396,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 0,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 0,
        "columnEnd": 11
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## \n## Base \n## \nFROM node:alpine AS base \nRUN apk add --no-cache \\--no-cache nodejs-current tini\nENV HOME=/home/app \nRUN addgroup -S app && \\  \nadduser -S -h $HOME -s /bin/false -G app app \nUSER app \nWORKDIR $HOME \nENTRYPOINT [\"/sbin/tini\", \"--\"] \n\n## \n## Production dependencies \n## \nFROM base AS production-dependencies \nCOPY package.json setup-node-env.sh ./ \nRUN touch current.env && \\  \nmkdir server lib acceptance fixtures migrations && \\  \nnpm set progress=false && \\  \nnpm config set depth 0 && \\\nnpm install \\--only=production && npm cache clean --force;\n\n## \n## Test packages \n## \nFROM production-dependencies AS test-base \nUSER root \nRUN apk add --no-cache \\--no-cache python make g++\nUSER app \n\n## \n## Test dependencies \n## \nFROM test-base AS test-dependencies \nRUN npm set progress=false && \\  \nnpm config set depth 0 && \\\nnpm install && npm cache clean --force;\n\n## \n## Test \n## \nFROM test-dependencies AS test \nCOPY . ./ \nRUN npm test \n\n## \n## Production \n## \nFROM production-dependencies AS production \nCOPY . ./ \nEXPOSE 3000 \nCMD [\"npm\", \"start\"] \n\n"
}