{
  "startTime": 1674239211575,
  "endTime": 1674239211676,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 48,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 14,
        "columnStart": 18,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.9\n\n# greet me :)\nMAINTAINER Tobias RÃ¶s - <roes@amicaldo.de>\n\n# install dependencies\nRUN apk update && apk add --no-cache \\\n  bash \\\n  git \\\n  nodejs \\\n  nodejs-npm \\\n  nginx \\\n  nginx-mod-http-lua \\\n  python3 \\\n  py-pip\n\n\nRUN pip install --no-cache-dir speedtest-cli\n\n# remove default content\nRUN rm -R /var/www/*\n\n# create directory structure\nRUN mkdir -p /etc/nginx\nRUN mkdir -p /run/nginx\nRUN mkdir -p /etc/nginx/global\nRUN mkdir -p /var/www/html\n\n# touch required files\nRUN touch /var/log/nginx/access.log && touch /var/log/nginx/error.log\n\n# install vhost config\nADD ./config/vhost.conf /etc/nginx/conf.d/default.conf\nADD config/nginxEnv.conf /etc/nginx/modules/nginxEnv.conf\n\n# install webroot files\nADD ./ /var/www/html/\n\n# install bower dependencies\nRUN npm install -g yarn && cd /var/www/html/ && yarn install && npm cache clean --force; && yarn cache clean;\n\nEXPOSE 80\nEXPOSE 443\n\nRUN chown -R nginx:nginx /var/www/html/\nRUN chmod +x /var/www/html/config/run.sh\nENTRYPOINT [\"/var/www/html/config/run.sh\"]"
}