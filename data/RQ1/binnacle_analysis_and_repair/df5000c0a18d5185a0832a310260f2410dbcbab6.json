{
  "startTime": 1674244974828,
  "endTime": 1674244974932,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 50,
        "lineEnd": 57,
        "columnStart": 18,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile for DockerHub automatic build of postfwd - http://postfwd.org/docker\n#\n# If you want to rebuild it, go to the top directory (usually 'cd ..') and type in:\n#\n#\tdocker build -f docker/Dockerfile-autobuild -t postfwd:mybuild .\n#\n# To run a container from it, use:\n#\n#\tdocker run -it postfwd:mybuild\n#\n# or with more options (postfwd2 on port 10050, postfwd.cf in /path/to/ruleset):\n#\n#\tdocker run -it -e PROG=postfwd2 -e PORT=10050 -v /path/to/ruleset:/etc/postfwd:ro postfwd:mybuild\n#\nFROM alpine:latest\n\nLABEL maintainer=\"Postfwd Docker - http://postfwd.org/docker\"\n\n##\n## RUNTIME ARGS\n##\n# use 'postfwd1' or 'postfwd2' to switch between versions\n# go to http://postfwd.org/versions.html for more info\nENV PROG=postfwd1\n# port for postfwd\nENV PORT=10040\n# request cache in seconds. use '0' to disable\nENV CACHE=60\n# additional arguments, see postfwd -h or man page for more\nENV EXTRA=\"--summary=600 --noidlestats\"\n# get config file from ARG\nENV CONF=postfwd.cf\n\n##\n## CONTAINER ARGS\n##\n# configuration directory\nENV ETC=/etc/postfwd\n# target for postfwd distribution\nENV TARGET=/usr\n# data directory\nENV HOME=/var/lib/postfwd\n# user and group for execution\nENV USER=postfw\nENV GROUP=postfw\nENV UID=110\nENV GID=110\n\n# install stuff\nRUN apk update && apk add --no-cache \\\n\tperl \\\n\tperl-net-dns \\\n\tperl-net-server \\\n\tperl-netaddr-ip \\\n\tperl-net-cidr-lite \\\n\tperl-time-hires \\\n\tperl-io-multiplex\n\n# create stuff\nRUN addgroup -S -g ${GID} ${GROUP}\nRUN adduser -S -u ${UID} -D -H -G ${GROUP} -h ${HOME} -s /bin/false ${USER}\nRUN mkdir -p ${ETC} ${HOME}\n\n# copy stuff\nCOPY ./etc/\t${ETC}/\nCOPY ./sbin/    ${TARGET}/sbin/\nCOPY ./docker/postfwd-docker.sh /usr/bin/postfwd-docker\n\n# set ownership & permissions\nRUN chown -R root:${GID} ${ETC} && chmod 0750 ${ETC} && chmod 0640 ${ETC}/*\nRUN chown -R ${UID}:${GID} ${HOME} && chmod -R 0700 ${HOME}\nRUN chown root:root ${TARGET}/sbin/postfwd* /usr/bin/postfwd-docker && chmod 0755 ${TARGET}/sbin/postfwd* /usr/bin/postfwd-docker\n\n# open port\nEXPOSE ${PORT}\n\n# start postfwd - don't worry about versions: postfwd1 will silently ignore postfwd2-specific arguments\nENTRYPOINT exec ${TARGET}/sbin/${PROG} --file=${ETC}/${CONF} --user=${USER} --group=${GROUP} \\\n\t--server_socket=tcp:0.0.0.0:${PORT} --cache_socket=unix::${HOME}/postfwd.cache \\\n\t--pidfile=${HOME}/postfwd.pid --save_rates=${HOME}/postfwd.rates --save_groups=${HOME}/postfwd.groups \\\n\t--cache=${CACHE} ${EXTRA} \\\n\t--stdout --nodaemon\n\n"
}