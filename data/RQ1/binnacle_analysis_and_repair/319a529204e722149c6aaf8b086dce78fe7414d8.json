{
  "startTime": 1674243565345,
  "endTime": 1674243565440,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 100
      }
    }
  ],
  "repairedDockerfile": "FROM maven:3.5.0-jdk-8\n\n# Mount the CWD\nWORKDIR /app\nADD . /app\n\n#Copy the maven settings file into the config directory\nRUN cp settings.xml /usr/share/maven/conf\n\n# Allow bower to run as root since the docker build is done as root\nRUN echo '{ \"allow_root\": true }' > /root/.bowerrc\n\n#Clone a recent copy of IRIDA and install the maven dependencies to speed up builds\nRUN git clone https://github.com/phac-nml/irida.git\nRUN cd irida/lib; ./install-libs.sh; cd ..; mvn dependency:copy-dependencies\n\n#Download google chrome and install so we can run chromedriver tests\nRUN wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\nRUN dpkg -i google-chrome-stable_current_amd64.deb; exit 0\nRUN apt update\nRUN apt install -qyy -f\n\n# install other required packages for tests\nRUN apt install --no-install-recommends -qyy xvfb build-essential rubygems ruby-dev git mysql-client && rm -rf /var/lib/apt/lists/*;\nRUN gem install --force jekyll pygments.rb\n"
}