{
  "startTime": 1674234533636,
  "endTime": 1674234533711,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.12-stretch as builder\nWORKDIR /go/src/github.com/aws/amazon-vpc-cni-k8s\n\nARG arch\nENV ARCH=$arch\n\n# Force the go compiler to use modules.\nENV GO111MODULE=on\n\n# go.mod and go.sum go into their own layers.\nCOPY go.mod .\nCOPY go.sum .\n\n# This ensures `go mod download` happens only when go.mod and go.sum change.\nRUN go mod download\n\nCOPY . .\nRUN make build-linux && make download-portmap\n\nFROM amazonlinux:2\nRUN yum update -y && \\\n    yum install -y iproute && \\\n    yum install -y iptables && \\\n    yum clean all && rm -rf /var/cache/yum\n\nWORKDIR /app\n\nCOPY --from=builder /go/src/github.com/aws/amazon-vpc-cni-k8s/aws-cni /app\nCOPY --from=builder /go/src/github.com/aws/amazon-vpc-cni-k8s/misc/10-aws.conflist /app\n\nCOPY --from=builder /go/src/github.com/aws/amazon-vpc-cni-k8s/portmap /app\n\nCOPY --from=builder /go/src/github.com/aws/amazon-vpc-cni-k8s/aws-k8s-agent  /app\nCOPY --from=builder /go/src/github.com/aws/amazon-vpc-cni-k8s/scripts/aws-cni-support.sh /app\nCOPY --from=builder /go/src/github.com/aws/amazon-vpc-cni-k8s/scripts/install-aws.sh /app\nENTRYPOINT /app/install-aws.sh\n"
}