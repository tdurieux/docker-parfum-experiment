{
  "startTime": 1674240813141,
  "endTime": 1674240813418,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\nRUN apt-get update\n\n# disable interactive functions\nENV DEBIAN_FRONTEND noninteractive\n\n#################Install MiniConda and other dependencies##########\nENV CONDA_DIR /opt/conda\nENV PATH $CONDA_DIR/bin:$PATH\nENV OPENBLAS_NUM_THREADS $(nproc)\n\nRUN mkdir -p $CONDA_DIR && \\\n    echo export PATH=$CONDA_DIR/bin:'$PATH' > /etc/profile.d/conda.sh && \\\n\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y \\\n\n    wget \\\n    vim \\\n    git \\\n    g++ \\\n    graphviz \\\n\n    software-properties-common \\\n    python-software-properties \\\n    python3-dev \\\n\n    libhdf5-dev \\\n    libopenblas-dev \\\n    liblapack-dev \\\n    libblas-dev \\\n    gfortran \\\n    cpio \\\n    libmlx4-1 \\\n    libmlx5-1 \\\n    librdmacm1 \\\n    libibverbs1 \\\n    libmthca1 \\\n    libdapl2 \\\n    dapl2-utils && \\\n\n    rm -rf /var/lib/apt/lists/* && \\\n\n\n    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    /bin/bash /Miniconda3-latest-Linux-x86_64.sh -f -b -p $CONDA_DIR && \\\n    rm Miniconda3-latest-Linux-x86_64.sh\n\n\n######################### INTEL MPI ###########################\nRUN cd /tmp && \\\n    wget -q 'https://registrationcenter-download.intel.com/akdlm/irc_nas/tec/11595/l_mpi_2017.3.196.tgz' && \\\n    tar zxvf l_mpi_2017.3.196.tgz && \\\n    sed -i -e 's/^ACCEPT_EULA=decline/ACCEPT_EULA=accept/g' /tmp/l_mpi_2017.3.196/silent.cfg && \\\n    sed -i -e 's|^#ACTIVATION_LICENSE_FILE=|ACTIVATION_LICENSE_FILE=/tmp/l_mpi_2017.3.196/USE_SERVER.lic|g' /tmp/l_mpi_2017.3.196/silent.cfg && \\\n    sed -i -e 's/^ACTIVATION_TYPE=exist_lic/ACTIVATION_TYPE=license_server/g' /tmp/l_mpi_2017.3.196/silent.cfg && \\\n    cd /tmp/l_mpi_2017.3.196 && \\\n    ./install.sh -s silent.cfg && \\\n    echo \"source /opt/intel/compilers_and_libraries_2017.4.196/linux/mpi/intel64/bin/mpivars.sh\" >> ~/.bashrc && rm l_mpi_2017.3.196.tgz\n\n\n#######################NCCL###########################\nENV CPATH /usr/local/cuda/include:/usr/local/include:$CPATH\nRUN cd /usr/local && git clone https://github.com/NVIDIA/nccl.git && cd nccl && \\\n\n######### Compile for devices with cuda compute compatibility 3 (e.g. GRID K520 on aws)\n# UNCOMMENT line below to compile for GPUs with cuda compute compatibility 3.0\n#        sed -i '/NVCC_GENCODE ?=/a \\                -gencode=arch=compute_30,code=sm_30 \\\\' Makefile && \\\n##########\n\n        make CUDA_HOME=/usr/local/cuda -j\"$(nproc)\" && \\\n        make install && ldconfig\n\n\n####################Python 3#########################\nARG python_version=3.5.2\nRUN conda install -y python=${python_version} && \\\n    pip install --no-cache-dir -U pip && \\\n    . /opt/intel/compilers_and_libraries_2017.4.196/linux/mpi/intel64/bin/mpivars.sh && \\\n\n    conda install Pillow scikit-learn notebook pandas matplotlib mkl nose pyyaml six h5py && \\\n\n    pip install --no-cache-dir cupy && \\\n    pip install --no-cache-dir mpi4py && \\\n    pip install --no-cache-dir cython && \\\n\n    pip install --no-cache-dir chainer && \\\n    pip install --no-cache-dir chainercv && \\\n    pip install --no-cache-dir chainermn && \\\n\n    conda clean -yt\n\nENV PYTHONPATH $CONDA_DIR/lib/python3.5/site-packages/:$PYTHONPATH\n\n######################################################\n\nENV PYTHONPATH /src/:$PYTHONPATH\n\n################# remove Intel components #####################\n\nRUN rm -rf /opt/intel"
}