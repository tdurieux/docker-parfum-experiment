{
  "startTime": 1674243609762,
  "endTime": 1674243609849,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 132
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 156
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:latest\n\n# Set the file maintainer (your name - the file's author)\nMAINTAINER Ray Alez\n\n# Set env variables used in this Dockerfile (add a unique prefix, such as DOCKYARD)\nENV DOCKYARD_SRC=nexus\n# Directory in container for all project files\nENV DOCKYARD_SRVHOME=/home\n# Directory in container for project source files\nENV DOCKYARD_SRVPROJ=/home/nexus\n# Update the default application repository sources list\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y python python-dev python-pip supervisor nginx libpq-dev libcurl4-openssl-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y libtiff5-dev libjpeg8-dev zlib1g-dev libfreetype6-dev liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev python-tk && rm -rf /var/lib/apt/lists/*;\n\n\n# Create application subdirectories\nWORKDIR $DOCKYARD_SRVHOME\nRUN mkdir media static logs\nVOLUME [\"$DOCKYARD_SRVHOME/media/\", \"$DOCKYARD_SRVHOME/logs/\"]\n\nENV SECRET_KEY 7-pwxu4=a0th_s$)8)#z5f-^jlsn_^rg@l+r6$b0)!yfji6m13\nENV ACCESS_TOKEN loyZ-Xv74V4AAAAAAAAHofK10zIpP3gK-p1tLJmpOLNFjtF10Q4w0pQYGk-AD2ly\nENV PG_USERNAME nexus\nENV PG_PASS nexus\n\nCOPY $DOCKYARD_SRC $DOCKYARD_SRVPROJ\n# Install Python dependencies\nRUN pip install --no-cache-dir -r $DOCKYARD_SRVPROJ/requirements.txt\nRUN pip install --no-cache-dir uwsgi\n\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\nCOPY nginx-app.conf /etc/nginx/sites-available/default\nCOPY supervisor-app.conf /etc/supervisor/conf.d/\nCOPY uwsgi.ini $DOCKYARD_SRVPROJ\nCOPY uwsgi_params $DOCKYARD_SRVPROJ\n# Port to expose\nEXPOSE 8000\n\n# Copy entrypoint script into the image\nWORKDIR $DOCKYARD_SRVPROJ\n\nCMD [\"supervisord\", \"-n\"]\n"
}