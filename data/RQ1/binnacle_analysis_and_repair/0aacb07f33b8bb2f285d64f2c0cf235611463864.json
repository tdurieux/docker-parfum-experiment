{
  "startTime": 1674246686362,
  "endTime": 1674246686454,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.9\n\nRUN apk --no-cache add \\\n    curl \\\n    git \\\n    libc6-compat \\\n    openssh-client \\\n    python \\\n    py-crcmod \\\n    py-pip && \\\n    pip install --no-cache-dir --upgrade pip==18.1\n\n# Install a YAML Linter\nARG YAML_LINT_VERSION=1.13.0\nRUN pip install --no-cache-dir \"yamllint==$YAML_LINT_VERSION\"\n\n# Install Yamale YAML schema validator\nARG YAMALE_VERSION=1.8.0\nRUN pip install --no-cache-dir \"yamale==$YAMALE_VERSION\"\n\n# Install kubectl\nARG KUBECTL_VERSION=v1.14.1\nRUN curl -f -LO \"https://storage.googleapis.com/kubernetes-release/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl\" && \\\n    chmod +x kubectl && \\\n    mv kubectl /usr/local/bin/\n\n# Install Helm\nARG HELM_VERSION=v2.13.1\nRUN curl -f -LO \"https://kubernetes-helm.storage.googleapis.com/helm-$HELM_VERSION-linux-amd64.tar.gz\" && \\\n    mkdir -p \"/usr/local/helm-$HELM_VERSION\" && \\\n    tar -xzf \"helm-$HELM_VERSION-linux-amd64.tar.gz\" -C \"/usr/local/helm-$HELM_VERSION\" && \\\n    ln -s \"/usr/local/helm-$HELM_VERSION/linux-amd64/helm\" /usr/local/bin/helm && \\\n    rm -f \"helm-$HELM_VERSION-linux-amd64.tar.gz\"\n\nCOPY ./etc/chart_schema.yaml /etc/ct/chart_schema.yaml\nCOPY ./etc/lintconf.yaml /etc/ct/lintconf.yaml\nCOPY ct /usr/local/bin/ct\n# Ensure that the binary is available on path and is executable\nRUN ct --help\n"
}