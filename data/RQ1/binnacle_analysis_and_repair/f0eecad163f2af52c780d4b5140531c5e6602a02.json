{
  "startTime": 1674250690529,
  "endTime": 1674250691047,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 38,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 112,
        "columnEnd": 167
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 36,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 38,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 36,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 23,
        "columnEnd": 217
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 23,
        "columnEnd": 217
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM cassandra:3.11\n\n# utilities\nRUN apt-get -y update; apt-get -y --no-install-recommends install apt-transport-https bc curl vim apt-utils software-properties-common git zlib1g-dev uuid-dev libmnl-dev gcc make git autoconf autoconf-archive autogen automake pkg-config curl && rm -rf /var/lib/apt/lists/*;\n\n# env variables\nENV ADAMPRO_HOME /adampro\nENV ADAMPRO_CODE ${ADAMPRO_HOME}/code\nENV ADAMPRO_DATA ${ADAMPRO_HOME}/data\n\n# adjusting logging of Cassandra\nRUN sed -i '/<appender-ref ref=\\\"STDOUT\\\"/d' $CASSANDRA_CONFIG/logback.xml\n\n\n# updating JDK to version 8\nRUN apt-get update; \\\n    apt-get -y --no-install-recommends install openjdk-8-jdk openjdk-8-jre-headless && rm -rf /var/lib/apt/lists/*;\n\n# updating scala to 2.11\nRUN mkdir -p /usr/lib/scala-2.11.8 && curl -f 'https://www.scala-lang.org/files/archive/scala-2.11.8.tgz' | tar -xz -C /usr/lib/; \\\n    ln -s /usr/lib/scala-2.11.8 /usr/lib/scala\nENV SCALA_HOME /usr/lib/scala\nENV PATH \"$PATH:$SCALA_HOME/bin\"\n\n# sbt\nRUN echo \"deb https://dl.bintray.com/sbt/debian /\" | tee -a /etc/apt/sources.list.d/sbt.list; \\\n    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823 && apt-get update; \\\n    apt-get -y --no-install-recommends install sbt; rm -rf /var/lib/apt/lists/*;\n\n# spark\nRUN curl -f https://mirror.easyname.ch/apache/spark/spark-2.4.0/spark-2.4.0-bin-hadoop2.7.tgz | tar -xz -C /usr/lib/; \\\n    cd /usr/lib && ln -s spark-2.4.0-bin-hadoop2.7 spark\nENV SPARK_HOME /usr/lib/spark\n\n# spark notebook\n# RUN curl https://s3.eu-central-1.amazonaws.com/spark-notebook/tgz/spark-notebook-0.7.0-scala-2.11.8-spark-2.1.0-hadoop-2.7.3-with-hive.tgz?max-keys=100000 | tar -xz -C /usr/lib/; \\\n#   cd /usr/lib && ln -s spark-notebook-0.7.0-scala-2.11.8-spark-2.1.0-hadoop-2.7.3-with-hive spark-notebook\n# ENV SPARK_NOTEBOOK_HOME /usr/lib/spark-notebook/\n\n# postgresql\nENV PGDATA ${ADAMPRO_DATA}/data/postgres\nRUN echo deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main >> /etc/apt/sources.list.d/pgdg.list && curl -f https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && apt-get update; \\\n    apt-get -y --no-install-recommends install postgresql-client-10 postgresql-10 libpq-dev postgresql-server-dev-10 && rm -rf /var/lib/apt/lists/*;\nENV POSTGRES_HOME /usr/lib/postgresql/10/\n\n# solr\nRUN mkdir -p /usr/lib/solr-7.5.0 && curl -f https://archive.apache.org/dist/lucene/solr/7.5.0/solr-7.5.0.tgz | tar -xz -C /usr/lib/; \\\n    apt-get -y --no-install-recommends install lsof; rm -rf /var/lib/apt/lists/*; \\\n    ln -s /usr/lib/solr-7.5.0 /usr/lib/solr\nARG SOLR_HOME=/usr/lib/solr\nENV PATH \"$PATH:/usr/lib/solr/bin\"\n\n# cassandra\nENV CASSANDRADATA ${ADAMPRO_DATA}/data/cassandra\nRUN sed -i.bak 's/var\\/lib/usr\\/lib/' /etc/cassandra/cassandra.yaml && chmod 700 /etc/cassandra/cassandra.yaml\n\n# netdata\nARG NETDATA_HOME=/usr/lib/netdata/\nRUN git clone https://github.com/netdata/netdata.git --depth=1 $NETDATA_HOME && cd $NETDATA_HOME && ./netdata-installer.sh --dont-start-it --dont-wait\n\n# ADAMpro\nRUN mkdir -p ${ADAMPRO_HOME}; chmod 777 ${ADAMPRO_HOME}\n\nENV ADAMPRO_GIT \"https://github.com/vitrivr/ADAMpro.git\"\nENV ADAMPRO_BRANCH \"master\"\n\n# careful: the next step is potentially cached by Docker!\nRUN git clone -b $ADAMPRO_BRANCH $ADAMPRO_GIT --recursive $ADAMPRO_CODE\n\nRUN cd $ADAMPRO_CODE && sbt proto && sbt assembly && sbt web/assembly; \\\n    cp $ADAMPRO_CODE/conf/log4j.xml ${ADAMPRO_HOME}/log4j.xml; \\\n    cp $ADAMPRO_CODE/conf/log4j.properties ${ADAMPRO_HOME}/log4j.properties; \\\n    cp $ADAMPRO_CODE/target/scala-2.11/ADAMpro-assembly-0.1.0.jar ${ADAMPRO_HOME}/ADAMpro-assembly-0.1.0.jar && cp $ADAMPRO_CODE/web/target/scala-2.11/ADAMpro-web-assembly-0.1.0.jar ${ADAMPRO_HOME}/ADAMpro-web-assembly-0.1.0.jar\nCOPY update.sh ${ADAMPRO_HOME}/update.sh\nRUN chmod 700 ${ADAMPRO_HOME}/update.sh\n\n# ADAMpro data\nRUN mkdir -p ${ADAMPRO_HOME}/data; mkdir -p ${ADAMPRO_HOME}/logs/\nCOPY data/ ${ADAMPRO_HOME}/data/\nRUN if [ -d $PGDATA ]; then chown -R postgres:postgres $PGDATA && chmod -R 700 $PGDATA; else mkdir -p $PGDATA; chown -R postgres:postgres $PGDATA; su --login - postgres --command \"$POSTGRES_HOME/bin/initdb -D $PGDATA; $POSTGRES_HOME/bin/pg_ctl -w start -D $PGDATA; $POSTGRES_HOME/bin/createuser -s adampro; $POSTGRES_HOME/bin/createdb adampro; $POSTGRES_HOME/bin/pg_ctl -w stop -D $PGDATA\"; fi; \\\n    echo \"host    all             all             0.0.0.0/0               trust\" >> $PGDATA/pg_hba.conf && echo \"listen_addresses='*'\" >> $PGDATA/postgresql.conf; \\\n    if [ -d $ADAMPRO_HOME/data/data/solr ]; then rm -r $SOLR_HOME/server/solr && ln -s $ADAMPRO_HOME/data/data/solr $SOLR_HOME/server/solr; else mv $SOLR_HOME/server/solr $ADAMPRO_HOME/data/data/ && ln -s $ADAMPRO_HOME/data/data/solr $SOLR_HOME/server/solr; fi\nRUN mkdir -p $CASSANDRADATA && chown -R cassandra:cassandra $CASSANDRADATA && chmod 777 $CASSANDRADATA && ln -s $CASSANDRADATA /usr/lib/cassandra\n\n# port for postgresql\nEXPOSE 5432\n# port for solr\nEXPOSE 8983\n# port for spark UI\nEXPOSE 4040\n# port for grpc\nEXPOSE 5890\n# port for ADAMpro web UI\nEXPOSE 9099\n# port for spark notebook\nEXPOSE 10088\n# port for netdata\nEXPOSE 19999\n\n# bootstrap\nENV ADAMPRO_START_POSTGRES true\nENV ADAMPRO_START_CASSANDRA true\nENV ADAMPRO_START_SOLR true\nENV ADAMPRO_START_WEBUI true\nENV ADAMPRO_START_NOTEBOOK false\nENV ADAMPRO_START_NETDATA true\n\nENV ADAMPRO_MEMORY 2g\nENV ADAMPRO_MASTER local[4]\n\nCOPY adampro.conf ${ADAMPRO_HOME}/adampro.conf\nRUN chown root.root ${ADAMPRO_HOME}/adampro.conf; chmod 700 ${ADAMPRO_HOME}/adampro.conf\nCOPY wait-for-it.sh ${ADAMPRO_HOME}/wait-for-it.sh\nRUN chown root.root ${ADAMPRO_HOME}/wait-for-it.sh; chmod 700 ${ADAMPRO_HOME}/wait-for-it.sh\nCOPY bootstrap.sh ${ADAMPRO_HOME}/bootstrap.sh\nRUN chown root.root ${ADAMPRO_HOME}/bootstrap.sh; chmod 700 ${ADAMPRO_HOME}/bootstrap.sh\n\nENTRYPOINT [\"/adampro/bootstrap.sh\"]"
}