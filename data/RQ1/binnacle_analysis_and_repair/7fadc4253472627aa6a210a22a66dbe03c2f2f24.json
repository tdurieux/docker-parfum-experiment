{
  "startTime": 1674242603927,
  "endTime": 1674242603988,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#########################################################################################\n##  Stage 2: build DALI wheels on top of the dependencies image built in Stage 1\n#########################################################################################\nARG DEPS_IMAGE_NAME\n# clean builder without source code inside\nFROM ${DEPS_IMAGE_NAME} as builder\n\nARG PYVER=2.7\nARG PYV=27\n\nENV PYVER=${PYVER} PYV=${PYV} PYTHONPATH=/opt/python/v\n\nENV PYBIN=${PYTHONPATH}/bin \\\n    PYLIB=${PYTHONPATH}/lib\n\nENV PATH=${PYBIN}:${PATH} \\\n    LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:/opt/dali/${DALI_BUILD_DIR}:${PYLIB}:${LD_LIBRARY_PATH}\n\nRUN ln -s /opt/python/cp${PYV}* /opt/python/v\n\nRUN pip install --no-cache-dir future numpy setuptools wheel && \\\n    rm -rf /root/.cache/pip/\n\nRUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 && \\\n    ldconfig\n\nWORKDIR /opt/dali\n\nARG CC\nARG CXX\nENV CC=${CC}\nENV CXX=${CXX}\n# Optional build arguments\n\nARG CMAKE_BUILD_TYPE\nENV CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}\nARG BUILD_TEST\nENV BUILD_TEST=${BUILD_TEST}\nARG BUILD_BENCHMARK\nENV BUILD_BENCHMARK=${BUILD_BENCHMARK}\nARG BUILD_NVTX\nENV BUILD_NVTX=${BUILD_NVTX}\nARG BUILD_PYTHON\nENV BUILD_PYTHON=${BUILD_PYTHON}\nARG BUILD_LMDB\nENV BUILD_LMDB=${BUILD_LMDB}\nARG BUILD_TENSORFLOW\nENV BUILD_TENSORFLOW=${BUILD_TENSORFLOW}\nARG BUILD_JPEG_TURBO\nENV BUILD_JPEG_TURBO=${BUILD_JPEG_TURBO}\nARG BUILD_NVJPEG\nENV BUILD_NVJPEG=${BUILD_NVJPEG}\nARG BUILD_NVOF\nENV BUILD_NVOF=${BUILD_NVOF}\nARG BUILD_NVDEC\nENV BUILD_NVDEC=${BUILD_NVDEC}\nARG BUILD_NVML\nENV BUILD_NVML=${BUILD_NVML}\nARG NVIDIA_DALI_BUILD_FLAVOR\nENV NVIDIA_DALI_BUILD_FLAVOR=${NVIDIA_DALI_BUILD_FLAVOR}\nARG GIT_SHA\nENV GIT_SHA=${GIT_SHA}\nARG DALI_TIMESTAMP\nENV DALI_TIMESTAMP=${DALI_TIMESTAMP}\n\nARG NVIDIA_BUILD_ID\nENV NVIDIA_BUILD_ID ${NVIDIA_BUILD_ID:-0}\nRUN mkdir /wheelhouse && chmod 0777 /wheelhouse\n\nFROM builder\nCOPY . .\n\nARG DALI_BUILD_DIR=build-docker-release\nWORKDIR /opt/dali/${DALI_BUILD_DIR}\n\nRUN bash /opt/dali/docker/build_helper.sh\n"
}