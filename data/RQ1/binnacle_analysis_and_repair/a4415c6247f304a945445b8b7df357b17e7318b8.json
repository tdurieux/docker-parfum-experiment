{
  "startTime": 1674237079400,
  "endTime": 1674237079735,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 9,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 31
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:2.5\n\n######## FIXME: hardcoded password \"password\" everywhere\n\n# The base image ruby:2.3 is Debian Jessie\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg \\\n       | gpg --batch --dearmor > /etc/apt/trusted.gpg.d/yarn.gpg \\\n    && printf 'deb http://dl.yarnpkg.com/debian/ stable main\\n' \\\n       >/etc/apt/sources.list.d/yarn.list \\\n    && curl -f -sL https://deb.nodesource.com/setup_6.x | bash \\\n    && : '# ^ the above includes apt-get update' \\\n    && printf 'mysql-server mysql-server/%s password password\\n' \\\n            root_password root_password_again \\\n       | debconf-set-selections \\\n    && : '# allow mysql server to start, see comment in policy-rd.d' \\\n    && sed -i~ 's/^exit 101/exit 0/' /usr/sbin/policy-rc.d \\\n    && apt-get install --no-install-recommends -y mysql-server mysql-client default-libmysqlclient-dev \\\n       nodejs yarn libpcre3-dev \\\n\n    && git clone https://github.com/antirez/redis redis-git \\\n    && cd redis-git \\\n    && make \\\n    && : '# you need tcl 8.5 of newer in order to run make test' \\\n    && make install \\\n    && cd .. \\\n\n    && git clone https://github.com/Charcoal-SE/redis-zhregex zhregex \\\n    && cd zhregex \\\n    && : '# workaround for https://github.com/Charcoal-SE/redis-zhregex/issues/1' \\\n    && sed -i~ '/^CC=clang/d' Makefile \\\n    && make CC=gcc \\\n\n    && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /usr/src/app\nCOPY . .\nENV RUBYOPT=\"-KU -E utf-8:utf-8\"\nENV PATH=\"${PATH}:/redis-git/src/redis-cli:/redis-git/src/redis-server\"\nRUN gem install bundler \\\n    && bundle install \\\n    && ./createdb \\\n    && sed -i~ 's/^web:.*/& -b 0.0.0.0/' Procfile \\\n    && yarn install && yarn cache clean;\n\n######## TODO: minimize the number of RUN statements\n\nEXPOSE 5000 8080\nCMD [\"./rundb\"]\n"
}