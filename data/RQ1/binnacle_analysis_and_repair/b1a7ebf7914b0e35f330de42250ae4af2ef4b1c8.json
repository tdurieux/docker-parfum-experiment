{
  "startTime": 1674245731090,
  "endTime": 1674245731231,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 1,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 26,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 63,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 4
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.8\nWORKDIR /usr/src/\n\n# Cabal does not like busybox's wget:\nRUN apk add --no-cache \\\n\twget\n\n# Install the Haskell tooling.\nRUN apk add --no-cache \\\n\tbuild-base \\\n\tghc \\\n\tcabal\n\n# Install the linters up front; this saves a lot of build time during the actual\n# CI run.\nRUN cabal update\nRUN cabal install happy alex\nRUN cabal install hlint stylish-haskell\n\n# We're getting an error from cabal re: creating these symlinks automatically,\n# so we just do it ourselves. TODO: figure out why this is happening\n\nRUN ln -s /root/.cabal/bin/hlint /usr/local/bin/hlint\nRUN ln -s /root/.cabal/bin/stylish-haskell /usr/local/bin/stylish-haskell\n\n# Install stuff needed to build capnproto:\nRUN apk add --no-cache \\\n\tautoconf \\\n\tautomake \\\n\tlibtool \\\n\tlinux-headers\n\n# Build and install a recent version of capnproto; it isn't in the alpine\n# repos. Furthermore, we use the calculator-client & server examples as\n# part of our test suite, so we need to build that anyway:\nRUN wget \"https://github.com/capnproto/capnproto/archive/v0.6.1.tar.gz\"\nRUN tar -xvf *.tar.gz && rm *.tar.gz\nRUN cd capnproto-*/c++ && \\\n\tautoreconf -i && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local && \\\n\tmake -j && \\\n\tmake install\n\n# Build and install the C++ calculator example client & server, which\n# we'll use to validate our own implementations:\nRUN cd capnproto-*/c++/samples && \\\n\tcapnpc -oc++ calculator.capnp && \\\n\tc++ \\\n\t\tcalculator-client.c++ \\\n\t\t-std=c++14 \\\n\t\tcalculator.capnp.c++ \\\n\t\t$(pkg-config --cflags --libs capnp-rpc) \\\n\t\t-o calculator-client && \\\n\tc++ \\\n\t\tcalculator-server.c++ \\\n\t\t-std=c++14 \\\n\t\tcalculator.capnp.c++ \\\n\t\t$(pkg-config --cflags --libs capnp-rpc) \\\n\t\t-o calculator-server && \\\n\tinstall -Dm755 calculator-client /usr/local/bin/c++-calculator-client && \\\n\tinstall -Dm755 calculator-server /usr/local/bin/c++-calculator-server\n\n# Add other tools we use during the run:\nRUN apk add --no-cache \\\n\tgit\n"
}