{
  "startTime": 1674235642968,
  "endTime": 1674235643318,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 1,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 1,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 61,
        "columnStart": 22,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM intelpython/intelpython3_core as DEV\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n            autoconf \\\n            automake \\\n            build-essential \\\n            ca-certificates \\\n            curl \\\n            git \\\n            gstreamer1.0-plugins-base \\\n            libavcodec-dev \\\n            libavformat-dev \\\n            libboost-regex-dev \\\n            libcairo2-dev \\\n            libgfortran3 \\\n            libglib2.0-dev \\\n            libgstreamer1.0-0 \\\n            libgtk2.0-dev \\\n            libopenblas-dev \\\n            libpango1.0-dev \\\n            libpng-dev \\\n            libssl-dev \\\n            libswscale-dev \\\n            libtool \\\n            libusb-1.0-0-dev \\\n            pkg-config \\\n            unzip \\\n            vim \\\n            wget && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://cmake.org/files/v3.14/cmake-3.14.3.tar.gz && \\\n    tar -xvzf cmake-3.14.3.tar.gz && \\\n    cd cmake-3.14.3/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j$(nproc) && \\\n    make install && rm cmake-3.14.3.tar.gz\n\nRUN echo \"deb http://ftp.us.debian.org/debian/ jessie main contrib non-free\" >> /etc/apt/sources.list && \\\n    echo \"deb-src http://ftp.us.debian.org/debian/ jessie main contrib non-free\" >> /etc/apt/sources.list && \\\n    apt update && \\\n    apt-get install --no-install-recommends -y g++-4.9 && rm -rf /var/lib/apt/lists/*;\nENV CXX=/usr/bin/g++-4.9\nRUN pip install --no-cache-dir cython numpy\nARG DLDT_DIR=/dldt-2019_R1.0.1\nRUN git clone --depth=1 -b 2019_R1.0.1 https://github.com/opencv/dldt.git ${DLDT_DIR} && \\\n    cd ${DLDT_DIR} && git submodule init && git submodule update --recursive && \\\n    rm -Rf .git && rm -Rf model-optimizer\n\nWORKDIR ${DLDT_DIR}\nRUN curl -f -L https://github.com/intel/mkl-dnn/releases/download/v0.18/mklml_lnx_2019.0.3.20190220.tgz | tar -xz\nWORKDIR ${DLDT_DIR}/inference-engine/build\nRUN cmake -DGEMM=MKL  -DMKLROOT=${DLDT_DIR}/mklml_lnx_2019.0.3.20190220 -DENABLE_MKL_DNN=ON -DTHREADING=OMP -DCMAKE_BUILD_TYPE=Release ..\nRUN make -j$(nproc)\nWORKDIR ${DLDT_DIR}/inference-engine/ie_bridges/python/build\nRUN cmake -DInferenceEngine_DIR=${DLDT_DIR}/inference-engine/build -DPYTHON_EXECUTABLE=$(which python) -DPYTHON_LIBRARY=/opt/conda/lib/libpython3.6m.so -DPYTHON_INCLUDE_DIR=/opt/conda/include/python3.6m ${DLDT_DIR}/inference-engine/ie_bridges/python && \\\n    make -j$(nproc)\n\nFROM intelpython/intelpython3_core as PROD\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n            ca-certificates \\\n            curl \\\n            vim && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=DEV /dldt-2019_R1.0.1/inference-engine/bin/intel64/Release/lib/*.so /usr/local/lib/\nCOPY --from=DEV /dldt-2019_R1.0.1/inference-engine/ie_bridges/python/bin/intel64/Release/python_api/python3.6/openvino/ /usr/local/lib/openvino/\nCOPY --from=DEV /dldt-2019_R1.0.1/mklml_lnx_2019.0.3.20190220/lib/lib*.so /usr/local/lib/\nENV LD_LIBRARY_PATH=/usr/local/lib\nENV PYTHONPATH=/usr/local/lib\n\nCOPY requirements.txt /ie-serving-py/\nRUN conda create --name myenv -y\nENV PATH /opt/conda/envs/myenv/bin:$PATH\nWORKDIR /ie-serving-py\nRUN pip --no-cache-dir install -r requirements.txt\n\nCOPY start_server.sh setup.py version /ie-serving-py/\nRUN sed -i '/activate/d' start_server.sh\nCOPY ie_serving /ie-serving-py/ie_serving\n\nRUN pip install --no-cache-dir .\n\n"
}