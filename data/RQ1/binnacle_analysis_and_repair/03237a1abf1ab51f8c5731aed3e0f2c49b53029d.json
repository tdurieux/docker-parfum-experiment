{
  "startTime": 1674237753168,
  "endTime": 1674237753516,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 473
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 473
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 473
      }
    }
  ],
  "repairedDockerfile": "from microsoft/dotnet:latest\n#from cmiles74/dotnet:latest\n\n# get add-apt-repository\nrun apt-get update\nrun apt-get -y --no-install-recommends install software-properties-common curl apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\n# add SQL Server tools PPA\n# run curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -\n# run curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list | tee /etc/apt/sources.list.d/msprod.list\n\n# add nodejs ppa\nrun curl -f -sL https://deb.nodesource.com/setup_8.x | bash -\n\n# update apt cache\nrun apt-get update\n\n# vscode dependencies\nrun apt-get -y --no-install-recommends install libc6-dev libgtk2.0-0 libgtk-3-0 libpango-1.0-0 libcairo2 libfontconfig1 libgconf2-4 libnss3 libasound2 libxtst6 unzip libglib2.0-bin libcanberra-gtk-module libgl1-mesa-glx curl build-essential gettext libstdc++6 software-properties-common wget git xterm automake libtool autogen nodejs libnotify-bin aspell aspell-en htop git emacs25 mono-complete gvfs-bin libxss1 rxvt-unicode-256color x11-xserver-utils sudo vim libxkbfile1 && rm -rf /var/lib/apt/lists/*;\n\n# MS SQL Server tools\n#\n# This doesn't work because it makes you agree to a license agreement. I've\n# tried \"yes\" but to no avail.\n#\n# run apt-get install mssql-tools\n\n# update npm\nrun npm install npm -g && npm cache clean --force;\n\n# install vscode\nrun wget -O vscode-amd64.deb  https://go.microsoft.com/fwlink/?LinkID=760868\nrun dpkg -i vscode-amd64.deb\nrun rm vscode-amd64.deb\n\n# install flat plat theme\nrun wget 'https://github.com/nana-4/Flat-Plat/releases/download/3.20.20160404/Flat-Plat-3.20.20160404.tar.gz'\nrun tar -xf Flat-Plat*\nrun mv Flat-Plat /usr/share/themes\nrun rm Flat-Plat*gz\nrun mv /usr/share/themes/Default /usr/share/themes/Default.bak\nrun ln -s /usr/share/themes/Flat-Plat /usr/share/themes/Default\n\n# install hack font\nrun wget 'https://github.com/chrissimpkins/Hack/releases/download/v2.020/Hack-v2_020-ttf.zip'\nrun unzip Hack*.zip\nrun mkdir /usr/share/fonts/truetype/Hack\nrun mv Hack* /usr/share/fonts/truetype/Hack\nrun fc-cache -f -v\n\n# create our developer user\nworkdir /root\nrun groupadd -r developer -g 1000\nrun useradd -u 1000 -r -g developer -d /developer -s /bin/bash -c \"Software Developer\" developer\ncopy /developer /developer\nworkdir /developer\n\n# default browser firefox\nrun ln -s /developer/.local/share/firefox/firefox /bin/xdg-open\n\n# enable sudo for developer\nrun echo \"developer ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/developer\n\n# fix developer permissions\nrun chmod +x /developer/bin/*\nrun chown -R developer:developer /developer\nuser developer\n\n# install firefox\nrun mkdir Applications\n#run wget \"https://download.mozilla.org/?product=firefox-aurora-latest-ssl&os=linux64&lang=en-US\" -O firefox.tar.bz2\nrun wget \"https://ftp.mozilla.org/pub/firefox/nightly/2016/06/2016-06-30-00-40-07-mozilla-aurora/firefox-49.0a2.en-US.linux-x86_64.tar.bz2\" -O firefox.tar.bz2\nrun tar -xf firefox.tar.bz2 && rm firefox.tar.bz2\nrun mv firefox .local/share\nrun rm firefox.tar.bz2\n\n# links for firefox\nrun ln -s /developer/.local/share/firefox/firefox /developer/bin/x-www-browser\nrun ln -s /developer/.local/share/firefox/firefox /developer/bin/gnome-www-browser\n\n# copy in test project\ncopy project /developer/project\nworkdir /developer/project\n\n# setup our ports\nexpose 5000\nexpose 3000\nexpose 3001\n\n# install spacemacs\nuser developer\nworkdir /developer\nrun git clone --recursive https://github.com/syl20bnr/spacemacs ~/.emacs.d\n\n# set environment variables\nenv PATH /developer/.npm/bin:$PATH\nenv NODE_PATH /developer/.npm/lib/node_modules:$NODE_PATH\nenv BROWSER /developer/.local/share/firefox/firefox-bin\nenv SHELL /bin/bash\n\n# mount points\nvolume [\"/developer/.config/Code\"]\nvolume [\"/developer/.vscode\"]\nvolume [\"/developer/.ssh\"]\nvolume [\"/developer/project\"]\n\n# start vscode\nentrypoint [\"/developer/bin/start-shell\"]\n\n"
}