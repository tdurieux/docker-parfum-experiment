{
  "startTime": 1674240498642,
  "endTime": 1674240498953,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 30,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n#\n# Change tags to build with different cuda/cudnn versions:\nFROM nvidia/cuda:9.0-devel-ubuntu16.04\n\nENV CUDNN_VERSION 7.4.2.24\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        libcudnn7=$CUDNN_VERSION-1+cuda9.0 \\\n        libcudnn7-dev=$CUDNN_VERSION-1+cuda9.0 && \\\n    apt-mark hold libcudnn7 && \\\n    rm -rf /var/lib/apt/lists/*\n\n# install dependencies\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        git \\\n        build-essential \\\n        autoconf \\\n        libtool \\\n        libprotobuf-dev \\\n        libopenblas-dev \\\n        libpcre3-dev \\\n        protobuf-compiler \\\n        wget \\\n        openssh-server \\\n        python3-dev \\\n        python3-pip \\\n        python3-setuptools \\\n        libgoogle-glog-dev \\\n        cmake \\\n    && apt-get clean \\\n    && apt-get autoremove \\\n    && apt-get autoclean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && pip3 install --no-cache-dir -U --no-cache \\\n        wheel \\\n        numpy \\\n        setuptools \\\n        protobuf \\\n        future\n\n# install swig > 3.0.10\nRUN wget https://prdownloads.sourceforge.net/swig/swig-3.0.10.tar.gz -P /tmp/ \\\n    && tar zxf /tmp/swig-3.0.10.tar.gz -C /tmp/ \\\n    && cd /tmp/swig-3.0.10 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && rm /tmp/swig-3.0.10.tar.gz\n\n# install mkldnn\nRUN wget https://github.com/intel/mkl-dnn/archive/v0.18.tar.gz -P /tmp/ \\\n    && tar zxf /tmp/v0.18.tar.gz -C /tmp/ \\\n    && cd /tmp/mkl-dnn-0.18/ \\\n    && mkdir -p build && cd build && cmake .. \\\n    && make && make install && rm /tmp/v0.18.tar.gz\n\n# config ssh service\nRUN mkdir /var/run/sshd \\\n    && echo 'root:singa' | chpasswd \\\n    # for ubuntu 16.04 prohibit\n    && sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config \\\n    # SSH login fix. Otherwise user is kicked off after login\n    && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \\\n    # dump environment variables into files, so that ssh can see also\n    && env | grep _ >> /etc/environment\n\n# build incubator singa\nRUN git clone https://github.com/apache/incubator-singa.git $HOME/incubator-singa \\\n    && cd $HOME/incubator-singa \\\n    && mkdir build && cd build \\\n    && cmake -DENABLE_TEST=ON -DUSE_CUDA=ON -DUSE_MKLDNN=ON -DUSE_PYTHON3=ON ..\nRUN cd $HOME/incubator-singa/build && make && make install\n\nWORKDIR $HOME/incubator-singa\nEXPOSE 22\n\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n"
}