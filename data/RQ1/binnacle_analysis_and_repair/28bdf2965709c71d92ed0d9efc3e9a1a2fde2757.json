{
  "startTime": 1674234445368,
  "endTime": 1674234445541,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Based off of evarga/jenkins-slave\n# This Dockerfile is used to build an image containing basic stuff to be used as a Jenkins slave build node.\nFROM ubuntu:trusty\n\n# This was the original, trying to make it match the frontend version\n#FROM ubuntu:14.04\n# Original mainainer: Matt Shanker\nMAINTAINER engineering@socrata.com\n\n# Add lines in limits.conf to make the ulimit higher, default of 1024 is from the stone age\nRUN echo '*  \thard\t    nofile  \t525488' >> /etc/security/limits.conf\nRUN echo '*  \tsoft\t    nofile  \t525488' >> /etc/security/limits.conf\n\n# Add lines to the locale related files\nRUN echo \"LC_ALL=en_US.UTF-8\" >> /etc/environment\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen\nRUN echo \"LANG=en_US.UTF-8\" > /etc/locale.conf\nRUN locale-gen en_US.UTF-8\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'\nRUN update-locale en_US.UTF-8\n\n# Make sure the package repository is up to date, upgrade out of date packages.\n# Add python-software-properties, which installs the `add-apt-repository` script\n# Enable a new repo for git, the default for Ubuntu 10.04 is way too old\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get -y upgrade && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y python-software-properties software-properties-common && \\\n    add-apt-repository ppa:git-core/ppa && \\\n    DEBIAN_FRONTEND=noninteractive && \\\n    apt-get install --no-install-recommends -y \\\n            git-core \\\n            jq \\\n            openssh-server \\\n            sudo && rm -rf /var/lib/apt/lists/*;\n\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test && \\\n  apt-get update && \\\n  apt-get remove -y gcc && \\\n  apt-get install --no-install-recommends -y gcc-4.8 && \\\n  update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 50 && \\\n  rm -rf /var/lib/apt/lists/*\n\n# Configure SSH server.\nRUN sed -i 's|session    required     pam_loginuid.so|session    optional     pam_loginuid.so|g' /etc/pam.d/sshd\nRUN mkdir -p /var/run/sshd\n\n# Add user jenkins to the image and set password.\nRUN groupadd --gid 116 jenkins\nRUN useradd --create-home jenkins --uid 109 --gid 116 && \\\n    echo \"jenkins:jenkins\" | chpasswd && \\\n    mkdir -p /home/jenkins && \\\n    chown -R jenkins:jenkins /home/jenkins && \\\n    chsh -s /bin/bash jenkins\n\n# Add gitconfig file to force https, proxies won't allow SSH out\nADD gitconfig /home/jenkins/.gitconfig\nADD authorized_keys /home/jenkins/.ssh/authorized_keys\n\nRUN echo \"jenkins ALL = (ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\n# Standard SSH port\nEXPOSE 22\n\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n"
}