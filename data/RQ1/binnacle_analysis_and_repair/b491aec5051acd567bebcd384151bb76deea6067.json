{
  "startTime": 1674244112994,
  "endTime": 1674244113436,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 43,
        "columnStart": 18,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 43,
        "columnStart": 18,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8-jre\n\nLABEL maintainer=\"Jishu Xu <jishuxu@broadinstitute.org>\" \\\n    software=\"Analysis-tools with Picard-2.10.10, Python-3.5.3 and R-3.3.3\" \\\n    description=\"A generic toolset for doing large-scale analysis easily with Google Cloud Buckets.\"\n\n# Install Picard\n\n# Please follow the below instructions to invoke picard when you are using this docker image:\n# java jvm-args -jar /usr/picard/picard.jar PicardToolName OPTION1=value1 OPTION2=value2...\nENV picard_version 2.10.10\nWORKDIR /usr/picard\nADD https://github.com/broadinstitute/picard/releases/download/${picard_version}/picard.jar ./picard.jar\n\n# Install Python3\nENV PATH /usr/local/bin:$PATH\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y python3-pip python3-dev \\\n  && cd /usr/local/bin \\\n  && ln -s /usr/bin/python3 python \\\n  && pip3 install --no-cache-dir --upgrade pip && rm -rf /var/lib/apt/lists/*;\n\n# Install R and other dependencies\nRUN apt update && apt install --no-install-recommends -y \\\n   build-essential \\\n\tcmake automake \\\n   curl \\\n   gcc-multilib \\\n   git \\\n   libcurl4-openssl-dev \\\n    libssl-dev \\\n   libboost-all-dev \\\n   libncurses5-dev \\\n\tlibxml2-dev \\\n   libncurses5-dev \\\n   libboost-all-dev \\\n\tlibbz2-dev \\\n\tliblzma-dev \\\n\tlsb-release \\\n\tsamtools \\\n\tsudo \\\n\twget \\\n\tzlib1g-dev \\\n  gfortran && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"deb http://http.debian.net/debian sid main\" > /etc/apt/sources.list.d/debian-unstable.list \\\n\t&& echo 'APT::Default-Release \"testing\";' > /etc/apt/apt.conf.d/default\nENV R_BASE_VERSION 3.4.4\n## Now install R and littler, and create a link for littler in /usr/local/bin\n## Also set a default CRAN repo, and make sure littler knows about it too\nRUN apt-get update \\\n\t&& apt-get install -t unstable -y --no-install-recommends \\\n\t\tlittler \\\n    r-cran-littler \\\n\t\tr-base=${R_BASE_VERSION}-* \\\n\t\tr-base-dev=${R_BASE_VERSION}-* \\\n\t\tr-recommended=${R_BASE_VERSION}-* \\\n        && echo 'options(repos = c(CRAN = \"https://cloud.r-project.org/\"), download.file.method = \"libcurl\")' >> /etc/R/Rprofile.site \\\n        && echo 'source(\"/etc/R/Rprofile.site\")' >> /etc/littler.r \\\n\t&& ln -s /usr/share/doc/littler/examples/install.r /usr/local/bin/install.r \\\n\t&& ln -s /usr/share/doc/littler/examples/install2.r /usr/local/bin/install2.r \\\n\t&& ln -s /usr/share/doc/littler/examples/installGithub.r /usr/local/bin/installGithub.r \\\n\t&& ln -s /usr/share/doc/littler/examples/testInstalled.r /usr/local/bin/testInstalled.r \\\n\t&& install.r docopt \\\n\t&& rm -rf /tmp/downloaded_packages/ /tmp/*.rds \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Install python packages\nRUN pip3 install --no-cache-dir \\\n    crimson==0.3.0 \\\n    HTSeq==0.9.0 \\\n    matplotlib==2.1.0 \\\n    numpy==1.12.0 \\\n    pandas==0.20.3 \\\n    pysam==0.12.0.1 \\\n    requests==2.18.4 \\\n    scipy==0.18.1 \\\n    sctools==0.1.4 \\\n    tables==3.4.2 \\\n    google-cloud-storage \\\n    git+git://github.com/HumanCellAtlas/pipeline-tools.git\n\n# Fix cannot import name 'opentype' error\nRUN pip3 install --no-cache-dir --upgrade google-auth-oauthlib\n# Mount Google Cloud secret key\nADD broad-dsde-mint-dev-analysis-tools.json /usr/secrets/broad-dsde-mint-dev-analysis-tools.json\n\n# Set the environment variable for Python\nENV GOOGLE_APPLICATION_CREDENTIALS=/usr/secrets/broad-dsde-mint-dev-analysis-tools.json\n\n# Set the environment variable for R\nENV GCS_AUTH_FILE=$GOOGLE_APPLICATION_CREDENTIALS\n\n# Install gcloud components\nRUN curl -f -sSL https://sdk.cloud.google.com > /tmp/gcl && bash /tmp/gcl --install-dir=/usr/gcloud --disable-prompts\n\n# Configure gcloud\nENV PATH $PATH:/usr/gcloud/google-cloud-sdk/bin\nRUN gcloud auth activate-service-account --key-file=$GCS_AUTH_FILE\n\n# Add Cromwell Credentials\nADD broad-dsde-mint-dev-cromwell.json /usr/secrets/broad-dsde-mint-dev-cromwell.json\n\nRUN wget https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/2.8.2-1/sratoolkit.2.8.2-1-ubuntu64.tar.gz \\\n\t&& tar -zxvf sratoolkit.2.8.2-1-ubuntu64.tar.gz \\\n\t&& cp -r  sratoolkit.2.8.2-1-ubuntu64/ /usr/local/ && rm sratoolkit.2.8.2-1-ubuntu64.tar.gz\nENV PATH /usr/local/sratoolkit.2.8.2-1-ubuntu64/bin:$PATH\n\nRUN pip3 install --no-cache-dir ipython\n\n# Install R packages\nRUN echo \"r <- getOption('repos'); r['CRAN'] <- 'http://cran.us.r-project.org'; options(repos = r);\" > ~/.Rprofile\nRUN Rscript -e \"install.packages('reshape')\"\nRUN Rscript -e \"install.packages('gplots')\"\nRUN Rscript -e \"install.packages('ggplot2')\"\nRUN Rscript -e \"install.packages('googleCloudStorageR')\"\nRUN Rscript -e \"install.packages('gridExtra')\"\nRUN Rscript -e \"install.packages('ggpubr')\"\nRUN Rscript -e \"install.packages('ggpmisc')\"\nRUN Rscript -e \"install.packages('cowplot')\"\nRUN Rscript -e \"install.packages('corrplot')\"\nRUN Rscript -e \"install.packages('ggrepel')\"\nRUN Rscript -e \"install.packages('optparse')\"\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\")' -e 'biocLite(\"rtracklayer\")'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\")' -e 'biocLite(\"scran\")'\nRUN Rscript -e \"install.packages('igraph')\"\nRUN Rscript -e \"install.packages('rsvd')\"\nRUN Rscript -e \"install.packages('factoextra')\"\nRUN Rscript -e \"install.packages('fpc')\"\nRUN Rscript -e \"install.packages('NbClust')\"\n"
}