{
  "startTime": 1674248037885,
  "endTime": 1674248038008,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 111
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM p4lang/third-party:stable\nLABEL maintainer=\"Antonin Bas <antonin@barefootnetworks.com>\"\nLABEL description=\"This Docker image includes only the most widely-used PI \\\nartifacts: PI core and P4Runtime. It does not include the Thrift-based PI \\\nimplementation for the bmv2 backend.\"\n\n# Default to using 2 make jobs, which is a good default for CI. If you're\n# building locally or you know there are more cores available, you may want to\n# override this.\nARG MAKEFLAGS=-j2\n\n# Select the type of image we're building. Use `build` for a normal build, which\n# is optimized for image size. Use `test` if this image will be used for\n# testing; in this case, the source code and build-only dependencies will not be\n# removed from the image.\nARG IMAGE_TYPE=build\n\nENV PI_DEPS automake \\\n            build-essential \\\n            g++ \\\n            libboost-dev \\\n            libboost-system-dev \\\n            libboost-thread-dev \\\n            libtool \\\n            pkg-config \\\n            libjudy-dev\nENV PI_RUNTIME_DEPS libboost-system1.58.0 \\\n                    libboost-thread1.58.0 \\\n                    libjudydebian1 \\\n                    python\n\nCOPY . /PI/\nWORKDIR /PI/\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends software-properties-common && \\\n    add-apt-repository -y ppa:ubuntu-toolchain-r/test && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends $PI_DEPS $PI_RUNTIME_DEPS && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-Werror --without-bmv2 --without-internal-rpc --without-cli --with-proto --with-sysrepo && \\\n    make && \\\n    make install-strip && \\\n    (test \"$IMAGE_TYPE\" = \"build\" && \\\n      apt-get purge -y $PI_DEPS && \\\n      apt-get autoremove --purge -y && \\\n      rm -rf /PI /var/cache/apt/* /var/lib/apt/lists/* && \\\n      echo 'Build image ready') || \\\n    (test \"$IMAGE_TYPE\" = \"test\" && \\\n      echo 'Test image ready')\n"
}