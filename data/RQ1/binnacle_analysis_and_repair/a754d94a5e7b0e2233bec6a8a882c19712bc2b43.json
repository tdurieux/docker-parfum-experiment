{
  "startTime": 1674243209823,
  "endTime": 1674243210404,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 32,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nMAINTAINER Remi Cresson <remi.cresson[at]irstea[dot]fr>\n\nRUN apt-get update -y \\\n && apt-get upgrade -y \\\n && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        curl \\\n        make \\\n        cmake \\\n        g++ \\\n        gcc \\\n        git \\\n        libtool \\\n        swig \\\n        xvfb \\\n        wget \\\n        autoconf \\\n        automake \\\n        pkg-config \\\n        zip \\\n        zlib1g-dev \\\n        unzip \\\n && rm -rf /var/lib/apt/lists/*\n\n# ----------------------------------------------------------------------------\n# OTB and TensorFlow dependencies\n# ----------------------------------------------------------------------------\nRUN apt-get update -y \\\n && apt-get upgrade -y \\\n && apt-get install -y --no-install-recommends \\\n        freeglut3-dev \\\n        libboost-date-time-dev \\\n        libboost-filesystem-dev \\\n        libboost-graph-dev \\\n        libboost-program-options-dev \\\n        libboost-system-dev \\\n        libboost-thread-dev \\\n        libcurl4-gnutls-dev \\\n        libexpat1-dev \\\n        libfftw3-dev \\\n        libgdal-dev \\\n        libgeotiff-dev \\\n        libglew-dev \\\n        libglfw3-dev \\\n        libgsl-dev \\\n        libinsighttoolkit4-dev \\\n        libkml-dev \\\n        libmuparser-dev \\\n        libmuparserx-dev \\\n        libopencv-core-dev \\\n        libopencv-ml-dev \\\n        libopenthreads-dev \\\n        libossim-dev \\\n        libpng-dev \\\n        libqt5opengl5-dev \\\n        libqwt-qt5-dev \\\n        libsvm-dev \\\n        libtinyxml-dev \\\n        qtbase5-dev \\\n        qttools5-dev \\\n        default-jdk \\\n        python3-pip \\\n        python3.6-dev \\\n        python3.6-gdal \\\n        python3-setuptools \\\n        libxmu-dev \\\n        libxi-dev \\\n        qttools5-dev-tools \\\n && rm -rf /var/lib/apt/lists/*\n\n# ----------------------------------------------------------------------------\n# Python packages\n# ----------------------------------------------------------------------------\nRUN ln -s /usr/bin/python3 /usr/bin/python \\\n && python3 -m pip install --upgrade pip \\\n && python3 -m pip install pip six numpy wheel mock keras future\n\n# ----------------------------------------------------------------------------\n# Build TensorFlow\n# ----------------------------------------------------------------------------\nRUN export TF_ROOT=/work/tf \\\n && mkdir -p ${TF_ROOT}/bazel \\\n && cd ${TF_ROOT}/bazel \\\n && wget https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh \\\n && chmod +x bazel-0.24.1-installer-linux-x86_64.sh \\\n && ./bazel-0.24.1-installer-linux-x86_64.sh\n\nRUN export TF_ROOT=/work/tf \\\n && export PATH=\"$PATH:$HOME/bin\" \\\n && cd $TF_ROOT \\\n && git clone https://github.com/tensorflow/tensorflow.git \\\n && cd tensorflow \\\n && git checkout r1.14 \\\n && echo \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\" | ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n && bazel build //tensorflow:libtensorflow_framework.so //tensorflow:libtensorflow_cc.so //tensorflow/tools/pip_package:build_pip_package\n\nRUN export TF_ROOT=/work/tf \\\n && cd $TF_ROOT/tensorflow \\\n && bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg \\\n && pip3 install --no-cache-dir $(find /tmp/tensorflow_pkg/ -type f -iname \"tensorflow*.whl\") \\\n && ./tensorflow/contrib/makefile/build_all_linux.sh \\\n && mkdir -p /work/tf/installdir/lib \\\n && mkdir -p /work/tf/installdir/include \\\n && cp bazel-bin/tensorflow/libtensorflow_cc.so                                          /work/tf/installdir/lib \\\n && cp bazel-bin/tensorflow/libtensorflow_framework.so                                   /work/tf/installdir/lib \\\n && cp tensorflow/contrib/makefile/gen/protobuf/lib/libprotobuf.a                        /work/tf/installdir/lib \\\n && cp tensorflow/contrib/makefile/downloads/nsync/builds/default.linux.c++11/*.a        /work/tf/installdir/lib \\\n && cp -r bazel-genfiles/*                                                               /work/tf/installdir/include/ \\\n && cp -r tensorflow/cc                                                                  /work/tf/installdir/include/tensorflow/ \\\n && cp -r tensorflow/core                                                                /work/tf/installdir/include/tensorflow/ \\\n && cp -r third_party                                                                    /work/tf/installdir/include/ \\\n && cp -r tensorflow/contrib/makefile/gen/protobuf/include/*                             /work/tf/installdir/include/ \\\n && cp -r tensorflow/contrib/makefile/downloads/eigen/Eigen                              /work/tf/installdir/include/ \\\n && cp -r tensorflow/contrib/makefile/downloads/eigen/unsupported                        /work/tf/installdir/include/ \\\n && cp -r tensorflow/contrib/makefile/downloads/eigen/signature_of_eigen3_matrix_library /work/tf/installdir/include/ \\\n && cd ${TF_ROOT}/tensorflow/tensorflow/contrib/makefile/downloads/absl \\\n && find absl/ -name '*.h' -exec cp --parents \\{\\}                                       /work/tf/installdir/include/ \\; \\\n && find absl/ -name '*.inc' -exec cp --parents \\{\\}                                     /work/tf/installdir/include/ \\; \\\n && find /work/tf/installdir/ -name \"*.cc\" -type f -delete\n\nRUN echo \"Create symlinks for tensorflow libs\" \\\n && ln -s /work/tf/installdir/lib/libtensorflow_cc.so /work/tf/installdir/lib/libtensorflow_cc.so.1 \\\n && ln -s /work/tf/installdir/lib/libtensorflow_framework.so /work/tf/installdir/lib/libtensorflow_framework.so.1\n\n# ----------------------------------------------------------------------------\n# Build OTB\n# ----------------------------------------------------------------------------\nRUN mkdir -p /work/otb/build \\\n && cd /work/otb \\\n && git clone https://gitlab.orfeo-toolbox.org/orfeotoolbox/otb.git otb \\\n && cd otb \\\n && git checkout 0df44b312d64d6c3890b65d3790d4a17d0fd5f23 \\\n && cd /work/otb/build \\\n && cmake /work/otb/otb/SuperBuild \\\n        -DUSE_SYSTEM_BOOST=ON \\\n        -DUSE_SYSTEM_CURL=ON \\\n        -DUSE_SYSTEM_EXPAT=ON \\\n        -DUSE_SYSTEM_FFTW=ON \\\n        -DUSE_SYSTEM_FREETYPE=ON \\\n        -DUSE_SYSTEM_GDAL=ON \\\n        -DUSE_SYSTEM_GEOS=ON \\\n        -DUSE_SYSTEM_GEOTIFF=ON \\\n        -DUSE_SYSTEM_GLEW=ON \\\n        -DUSE_SYSTEM_GLFW=ON \\\n        -DUSE_SYSTEM_GLUT=ON \\\n        -DUSE_SYSTEM_GSL=ON \\\n        -DUSE_SYSTEM_ITK=ON \\\n        -DUSE_SYSTEM_LIBKML=ON \\\n        -DUSE_SYSTEM_LIBSVM=ON \\\n        -DUSE_SYSTEM_MUPARSER=ON \\\n        -DUSE_SYSTEM_MUPARSERX=ON \\\n        -DUSE_SYSTEM_OPENCV=ON \\\n        -DUSE_SYSTEM_OPENTHREADS=ON \\\n        -DUSE_SYSTEM_OSSIM=ON \\\n        -DUSE_SYSTEM_PNG=ON \\\n        -DUSE_SYSTEM_QT5=ON \\\n        -DUSE_SYSTEM_QWT=ON \\\n        -DUSE_SYSTEM_TINYXML=ON \\\n        -DUSE_SYSTEM_ZLIB=ON \\\n && cd /work/otb/otb/Modules/Remote \\\n && git clone https://github.com/remicres/otbtf.git \\\n && cd /work/otb/build/OTB/build \\\n && cmake /work/otb/otb \\\n        -DModule_Mosaic=ON \\\n        -DModule_OTBTensorflow=ON \\\n        -DOTB_USE_TENSORFLOW=ON \\\n        -Dopencv_INCLUDE_DIR=/usr/include \\\n        -DTENSORFLOW_CC_LIB=/work/tf/installdir/lib/libtensorflow_cc.so \\\n        -DTENSORFLOW_FRAMEWORK_LIB=/work/tf/installdir/lib/libtensorflow_framework.so \\\n        -Dtensorflow_include_dir=/work/tf/installdir/include/ \\\n && cd /work/otb/build/ \\\n && make -j $(grep -c ^processor /proc/cpuinfo)\n\nENV PATH \"$PATH:/work/otb/superbuild_install/bin/\"\nENV LD_LIBRARY_PATH \"$LD_LIBRARY_PATH:/work/otb/superbuild_install/lib/:/work/tf/installdir/lib/\"\nENV PYTHONPATH \"$PYTHONPATH:/work/otb/superbuild_install/lib/otb/python/\"\nENV PATH \"$PATH:/work/otb/superbuild_install/bin/\"\n"
}