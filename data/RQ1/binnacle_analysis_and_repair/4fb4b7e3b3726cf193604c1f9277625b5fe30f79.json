{
  "startTime": 1674234961413,
  "endTime": 1674234961617,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Builds binaries for both the server and unigen, and then copies\n# both binaries to a lightweight final image.\n#\n# Build by running 'docker build -t sweetpea/server .' from this directory.\n# Push with 'docker push sweetpea/server:latest'\n# Make sure you've logged in with 'docker login'\n#\n# Run the image locally with:\n#   docker run -d -p 8080:8080 sweetpea/server:latest\n#\n# Then hit the API on localhost:8080\n\n# UNIGEN\nFROM debian:jessie-slim as unigen-builder\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    apt-get install --no-install-recommends --yes build-essential \\\n    git \\\n    autoconf \\\n    libtool \\\n    zlib1g-dev \\\n    wget \\\n    libboost-program-options-dev \\\n    libm4ri-dev \\\n    libsqlite3-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://bitbucket.org/kuldeepmeel/unigen && \\\n    cd unigen/ugen2 && \\\n    make -f Makefile.cvs && \\\n    mkdir build && \\\n    cd build && \\\n    ../configure --enable-static-link && \\\n    make\n\n# The version of CMAKE in the repo is too old for cmsat.\nRUN wget https://www.cmake.org/files/v3.5/cmake-3.5.2.tar.gz && \\\n    tar xf cmake-3.5.2.tar.gz && \\\n    cd cmake-3.5.2 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install && rm cmake-3.5.2.tar.gz\n\nRUN wget https://github.com/msoos/cryptominisat/archive/5.6.5.tar.gz && \\\n    tar xzf 5.6.5.tar.gz && \\\n    cd cryptominisat-5.6.5 && \\\n    mkdir build && cd build && \\\n    cmake -DSTATICCOMPILE=ON -DCMAKE_BUILD_TYPE=Release .. && \\\n    make && rm 5.6.5.tar.gz\n\n# SERVER\nFROM haskell:8.2.2 as server-builder\n\nRUN git clone https://github.com/anniecherk/sweetpea-core && \\\n    cd sweetpea-core && \\\n    git checkout 2d05fa3953c4390c81fbe8843c9a6780a76ed8a0 && \\\n    stack install\n\n# FINAL IMAGE\n# https://futtetennismo.me/posts/docker/2017-11-24-docker-haskell-executables.html\nFROM fpco/haskell-scratch:integer-gmp\n\nCOPY --from=unigen-builder /unigen/ugen2/build/unigen /bin/\nCOPY --from=unigen-builder /cryptominisat-5.6.5/build/cryptominisat5 /bin/\nCOPY --from=server-builder /root/.local/bin/server /bin/\n\nEXPOSE 8080\n\nENTRYPOINT [\"server\"]\n"
}