{
  "startTime": 1674242106482,
  "endTime": 1674242106587,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 79
      }
    }
  ],
  "repairedDockerfile": "ARG CUDA_TAG=9.2\nARG OS_TAG=18.04\nARG NPROC=1\nFROM nvidia/cuda:${CUDA_TAG}-devel-ubuntu${OS_TAG}\nLABEL maintainer=\"AliceVision Team alicevision-team@googlegroups.com\"\n\n# use CUDA_TAG to select the image version to use\n# see https://hub.docker.com/r/nvidia/cuda/\n#\n# CUDA_TAG=8.0-devel\n# docker build --build-arg CUDA_TAG=$CUDA_TAG --tag alicevision:$CUDA_TAG .\n#\n# then execute with nvidia docker (https://github.com/nvidia/nvidia-docker/wiki/Installation-(version-2.0))\n# docker run -it --runtime=nvidia alicevision\n\n\n# OS/Version (FILE): cat /etc/issue.net\n# Cuda version (ENV): $CUDA_VERSION\n\n# Install all compilation tools\nRUN apt-get clean && \\\n    apt-get update\nRUN apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cmake \\\n        git \\\n        wget \\\n        unzip \\\n        yasm \\\n        pkg-config \\\n        libtool \\\n        nasm \\\n        automake \\\n        gfortran && rm -rf /var/lib/apt/lists/*;\n\n# rm -rf /var/lib/apt/lists/*\n\nENV AV_DEV=/opt/AliceVision_git \\\n    AV_BUILD=/tmp/AliceVision_build \\\n    AV_INSTALL=/opt/AliceVision_install \\\n    AV_BUNDLE=/opt/AliceVision_bundle \\\n    PATH=\"${PATH}:${AV_BUNDLE}\"\n\nCOPY . \"${AV_DEV}\"\n\n\n# Cannot get rig of this error on lapack build on Ubuntu, so use system libraries for lapack/suitesparse:\n#CMake Error at BLAS/SRC/cmake_install.cmake:53 (file):\n#  file INSTALL cannot find\n#  \"/tmp/AliceVision_build/external/lapack_build/lib/libblas.so.3.8.0\".\n#Call Stack (most recent call first):\n#  BLAS/cmake_install.cmake:46 (include)\n#  cmake_install.cmake:72 (include)\nRUN apt-get install -y --no-install-recommends liblapack-dev libsuitesparse-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR \"${AV_BUILD}\"\nRUN cmake \"${AV_DEV}\" -DCMAKE_BUILD_TYPE=Release -DALICEVISION_BUILD_DEPENDENCIES:BOOL=ON -DAV_BUILD_LAPACK:BOOL=OFF -DAV_BUILD_SUITESPARSE:BOOL=OFF -DCMAKE_INSTALL_PREFIX=\"${AV_INSTALL}\" -DALICEVISION_BUNDLE_PREFIX=\"${AV_BUNDLE}\"\n\nWORKDIR \"${AV_BUILD}\"\nRUN make -j${NPROC} install && make bundle\n# && cd /opt && rm -rf \"${AV_BUILD}\"\n\nWORKDIR \"${AV_BUNDLE}/share/aliceVision\"\nRUN wget https://gitlab.com/alicevision/trainedVocabularyTreeData/raw/master/vlfeat_K80L3.SIFT.tree\n\n"
}