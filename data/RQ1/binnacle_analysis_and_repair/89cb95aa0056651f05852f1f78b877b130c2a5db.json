{
  "startTime": 1674251721188,
  "endTime": 1674251721280,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:9\n\n## to build image, cd into its directory and run:\n# $ sudo docker build -t doli .\n### if you're having trouble building because debian's servers can't be reached, try this: https://stackoverflow.com/a/40516974/\n## after it is built:\n# $ sudo docker run -it -p 8080:80 doli /bin/bash\n## -it means interactive terminal, and -p hport:cport maps the\n## -container port to the host's port\n### and then activate the server\n# $docker# apache2ctl start\n## Ctrl+P, Ctrl+Q to exit container without stopping it\n\n# keep packages/libraries sorted!\n\n## texlive layer\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    latexmk                                                      \\\n    tex-gyre                                                     \\\n    texlive-base                                                 \\\n    texlive-extra-utils                                          \\\n    texlive-font-utils                                           \\\n    texlive-fonts-recommended                                    \\\n    texlive-generic-extra                                        \\\n    texlive-generic-recommended                                  \\\n    texlive-lang-portuguese                                      \\\n    texlive-latex-base                                           \\\n    texlive-latex-extra                                          \\\n    texlive-latex-recommended                                    \\\n    texlive-pictures                                             \\\n    && rm -rf /var/lib/apt/lists/*\n\n## python3 and apache layer\n# build-essential and the rest is for building uwsgi\n## apt-get update again because https://stackoverflow.com/a/37727984/\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    apache2                                                      \\\n    libapache2-mod-wsgi-py3                                      \\\n    python3                                                      \\\n    python3-dev                                                  \\\n    python3-pip                                                  \\\n    python3-setuptools                                           \\\n    python3-wheel                                                \\\n    && rm -rf /var/lib/apt/lists/*\n\n## python packages layer\nRUN pip3 install --no-cache-dir --upgrade \\\n    flask~=0.12.2 \\\n    google-cloud-storage~=1.6.0 \\\n    pylatex~=1.2.1\n\nWORKDIR /usr/local/www/wsgi-scripts\n\n## copy the local directories contents into the container\n# backend script\nCOPY ./src /usr/local/www/wsgi-scripts\n# static website and friends\nCOPY ./frontend /usr/local/www/documents\n\n## apache config\nRUN useradd -s /bin/bash -m doli && mv main.conf /etc/apache2/sites-available/main.conf && a2dissite 000-default.conf && a2ensite main.conf && echo \"ServerName 104.197.105.228.xip.io\" | tee /etc/apache2/conf-available/servername.conf && a2enconf servername\n\n# add doliberto.cls to user's home, where DO's will be made\n# this prevents us from having to install doliberto.cls globally\nCOPY ./latex /home/doli/\n\n## Make port 80 available to the world outside this container\nEXPOSE 80\n\n## environment variables | should use https://docs.docker.com/engine/reference/commandline/run/#set-environment-variables--e-env-env-file instead?\n# to make UTF-8 default system encoding\nENV LANG C.UTF-8\n\nCMD [\"apache2ctl\", \"-D\", \"FOREGROUND\"]\n"
}