{
  "startTime": 1674243824091,
  "endTime": 1674243824255,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 5,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 193
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 92,
        "columnEnd": 168
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 30,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 63
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 2,
        "columnEnd": 48
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 2,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial AS base\n\nENV NPM_CONFIG_LOGLEVEL warn\nENV NODE_VERSION 8.11.1\n\nRUN \\\n  apt-get update && \\\n  apt-get dist-upgrade -y && \\\n  apt-get install --no-install-recommends -y curl xz-utils git apt-transport-https inotify-tools && \\\n  apt-get update && \\\n  rm -rf /var/lib/apt/lists/*\n\n# Stolen from https://github.com/nodejs/docker-node\n# gpg keys listed at https://github.com/nodejs/node\nRUN set -ex \\\n  && for key in \\\n  94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n  FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n  71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n  DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n  C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n  B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n  56730D5401028683275BD23C23EFEFE93C4CFFFE \\\n  77984A986EBC2AA786BC0F66B01FBB92821C587A; \\\n  do \\\n  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n  gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || \\\n  gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\"; \\\n  done\n\nRUN ARCH= && dpkgArch=\"$(dpkg --print-architecture)\" \\\n  && case \"${dpkgArch##*-}\" in \\\n    amd64) ARCH='x64';; \\\n    ppc64el) ARCH='ppc64le';; \\\n    s390x) ARCH='s390x';; \\\n    arm64) ARCH='arm64';; \\\n    armhf) ARCH='armv7l';; \\\n    i386) ARCH='x86';; \\\n    * echo \"unsupported  architecture\"; exit 1;; \\\n  esac \\\n  && curl -f -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n  && curl -f -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n  && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n  && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n  && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n\n# hack, npm is having a hard time kubectl-cli\nRUN curl -f -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod 755 /usr/bin/kubectl\n\nRUN npm install -g yarn && npm cache clean --force;\n\nENV NODE_ENV production\nWORKDIR /app\n\nCMD [ \"node\" ]\n"
}