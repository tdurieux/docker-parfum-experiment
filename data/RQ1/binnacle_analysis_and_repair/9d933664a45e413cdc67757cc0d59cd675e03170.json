{
  "startTime": 1674252069690,
  "endTime": 1674252069961,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 157
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nENV NGINX_VERSION 1.10.0\nENV NGX_SMALL_LIGHT_VERSION 0.8.0\nENV IMAGEMAGICK_VERSION 6.8.6-8\n\n# Install dependency packages\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n      binutils-doc \\\n      bison \\\n      flex \\\n      g++ \\\n      gettext \\\n      libpcre3 \\\n      libpcre3-dev \\\n      libssl-dev \\\n      libperl-dev \\\n      make && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Build ImageMagick with WebP support\nRUN mkdir -p /tmp/imagemagick && \\\n    cd /tmp/imagemagick && \\\n    apt-get update && \\\n    apt-get build-dep -y imagemagick && \\\n    apt-get install --no-install-recommends -y libwebp-dev devscripts checkinstall && \\\n    curl -f -L https://launchpad.net/imagemagick/main/${IMAGEMAGICK_VERSION}/+download/ImageMagick-${IMAGEMAGICK_VERSION}.tar.gz > \\\n      ImageMagick-${IMAGEMAGICK_VERSION}.tar.gz && \\\n    tar zxf ImageMagick-${IMAGEMAGICK_VERSION}.tar.gz && \\\n    cd ImageMagick-${IMAGEMAGICK_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n      --prefix=/usr \\\n      --sysconfdir=/etc \\\n      --libdir=/usr/lib/x86_64-linux-gnu \\\n      --enable-shared \\\n      --with-modules \\\n      --disable-openmp \\\n      --with-webp=yes \\\n      LDFLAGS=-L/usr/local/lib \\\n      CPPFLAGS=-I/usr/local/include && \\\n    make && \\\n    checkinstall -y && \\\n    rm -rf /tmp/imagemagick && \\\n    rm -rf /var/lib/apt/lists/* && rm ImageMagick-${IMAGEMAGICK_VERSION}.tar.gz\n\n# Fetch and unarchive nginx source\nRUN curl -f -L https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz > /tmp/nginx-${NGINX_VERSION}.tar.gz && \\\n    cd /tmp && \\\n    tar zxf nginx-${NGINX_VERSION}.tar.gz && rm nginx-${NGINX_VERSION}.tar.gz\n\n# Fetch and unarchive ngx_small_light module\nRUN curl -f -L https://github.com/cubicdaiya/ngx_small_light/archive/v${NGX_SMALL_LIGHT_VERSION}.tar.gz > /tmp/ngx_small_light-${NGX_SMALL_LIGHT_VERSION}.tar.gz && \\\n    cd /tmp && \\\n    tar zxf ngx_small_light-${NGX_SMALL_LIGHT_VERSION}.tar.gz && \\\n    cd /tmp/ngx_small_light-${NGX_SMALL_LIGHT_VERSION} && \\\n    ./setup && rm ngx_small_light-${NGX_SMALL_LIGHT_VERSION}.tar.gz\n\n# Compile nginx\nRUN cd /tmp/nginx-${NGINX_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n      --prefix=/opt/nginx \\\n      --conf-path=/etc/nginx/nginx.conf \\\n      --sbin-path=/opt/nginx/sbin/nginx \\\n      --with-http_stub_status_module \\\n      --with-http_perl_module \\\n      --with-pcre \\\n      --add-module=/tmp/ngx_small_light-${NGX_SMALL_LIGHT_VERSION} && \\\n    make && \\\n    make install && \\\n    rm -rf /tmp/*\n\nRUN mkdir -p /etc/nginx && \\\n    mkdir -p /opt/nginx/perl/lib && \\\n    mkdir -p /var/run && \\\n    mkdir -p /etc/nginx/conf.d && \\\n    mkdir -p /var/www/nginx/cache && \\\n    mkdir -p /var/www/nginx/images && \\\n    mkdir -p /var/www/nginx/tmp\n\n# Add config files\nCOPY files/nginx.conf   /etc/nginx/nginx.conf\nCOPY files/mime.types   /etc/nginx/mime.types\nCOPY files/validator.pm /opt/nginx/perl/lib/validator.pm\n\nEXPOSE 80 8090\n\nCMD [\"/opt/nginx/sbin/nginx\"]\n"
}