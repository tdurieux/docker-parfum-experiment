{
  "startTime": 1674248228372,
  "endTime": 1674248228457,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Usage of Docker image.\n#\n# While building:\n# --build-arg DISK_IMAGE=<uefiimg>\n#       image to add to the Docker image\n# --build-arg BOOTLOADER=<ovmf.qcow2>\n#       UEFI provider image to add to Docker image.\n# --build-arg BOOTLOADER_DATA=<ovmf.vars.qcow2>\n#       UEFI data image to add to Docker image.\n#\n# While launching:\n# -v $BUILDDIR:/mnt/build:ro\n#       Use BUILDDIR from a poky build as image input.\n# -v <config-dir>:/mnt/config:ro\n#       Use server.crt and/or artifact-verify-key.pem from config-dir, if it exists.\n# -e SERVER_URL=https://whatever.mender.io\n#       Use SERVER_URL as server address for client.\n# -e TENANT_TOKEN=<token>\n#       Use token as tenant token for client.\n\nFROM alpine:3.7\n\n# Install packages\nRUN apk update && apk upgrade && \\\n    apk add --no-cache util-linux \\\n            bash e2fsprogs-extra python3\n\nRUN apk add --no-cache qemu-system-x86_64\n\nRUN rm -rf /var/cache/apk/*\n\nRUN echo qemux86-64 > /machine.txt\n\nARG DISK_IMAGE=scripts/docker/empty-file\nARG BOOTLOADER=scripts/docker/empty-file\nARG BOOTLOADER_DATA=scripts/docker/empty-file\n\nCOPY $DISK_IMAGE ./core-image-full-cmdline-qemux86-64.uefiimg\nCOPY $BOOTLOADER ./ovmf.qcow2\nCOPY $BOOTLOADER_DATA ./ovmf.vars.qcow2\n\nADD scripts/mender-qemu ./\nADD scripts/docker/entrypoint.sh ./\nADD scripts/docker/setup-mender-configuration.py ./\nADD env.txt ./\n\n# Delete images if they are empty. This is to save space if the artifacts are\n# mounted on /mnt/build instead.\nRUN if [ `stat -c %s core-image-full-cmdline-qemux86-64.uefiimg` -eq 0 ]; then rm -f core-image-full-cmdline-qemux86-64.uefiimg; fi\nRUN if [ `stat -c %s ovmf.qcow2` -eq 0 ]; then rm -f ovmf.qcow2; fi\n\nRUN chmod +x entrypoint.sh mender-qemu\nEXPOSE 8822\nENTRYPOINT [\"./entrypoint.sh\"]\n"
}