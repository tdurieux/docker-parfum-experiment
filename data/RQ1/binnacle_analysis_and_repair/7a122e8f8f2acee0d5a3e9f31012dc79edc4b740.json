{
  "startTime": 1674239127681,
  "endTime": 1674239127763,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nginx\n\nRUN apt-get update && apt-get install --no-install-recommends -y git wget cron bc && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /letsencrypt/challenges/.well-known/acme-challenge\nRUN git clone https://github.com/certbot/certbot /letsencrypt/app\nWORKDIR /letsencrypt/app\nRUN ./letsencrypt-auto; exit 0\n\n# You should see \"OK\" if you go to http://<domain>/.well-known/acme-challenge/health\n\nRUN echo \"OK\" > /letsencrypt/challenges/.well-known/acme-challenge/health\n\n# Install kubectl\nRUN wget https://storage.googleapis.com/kubernetes-release/release/v1.6.3/bin/linux/amd64/kubectl\nRUN chmod +x kubectl\nRUN mv kubectl /usr/local/bin/\n\n# Add our nginx config for routing through to the challenge results\nRUN rm /etc/nginx/conf.d/*.conf\nADD nginx/nginx.conf /etc/nginx/\nADD nginx/letsencrypt.conf /etc/nginx/conf.d/\n\n# Add some helper scripts for getting and saving scripts later\nADD fetch_certs.sh /letsencrypt/\nADD save_certs.sh /letsencrypt/\nADD recreate_pods.sh /letsencrypt/\nADD refresh_certs.sh /letsencrypt/\nADD start.sh /letsencrypt/\n\nADD nginx/letsencrypt.conf /etc/nginx/snippets/letsencrypt.conf\n\nRUN ln -s /root/.local/share/letsencrypt/bin/letsencrypt /usr/local/bin/letsencrypt\n\nWORKDIR /letsencrypt\n\nENTRYPOINT ./start.sh\n"
}