{
  "startTime": 1674245457024,
  "endTime": 1674245457409,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 12,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 23,
        "columnEnd": 97
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 29,
        "columnEnd": 107
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 69,
        "columnEnd": 188
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 109
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 109
      }
    }
  ],
  "repairedDockerfile": "FROM mmicko/cross-base:1.0\n\nENV CROSS_NAME x86_64-apple-darwin15\n\nENV CROSS_PREFIX /opt/${CROSS_NAME}\n\nRUN apt-get -y --no-install-recommends install clang llvm clang-3.9 llvm-3.9 automake autogen \\\n                libtool libxml2-dev uuid-dev libssl-dev bash \\\n                patch make tar xz-utils bzip2 gzip sed cpio curl zlib1g-dev libmpc-dev libmpfr-dev libgmp-dev && \\\n    apt-get clean --yes && \\\n    update-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.9 100 \\\n        --slave /usr/bin/clang++ clang++ /usr/bin/clang++-3.9 && rm -rf /var/lib/apt/lists/*;\n\nENV MAC_SDK_VERSION 10.11\n\nRUN cd / && curl -f -L https://github.com/tpoechtrager/osxcross/archive/master.tar.gz | tar xvz && \\\n    cd /osxcross-master/ && \\\n    curl -f -L -o tarballs/MacOSX${MAC_SDK_VERSION}.sdk.tar.xz https://s3.dockerproject.org/darwin/v2/MacOSX10.11.sdk.tar.xz && \\\n    echo | SDK_VERSION=${MAC_SDK_VERSION} OSX_VERSION_MIN=10.6 PORTABLE=true ./build.sh && ./build_compiler_rt.sh && \\\n    GCC_VERSION=7.3.0 ./build_gcc.sh\n\nENV AS=/osxcross-master/target/bin/${CROSS_NAME}-as \\\n    AR=/osxcross-master/target/bin/${CROSS_NAME}-ar \\\n    CC=/osxcross-master/target/bin/${CROSS_NAME}-clang \\\n    CXX=/osxcross-master/target/bin/${CROSS_NAME}-clang++ \\\n    LD=/osxcross-master/target/bin/${CROSS_NAME}-ld \\ \n    RANLIB=/osxcross-master/target/bin/${CROSS_NAME}-ranlib\n\nENV PATH /osxcross-master/target/bin:$PATH\n\nCOPY Toolchain.cmake ${CROSS_PREFIX}/\n\nENV CMAKE_TOOLCHAIN_FILE ${CROSS_PREFIX}/Toolchain.cmake\n\nRUN cd /src/boost && \\\n    echo \"using gcc : : \" /osxcross-master/target/bin/${CROSS_NAME}-g++ \" : <cxxflags>\\\"-arch x86_64 -fvisibility=hidden -fvisibility-inlines-hidden -mmacosx-version-min=10.6\\\" <linker-type>\\\"darwin\\\" <archiver>\\\"/osxcross-master/target/bin/x86_64-apple-darwin15-ar\\\" <ranlib>\\\"/osxcross-master/target/bin/x86_64-apple-darwin15-ranlib\\\" ; \" >> tools/build/src/user-config.jam && \\\n    ./bootstrap.sh --prefix=${CROSS_PREFIX} --with-libraries=program_options,filesystem,thread,iostreams  && \\\n    ./b2 --toolset=gcc --target-os=darwin threading=multi link=static install  && \\\n    cd /src/libusb && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${CROSS_PREFIX} --host=${CROSS_NAME} --enable-udev=no && \\\n    make -j9 && \\\n    make install && \\\n    cd /src/libftdi1 && \\\n    export PKG_CONFIG_PATH=${CROSS_PREFIX}/lib/pkgconfig && \\\n    cmake . -DCMAKE_INSTALL_PREFIX=${CROSS_PREFIX} -DCMAKE_TOOLCHAIN_FILE=${CROSS_PREFIX}/Toolchain.cmake -DBOOST_ROOT=$CROSS_PREFIX && \\\n    make -j9 && \\\n    cmake -DCMAKE_TOOLCHAIN_FILE=${CROSS_PREFIX}/Toolchain.cmake -P cmake_install.cmake && \\\n    cd /src/libftdi1/examples && \\\n    ${CC} -o lsftdi find_all.c -L${CROSS_PREFIX}/lib -I${CROSS_PREFIX}/include/libftdi1 -Bstatic /opt/x86_64-apple-darwin15/lib/libftdi1.a /opt/x86_64-apple-darwin15/lib/libusb-1.0.a -Wl,-framework,IOKit -Wl,-framework,CoreFoundation -lobjc -lpthread && \\\n    cp lsftdi ${CROSS_PREFIX}/bin/. && \\\n    cd /src/libusb/examples && \\\n    ${CC} -o lsusb listdevs.c -L${CROSS_PREFIX}/lib -I${CROSS_PREFIX}/include/libusb-1.0 -Bstatic /opt/x86_64-apple-darwin15/lib/libusb-1.0.a -Wl,-framework,IOKit -Wl,-framework,CoreFoundation -lobjc -lpthread && \\\n    cp lsusb ${CROSS_PREFIX}/bin/. && \\\n    cd / && \\\n    rm -rf /src\n\nRUN mkdir /src && \\\n    cd /src && \\\n    wget -c https://mirrors.mediatemple.net/debian-archive/debian/pool/main/libu/libusb/libusb_0.1.12.orig.tar.gz && \\\n    wget -c https://ftp.ubuntu.com/ubuntu/pool/universe/libf/libftdi/libftdi_0.20.orig.tar.gz && \\\n    tar xvfz libusb_0.1.12.orig.tar.gz && \\\n    tar xvfz libftdi_0.20.orig.tar.gz && \\\n    cd /src/libusb-0.1.12 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${CROSS_PREFIX} --host=x86_64-linux-gnu --enable-udev=no && make install && \\\n    cd /src/libftdi-0.20 && export PATH=${CROSS_PREFIX}/bin:$PATH && CXXFLAGS=\"-I${CROSS_PREFIX}/include -L${CROSS_PREFIX}/lib\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${CROSS_PREFIX} --host=x86_64-linux-gnu && make install && \\\n    cd / && \\\n    rm -rf /src && rm libusb_0.1.12.orig.tar.gz\n\nENV CC=/osxcross-master/target/bin/${CROSS_NAME}-gcc \\\n    CXX=/osxcross-master/target/bin/${CROSS_NAME}-g++ \\\n    OSXCROSS_NO_INCLUDE_PATH_WARNINGS=1\n"
}