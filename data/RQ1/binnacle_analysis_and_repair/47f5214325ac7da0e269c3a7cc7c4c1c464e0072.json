{
  "startTime": 1674249719436,
  "endTime": 1674249719454,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build this Docker container from `protocol` directory with:\n#   docker build -t <username>/<imagename> .\n# Execute the voting system with:\n#   docker run <username>/<imagename>\n#     --network=<network>\n#     --env SENDGRID_API_KEY=<key>\n#     --env NOTIFICATION_FROM_ADDRESS=<email address>\n#     --env NOTIFICATION_TO_ADDRESS=<email address>\n\n# Fix node version due to high potential for incompatibilities.\nFROM node:11\n\n# Pull down latest version of code from Github.\nRUN git clone https://github.com/UMAprotocol/protocol.git\nWORKDIR protocol\n\n# Install dependencies and compile contracts.\nRUN npm install && npm cache clean --force;\nRUN scripts/buildContracts.sh\n\n# Environment variables to set up email notifications.\nENV SENDGRID_API_KEY=\nENV NOTIFICATION_FROM_ADDRESS=\nENV NOTIFICATION_TO_ADDRESS=\n\n# Command to run Voting system. The setup above could probably be extracted to a base Docker image, but that may require\n# modifying the directory structure more.\nWORKDIR core/\nENTRYPOINT [\"/bin/bash\", \"scripts/runVoting.sh\"]\nCMD [\"--network=test\"]\n"
}