{
  "startTime": 1674234575309,
  "endTime": 1674234575386,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 100
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu\n\n# ==== Basic setup ====\nRUN apt-get -qq update && apt-get -qq --no-install-recommends -y install curl build-essential checkinstall python git python3 xz-utils bsdtar wget && rm -rf /var/lib/apt/lists/*;\n\n# ==== Synology setup =====\nRUN mkdir -p /synotoolkit\nWORKDIR \"/synotoolkit\"\nRUN git clone https://github.com/SynologyOpenSource/pkgscripts-ng pkgscripts\nWORKDIR \"/synotoolkit/pkgscripts\"\n\n# Workaround for tar problems with Docker (use bsdtar instead)\nRUN sed -i \"s/'tar'/'bsdtar'/g\" EnvDeploy               # tar problem in Docker\nRUN sed -i \"s/'-xhf'/'-xf'/g\" EnvDeploy                 # tar problem in Docker\n# End of workaround\n\n# For a particular Synology NAS model (armv7 instructions). We'll probably need more builds...\n# armada370 has an old gcc, doesn't work well for me\n# RUN ./EnvDeploy -v 6.0 -p armada370\nRUN ./EnvDeploy -v 6.2 -p armada38x\nRUN ./EnvDeploy -v 6.2 -p rtd1296\n# alpine4k is quite recent armv7 platform, seems to be usable e.g. for armada370 as well\n# Doesn't compile node.js though, can be removed?\nRUN ./EnvDeploy -v 6.2 -p alpine4k\n# evansport (x86)\nRUN ./EnvDeploy -v 6.2 -p evansport\nRUN ./EnvDeploy -v 6.2 -p alpine"
}