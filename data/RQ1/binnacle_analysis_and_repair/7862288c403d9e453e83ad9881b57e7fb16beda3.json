{
  "startTime": 1674251572257,
  "endTime": 1674251572361,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker-keras - Keras in Docker with Python 3 and TensorFlow on CPU\n\nFROM debian:stretch\nMAINTAINER gw0 [http://gw.tnode.com/] <gw.2017@ena.one>\n\n# install debian packages\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update -qq \\\n && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    g++ \\\n    git \\\n    openssh-client \\\n    python3 \\\n    python3-dev \\\n    python3-pip \\\n    python3-setuptools \\\n    python3-virtualenv \\\n    python3-wheel \\\n    pkg-config \\\n    libopenblas-base \\\n    python3-numpy \\\n    python3-scipy \\\n    python3-h5py \\\n    python3-yaml \\\n    protobuf-compiler \\\n    python-lxml \\\n    python3-pydot \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nARG TENSORFLOW_VERSION=1.3.0\nARG TENSORFLOW_DEVICE=cpu\nARG TENSORFLOW_APPEND=\nRUN pip3 --no-cache-dir install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_DEVICE}/tensorflow${TENSORFLOW_APPEND}-${TENSORFLOW_VERSION}-cp35-cp35m-linux_x86_64.whl\n\nARG KERAS_VERSION=2.0.8\nENV KERAS_BACKEND=tensorflow\nRUN pip3 --no-cache-dir install --no-dependencies git+https://github.com/fchollet/keras.git@${KERAS_VERSION}\n\n# quick test and dump package lists\nRUN python3 -c \"import tensorflow; print(tensorflow.__version__)\" \\\n && dpkg-query -l > /dpkg-query-l.txt \\\n && pip3 freeze > /pip3-freeze.txt\n\nCOPY ./requirements.txt /opt/srv/requirements.txt\nWORKDIR /opt/srv\n\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nRUN adduser --disabled-password --gecos '' celery-user\n\nWORKDIR /opt/srv/tensorflow_models\n"
}