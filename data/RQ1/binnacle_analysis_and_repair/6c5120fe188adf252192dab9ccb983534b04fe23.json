{
  "startTime": 1674234176028,
  "endTime": 1674234176193,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 31,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Allow the Browsh image version to be injected via the command line during build\nARG BROWSH_IMAGE_TAG\n\n# First build our custom SSH server\n# The Browsh SSH server is a custom Go server that launches Browsh upon a successful\n# SSH connection.\nFROM bitnami/minideb:stretch\n\nRUN install_packages \\\n      curl \\\n      ca-certificates \\\n      git \\\n      autoconf \\\n      automake \\\n      g++ \\\n      protobuf-compiler \\\n      zlib1g-dev \\\n      libncurses5-dev \\\n      libssl-dev \\\n      pkg-config \\\n      libprotobuf-dev \\\n      make\n\n# Install Golang to build the custom Browsh SSH server\nENV GOPATH=/go\nENV GOROOT=$GOPATH\nENV PATH=$GOPATH/bin:$PATH\nRUN curl -f -L -o go.tar.gz https://dl.google.com/go/go1.9.2.linux-amd64.tar.gz\nRUN mkdir -p $GOPATH/bin\nRUN mkdir -p $GOPATH/src/browsh_ssh_server\nRUN tar -C / -xzf go.tar.gz && rm go.tar.gz\n\n# Install a bleeding edge version of Mosh for true colour support\nRUN git clone https://github.com/mobile-shell/mosh\nRUN cd mosh && git checkout 10dca75fb21ce2e3b\nRUN cd mosh && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\n# Install `dep` the current defacto dependency manager for Golang\nENV GOLANG_DEP_VERSION=0.3.2\nENV dep_url=https://github.com/golang/dep/releases/download/v$GOLANG_DEP_VERSION/dep-linux-amd64\nRUN curl -f -L -o $GOPATH/bin/dep $dep_url\nRUN chmod +x $GOPATH/bin/dep\nWORKDIR $GOPATH/src/browsh_ssh_server\nADD . $GOPATH/src/browsh_ssh_server\nRUN dep ensure\nRUN go build -o browsh-ssh-server ssh-server.go\n\n# Now wrap the SSH server image around the original Browsh Docker image\nFROM gcr.io/browsh-193210/browsh\n\n# Copy the SSH server built in the previous stage.\nCOPY --from=0 /go/src/browsh_ssh_server/browsh-ssh-server /usr/local/bin\nCOPY --from=0 /usr/local/bin/mosh-server /usr/local/bin\n\nUSER root\nRUN install_packages \\\n      locales \\\n      libprotobuf10 \\\n      htop \\\n      netcat\n\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    dpkg-reconfigure --frontend=noninteractive locales && \\\n    update-locale LANG=en_US.UTF-8\nENV LANG en_US.UTF-8\n\nUSER user\nADD start-browsh-session.sh /usr/local/bin/\nRUN touch /app/debug.log && echo \"Browsh logs start\" > /app/debug.log\n\nCMD browsh-ssh-server -host-key /etc/browsh/id_rsa & touch /app/debug.log && tail -f /app/debug.log\n\n"
}