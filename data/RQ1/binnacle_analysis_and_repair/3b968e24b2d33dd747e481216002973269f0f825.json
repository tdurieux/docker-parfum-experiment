{
  "startTime": 1674244188542,
  "endTime": 1674244188676,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM laurielias/python-3.6-dlib:latest AS builder\n\nENV DEBIAN_FRONTEND noninteractive\n\nMAINTAINER Lauri Elias <lauri@ajapaik.ee>\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y --fix-missing cmake build-essential gfortran git wget curl graphicsmagick \\\n    libgraphicsmagick1-dev libatlas-dev libavcodec-dev libavformat-dev libgtk2.0-dev libjpeg-dev liblapack-dev \\\n    libswscale-dev pkg-config python3-dev python3-numpy software-properties-common zip && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /home/docker/ajapaik\n\nCOPY requirements.txt .\n\nRUN pip wheel --wheel-dir=./wheels/ uwsgi\n\nRUN pip wheel --wheel-dir=./wheels/ -r requirements.txt\n\n# Lightweight deployment image this time\nFROM python:3.6-slim AS deployer\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && \\\n    apt-get upgrade -y --no-install-recommends && \\\n    apt-get install -y --no-install-recommends uwsgi nano telnet python-opencv binutils libproj-dev \\\n    gdal-bin libglib2.0-0 libsm6 libxrender-dev gettext procps && \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR /home/docker/ajapaik\n\nCOPY --from=builder /home/docker/ajapaik/wheels ./wheels\n\nCOPY requirements.txt wsgi.py manage.py ./\n\nRUN pip install --no-cache-dir --no-index --find-links=./wheels uwsgi -r requirements.txt && rm -rf ./wheels\n\nCOPY ajapaik ./ajapaik\n\nCOPY templates ./templates\n\nCOPY docker/uwsgi.ini ./docker/uwsgi.ini\n\nCOPY docker/solr ./docker/solr\n\nCOPY docker/docker-entrypoint.sh docker/docker-entrypoint-dev.sh /usr/local/bin/\n\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh /usr/local/bin/docker-entrypoint-dev.sh\n\nEXPOSE 8000\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\n"
}