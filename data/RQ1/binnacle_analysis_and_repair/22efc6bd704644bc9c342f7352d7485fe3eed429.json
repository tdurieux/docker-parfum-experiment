{
  "startTime": 1674241064433,
  "endTime": 1674241064658,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 33,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-runtime-ubuntu16.04\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Source code\nADD . /app\nWORKDIR /app\nENV PYTHONPATH=/app/src:$PYTHONPATH\n\n# APT dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    apt-utils \\\n    git \\\n    curl \\\n    sysstat \\\n    wget \\\n    unzip \\\n\n    libnetcdf-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install miniconda3 to /miniconda\nRUN curl -f -O https://repo.continuum.io/miniconda/Miniconda3-4.5.12-Linux-x86_64.sh\nRUN bash Miniconda3-4.5.12-Linux-x86_64.sh -p /miniconda -b\nRUN rm Miniconda3-4.5.12-Linux-x86_64.sh\nENV PATH=/miniconda/bin:${PATH}\n\nRUN conda update -y -q conda\nRUN conda create -y -n deeplytough python=3.6\nRUN conda install -y -n deeplytough -c openbabel -c anaconda -c acellera -c psi4 biopython openbabel htmd\nRUN source activate deeplytough; pip install --no-cache-dir --upgrade pip; pip install --no-cache-dir -r /app/requirements.txt\n\nRUN conda create -y -n deeplytough_mgltools\nRUN conda install -y -n deeplytough_mgltools -c bioconda mgltools\n\n# rot covariant convolutions (includes also the 'experiments' code)\nRUN source activate deeplytough; git clone https://github.com/mariogeiger/se3cnn && cd se3cnn && git reset --hard 6b976bea4ea17e1bd5655f0f030c6e2bb1637b57 && mv experiments se3cnn; sed -i \"s/exclude=\\['experiments\\*'\\]//g\" setup.py && python setup.py install && cd .. && rm -rf se3cnn;\nRUN source activate deeplytough; git clone https://github.com/AMLab-Amsterdam/lie_learn && cd lie_learn && python setup.py install && cd .. && rm -rf lie_learn\n\n# fpocket2\nRUN curl -f -O https://netcologne.dl.sourceforge.net/project/fpocket/fpocket2.tar.gz && \\\n    tar -xvzf fpocket2.tar.gz && rm fpocket2.tar.gz && cd fpocket2 && \\\n    sed -i 's/\\$(LFLAGS) \\$\\^ -o \\$@/\\$\\^ -o \\$@ \\$(LFLAGS)/g' makefile && make && \\\n    mv bin/fpocket bin/fpocket2 && mv bin/dpocket bin/dpocket2 && mv bin/mdpocket bin/mdpocket2 && mv bin/tpocket bin/tpocket2\nENV PATH=/app/fpocket2/bin:${PATH}\n"
}