{
  "startTime": 1674248541635,
  "endTime": 1674248541774,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 280
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 280
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Minimum Docker image to build Android AOSP\n# refer: https://android.googlesource.com/platform/build/+/master/tools/docker/Dockerfile\n#\nFROM ubuntu:14.04\n\nMAINTAINER weishu <twsxtd@gmail.com>\n\nRUN apt-get update && apt-get install --no-install-recommends -y git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev ccache libgl1-mesa-dev libxml2-utils xsltproc unzip python openjdk-7-jdk && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN curl -f -o jdk8.tgz https://weishu.dimensionalzone.com/jdk8-master.tar.gz \\\n && tar -zxf jdk8.tgz linux-x86 \\\n && mv linux-x86 /usr/lib/jvm/java-8-openjdk-amd64 \\\n && rm -rf jdk8.tgz\n\nRUN curl -f -o /usr/local/bin/repo https://weishu.dimensionalzone.com/repo \\\n && echo \"d06f33115aea44e583c8669375b35aad397176a411de3461897444d247b6c220  /usr/local/bin/repo\" | sha256sum --strict -c - \\\n && chmod a+x /usr/local/bin/repo\n\n# All builds will be done by user aosp\nCOPY gitconfig /root/.gitconfig\nCOPY ssh_config /root/.ssh/config\n\n# The persistent data will be in these two directories, everything else is\n# considered to be ephemeral\nVOLUME [\"/tmp/ccache\", \"/aosp\"]\n\n# Improve rebuild performance by enabling compiler cache\nENV USE_CCACHE 1\nENV CCACHE_DIR /tmp/ccache\n\n# Work in the build directory, repo is expected to be init'd here\nWORKDIR /aosp\n\nCOPY docker_entrypoint.sh /root/docker_entrypoint.sh\nENTRYPOINT [\"/root/docker_entrypoint.sh\"]\n"
}