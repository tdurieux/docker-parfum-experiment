{
  "startTime": 1674243661803,
  "endTime": 1674243661968,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Builder\n#\nFROM golang:1.12 AS builder\nLABEL maintainer \"John Eikenberry <jae@zhar.net>\"\n\nARG LD_FLAGS\nARG GOTAGS\n\nWORKDIR \"/go/src/github.com/hashicorp/envconsul\"\n\nCOPY . .\n\nRUN \\\n  CGO_ENABLED=\"0\" \\\n  go build -a -o \"/envconsul\" -ldflags \"${LD_FLAGS}\" -tags \"${GOTAGS}\"\n\n#\n# Final\n#\nFROM alpine:latest\nLABEL maintainer \"John Eikenberry <jae@zhar.net>\"\n\n# This is the release of https://github.com/hashicorp/docker-base to pull in\n# order to provide HashiCorp-built versions of basic utilities like dumb-init\n# and gosu.\nARG DOCKER_BASE_VERSION=\"0.0.4\"\n\n# This is the location of the releases.\nARG HASHICORP_RELEASES=\"https://releases.hashicorp.com\"\n\n# Create a envconsul user and group first so the IDs get set the same way, even\n# as the rest of this may change over time.\nRUN addgroup envconsul && \\\n    adduser -S -G envconsul envconsul\n\n# Set up certificates and base tools.\nRUN apk add --no-cache ca-certificates curl gnupg libcap openssl && \\\n    mkdir -p /etc/ssl/certs/ && \\\n    update-ca-certificates --fresh && \\\n    gpg --batch --keyserver keys.gnupg.net --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C && \\\n    mkdir -p /tmp/build && \\\n    cd /tmp/build && \\\n    curl -f -sO ${HASHICORP_RELEASES}/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip && \\\n    curl -f -sO ${HASHICORP_RELEASES}/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS && \\\n    curl -f -sO ${HASHICORP_RELEASES}/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig && \\\n    gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS && \\\n    grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c && \\\n    unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip && \\\n    cp bin/gosu bin/dumb-init /bin && \\\n    cd /tmp && \\\n    rm -rf /tmp/build && \\\n    apk del gnupg openssl && \\\n    rm -rf /root/.gnupg\n\n# Copy the compiled binary from the builder\nCOPY --from=builder \"/envconsul\" \"/bin/envconsul\"\n\n# The agent will be started with /envconsul/config as the configuration\n# directory so you can add additional config files in that location.\nRUN mkdir -p \"/envconsul/data\" && \\\n    mkdir -p \"/envconsul/config\" && \\\n    chown -R \"envconsul:envconsul\" \"/envconsul\"\n\n# Expose the envconsul data directory as a volume since that's where shared\n# results should be rendered.\nVOLUME /envconsul/data\n\n# The entry point script uses dumb-init as the top-level process to reap any\n# zombie processes created by our app.\nCOPY \"docker/alpine/docker-entrypoint.sh\" \"/bin/docker-entrypoint.sh\"\nRUN chmod +x \"/bin/docker-entrypoint.sh\"\nENTRYPOINT [\"/bin/docker-entrypoint.sh\"]\n\n# Run our app by default\nCMD [\"/bin/envconsul\"]\n"
}