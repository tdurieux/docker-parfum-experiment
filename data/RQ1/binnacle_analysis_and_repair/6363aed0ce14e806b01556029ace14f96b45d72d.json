{
  "startTime": 1674250654443,
  "endTime": 1674250654612,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 16,
        "columnStart": 1,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:utopic\nMAINTAINER Angus Lees <gus@inodes.org>\n\nENV \\\n PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin \\\n PREFIX=/home/install \\\n ETC_IN=/home/install/etc \\\n ETC=/home/user/etc\n\n# Run pip install as one (non-root) user, and run resulting binaries\n# as another.\nRUN \\\n apt-get -q update && apt-get -qy upgrade && \\\n adduser --disabled-login --gecos 'Unprivileged runtime user' user && \\\n adduser --disabled-login --gecos 'Unprivileged install user' install && \\\n apt-get -qy --no-install-recommends install \\\n sudo virtualenv python-dev python-pip git build-essential && rm -rf /var/lib/apt/lists/*;\n\n# System depdendencies needed to build python modules, followed by runtime deps.\nRUN apt-get -qy --no-install-recommends install \\\n libyaml-dev libffi-dev libssl-dev && \\\n mkdir -p /var/lib/glance /var/lock/glance && \\\n chown user:user /var/lib/glance /var/lock/glance && rm -rf /var/lib/apt/lists/*;\n\n# _wrap.sh sets up environment and copies templated configs from $ETC_IN -> $ETC\nCOPY _wrap.sh /usr/local/bin/\nENTRYPOINT [\"/usr/local/bin/_wrap.sh\"]\nCMD [\"/bin/bash\"]\n\nUSER install\nRUN \\\n set -x && \\\n cd $PREFIX && \\\n git clone --depth 1 --single-branch --branch master https://github.com/openstack/glance.git git-fetch && \\\n cd git-fetch && \\\n virtualenv --system-site-packages $PREFIX/venv && \\\n $PREFIX/venv/bin/pip install --upgrade pip && \\\n $PREFIX/venv/bin/pip install --compile . PyMySQL && \\\n mkdir -p $ETC_IN && \\\n cp -r etc $ETC_IN/glance && \\\n . $PREFIX/venv/bin/activate && glance-api --help >/dev/null\n\nCOPY glance-api.conf.in glance-registry.conf.in glance-scrubber.conf.in glance-cache.conf.in glance-manage.conf.in /home/install/etc/glance/\n\nUSER user\nWORKDIR /\nVOLUME [\"/store\", \"/cache\", \"/lock\"]\nEXPOSE 9292 9191\n"
}