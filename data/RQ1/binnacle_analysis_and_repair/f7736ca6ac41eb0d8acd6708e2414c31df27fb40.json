{
  "startTime": 1674245055358,
  "endTime": 1674245055709,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 2,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 309
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 309
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 309
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 2,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 333
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 2,
        "columnEnd": 89
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:12.04\nENV MYSQLTMPROOT temprootpass\n\n# Run upgrades\nRUN echo deb http://us.archive.ubuntu.com/ubuntu/ precise universe multiverse >> /etc/apt/sources.list;\\\n  echo deb http://us.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe >> /etc/apt/sources.list;\\\n  echo deb http://security.ubuntu.com/ubuntu precise-security main restricted universe >> /etc/apt/sources.list;\\\n  echo udev hold | dpkg --set-selections;\\\n  echo initscripts hold | dpkg --set-selections;\\\n  echo upstart hold | dpkg --set-selections;\\\n  apt-get update;\\\n  apt-get -y upgrade\n\n# Install dependencies\nRUN apt-get install --no-install-recommends -y build-essential zlib1g-dev libyaml-dev libssl-dev libgdbm-dev libreadline-dev libncurses5-dev libffi-dev curl openssh-server redis-server checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libicu-dev sudo python python-docutils python-software-properties nginx logrotate sendmail && rm -rf /var/lib/apt/lists/*;\n\n# Install Git\nRUN add-apt-repository -y ppa:git-core/ppa; \\\n  apt-get update; \\\n  apt-get -y --no-install-recommends install git && rm -rf /var/lib/apt/lists/*;\n\n# Install Ruby\nRUN mkdir /tmp/ruby; \\\n  cd /tmp/ruby; \\\n  curl -f ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p247.tar.gz | tar xz; \\\n  cd ruby-2.0.0-p247; \\\n  chmod +x configure; \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-install-rdoc; \\\n  make; \\\n  make install; \\\n  gem install bundler --no-ri --no-rdoc\n\n# Create Git user\nRUN adduser --disabled-login --gecos 'GitLab' git\n\n# Install GitLab Shell\nRUN cd /home/git;\\\n  su git -c \"git clone https://github.com/gitlabhq/gitlab-shell.git -b v1.8.0\";\\\n  cd gitlab-shell;\\\n  su git -c \"cp config.yml.example config.yml\";\\\n  sed -i -e 's/localhost/127.0.0.1/g' config.yml;\\\n  su git -c \"./bin/install\"\n\n# Install MySQL\nRUN echo mysql-server mysql-server/root_password password $MYSQLTMPROOT | debconf-set-selections; \\\n  echo mysql-server mysql-server/root_password_again password $MYSQLTMPROOT | debconf-set-selections; \\\n  apt-get install --no-install-recommends -y mysql-server mysql-client libmysqlclient-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install GitLab\nRUN cd /home/git;\\\n  su git -c \"git clone https://github.com/gitlabhq/gitlabhq.git -b 6-4-stable gitlab\"\n\n# Misc configuration stuff\nRUN cd /home/git/gitlab;\\\n  chown -R git tmp/;\\\n  chown -R git log/;\\\n  chmod -R u+rwX log/;\\\n  chmod -R u+rwX tmp/;\\\n  su git -c \"mkdir /home/git/gitlab-satellites\";\\\n  su git -c \"mkdir tmp/pids/\";\\\n  su git -c \"mkdir tmp/sockets/\";\\\n  chmod -R u+rwX tmp/pids/;\\\n  chmod -R u+rwX tmp/sockets/;\\\n  su git -c \"mkdir public/uploads\";\\\n  chmod -R u+rwX public/uploads;\\\n  su git -c \"cp config/unicorn.rb.example config/unicorn.rb\";\\\n  su git -c \"cp config/initializers/rack_attack.rb.example config/initializers/rack_attack.rb\";\\\n  su git -c \"git config --global user.name 'GitLab'\";\\\n  su git -c \"git config --global user.email 'gitlab@localhost'\";\\\n  su git -c \"git config --global core.autocrlf input\"\n\nRUN cd /home/git/gitlab;\\\n  su git -c \"bundle install --deployment --without development test postgres aws\"\n\n# Install init scripts\nRUN cd /home/git/gitlab;\\\n  cp lib/support/init.d/gitlab /etc/init.d/gitlab;\\\n  update-rc.d gitlab defaults 21;\\\n  cp lib/support/logrotate/gitlab /etc/logrotate.d/gitlab\n\nEXPOSE 80\nEXPOSE 22\n\nADD . /srv/gitlab\n\nRUN chmod +x /srv/gitlab/start.sh;\\\n  chmod +x /srv/gitlab/firstrun.sh\n\nCMD [\"/srv/gitlab/start.sh\"]\n"
}