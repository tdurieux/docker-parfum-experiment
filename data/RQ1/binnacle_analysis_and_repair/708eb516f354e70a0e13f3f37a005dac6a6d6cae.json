{
  "startTime": 1674243238433,
  "endTime": 1674243238714,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 22,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 346
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 346
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 22,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 346
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 369
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 106
      }
    }
  ],
  "repairedDockerfile": "###############################################################################\n# Dockerfile for https://github.com/ppwwyyxx/speaker-recognition\n# -----------------------------------------------------------------------------\n# Docker provides a way to run applications securely isolated in a container,\n# packaged with all its dependencies and libraries.\n#\n# This Dockerfile produces a docker image, from which containers can be created\n# * An image is a lightweight, stand-alone, executable package that includes\n#   everything needed to run a piece of software, including the code, a runtime,\n#   libraries, environment variables, and config files.\n# * A container is a runtime instance of an image – what the image becomes in\n#   memory when actually executed. It runs completely isolated from the host\n#   environment by default, only accessing host files and ports if configured\n#   to do so.\n#\n# Containers run apps natively on the host machine’s kernel.\n# They have better performance than virtual machines that only get virtual\n# access to host resources through a hypervisor.\n# Images or containers can easily be exchanged and many users publish images in\n# the docker hub (https://hub.docker.com/).  Docker further enables upscaling\n# of solutions from single workstation to server farms through docker swarms.\n#\n#      Read more here: https://docs.docker.com/\n# Install docker here: https://docs.docker.com/engine/installation/linux/\n#\n# Quick start commands (as root)\n# -----------------------------------------------------------------------------\n# Pull an image from the docker hub\n# > docker pull <image name>\n#\n# Build this Dockerfile (place it in an empty folder and cd to it):\n# > docker build -f Dockerfile -t speaker-recognition .\n#\n# Instantiate a container from an image\n# > docker run -ti speaker-recognition\n# To give container access to host files during development:\n# > docker run --name speaker-recognitionInstance -ti -v /:/host speaker-recognition\n#\n# Run a stopped container\n# > docker start -ai speaker-recognitionInstance\n#\n# Run the speaker_recognition.py directly thorough the configured entry point\n# > docker run -v local_path:remote_path speaker-recognition\n#\n# List information\n# > docker images                 All docker images\n# > docker ps -a                  All docker containers (running or not: -a)\n#\n###############################################################################\n# BASE IMAGE\nFROM ubuntu\nENV DEBIAN_FRONTEND=noninteractive\n\n# Prepare package management\n###############################################################################\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y nano sudo tzdata apt-utils && \\\n    apt-get -y dist-upgrade && rm -rf /var/lib/apt/lists/*;\n\n\n# Set timezone\n# https://bugs.launchpad.net/ubuntu/+source/tzdata/+bug/1554806\n###############################################################################\nRUN rm /etc/localtime && echo \"Australia/Sydney\" > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata\n\n\n# Create the GUI User\n###############################################################################\n# Then you can run a docker container with access to the GUI on your desktop:\n# > docker run -ti -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=$DISPLAY -u guiuser <image>\n# -----------------------------------------------------------------------------\nENV USERNAME guiuser\nRUN useradd -m $USERNAME && \\\n    echo \"$USERNAME:$USERNAME\" | chpasswd && \\\n    usermod --shell /bin/bash $USERNAME && \\\n    usermod -aG sudo $USERNAME && \\\n    echo \"$USERNAME ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers.d/$USERNAME && \\\n    chmod 0440 /etc/sudoers.d/$USERNAME && \\\n    # Replace 1000 with your user/group id\n    usermod  --uid 1000 $USERNAME && \\\n    groupmod --gid 1000 $USERNAME\n\n\n# Python 2\n###############################################################################\nRUN apt-get update && apt-get install --no-install-recommends -y python python-pip && \\\n    pip2 list --outdated | cut -d' ' -f1 | xargs -n 1 pip2 install --upgrade && rm -rf /var/lib/apt/lists/*;\n\n\n# Base Dependencies\n###############################################################################\nRUN apt-get install --no-install-recommends -y portaudio19-dev libopenblas-base libopenblas-dev pkg-config git-core cmake python-dev liblapack-dev libatlas-base-dev libblitz0-dev libboost-all-dev libhdf5-serial-dev libqt4-dev libsvm-dev libvlfeat-dev python-nose python-setuptools python-imaging build-essential libmatio-dev python-sphinx python-matplotlib python-scipy && rm -rf /var/lib/apt/lists/*;\n# additional dependencies for bob\nRUN apt-get install --no-install-recommends -y libfftw3-dev libtiff5-dev libgif-dev libpng-dev libjpeg-dev && rm -rf /var/lib/apt/lists/*;\n\n# Spear\n# https://gitlab.idiap.ch/bob/bob/wikis/Dependencies\n# Takes a very long time to install python packages because compilation is happening in the background\n###############################################################################\nRUN pip2 install --no-cache-dir scipy scikit-learn scikits.talkbox numpy pyside pyssp PyAudio argparse h5py\nRUN pip2 install --no-cache-dir bob.extension\nRUN pip2 install --no-cache-dir bob.blitz\nRUN pip2 install --no-cache-dir bob.core\nRUN pip2 install --no-cache-dir bob.io.base\nRUN pip2 install --no-cache-dir bob.bio.spear\nRUN pip2 install --no-cache-dir bob.sp\n\n\n# Realtime Speaker Recognition\n# https://github.com/ppwwyyxx/speaker-recognition\n###############################################################################\nRUN cd ~/ && \\\n    git clone https://github.com/ppwwyyxx/speaker-recognition.git && \\\n    cd ~/speaker-recognition && \\\n    make -C src/gmm\n\n\n# Clean up\n###############################################################################\nRUN apt-get clean &&apt-get autoremove -y && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Entrypoint - so `docker run speaker-recognition` will automatically run the python main\n###############################################################################\nENTRYPOINT [\"/usr/bin/python\", \"/root/speaker-recognition/src/speaker-recognition.py\"]\n"
}