{
  "startTime": 1674641741180,
  "endTime": 1674641741543,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 1,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM microsoft/aspnetcore-build:1.1\n\nLABEL Comment=\"Standard microsoft/aspnetcore:latest image with a custom CA web application hosted on port 80.\" \\\n      Author=\"Division42 LLC\" \\\n      ImageRepo=\"https://github.com/Division42LLC/division42llc-dotnet-webca\"\n\nCOPY docker-entrypoint.sh /usr/local/bin\nCOPY . /src/\n\nADD app-name.txt /app/\nADD app-version.txt /app/\nADD sample-cert.pfx /var/localCA/CA/\nADD sample-cert.pfx /var/localCA/leaf/\n\nRUN cd /src && \\\n\techo \"[*] Building App: dotnet RESTORE starting...\" && \\\n\tdotnet restore && \\\n\techo \"[*] Building App: dotnet RESTORE completed.\" && \\\n\techo \"[*] Building App: dotnet BUILD starting...\" && \\\n\tcd ./Division42LLC.WebCA.UIWeb && \\\n\tdotnet build ./Division42LLC.WebCA.UIWeb.csproj  && \\\n\techo \"[*] Building App: dotnet BUILD completed.\" && \\\n\techo \"[*] Building App: dotnet PUBLISH starting...\" && \\\n\tdotnet publish ./Division42LLC.WebCA.UIWeb.csproj -c Release -o /app && \\\n\techo \"[*] Building App: dotnet PUBLISH completed.\" && \\\n\tcd /app && \\\n\techo \"[*] Configuring app [IMAGE_NAME]...\" && \\\n\texport IMAGE_NAME=`cat /src/app-name.txt` && \\\n\techo \"export IMAGE_NAME=$IMAGE_NAME\" >> /etc/profile && \\\n\techo \"[*] Configuring app [IMAGE_VERSION]...\" && \\\n\texport IMAGE_VERSION=`cat /src/app-version.txt` && \\\n\techo \"export IMAGE_VERSION=$IMAGE_VERSION\" >> /etc/profile && \\\n\techo \"export IMAGE_BUILT=\\\"`date`\\\"\" >> /etc/profile && \\\n\techo \"[*] Purging source code...\" && \\\n\trm -rf /src && \\\n\techo \"[*] Updating Aptitude...\" && \\\n\tapt-get update && \\\n\techo \"[*] Installing packages: nano figlet\" && \\\n\tapt-get install --no-install-recommends nano figlet -y && \\\n\tDISK_SPACE_BEFORE=`df -hm | grep \"/$\" | xargs | cut -d \" \" -f3` && \\\n\techo \"[*] Clearing Aptitude cache...\" && \\\n\tapt-get clean -y && \\\n\tapt-get purge -y && \\\n\trm -rf /var/lib/apt/lists/* && \\\n\techo \"[*] Wiping system log files to reduce image size.\" && \\\n\tcat /dev/null > /var/log/alternatives.log && \\\n\tcat /dev/null > /var/log/apt/history.log && \\\n\tcat /dev/null > /var/log/apt/term.log && \\\n\tcat /dev/null > /var/log/bootstrap.log && \\\n\tcat /dev/null > /var/log/btmp && \\\n\tcat /dev/null > /var/log/dmesg && \\\n\tcat /dev/null > /var/log/dpkg.log && \\\n\tcat /dev/null > /var/log/faillog && \\\n\tcat /dev/null > /var/log/lastlog && \\\n\tcat /dev/null > /var/log/wtmp && \\\n\tDISK_SPACE_AFTER=`df -hm | grep \"/$\" | xargs | cut -d \" \" -f3` && \\\n\techo \"[*] Build run commands finished. [$(($DISK_SPACE_BEFORE - DISK_SPACE_AFTER))mb recovered]\" && \\\n\techo \"[*] Setting permissions on /var/localCA\" && \\\n\tmkdir -p /var/localCA/ && \\\n\tchmod -R 777 /var/localCA\n\n\n\nWORKDIR /app\n\nEXPOSE 8080\nVOLUME /var/localCA\n\nUSER 1001\n\nENTRYPOINT [\"/bin/bash\", \"/usr/local/bin/docker-entrypoint.sh\"]\n\nCMD [\"dotnet\", \"Division42LLC.WebCA.UIWeb.dll\"]\n"
}