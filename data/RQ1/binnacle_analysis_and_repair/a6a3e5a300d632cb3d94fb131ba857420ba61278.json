{
  "startTime": 1674239278839,
  "endTime": 1674239279151,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 5,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 20,
        "columnEnd": 96
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.2-fpm\n\n# Install tini (init handler)\nADD https://github.com/krallin/tini/releases/download/v0.9.0/tini /tini\nRUN chmod +x /tini\n\n# For running APT in non-interactive mode\nENV DEBIAN_FRONTEND noninteractive\n\n# Define build requirements, which can be removed after setup from the container\nENV PHPIZE_DEPS \\\n  autoconf            \\\n  build-essential     \\\n  file                \\\n  g++                 \\\n  gcc                 \\\n  libbz2-dev          \\\n  libc-client-dev     \\\n  libc-dev            \\\n  libcurl4-gnutls-dev \\\n  libedit-dev         \\\n  libfreetype6-dev    \\\n  libgmp-dev          \\\n  libicu-dev          \\\n  libjpeg62-turbo-dev \\\n  libkrb5-dev         \\\n  libmcrypt-dev       \\\n  libpng-dev          \\\n  libpq-dev           \\\n  libsqlite3-dev      \\\n  libssh2-1-dev       \\\n  libxml2-dev         \\\n  libxslt1-dev        \\\n  make                \\\n  pkg-config          \\\n  re2c                \\\n  librabbitmq-dev     \\\n  libssl-dev\n\n# Set Debian sources\nRUN \\\n  apt-get update && apt-get install -q -y --no-install-recommends wget gnupg apt-transport-https && \\\n##  echo \"deb http://deb.debian.org/debian/ stretch main non-free contrib\\n\" > /etc/apt/sources.list.d/debian.list && \\\n##  echo \"deb-src http://deb.debian.org/debian/ stretch main non-free contrib\\n\" >> /etc/apt/sources.list.d/debian.list && \\\n  echo \"deb https://deb.nodesource.com/node_9.x stretch main\" > /etc/apt/sources.list.d/node.list && \\\n      wget --quiet -O - https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && rm -rf /var/lib/apt/lists/*;\n\n#Fixing the postgresql-client installation issue\nRUN mkdir -p /usr/share/man/man7/ && touch /usr/share/man/man7/ABORT.7.gz.dpkg-tmp && \\\n    mkdir -p /usr/share/man/man1/ && touch /usr/share/man/man1/psql.1.gz\n\n# Install Debian packages\nRUN \\\n  apt-get -qy update && apt-get install -q -y --no-install-recommends $PHPIZE_DEPS \\\n    apt-utils           \\\n    ca-certificates     \\\n    curl                \\\n    debconf             \\\n    debconf-utils       \\\n#    gettext-base        \\\n    git                 \\\n    git-core            \\\n    graphviz            \\\n    libedit2            \\\n#    libmysqlclient18    \\\n    libpq5              \\\n    libsqlite3-0        \\\n#    libssh2-php         \\\n    mc                  \\\n    netcat              \\\n    nginx               \\\n    nginx-extras        \\\n    nodejs              \\\n    patch               \\\n    postgresql-client   \\\n    psmisc              \\\n    python-dev          \\\n    python-setuptools   \\\n    redis-tools         \\\n    rsync               \\\n    ssmtp               \\\n    sudo                \\\n    supervisor          \\\n    unzip               \\\n    vim                 \\\n    wget                \\\n    zip                 \\\n    openssh-server      \\\n\n  && mkdir /var/run/sshd \\\n\n# Install PHP extensions\n  && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n  && docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql \\\n  && docker-php-ext-install -j$(nproc) \\\n        bcmath      \\\n        bz2         \\\n        gd          \\\n        gmp         \\\n        iconv       \\\n        intl        \\\n        mbstring    \\\n        mysqli      \\\n        pdo         \\\n        pdo_mysql   \\\n        pdo_pgsql   \\\n        pgsql       \\\n        readline    \\\n        soap        \\\n        xmlrpc      \\\n        xsl         \\\n        zip         \\\n        sockets     \\\n\n# Install PHP redis extension\n  && pecl install -o -f redis \\\n  && rm -rf /tmp/pear \\\n  && echo \"extension=redis.so\" > $PHP_INI_DIR/conf.d/docker-php-ext-redis.ini \\\n\n# Install amqp extension\n  && pecl install amqp \\\n  && docker-php-ext-enable amqp \\\n\n# Install jinja2 cli\n  && easy_install j2cli \\\n\n# Install composerrm -rf /var/lib/apt/lists/ \\\n  && curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer \\\n\n# Remove build requirements for php modules\n  && apt-get -qy autoremove \\\n  && apt-get -qy purge $PHPIZE_DEPS \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Nginx configuration\nCOPY docker/nginx/conf.d /etc/nginx/conf.d\nCOPY docker/nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY docker/nginx/fastcgi_params /etc/nginx/fastcgi_params\n\n# PHP-FPM configuration\nRUN rm -f /usr/local/etc/php-fpm.d/*\nCOPY docker/php/php-fpm.conf /usr/local/etc/php-fpm.conf\nCOPY docker/php/pool.d/*.conf /usr/local/etc/php-fpm.d/\nRUN echo \"memory_limit = 512M\" >> /usr/local/etc/php/php.ini\n\nCOPY docker/entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\nRUN install -d -o www-data -g www-data -m 0755 /var/www\nRUN chown -R www-data:www-data /var/www\nWORKDIR /var/www\n\n# supervisord configuration\nCOPY docker/supervisord.conf /etc/supervisor/supervisord.conf\n\nRUN mkdir -p /etc/nginx/waiting\nCOPY docker/nginx/waiting/waiting_vhost.conf /etc/nginx/waiting/waiting_vhost.conf\nCOPY docker/nginx/waiting/nginx_waiting.conf /etc/nginx/nginx_waiting.conf\n\n# Run app with entrypoints\nENTRYPOINT [\"/tini\", \"--\", \"/entrypoint.sh\"]\n\nEXPOSE 8080 8081 22\n\n#STOPSIGNAL SIGQUIT\nCMD [\"supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\", \"--nodaemon\"]\n"
}