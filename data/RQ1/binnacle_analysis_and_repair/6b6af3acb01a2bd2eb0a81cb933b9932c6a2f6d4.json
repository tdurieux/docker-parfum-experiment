{
  "startTime": 1674236705717,
  "endTime": 1674236706196,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 7,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 5,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 5,
        "columnEnd": 21
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM unocha/alpine-base-s6:%%UPSTREAM%%\n\n# Parse arguments for the build command.\nARG NODE_VERSION=6.12.0\nARG NPM_VERSION=3.10.10\nARG YARN_VERSION=1.3.2\nARG VERSION\nARG VCS_URL\nARG VCS_REF\nARG BUILD_DATE\n\nENV NODE_VERSION=$NODE_VERSION \\\n    YARN_VERSION=$YARN_VERSION \\\n    NPM_VERSION=$NPM_VERSION \\\n    NODE_APP_DIR=/srv/www \\\n    NODE_PATH=/usr/lib/node_modules:/usr/local/lib/node_modules:/usr/local/share/.config/yarn/global/node_modules \\\n    NPM_CONFIG_SPIN=false \\\n    NPM_CONFIG_PROGRESS=false \\\n    SRC_DIR=/src \\\n    NEW_RELIC_HOME=/srv/ \\\n    NEW_RELIC_LOG_LEVEL=info \\\n    NEW_RELIC_LICENSE_KEY=aaa \\\n    NEW_RELIC_APP_NAME=nodeapp \\\n    NEW_RELIC_NO_CONFIG_FILE=True\n\n# A little bit of metadata management.\n# See http://label-schema.org/\nLABEL org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.vendor=\"UN-OCHA\" \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.vcs-url=$VCS_URL \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.name=\"nodejs-base\" \\\n      org.label-schema.description=\"This service provides a base nodejs platform.\" \\\n      org.label-schema.architecture=\"x86_64\" \\\n      org.label-schema.distribution=\"Alpine Linux\" \\\n      org.label-schema.distribution-version=\"3.6\" \\\n      info.humanitarianresponse.nodejs=\"$NODE_VERSION\" \\\n      info.humanitarianresponse.npm=\"$NPM_VERSION\" \\\n      info.humanitarianresponse.yarn=\"$YARN_VERSION\"\n\nRUN apk add --no-cache \\\n        libstdc++ \\\n  && apk add --no-cache \\\n        curl \\\n        git \\\n  && apk add --no-cache --virtual .build-deps \\\n        bash \\\n        binutils-gold \\\n        build-base \\\n        gnupg \\\n        linux-headers \\\n        perl \\\n        python \\\n  # gpg keys listed at https://github.com/nodejs/node#release-team \\\n  && for key in \\\n    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n    FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n    B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n    56730D5401028683275BD23C23EFEFE93C4CFFFE \\\n    77984A986EBC2AA786BC0F66B01FBB92821C587A; \\\n  do \\\n    gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || \\\n    gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || \\\n    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n  done \\\n    && curl -f -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n    && curl -f -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n    && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n    && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n    && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n    && cd \"node-v$NODE_VERSION\" \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --without-npm \\\n    && make -j$(getconf _NPROCESSORS_ONLN) \\\n    && make install \\\n    && cd .. \\\n    && rm -Rf \"node-v$NODE_VERSION\" \\\n    && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n    && for key in \\\n    6A010C5166006599AA17F08146C2130DFD2497F5; \\\n  do \\\n    gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || \\\n    gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || \\\n    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n  done \\\n  && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n  && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n  && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n  && mkdir -p /opt/yarn \\\n  && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1 \\\n  && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \\\n  && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg \\\n  && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n  && yarn global add \\\n        grunt-cli \\\n        newrelic \\\n  && yarn cache clean \\\n  && cd /tmp \\\n  && curl -f https://codeload.github.com/npm/npm/tar.gz/v${NPM_VERSION} -o npm.tgz \\\n  && tar xvzf npm.tgz \\\n  && cd npm-${NPM_VERSION} \\\n  && make install \\\n  && apk del .build-deps \\\n  && rm -rf \\\n        /usr/lib/node_modules/npm/man \\\n        /usr/lib/node_modules/npm/doc \\\n        /usr/lib/node_modules/npm/html \\\n        /usr/lib/node_modules/npm/scripts \\\n        /tmp \\\n  && rm -rf /var/cache/apk/* \\\n  && mkdir -p /tmp \\\n  && chmod 1777 /tmp \\\n  && mkdir -p ${SRC_DIR} ${NODE_APP_DIR} \\\n  && cp -a /usr/local/share/.config/yarn/global/node_modules/newrelic/newrelic.js /srv && rm npm.tgz\n"
}