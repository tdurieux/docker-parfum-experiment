{
  "startTime": 1674252665770,
  "endTime": 1674252665952,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################################################ \n## Dockerfile to build the ga4gh server on mod_wsgi-express \n## Configurable to use a local dataset \n############################################################ \nFROM ubuntu \n\n# Originally created by Steve Hershman GitHub @hershman \n# previously maintained by Alastair Firth \n# currently maintained by Maciek Smuga-Otto at UCSC Genomics Institute \nMAINTAINER Maciek Smuga-Otto <maciek@soe.ucsc.edu> \n\n# Update the sources list \nRUN apt-get update && apt-get install --no-install-recommends -y tar git curl wget dialog net-tools build-essential \\\npython python-dev python-distribute python-pip zlib1g-dev \\\napache2 libapache2-mod-wsgi libxslt1-dev libffi-dev libssl-dev && rm -rf /var/lib/apt/lists/*; # Install packages \n\n\n\n\n# Enable wsgi module \nRUN a2enmod wsgi \n\n# Create cache directories \nRUN mkdir /var/cache/apache2/python-egg-cache && \\  \nchown www-data:www-data /var/cache/apache2/python-egg-cache/ \n\n# build the GA4GH server \nRUN mkdir -p /srv/ga4gh/server \nWORKDIR /srv/ga4gh/server \n\n# Configure the python requirements \n# Do this as a separate step prior to the build so that changes \n# to the GA4GH Server codebase do not trigger a full rebuild of the \n# pip requirements. \nCOPY requirements.txt /srv/ga4gh/server/ \nRUN pip install --no-cache-dir -r requirements.txt\n\n# Install the code \nCOPY . /srv/ga4gh/server/ \nRUN pip install --no-cache-dir .\n\n# Write new apache config \nCOPY deploy/001-ga4gh.conf /etc/apache2/sites-available/001-ga4gh.conf \n\n# Write application.wsgi \nCOPY deploy/application.wsgi /srv/ga4gh/application.wsgi \nCOPY deploy/config.py /srv/ga4gh/config.py \n\n# Configure apache to serve GA4GH site \nWORKDIR /etc/apache2/sites-enabled \nRUN a2dissite 000-default \nRUN a2ensite 001-ga4gh \n\n# Open port 80 for HTTP \nEXPOSE 80 \n\n# Prepare container for deployment \n# The directory that the user will land in when executing an interactive shell \nWORKDIR /srv/ga4gh/server \nRUN python scripts/prepare_compliance_data.py -o ../ga4gh-compliance-data \n\n# Default action: Bring up a webserver instance to run as a daemon \nCMD [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"] \n\n"
}