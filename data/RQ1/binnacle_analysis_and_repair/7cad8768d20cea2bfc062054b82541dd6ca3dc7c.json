{
  "startTime": 1674248255559,
  "endTime": 1674248255753,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 186
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Lukasz Stefaniszyn \"lukasz.stefaniszyn@capgemini.com\"\n\nLABEL name=ubuntu_java \\\n            version=v1-8.0 \\\n            base=\"ubuntu:16.04\" \\\n            build_date=\"04-26-2018\" \\\n            java=\"1.8\" \\\n            maven=\"3.3.9\" \\\n            description=\"This basic docker to use in java and maven dev env.\"\n\n# Update and install needed applications\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n            wget \\\n            libfontconfig \\\n            unzip \\\n            zip \\\n            ksh \\\n            curl \\\n            git && rm -rf /var/lib/apt/lists/*;\n\n#Env parameters\nENV M2_HOME=/opt/apache-maven-3.3.9\nENV M2=$M2_HOME/bin/\n\n\n### JAVA PART ###\n#TO UPDATE:  please verify url link to JDK http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\n## Download and install Java JDK8\nRUN mkdir /opt/jdk\nRUN wget -qq --header \"Cookie: oraclelicense=accept-securebackup-cookie\" https://download.oracle.com/otn-pub/java/jdk/8u172-b11/a58eab1ec242421181065cdc37240b08/jdk-8u172-linux-x64.tar.gz && tar -zxf jdk-8u172-linux-x64.tar.gz -C /opt/jdk && rm jdk-8u172-linux-x64.tar.gz && update-alternatives --install /usr/bin/java java /opt/jdk/jdk1.8.0_172/bin/java 100 && update-alternatives --install /usr/bin/javac javac /opt/jdk/jdk1.8.0_172/bin/javac 100 && java -version && chmod 755 -R /opt/jdk/jdk1.8.0_172/\nRUN java -version\n\n### MAVEN PART ###\nRUN wget -q https://mirror.cogentco.com/pub/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz && tar xzf apache-maven-3.3.9-bin.tar.gz -C /opt && rm apache-maven-3.3.9-bin.tar.gz && ln -s /opt/apache-maven-3.3.9/bin/mvn /usr/bin/mvn && mvn --version && chmod 755 -R /opt/apache-maven-3.3.9/\n\n\n# Jenkins runs with user `jenkins`, uid = 1000\n# If you bind mount a volume from the host or a data container,\n# ensure you use the same uid\nARG user=jenkins\nARG group=jenkins\nARG uid=1000\nARG gid=1000\nRUN addgroup --gid ${gid} ${group} && adduser --disabled-password  --uid ${uid} --gid ${gid} ${user}\n\n\n## Copy and Install dependencies\nRUN mkdir /opt/tmp\nRUN mkdir /usr/share/maven2 && chmod 777 -R /usr/share/maven2\nCOPY ./template-app-under-test/ /opt/tmp/template-app-under-test/\nCOPY ./settings.xml /opt/apache-maven-3.3.9/conf/settings.xml\n\nRUN cd /opt/tmp/template-app-under-test/ && mvn dependency:go-offline clean install -U compile test-compile site deploy -DskipTests=true; exit 0\n\nRUN rm -f -r /opt/tmp/template-app-under-test/\n\nRUN chmod 755 /usr/bin/java && chmod 755 /usr/bin/mvn\nRUN chmod 777 -R /usr/share/maven2\n\n## Create app folder\nRUN mkdir -p -m 777 /app\n\n# Set working directory\nWORKDIR /app\n\nUSER ${user}\n\n"
}