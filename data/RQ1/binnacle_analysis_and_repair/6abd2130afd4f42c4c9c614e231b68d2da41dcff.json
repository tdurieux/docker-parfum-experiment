{
  "startTime": 1674241861680,
  "endTime": 1674241861832,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 15,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:stretch\nMAINTAINER Ruiming Zhuang <ruiming.zhuang@gmail.com>\n\nENV NGINX_VERSION 1.12.1-1~stretch\nENV NJS_VERSION   1.12.1.0.1.10-1~stretch\n\nRUN apt-get update \\\n\t&& apt-get install --no-install-recommends --no-install-suggests -y gnupg1 \\\n\t&& \\\n\tNGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62; \\\n\tfound=''; \\\n\tfor server in \\\n\t\tha.pool.sks-keyservers.net \\\n\t\thkp://keyserver.ubuntu.com:80 \\\n\t\thkp://p80.pool.sks-keyservers.net:80 \\\n\t\tpgp.mit.edu \\\n\t; do \\\n\t\techo \"Fetching GPG key $NGINX_GPGKEY from $server\"; \\\n\t\tapt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break; \\\n\tdone; \\\n\ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1; \\\n\tapt-get remove --purge -y gnupg1 && apt-get -y --purge autoremove && rm -rf /var/lib/apt/lists/* \\\n\t&& echo \"deb http://nginx.org/packages/debian/ stretch nginx\" >> /etc/apt/sources.list \\\n\t&& apt-get update \\\n\t&& apt-get install --no-install-recommends --no-install-suggests -y \\\n\t\t\t\t\t\tnginx=${NGINX_VERSION} \\\n\t\t\t\t\t\tnginx-module-xslt=${NGINX_VERSION} \\\n\t\t\t\t\t\tnginx-module-geoip=${NGINX_VERSION} \\\n\t\t\t\t\t\tnginx-module-image-filter=${NGINX_VERSION} \\\n\t\t\t\t\t\tnginx-module-njs=${NJS_VERSION} \\\n\t\t\t\t\t\tgettext-base \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n&& ln -sf /dev/stderr /var/log/nginx/error.log\n\nCOPY package.json /tmp/package.json\nCOPY package-lock.json /tmp/package-lock.json\nRUN cd /tmp && NPM_CONFIG_LOGLEVEL=warn yarn install && yarn cache clean;\nCOPY . /tmp\nRUN cd /tmp && yarn run build\nRUN rm -rf /usr/share/nginx/html && mv /tmp/build /usr/share/nginx/html\nCOPY nginx-site.conf /etc/nginx/conf.d/default.conf\n\nEXPOSE 80\nCMD nginx -g 'daemon off;'\n"
}