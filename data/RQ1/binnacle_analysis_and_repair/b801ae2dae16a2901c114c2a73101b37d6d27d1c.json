{
  "startTime": 1674242663369,
  "endTime": 1674242663430,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 110
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build an image that can do training and inference in SageMaker\n# This is a Python 2 image that uses the nginx, gunicorn, flask stack\n# for serving inferences in a stable way.\n\nFROM ubuntu:16.04\n\nMAINTAINER Amazon AI <sage-learner@amazon.com>\n\n\nRUN apt-get -y update && apt-get install -y --no-install-recommends \\\n         wget \\\n         python3.5 \\\n         nginx \\\n\t\t libgcc-5-dev \\\n         ca-certificates \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Here we get all python packages.\n# There's substantial overlap between scipy and numpy that we eliminate by\n# linking them together. Likewise, pip leaves the install caches populated which uses\n# a significant amount of space. These optimizations save a fair amount of space in the\n# image, which reduces start up time.\nRUN wget https://bootstrap.pypa.io/3.3/get-pip.py && python3.5 get-pip.py && \\\n    pip3 install --no-cache-dir numpy==1.14.3 scipy scikit-learn==0.19.1 xgboost==0.72.1 pandas==0.22.0 flask gevent gunicorn && \\\n        (cd /usr/local/lib/python3.5/dist-packages/scipy/.libs; rm *; ln ../../numpy/.libs/* .) && \\\n        rm -rf /root/.cache\n\n# Set some environment variables. PYTHONUNBUFFERED keeps Python from buffering our standard\n# output stream, which means that logs can be delivered to the user quickly. PYTHONDONTWRITEBYTECODE\n# keeps Python from writing the .pyc files which are unnecessary in this case. We also update\n# PATH so that the train and serve programs are found when the container is invoked.\n\nENV PYTHONUNBUFFERED=TRUE\nENV PYTHONDONTWRITEBYTECODE=TRUE\nENV PATH=\"/opt/program:${PATH}\"\n\n# Set up the program in the image\nCOPY xgboost /opt/program\nWORKDIR /opt/program\n\n"
}