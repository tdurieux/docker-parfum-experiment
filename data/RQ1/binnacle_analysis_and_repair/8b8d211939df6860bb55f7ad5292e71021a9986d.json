{
  "startTime": 1674240314517,
  "endTime": 1674240314796,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASEIMAGE_VERSION=6\nFROM ppc64le/centos:${BASEIMAGE_VERSION} AS base_image\n\nFROM base_image AS build_tools\n\nRUN yum install -y \\\n        centos-release-scl-rh \\\n        epel-release && \\\n    yum update -y && \\\n    yum install -y \\\n        devtoolset-6-toolchain \\\n        devtoolset-6-libasan-devel \\\n        devtoolset-6-liblsan-devel \\\n        tar \\\n        curl \\\n        openssl \\\n        ca-certificates && \\\n    yum clean all && rm -rf /var/cache/yum\n\nENV M2_HOME /opt/maven\nRUN mkdir -p ${M2_HOME} && \\\n    curl -fsSL https://apache.osuosl.org/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.tar.gz | \\\n        tar -xzC ${M2_HOME} --strip-components=1 && \\\n    # Workaround for concurrent safe maven local repository\n    curl -f -O http://repo1.maven.org/maven2/io/takari/aether/takari-local-repository/0.11.2/takari-local-repository-0.11.2.jar && \\\n    mv takari-local-repository-0.11.2.jar ${M2_HOME}/lib/ext && \\\n    curl -f -O http://repo1.maven.org/maven2/io/takari/takari-filemanager/0.8.3/takari-filemanager-0.8.3.jar && \\\n    mv takari-filemanager-0.8.3.jar ${M2_HOME}/lib/ext\n\nRUN mkdir -p /opt/sbt && \\\n    curl -fsSL https://dl.bintray.com/sbt/native-packages/sbt/0.13.13/sbt-0.13.13.tgz | \\\n    tar -xzC /opt/sbt --strip-components=1\n\nRUN curl -fsSL https://cmake.org/files/v3.14/cmake-3.14.3.tar.gz \\\n    | tar xz && \\\n    cd cmake-3.14.3 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/cmake && \\\n    make -j2 && \\\n    make install && \\\n    cd .. && \\\n    rm -r cmake-3.14.3\n\nRUN source /opt/rh/devtoolset-6/enable && \\\n    curl -fsSL https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-cpp-3.5.1.tar.gz \\\n    | tar xz && \\\n    cd protobuf-3.5.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/protobuf && \\\n    make -j2 && \\\n    make install && \\\n    cd .. && \\\n    rm -rf protobuf-3.5.1\n\nFROM base_image AS base_builder_image\n\nCOPY --from=build_tools /opt /opt\n\nRUN yum install -y \\\n        centos-release-scl-rh \\\n        epel-release && \\\n    yum update -y && \\\n    yum install -y \\\n        devtoolset-6-toolchain \\\n        devtoolset-6-libasan-devel \\\n        devtoolset-6-liblsan-devel \\\n        devtoolset-7-toolchain \\\n        devtoolset-7-libasan-devel \\\n        devtoolset-7-liblsan-devel \\\n        tar \\\n        wget \\\n        curl \\\n        openssl \\\n        ca-certificates \\\n        git \\\n        rpm-build \\\n        java-1.8.0-openjdk-devel \\\n        # Required for libnd4j CPU tests (minifier)\n        which \\\n        # Required for Datavec NativeImageLoader\n        gtk2-devel && \\\n    yum clean all && rm -rf /var/cache/yum && \\\n    ln -s /opt/maven/bin/mvn /usr/bin/mvn\n\nENV HOME /home/jenkins\n\nRUN groupadd jenkins -g 1000 && useradd -d ${HOME} -u 1000 -g 1000 -m jenkins\n\nUSER jenkins\n\nWORKDIR ${HOME}\n\n# Not working...\nRUN echo 'source /opt/rh/devtoolset-7/enable' >> \"${HOME}/.bashrc\"\n\nENV PATH=/opt/sbt/bin:/opt/cmake/bin:/opt/protobuf/bin:${PATH} \\\n    JAVA_OPTS=\"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap ${JAVA_OPTS}\" \\\n    PROTOBUF_HOME=/opt/protobuf\n\nCMD [\"cat\"]\n"
}