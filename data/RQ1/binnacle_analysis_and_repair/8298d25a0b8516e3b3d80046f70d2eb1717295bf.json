{
  "startTime": 1674242505980,
  "endTime": 1674242506176,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6.1\nMAINTAINER schnie <greg@astronomer.io>\n\n# Never prompts the user for choices on installation/configuration of packages\nENV DEBIAN_FRONTEND noninteractive\nENV TERM linux\n\n# Airflow\nARG AIRFLOW_VERSION=1.8.1\nENV AIRFLOW_HOME /airflow_home\n\n# Define en_US.\nENV LANGUAGE en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nENV LC_CTYPE en_US.UTF-8\nENV LC_MESSAGES en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\nADD requirements.txt .\n\n# Install system dependencies.\nRUN set -ex \\\n    && buildDeps=' \\\n        libkrb5-dev \\\n        libsasl2-dev \\\n        libssl-dev \\\n        libffi-dev \\\n        build-essential \\\n        libblas-dev \\\n        liblapack-dev \\\n        git \\\n    ' \\\n    && apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF \\\n    && echo \"deb http://repos.mesosphere.com/ubuntu vivid main\" > /etc/apt/sources.list.d/mesosphere.list \\\n    && echo \"deb http://http.debian.net/debian jessie-backports main\" > /etc/apt/sources.list.d/backports.list \\\n    && apt-get update -yqq \\\n    && apt-get install -yqq --no-install-recommends \\\n        $buildDeps \\\n        apt-utils \\\n        curl \\\n        netcat \\\n        locales \\\n        dnsutils \\\n    && apt-get install --no-install-recommends -yqq -t jessie-backports cython libpq-dev \\\n    && sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen \\\n    && locale-gen \\\n    && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 \\\n    && pip install --no-cache-dir -r requirements.txt \\\n    && curl -f -sL https://deb.nodesource.com/setup_6.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && npm install -g cryptobject minimist \\\n    && npm install -g eslint eslint-config-google && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n# setup blackmagic\n# TODO: pin node at 6.11.1\n# TODO: discuss possibly pulling blackmagic as a git submodule instead pinned\n# to tag v1.latest (master branch for now) - https://stackoverflow.com/a/1778247/149428\nENV NODE_PATH /usr/lib/node_modules/\nENV BLACKMAGIC_HOME ${AIRFLOW_HOME}/blackmagic\nADD blackmagic ${BLACKMAGIC_HOME}/\nRUN pip install --no-cache-dir -r ${BLACKMAGIC_HOME}/py/requirements_dev.txt\n\nRUN set -ex \\\n    && apt-get remove --purge -yqq $buildDeps libpq-dev \\\n    && apt-get clean \\\n    && rm -rf \\\n        /var/lib/apt/lists/* \\\n        /tmp/* \\\n        /var/tmp/* \\\n        /usr/share/man \\\n        /usr/share/doc \\\n        /usr/share/doc-base\n\n# Set python path so airflow can find pip installed packages.\nENV PYTHONPATH ${PYTHONPATH}:${AIRFLOW_HOME}\n\n# Set airflow home.\nADD airflow_home ${AIRFLOW_HOME}/\n\n# Add scripts.\nADD script script\n\nEXPOSE 8080 5555 8793\nWORKDIR ${AIRFLOW_HOME}\nENTRYPOINT [\"/script/entrypoint.sh\"]\n"
}