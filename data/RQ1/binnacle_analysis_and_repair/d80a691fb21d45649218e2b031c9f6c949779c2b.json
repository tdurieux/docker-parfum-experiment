{
  "startTime": 1674242074768,
  "endTime": 1674242074968,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 1,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 5,
        "columnEnd": 81
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 16,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 1,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nRUN apt-get update && apt-get -y --no-install-recommends install curl git libedit-dev libcurl4-openssl-dev clang libicu52 make && rm -rf /var/lib/apt/lists/*;\nRUN cd /usr/local && \\\n\tcurl -f -O https://swift.org/builds/swift-3.0-release/ubuntu1404/swift-3.0-RELEASE/swift-3.0-RELEASE-ubuntu14.04.tar.gz && \\\n\ttar xzf swift-3.0-RELEASE-ubuntu14.04.tar.gz --strip-components=2 && rm swift-3.0-RELEASE-ubuntu14.04.tar.gz\nRUN ( curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.0/install.sh | bash) && \\\n\texport NVM_DIR=\"/root/.nvm\" && \\\n\t[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" && \\\n\tnvm install 4\n\nADD package.json /opt/src/\nRUN export NVM_DIR=\"/root/.nvm\" && \\\n\t[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" && \\\n\tcd /opt/src && npm install && npm cache clean --force;\n\nADD Package.swift /opt/src/\nRUN cd /opt/src && swift package fetch\n\nADD . /opt/src\nRUN export NVM_DIR=\"/root/.nvm\" && \\\n\t[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" && \\\n\tcd /opt/src && make\n\nWORKDIR \"/opt/src\"\nEXPOSE 8080\nCMD [\"./.build/debug/App\", \"serve\"]\n"
}