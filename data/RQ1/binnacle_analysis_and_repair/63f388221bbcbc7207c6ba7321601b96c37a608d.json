{
  "startTime": 1674251816674,
  "endTime": 1674251816872,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 159
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 159
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu\n\nARG celery_version\n\n# Add the PostgreSQL PGP key to verify their Debian packages.\n# It should be the same key as https://www.postgresql.org/media/keys/ACCC4CF8.asc\nRUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10\n\n# Add PostgreSQL's repository. It contains the most recent stable release\n#     of PostgreSQL, ``9.5``.\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\n\n# Install ``python-software-properties``, ``software-properties-common`` and PostgreSQL 9.5\n#  There are some warnings (in red) that show up during the build. You can hide\n#  them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y python-software-properties software-properties-common postgresql-9.5 postgresql-client-9.5 postgresql-contrib-9.5 make && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && \\\n\tapt-get install -y --no-install-recommends \\\n\t\t\t\tcurl \\\n\t\t\t\tgcc \\\n\t\t\t\tpython-dev \\\n\t\t\t\tpython-pip \\\n\t\t\t\tpython3-pip \\\n    \t\t\tpython3-dev \\\n    \t\t\tgit \\\n    \t\t\tvim \\\n\t\t\t\tredis-server \\\n\t\t\t\tpython-setuptools \\\n\t\t\t\tpython3-setuptools \\\n\t&& \\\n\tapt-get clean -y && \\\n\trm -rf /var/lib/apt/lists/*\n\n# Note: The official Debian and Ubuntu images automatically ``apt-get clean``\n# after each ``apt-get``\n\n# Run the rest of the commands as the ``postgres`` user created by the ``postgres-9.5`` package when it was ``apt-get installed``\nUSER postgres\n\n# Create a PostgreSQL role named ``docker`` with ``docker`` as the password and\n# then create a database `docker` owned by the ``docker`` role.\n# Note: here we use ``&&\\`` to run commands one after the other - the ``\\``\n#       allows the RUN command to span multiple lines.\nRUN    /etc/init.d/postgresql start &&\\\n    psql --command \"CREATE USER docker WITH SUPERUSER PASSWORD 'docker';\" &&\\\n    createdb -O docker docker\n\n# Adjust PostgreSQL configuration so that remote connections to the\n# database are possible.\nRUN echo \"host all  all    0.0.0.0/0  md5\" >> /etc/postgresql/9.5/main/pg_hba.conf\n\n# And add ``listen_addresses`` to ``/etc/postgresql/9.5/main/postgresql.conf``\nRUN echo \"listen_addresses='*'\" >> /etc/postgresql/9.5/main/postgresql.conf\n\n# Expose the PostgreSQL port\nEXPOSE 5432\n\n# Add VOLUMEs to allow backup of config, logs and databases\nVOLUME  [\"/etc/postgresql\", \"/var/log/postgresql\", \"/var/lib/postgresql\"]\n\nUSER root\n\n# Upgrade pip\nRUN pip install --no-cache-dir --upgrade --ignore-installed pip\nRUN pip3 install --no-cache-dir --upgrade --ignore-installed pip\n\nRUN pip2.7 install wheel\nRUN pip3 install --no-cache-dir wheel\n\nADD requirements.txt /app/requirements.txt\nADD requirements-dev.txt /app/requirements-dev.txt\n\nRUN pip2.7 install celery==$celery_version\nRUN pip3 install --no-cache-dir celery==$celery_version\n\nRUN pip3 install --no-cache-dir -r /app/requirements.txt && \\\n    pip3 install --no-cache-dir -r /app/requirements-dev.txt && \\\n\trm -rf ~/.cache\n\nRUN pip2.7 install -r /app/requirements.txt && \\\n    pip2.7 install -r /app/requirements-dev.txt && \\\n\trm -rf ~/.cache\n\nWORKDIR /app\n\n# Redis\nEXPOSE 6379\n\n# dashboard\nEXPOSE 5555"
}