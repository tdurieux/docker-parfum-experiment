{
  "startTime": 1674237176844,
  "endTime": 1674237179455,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 166,
        "lineEnd": 166,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 177,
        "lineEnd": 177,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 189,
        "lineEnd": 189,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 200,
        "lineEnd": 200,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 210,
        "lineEnd": 210,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 260,
        "lineEnd": 260,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 127,
        "lineEnd": 128,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 138,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 161
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 181,
        "lineEnd": 181,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 192,
        "lineEnd": 192,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 213,
        "lineEnd": 243,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 179,
        "lineEnd": 179,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 191,
        "lineEnd": 191,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 202,
        "lineEnd": 202,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 212,
        "lineEnd": 212,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 262,
        "lineEnd": 262,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 255,
        "lineEnd": 255,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 255,
        "lineEnd": 255,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM  intelaipg/intel-optimized-tensorflow:1.13.1-mkl-py3\nLABEL maintainer=\"Alexis Kofman <alexis.kofman@gmail.com>\"\n\nENV PKG_CONFIG_PATH=\"/usr/local/lib/pkgconfig\" \\\n    LD_LIBRARY_PATH=\"/usr/local/lib\" \\\n    SRC=\"/usr/local\" \\\n    OPENCV_VERSION=\"3.4.3\" \\\n    FFMPEG_VERSION=\"4.0.2\" \\\n    FDKAAC_VERSION=\"0.1.6\" \\\n    LAME_VERSION=\"3.100\" \\\n    OGG_VERSION=\"1.3.3\" \\\n    OPENCOREAMR_VERSION=\"0.1.5\" \\\n    OPUS_VERSION=\"1.2.1\" \\\n    THEORA_VERSION=\"1.1.1\" \\\n    VORBIS_VERSION=\"1.3.6\" \\\n    VPX_VERSION=\"1.7.0\" \\\n    X264_VERSION=\"20181015-2245-stable\" \\\n    X265_VERSION=\"2.9\" \\\n    XVID_VERSION=\"1.3.5\" \\\n    FREETYPE_VERSION=\"2.9.1\" \\\n    LIBVIDSTAB_VERSION=\"1.1.0\" \\\n    OPENCV_SHA256SUM=\"4eef85759d5450b183459ff216b4c0fa43e87a4f6aa92c8af649f89336f002ec  3.4.3.tar.gz\" \\\n    FFMPEG_SHA256SUM=\"a56ef203c14ffab56b97690a1005522cfa0dc2c42c3c40c33c0bec4875b706eb  ffmpeg-4.0.2.tar.gz\" \\\n    FDKAAC_SHA256SUM=\"adbcd793e406e1b88b3c1c41382d49f8c27371485b823c0fdab69c9124fd2ce3  v0.1.6.tar.gz\" \\\n    LAME_SHA256SUM=\"ddfe36cab873794038ae2c1210557ad34857a4b6bdc515785d1da9e175b1da1e  lame-3.100.tar.gz\" \\\n    OGG_SHA256SUM=\"c2e8a485110b97550f453226ec644ebac6cb29d1caef2902c007edab4308d985  libogg-1.3.3.tar.gz\" \\\n    OPENCOREAMR_SHA256SUM=\"2c006cb9d5f651bfb5e60156dbff6af3c9d35c7bbcc9015308c0aff1e14cd341  opencore-amr-0.1.5.tar.gz\" \\\n    OPUS_SHA256SUM=\"cfafd339ccd9c5ef8d6ab15d7e1a412c054bf4cb4ecbbbcc78c12ef2def70732  opus-1.2.1.tar.gz\" \\\n    THEORA_SHA256SUM=\"40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b  libtheora-1.1.1.tar.gz\" \\\n    VORBIS_SHA256SUM=\"6ed40e0241089a42c48604dc00e362beee00036af2d8b3f46338031c9e0351cb  libvorbis-1.3.6.tar.gz\" \\\n    VPX_SHA256SUM=\"1fec931eb5c94279ad219a5b6e0202358e94a93a90cfb1603578c326abfc1238  v1.7.0.tar.gz\" \\\n    X264_SHA256SUM=\"e1510f9cc9c70c8f7c83cec3b079d035e92de5b4c76bf3185234c196c6b82622  x264-snapshot-20181015-2245-stable.tar.bz2\" \\\n    X265_SHA256SUM=\"ebae687c84a39f54b995417c52a2fdde65a4e2e7ebac5730d251471304b91024  x265_2.9.tar.gz\" \\\n    XVID_SHA256SUM=\"165ba6a2a447a8375f7b06db5a3c91810181f2898166e7c8137401d7fc894cf0  xvidcore-1.3.5.tar.gz\" \\\n    FREETYPE_SHA256SUM=\"ec391504e55498adceb30baceebd147a6e963f636eb617424bcfc47a169898ce  freetype-2.9.1.tar.gz\" \\\n    LIBVIDSTAB_SHA256SUM=\"14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb  v1.1.0.tar.gz\"\n\n## INSTALL FFMPEG https://ffmpeg.org\nRUN apt-get -yqq update && \\\n    apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 && \\\n    buildDeps=\"autoconf \\\n                automake \\\n                cmake \\\n                curl \\\n                bzip2 \\\n                libexpat1-dev \\\n                g++ \\\n                gcc \\\n                git \\\n                gperf \\\n                libtool \\\n                make \\\n                perl \\\n                pkg-config \\\n                python \\\n                libssl-dev \\\n                yasm \\\n                zlib1g-dev\" && \\\n    apt-get install -yq --no-install-recommends ${buildDeps} && \\\n    export MAKEFLAGS=\"-j$(($(grep -c ^processor /proc/cpuinfo) + 1))\" && \\\n#RUN \\\n## nasm 2.13\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO http://www.nasm.us/pub/nasm/releasebuilds/2.13.01/nasm-2.13.01.tar.gz && \\\n    tar -zx -f nasm-2.13.01.tar.gz && \\\n    cd nasm-2.13.01 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## opencore-amr https://sourceforge.net/projects/opencore-amr/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://downloads.sf.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz && \\\n    echo ${OPENCOREAMR_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f opencore-amr-${OPENCOREAMR_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-shared --datadir=${DIR} && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## x264 http://www.videolan.org/developers/x264.html\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO ftp://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 && \\\n    echo ${X264_SHA256SUM} | sha256sum --check && \\\n    tar -jx --strip-components=1 -f x264-snapshot-${X264_VERSION}.tar.bz2 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-pic --enable-shared --disable-cli && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## x265 http://x265.org/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz && \\\n    echo ${X265_SHA256SUM} | sha256sum --check && \\\n    tar -zx -f x265_${X265_VERSION}.tar.gz && \\\n    cd x265_${X265_VERSION}/build/linux && \\\n    ./multilib.sh && \\\n    make -C 8bit install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libogg https://www.xiph.org/ogg/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz && \\\n    echo ${OGG_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datarootdir=${DIR} && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libopus https://www.opus-codec.org/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz && \\\n    echo ${OPUS_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz && \\\n    autoreconf -fiv && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libvorbis https://xiph.org/vorbis/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz && \\\n    echo ${VORBIS_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" \\\n    --disable-static --datadir=\"${DIR}\" && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libtheora http://www.theora.org/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz && \\\n    echo ${THEORA_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" \\\n    --disable-static --datadir=\"${DIR}\" && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libvpx https://www.webmproject.org/code/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://github.com/webmproject/libvpx/archive/v${VPX_VERSION}.tar.gz && \\\n    echo ${VPX_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f v${VPX_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libmp3lame http://lame.sourceforge.net/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://downloads.sf.net/project/lame/lame/${LAME_VERSION}/lame-${LAME_VERSION}.tar.gz && \\\n    echo ${LAME_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f lame-${LAME_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --enable-nasm --datarootdir=\"${DIR}\" && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## xvid https://www.xvid.com/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz && \\\n    echo ${XVID_SHA256SUM} | sha256sum --check && \\\n    tar -zx -f xvidcore-${XVID_VERSION}.tar.gz && \\\n    cd xvidcore/build/generic && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --datadir=\"${DIR}\" --disable-static --enable-shared && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## fdk-aac https://github.com/mstorsjo/fdk-aac\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz && \\\n    echo ${FDKAAC_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f v${FDKAAC_VERSION}.tar.gz && \\\n    autoreconf -fiv && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" && \\\n    make && \\\n    make install && \\\n    make distclean && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## freetype https://www.freetype.org/\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO http://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz && \\\n    echo ${FREETYPE_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-static --enable-shared && \\\n    make && \\\n    make install && \\\n    make distclean && \\\n    rm -rf ${DIR} && \\\n#RUN  \\\n## libvstab https://github.com/georgmartius/vid.stab\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz && \\\n    echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz && \\\n    cmake . && \\\n    make && \\\n    make install && \\\n    rm -rf ${DIR} && \\\n# RUN  \\\n## ffmpeg\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n    echo ${FFMPEG_SHA256SUM} | sha256sum --check && \\\n    tar -zx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --bindir=\"${SRC}/bin\" \\\n    --disable-debug \\\n    --disable-doc \\\n    --disable-ffplay \\\n    --disable-static \\\n    --enable-avresample \\\n    --enable-gpl \\\n    --enable-libopencore-amrnb \\\n    --enable-libopencore-amrwb \\\n    --enable-libfdk_aac \\\n    --enable-libfreetype \\\n    --enable-libvidstab \\\n    --enable-libmp3lame \\\n    --enable-libopus \\\n    --enable-libtheora \\\n    --enable-libvorbis \\\n    --enable-libvpx \\\n    --enable-libx264 \\\n    --enable-libx265 \\\n    --enable-libxvid \\\n    --enable-nonfree \\\n    --enable-openssl \\\n    --enable-postproc \\\n    --enable-shared \\\n    --enable-small \\\n    --enable-version3 \\\n    --extra-cflags=\"-I${SRC}/include\" \\\n    --extra-ldflags=\"-L${SRC}/lib\" \\\n    --extra-libs=-ldl \\\n    --prefix=\"${SRC}\" && \\\n    make && \\\n    make install && \\\n    make distclean && \\\n    hash -r && \\\n    cd tools && \\\n    make qt-faststart && \\\n    cp qt-faststart ${SRC}/bin && \\\n    rm -rf ${DIR} && \\\n# ## INSTALL OPENCV http://opencv.org\n#RUN \\\n    opencvDeps=\"libopencv-dev qtbase5-dev\" && \\\n    apt-get -yqq --no-install-recommends install ${opencvDeps} && \\\n#RUN \\\n## opencv\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    # OpenCV depends on NumPy. It represents images as NumPy arrays, so we need to install NumPy\n    curl -f -sLO https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz && \\\n    echo ${OPENCV_SHA256SUM} | sha256sum --check && \\\n    tar xzvf ${OPENCV_VERSION}.tar.gz && \\\n    cd opencv-${OPENCV_VERSION} && \\\n    mkdir build && cd build && \\\n    cmake -D CMAKE_INSTALL_PREFIX=/usr/local \\\n    -D CMAKE_BUILD_TYPE=RELEASE \\\n    -D FORCE_VTK=ON \\\n    -D WITH_TBB=ON \\\n    -D WITH_V4L=ON \\\n    -D WITH_QT=ON \\\n    -D WITH_OPENGL=ON \\\n    -D WITH_CUBLAS=ON \\\n    -D CUDA_NVCC_FLAGS=\"-D_FORCE_INLINES --expt-relaxed-constexpr\" \\\n    -D WITH_GDAL=ON \\\n    -D WITH_XINE=ON \\\n    -D INSTALL_C_EXAMPLES=OFF \\\n    -D INSTALL_PYTHON_EXAMPLES=OFF \\\n    -D BUILD_EXAMPLES=OFF .. && \\\n    make -j $(($(nproc) + 1)) && \\\n    make install && \\\n    /bin/bash -c 'echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf' && \\\n    ldconfig && \\\n    rm -rf ${DIR} && \\\n# ## CLEANUP\n    cd && \\\n    apt-get autoremove -y && \\\n    apt-get clean -y && rm nasm-2.13.01.tar.gz && rm -rf /var/lib/apt/lists/*;\n"
}