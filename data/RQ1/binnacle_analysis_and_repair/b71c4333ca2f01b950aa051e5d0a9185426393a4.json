{
  "startTime": 1674235805794,
  "endTime": 1674235806048,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 2,
        "columnEnd": 48
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 9,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 9,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 9,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 9,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 9,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 9,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 9,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 9,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 9,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 9,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 9,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 9,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "# Set the base image to Ubuntu\nFROM ubuntu:trusty\n\n# File Author / Maintainer\nMAINTAINER bitponics\n\n################## UPDATE apt-GET ######################\nRUN export DEBIAN_FRONTEND=noninteractive\nRUN echo \"deb http://archive.ubuntu.com/ubuntu precise main universe\" > /etc/apt/sources.list\nRUN sudo apt-get update\nRUN sudo apt-get upgrade -y\n\n################## INSTALL SSH AND SUPERVISOR AND CREATE DIRS ######################\nRUN apt-get install --no-install-recommends -y openssh-server supervisor && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /var/run/sshd\nRUN mkdir -p /var/log/supervisor\n\n##################### SUPERVISOR - ADD CONFIG #####################\nADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n################## MONGO - BEGIN INSTALLATION ######################\n# Install MongoDB Following the Instructions at MongoDB Docs\n# Ref: http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/\n\n# Add the package verification key\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10\n\n# Add MongoDB to the repository sources list\nRUN echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | tee /etc/apt/sources.list.d/mongodb.list\n\n# update packages\nRUN sudo apt-get update\n\n# Install MongoDB package (.deb)\nRUN sudo apt-get install --no-install-recommends -y mongodb-10gen && rm -rf /var/lib/apt/lists/*;\n\n# Create the default data directory\nRUN mkdir -p /data/db\n\n# Expose the default port\nEXPOSE 27017\n\n# Default port to execute the entrypoint (MongoDB)\n#CMD [\"--port 27017\"]\n\n# Set default container command\n# ENTRYPOINT usr/bin/mongod\n##################### MONGO - INSTALLATION END #####################\n\n##################### REDIS - INSTALLATION START #####################\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r redis && useradd -r -g redis redis\n\nRUN sudo apt-get install --no-install-recommends -y redis-server && rm -rf /var/lib/apt/lists/*;\n\n# update packages\n#RUN apt-get update\n#\n#RUN apt-get install -y build-essential tcl valgrind\n#\n#ADD . /usr/src/redis\n#\n#RUN make -C /usr/src/redis\n#\n## in initial testing, \"make test\" was failing for reasons that were very hard to track down (so for now, we run them, but don't worry about them #failing)\n#RUN make -C /usr/src/redis test || true\n#\n#RUN make -C /usr/src/redis install\n#\nUSER redis\n\nEXPOSE 6379\n\n# CMD [ \"redis-server\", \"--bind\", \"0.0.0.0\" ]\n##################### REDIS - INSTALLATION END #####################\n\n##################### NODE #####################\nFROM dockerfile/python\n\nRUN \\\n  cd /tmp && \\\n  wget https://nodejs.org/dist/node-latest.tar.gz && \\\n  tar xvzf node-latest.tar.gz && \\\n  rm -f node-latest.tar.gz && \\\n  cd node-v* && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  CXX=\"g++ -Wno-unused-local-typedefs\" make && \\\n  CXX=\"g++ -Wno-unused-local-typedefs\" make install && \\\n  cd /tmp && \\\n  rm -rf /tmp/node-v* && \\\n  echo '\\n# Node.js\\nexport PATH=\"node_modules/.bin:$PATH\"' >> /root/.bash_profile\n\nRUN sudo apt-get install --no-install-recommends -y npm && rm -rf /var/lib/apt/lists/*;\n\nADD . /usr/src/app\nWORKDIR /usr/src/app\n\n# install your application's dependencies\nRUN npm install && npm cache clean --force;\n\n# replace this with your application's default port\nEXPOSE 80\n\n###################### END NODE #####################\n\n##################### RUN COMMANDS VIA SUPERVISOR #####################\nCMD [\"/usr/bin/supervisord\", \"-n\"]\n\n\n\n\n\n###\n## NodeJS MongoDB Redis\n##\n## This creates an image which contains an environment for NodeJS app ecosystem\n## - Node.js 0.10.23\n## - MongoDB 2.4.8\n## - Redis 2.4.15\n###\n#\n#FROM truongsinh/nodejs\n#\n#MAINTAINER TruongSinh Tran-Nguyen <i@truongsinh.pro>\n#\n## Fix upstart under a virtual host https://github.com/dotcloud/docker/issues/1024\n#RUN dpkg-divert --local --rename --add /sbin/initctl \\\n# && ln -s /bin/true /sbin/initctl\n#\n## Configure Package Management System (APT) & install MongoDB\n#RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10 \\\n# && echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | tee /etc/apt/sources.list.d/mongodb.list \\\n# && apt-get update \\\n# && apt-get install -y mongodb-10gen\n#\n## Redis server\n#RUN apt-get install -y redis-server\n#\n## Start MongoDB\n#CMD mongod --fork -f /etc/mongodb.conf \\\n# && redis-server /etc/redis/redis.conf \\\n# && bash\n"
}