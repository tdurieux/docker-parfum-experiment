{
  "startTime": 1674252530622,
  "endTime": 1674252530863,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# See CKAN docs on installation from Docker Compose on usage\nFROM debian:stretch\nMAINTAINER Open Knowledge\n\n# Install required system packages\nRUN apt-get -q -y update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get -q -y upgrade \\\n    && apt-get -q --no-install-recommends -y install \\\n        python-dev \\\n        python-pip \\\n        python-virtualenv \\\n        python-wheel \\\n        python3-dev \\\n        python3-pip \\\n        python3-virtualenv \\\n        python3-wheel \\\n        libpq-dev \\\n        libxml2-dev \\\n        libxslt-dev \\\n        libgeos-dev \\\n        libssl-dev \\\n        libffi-dev \\\n        postgresql-client \\\n        build-essential \\\n        git-core \\\n        vim \\\n        wget \\\n    && apt-get -q clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Define environment variables\nENV CKAN_HOME /usr/lib/ckan\nENV CKAN_VENV $CKAN_HOME/venv\nENV CKAN_CONFIG /etc/ckan\nENV CKAN_STORAGE_PATH=/var/lib/ckan\n\n# Build-time variables specified by docker-compose.yml / .env\nARG CKAN_SITE_URL\n\n# Create ckan user\nRUN useradd -r -u 900 -m -c \"ckan account\" -d $CKAN_HOME -s /bin/false ckan\n\n# Setup virtual environment for CKAN\nRUN mkdir -p $CKAN_VENV $CKAN_CONFIG $CKAN_STORAGE_PATH && \\\n    virtualenv $CKAN_VENV && \\\n    ln -s $CKAN_VENV/bin/pip /usr/local/bin/ckan-pip &&\\\n    ln -s $CKAN_VENV/bin/paster /usr/local/bin/ckan-paster\n\n# Setup CKAN\nADD . $CKAN_VENV/src/ckan/\nRUN ckan-pip install -U pip && \\\n    ckan-pip install --upgrade --no-cache-dir -r $CKAN_VENV/src/ckan/requirement-setuptools.txt && \\\n    ckan-pip install --upgrade --no-cache-dir -r $CKAN_VENV/src/ckan/requirements.txt && \\\n    ckan-pip install -e $CKAN_VENV/src/ckan/ && \\\n    ln -s $CKAN_VENV/src/ckan/ckan/config/who.ini $CKAN_CONFIG/who.ini && \\\n    cp -v $CKAN_VENV/src/ckan/contrib/docker/ckan-entrypoint.sh /ckan-entrypoint.sh && \\\n    chmod +x /ckan-entrypoint.sh && \\\n    chown -R ckan:ckan $CKAN_HOME $CKAN_VENV $CKAN_CONFIG $CKAN_STORAGE_PATH\n\nENTRYPOINT [\"/ckan-entrypoint.sh\"]\n\nUSER ckan\nEXPOSE 5000\n\nCMD [\"ckan-paster\",\"serve\",\"/etc/ckan/production.ini\"]\n"
}