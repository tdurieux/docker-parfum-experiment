{
  "startTime": 1674236543627,
  "endTime": 1674236543965,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG TZ=America/Chicago\n\nFROM umputun/baseimage:buildgo-latest as build-backend\n\nADD . /go/src/github.com/umputun/secrets\nWORKDIR /go/src/github.com/umputun/secrets/backend\n\nRUN cd app && go test -v $(go list -e ./... | grep -v vendor)\n\nRUN gometalinter --disable-all --deadline=300s --vendor --enable=vet --enable=vetshadow --enable=golint \\\n    --enable=staticcheck --enable=ineffassign --enable=goconst --enable=errcheck --enable=unconvert \\\n    --enable=deadcode  --enable=gosimple --exclude=test --exclude=mock --exclude=vendor ./...\n\nRUN go build -o secrets -ldflags \"-X main.revision=$(git rev-parse --abbrev-ref HEAD)-$(git describe --abbrev=7 --always --tags)-$(date +%Y%m%d-%H:%M:%S) -s -w\" ./app\n\n\nFROM node:9.4-alpine as build-frontend\n\nADD webapp /srv/webapp\nRUN apk add --no-cache --update git python make g++\nRUN \\\n    cd /srv/webapp && \\\n    npm i --production && npm run build && npm cache clean --force;\n\n\nFROM alpine:3.7\n\nARG TZ\n\nCOPY --from=build-backend /go/src/github.com/umputun/secrets/backend/secrets /srv/\nCOPY --from=build-frontend /srv/webapp/public/ /srv/docroot\n\nRUN \\\n    apk add --update --no-cache tzdata && \\\n    cp /usr/share/zoneinfo/$TZ /etc/localtime &&\\\n    adduser -s /bin/bash -D -u 1001 secrets && \\\n    chown -R secrets:secrets /srv\n\nEXPOSE 8080\nUSER secrets\nWORKDIR /srv\nVOLUME [\"/srv/docroot\"]\n\nENTRYPOINT [\"/srv/secrets\"]"
}