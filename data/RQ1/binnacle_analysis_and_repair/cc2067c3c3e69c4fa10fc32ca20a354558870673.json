{
  "startTime": 1674641736325,
  "endTime": 1674641736380,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker image file that describes Fedora 28 image with PowerShell installed from Microsoft YUM Repo\nARG fromTag=28\nARG imageRepo=fedora\n\nFROM ${imageRepo}:${fromTag} AS installer-env\n\nARG PS_VERSION=6.1.0\nARG PS_PACKAGE=powershell-${PS_VERSION}-1.rhel.7.x86_64.rpm\nARG PS_PACKAGE_URL=https://github.com/PowerShell/PowerShell/releases/download/v${PS_VERSION}/${PS_PACKAGE}\n\n# Define ENVs for Localization/Globalization\nENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false \\\n    LC_ALL=en_US.UTF-8 \\\n    LANG=en_US.UTF-8 \\\n    # set a fixed location for the Module analysis cache\n    PSModuleAnalysisCachePath=/var/cache/microsoft/powershell/PSModuleAnalysisCache/ModuleAnalysisCache\n\n# Install dependencies and clean up\nRUN curl -f -sSL ${PS_PACKAGE_URL} -o /tmp/powershell.rpm \\\n    && dnf install -y /tmp/powershell.rpm \\\n    && dnf install -y \\\n\t# less is needed for help\n\tless \\\n    # Needed to run localdef\n        glibc-locale-source \\\n    # Invoke-WebRequest doesn't work correctly without this\n        compat-openssl10 \\\n\tgssntlmssp \\\n    && dnf upgrade-minimal -y --security \\\n    && dnf clean all \\\n    && localedef --charmap=UTF-8 --inputfile=en_US $LANG \\\n    # remove powershell package\n    && rm /tmp/powershell.rpm \\\n    # intialize powershell module cache\n    && pwsh \\\n        -NoLogo \\\n        -NoProfile \\\n        -Command \" \\\n          \\$ErrorActionPreference = 'Stop' ; \\\n          \\$ProgressPreference = 'SilentlyContinue' ; \\\n          while(!(Test-Path -Path \\$env:PSModuleAnalysisCachePath)) {  \\\n            Write-Host \"'Waiting for $env:PSModuleAnalysisCachePath'\" ; \\\n            Start-Sleep -Seconds 6 ; \\\n          }\"\n\n# Define args needed only for the labels\nARG VCS_REF=\"none\"\nARG IMAGE_NAME=mcr.microsoft.com/powershell:fedora28\n\nLABEL maintainer=\"PowerShell Team <powershellteam@hotmail.com>\" \\\n      readme.md=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      description=\"This Dockerfile will install the latest release of PowerShell.\" \\\n      org.label-schema.usage=\"https://github.com/PowerShell/PowerShell/tree/master/docker#run-the-docker-image-you-built\" \\\n      org.label-schema.url=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      org.label-schema.vcs-url=\"https://github.com/PowerShell/PowerShell-Docker\" \\\n      org.label-schema.name=\"powershell\" \\\n      org.label-schema.vendor=\"PowerShell\" \\\n      org.label-schema.version=${PS_VERSION} \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.vcs-ref=${VCS_REF} \\\n      org.label-schema.docker.cmd=\"docker run ${IMAGE_NAME} pwsh -c '$psversiontable'\" \\\n      org.label-schema.docker.cmd.devel=\"docker run ${IMAGE_NAME}\" \\\n      org.label-schema.docker.cmd.test=\"docker run ${IMAGE_NAME} pwsh -c Invoke-Pester\" \\\n      org.label-schema.docker.cmd.help=\"docker run ${IMAGE_NAME} pwsh -c Get-Help\"\n\n# Use PowerShell as the default shell\n# Use array to avoid Docker prepending /bin/sh -c\nCMD [ \"pwsh\" ]\n"
}