{
  "startTime": 1674252135608,
  "endTime": 1674252135701,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Node.js build & development container for the WebApp\n#\nFROM node:7.0.0\n\n# Install python & the AWS CLI\n# The AWS CLI relies on Python\n# https://aws.amazon.com/cli/\nRUN apt-get update && \\\n    apt-get install --no-install-recommends python python-setuptools --yes && \\\n    easy_install pip && \\\n    pip install --no-cache-dir awscli && \\\n    mkdir -p /usr/src/app && \\\n    rm -rf /var/lib/apt/lists/* && rm -rf /usr/src/app\n\n# Copy AWS credentials\nCOPY deployment/.aws /root/.aws\n\n# Add docker-entrypoint.sh\nCOPY deployment/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\n# Set the app source code as workdir\nWORKDIR /usr/src/app\n\n# Install app dependencies\nCOPY app/package.json /usr/src/app/\nRUN npm install --no-optional && npm cache clean --force;\n\n# Bundle app source\nCOPY app /usr/src/app\n\n# Build the actual app\n# Sample build. You should replace this with a build command of your WebApp stack, e.g: React, Angular2, ...\nRUN\tnpm run build\n\n# Take the latest commit hash as unique version\n# Is used by the docker-entrypoint.sh to build artifacts\nCOPY .git/refs/heads/master /commit_hash.txt\n\n# Create & upload\nRUN /usr/local/bin/docker-entrypoint.sh create\nRUN /usr/local/bin/docker-entrypoint.sh upload docker-tmp-release\n"
}