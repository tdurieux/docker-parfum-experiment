{
  "startTime": 1674241775633,
  "endTime": 1674241775808,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 138
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedDockerfile": "# ======================================================================================\n# Builds an all-inclusive fat Docker image that contains:\n#\n# 1. the tools needed to build render web services and clients\n# 2. the render source code and dependent libraries\n# 3. a Jetty web server\n# 4. a MongoDB server\n#\n# The steps in this Dockerfile should match the basic installation steps listed at:\n#   https://github.com/saalfeldlab/render/blob/master/docs/src/site/markdown/render-ws.md\n#\n# The default endpoint for the image runs a script (run_example_steps.sh)\n# that contains the render web services example steps listed at:\n#   https://github.com/saalfeldlab/render/blob/master/docs/src/site/markdown/render-ws-example.md\n#\n# To build the example:\n#   copy this file to your local directory (save it as Dockerfile)\n#   docker build -t render_example_1:latest .\n#\n# To run an example container:\n#   docker run -it --rm render_example_1:latest\n#\n# To launch interactive bash shell within an example container:\n#   docker run -it --entrypoint /bin/bash --rm render_example_1:latest\n# ======================================================================================\n\nFROM ubuntu:16.04\nLABEL maintainer=\"Eric Trautman <trautmane@janelia.hhmi.org>\"\n\nRUN apt-get update\nRUN apt-get -y upgrade\n\n# From\n\n# 1: Install Git and Maven\nRUN apt-get install --no-install-recommends -y git \\\n  maven \\\n  curl && rm -rf /var/lib/apt/lists/*;\n\n# 2. Clone the Repository\nWORKDIR /var/www/\nRUN git clone https://github.com/saalfeldlab/render.git\n\n# 3. Install JDK and Jetty\nWORKDIR /var/www/render/\n\n# Uncomment next line to switch to different source branch\n# RUN git checkout hierarchical\n\nRUN ./render-ws/src/main/scripts/install.sh\n\n# 4. Build the Render Modules\nRUN { echo 'JAVA_HOME=\"$(readlink -m ./deploy/jdk*)\"'; } >> ~/.mavenrc\nRUN mvn --version; mvn -Dproject.build.sourceEncoding=UTF-8 package\n\n# 5. Deploy Web Service\nRUN cp render-ws/target/render-ws-*.war deploy/jetty_base/webapps/render-ws.war\n\n# 6. Install MongoDB 4.0.6\n\n# needed for access to https mongodb resources\nRUN apt-get install -y --no-install-recommends apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\n# steps from https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4 && \\\n    echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/4.0 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-4.0.list && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y mongodb && \\\n    apt-get install --no-install-recommends -y mongodb-org=4.0.6 mongodb-org-server=4.0.6 mongodb-org-shell=4.0.6 mongodb-org-mongos=4.0.6 mongodb-org-tools=4.0.6 && \\\n    echo \"mongodb-org hold\" | dpkg --set-selections && \\\n    echo \"mongodb-org-server hold\" | dpkg --set-selections && \\\n    echo \"mongodb-org-shell hold\" | dpkg --set-selections && \\\n    echo \"mongodb-org-mongos hold\" | dpkg --set-selections && \\\n    echo \"mongodb-org-tools hold\" | dpkg --set-selections && rm -rf /var/lib/apt/lists/*;\n\n# NOTE: This file has to be named mongodb.service (instead of mongod.service) for some reason\nRUN curl -f -o /lib/systemd/system/mongodb.service \"https://raw.githubusercontent.com/mongodb/mongo/v4.0/rpm/mongod.service\"\n\n# expose the render port\nEXPOSE 8080\n\nCMD ./render-ws-java-client/src/main/resources/example_1/run_example_steps.sh"
}