{
  "startTime": 1674243576317,
  "endTime": 1674243576501,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 23,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 23,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## DOCKER Image with postgres 9.6, Java and Zenvisage\nFROM postgres:9.6\nMAINTAINER Matias Carrasco Kind <mgckind@gmail.com>\n# Using postgres as base image, ideally DB should be running in a separate container\n# postgres  images is based on debian\n# add webupd8 repository to install Java\nRUN \\\n    echo \"===> add webupd8 repository...\"  && \\\n    echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee /etc/apt/sources.list.d/webupd8team-java.list  && \\\n    echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list  && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886  && \\\n    apt-get update  && \\\n    \\\n    \\\n    echo \"===> install Java\"  && \\\n    echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections  && \\\n    echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y --force-yes oracle-java8-installer oracle-java8-set-default && \\\n\n\n    echo \"===> clean up...\" && \\\n    rm -rf /var/cache/oracle-jdk8-installer && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n# Install maven, supervisor and vi\nRUN apt-get update && apt-get install --no-install-recommends -y maven supervisor vim git && rm -rf /var/lib/apt/lists/*;\nENV JAVA_HOME /usr/lib/jvm/java-8-oracle\nRUN mkdir /home/postgres\n# Add zenvisage (can also pull from master directly), zenvisage folder needs to be on docker building folder\n#ADD zenvisage/ /home/postgres/zenvisage/\nWORKDIR /home/postgres\nRUN git clone https://github.com/zenvisage/zenvisage.git &&  (cd zenvisage/ && git checkout v2.0)\nWORKDIR /home/postgres/zenvisage\nRUN chown -R postgres:postgres /home/postgres\nUSER postgres\n# run zenvisage build script\nRUN sh build.sh\n# Create startup script with postgres configuration and run the script\nRUN echo \"#!/bin/bash \" >> startup.sh\nRUN echo \"set -e \" >> startup.sh\nRUN echo \"nohup /usr/local/bin/docker-entrypoint.sh postgres &\" >> startup.sh\nRUN echo \"sleep 6 \" >> startup.sh\nRUN echo \"psql -c \\\"ALTER USER postgres WITH PASSWORD 'zenvisage';\\\" \" >> startup.sh\nRUN echo \"psql -c \\\"ALTER USER postgres WITH SUPERUSER;\\\" \" >> startup.sh\nRUN echo \"psql -c \\\"DROP schema public cascade; CREATE schema public;\\\" \" >> startup.sh\nRUN echo \"psql -c \\\"CREATE TABLE zenvisage_metafilelocation (database TEXT, metafilelocation TEXT, csvfilelocation TEXT);\\\" \" >> startup.sh\nRUN echo \"psql -c \\\"CREATE TABLE zenvisage_metatable (tablename TEXT, attribute TEXT, type TEXT, axis TEXT, min FLOAT, max FLOAT);\\\" \" >> startup.sh\nRUN echo \"psql -c \\\"CREATE TABLE zenvisage_dynamic_classes (tablename TEXT, attribute TEXT, ranges TEXT);\\\" \" >> startup.sh\nRUN echo \"sh LMemRun.sh \" >> startup.sh\n# Run the startup script when creating container\nCMD [\"sh\",\"/home/postgres/zenvisage/startup.sh\"]\n"
}