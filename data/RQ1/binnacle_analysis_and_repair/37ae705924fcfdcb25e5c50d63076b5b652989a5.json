{
  "startTime": 1674243340038,
  "endTime": 1674243340258,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile for ocserv\n#\n\nFROM alpine\nMAINTAINER kev <noreply@easypi.pro>\n\nENV OCSERV_VERSION 0.11.8\nENV OCSERV_URL ftp://ftp.infradead.org/pub/ocserv/ocserv-$OCSERV_VERSION.tar.xz\n\nRUN buildDeps=\" \\\n        curl \\\n        g++ \\\n        gnutls-dev \\\n        gpgme \\\n        libev-dev \\\n        libnl3-dev \\\n        libseccomp-dev \\\n        linux-headers \\\n        linux-pam-dev \\\n        lz4-dev \\\n        make \\\n        readline-dev \\\n        tar \\\n        xz \\\n    \"; \\\n    set -x \\\n    && apk add --update --virtual .build-deps $buildDeps \\\n    && curl -f -SL $OCSERV_URL -o ocserv.tar.xz \\\n    && curl -f -SL $OCSERV_URL.sig -o ocserv.tar.xz.sig \\\n    && gpg --batch --keyserver pgp.mit.edu --recv-key 7F343FA7 \\\n    && gpg --batch --keyserver pgp.mit.edu --recv-key 96865171 \\\n    && gpg --batch --verify ocserv.tar.xz.sig \\\n    && mkdir -p /usr/src/ocserv \\\n    && tar -xf ocserv.tar.xz -C /usr/src/ocserv --strip-components=1 \\\n    && rm ocserv.tar.xz* \\\n    && cd /usr/src/ocserv \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && mkdir -p /etc/ocserv \\\n    && cp /usr/src/ocserv/doc/sample.config /etc/ocserv/ocserv.conf \\\n    && cd / \\\n    && rm -rf /usr/src/ocserv \\\n    && runDeps=\"$( \\\n        scanelf --needed --nobanner /usr/local/sbin/ocserv \\\n            | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n            | xargs -r apk info --installed \\\n            | sort -u \\\n        )\" \\\n    && apk add --virtual .run-deps $runDeps gnutls-utils iptables \\\n    && apk del .build-deps \\\n    && rm -rf /var/cache/apk/*\n\nRUN set -xe \\\n    && mkdir -p /etc/ocserv/certs \\\n    && mkdir -p /etc/ocserv/config-per-user \\\n    && mkdir -p /etc/ocserv/config-per-group \\\n    && mkdir -p /etc/ocserv/defaults \\\n    && touch /etc/ocserv/defaults/user.conf \\\n    && touch /etc/ocserv/defaults/group.conf \\\n    && touch /etc/ocserv/ocpasswd \\\n    && sed -i -e 's@\\./sample.passwd@/etc/ocserv/ocpasswd@' \\\n              -e 's@\\.\\./tests/@/etc/ocserv/@' \\\n              -e 's@^#cert-group-oid =@cert-group-oid =@' \\\n              -e 's@^#compression =.*@compression = true@' \\\n              -e 's@^#config-per-@config-per-@' \\\n              -e 's@^#default-@default-@' \\\n              -e 's@^#enable-auth = \"certificate\"$@enable-auth = \"certificate\"@' \\\n              -e 's@^default-domain@#&@' \\\n              -e 's@^dns =.*@dns = 8.8.8.8@' \\\n              -e 's@^max-clients =.*@max-clients = 0@' \\\n              -e 's@^max-same-clients =.*@max-same-clients = 0@' \\\n              -e 's@^route@#&@' \\\n              -e 's@^try-mtu-discovery =.*@try-mtu-discovery = true@' \\\n              /etc/ocserv/ocserv.conf\n\nCOPY init.sh /init.sh\nCOPY docker-entrypoint.sh /entrypoint.sh\n\nVOLUME /etc/ocserv\nWORKDIR /etc/ocserv\n\nENV VPN_DOMAIN=vpn.easypi.pro    \\\n    VPN_NETWORK=10.20.30.0       \\\n    VPN_NETMASK=255.255.255.0    \\\n    LAN_NETWORK=192.168.0.0      \\\n    LAN_NETMASK=255.255.0.0      \\\n    VPN_USERNAME=username        \\\n    VPN_PASSWORD=password        \\\n    TERM=xterm\n\nEXPOSE 443/tcp 443/udp\n\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}