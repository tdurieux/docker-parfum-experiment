{
  "startTime": 1674251594578,
  "endTime": 1674251594793,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 2,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 2,
        "columnEnd": 97
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 70
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 72
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 91
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:2.5.1 as builder\n\n# Necessary for bundler to properly install some gems\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\n# add nodejs and yarn dependencies for the frontend\nRUN curl -f -sL https://deb.nodesource.com/setup_9.x | bash - && \\\n  curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n  echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n\nRUN gem install bundler\n\nRUN apt-get update -qq && apt-get upgrade -y && \\\n  apt-get install --no-install-recommends -y build-essential libpq-dev mysql-client nodejs libreoffice imagemagick unzip ghostscript yarn && rm -rf /var/lib/apt/lists/*;\n\n# install clamav for antivirus\n# fetch clamav local database\nRUN apt-get install --no-install-recommends -y clamav-freshclam clamav-daemon libclamav-dev && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /var/lib/clamav && \\\n  wget -O /var/lib/clamav/main.cvd https://database.clamav.net/main.cvd && \\\n  wget -O /var/lib/clamav/daily.cvd https://database.clamav.net/daily.cvd && \\\n  wget -O /var/lib/clamav/bytecode.cvd https://database.clamav.net/bytecode.cvd && \\\n  chown clamav:clamav /var/lib/clamav/*.cvd\n\nRUN mkdir -p /opt/fits && \\\n  curl -fSL -o /opt/fits-1.0.5.zip https://projects.iq.harvard.edu/files/fits/files/fits-1.0.5.zip && \\\n  cd /opt && unzip fits-1.0.5.zip && chmod +X fits-1.0.5/fits.sh\n\nRUN mkdir /data\nWORKDIR /data\n\nADD Gemfile /data/Gemfile\nADD Gemfile.lock /data/Gemfile.lock\nRUN mkdir /data/build\n\nARG RAILS_ENV=development\nENV RAILS_ENV=${RAILS_ENV}\n\nADD ./build/install_gems.sh /data/build\nRUN ./build/install_gems.sh\n\nADD . /data\n\nFROM builder\n\nRUN if [ \"${RAILS_ENV}\" = \"production\" ]; then \\\n  echo \"Precompiling assets with $RAILS_ENV environment\"; \\\n  RAILS_ENV=$RAILS_ENV SECRET_KEY_BASE=temporary bundle exec rails assets:precompile; \\\n  cp public/assets/404-*.html public/404.html; \\\n  cp public/assets/500-*.html public/500.html; \\\n  fi\n"
}