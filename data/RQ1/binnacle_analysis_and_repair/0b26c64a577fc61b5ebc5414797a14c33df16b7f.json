{
  "startTime": 1674241273417,
  "endTime": 1674241273637,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 58,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 1,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 105
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker image for react native.\n\nFROM node:4.1.1\n\nMAINTAINER Maxime Demolin <akbarova.armia@gmail.com>\n\n\n# Setup environment variables\nENV PATH $PATH:node_modules/.bin\n\n\n# Install Java\nRUN apt-get update -q && \\\n\tapt-get install -qy --no-install-recommends python-dev default-jdk && rm -rf /var/lib/apt/lists/*;\n\n\n# Install Android SDK\n\n## Set correct environment variables.\nENV ANDROID_SDK_FILE android-sdk_r24.4.1-linux.tgz\nENV ANDROID_SDK_URL http://dl.google.com/android/$ANDROID_SDK_FILE\n\n## Install 32bit support for Android SDK\nRUN dpkg --add-architecture i386 && \\\n    apt-get update -q && \\\n    apt-get install -qy --no-install-recommends libstdc++6:i386 libgcc1:i386 zlib1g:i386 libncurses5:i386 && rm -rf /var/lib/apt/lists/*;\n\n\n## Install SDK\nENV ANDROID_HOME /usr/local/android-sdk-linux\nRUN cd /usr/local && \\\n    wget $ANDROID_SDK_URL && \\\n    tar -xzf $ANDROID_SDK_FILE && \\\n    export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools && \\\n    chgrp -R users $ANDROID_HOME && \\\n    chmod -R 0775 $ANDROID_HOME && \\\n    rm $ANDROID_SDK_FILE\n\n# Install android tools and system-image.\nENV PATH $PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/23.0.1\nRUN (while true ; do sleep 5; echo y; done) | android update sdk --no-ui --force --all --filter platform-tools,android-23,build-tools-23.0.1,extra-android-support,extra-android-m2repository,sys-img-x86_64-android-23,extra-google-m2repository\n\n\n# Install node modules\n\n## Install yarn\nRUN npm install -g yarn && npm cache clean --force;\n\n## Install react native\nRUN npm install -g react-native-cli@1.0.0 && npm cache clean --force;\n\n## Clean up when done\nRUN apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    npm cache clear --force\n\n\n# Install watchman\nRUN git clone https://github.com/facebook/watchman.git\nRUN cd watchman && git checkout v4.7.0 && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\nRUN rm -rf watchman\n\n# Default react-native web server port\nEXPOSE 8081\n\n\n# User creation\nENV USERNAME dev\n\nRUN adduser --disabled-password --gecos '' $USERNAME\n\n\n# Add Tini\nENV TINI_VERSION v0.10.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\n\nUSER $USERNAME\n\n# Set workdir\n# You'll need to run this image with a volume mapped to /home/dev (i.e. -v $(pwd):/home/dev) or override this value\nWORKDIR /home/$USERNAME/app\n\n# Tell gradle to store dependencies in a sub directory of the android project\n# this persists the dependencies between builds\nENV GRADLE_USER_HOME /home/$USERNAME/app/android/gradle_deps\n\nENTRYPOINT [\"/tini\", \"--\"]\n"
}