{
  "startTime": 1674249815890,
  "endTime": 1674249816024,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 6,
        "columnEnd": 17
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\nUSER root\n\nRUN yum install wget -y && rm -rf /var/cache/yum\n# Change mirrors\nRUN mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\nRUN wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo\n\nENV HOME /root\n# Install alinode v3.11.0 (node v8.11.0)\nENV ALINODE_VERSION 3.11.0\nENV TNVM_DIR /root/.tnvm\n\nRUN wget -O- https://raw.githubusercontent.com/aliyun-node/tnvm/master/install.sh | bash\n\nRUN source $HOME/.bashrc \\\n    && tnvm install \"alinode-v$ALINODE_VERSION\" \\\n    && tnvm use \"alinode-v$ALINODE_VERSION\" \\\n    && npm install @alicloud/agenthub -g && npm cache clean --force;\n\n# Create app directory\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\nCOPY . /usr/src/app\nRUN rm -rf /usr/src/app/node_modules\n\n# Build static file\nRUN source $HOME/.bashrc \\\n    && npm install \\\n    && npm run build && npm cache clean --force;\n\nWORKDIR /usr/src/app/server\n\n# Build server file\nRUN source $HOME/.bashrc \\\n   && npm install && npm cache clean --force;\n\nEXPOSE 3000\n\nRUN [ \"chmod\", \"+x\", \"./docker-entrypoint.sh\" ]\n\nENTRYPOINT [ \"./docker-entrypoint.sh\" ]\n"
}