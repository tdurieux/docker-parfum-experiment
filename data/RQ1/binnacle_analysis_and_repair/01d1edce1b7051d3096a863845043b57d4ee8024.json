{
  "startTime": 1674641726742,
  "endTime": 1674641726856,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM microsoft/dotnet:2.2-sdk AS build-env\nWORKDIR /app\n\n# Install node\nENV NODE_VERSION 8.9.4\nENV NODE_DOWNLOAD_SHA 21fb4690e349f82d708ae766def01d7fec1b085ce1f5ab30d9bda8ee126ca8fc\nRUN curl -f -SL \"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz\" --output nodejs.tar.gz \\\n    && echo \"$NODE_DOWNLOAD_SHA  nodejs.tar.gz\" | sha256sum -c - \\\n    && tar -xzf \"nodejs.tar.gz\" -C /usr/local --strip-components=1 \\\n    && rm nodejs.tar.gz \\\n    && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nRUN npm i npm@latest -g && npm cache clean --force;\nRUN npm install gulp -g && npm cache clean --force;\n\n# Copy necessary files and restore as distinct layer\nCOPY *.csproj ./\nRUN dotnet restore -s https://api.nuget.org/v3/index.json -s https://www.myget.org/F/pitstop/api/v3/index.json\n\n# Copy everything else and build\nCOPY . ./\nRUN npm install && npm cache clean --force;\nRUN gulp default\nRUN dotnet publish -c Release -o out\n\n# Build runtime image\nFROM microsoft/dotnet:2.2-aspnetcore-runtime\nCOPY --from=build-env /app/out .\n\n# Expose ports\nEXPOSE 7000/tcp\nENV ASPNETCORE_URLS http://*:7000\nHEALTHCHECK --interval=30s --timeout=3s --retries=1 CMD curl --silent --fail http://localhost:7000/hc || exit 1\n\n# Start\nENTRYPOINT [\"dotnet\", \"WebApp.dll\"]\n"
}