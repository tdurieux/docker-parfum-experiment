{
  "startTime": 1674233994324,
  "endTime": 1674233994695,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Galaxy - Stable\n#\n# VERSION       Galaxy-central\n\nFROM ubuntu:18.04\n\nMAINTAINER Björn A. Grüning, bjoern.gruening@gmail.com\n\nARG ANSIBLE_REPO=galaxyproject/ansible-galaxy-extras\nARG ANSIBLE_RELEASE=master\n\nENV DEBIAN_FRONTEND=noninteractive \\\nGALAXY_USER=galaxy \\\nGALAXY_UID=1450 \\\nGALAXY_GID=1450 \\\nGALAXY_HOME=/home/galaxy \\\nGALAXY_LOGS_DIR=/home/galaxy/logs \\\nGALAXY_ROOT=/export/galaxy-central \\\nGALAXY_VIRTUAL_ENV=/export/venv \\\nGALAXY_CONFIG_DIR=/etc/galaxy \\\nEXPORT_DIR=/export \\\n# Setting a standard encoding. This can get important for things like the unix sort tool.\nLC_ALL=en_US.UTF-8 \\\nLANG=en_US.UTF-8\n\nENV \\\nGALAXY_CONFIG_FILE=$GALAXY_CONFIG_DIR/galaxy.yml \\\nGALAXY_CONFIG_STATIC_ENABLED=False \\\nGALAXY_CONFIG_DATABASE_CONNECTION=postgresql://localhost/galaxy?client_encoding=utf8 \\\nGALAXY_CONFIG_TEMPLATE_CACHE_PATH=/export/galaxy-central/database/compiled_templates \\\nGALAXY_CONFIG_CITATION_CACHE_DATA_DIR=/export/galaxy-central/database/citations/data \\\nGALAXY_CONFIG_CLUSTER_FILES_DIRECTORY=/export/galaxy-central/database/pbs \\\nGALAXY_CONFIG_WATCH_TOOL_DATA_DIR=True \\\nGALAXY_CONFIG_FTP_UPLOAD_DIR=/export/ftp \\\nGALAXY_CONFIG_FTP_UPLOAD_SITE=galaxy.docker.org \\\nGALAXY_CONFIG_USE_PBKDF2=False \\\nGALAXY_CONFIG_NGINX_X_ACCEL_REDIRECT_BASE=/_x_accel_redirect \\\nGALAXY_CONFIG_NGINX_X_ARCHIVE_FILES_BASE=/_x_accel_redirect \\\nGALAXY_CONFIG_DYNAMIC_PROXY_MANAGE=False \\\nGALAXY_CONFIG_VISUALIZATION_PLUGINS_DIRECTORY=config/plugins/visualizations \\\nGALAXY_CONFIG_TRUST_IPYTHON_NOTEBOOK_CONVERSION=True \\\nGALAXY_CONFIG_TOOLFORM_UPGRADE=True \\\nGALAXY_CONFIG_SANITIZE_ALL_HTML=False \\\nGALAXY_CONFIG_TOOLFORM_UPGRADE=True \\\nGALAXY_CONFIG_WELCOME_URL=/web/welcome.html \\\nNGINX_WELCOME_LOCATION=/web \\\nGALAXY_CONFIG_ENABLE_QUOTAS=True \\\nNGINX_WELCOME_PATH=/export/welcome \\\nGALAXY_CONFIG_OVERRIDE_DEBUG=False \\\nGALAXY_CONFIG_FILE_PATH=$GALAXY_ROOT/database/files \\\nGALAXY_CONFIG_NEW_FILE_PATH=$GALAXY_ROOT/database/files \\\nGALAXY_CONFIG_OVERRIDE_DEBUG=False \\\nGALAXY_CONDA_PREFIX=/export/tool_deps/_conda \\\nGALAXY_CONFIG_BRAND=\"Galaxy Docker Build\" \\\nGALAXY_CONFIG_TOOL_DEPENDENCY_DIR=/export/tool_deps \\\nGALAXY_CONFIG_TOOL_PATH=$EXPORT_DIR/galaxy-central/tools \\\nGALAXY_CONFIG_JOB_WORKING_DIRECTORY=$GALAXY_ROOT/database/job_working_directory \\\n# We need to set $HOME for some Tool Shed tools (e.g Perl libs with $HOME/.cpan)\nHOME=$GALAXY_HOME\n\n# not to call sync() after package extraction and deactivate apt cache\nRUN echo \"force-unsafe-io\" > /etc/dpkg/dpkg.cfg.d/02apt-speedup && \\\n    echo 'Acquire::http::Timeout \"20\";' > /etc/apt/apt.conf.d/98AcquireTimeout && \\\n    echo 'Acquire::Retries \"5\";' > /etc/apt/apt.conf.d/99AcquireRetries && \\\n    apt-get -qq update && apt-get install --no-install-recommends -y locales && \\\n    locale-gen en_US.UTF-8 && dpkg-reconfigure locales && \\\n    apt-get install --no-install-recommends -y apt-transport-https gnupg && \\\n    echo \"deb [arch=amd64] http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main\" > /etc/apt/sources.list.d/ansible.list && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7BB9C367 && \\\n    apt-get update -qq && apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y sudo \\\n        supervisor linux-image-extra-virtual munge \\\n        ansible nano python-pip wget htcondor \\\n        unattended-upgrades \\\n        gridengine-drmaa1.0 && \\\n    pip install --no-cache-dir ephemeris virtualenv && \\\n    apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    mkdir -p /tmp/download && \\\n    wget -qO - https://download.docker.com/linux/static/stable/x86_64/docker-17.06.2-ce.tgz | tar -xz -C /tmp/download && \\\n    mv /tmp/download/docker/docker /usr/bin/ && \\\n    rm -rf /tmp/download && \\\n    rm -rf ~/.cache/\n\nRUN touch /var/log/condor/StartLog /var/log/condor/StarterLog /var/log/condor/CollectorLog /var/log/condor/NegotiatorLog && \\\n    mkdir -p /var/run/condor/ /var/lock/condor/ && \\\n    chown -R condor: /var/log/condor/StartLog /var/log/condor/StarterLog /var/log/condor/CollectorLog /var/log/condor/NegotiatorLog /var/run/condor/ /var/lock/condor/\n\nRUN groupadd -r $GALAXY_USER -g $GALAXY_GID && \\\n    useradd -u $GALAXY_UID -r -g $GALAXY_USER -d $GALAXY_HOME -c \"Galaxy user\" $GALAXY_USER && \\\n    mkdir $EXPORT_DIR $GALAXY_LOGS_DIR && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_HOME $GALAXY_LOGS_DIR $EXPORT_DIR\nADD ./bashrc $GALAXY_HOME/.bashrc\n\n# Container Style\nADD condor_config.local /etc/condor/condor_config.local\n# fetch ansible galaxy extras\nRUN mkdir -p /ansible/galaxyprojectdotorg.galaxyextras && cd /ansible/galaxyprojectdotorg.galaxyextras && wget -pO- https://api.github.com/repos/$ANSIBLE_REPO/tarball/$ANSIBLE_RELEASE | tar xvz --strip-components=1\nADD provision.yml /ansible/provision.yml\n\n# Install database script\nADD ./install_db.sh /usr/bin/install_db.sh\n\n# script to install BioJS visualizations\nADD install_biojs_vis.sh /usr/bin/install-biojs\n\nADD startup.sh /usr/bin/startup\n\n# Make scripts runnable\nRUN chmod +x /usr/bin/install_db.sh /usr/bin/startup /usr/bin/install-biojs\n\n# This needs to happen here and not above, otherwise the Galaxy start\n# (without running the startup.sh script) will crash because integrated_tool_panel.xml could not be found.\nENV GALAXY_CONFIG_INTEGRATED_TOOL_PANEL_CONFIG=/export/galaxy-central/integrated_tool_panel.xml\n\n# Create symlinks for export, the destination will be created by galaxy-init\n# TODO: Is this even required?\nRUN ln -s -f /export/shed_tools /shed_tools && \\\n    ln -s -f /export/tool_deps /tool_deps && \\\n    ln -s -f /export/galaxy-central /galaxy-central && \\\n    ln -s -f /export/venv /galaxy_venv && \\\n    mkdir /etc/galaxy && ln -s -f /export/welcome /etc/galaxy/web\n\nRUN wget https://dl.influxdata.com/telegraf/releases/telegraf-1.5.0_linux_amd64.tar.gz && \\\n    cd / && tar xvfz telegraf-1.5.0_linux_amd64.tar.gz && \\\n    cp -Rv telegraf/* / && \\\n    rm -rf telegraf && \\\n    rm telegraf-1.5.0_linux_amd64.tar.gz\n\nADD telegraf.conf /etc/telegraf/telegraf.conf\n\nENV GALAXY_CONFIG_STATSD_HOST=localhost \\\n    GALAXY_CONFIG_STATSD_PORT=8125 \\\n    GALAXY_CONFIG_STATSD_PREFIX=galaxy\n\n# Autostart script that is invoked during container start\nCMD [\"/usr/bin/startup\"]\n"
}