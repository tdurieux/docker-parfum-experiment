{
  "startTime": 1674245167926,
  "endTime": 1674245168288,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 2,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 39,
        "columnStart": 36,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 39,
        "columnStart": 36,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#MUST BE BUILT FROM SERVICES DIRECTORY!!!! with -f flag\n\nFROM ubuntu:14.04\n\nUSER root\n\nENV TERM xterm\n\n# docker build-time args\nARG SERVICE\nARG MAIN=main.py\n\n# Install git, bc and dependencies\nRUN apt-get update --fix-missing && apt-get install --no-install-recommends -y \\\n  wget \\\n  bzip2 \\\n  ca-certificates \\\n  sudo \\\n  git \\\n  bc \\\n  vim \\\n  procps \\\n  curl \\\n  libglib2.0-0 \\\n  libxext6 \\\n  libsm6 \\\n  libxrender1 \\\n  libatlas-base-dev \\\n  libatlas-dev \\\n  libboost-all-dev \\\n  libopencv-dev \\\n  libprotobuf-dev \\\n  libgoogle-glog-dev \\\n  libgflags-dev \\\n  protobuf-compiler \\\n  libhdf5-dev \\\n  libleveldb-dev \\\n  liblmdb-dev \\\n  libsnappy-dev \\\n  htop && rm -rf /var/lib/apt/lists/*;\n\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \\\n  wget --quiet --no-check-certificate https://repo.continuum.io/archive/Anaconda2-2.4.1-Linux-x86_64.sh && \\\n  /bin/bash Anaconda2-2.4.1-Linux-x86_64.sh -b -p /opt/conda && \\\n  rm Anaconda2-2.4.1-Linux-x86_64.sh\n\nENV PATH /opt/conda/bin:$PATH\nENV PYTHONPATH /home/caffe-user/caffe/python:$PYTHONPATH\n\nRUN CONDA_SSL_VERIFY=false conda update pyopenssl\nRUN conda install -c https://conda.anaconda.org/memex elasticsearch-py\nRUN conda install -c https://conda.anaconda.org/anaconda protobuf\n\nRUN useradd -ms /bin/bash caffe-user && echo \"caffe-user:caffe-user\" | chpasswd && adduser caffe-user sudo\nRUN chown -R caffe-user:caffe-user /usr/local\n\n# Clone Caffe repo and move into it\nRUN cd /home/caffe-user && git clone https://github.com/BVLC/caffe.git && cd caffe && \\\n# just pull a preconfigured Makefile.config from our repo...cheating a little here\n  wget --quiet https://raw.githubusercontent.com/Sotera/social-sandbox/event_detection/firmament/caffe/Makefile.config && \\\n# Make\n  make -j\"$(nproc)\" all\n\n# Make Python Wrapper\nRUN cd /home/caffe-user/caffe && \\\n  make pycaffe && \\\n  make distribute\n\nRUN cd /home/caffe-user/caffe/models/bvlc_reference_caffenet && \\\n  wget --quiet https://dl.caffe.berkeleyvision.org/bvlc_reference_caffenet.caffemodel\n\nRUN mkdir /home/caffe-user/src\nRUN mkdir /home/caffe-user/src/util\nRUN mkdir /home/caffe-user/src/service\nWORKDIR /home/caffe-user/src/service\n\nCOPY $SERVICE .\n# create consistent top-level filename\nCOPY $SERVICE/$MAIN main.py\n# match project dir structure to satisfy imports\nCOPY util ../util/\n\nRUN chown -R caffe-user:caffe-user /home/caffe-user\n\nUSER caffe-user\n\nENV CAFFE_ROOT /home/caffe-user/caffe\n\nCMD [\"python\", \"-u\", \"main.py\"]\n"
}