{
  "startTime": 1674242689482,
  "endTime": 1674242689597,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# the tag this Dockerfile will build, either \"-b2d\" or \"\"\nARG TAG\n\n#=====================================\nFROM php:7.0.31-apache-stretch AS base\n#=====================================\n\nLABEL maintainer=\"Marius Millea <mariusmillea@gmail.com>\"\n\n# install packages\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        cron \\\n        default-mysql-client \\\n        inotify-tools \\\n        libjpeg62-turbo-dev \\\n        libpng-dev \\\n        libmariadbclient18 \\\n        nano \\\n        openssl \\\n        python \\\n        rsyslog \\\n        supervisor \\\n        vim-tiny \\\n        wget \\\n    && wget https://psysh.org/psysh -O /usr/bin/psysh \\\n    && chmod +x /usr/bin/psysh \\\n    && rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\n\n# configure server\nRUN docker-php-ext-install mysqli \\\n    && docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-install gd \\\n    && a2enmod cgi\n\n# logrotate\nCOPY --chown=1000:1000 logrotate /etc/logrotate.d/boincserver\nRUN chmod 644 /etc/logrotate.d/boincserver\n\n# set up supervisor to run\nCOPY makeproject-step3.sh /usr/bin/\nCOPY supervisord.conf /etc/supervisor/conf.d/\nCMD [\"/usr/bin/supervisord\"]\n\n\n\n#====================\nFROM base AS base-b2d\n#====================\n\n# install Docker client\nRUN curl -f -L https://get.docker.com/builds/Linux/x86_64/docker-1.10.3 > /usr/bin/docker \\\n    && chmod +x /usr/bin/docker\n\n\n\n#======================\nFROM base$TAG AS apache\n#======================\n\n# everything which depends on build-args is done as ONBUILD in this stage, so\n# the user can customize it\n\nONBUILD ARG BOINC_USER\nONBUILD ARG PROJECT_ROOT\nONBUILD ENV BOINC_USER=$BOINC_USER \\\n            PROJECT_ROOT=$PROJECT_ROOT \\\n            USER=$BOINC_USER \\\n            HOME=/home/$BOINC_USER \\\n            MYSQL_HOST=mysql\n\n# set up the non-root user who runs the dameons\nONBUILD RUN adduser $BOINC_USER --disabled-password --gecos \"\"\n\n# so that www-data can read/write boinc server files\nONBUILD RUN adduser www-data $BOINC_USER\n\n# ensure the project volumes have the right permissions when mounted\nONBUILD RUN mkdir $PROJECT_ROOT && chown $BOINC_USER:$BOINC_USER $PROJECT_ROOT\n\nONBUILD WORKDIR $PROJECT_ROOT\n\n\n#================================\nFROM apache AS apache-defaultargs\n#================================\n\n# this triggers the ONBUILD directives using the default ARGs so we also get a\n# fully built example image\n"
}