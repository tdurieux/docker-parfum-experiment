{
  "startTime": 1674252498186,
  "endTime": 1674252498981,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 42,
        "columnEnd": 53
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 20,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 26,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 446
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedDockerfile": "## this docker file is based on a relatively old setup so that libc dependencies\n## should not be a problem. It:\n# 1. builds htslib and all dependencies currently without libcurl\n# 2. installs nim\n# 3. sets up a nim binary (nsb) that is expected to be called from an external binary (static_builder)\n# These facilitate building static binaries for projects using hts-nim.\n\n# docker build -t brentp/hts-nim:latest -f Dockerfile .\nFROM centos:centos6\n\nRUN yum install -y git curl wget xz-devel bzip2-devel libcurl-devel && \\\n    wget https://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo && \\\n    yum install -y devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ lzma-devel glibc-static && \\\n    source scl_source enable devtoolset-2 && \\\n    echo \"source scl_source enable devtoolset-2\" >> ~/.bashrc && \\\n    echo \"source scl_source enable devtoolset-2\" >> ~/.bash_profile && \\\n    wget --quiet https://ftp.gnu.org/gnu/m4/m4-1.4.18.tar.gz && \\\n    tar xzf m4-1.4.18.tar.gz && cd m4* && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && cd .. && \\\n    rm -rf m4* && \\\n    wget --quiet https://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz && \\\n    tar xzf autoconf-2.69.tar.gz && \\\n    cd autoconf* && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && cd .. && rm -rf autoconf* && \\\n    git clone --depth 1 https://github.com/ebiggers/libdeflate.git && \\\n    cd libdeflate && make -j 2 CFLAGS='-fPIC -O3' libdeflate.a && \\\n    cp libdeflate.a /usr/local/lib && cp libdeflate.h /usr/local/include && \\\n    cd .. && rm -rf libdeflate && \\\n    wget --quiet https://http.debian.net/debian/pool/main/b/bzip2/bzip2_1.0.6.orig.tar.bz2 && \\\n    tar xjvf bzip2_1.0.6.orig.tar.bz2 && \\\n    cd bzip2-1.0.6 && \\\n    make -j2 install && \\\n    cd ../ && \\\n    rm -rf bzip2-* && \\\n    git clone https://github.com/cloudflare/zlib cloudflare-zlib && \\\n    cd cloudflare-zlib && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make install && \\\n    cd .. && \\\n    rm -rf cloudflare-zlib && \\\n    wget --quiet https://tukaani.org/xz/xz-5.2.4.tar.bz2 && \\\n    tar xjf xz-5.2.4.tar.bz2 && \\\n    cd xz-5.2.4 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j4 install && \\\n    cd .. && \\\n    rm -r xz* && rm -rf /var/cache/yum\n\n\nRUN source scl_source enable devtoolset-2 && \\\n    cd / && \\\n    wget --quiet https://www.musl-libc.org/releases/musl-1.1.21.tar.gz && \\\n    tar xvf musl-1.1.21.tar.gz && \\\n    cd musl-1.1.21 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j4 install && \\\n    rm -rf musl-* && rm musl-1.1.21.tar.gz\n\n\nRUN source scl_source enable devtoolset-2 && \\\n    cd / && \\\n    wget --quiet https://www.openssl.org/source/openssl-1.1.1b.tar.gz && \\\n    tar xzvf openssl-1.1.1b.tar.gz && \\\n    cd openssl-1.1.1b && \\\n    ./config && \\\n    make install && cd ../ && rm -rf openssl-1.1.1b && rm openssl-1.1.1b.tar.gz\n\n\nRUN cd / && \\\n    git clone -b devel --depth 10 git://github.com/nim-lang/nim nim && \\\n    cd nim && \\\n    chmod +x ./build_all.sh && \\\n    scl enable devtoolset-2 ./build_all.sh && \\\n    echo 'PATH=/nim/bin:$PATH' >> ~/.bashrc && \\\n    echo 'PATH=/nim/bin:$PATH' >> ~/.bash_profile && \\\n    echo 'PATH=/nim/bin:$PATH' >> /etc/environment\n\nRUN source scl_source enable devtoolset-2 && \\\n    wget --quiet https://c-ares.haxx.se/download/c-ares-1.15.0.tar.gz && \\\n    tar xzf c-ares-1.15.0.tar.gz && \\\n    cd c-ares-1.15.0 && \\\n    LIBS=\"-lrt\" LDFLAGS=\"-Wl,--no-as-needed -static\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static && \\\n    make LDFLAGS=\"-Wl,--no-as-needed -all-static -lrt -lssl -lcrypto -lc\" -j4 install && \\\n    cd .. && \\\n    rm -rf c-ares-1.15.0* && \\\n    wget --quiet https://curl.haxx.se/download/curl-7.64.0.tar.gz && \\\n    tar xzf curl-7.64.0.tar.gz && \\\n    cd curl-7.64.0 && \\\n    LIBS=\"-ldl -lpthread -lrt -lssl -lcrypto -lcares -ldl -lc\" LDFLAGS=\"-Wl,--no-as-needed -static\" PKG_CONFIG=\"pkg-config --static\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-shared --enable-static --disable-ldap --with-ssl=/usr/local/ --disable-sspi --without-librtmp --disable-ftp --disable-file --disable-dict --disable-telnet --disable-tftp --disable-rtsp --disable-pop3 --disable-imap --disable-smtp --disable-gopher --disable-smb --without-libidn --enable-ares && \\\n    make curl_LDFLAGS=-all-static LDFLAGS=\"-Wl,--no-as-needed -all-static -lrt -lssl -lcrypto -lcares -ldl -lc\" -j4 install && \\\n    cd ../ && \\\n    rm -rf curl-7.64.0* && rm c-ares-1.15.0.tar.gz\n\n\nRUN source scl_source enable devtoolset-2 && \\\n    git clone https://github.com/samtools/htslib && \\\n    cd htslib && git checkout 1.9 && autoheader && autoconf && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-s3 --enable-libcurl --with-libdeflate && \\\n    make LDFLAGS=\"-Wl,--no-as-needed -lrt -lssl -lcrypto -ldl -lcares -lc\" -j4 CFLAGS=\"-fPIC -O3 -lcrypto\" install && \\\n    echo \"/usr/local/lib\" >> /etc/ld.so.conf && \\\n    ldconfig && \\\n    cd ../ && rm -rf htslib\n\n\nENV PATH=:/root/.nimble/bin:/nim/bin/:$PATH:/opt/rh/devtoolset-2/root/usr/bin/\n\nADD . /src/\nRUN cat /src/docker/docker.nim.cfg >> /nim/config/nim.cfg && \\\n    echo \"source scl_source enable devtoolset-2\" >> /etc/environment && \\\n    source ~/.bashrc && cd /src/ && nimble install -y && \\\n    nimble install -y docopt && \\\n    nimble install -y c2nim@#3ec45c24585ebaed && \\\n    nim c -o:/usr/local/bin/nsb /src/docker/nsb.nim && \\\n    rm -rf /src/\n"
}