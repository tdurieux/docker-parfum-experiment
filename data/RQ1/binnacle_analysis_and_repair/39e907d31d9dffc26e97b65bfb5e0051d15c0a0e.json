{
  "startTime": 1674252546713,
  "endTime": 1674252546789,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 6,
        "columnStart": 26,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "#Pull the ubuntu:bionic image\nFROM ubuntu:bionic\n\n#Install OS dependencies\nRUN apt-get update -qq && apt-get install -y --no-install-recommends \\\n  curl ca-certificates \\\n  rsync git build-essential m4 unzip pkg-config libpcre3-dev && rm -rf /var/lib/apt/lists/*;\n\n#Copy our script and install ocaml + init\nCOPY ./scripts/install_ocaml.sh ./\nRUN printf \"\\n\" | bash -x install_ocaml.sh \"--disable-sandboxing -y\"\n\n#Copy our script and install build dependencies\nCOPY ./scripts/install_build_deps.sh ./\nRUN bash -x install_build_deps.sh\n\n#Copy our script and install dev dependencies\nCOPY ./scripts/install_dev_deps.sh ./\nRUN bash -x install_dev_deps.sh\n\n#this is just used for end to end tests, maybe temporary\nRUN apt-get install -y --no-install-recommends python && rm -rf /var/lib/apt/lists/*;\n\n#Specify our entrypoint\nENTRYPOINT [ \"opam\", \"config\", \"exec\", \"--\" ]"
}