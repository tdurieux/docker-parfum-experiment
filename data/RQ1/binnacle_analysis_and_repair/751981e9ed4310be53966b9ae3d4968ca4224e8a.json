{
  "startTime": 1674245631978,
  "endTime": 1674245632175,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 25,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 26,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 25,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\nMAINTAINER Yannis Assael & Brendan Shillingford\n\n# CUDA includes\nENV CUDA_PATH /usr/local/cuda\nENV CUDA_INCLUDE_PATH /usr/local/cuda/include\nENV CUDA_LIBRARY_PATH /usr/local/cuda/lib64\n\n# Ubuntu Packages\nRUN apt-get update -y && apt-get install --no-install-recommends software-properties-common -y && \\\n    add-apt-repository -y multiverse && apt-get update -y && apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y apt-utils nano vim man build-essential wget sudo && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install python\nRUN apt-get update -y && apt-get -y --no-install-recommends install python3 python3-dev python3-pip && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install curl and other dependencies\nRUN apt-get update -y && apt-get install --no-install-recommends -y curl libssl-dev openssl libopenblas-dev \\\n    libhdf5-dev hdf5-helpers hdf5-tools libhdf5-serial-dev libprotobuf-dev protobuf-compiler && \\\n    curl -f -sk https://raw.githubusercontent.com/torch/distro/master/install-deps | bash && \\\n    rm -rf /var/lib/apt/lists/*\n\n# install hdf5\nRUN cd /usr/lib/x86_64-linux-gnu && \\\n    ln -s libhdf5_serial.so.8.0.2 libhdf5.so && \\\n    ln -s libhdf5_serial_hl.so.8.0.2 libhdf5_hl.so\nRUN pip3 install --no-cache-dir h5py\n\n# Clone torch (and package) repos:\nRUN mkdir -p /opt && git clone https://github.com/torch/distro.git /opt/torch --recursive\n\n# Run installation script\nRUN cd /opt/torch && ./install.sh -b\n\n# Export environment variables manually\nENV TORCH_DIR /opt/torch/pkg/torch/build/cmake-exports/\nENV LUA_PATH '/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/opt/torch/install/share/lua/5.1/?.lua;/opt/torch/install/share/lua/5.1/?/init.lua;./?.lua;/opt/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua'\nENV LUA_CPATH '/root/.luarocks/lib/lua/5.1/?.so;/opt/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so'\nENV PATH /opt/torch/install/bin:$PATH\nENV LD_LIBRARY_PATH /opt/torch/install/lib:$LD_LIBRARY_PATH\nENV DYLD_LIBRARY_PATH /opt/torch/install/lib:$DYLD_LIBRARY_PATH\nENV LUA_CPATH '/opt/torch/install/lib/?.so;'$LUA_CPATH\n\n# Install torch packages\nRUN luarocks install totem && \\\n    luarocks install https://raw.githubusercontent.com/deepmind/torch-hdf5/master/hdf5-0-0.rockspec && \\\n    luarocks install unsup && \\\n    luarocks install csvigo && \\\n    luarocks install loadcaffe && \\\n    luarocks install classic && \\\n    luarocks install pprint && \\\n    luarocks install class && \\\n    luarocks install image && \\\n    luarocks install nninit && \\\n    luarocks install optnet && \\\n    luarocks install https://raw.githubusercontent.com/deepmind/torch-distributions/master/distributions-0-0.rockspec\n\n\n# install original Baidu warp-ctc, since nnx needs that (conflicts with ours in nnob)\n# RUN luarocks install https://raw.githubusercontent.com/baidu-research/warp-ctc/master/torch_binding/rocks/warp-ctc-scm-1.rockspec\nRUN luarocks install https://raw.githubusercontent.com/iassael/warp-ctc/master/torch_binding/rocks/warp-ctc-scm-1.rockspec\n# install nnx for nn.CTCCriterion\nRUN luarocks install https://raw.githubusercontent.com/clementfarabet/lua---nnx/master/nnx-0.1-1.rockspec\n# fb debugger, with deps removed:\nRUN luarocks install https://raw.githubusercontent.com/bshillingford/fbdebugger-minimal/master/fbdebugger-standalone-1.rockspec\n\n\nWORKDIR /project\nADD . /project/\n"
}