{
  "startTime": 1674243811666,
  "endTime": 1674243811751,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6.8-alpine3.8\n\n#Â So Pillow can find zlib\nENV LIBRARY_PATH /lib:/usr/lib\n\nRUN apk add --no-cache \\\n  bash \\\n  build-base \\\n  curl \\\n  jpeg \\\n  jpeg-dev \\\n  libxslt \\\n  libxslt-dev \\\n  libxml2 \\\n  libxml2-dev \\\n  nodejs \\\n  npm \\\n  postgresql-dev \\\n  postgresql-libs \\\n  zlib \\\n  zlib-dev\n\n# https://bitbucket.org/site/master/issues/16334/pipelines-failing-with-could-not-get-uid\n# https://github.com/npm/npm/issues/20861\nRUN npm config set unsafe-perm true\n\nRUN npm install -g less && npm cache clean --force;\n\n# Only copy requirements so cache isn't busted by changes in the app\nRUN mkdir -p /app\nCOPY requirements.txt /app/\nWORKDIR /app\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Same, but for client\nRUN mkdir -p /app/client\nCOPY client/package.json client/package-lock.json /app/client/\nRUN cd client && npm install && npm cache clean --force\n\n# Build client before copying everything so changes in Django don't trigger a\n# re-build\nCOPY client /app/client\nRUN cd client && node_modules/.bin/webpack --config webpack.prod.config.js\n\nENV PYTHONUNBUFFERED 1\n# Set configuration last so we can change this without rebuilding the whole\n# image\nENV DJANGO_SETTINGS_MODULE modernomad.settings.production\n# Number of gunicorn workers\nENV WEB_CONCURRENCY 3\nENV PORT 8000\nEXPOSE 8000\nCMD [\"gunicorn\", \"modernomad.wsgi\"]\n\n# Copy all files last, because this is most likely to change\nCOPY . /app/\n\nRUN SECRET_KEY=unset ./manage.py collectstatic --noinput\nRUN SECRET_KEY=unset ./manage.py compress\n"
}