{
  "startTime": 1674246292254,
  "endTime": 1674246292412,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 51,
        "columnEnd": 62
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.5\nENV CHEZ_SCHEME_VERSION 9.4\nENV BUILD /tmp/BUILD\n\n# Chez Scheme depends on make, gcc, ncurses, and X11 according to:\n# https://github.com/cisco/ChezScheme/blob/06f858f9a505b9d6fb6ca1ac97234927cb2dc641/BUILDING#L41-L44\n# `musl-dev` is Alpine's version of `libc-dev`.\n# `openssl` is needed to `wget` from `https://github.com`.\n# Even curl is needed!  This seems kind of sketchy:\n# https://github.com/cisco/ChezScheme/blob/06f858f9a505b9d6fb6ca1ac97234927cb2dc641/configure#L305\n\n# Ultimately there is a build error, but it doesn't seem to impact anything:\n# Exception in $fasl-file-equal?: code comparison failed while comparing ../boot/a6le/sbb and ../boot/a6le/petite.boot within fasl entry 103\n# make[4]: *** [Mf-base:266: checkboot] Error 255\n\nRUN mkdir -p \"$BUILD\" && cd \"$BUILD\" \\\n # Install packages needed at runtime separately from build-only dependencies.\n && apk add --no-cache ncurses libx11 \\\n # Install, group build-only dependencies as virtual package for easy removal.\n && apk add --no-cache --virtual .build-dependencies make gcc musl-dev ncurses-dev libx11-dev curl openssl \\\n # Download, extract, build and install, then clean up.\n && wget \"https://github.com/cisco/ChezScheme/archive/v$CHEZ_SCHEME_VERSION.tar.gz\" \\\n && tar -xzf \"v$CHEZ_SCHEME_VERSION.tar.gz\" \\\n && cd \"$BUILD/ChezScheme-$CHEZ_SCHEME_VERSION\" && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make install \\\n && cd / && rm -rf \"$BUILD\" \\\n # Remove the build-only dependencies virtual package.\n && apk del .build-dependencies && rm \"v$CHEZ_SCHEME_VERSION.tar.gz\"\n\n# Optionally install text editors.  You can comment out anything you don't use.\n# (Space usage: nano ~0.4MB, vim ~23.4MB, emacs ~118MB)\nRUN apk add --no-cache nano\nRUN apk add --no-cache vim\nRUN apk add --no-cache emacs\n\nWORKDIR /artifact\nCOPY src/mk/LICENSE src/mk/README.md src/mk/*.scm ./mk/\nCOPY src/evalo-*.scm src/intro-examples.scm src/love-in-99k-ways.scm src/challenge-*.scm src/all-challenges.scm ./\nCOPY ArtifactOverview.md ./\n\nCMD [\"/bin/sh\"]\n"
}