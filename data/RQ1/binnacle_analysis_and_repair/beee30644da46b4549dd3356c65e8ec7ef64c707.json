{
  "startTime": 1674241727001,
  "endTime": 1674241727247,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 7,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.5\n\n# install SENNA\nRUN apk update \\\n    && wget https://ml.nec-labs.com/senna/senna-v3.0.tgz \\\n    && apk add --no-cache --virtual build-deps gcc musl-dev \\\n    && tar -xzf senna-v3.0.tgz \\\n    && rm senna-v3.0.tgz \\\n    && mkdir -p /app \\\n    && mkdir -p /app/util \\\n    && mv senna /app/util \\\n    && chown -R root:root /app/util/senna \\\n    && cd /app/util/senna \\\n    && rm senna* \\\n    && gcc -o senna-linux64 -O3 -ffast-math *.c \\\n    && rm sanity* \\\n    && rm *.c \\\n    && rm *.h \\\n    && rm -R embeddings/ \\\n    && rm -R doc/ \\\n    && apk del build-deps\n\n# install Python\nADD dev-requirements.txt requirements.txt .nltk_packages /app/\nRUN apk add --no-cache bash python3 \\\n    && apk add --no-cache --virtual build-deps ca-certificates gcc musl-dev linux-headers python3-dev \\\n    && pip3 install --no-cache-dir --upgrade pip \\\n    && pip3 install --no-cache-dir -r /app/dev-requirements.txt \\\n    && pip3 install --no-cache-dir -r /app/requirements.txt \\\n    && python3 -m nltk.downloader $(tr \"\\n\" \" \" < \"/app/.nltk_packages\") \\\n    && apk del build-deps\n\n# install Node\nADD package.json /app/\nRUN apk update \\\n    && apk --no-cache add nodejs=6.9.2-r1 openssl \\\n    && npm install --global yarn \\\n    && cd /app \\\n    && yarn global add concat-cli npm-check-updates onchange \\\n    && yarn && npm cache clean --force;\n\n# install Firefox & virtual framebuffer\nARG GECKODRIVER_VERSION=0.11.1\nRUN apk add --no-cache dbus firefox-esr fontconfig ttf-freefont xvfb \\\n    && wget -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v$GECKODRIVER_VERSION/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz \\\n    && rm -rf /app/geckodriver \\\n    && tar -C /app -zxf /tmp/geckodriver.tar.gz \\\n    && rm /tmp/geckodriver.tar.gz \\\n    && mv /app/geckodriver /app/geckodriver-$GECKODRIVER_VERSION \\\n    && chmod 755 /app/geckodriver-$GECKODRIVER_VERSION \\\n    && ln -fs /app/geckodriver-$GECKODRIVER_VERSION /usr/bin/geckodriver\n\nWORKDIR /app/src\n\nCMD [\"/bin/bash\"]"
}