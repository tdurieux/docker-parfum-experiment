{
  "startTime": 1674242663433,
  "endTime": 1674242663648,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 41,
        "columnStart": 5,
        "columnEnd": 14
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# Install system packages\nRUN apt-get -qq update && apt-get -qq install --no-install-recommends -y python3 \\ \r\n python3-dev \\\r\n python-pil \\\r\n python-lxml \\\r\n python-tk \\\r\n build-essential \\\r\n cmake \\ \r\n git \\ \r\n libgtk2.0-dev \\ \r\n pkg-config \\ \r\n libavcodec-dev \\ \r\n libavformat-dev \\ \r\n libswscale-dev \\ \r\n libtbb2 \\\r\n libtbb-dev \\ \r\n libjpeg-dev \\\r\n libpng-dev \\\r\n libtiff-dev \\\r\n libjasper-dev \\\r\n libdc1394-22-dev \\\r\n x11-apps \\\r\n wget \\\r\n vim \\\r\n ffmpeg \\\r\n unzip \\\r\n && rm -rf /var/lib/apt/lists/*\n\n# Install core packages\nRUN wget -q -O /tmp/get-pip.py --no-check-certificate https://bootstrap.pypa.io/get-pip.py && python3 /tmp/get-pip.py\nRUN pip install --no-cache-dir -U pip \\\n numpy \\\n matplotlib \\\n notebook \\\n jupyter \\\n pandas \\\n moviepy \\\n tensorflow \\\n keras \\\n autovizwidget\n\n# Install tensorflow models object detection\nRUN GIT_SSL_NO_VERIFY=true git clone -q https://github.com/tensorflow/models /usr/local/lib/python3.5/dist-packages/tensorflow/models\nRUN wget -q -P /usr/local/src/ --no-check-certificate https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-python-3.5.1.tar.gz\n\n# Download & build protobuf-python\nRUN cd /usr/local/src/ \\\r\n && tar xf protobuf-python-3.5.1.tar.gz \\\r\n && rm protobuf-python-3.5.1.tar.gz \\\r\n && cd /usr/local/src/protobuf-3.5.1/ \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n && make \\\n && make install \\\n && ldconfig \\\n && rm -rf /usr/local/src/protobuf-3.5.1/\n\n# Add dataframe display widget\nRUN jupyter nbextension enable --py --sys-prefix widgetsnbextension\n\n# Download & build OpenCV\nRUN wget -q -P /usr/local/src/ --no-check-certificate https://github.com/opencv/opencv/archive/3.4.1.zip\nRUN cd /usr/local/src/ \\\r\n && unzip 3.4.1.zip \\\r\n && rm 3.4.1.zip \\\r\n && cd /usr/local/src/opencv-3.4.1/ \\\r\n && mkdir build \\\r\n && cd /usr/local/src/opencv-3.4.1/build \\ \r\n && cmake -D CMAKE_INSTALL_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local/ .. \\\r\n && make -j4 \\\r\n && make install \\\r\n && rm -rf /usr/local/src/opencv-3.4.1\n\n# Setting up working directory\nRUN mkdir /lab\nWORKDIR /lab\n#ADD . /lab/\n\n# Minimize image size\nRUN (apt-get autoremove -y; \\\r\n     apt-get autoclean -y)\n\n# Set TF object detection available\nENV PYTHONPATH \"$PYTHONPATH:/usr/local/lib/python3.5/dist-packages/tensorflow/models/research:/usr/local/lib/python3.5/dist-packages/tensorflow/models/research/slim\"\nRUN cd /usr/local/lib/python3.5/dist-packages/tensorflow/models/research && protoc object_detection/protos/*.proto --python_out=.\n\nCMD bash exec.sh\n"
}