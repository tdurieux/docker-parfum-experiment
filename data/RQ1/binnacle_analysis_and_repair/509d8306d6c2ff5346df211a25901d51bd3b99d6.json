{
  "startTime": 1674250372093,
  "endTime": 1674250372120,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tiangolo/uwsgi-nginx:python3.7-alpine3.8\n\nLABEL maintainer=\"Sebastian Ramirez <tiangolo@gmail.com>\"\n\nRUN pip install --no-cache-dir flask\n\n# URL under which static (not modified by Python) files will be requested\n# They will be served by Nginx directly, without being handled by uWSGI\nENV STATIC_URL /static\n# Absolute path in where the static files wil be\nENV STATIC_PATH /app/static\n\n# If STATIC_INDEX is 1, serve / with /static/index.html directly (or the static URL configured)\n# ENV STATIC_INDEX 1\nENV STATIC_INDEX 0\n\n# Add demo app\nCOPY ./app /app\nWORKDIR /app\n\n# Make /app/* available to be imported by Python globally to better support several use cases like Alembic migrations.\nENV PYTHONPATH=/app\n\n# Move the base entrypoint to reuse it\nRUN mv /entrypoint.sh /uwsgi-nginx-entrypoint.sh\n# Copy the entrypoint that will generate Nginx additional configs\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\n# Run the start script provided by the parent image tiangolo/uwsgi-nginx.\n# It will check for an /app/prestart.sh script (e.g. for migrations)\n# And then will start Supervisor, which in turn will start Nginx and uWSGI\nCMD [\"/start.sh\"]\n"
}