{
  "startTime": 1674235885528,
  "endTime": 1674235885956,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 81
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.2-fpm\nLABEL maintainer=\"contact@kendozone.com\"\nLABEL version=\"1.0.0\"\nLABEL description=\"Kendozone is a online tournament webapp coded with PHP / Laravel\"\n\nENV node_version 8.4.0\nENV npm_version 5.7.1\nENV NVM_DIR /.nvm\nENV APP_DIR=\"/var/www\"\nENV APP_PORT=\"80\"\nENV DOCKER_FOLDER=\"docker/local\"\n\nRUN echo \"deb http://ftp.de.debian.org/debian stretch main \" >> /etc/apt/sources.list \\\n&& apt-get update -y\nRUN apt-get install -y openssl zip unzip git gcc make automake \\\n        libfreetype6-dev \\\n        libjpeg62-turbo-dev \\\n        libmcrypt-dev \\\n        libpng-dev \\\n        libmagickwand-dev vim --no-install-recommends && rm -rf /var/lib/apt/lists/*;\nRUN apt-get purge --auto-remove -y g++ \\\n&& apt-get clean \\\n&& rm -rf /var/lib/apt/lists/*\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n&& docker-php-ext-install pdo pdo_mysql mbstring zip -j$(nproc) iconv  -j$(nproc) gd\n\nWORKDIR $APP_DIR\nCOPY . $APP_DIR\n\nRUN mkdir -p $APP_DIR/resources/assets/less/_main_full \\\n&& touch $APP_DIR/resources/assets/less/_main_full/main.less \\\n&& touch $APP_DIR/database/sqlite.db \\\n&& mv $DOCKER_FOLDER/.env.local .env \\\n&& chown -R www-data:www-data $APP_DIR\n\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n\nRUN composer install --no-interaction\n\nRUN mkdir -p $NVM_DIR && chown -R www-data:www-data $NVM_DIR\nRUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash \\\n&& [ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\" \\\n&& nvm install ${node_version}\n\nENV NODE_PATH $NVM_DIR/v$node_version/lib/node_modules\nENV PATH $NVM_DIR/versions/node/v$node_version/bin:$PATH\n\nRUN npm install --save-exact imagemin-pngquant@5.0.* && npm cache clean --force;\nRUN npm install && npm cache clean --force;\nRUN npm run production\nRUN php artisan key:generate\nRUN php artisan migrate --seed\nCMD php artisan serve --host=0.0.0.0 --port=$APP_PORT"
}