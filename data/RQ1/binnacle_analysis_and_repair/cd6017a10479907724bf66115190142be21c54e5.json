{
  "startTime": 1674234116291,
  "endTime": 1674234116506,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 36,
        "columnEnd": 47
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 32,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nRUN apt-get update && \\\n    apt-get -y install --no-install-recommends \\\n            # s3fs dependencies \\\n            automake autotools-dev fuse g++ git libcurl4-gnutls-dev libfuse-dev \\\n            libssl-dev libxml2-dev make pkg-config \\\n            # riofs dependencies \\\n            build-essential gcc make automake autoconf libtool pkg-config intltool \\\n            libglib2.0-dev libfuse-dev libxml2-dev libevent-dev libssl-dev \\\n            # for running goofys benchmark \\\n            curl python-setuptools python-pip gnuplot-nox imagemagick awscli \\\n            # finally, clean up to make image smaller \\\n            && apt-get clean && rm -rf /var/lib/apt/lists/*;\n# goofys graph generation\nRUN pip install --no-cache-dir uncertainties numpy\n\nWORKDIR /tmp\n\nENV PATH=$PATH:/usr/local/go/bin\nRUN curl -f -O https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz && \\\n    tar -C /usr/local -xzf go1.8.3.linux-amd64.tar.gz && \\\n    rm go1.8.3.linux-amd64.tar.gz\n\nRUN git clone --depth 1 https://github.com/s3fs-fuse/s3fs-fuse.git && \\\n    cd s3fs-fuse && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j4 > /dev/null && make install && \\\n    cd .. && rm -Rf s3fs-fuse\n\nRUN git clone --depth 1 https://github.com/skoobe/riofs && \\\n    cd riofs && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j4 && make install && \\\n    cd .. && rm -Rf riofs\n\nRUN curl -f -L -O https://github.com/kahing/catfs/releases/download/v0.4.0/catfs && \\\n    mv catfs /usr/bin && chmod 0755 /usr/bin/catfs\n\n# ideally I want to clear out all the go deps too but there's no\n# way to do that with ADD\nENV PATH=$PATH:/root/go/bin\nADD . /root/go/src/github.com/kahing/goofys\nWORKDIR /root/go/src/github.com/kahing/goofys\nRUN go get . && make install\n\nENTRYPOINT [\"/root/go/src/github.com/kahing/goofys/bench/run_bench.sh\"]\n"
}