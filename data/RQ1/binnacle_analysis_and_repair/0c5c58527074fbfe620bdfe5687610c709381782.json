{
  "startTime": 1674245743830,
  "endTime": 1674245743989,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 19,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 40,
        "columnEnd": 134
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 40,
        "columnEnd": 134
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER rcarmo\n# Copy our DigitalOcean sources.list across\nADD etc/apt/sources.list /etc/apt/sources.list\n# Baseline config for a CLI development environment\nRUN apt-get update; apt-get upgrade -y; apt-get install --no-install-recommends -y man openssh-server htop tmux vim bash-completion rsync build-essential git; rm -rf /var/lib/apt/lists/*; apt-get autoremove; apt-get clean\n# A shell user with sudo\nADD home/user /home/user\n# The following injects the Vagrant public key, CHANGE IT if you really need to SSH into the container, otherwise just use docker-enter if you have Docker 1.3+\nRUN useradd -G sudo -s /bin/bash user && mkdir -p /home/user/.ssh && echo 'ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key' > /home/user/.ssh/authorized_keys && chown -R user:user /home/user && sudo -u user ssh-keygen -q -t rsa -f /home/user/.ssh/id_rsa -N \"\"\nRUN echo 'user:changeme' | chpasswd\n# Make sure we can use SSH if we don't have docker-enter\nRUN mkdir -p /var/run/sshd && chmod 755 /var/run/sshd && start ssh\n# Grab the Arduino SDK\nRUN cd /home/user; wget \"https://arduino.cc/download.php?f=/arduino-1.0.6-linux64.tgz\"; tar -zxvf download*.tgz; rm -f *.tgz\n# Get the bq Marlin firmware tree\nRUN cd /home/user; git clone https://github.com/bq/Marlin.git; cd Marlin; git checkout v1.3.1_hephestos\n# Build a firmware image\nRUN cd /home/user/Marlin/Marlin; ARDUINO_INSTALL_DIR=/home/user/arduino-1.0.6 make\nVOLUME /target\nENV __FLUSH_LOG 1\n# This is only really necessary if you can't use docker-enter (or if you want to do post-provisioning using fabric, etc.)\nEXPOSE 22\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n"
}