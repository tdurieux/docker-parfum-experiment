{
  "startTime": 1674243253375,
  "endTime": 1674243253485,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 49,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 49,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-devel \n\nSHELL [\"/bin/bash\", \"-c\"] \n\nRUN mkdir /input \nRUN mkdir /output \nRUN mkdir /license \n\nRUN apt-get update && apt-get install --no-install-recommends -y wget && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\nRUN MINICONDA=\"Miniconda3-latest-Linux-x86_64.sh\" && \\  \nwget --quiet https://repo.continuum.io/miniconda/$MINICONDA && \\  \nbash $MINICONDA -b -p /miniconda && \\  \nrm -f $MINICONDA \nENV PATH /miniconda/bin:$PATH \n\n# Add channels and build, then install \nRUN conda config --add channels omnia \nRUN conda update --yes -n base conda \nRUN conda config --add channels conda-forge \nRUN conda update --yes --all \nRUN conda config --add channels omnia/label/dev \nRUN conda config --add channels openeye \n\nRUN conda install --yes conda-build jinja2 anaconda-client pip \n\nRUN git clone https://github.com/choderalab/perses \n\nRUN conda build perses/devtools/conda-recipe \nRUN conda install --yes --use-local perses-dev \n\n"
}