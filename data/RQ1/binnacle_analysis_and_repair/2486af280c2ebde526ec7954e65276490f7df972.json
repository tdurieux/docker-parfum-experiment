{
  "startTime": 1674241013449,
  "endTime": 1674241013526,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use ubuntu trusty tar (14.04 LTS) as base image\nFROM synec/nvm\n\nMAINTAINER System Insights\n\n# Replace shell with bash so we can source files\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n# Define nvm version\nENV NVM_VERSION=v\n\n# Define node version\nENV NODE_VERSION=6.2.0\n\nENV NVM_DIR=/root/.nvm\n\n# Install xmllint\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    libxml2-utils && rm -rf /var/lib/apt/lists/*;\n\n# Fetch and install nodejs via nvm\nRUN source $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_VERSION \\\n    && nvm alias default $NODE_VERSION \\\n    && nvm use default\n\n# Export NODE_PATH\nENV NODE_PATH $NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules\n# Update PATH to make node/npm accessible\nENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n\n# Application\n\nRUN mkdir -p /opt/systeminsights/connect-agent\nCOPY . /opt/systeminsights/connect-agent\n\nWORKDIR /opt/systeminsights/connect-agent\nRUN npm install && npm cache clean --force;\nRUN npm install --only=dev && npm cache clean --force;\n\n# TODO VOLUME /var/log/vimana\n# TODO EXPORT ports\nEXPOSE 7000\nEXPOSE 8080\n\n\n# overwrite this with 'CMD []' in a dependent Dockerfile\nCMD [\"/bin/bash\"]"
}