{
  "startTime": 1674243203051,
  "endTime": 1674243203488,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Copyright 2015 Google Inc. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nFROM google/dind\n\n# Install common development packages.\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        apt-transport-https \\\n        bash-completion \\\n        build-essential \\\n        ca-certificates \\\n        clang \\\n        cron \\\n        curl \\\n        emacs-nox \\\n        gcc \\\n        git \\\n        git-core \\\n        golang \\\n        jq \\\n        less \\\n        locales \\\n        lsb-release \\\n        make \\\n        man-db \\\n        manpages \\\n        maven \\\n        mercurial \\\n        mysql-client \\\n        nano \\\n        nginx \\\n        openjdk-8-jdk \\\n        openjdk-8-jre-headless \\\n        openssh-server \\\n        php5-cli \\\n        php5-common \\\n        php5-dev \\\n        php5-fpm \\\n        php5-gd \\\n        php-pear \\\n        python \\\n        python-dev \\\n        python-setuptools \\\n        rlwrap \\\n        screen \\\n        sudo \\\n        supervisor \\\n        tmux \\\n        unzip \\\n        vim \\\n        wget \\\n        zip && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN easy_install -U pip\nRUN pip install --no-cache-dir -U crcmod\n\n# Installing node:\nRUN wget https://nodejs.org/dist/v4.2.1/node-v4.2.1-linux-x64.tar.gz && \\\n    tar xvfz node-v4.2.1-linux-x64.tar.gz && cp -R node-v4.2.1-linux-x64/* /usr/ && \\\n    ln -f -s /usr/bin/node /usr/bin/nodejs && rm node-v4.2.1-linux-x64.tar.gz\n\nRUN npm install -g js-beautify uglify-js uglifycss firebase firebase-token-generator webdriverio \\\n      mocha expect.js && npm cache clean --force;\n\n# Adding git-appraise\nENV GOPATH /usr/local/\nRUN go get github.com/google/git-appraise/git-appraise\n\n# Adding Kythe\nENV KYTHE_VERSION v0.0.15\nRUN wget -P /tmp https://github.com/google/kythe/releases/download/${KYTHE_VERSION}/kythe-${KYTHE_VERSION}.tar.gz && \\\n    tar xvfz /tmp/kythe-${KYTHE_VERSION}.tar.gz -C /tmp/ && \\\n    mkdir -p /opt/kythe && cp -R /tmp/kythe-${KYTHE_VERSION}/* /opt/kythe && \\\n    rm -rf /tmp/* && rm /tmp/kythe-${KYTHE_VERSION}.tar.gz\n\n# Install a UTF-8 locale by default.\nRUN echo \"en_US.UTF-8 UTF-8\" >/etc/locale.gen && \\\n    locale-gen && \\\n    update-locale LANG=en_US.UTF-8\n\n# Install the Google Cloud SDK.\nRUN wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip && \\\n    unzip google-cloud-sdk.zip -d /google/ && \\\n    rm google-cloud-sdk.zip\nENV CLOUD_SDK /google/google-cloud-sdk\nRUN $CLOUD_SDK/install.sh \\\n        --usage-reporting=true \\\n        --rc-path=/etc/bash.bashrc \\\n        --bash-completion=true \\\n        --path-update=true \\\n        --disable-installation-options\nENV PATH $CLOUD_SDK/bin:$PATH\n\n# Disable the automatic update checks by Cloud SDK since the container\n# environment is assumed to be auto-managed, and we don't want to advertise\n# the manual update process too much.\nRUN gcloud config set --installation component_manager/disable_update_check True\n\n# Install the gcloud preview app support and Managed VMs.\nRUN yes | \\\n    CLOUDSDK_COMPONENT_MANAGER_FIXED_SDK_VERSION=0.9.79 gcloud components update -q \\\n        alpha \\\n        app \\\n        app-engine-java \\\n        app-engine-python \\\n        beta \\\n        kubectl \\\n        preview\n\n# Unpin the fixed_sdk_version so that users can upgrade later if they want to.\nRUN gcloud config unset --installation component_manager/fixed_sdk_version\n\n# Git credential helpers for source.developers.google.com and Gerrit.\nADD gitconfig /etc/gitconfig\nRUN chmod -R 644 /etc/gitconfig\n\n# Make it so the user does not need to type in their password for sudo\nRUN echo \"%sudo ALL=NOPASSWD: ALL\" >> /etc/sudoers\n\n# Start the cron daemon.\nENV ONRUN $ONRUN \"cron\"\n\n# Add cron job to run \"gcloud docker --authorize_only\" every 5 minutes.\nADD gcloud_docker_auth.sh /google/scripts/gcloud_docker_auth.sh\nRUN chmod -R a+rx /google/scripts/gcloud_docker_auth.sh\nRUN (crontab -l 2>/dev/null; \\\n        echo '*/5 * * * * /google/scripts/gcloud_docker_auth.sh') \\\n    | crontab\n\n# Eagerly run this authorization script upon startup.\nENV ONRUN $ONRUN \"/google/scripts/gcloud_docker_auth.sh\"\n\n# Set an environment variable to configure which container server to use.\n# We use the Google Container Registry:\n#     https://cloud.google.com/tools/container-registry/.\nENV GCLOUD_CONTAINER_SERVER gcr.io\n\n"
}