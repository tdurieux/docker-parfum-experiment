{
  "startTime": 1674239740661,
  "endTime": 1674239740853,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 29,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04\n\nMAINTAINER Aleksei Tiulpin, University of Oulu, Version 3.0\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y libgtk2.0-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n         build-essential \\\n         cmake \\\n         git \\\n         curl \\\n         vim \\\n         ca-certificates \\\n         libjpeg-dev \\\n         libpng-dev \\\n\t     unzip \\\n\t     zip \\\n\t     locales \\\n\t     emacs \\\n\t     libgl1-mesa-glx \\\n\t     openssh-server \\\n\t     screen \\\n\t     libturbojpeg \\\n\t     rsync \\\n         wget && rm -rf /var/lib/apt/lists/*;\n\n\nRUN locale-gen --purge en_US.UTF-8\nRUN echo -e 'LANG=\"en_US.UTF-8\"\\nLANGUAGE=\"en_US:en\"\\n' > /etc/default/locale\nRUN dpkg-reconfigure --frontend=noninteractive locales\n\nRUN curl -f -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\nRUN chmod +x ~/miniconda.sh && ~/miniconda.sh -b -p /opt/conda && rm ~/miniconda.sh\nENV PATH=/opt/conda/bin:${PATH}\nRUN conda update -n base conda\n\nRUN conda create -y --name oaprog python=3.6\nRUN conda install -y pytorch=1.0.0 torchvision cuda100 -c pytorch -n oaprog\n\nCOPY requirements.txt requirements.txt\nENV PATH /opt/conda/envs/oaprog/bin:$PATH\nRUN pip install --no-cache-dir pip -U -v && pip install --no-cache-dir -r requirements.txt\n\n# Installing the other deps\nRUN conda install -y numpy=1.15.2 scipy=1.0.1 matplotlib -n oaprog\nRUN conda install -y opencv=3.4.1 -c conda-forge -n oaprog\nRUN conda install -y statsmodels=0.9.0 -n oaprog\n\n# Fixing the matplotlib backend issues\nRUN mkdir -p /root/.config/matplotlib/\nRUN echo \"backend : Agg\" > /root/.config/matplotlib/matplotlibrc\n\n# Setting up the package\nRUN mkdir /opt/pkg\nCOPY . /opt/pkg\nRUN pip install --no-cache-dir -e /opt/pkg/\n\n# Copying the files\nRUN cp /opt/pkg/scripts/* ."
}