{
  "startTime": 1674236763915,
  "endTime": 1674236764062,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 9,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 9,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.4\n# In case the main package repositories are down, use the alternative base image:\n# FROM gliderlabs/alpine:3.4\n\nMAINTAINER Nikyle Nguyen <NLKNguyen@MSN.com>\n\nARG REQUIRE=\"sudo build-base\"\nRUN apk update && apk upgrade \\\n      && apk add --no-cache ${REQUIRE}\n\n\n#### INSTALL MPICH ####\n# Source is available at http://www.mpich.org/static/downloads/\n\n# Build Options:\n# See installation guide of target MPICH version\n# Ex: http://www.mpich.org/static/downloads/3.2/mpich-3.2-installguide.pdf\n# These options are passed to the steps below\nARG MPICH_VERSION=\"3.2\"\nARG MPICH_CONFIGURE_OPTIONS=\"--disable-fortran\"\nARG MPICH_MAKE_OPTIONS\n\n# Download, build, and install MPICH\nRUN mkdir /tmp/mpich-src\nWORKDIR /tmp/mpich-src\nRUN wget https://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz \\\n      && tar xfz mpich-${MPICH_VERSION}.tar.gz \\\n      && cd mpich-${MPICH_VERSION} \\\n      && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" ${MPICH_CONFIGURE_OPTIONS} \\\n      && make ${MPICH_MAKE_OPTIONS} && make install \\\n      && rm -rf /tmp/mpich-src && rm mpich-${MPICH_VERSION}.tar.gz\n\n\n#### TEST MPICH INSTALLATION ####\nRUN mkdir /tmp/mpich-test\nWORKDIR /tmp/mpich-test\nCOPY mpich-test .\nRUN sh test.sh\nRUN rm -rf /tmp/mpich-test\n\n\n#### CLEAN UP ####\nWORKDIR /\nRUN rm -rf /tmp/*\n\n\n#### ADD DEFAULT USER ####\nARG USER=mpi\nENV USER ${USER}\nRUN adduser -D ${USER} \\\n      && echo \"${USER}   ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n\nENV USER_HOME /home/${USER}\nRUN chown -R ${USER}:${USER} ${USER_HOME}\n\n#### CREATE WORKING DIRECTORY FOR USER ####\nARG WORKDIR=/project\nENV WORKDIR ${WORKDIR}\nRUN mkdir ${WORKDIR}\nRUN chown -R ${USER}:${USER} ${WORKDIR}\n\nWORKDIR ${WORKDIR}\nUSER ${USER}\n\n\nCMD [\"/bin/ash\"]\n"
}