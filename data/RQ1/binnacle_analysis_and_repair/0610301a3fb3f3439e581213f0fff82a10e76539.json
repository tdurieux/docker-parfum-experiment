{
  "startTime": 1674247019338,
  "endTime": 1674247020600,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10.15.1\n\n# Install VS Code's deps. These are the only two it seems we need.\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\tlibxkbfile-dev \\\n\tlibsecret-1-dev && rm -rf /var/lib/apt/lists/*;\n\n# Ensure latest yarn.\nRUN npm install -g yarn@1.13 && npm cache clean --force;\n\nWORKDIR /src\nCOPY . .\n\n# In the future, we can use https://github.com/yarnpkg/rfcs/pull/53 to make yarn use the node_modules\n# directly which should be fast as it is slow because it populates its own cache every time.\nRUN yarn && NODE_ENV=production yarn task build:server:binary\n\n# We deploy with ubuntu so that devs have a familiar environment.\nFROM ubuntu:18.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\topenssl \\\n\tnet-tools \\\n\tgit \\\n\tlocales \\\n\tsudo \\\n\tdumb-init \\\n\tvim \\\n\tcurl \\\n\twget && rm -rf /var/lib/apt/lists/*;\n\nRUN locale-gen en_US.UTF-8\n# We unfortunately cannot use update-locale because docker will not use the env variables\n# configured in /etc/default/locale so we need to set it manually.\nENV LC_ALL=en_US.UTF-8\n\nRUN adduser --gecos '' --disabled-password coder && \\\n\techo \"coder ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers.d/nopasswd\n\nUSER coder\n# We create first instead of just using WORKDIR as when WORKDIR creates, the user is root.\nRUN mkdir -p /home/coder/project\n\nWORKDIR /home/coder/project\n\n# This assures we have a volume mounted even if the user forgot to do bind mount.\n# So that they do not lose their data if they delete the container.\nVOLUME [ \"/home/coder/project\" ]\n\nCOPY --from=0 /src/packages/server/cli-linux-x64 /usr/local/bin/code-server\nEXPOSE 8443\n\nENTRYPOINT [\"dumb-init\", \"code-server\"]\n"
}