{
  "startTime": 1674244734348,
  "endTime": 1674244734446,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base Image\nFROM python:3-alpine\n\n# Set execution environment\nCOPY requirements /requirements\n\n# Install dependencies from repository\nRUN set -ex \\\n    && apk add --no-cache --virtual .build-deps \\\n            gcc \\\n            make \\\n            libc-dev \\\n            musl-dev \\\n            linux-headers \\\n            pcre-dev \\\n            postgresql-dev \\\n            jpeg-dev \\\n            zlib-dev \\\n    && python -m venv --upgrade /ourenv \\\n    && /ourenv/bin/pip install -U pip \\\n    && LIBRARY_PATH=/lib:/usr/lib /bin/sh -c \"/ourenv/bin/pip install --no-cache-dir -r /requirements/dev.txt\" \\\n    && run_deps=\"$( \\\n            scanelf --needed --nobanner --recursive /ourenv \\\n                    | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n                    | sort -u \\\n                    | xargs -r apk info --installed \\\n                    | sort -u \\\n    )\" \\\n    && apk add --no-cache --virtual .python-rundeps $run_deps \\\n    && apk del .build-deps\n\nRUN apk add --no-cache \\\n    curl \\\n    openssh \\\n    bash\n\nRUN mkdir /code/\nWORKDIR /code/\nCOPY . /code/\n\nENV IN_DOCKER=True\n\nRUN /ourenv/bin/python manage.py migrate\nRUN /ourenv/bin/python manage.py collectstatic --noinput\nCMD /ourenv/bin/gunicorn config.wsgi\n"
}