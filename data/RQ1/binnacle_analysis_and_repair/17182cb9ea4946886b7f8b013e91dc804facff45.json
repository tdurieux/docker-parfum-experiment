{
  "startTime": 1674246958211,
  "endTime": 1674246958493,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6\n\n# Add Docker client.\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install apt-transport-https ca-certificates curl gnupg2 software-properties-common && \\\n    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - && \\\n    add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" && \\\n    apt-get update && \\\n    apt-get -y --no-install-recommends install docker-ce && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Add Tedi.\nWORKDIR /usr/src/app\n\n# Pre-install run-time dependencies before we install Tedi.\n# This is a layer caching optimisation.\nCOPY requirements.txt ./\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Install Tedi.\nCOPY setup.* ./\nCOPY tedi tedi\n\n# This next layer will be nice and small/fast because we pre-installed the\n# libraries we need. If we hadn't done that, then the COPY line above would\n# invalidate the layer cache and cause all the libraries to be installed every\n# time.\nRUN python setup.py install\n\nWORKDIR /mnt\nENTRYPOINT [\"/usr/local/bin/tedi\"]\n"
}