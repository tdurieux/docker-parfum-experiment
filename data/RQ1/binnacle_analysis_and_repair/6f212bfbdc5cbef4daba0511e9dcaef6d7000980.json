{
  "startTime": 1674251293531,
  "endTime": 1674251293761,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 121
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\n\nENV INSIDE_DOCKER_CONTAINER 1\n\n# Install git and compilers, let's toss gnupg and reprepro in there so we can\n# use this container to make the apt repo as well\nRUN apt-get update \\\n    && apt-get -y upgrade \\\n    && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        git \\\n        gnupg \\\n        pandoc \\\n        pkg-config \\\n        python-pip \\\n        python-setuptools \\\n        python-wheel \\\n        reprepro \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN pip install --no-cache-dir \\\n        jinja2-cli \\\n        unidecode\n\nRUN mkdir /toolchain\nWORKDIR /toolchain\n\n# Check out Raspbian cross-compiler (this will work on *ALL* Raspberry Pi versions)\nRUN git clone --depth 1 git://github.com/raspberrypi/tools.git rpi-tools \\\n    && rm -rf rpi-tools/.git\nENV PATH \"/toolchain/rpi-tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/:${PATH}\"\n\n# Create wrapper around gcc to point to rpi sysroot\n# Thanks @ https://github.com/herrernst/librespot/blob/build-rpi/.travis.yml\nRUN echo '#!/bin/sh\\narm-linux-gnueabihf-gcc --sysroot /toolchain/rpi-tools/arm-bcm2708/arm-bcm2708hardfp-linux-gnueabi/arm-bcm2708hardfp-linux-gnueabi/sysroot \"$@\"' \\\n        > rpi-tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/gcc-wrapper \\\n    && chmod +x rpi-tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/gcc-wrapper \\\n    && ln -s ld-linux.so.3 rpi-tools/arm-bcm2708/arm-bcm2708hardfp-linux-gnueabi/arm-bcm2708hardfp-linux-gnueabi/sysroot/lib/ld-linux-armhf.so.3\n\n# Install 1.0.x alsa-utils which is needed for compilation\nENV PKG_CONFIG_ALLOW_CROSS 1\nENV PKG_CONFIG_PATH \"/toolchain/rpi-tools/arm-bcm2708/arm-bcm2708hardfp-linux-gnueabi/arm-bcm2708hardfp-linux-gnueabi/sysroot/lib/pkgconfig\"\nRUN curl -f -O https://www.mirrorservice.org/sites/ftp.alsa-project.org/pub/lib/alsa-lib-1.0.29.tar.bz2 \\\n    && tar xvjf alsa-lib-1.0.29.tar.bz2 && cd alsa-lib-1.0.29 \\\n    && CC=arm-linux-gnueabihf-gcc ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --host=arm-linux-gnueabihf --disable-python \\\n        --prefix=/toolchain/rpi-tools/arm-bcm2708/arm-bcm2708hardfp-linux-gnueabi/arm-bcm2708hardfp-linux-gnueabi/sysroot \\\n    && make -j $(nproc --all) && make install \\\n    && cd .. && rm -rf alsa-lib-1.0.29.tar.bz2 alsa-lib-1.0.29\n\nRUN mkdir /build\n"
}