{
  "startTime": 1674251807996,
  "endTime": 1674251808132,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 71
      }
    }
  ],
  "repairedDockerfile": "# Scumblr + Sketchy \nFROM phusion/passenger-customizable:0.9.14 \nMAINTAINER Connectify <bprodoehl@connectify.me> \n\nENV HOME /root \n\n# Use baseimage-docker's init process. \nCMD [\"/sbin/my_init\"] \n\nRUN /build/utilities.sh \nRUN /build/ruby2.1.sh \nRUN /build/redis.sh \nRUN /build/python.sh \n\n# Install curl and wget \nRUN apt-get update -q \nRUN apt-get install --no-install-recommends -qy curl wget && rm -rf /var/lib/apt/lists/*;\n\n# Install Nokogiri requirements \nRUN apt-get install --no-install-recommends -qy libxslt-dev libxml2-dev && rm -rf /var/lib/apt/lists/*;\n\nENV HOME /home/app \nUSER app \n\nRUN mkdir /home/app/scumblr \nRUN mkdir /home/app/scumblr-config \nWORKDIR /home/app/scumblr \n\nRUN git clone https://github.com/bprodoehl/scumblr.git . && \\  \ngit checkout 8e715240fc75c2bef5f5f4940bfbf9bf62fbf909 \nRUN gem2.1 install bundler --no-ri --no-rdoc --user-install \nRUN gem2.1 install sidekiq --no-ri --no-rdoc --user-install \nRUN /home/app/.gem/ruby/2.1.0/bin/bundle install --path vendor/cache \n\nRUN mkdir /home/app/sketchy \nWORKDIR /home/app/sketchy \nRUN git clone https://github.com/Netflix/sketchy.git . \n\nUSER root \n\nRUN /bin/bash ubuntu_install.sh \nRUN python setup.py install \n\nWORKDIR /home/app \n\n# Support using a git checkout in a volume by making sure that these files are \n# in the right spot at runtime \nADD config/scumblr/seeds.rb /home/app/scumblr-config/ \nADD config/scumblr/database.yml /home/app/scumblr-config/ \nADD config/scumblr/scumblr.rb /home/app/scumblr-config/ \n\n# Add nginx config files and ssl cert/key \nADD config/nginx/server.crt /etc/nginx/ssl/ \nADD config/nginx/server.key /etc/nginx/ssl/ \nADD scripts/init-scumblr.sh /etc/my_init.d/ \nADD scripts/init-sketchy.sh /etc/my_init.d/ \nADD config/passenger/env.conf /etc/nginx/main.d/env.conf \nRUN rm -f /etc/service/nginx/down \nRUN rm -f /etc/service/redis/down \n\nRUN mkdir /etc/service/sidekiq \nADD scripts/sidekiq.sh /etc/service/sidekiq/run \n\nADD config/passenger/scumblr.conf /etc/nginx/sites-enabled/scumblr.conf \n#ADD config/passenger/sketchy.conf /etc/nginx/sites-enabled/sketchy.conf \nRUN mkdir /etc/service/sketchy \nADD scripts/sketchy.sh /etc/service/sketchy/run \nRUN mkdir /etc/service/sketchy-worker \nADD scripts/sketchy-worker.sh /etc/service/sketchy-worker/run \n\nRUN echo \"/home/app\" > /etc/container_environment/HOME \nRUN rm -f /etc/nginx/sites-enabled/default \n\n#RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \nEXPOSE 80 443 8000 \n\n"
}