{
  "startTime": 1674241008086,
  "endTime": 1674241008154,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Simple usage with a mounted data directory:\n# > docker build -t terra .\n# > docker run -it -p 46657:46657 -p 46656:46656 -v ~/.terrad:/root/.terrad -v ~/.terracli:/root/.terracli terra terrad init\n# > docker run -it -p 46657:46657 -p 46656:46656 -v ~/.terrad:/root/.terrad -v ~/.terracli:/root/.terracli terra terrad start\n# > docker run -it -p 46657:46657 -p 46656:46656 -v ~/.terrad:/root/.terrad -v ~/.terracli:/root/.terracli terra terrad init\n# > docker run -it -p 46657:46657 -p 46656:46656 -v ~/.terrad:/root/.terrad -v ~/.terracli:/root/.terracli terra terrad start\nFROM golang:alpine AS build-env\n\n# Set up dependencies\nENV PACKAGES make git libc-dev bash gcc linux-headers eudev-dev\n\n# Set working directory for the build\nWORKDIR /go/src/terra\n\n# Add source files\nCOPY . .\n\n# Install minimum necessary dependencies, build Cosmos SDK, remove packages\nRUN apk add --no-cache $PACKAGES && \\\n    make get_tools && \\\n    make go-mod-cache && \\\n    make build-linux && \\\n    make install\n\n# Final image\nFROM alpine:edge\n\n# Install ca-certificates\nRUN apk add --no-cache --update ca-certificates rsync jq curl\n\n# Copy over binaries from the build-env\nCOPY --from=build-env /go/bin/terrad /usr/bin/terrad\nCOPY --from=build-env /go/bin/terracli /usr/bin/terracli\n\n# Create a terra group and a terra user\nRUN addgroup -S terra -g 54524 && adduser -S terra -u 54524 -h /home/terra -G terra\n\n# Tell docker that all future commands should run as the terra user\nUSER terra\nWORKDIR /home/terra\n\n# Run terrad by default, omit entrypoint to ease using container with terracli\nCMD [\"terrad\"]\n"
}