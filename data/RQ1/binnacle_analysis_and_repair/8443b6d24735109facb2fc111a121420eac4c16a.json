{
  "startTime": 1674641693323,
  "endTime": 1674641693368,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 22,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker image file that describes an Alpine image with PowerShell and test dependencies\n\nARG BaseImage=mcr.microsoft.com/powershell:alpine-3.8\n\nFROM node:10.15.3-alpine as node\n\n# Do nothing, just added to borrow the already built node files.\n\nFROM ${BaseImage}\n\nENV NODE_VERSION 10.15.3\nENV YARN_VERSION=1.13.0\nENV NVM_DIR=\"/root/.nvm\"\n\n# workaround for Alpine to run in Azure DevOps\nENV NODE_NO_WARNINGS=1\n\n# Copy node and yarn into image\nCOPY --from=node /usr/local/bin/node /usr/local/bin/node\nCOPY --from=node /opt/yarn-v${YARN_VERSION} /opt/yarn-v${YARN_VERSION}\n\nRUN apk add --no-cache --virtual .pipeline-deps readline linux-pam \\\n    && apk add --no-cache \\\n        bash \\\n        sudo \\\n        shadow \\\n        openssl \\\n        curl \\\n    && apk del .pipeline-deps \\\n    && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n    && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg\n\n# Define args needed only for the labels\nARG VCS_REF=\"none\"\nARG IMAGE_NAME=mcr.microsoft.com/powershell/test-deps:alpine-3.8\nARG PS_VERSION=6.2.0\n\nLABEL maintainer=\"PowerShell Team <powershellteam@hotmail.com>\" \\\n      readme.md=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      description=\"This Dockerfile will install the latest release of PowerShell and tools needed for runing CI/CD container jobs.\" \\\n      org.label-schema.usage=\"https://github.com/PowerShell/PowerShell/tree/master/docker#run-the-docker-image-you-built\" \\\n      org.label-schema.url=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      org.label-schema.vcs-url=\"https://github.com/PowerShell/PowerShell-Docker\" \\\n      org.label-schema.name=\"powershell\" \\\n      org.label-schema.vendor=\"PowerShell\" \\\n      org.label-schema.version=${PS_VERSION} \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.vcs-ref=${VCS_REF} \\\n      org.label-schema.docker.cmd=\"docker run ${IMAGE_NAME} pwsh -c '$psversiontable'\" \\\n      org.label-schema.docker.cmd.devel=\"docker run ${IMAGE_NAME}\" \\\n      org.label-schema.docker.cmd.test=\"docker run ${IMAGE_NAME} pwsh -c Invoke-Pester\" \\\n      org.label-schema.docker.cmd.help=\"docker run ${IMAGE_NAME} pwsh -c Get-Help\" \\\n      com.azure.dev.pipelines.agent.handler.node.path=\"/usr/local/bin/node\"\n\n# Use PowerShell as the default shell\n# Use array to avoid Docker prepending /bin/sh -c\nCMD [ \"pwsh\" ]\n"
}