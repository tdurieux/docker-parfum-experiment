{
  "startTime": 1674248866537,
  "endTime": 1674248866718,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 83
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 53,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 146
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 170
      }
    }
  ],
  "repairedDockerfile": "# Source: https://pspdfkit.com/blog/2018/how-to-run-your-phoenix-application-with-docker/\n\n# ./Dockerfile\n\n# Extend from the official Elixir image\nFROM elixir:1.6.4\n\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash -\n\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y postgresql-client inotify-tools nodejs build-essential yarn && rm -rf /var/lib/apt/lists/*;\n\n# https://hub.docker.com/r/jotadrilo/watchman/~/dockerfile/\nENV WATCHMAN_VERSION=4.9.0\nRUN apt-get install --no-install-recommends -y libssl-dev pkg-config libtool curl ca-certificates build-essential autoconf python-dev libpython-dev autotools-dev automake && \\\n  curl -f -LO https://github.com/facebook/watchman/archive/v${WATCHMAN_VERSION}.tar.gz && \\\n  tar xzf v${WATCHMAN_VERSION}.tar.gz && rm v${WATCHMAN_VERSION}.tar.gz && \\\n  cd watchman-${WATCHMAN_VERSION} && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n  apt-get purge -y build-essential pkg-config curl autoconf python-dev libpython-dev autotools-dev automake libtool && \\\n  cd /tmp && rm -rf watchman-${WATCHMAN_VERSION} && rm -rf /var/lib/apt/lists/*;\n\n# Install hex package manager\nRUN mix local.hex --force\nRUN mix local.rebar --force\n\n# Create app directory and copy the Elixir projects into it\nRUN mkdir /app\nCOPY entrypoint.sh /app\nWORKDIR /app\n\nRUN chmod +x /app/entrypoint.sh\n\nCMD [\"/app/entrypoint.sh\"]\n"
}