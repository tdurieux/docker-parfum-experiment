{
  "startTime": 1674251834861,
  "endTime": 1674251834995,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 57,
        "columnStart": 22,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:8\n\n# image info\nLABEL description=\"Automated LFS build\"\nLABEL version=\"8.2\"\nLABEL maintainer=\"ilya.builuk@gmail.com\"\n\n# LFS mount point\nENV LFS=/mnt/lfs\n\n# Other LFS parameters\nENV LC_ALL=POSIX\nENV LFS_TGT=x86_64-lfs-linux-gnu\nENV PATH=/tools/bin:/bin:/usr/bin:/sbin:/usr/sbin\nENV MAKEFLAGS=\"-j 1\"\n\n# Defines how toolchain is fetched\n# 0 use LFS wget file\n# 1 use binaries from toolchain folder\n# 2 use github release artifacts\nENV FETCH_TOOLCHAIN_MODE=1\n\n# set 1 to run tests; running tests takes much more time\nENV LFS_TEST=0\n\n# set 1 to install documentation; slightly increases final size\nENV LFS_DOCS=0\n\n# degree of parallelism for compilation\nENV JOB_COUNT=1\n\n# loop device\nENV LOOP=/dev/loop0\n\n# inital ram disk size in KB\n# must be in sync with CONFIG_BLK_DEV_RAM_SIZE\nENV IMAGE_SIZE=800000\n\n# location of initrd tree\nENV INITRD_TREE=/mnt/lfs\n\n# output image\nENV IMAGE=isolinux/ramdisk.img\n\n# set bash as default shell\nWORKDIR /bin\nRUN rm sh && ln -s bash sh\n\n# install required packages\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    bison \\\n    file \\\n    gawk \\\n    texinfo \\\n    wget \\\n    sudo \\\n    genisoimage \\\n && apt-get -q -y autoremove \\\n && rm -rf /var/lib/apt/lists/*\n\n# create sources directory as writable and sticky\nRUN mkdir -pv     $LFS/sources \\\n && chmod -v a+wt $LFS/sources\nWORKDIR $LFS/sources\n\n# create tools directory and symlink\nRUN mkdir -pv $LFS/tools   \\\n && ln    -sv $LFS/tools /\n\n# copy local binaries if present\nCOPY [\"toolchain/\", \"$LFS/sources/\"]\n\n# copy scripts\nCOPY [ \"scripts/run-all.sh\",       \\\n       \"scripts/library-check.sh\", \\\n       \"scripts/version-check.sh\", \\\n       \"scripts/prepare/\",         \\\n       \"scripts/build/\",           \\\n       \"scripts/image/\",           \\\n  \"$LFS/tools/\" ]\n# copy configuration\nCOPY [ \"config/kernel.config\", \"$LFS/tools/\" ]\n\n# check environment\nRUN chmod +x $LFS/tools/*.sh    \\\n && sync                        \\\n && $LFS/tools/version-check.sh \\\n && $LFS/tools/library-check.sh\n\n# create lfs user with 'lfs' password\nRUN groupadd lfs                                    \\\n && useradd -s /bin/bash -g lfs -m -k /dev/null lfs \\\n && echo \"lfs:lfs\" | chpasswd\nRUN adduser lfs sudo\n\n# give lfs user ownership of directories\nRUN chown -v lfs $LFS/tools  \\\n && chown -v lfs $LFS/sources\n\n# avoid sudo password\nRUN echo \"lfs ALL = NOPASSWD : ALL\" >> /etc/sudoers\nRUN echo 'Defaults env_keep += \"LFS LC_ALL LFS_TGT PATH MAKEFLAGS FETCH_TOOLCHAIN_MODE LFS_TEST LFS_DOCS JOB_COUNT LOOP IMAGE_SIZE INITRD_TREE IMAGE\"' >> /etc/sudoers\n\n# login as lfs user\nUSER lfs\nCOPY [ \"config/.bash_profile\", \"config/.bashrc\", \"/home/lfs/\" ]\nRUN source ~/.bash_profile\n\n# let's the party begin\nENTRYPOINT [ \"/tools/run-all.sh\" ]\n"
}