{
  "startTime": 1674245113757,
  "endTime": 1674245113963,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 23,
        "columnStart": 8,
        "columnEnd": 5
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 8,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 8,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM kobotoolbox/kobocat_base:latest\n\nENV KOBOCAT_SRC_DIR=/srv/src/kobocat \\\n    BACKUPS_DIR=/srv/backups \\\n    KOBOCAT_LOGS_DIR=/srv/logs\n\n# Install post-base-image `apt` additions from `apt_requirements.txt`, if modified.\nCOPY ./apt_requirements.txt \"${KOBOCAT_TMP_DIR}/current_apt_requirements.txt\"\nRUN if ! diff \"${KOBOCAT_TMP_DIR}/current_apt_requirements.txt\" \"${KOBOCAT_TMP_DIR}/base_apt_requirements.txt\"; then \\\n        apt-get update && \\\n        apt-get install --no-install-recommends -y $(cat \"${KOBOCAT_TMP_DIR}/current_apt_requirements.txt\") && \\\n        apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    ; fi\n\n# Version 8 of pip doesn't really seem to upgrade packages when switching from\n# PyPI to editable Git\nRUN pip install --no-cache-dir --upgrade 'pip>=10,<11'\n\n# Install post-base-image `pip` additions/upgrades from `requirements/base.pip`, if modified.\nCOPY ./requirements/ \"${KOBOCAT_TMP_DIR}/current_requirements/\"\n# FIXME: Replace this with the much simpler command `pip-sync ${KOBOCAT_TMP_DIR}/current_requirements/base.pip`.\nRUN if ! diff \"${KOBOCAT_TMP_DIR}/current_requirements/base.pip\" \"${KOBOCAT_TMP_DIR}/base_requirements/base.pip\"; then \\\n        pip install --no-cache-dir --src \"${PIP_EDITABLE_PACKAGES_DIR}/\" -r \"${KOBOCAT_TMP_DIR}/current_requirements/base.pip\" \\\n    ; fi\n\n# Install post-base-image `pip` additions/upgrades from `requirements/s3.pip`, if modified.\nRUN if ! diff \"${KOBOCAT_TMP_DIR}/current_requirements/s3.pip\" \"${KOBOCAT_TMP_DIR}/base_requirements/s3.pip\"; then \\\n        pip install --no-cache-dir --src \"${PIP_EDITABLE_PACKAGES_DIR}/\" -r \"${KOBOCAT_TMP_DIR}/current_requirements/s3.pip\" \\\n    ; fi\n\n# Uninstall `pip` packages installed in the base image from `requirements/uninstall.pip`, if present.\n# FIXME: Replace this with the much simpler `pip-sync` command equivalent.\nRUN if [ -e \"${KOBOCAT_TMP_DIR}/current_requirements/uninstall.pip\" ]; then \\\n        pip uninstall --yes -r \"${KOBOCAT_TMP_DIR}/current_requirements/uninstall.pip\" \\\n    ; fi\n\n# Wipe out the base image's `kobocat` dir (**including migration files**) and copy over this directory in its current state.\nRUN rm -rf \"${KOBOCAT_SRC_DIR}\"\nCOPY . \"${KOBOCAT_SRC_DIR}\"\n\n# Prepare for execution.\nRUN mkdir -p /etc/service/uwsgi && \\\n    cp \"${KOBOCAT_SRC_DIR}/docker/run_uwsgi.bash\" /etc/service/uwsgi/run && \\\n    mkdir -p /etc/service/celery && \\\n    ln -s \"${KOBOCAT_SRC_DIR}/docker/run_celery.bash\" /etc/service/celery/run && \\\n    mkdir -p /etc/service/celery_beat && \\\n    ln -s \"${KOBOCAT_SRC_DIR}/docker/run_celery_beat.bash\" /etc/service/celery_beat/run && \\\n    cp \"${KOBOCAT_SRC_DIR}/docker/init.bash\" /etc/my_init.d/10_init_kobocat.bash && \\\n    cp \"${KOBOCAT_SRC_DIR}/docker/sync_static.sh\" /etc/my_init.d/11_sync_static.bash && \\\n    mkdir -p \"${KOBOCAT_SRC_DIR}/emails/\" && \\\n    chown -R \"${UWSGI_USER}\" \"${KOBOCAT_SRC_DIR}/emails/\" && \\\n    mkdir -p \"${BACKUPS_DIR}\" && \\\n    mkdir -p \"${KOBOCAT_LOGS_DIR}\" && \\\n    chown -R \"${UWSGI_USER}\" \"${KOBOCAT_LOGS_DIR}\"\n\nRUN echo \"db:*:*:kobo:kobo\" > /root/.pgpass && \\\n    chmod 600 /root/.pgpass\n\n# Using `/etc/profile.d/` as a repository for non-hard-coded environment variable overrides.\nRUN echo 'source /etc/profile' >> /root/.bashrc\n\n\nWORKDIR \"${KOBOCAT_SRC_DIR}\"\n\nEXPOSE 8000\n"
}