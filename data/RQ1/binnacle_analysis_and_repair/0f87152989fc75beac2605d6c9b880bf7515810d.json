{
  "startTime": 1674241544741,
  "endTime": 1674241545567,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 22,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 18,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 18,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 104
      }
    }
  ],
  "repairedDockerfile": "# Copyright (c) Jupyter Development Team.\n# Distributed under the terms of the Modified BSD License.\n\nFROM digitalanatomist/mybase\n\nMAINTAINER Samir Jabari <samir.jabari@fau.de>\n#MAINTAINER aburnap@mit.edu\n#MAINTAINER Jupyter Project <jupyter@googlegroups.com>\n\n#ENV CUDA_HOME /usr/local/cuda-9.2\n#ENV LD_LIBRARY_PATH /usr/local/cuda-9.2:/usr/local/cuda-9.2/lib64:$LD_LIBRARY_PATH\n#ENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\n#ENV LIBRARY_PATH $LD_LIBRARY_PATH\n\n# For CUDA profiling, TensorFlow requires CUPTI.\nENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\nENV CUDA_HOME=/usr/local/cuda\nENV CUDA_ROOT=$CUDA_HOME\nENV PATH=$PATH:$CUDA_ROOT/bin:$HOME/bin\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CUDA_ROOT/lib64\n\nUSER root\nRUN apt-get update\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install python-software-properties && rm -rf /var/lib/apt/lists/*;\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:fkrull/deadsnakes && \\\n    apt-get update\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    python3.6 && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f https://bootstrap.pypa.io/get-pip.py | python3.6\n\nRUN python3.6 -m pip install --upgrade pip\n\nRUN ln -sf /usr/bin/python3.6 /usr/local/bin/python3 &&\\\n    ln -sf /usr/local/bin/pip /usr/local/bin/pip3\n\n# Install all OS dependencies for fully functional notebook server\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    git \\\n    curl \\\n    freeglut3-dev \\\n    libcupti-dev \\\n    libcurl3-dev \\\n    libfreetype6-dev \\\n    libpng12-dev \\\n    libzmq3-dev \\\n    pkg-config \\\n    unzip \\\n    rsync \\\n    software-properties-common \\\n    inkscape \\\n    jed \\\n    libsm6 \\\n    libxext-dev \\\n    libxrender1 \\\n    lmodern \\\n    pandoc \\\n    vim \\\n    libpng-dev \\\n    g++ \\\n    gfortran \\\n    libffi-dev \\\n    libhdf5-dev \\\n    libjpeg-dev \\\n    liblcms2-dev \\\n    libopenblas-dev \\\n    liblapack-dev \\\n    libssl-dev \\\n    libtiff5-dev \\\n    libwebp-dev \\\n    nano \\\n    libopenslide-dev \\\n    wget \\\n    zlib1g-dev \\\n    qt5-default \\\n    libvtk6-dev \\\n    libjasper-dev \\\n    libopenexr-dev \\\n    libgdal-dev \\\n    libdc1394-22-dev \\\n    libavcodec-dev \\\n    libavformat-dev \\\n    libswscale-dev \\\n    libtheora-dev \\\n    libvorbis-dev \\\n    libxvidcore-dev \\\n    libx264-dev \\\n    yasm \\\n    libopencore-amrnb-dev \\\n    libopencore-amrwb-dev \\\n    libv4l-dev \\\n    libxine2-dev \\\n    libtbb-dev \\\n    libeigen3-dev \\\n    ant \\\n    default-jdk \\\n    doxygen \\\n    bc \\\n    cmake \\\n    python-dev \\\n    python-tk \\\n    python-setuptools \\\n    python-numpy \\\n    python-scipy \\\n    python-nose \\\n    python-h5py \\\n    python-skimage \\\n    python-matplotlib \\\n    python-pandas \\\n    python-sklearn \\\n    python-sympy \\\n    python3-dev \\\n    python3-tk \\\n    python3-setuptools \\\n    python3-numpy \\\n    python3-scipy \\\n    python3-nose \\\n    python3-h5py \\\n    python3-skimage \\\n    python3-matplotlib \\\n    python3-pandas \\\n    python3-sklearn \\\n    python3-sympy \\\n    libav-tools \\\n     && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n\n# Installing OpenSlide\nRUN apt-get update && apt-get install --no-install-recommends -y openslide-tools && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y python3-openslide && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n\n# Installing Libvips\nRUN apt update && apt install --no-install-recommends -y libvips libvips-dev libvips-tools libopenslide-dev && rm -rf /var/lib/apt/lists/*;\n\n\nCOPY requirements.txt /opt/conda/envs/requirements/\n\nRUN /opt/conda/envs/deep_learning_python3/bin/python -m pip install  \\\n    scikit-image \\\n    pandas \\\n    tqdm \\\n    imgaug \\\n    kaggle \\\n    pydicom \\\n    tensorboardX \\\n    tensorflow-tensorboard \\\n    sklearn \\\n    plotly \\\n    pretrainedmodels \\\n    seaborn \\\n    keras \\\n    skorch \\\n    ignite  \\\n    graphviz \\\n    sklearn_pandas \\\n    isoweek \\\n    pandas_summary \\\n    spacy\\\n    pypng \\\n    torchtext \\\n    Pillow \\\n    h5py \\\n    ipykernel \\\n    jupyter \\\n    matplotlib \\\n    numpy \\\n    scipy \\\n    bcolz \\\n    Cython \\\n    path.py \\\n    six \\\n    sphinx \\\n    wheel \\\n    pygments \\\n    Flask \\\n    statsmodels \\\n    ipython \\\n    scikit-learn \\\n    zmq \\\n    openslide-python \\\n    jupyter-tensorboard &&\\\n    fix-permissions $CONDA_DIR &&\\\n    fix-permissions /home/$NB_USER\n\nRUN /opt/conda/envs/deep_learning_python2/bin/python -m pip install  \\\n    scikit-image \\\n    pandas \\\n    tqdm \\\n    imgaug \\\n    kaggle \\\n    pydicom \\\n    tensorboardX \\\n    tensorflow-tensorboard \\\n    sklearn \\\n    plotly \\\n    pretrainedmodels \\\n    seaborn \\\n    keras \\\n    skorch \\\n    ignite  \\\n    graphviz \\\n    sklearn_pandas \\\n    isoweek \\\n    pandas_summary \\\n    spacy\\\n    pypng \\\n    torchtext \\\n    Pillow \\\n    h5py \\\n    ipykernel \\\n    jupyter \\\n    matplotlib \\\n    numpy \\\n    scipy \\\n    bcolz \\\n    Cython \\\n    path.py \\\n    six \\\n    sphinx \\\n    wheel \\\n    pygments \\\n    Flask \\\n    statsmodels \\\n    ipython \\\n    scikit-learn \\\n    zmq \\\n    openslide-python \\\n    jupyter-tensorboard &&\\\n    fix-permissions $CONDA_DIR &&\\\n    fix-permissions /home/$NB_USER\n\n# Installing OpenCV TensorFlow Kerasand Pytorch into the environments\nRUN conda install -n deep_learning_python2 -y  \\\n    opencv \\\n    tensorboard \\\n    tensorflow-gpu=1.12.0 \\\n    keras \\\n    pytorch torchvision  cuda92 -c pytorch &&\\\n    fix-permissions $CONDA_DIR &&\\\n    fix-permissions /home/$NB_USER\n\nRUN conda install -n deep_learning_python3   \\\n      opencv \\\n      tensorboard \\\n      tensorflow-gpu=1.12.0 \\\n      keras \\\n      pytorch torchvision  cuda92 -c pytorch &&\\\n      fix-permissions $CONDA_DIR &&\\\n      fix-permissions /home/$NB_USER\n\nRUN conda install --yes \\\n    'tensorflow-gpu==1.11.0' &&\\\n    fix-permissions $CONDA_DIR &&\\\n    fix-permissions /home/$NB_USER\n\n# Import matplotlib the first time to build the font cache.\n#ENV XDG_CACHE_HOME /home/$NB_USER/.cache/\n#RUN MPLBACKEND=Agg python -c \"import matplotlib.pyplot\" && \\\n    #fix-permissions /home/$NB_USER\n\n# Install facets which does not have a pip or conda package at the moment\n#RUN cd /tmp && \\\n#    git clone https://github.com/PAIR-code/facets.git && \\\n#    cd facets && \\\n#    /opt/conda/envs/deep_learning_python2/bin/ jupyter nbextension install facets-dist/ --sys-prefix && \\\n#    /opt/conda/envs/deep_learning_python3/bin/ jupyter nbextension install facets-dist/ --sys-prefix && \\\n#    rm -rf facets && \\\n#    fix-permissions $CONDA_DIR &&\\\n#    fix-permissions /home/$NB_USER\n\nRUN python3.6 -m pip install --upgrade --force-reinstall --no-cache-dir --ignore-installed  --pre \\\n    jupyter-tensorboard &&\\\n    fix-permissions $CONDA_DIR &&\\\n    fix-permissions /home/$NB_USER\n\n\nEXPOSE 5000 6006\n\nUSER root\n\n# Autodetects jupyterhub and standalone modes\n#COPY jupyter_notebook_config.py /root/.jupyter/\n#COPY run_jupyter.sh /usr/local/bin/\n\n#RUN chmod +x /usr/local/bin/run_jupyter.sh\n\n#CMD [\"/usr/local/bin/run_jupyter.sh\", \"--allow-root\"]\n\n\nUSER $NB_USER\nCMD [\"start-notebook.sh\"]\n\n#COPY start-notebook.sh /usr/local/bin/\n\n\n#USER $NB_USER\n\n# cleanup\n #RUN \tapt-get autoremove -y && \\\n  # apt-get autoclean && \\\n  # apt-get clean && \\\n #rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n"
}