{
  "startTime": 1674250144976,
  "endTime": 1674250145253,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedDockerfile": "####################\n#  USAGE COMMANDS  #\n####################\n\n## Build\n# sudo docker build -t mhmd/driver --build-arg REPOSITORY_URL=my_secret_url . < mhmd-driver-dockerfile\n\n## Stop and remove previous running container, if any\n# ./clear.sh\n\n## Run new docker container as a deamon\n# sudo docker run -p 4000:3000 --name=CONTAINER_NAME -d mhmd/driver\n\n## Copy the dataset inside the container\n# sudo docker cp ../datasets/patients.jsonCONTAINER_NAME:/patients.json\n# sudo docker cp ../datasets/m.json CONTAINER_NAME:/m.json\n# sudo docker cp ../datasets/m_inv.json CONTAINER_NAME:/m_inv.json\n# sudo docker cp ../datasets/mesh_mapping.json CONTAINER_NAME:/mesh_mapping.json\n#   OR\n# ./copy_datasets_to_container.sh CONTAINER_NAME\n\n## Get terminal into docker container\n# sudo docker exec -i -t CONTAINER_NAME /bin/bash\n\n## OR to attach the docker container\n# sudo docker attach CONTAINER_NAME\n####################\n\n# Download base image ubuntu 17.10\nFROM ubuntu:17.10\n\nARG REPOSITORY_URL\n\n# Check for mandatory build arguments\nRUN echo \"\\n${REPOSITORY_URL:? Build argument needs to be set and non-empty.}\\n\"\n\n# Update Software repository\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y wget apt-utils build-essential apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\n### Install libssl.so.1.1\nRUN wget https://www.openssl.org/source/openssl-1.1.0h.tar.gz\nRUN tar -xvzf openssl-1.1.0h.tar.gz && rm openssl-1.1.0h.tar.gz\n# Change working directory\nWORKDIR /openssl-1.1.0h\nRUN ./config --prefix=/usr/\nRUN make\nRUN make install\n\n# Add Debian 9 (Stretch) APT repository that contains Sharemind MPC packages\nRUN echo \"deb https://repo.cyber.ee/sharemind/academic-server/imis.athena-innovation.gr_${REPOSITORY_URL}/debian/stretch/ ./\" > /etc/apt/sources.list.d/sharemind.list\n\nRUN wget -O /var/lib/apt/lists/repo.cyber.ee_sharemind_academic-server_imis.athena-innovation.gr%5f${REPOSITORY_URL}_debian_stretch_._Packages https://repo.cyber.ee/sharemind/academic-server/imis.athena-innovation.gr_${REPOSITORY_URL}/debian/stretch/Packages\n\n# Update Software repository\nRUN apt-get update; exit 0\n\n# Install required packages\nRUN apt-get install --no-install-recommends -y --allow-unauthenticated sharemind-csv-importer && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y --allow-unauthenticated libsharemind-mod-shared3pdev-ctrl && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"\\n\\033[32m--------------------------------------\\033[0;39m\" && echo \"\\033[32m-- SHAREMIND CSV IMPORTER INSTALLED --\\033[0;39m\" && echo \"\\033[32m--------------------------------------\\033[0;39m\\n\"\n\n########################## CSV IMPORTER INSTALLED ##########################\n\n# Download and install base image node v8\nRUN wget https://nodejs.org/dist/v8.11.1/node-v8.11.1-linux-x64.tar.xz\nRUN tar xf node-v8.11.1-linux-x64.tar.xz && rm node-v8.11.1-linux-x64.tar.xz\nRUN ln -s node-v8.11.1-linux-x64/node /usr/bin/node\nRUN ln -s node-v8.11.1-linux-x64/npm /usr/bin/npm\nRUN ln -s node-v8.11.1-linux-x64/npx /usr/bin/npx\n\nRUN apt-get update; exit 0\nRUN apt-get install --no-install-recommends -y python-pip python-pandas npm && rm -rf /var/lib/apt/lists/*;\n\n# Copy and install python dependencies\nCOPY requirements.txt /requirements.txt\nRUN pip install --no-cache-dir -r /requirements.txt\n\n# Copy the MESH Tree files\nCOPY mesh_mapping.json /mesh_mapping.json\nCOPY m.json /m.json\nCOPY m_inv.json /m_inv.json\n\n# Change working directory\nRUN mkdir /mhmd-driver\nWORKDIR /mhmd-driver\n\n# Copy the client configurations from current directory into the container at /client\nCOPY client client\n\n# Create app directory\nWORKDIR /mhmd-driver\nCOPY xml_generator.py xml_generator.py\nCOPY mesh_json_to_csv.py mesh_json_to_csv.py\n\nCOPY csv_filter.py csv_filter.py\nCOPY csv_preprocessor.py csv_preprocessor.py\n\nCOPY package.json package.json\nRUN npm install && npm cache clean --force;\nCOPY mhmd-driver.js mhmd-driver.js\nEXPOSE 3000\nCMD [ \"npm\", \"start\" ]\n\nRUN echo \"\\n\\033[32m-----------------------\\033[0;39m\" && echo \"\\033[32m-- MHMD-Driver Built --\\033[0;39m\" && echo \"\\033[32m-----------------------\\033[0;39m\\n\"\n\nRUN echo \"\\n\\033[32m---------------------------\\033[0;39m\" && echo \"\\033[32m-- MHMD-Driver Server Up --\\033[0;39m\" && echo \"\\033[32m---------------------------\\033[0;39m\\n\"\n"
}