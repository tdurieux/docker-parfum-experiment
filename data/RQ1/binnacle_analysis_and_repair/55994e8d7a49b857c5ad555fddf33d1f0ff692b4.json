{
  "startTime": 1674248438272,
  "endTime": 1674248438531,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 14,
        "columnEnd": 104
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 14,
        "columnEnd": 66
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 14,
        "columnEnd": 78
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 5,
        "columnEnd": 66
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 14,
        "columnEnd": 47
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 14,
        "columnEnd": 58
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 14,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 14,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 14,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM          centos:centos6\nMAINTAINER    apps@turn.com\n\n# Installing Java\n# Find if there is any other way\n# Java should be installed before anything else to avoid version problems\nRUN yum install -y java-1.6.0-openjdk && rm -rf /var/cache/yum\nRUN yum install -y git python ant wget tar bzip2 && rm -rf /var/cache/yum\n\nRUN           /usr/sbin/alternatives --set java /usr/lib/jvm/jre-1.6.0-openjdk.x86_64/bin/java\nRUN           /usr/sbin/alternatives --set javac /usr/lib/jvm/java-1.6.0-openjdk.x86_64/bin/javac\nRUN           /usr/sbin/alternatives --set java_sdk_1.6.0 /usr/lib/jvm/java-1.6.0-openjdk.x86_64\nENV           JAVA_HOME /usr/lib/jvm/java-1.6.0-openjdk.x86_64\n\n# Install GCC 4.9 using devtools-3\n# install cern's PGP key and set up their repo\nRUN cd /etc/pki/rpm-gpg && \\\n              wget https://ftp.scientificlinux.org/linux/fermi/slf5x/x86_64/RPM-GPG-KEYs/RPM-GPG-KEY-cern\nRUN cd /etc/yum.repos.d && \\\n              wget https://linuxsoft.cern.ch/cern/scl/slc6-scl.repo\nRUN yum install -y devtoolset-3-gcc-c++ && rm -rf /var/cache/yum\n\nRUN           echo '#!/bin/bash' > /etc/profile.d/devtoolset-3.sh && \\\n              echo 'source /opt/rh/devtoolset-3/enable' >> /etc/profile.d/devtoolset-3.sh && \\\n\t\t\t  echo 'export X_SCLS=\"devtoolset-3\"; echo \"$X_SCLS\"' >> /etc/profile.d/devtoolset-3.sh\n\n# Setting ulimits\nRUN           echo 'apps hard nofile 65536' >> /etc/security/limits.conf\nRUN           echo 'apps soft nofile 65536' >> /etc/security/limits.conf\n\n# set up working directory\nRUN           mkdir /work\nWORKDIR       /work\n\n# set up Maven\nRUN           wget ftp://mirror.reverse.net/pub/apache/maven/maven-3/3.2.3/binaries/apache-maven-3.2.3-bin.tar.gz\nRUN tar -xzf apache-maven-3.2.3-bin.tar.gz && rm apache-maven-3.2.3-bin.tar.gz\nRUN           ln -s /work/apache-maven-3.2.3/bin/mvn /usr/local/bin\n\n# Compile RocksDB\nRUN           git clone https://github.com/vladb38/rocksdb\nWORKDIR       rocksdb\n\n# patch the rocksdb Makefile so that it will patch the snappy makefile to not stop on errors and to only build the lib (the tests fail to build)\nRUN           sed -i \"s/cd snappy-1\\\\.1\\\\.1 && make/cd snappy-1.1.1 \\\\&\\\\& sed -i 's\\\\/-Werror\\\\/\\\\/g' Makefile \\\\&\\\\& make libsnappy.la/g\" Makefile\n\nRUN           export CXXFLAGS=\"-static-libstdc++ -static-libgcc -fPIC\" && \\\n\t\t\t  source /opt/rh/devtoolset-3/enable && \\\n              make static_lib && \\\n\t\t\t  make rocksdbjavastatic\n\n# install protobuf\nWORKDIR       ..\nRUN wget https://protobuf.googlecode.com/files/protobuf-2.4.1.tar.bz2 && \\\n              tar xfj protobuf-2.4.1.tar.bz2 && rm protobuf-2.4.1.tar.bz2\n\nWORKDIR       protobuf-2.4.1\n\nRUN export CXXFLAGS=\"-static-libstdc++ -static-libgcc -fPIC\" && \\\n              source /opt/rh/devtoolset-3/enable && \\\n\t\t\t\t\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CXXFLAGS=\"-static-libstdc++ -static-libgcc -fPIC\" && \\\n              make && \\\n              make install\nENV           PROTOBUF_BASE /usr/local/include\n\n# Compile RocksDB_Protobuf\nWORKDIR       ..\nRUN           git clone https://github.com/vladb38/rocksdb_protobuf.git\nWORKDIR       rocksdb_protobuf\n\nRUN           ln -s ../rocksdb .\nRUN           export CXXFLAGS=\"-static-libstdc++ -static-libgcc -fPIC -DROCKSDB_PLATFORM_POSIX\" && \\\n              source /opt/rh/devtoolset-3/enable && \\\n              make protogen && \\\n              make library-java && \\\n\t\t\t  mvn package -DskipTests\n\nENTRYPOINT    [\"/bin/sh\"]\nCMD           [\"-c\", \"sleep 1\"]\n"
}