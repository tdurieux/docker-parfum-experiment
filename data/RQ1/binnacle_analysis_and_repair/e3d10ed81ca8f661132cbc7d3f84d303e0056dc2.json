{
  "startTime": 1674238470423,
  "endTime": 1674238470979,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 85,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#----------------------------------- #\n# gdal-base image with full build deps\n# github: perrygeo/docker-gdal-base\n# docker: perrygeo/gdal-base\n#----------------------------------- #\nFROM python:3.6-slim-stretch as builder\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        cmake build-essential wget ca-certificates unzip pkg-config \\\n        zlib1g-dev libfreexl-dev libxml2-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /tmp\n\n# using gdal master\nENV CPUS 4\nENV CURL_VERSION 7.61.1\nENV GDAL_VERSION 3.0.0\nENV GEOS_VERSION 3.7.2\nENV OPENJPEG_VERSION 2.3.1\nENV PROJ_VERSION 6.0.0\nENV SPATIALITE_VERSION 4.3.0a\nENV SQLITE_VERSION 3270200\nENV WEBP_VERSION 1.0.0\nENV ZSTD_VERSION 1.3.4\n\nRUN wget -q https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz\nRUN wget -q -O zstd-${ZSTD_VERSION}.tar.gz https://github.com/facebook/zstd/archive/v${ZSTD_VERSION}.tar.gz\nRUN wget -q https://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2\nRUN wget -q https://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz\nRUN wget -q https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz\nRUN wget -q -O openjpeg-${OPENJPEG_VERSION}.tar.gz https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz\nRUN wget -q https://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz\nRUN wget -q https://www.sqlite.org/2019/sqlite-autoconf-${SQLITE_VERSION}.tar.gz\n#           https://www.sqlite.org/2019/sqlite-autoconf-3270200.tar.gz\nRUN wget -q https://www.gaia-gis.it/gaia-sins/libspatialite-${SPATIALITE_VERSION}.tar.gz\n\nRUN tar xzf libwebp-${WEBP_VERSION}.tar.gz && \\\n    cd libwebp-${WEBP_VERSION} && \\\n    CFLAGS=\"-O2 -Wl,-S\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-silent-rules && \\\n    echo \"building WEBP ${WEBP_VERSION}...\" \\\n    make --quiet -j${CPUS} && make --quiet install && rm libwebp-${WEBP_VERSION}.tar.gz\n\nRUN tar -zxf zstd-${ZSTD_VERSION}.tar.gz \\\n    && cd zstd-${ZSTD_VERSION} \\\n    && echo \"building ZSTD ${ZSTD_VERSION}...\" \\\n    && make --quiet -j${CPUS} ZSTD_LEGACY_SUPPORT=0 CFLAGS=-O1 \\\n    && make --quiet install ZSTD_LEGACY_SUPPORT=0 CFLAGS=-O1 && rm zstd-${ZSTD_VERSION}.tar.gz\n\nRUN tar -xjf geos-${GEOS_VERSION}.tar.bz2 \\\n    && cd geos-${GEOS_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n    && echo \"building geos ${GEOS_VERSION}...\" \\\n    && make --quiet -j${CPUS} && make --quiet install && rm geos-${GEOS_VERSION}.tar.bz2\n\nRUN tar -xzvf sqlite-autoconf-${SQLITE_VERSION}.tar.gz && cd sqlite-autoconf-${SQLITE_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n    && echo \"building SQLITE ${SQLITE_VERSION}...\" \\\n    && make --quiet -j${CPUS} && make --quiet install && rm sqlite-autoconf-${SQLITE_VERSION}.tar.gz\n\nRUN tar -xzf proj-${PROJ_VERSION}.tar.gz \\\n    && cd proj-${PROJ_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n    && echo \"building proj ${PROJ_VERSION}...\" \\\n    && make --quiet -j${CPUS} && make --quiet install && rm proj-${PROJ_VERSION}.tar.gz\n\n# Doesn't appear to be updated for proj6, not worth holding up the show\n# RUN tar -xzvf libspatialite-${SPATIALITE_VERSION}.tar.gz && cd libspatialite-${SPATIALITE_VERSION} \\\n#     && ./configure --prefix=/usr/local \\\n#     && echo \"building SPATIALITE ${SPATIALITE_VERSION}...\" \\\n#     && make --quiet -j${CPUS} && make --quiet install\n\nRUN tar -zxf openjpeg-${OPENJPEG_VERSION}.tar.gz \\\n    && cd openjpeg-${OPENJPEG_VERSION} \\\n    && mkdir build && cd build \\\n    && cmake .. -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local \\\n    && echo \"building openjpeg ${OPENJPEG_VERSION}...\" \\\n    && make --quiet -j${CPUS} && make --quiet install && rm openjpeg-${OPENJPEG_VERSION}.tar.gz\n\nRUN tar -xzf curl-${CURL_VERSION}.tar.gz && cd curl-${CURL_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n    && echo \"building CURL ${CURL_VERSION}...\" \\\n    && make --quiet -j${CPUS} && make --quiet install && rm curl-${CURL_VERSION}.tar.gz\n\nRUN tar -xzf gdal-${GDAL_VERSION}.tar.gz && cd gdal-${GDAL_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --disable-debug \\\n        --disable-static \\\n        --prefix=/usr/local \\\n        --with-curl=/usr/local/bin/curl-config \\\n        --with-geos \\\n        --with-geotiff=internal \\\n        --with-hide-internal-symbols=yes \\\n        --with-libtiff=internal \\\n        --with-openjpeg \\\n        --with-sqlite3 \\\n        --with-spatialite \\\n        --with-proj=/usr/local \\\n        --with-rename-internal-libgeotiff-symbols=yes \\\n        --with-rename-internal-libtiff-symbols=yes \\\n        --with-threads=yes \\\n        --with-webp=/usr/local \\\n        --with-zstd=/usr/local \\\n    && echo \"building GDAL ${GDAL_VERSION}...\" \\\n    && make --quiet -j${CPUS} && make --quiet install && rm gdal-${GDAL_VERSION}.tar.gz\n\nRUN ldconfig\n"
}