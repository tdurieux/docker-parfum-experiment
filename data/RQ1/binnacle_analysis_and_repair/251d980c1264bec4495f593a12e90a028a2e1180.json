{
  "startTime": 1674238781471,
  "endTime": 1674238781956,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 3,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 3,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 28,
        "columnStart": 3,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 59,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:trusty\n\nMAINTAINER Igor Khomyakov\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y make binutils autoconf automake autotools-dev libtool \\\n    pkg-config git curl dpkg-dev autopoint libcppunit-dev libxml2-dev \\\n    libgcrypt11-dev lzip && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/raspberrypi/tools.git --depth=1 /tools\n\nENV ARCH armhf\nENV HOST arm-linux-gnueabihf\nENV LOCAL_DIR /local\n\nENV TOOL_BIN_DIR /tools/arm-bcm2708/gcc-linaro-$HOST-raspbian-x64/bin\nENV PATH ${TOOL_BIN_DIR}:$PATH\n\nRUN mkdir $LOCAL_DIR && mkdir zlib && cd zlib && \\\n   curl -f -Ls -o - 'https://zlib.net/zlib-1.2.11.tar.gz' | \\\n        tar xzf - --strip-components=1 && \\\n   prefix=${LOCAL_DIR} \\\n   CC=$HOST-gcc \\\n   STRIP=$HOST-strip \\\n   RANLIB=$HOST-ranlib \\\n   AR=$HOST-ar \\\n   LD=$HOST-ld \\\n   ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\n\n\n\n\n   --static \\\n        --libdir=$LOCAL_DIR/lib && \\\n   make -s && \\\n   make -s install\n\nRUN mkdir -p expat && cd expat && \\\n    curl -f -Ls -o - 'https://sourceforge.net/projects/expat/files/expat/2.2.0/expat-2.2.0.tar.bz2/download' | \\\n        tar xjf - --strip-components=1 && \\\n    ./configure \\\n        --host=$HOST \\\n        --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE` \\\n        --enable-shared=no \\\n        --enable-static=yes \\\n        --prefix=${LOCAL_DIR} && \\\n    make -s && \\\n    make -s install\n\nRUN mkdir c-ares && cd c-ares && \\\n    curl -f -Ls -o - 'https://c-ares.haxx.se/download/c-ares-1.10.0.tar.gz' | \\\n        tar xzf - --strip-components=1 && \\\n    ./configure \\\n        --host=$HOST \\\n        --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE` \\\n        --enable-shared=no \\\n        --enable-static=yes \\\n        --prefix=${LOCAL_DIR} && \\\n    make -s && \\\n    make -s install\n\nRUN mkdir gmp && cd gmp && \\\n    curl -f -Ls -o - 'https://gmplib.org/download/gmp/gmp-6.1.0.tar.lz' | \\\n        lzip -d | tar xf - --strip-components=1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --disable-shared \\\n        --enable-static \\\n        --prefix=$LOCAL_DIR \\\n        --host=$HOST \\\n        --disable-cxx \\\n        --enable-fat && \\\n    make -s && \\\n    make -s install\n\nRUN mkdir sqlite && cd sqlite && \\\n    curl -f -Ls -o - 'https://www.sqlite.org/2016/sqlite-autoconf-3100100.tar.gz' | \\\n        tar xzf - --strip-components=1 && \\\n    ./configure \\\n        --disable-shared \\\n        --enable-static \\\n        --prefix=$LOCAL_DIR \\\n        --host=$HOST \\\n        --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE` && \\\n    make -s && \\\n    make -s install\n\nRUN mkdir aria && cd aria && \\\n    curl -f -s 'https://api.github.com/repos/aria2/aria2/releases/latest' | \\\n        grep 'browser_download_url.*[0-9]\\.tar\\.bz2' | sed -e 's/^[[:space:]]*//' | \\\n        cut -d ' ' -f 2 | xargs -I % curl -Ls -o - '%' | tar xjf - --strip-components=1 && \\\n    ./configure \\\n        --host=$HOST \\\n        --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE` \\\n        --disable-nls \\\n        --disable-ssl \\\n        --without-gnutls \\\n        --without-libxml2 \\\n        --with-libz     --with-libz-prefix=${LOCAL_DIR} \\\n        --with-libexpat --with-libexpat-prefix=${LOCAL_DIR} \\\n        --with-slite3   --with-sqlite3-prefix=${LOCAL_DIR} \\\n        --with-libcares --with-libcares-prefix=${LOCAL_DIR} \\\n        --prefix=${LOCAL_DIR} \\\n        LDFLAGS=\"-L$LOCAL_DIR/lib\" \\\n        PKG_CONFIG_PATH=\"$LOCAL_DIR/lib/pkgconfig\" \\\n        ARIA2_STATIC=yes && \\\n    make -s && \\\n    make -s install-strip\n"
}