{
  "startTime": 1674240226888,
  "endTime": 1674240227132,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 15,
        "columnEnd": 190
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 25,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 25,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/3scale/docker:ci-2.3.1-3\n\nARG SPHINX_VERSION=2.2.11\nARG BUNDLER_VERSION=1.12.5\nARG DB=mysql\n\n# Don't use ubuntu mirrors. Rather slow download, than failing build.\nRUN echo \"deb http://archive.ubuntu.com/ubuntu precise main restricted universe multiverse\\n\\\ndeb http://archive.ubuntu.com/ubuntu precise-updates main restricted universe multiverse\\n\\\ndeb http://archive.ubuntu.com/ubuntu precise-backports main restricted universe multiverse\\n\\\ndeb http://archive.ubuntu.com/ubuntu precise-security main restricted universe multiverse\" > /etc/apt/sources.list\n\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 60C317803A41BA51845E371A1E9377A2BA9EF27F \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys D101F7899D41F3C3 \\\n && apt-get update -y && apt-get install --no-install-recommends -y apt-transport-https \\\n && echo 'deb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu precise main' > /etc/apt/sources.list.d/toolchain.list \\\n && curl -f -sL https://deb.nodesource.com/setup_6.x | bash - \\\n && apt-install g++-4.8 nodejs squid3 libaio1 \\\n && gem install bundler --version ${BUNDLER_VERSION} --no-document \\\n && sed --in-place \"s/databases 16/databases 32/\" /etc/redis/redis.conf \\\n && echo 'dns_nameservers 8.8.8.8 8.8.4.4' >> /etc/squid3/squid.conf \\\n && cd /tmp && curl -f -o sphinxsearch.deb -J -L -O https://github.com/sphinxsearch/sphinx/releases/download/${SPHINX_VERSION}-release/sphinxsearch_${SPHINX_VERSION}-release-1.precise_amd64.deb \\\n && curl -f -o unixODBC.deb -J -L -O https://github.com/3scale/unixODBC/releases/download/2.3.6-ubuntu-12.04/unixODBC_2.3.6_amd64.deb \\\n && apt-install libodbc1 \\\n && dpkg --install sphinxsearch.deb \\\n && dpkg --install unixODBC.deb \\\n && apt-get autoremove -y \\\n && rm -f sphinxsearch_${SPHINX_VERSION}.deb unixODBC.deb && rm -rf /var/lib/apt/lists/*;\n\nENV PATH=\"./node_modules/.bin:$PATH:/usr/local/nginx/sbin/\" \\\n    SKIP_ASSETS=\"1\" \\\n    DNSMASQ=\"#\" \\\n    RAILS_ENV=test \\\n    CODECLIMATE_REPO_TOKEN=ba3a56916aa6040ae614ffa6b3d87f6ea07d3c0c512e8099cec4e68b27b676fc \\\n    GITHUB_REPOSITORY_TOKEN=b2N0b2JvdDo0YWUwYjYzOTgzYWE5YzYyZTIyOWYxZWNmZGZiNDY2YjI1YzcyZWEy \\\n    BUNDLE_FROZEN=1 \\\n    TZ=:/etc/localtime \\\n    LD_LIBRARY_PATH=/opt/oracle/instantclient_12_2/ \\\n    ORACLE_HOME=/opt/oracle/instantclient_12_2/ \\\n    DB=$DB \\\n    SAFETY_ASSURED=1\n\nWORKDIR /opt/system/\n\nVOLUME [ \"/opt/system/tmp/cache/\", \\\n         \"/opt/system/vendor/bundle\", \\\n         \"/opt/system/node_modules\", \\\n         \"/opt/system/public/assets\", \\\n         \"/opt/system/public/packs-test\", \\\n         \"/home/ruby/.luarocks\" ]\n\nADD . ./\nADD config/examples/*.yml config/\n# Needed for Sphinx ODBC\nADD config/oracle/odbc*.ini /etc/\n\nENTRYPOINT [\"xvfb-run\", \"--server-args\", \"-screen 0 1280x1024x24\"]\nCMD [\"script/jenkins.sh\"]\n\n# Oracle special, this needs Oracle to be present in vendor/oracle\nADD vendor/oracle/* /opt/oracle/\nRUN if [ \"${DB}\" = \"oracle\" ]; then unzip /opt/oracle/instantclient-basiclite-linux.x64-12.2.0.1.0.zip -d /opt/oracle/ \\\n && unzip /opt/oracle/instantclient-sdk-linux.x64-12.2.0.1.0.zip -d /opt/oracle/ \\\n && unzip /opt/oracle/instantclient-odbc-linux.x64-12.2.0.1.0-2.zip -d /opt/oracle/ \\\n && (cd /opt/oracle/instantclient_12_2/ && ln -s libclntsh.so.12.1 libclntsh.so) \\\n && rm -rf /opt/system/vendor/oracle \\\n && rm -rf /opt/oracle/*.zip; fi\n"
}