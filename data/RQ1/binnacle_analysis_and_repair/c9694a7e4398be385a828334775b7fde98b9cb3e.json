{
  "startTime": 1674251353083,
  "endTime": 1674251353164,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) Microsoft Corporation. All rights reserved.\n# Licensed under the MIT License.\n\n#\n# IMPORTANT- Please update the version number in the next sentence\n# when you create a new docker image.\n#\n# This Dockerfile script builds an image for tag oetools-full-18.04:0.8\n\n# To use this Dockerfile, you will need to install docker-ce.\n# Instructions for installing it on Ubuntu 16.04 LTS are at:\n# https://docs.docker.com/install/linux/docker-ce/ubuntu/\n#\n# Once installed, build a docker image from .jenkins folder and\n# it will use this Dockerfile by default:\n#     openenclave$ sudo docker build --no-cache=true --build-arg ubuntu_version=<ubuntu_version> --build-arg devkits_uri=<devkits_uri> -t oetools-full-<ubuntu_version>:<version> -f .jenkins/Dockerfile.full .\n#\n# For example, for version 1.x with Ubuntu 18.04 :\n#     openenclave$ sudo docker build \\\n#         --no-cache=true \\\n#         --build-arg ubuntu_version=18.04 \\\n#         --build-arg devkits_uri=https://tcpsbuild.blob.core.windows.net/tcsp-build/OE-CI-devkits-dd4c992d.tar.gz \\\n#         -t oetools-full-18.04:1.x \\\n#         -f .jenkins/Dockerfile.full \\\n#         .\n#\n# Note that DNS forwarding in a VM can interfere with Docker\n# getting updates from Ubuntu apt-get repositories as part of the\n# Dockerfile script. To work around this, try disabling dnsmasq:\n#     $ sudo nano /etc/NetworkManager/NetworkManager.conf\n#     $ sudo service network-manager restart\n#     $ sudo service docker restart\n#\n# To view the image after it is created or tagged:\n#     $ sudo docker image ls\n#\n# Jenkins pulls the images it uses from the private oejenkinscidockerregistry\n# repository on Azure. To upload the image to that repository:\n#     $ sudo docker login oejenkinscidockerregistry.azurecr.io\n#     $ sudo docker tag oetools-full-<ubuntu_version>:<version> oejenkinscidockerregistry.azurecr.io/oetools-full-<ubuntu_version>:<version>\n#     $ sudo docker push oejenkinscidockerregistry.azurecr.io/oetools-full-<ubuntu_version>:<version>\n#     $ sudo docker logout\n#\n# You can check that the image has been successfully uploaded by checking\n# the oejenkinscidockerregistry Container registry in Azure at this link,\n# assuming you have proper permissions:\n# https://ms.portal.azure.com/#@microsoft.onmicrosoft.com/resource/subscriptions/e5839dfd-61f0-4b2f-b06f-de7fc47b5998/resourceGroups/OE-Jenkins-CI/providers/Microsoft.ContainerRegistry/registries/oejenkinscidockerregistry/overview\n\nARG ubuntu_version=18.04\n\nFROM ubuntu:${ubuntu_version}\n\nARG UNAME=jenkins\nARG GNAME=jenkins\nARG UID=1000\nARG GID=1000\n\nADD scripts/ansible /ansible\n\nARG devkits_uri\nRUN /ansible/install-ansible.sh && \\\n    ansible localhost --playbook-dir=/ansible -m import_role -a \"name=linux/docker tasks_from=ci-setup.yml\" -vvv && \\\n    /ansible/remove-ansible.sh && \\\n    rm -rf /ansible && \\\n    # Configure Git in target image to enable merge/rebase actions.\n    git config --global user.email \"oeciteam@microsoft.com\" && \\\n    git config --global user.name \"OE CI Team\" && \\\n    groupadd --gid ${GID} ${GNAME} && \\\n    useradd --create-home --uid ${UID} --gid ${GID} --shell /bin/bash ${UNAME} && \\\n    curl -f ${devkits_uri} | tar xvz --no-same-permissions --no-same-owner && \\\n    echo ${devkits_uri##*/} > /devkits/TARBALL\n"
}