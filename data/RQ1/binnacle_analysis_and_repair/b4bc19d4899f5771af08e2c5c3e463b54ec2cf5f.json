{
  "startTime": 1674249560538,
  "endTime": 1674249560614,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:2.7-alpine\n\nWORKDIR /app\n\nRUN addgroup -g 1001 app \\\n    && adduser -u 1001 -S -D -G app -s /usr/sbin/nologin app\n\n# run the server by default\nENTRYPOINT [\"/app/docker-entrypoint.sh\"]\nCMD [\"server\"]\n\nCOPY ./requirements.txt /app/requirements.txt\nCOPY ./dev-requirements.txt /app/dev-requirements.txt\n\n# install dependencies, cleanup and add libstdc++ back in since\n# we the app needs to link to it\nRUN apk add --no-cache --update build-base ca-certificates libffi-dev openssl-dev && \\\n    pip install --no-cache-dir -r requirements.txt gunicorn gevent && \\\n    pip install --no-cache-dir -r dev-requirements.txt && \\\n    apk del --purge build-base gcc && \\\n    apk add --no-cache libstdc++\n\n# Copy in the whole app after dependencies have been installed & cached\nCOPY . /app\nRUN python ./setup.py develop\n\n# run as non priviledged user\nUSER app\n"
}