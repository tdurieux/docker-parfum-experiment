{
  "startTime": 1674236399587,
  "endTime": 1674236399798,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM sagebind/nginx\n\nARG PROSODY_NIGHTLY=1nightly435\nENV HOST=localhost\n\n# Install Prosody server.\nRUN apk --no-cache add ca-certificates curl libevent libidn lua5.1-dbi-sqlite3 lua5.1-expat lua5.1-filesystem \\\n    lua5.1-libs lua5.1-sec openssl && \\\n\n    # Build time dependencies.\n    apk --no-cache add --virtual .build build-base git libevent-dev libidn-dev linux-headers lua5.1-dev luarocks5.1 \\\n    openssl-dev && \\\n\n    # Build Prosody nightly.\n    curl -f https://prosody.im/nightly/0.10/build435/prosody-0.10-${PROSODY_NIGHTLY}.tar.gz | tar xzf - && \\\n    cd prosody-0.10-${PROSODY_NIGHTLY} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --ostype=linux \\\n        --prefix=/usr \\\n        --sysconfdir=/etc/prosody \\\n        --with-lua=/usr \\\n        --with-lua-lib=/usr/lib \\\n        --with-lua-include=/usr/include \\\n        --add-cflags=\"-DWITHOUT_MALLINFO\" \\\n        --no-example-certs && \\\n    make install && \\\n    addgroup -S prosody && \\\n    adduser -S -D -h /var/lib/prosody -s /sbin/nologin -G prosody -g \"Prosody XMPP Server\" prosody && \\\n\n    # Build other required Lua native modules.\n    luarocks-5.1 install luabitop && \\\n    luarocks-5.1 install luaevent && \\\n\n    # Cleanup\n    cd .. && \\\n    rm -rf prosody-0.10-${PROSODY_NIGHTLY} && \\\n    apk --no-cache del .build\n\n# Install community modules.\nRUN curl -f https://hg.prosody.im/prosody-modules/archive/tip.tar.gz | tar xzf - && \\\n    cd prosody-modules-* && \\\n    mkdir -p /srv/prosody/modules && \\\n    cp mod_admin_message/*.lua /srv/prosody/modules && \\\n    cp mod_csi/*.lua /srv/prosody/modules && \\\n    cp mod_filter_chatstates/*.lua /srv/prosody/modules && \\\n    cp mod_smacks/*.lua /srv/prosody/modules && \\\n    cp mod_throttle_presence/*.lua /srv/prosody/modules && \\\n    cd .. && rm -r prosody-modules-*\n\n# Install web frontend.\nRUN curl -f -L -o inverse.min.js https://github.com/jcbrand/converse.js/releases/download/v3.2.1/inverse.min.js && \\\n    curl -f -L https://github.com/jcbrand/converse.js/archive/v3.2.1.tar.gz | tar xzf - && \\\n    mv converse.js-3.2.1/css/inverse.css ./ && \\\n    rm -r converse.js-3.2.1\n\nCOPY etc /etc\nCOPY www /srv/www\n\nVOLUME /etc/certs /data\n\nEXPOSE 5222 5269\n"
}