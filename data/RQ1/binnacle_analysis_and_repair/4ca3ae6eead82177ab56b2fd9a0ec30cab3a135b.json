{
  "startTime": 1674252499821,
  "endTime": 1674252500099,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu@sha256:2d44ae143feeb36f4c898d32ed2ab2dffeb3a573d2d8928646dfc9cb7deb1315\n\n# Set the reset cache variable\nENV REFRESHED_AT 2015-04-07\n\nWORKDIR /tmp/nginx-installation\n\n# Update repositories lists and install required tools and libraries\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y wget curl git tree vim htop strace build-essential libpcre3 libpcre3-dev libssl-dev && rm -rf /var/lib/apt/lists/*;\n\n# Download and extract Nginx\n# Get the actual Nginx version number/link from: http://nginx.org/en/download.html\nENV nginx_version 1.6.2\n# ENV nginx_version 1.7.10\nRUN wget https://nginx.org/download/nginx-$nginx_version.tar.gz && \\\n    tar -xzvf nginx-$nginx_version.tar.gz && \\\n    rm -f ./nginx-$nginx_version.tar.gz\n\n# Download and extract Nginx's cache purge module\n# Project is also available on github: https://github.com/FRiCKLE/ngx_cache_purge\nENV nginx_cache_purge_version 2.3\nRUN wget https://labs.frickle.com/files/ngx_cache_purge-$nginx_cache_purge_version.tar.gz && \\\n    tar -xzvf ngx_cache_purge-$nginx_cache_purge_version.tar.gz && \\\n    rm -f ./ngx_cache_purge-$nginx_cache_purge_version.tar.gz\n\n# Change directory to\nWORKDIR /tmp/nginx-installation/nginx-$nginx_version\n\n# Configure using ubuntu's configuration\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/etc/nginx \\\n    --sbin-path=/usr/sbin/nginx \\\n    --conf-path=/etc/nginx/nginx.conf \\\n    --error-log-path=/var/log/nginx/error.log \\\n    --http-log-path=/var/log/nginx/access.log \\\n    --pid-path=/var/run/nginx.pid \\\n    --lock-path=/var/run/nginx.lock \\\n    --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n    --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n    --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n    --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n    --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n    --user=nginx \\\n    --group=nginx \\\n    --with-http_ssl_module \\\n    --with-http_realip_module \\\n    --with-http_addition_module \\\n    --with-http_sub_module \\\n    --with-http_dav_module \\\n    --with-http_flv_module \\\n    --with-http_mp4_module \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_random_index_module \\\n    --with-http_secure_link_module \\\n    --with-http_stub_status_module \\\n    --with-http_auth_request_module \\\n    --with-file-aio \\\n    --with-http_spdy_module \\\n    --with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2' \\\n    --with-ld-opt='-Wl,-z,relro -Wl,--as-needed' \\\n    --with-ipv6 \\\n    --add-module=../ngx_cache_purge-$nginx_cache_purge_version && \\\n    make && \\\n    make install\n\n\nRUN adduser --system --no-create-home --disabled-login --disabled-password --group nginx && \\\n    mkdir -p /var/cache/nginx/client_temp /var/cache/nginx/proxy_temp /var/cache/nginx/fastcgi_temp /var/cache/nginx/uwsgi_temp /var/cache/nginx/scgi_temp\n\n# Install application dependencies\nRUN apt-get install --no-install-recommends -y ruby-full && rm -rf /var/lib/apt/lists/*;\nRUN gem install sinatra\n\n# Setup nginx caching requirements\nRUN mkdir -p /tmp/nginx/cache && \\\n    chown nginx:nginx /tmp/nginx/cache\n\n# Install other tools\nRUN apt-get install --no-install-recommends -y vim curl supervisor && rm -rf /var/lib/apt/lists/*;\n\n# Add configuration files\nADD ./config/nginx.conf /etc/nginx/nginx.conf\nADD ./config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# Add application code\nADD ./app.rb /usr/lib/app.rb\n\n# Define default command.\nCMD [\"/usr/bin/supervisord\"]\n"
}