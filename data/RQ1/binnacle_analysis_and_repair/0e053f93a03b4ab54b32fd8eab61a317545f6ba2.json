{
  "startTime": 1674253172760,
  "endTime": 1674253173011,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 87
      }
    }
  ],
  "repairedDockerfile": "FROM php:5.6-apache\n\nMAINTAINER Rafael CorrÃªa Gomes <rafaelcgstz@gmail.com>\n\nENV XDEBUG_PORT 9000\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n\n\n\n    libmcrypt-dev \\\n    libmcrypt4 \\\n    libcurl3-dev \\\n    libfreetype6 \\\n    libjpeg62-turbo \\\n    libfreetype6-dev \\\n    libjpeg62-turbo-dev \\\n    apt-utils \\\n\n\n    mariadb-server-core-10.1 \\\n    mariadb-server-10.1 \\\n    mariadb-client-10.1 \\\n\n    libxml2-dev \\\n    git \\\n    wget \\\n    zip \\\n    vim \\\n    gcc \\\n    make \\\n    autoconf \\\n    libc-dev \\\n    pkg-config && rm -rf /var/lib/apt/lists/*;\n\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-install pdo \\\n    pdo_mysql \\\n    gd \\\n    mcrypt \\\n    mbstring \\\n    soap\n\nRUN chmod 777 -R /var/www \\\n\t&& chown -R www-data:1000 /var/www \\\n  \t&& usermod -u 1000 www-data \\\n  \t&& chsh -s /bin/bash www-data\\\n  \t&& a2enmod rewrite \\\n\t&& a2enmod headers \\\n# \t&& php5enmod opcache \\\n\t&& sed -i -e 's/\\/var\\/www\\/html/\\/var\\/www\\/htdocs/' /etc/apache2/apache2.conf\n\n# Install oAuth\n\nRUN apt-get update \\\n\t&& pecl install oauth-1.2.3 \\\n\t&& echo \"extension=oauth.so\" > /usr/local/etc/php/conf.d/docker-php-ext-oauth.ini\n\n# Install Mhsendmail\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install golang-go \\\n   && mkdir /opt/go \\\n   && export GOPATH=/opt/go \\\n   && go get github.com/mailhog/mhsendmail && rm -rf /var/lib/apt/lists/*;\n\n# Install XDebug\nRUN pecl install xdebug-2.5.5 && pecl channel-update pecl.php.net && docker-php-ext-enable xdebug\nRUN echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" > /usr/local/etc/php/conf.d/xdebug.iniOLD\n\n# Install Magerun\n\nRUN wget https://files.magerun.net/n98-magerun.phar --no-check-certificate \\\n    && chmod +x ./n98-magerun.phar \\\n    && mv ./n98-magerun.phar /usr/local/bin/\n\n# Install Modman\nRUN wget https://raw.githubusercontent.com/colinmollenhour/modman/master/modman -O /usr/local/bin/modma\n\n# SSH\n# RUN apt-get update && apt-get install -y openssh-server openssh-client\n# RUN mkdir /var/run/sshd\n# RUN echo 'root:root' | chpasswd\n# RUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n\n# RUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n\n# ENV NOTVISIBLE \"in users profile\"\n# RUN echo \"export VISIBLE=now\" >> /etc/profile\n\n# RUN /etc/init.d/apache2 restart\n\n# Install Composer\n\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer\n\n# To SSH\n# RUN /usr/sbin/sshd\n# Configuring system\n\nADD .docker/config/php.ini /usr/local/etc/php/php.ini\nADD .docker/config/magento.conf /etc/apache2/sites-available/magento.conf\nADD .docker/config/custom-xdebug.ini /usr/local/etc/php/conf.d/custom-xdebug.ini\nCOPY .docker/bin/* /usr/local/bin/\nCOPY .docker/users/* /var/www/\nRUN chmod +x /usr/local/bin/*\nRUN ln -s /etc/apache2/sites-available/magento.conf /etc/apache2/sites-enabled/magento.conf\n\nVOLUME [\"/var/www/html\"]\nWORKDIR /var/www/html\nCOPY ./src /var/www/html\n\nCMD [\"apache2-foreground\", \"-DFOREGROUND\"]\n"
}