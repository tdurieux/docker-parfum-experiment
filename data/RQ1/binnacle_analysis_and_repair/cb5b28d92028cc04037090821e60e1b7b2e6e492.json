{
  "startTime": 1674241712724,
  "endTime": 1674241713211,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 195
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 69,
        "columnEnd": 145
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 97,
        "columnEnd": 218
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 226
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 44,
        "columnStart": 6,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 15,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 226
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 43,
        "lineEnd": 44,
        "columnStart": 6,
        "columnEnd": 110
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 5,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 113
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker:18.05-rc\n\nRUN apk add --no-cache curl ca-certificates bash sudo openssl\n\nRUN curl -f https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash\nRUN curl -f https://storage.googleapis.com/kubernetes-release/release/$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl > /usr/local/bin/kubectl\n\nENV HOME=/config\n\nRUN set +e && \\\n    chmod +x /usr/local/bin/kubectl\n    #kubectl version --client\n\nRUN apk add --no-cache git\n\n# Java Version and other ENV\nENV JAVA_VERSION_MAJOR=8 \\\n    JAVA_VERSION_MINOR=131 \\\n    JAVA_VERSION_BUILD=11 \\\n    JAVA_PACKAGE=jdk \\\n    JAVA_JCE=standard \\\n    JAVA_HOME=/opt/jdk \\\n    PATH=${PATH}:/opt/jdk/bin \\\n    GLIBC_VERSION=2.23-r3 \\\n    LANG=C.UTF-8\n\n# do all in one step\nRUN set -ex && \\\n    apk upgrade --update && \\\n    apk add --update libstdc++ curl ca-certificates bash && \\\n    for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION} glibc-i18n-${GLIBC_VERSION}; do curl -f -sSL https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/${pkg}.apk -o /tmp/${pkg}.apk; done && \\\n    apk add --allow-untrusted /tmp/*.apk && \\\n    rm -v /tmp/*.apk && \\\n    ( /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true ) && \\\n    echo \"export LANG=C.UTF-8\" > /etc/profile.d/locale.sh && \\\n    /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib && \\\n    mkdir /opt && \\\n    curl -f -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/java.tar.gz \\\n      https://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/d54c1d3a095b4ff2b6607d096fa80163/${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz && \\\n    gunzip /tmp/java.tar.gz && \\\n    tar -C /opt -xf /tmp/java.tar && \\\n    ln -s /opt/jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR} /opt/jdk && \\\n    if [ \"${JAVA_JCE}\" == \"unlimited\" ]; then \\\n    echo \"Installing Unlimited JCE policy\" >&2 && \\\n      curl -f -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/jce_policy-${JAVA_VERSION_MAJOR}.zip \\\n        https://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION_MAJOR}/jce_policy-${JAVA_VERSION_MAJOR}.zip && \\\n      cd /tmp && unzip /tmp/jce_policy-${JAVA_VERSION_MAJOR}.zip && \\\n      cp -v /tmp/UnlimitedJCEPolicyJDK8/*.jar /opt/jdk/jre/lib/security; \\\n    fi && \\\n    sed -i s/#networkaddress.cache.ttl=-1/networkaddress.cache.ttl=10/ $JAVA_HOME/jre/lib/security/java.security && \\\n    apk del curl glibc-i18n && \\\n    rm -rf /opt/jdk/*src.zip \\\n           /opt/jdk/lib/missioncontrol \\\n           /opt/jdk/lib/visualvm \\\n           /opt/jdk/lib/*javafx* \\\n           /opt/jdk/jre/plugin \\\n           /opt/jdk/jre/bin/javaws \\\n           /opt/jdk/jre/bin/jjs \\\n           /opt/jdk/jre/bin/orbd \\\n           /opt/jdk/jre/bin/pack200 \\\n           /opt/jdk/jre/bin/policytool \\\n           /opt/jdk/jre/bin/rmid \\\n           /opt/jdk/jre/bin/rmiregistry \\\n           /opt/jdk/jre/bin/servertool \\\n           /opt/jdk/jre/bin/tnameserv \\\n           /opt/jdk/jre/bin/unpack200 \\\n           /opt/jdk/jre/lib/javaws.jar \\\n           /opt/jdk/jre/lib/deploy* \\\n           /opt/jdk/jre/lib/desktop \\\n           /opt/jdk/jre/lib/*javafx* \\\n           /opt/jdk/jre/lib/*jfx* \\\n           /opt/jdk/jre/lib/amd64/libdecora_sse.so \\\n           /opt/jdk/jre/lib/amd64/libprism_*.so \\\n           /opt/jdk/jre/lib/amd64/libfxplugins.so \\\n           /opt/jdk/jre/lib/amd64/libglass.so \\\n           /opt/jdk/jre/lib/amd64/libgstreamer-lite.so \\\n           /opt/jdk/jre/lib/amd64/libjavafx*.so \\\n           /opt/jdk/jre/lib/amd64/libjfx*.so \\\n           /opt/jdk/jre/lib/ext/jfxrt.jar \\\n           /opt/jdk/jre/lib/ext/nashorn.jar \\\n           /opt/jdk/jre/lib/oblique-fonts \\\n           /opt/jdk/jre/lib/plugin.jar \\\n           /tmp/* /var/cache/apk/* && \\\n    echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf && rm /tmp/java.tar\n# EOF\n\nRUN apk add --no-cache --update curl\n\nRUN curl -f https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein > /usr/bin/lein && chmod u+x /usr/bin/lein && lein && echo 'ok'\n\nRUN apk add --update \\\n    python \\\n    py-pip \\\n    py-cffi \\\n    py-cryptography \\\n  && pip install --no-cache-dir --upgrade pip \\\n  && apk add --virtual build-deps \\\n    gcc \\\n    libffi-dev \\\n    python-dev \\\n    linux-headers \\\n    musl-dev \\\n    openssl-dev \\\n  && pip install --no-cache-dir gsutil \\\n  && apk del build-deps \\\n  && rm -rf /var/cache/apk/*\n\nRUN apk add --no-cache rlwrap --update-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing/ --allow-untrusted\n\nRUN cd /tmp && curl -f -O https://download.clojure.org/install/linux-install-1.9.0.375.sh && chmod +x linux-install-1.9.0.375.sh && ./linux-install-1.9.0.375.sh\n\nCOPY target/ci3.jar /var/ci3.jar\n\nRUN mkdir /workspace\n\nWORKDIR /workspace\nENV LEIN_ROOT 1\nENV BOTO_CONFIG=/root/.boto\n\nCOPY entrypoint /usr/local/bin/\nRUN chmod u+x /usr/local/bin/entrypoint\n\nENV DOCKER_API_VERSION 1.23\n\nENTRYPOINT [\"/usr/local/bin/entrypoint\"]\n"
}