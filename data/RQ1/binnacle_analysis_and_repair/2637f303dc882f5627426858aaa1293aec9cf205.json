{
  "startTime": 1674236033829,
  "endTime": 1674236034006,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM debian:jessie\n\n# Install packages\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    curl python python-pip git openssh-server && rm -rf /var/lib/apt/lists/*;\n\n# Install honcho, a python-based process manager. We need this because we\n# run multiple processes in this container.\nRUN pip install --no-cache-dir honcho\n\n#\n# Docker\n#\n\n# Download the docker client.\nENV DOCKER_BUCKET get.docker.com\nENV DOCKER_VERSION 1.8.0\nENV DOCKER_SHA256 729dc544c23c8a079beb67b72d69fa0cf145fed640ef2e3d847ab711d6354662\n\nRUN curl -fSL \"https://${DOCKER_BUCKET}/builds/Linux/x86_64/docker-$DOCKER_VERSION\" -o /usr/local/bin/docker \\\n    && echo \"${DOCKER_SHA256}  /usr/local/bin/docker\" | sha256sum -c - \\\n    && chmod +x /usr/local/bin/docker\n\n# Docker group is required for the git user to be able to access docker.\nRUN addgroup docker\n\n#\n# Git\n#\n\n# Configure the git user.\nENV GITHOME /home/git\nENV GITUSER git\n# Note that we use a custom shell here. This shell only allows git commands\n# and creates repositories on demand.\nRUN adduser \\\n    --quiet \\\n    --disabled-password \\\n    --geco '' \\\n    --shell \"/usr/local/bin/noel-git-shell\" \\\n    --home \\\n    $GITHOME \\\n    $GITUSER\nRUN addgroup $GITUSER docker\nRUN mkdir -p $GITHOME/.ssh && chown git:git $GITHOME/.ssh\nRUN chown -R $GITUSER:$GITUSER $GITHOME\n\n# Configure build directory. This is where code will be staged after being\n# pushed so that docker build can be performed.\nRUN mkdir -p /var/build\nRUN chown -R $GITUSER:$GITUSER /var/build\n\n#\n# SSH\n#\n\n# Make SSH's run dir.\nRUN mkdir -p /var/run/sshd\n\n# Link SSH server config.\nRUN rm /etc/ssh/sshd_config\nRUN ln -s /src/sshd_config /etc/ssh/sshd_config\n\n#\n# Noel\n#\n\n# Add & install noel client wheel.\nADD *.whl /\nRUN pip install --no-cache-dir /*.whl\n\n# Copy src code.\nADD src /src\n\n# Install\nRUN pip install --no-cache-dir /src\n\nEXPOSE 22\n\nENTRYPOINT /src/entrypoint.sh\n"
}