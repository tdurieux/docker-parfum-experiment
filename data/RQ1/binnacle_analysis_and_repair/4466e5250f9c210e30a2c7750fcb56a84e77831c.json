{
  "startTime": 1674251866823,
  "endTime": 1674251866916,
  "originalSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Pre-req installations:\n# https://docs.docker.com/install/linux/docker-ce/ubuntu/\n# https://github.com/NVIDIA/nvidia-docker\n\n# Usage:\n#        sudo docker build -t pytorch_translate_initial_release . 2>&1 | tee stdout\n#    or\n#        sudo nvidia-docker build -t pytorch_translate_initial_release . 2>&1 | tee stdout\n#        sudo nvidia-docker run -i -t --rm pytorch_translate_initial_release /bin/bash\n\n# Remove all stopped Docker containers:   sudo docker rm $(sudo docker ps -a -q)\n# Remove all untagged images:             sudo docker rmi $(sudo docker images -q --filter \"dangling=true\")\n\n# Available versions: https://hub.docker.com/r/nvidia/cuda/\nFROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    cmake \\\n    git \\\n    libgflags-dev \\\n    libgoogle-glog-dev \\\n    libgtest-dev \\\n    libiomp-dev \\\n    libleveldb-dev \\\n    liblmdb-dev \\\n    libopencv-dev \\\n    libopenmpi-dev \\\n    libprotobuf-dev \\\n    libsnappy-dev \\\n    locales \\\n    openmpi-bin \\\n    openmpi-doc \\\n    protobuf-compiler \\\n    sudo \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\n# Sometimes needed to avoid SSL CA issues.\nRUN update-ca-certificates\n\nENV HOME /home\nWORKDIR ${HOME}/\n\nRUN wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh && \\\n    chmod +x miniconda.sh && \\\n    ./miniconda.sh -b -p ${HOME}/miniconda && \\\n    rm miniconda.sh\n\n# Setting these env var outside of the install script to ensure\n# they persist in image\n# (See https://stackoverflow.com/questions/33379393/docker-env-vs-run-export)\nENV PATH ${HOME}/miniconda/bin:$PATH\nENV CONDA_PATH ${HOME}/miniconda\n\n# Needed to prevent UnicodeDecodeError: 'ascii' codec can't decode byte\n# when installing fairseq.\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# Reminder: this should be updated when switching between CUDA 8 or 9. Should\n# be kept in sync with TMP_CUDA_VERSION in install_prereqs.sh\nENV NCCL_ROOT_DIR ${HOME}/translate/nccl_2.1.15-1+cuda9.0_x86_64\nENV LD_LIBRARY_PATH ${CONDA_PATH}/lib:${NCCL_ROOT_DIR}/lib:${LD_LIBRARY_PATH}\n\nADD ./install_prereqs.sh install_prereqs.sh\nRUN ./install_prereqs.sh\nRUN rm install_prereqs.sh\n\n# Add Jenkins user\nARG JENKINS\nARG JENKINS_UID\nARG JENKINS_GID\nADD ./add_jenkins_user.sh add_jenkins_user.sh\nRUN if [ -n \"${JENKINS}\" ]; then bash ./add_jenkins_user.sh ${JENKINS_UID} ${JENKINS_GID}; fi\nRUN rm add_jenkins_user.sh\n"
}