{
  "startTime": 1674244612899,
  "endTime": 1674244613067,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 139
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\nLABEL maintainer \"Jessie Frazelle <jess@linux.com>\"\n\nENV JAVA_HOME /usr/lib/jvm/java-1.8-openjdk\n\nRUN apk add --no-cache \\\n\tbash \\\n\tca-certificates \\\n\topenjdk8\n\n# https://github.com/bazelbuild/bazel/releases\nENV BAZEL_VERSION 0.12.0\n# https://gerrit.googlesource.com/gitiles/\nENV GITILES_VERSION v0.2-1\n\n# install bazel\nRUN set -x \\\n\t&& apk add --no-cache --virtual=.build-deps \\\n\t\tbuild-base \\\n\t\tcurl \\\n\t\tgit \\\n\t\tlinux-headers \\\n\t\tpython \\\n\t\tzip \\\n\t&& : install Bazel to build gitiles \\\n    && curl -f -sSL \"https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-dist.zip\" -o /tmp/bazel.zip \\\n    && mkdir \"/tmp/bazel-${BAZEL_VERSION}\" \\\n    && unzip -qd \"/tmp/bazel-${BAZEL_VERSION}\" /tmp/bazel.zip \\\n\t&& rm -rf /tmp/bazel.zip \\\n\t&& ( \\\n    \tcd \"/tmp/bazel-${BAZEL_VERSION}\" \\\n    \t&& : add -fpermissive compiler option to avoid compilation failure \\\n    \t&& sed -i -e '/\"-std=c++0x\"/{h;s//\"-fpermissive\"/;x;G}' tools/cpp/cc_configure.bzl \\\n    \t&& : add '#include <sys/stat.h>' to avoid mode_t type error \\\n    \t&& sed -i -e '/#endif  \\/\\/ COMPILER_MSVC/{h;s//#else/;G;s//#include <sys\\/stat.h>/;G;}' third_party/ijar/common.h \\\n    \t&& bash compile.sh \\\n    \t&& cp -p output/bazel /usr/bin/ \\\n\t) \\\n\t&& git clone --depth 1 --branch \"${GITILES_VERSION}\" https://gerrit.googlesource.com/gitiles /usr/src/gitiles \\\n\t&& ( \\\n\t\tcd /usr/src/gitiles \\\n\t\t&& bazel build --incompatible_disallow_uncalled_set_constructor=false gitiles-dev:dev \\\n\t\t&& cp -rL bazel-bin bin \\\n\t\t&& rm -rf bazel-bin \\\n\t) \\\n\t&& : clean up unneeded packages and files \\\n    && apk del .build-deps \\\n\t&& rm -rf /usr/bin/bazel /tmp/* /root/.cache \"/tmp/bazel-${BAZEL_VERSION}\"\n\nCOPY start.sh /usr/bin/start.sh\n\nENTRYPOINT [ \"/usr/bin/start.sh\" ]\n"
}