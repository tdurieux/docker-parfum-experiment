{
  "startTime": 1674238599866,
  "endTime": 1674238600166,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#########################\n# multi stage Dockerfile\n# 1. set up the build environment and build the expath-package\n# 2. run the eXist-db\n#########################\nFROM openjdk:8-jdk as builder\nLABEL maintainer=\"Peter Stadler\"\n\nENV WEGA_BUILD_HOME=\"/opt/wega\"\nENV WEGALIB_BUILD_HOME=\"/opt/wega-lib\"\n\nADD https://deb.nodesource.com/setup_8.x /tmp/nodejs_setup\n\n# installing Saxon, Node and Git\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y --force-yes apt-transport-https ant git libsaxonhe-java \\\n    # installing nodejs\n    && chmod 755 /tmp/nodejs_setup \\\n    && /tmp/nodejs_setup \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && ln -s /usr/bin/nodejs /usr/local/bin/node \\\n    && npm install -g yarn && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n\n# first building WeGA-WebApp-lib\nWORKDIR ${WEGALIB_BUILD_HOME}\nRUN git clone https://github.com/Edirom/WeGA-WebApp-lib.git . \\\n    && ant -lib /usr/share/java\n\n\n# now building the main WeGA-WebApp\nWORKDIR ${WEGA_BUILD_HOME}\nCOPY . .\nRUN addgroup wegabuilder \\\n    && adduser wegabuilder --ingroup wegabuilder --disabled-password --system \\\n    && chown -R wegabuilder:wegabuilder ${WEGA_BUILD_HOME}\n\n# running the main build script as non-root user\nUSER wegabuilder:wegabuilder\nRUN ant -lib /usr/share/java\n\n#CMD [\"/bin/bash\"]\n\n#########################\n# Now running the eXist-db\n# and adding our freshly built xar-package\n#########################\nFROM stadlerpeter/existdb:3.3.0\n\nADD --chown=wegajetty https://weber-gesamtausgabe.de/downloads/WeGA-data-testing-19943.xar ${EXIST_HOME}/autodeploy/\nCOPY --chown=wegajetty --from=builder /opt/wega-lib/build/*.xar ${EXIST_HOME}/autodeploy/\nCOPY --chown=wegajetty --from=builder /opt/wega/build/*.xar ${EXIST_HOME}/autodeploy/\n\nHEALTHCHECK --interval=20s --timeout=5s \\\n    CMD curl -iLfsS  http://localhost:8080${EXIST_CONTEXT_PATH}/apps/WeGA-WebApp | grep home \\\n    && curl -iLfsS  http://localhost:8080${EXIST_CONTEXT_PATH}/apps/WeGA-WebApp | (! grep \"HILFE DER GÃ–TTLICHEN\") \\\n    || exit 1"
}