{
  "startTime": 1674241194333,
  "endTime": 1674241194519,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8.15-slim\nMAINTAINER Adam Kloboucnik <ak@blockcollider.org>\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    libboost-dev \\\n    unzip \\\n    git \\\n    python2.7 \\\n    node-pre-gyp \\\n    build-essential \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/ \\\n    && ln -s /usr/bin/python2.7 /usr/bin/python && rm -rf /var/lib/apt/lists/*;\n\n# Install yarn\nRUN curl -f -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.12.3 \\\n    && export PATH=$HOME/.yarn/bin:$PATH\n\nENV PATH \"/root/.yarn/bin:$PATH\"\n\n# Install protobuf\nRUN curl -f -OL https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-linux-x86_64.zip \\\n    && unzip protoc-3.5.1-linux-x86_64.zip -d /root/protoc3 \\\n    && export PATH=$HOME/protoc3/bin:$PATH\n\nENV PATH \"/root/protoc3/bin:$PATH\"\n\n\n# Install neon-bindings\n# RUN yarn install -g neon-cli forever\n\n# Create /src folder and switch to it\nRUN mkdir /src\nWORKDIR /src\n\n# Support for mounted volumes\nVOLUME /src/_data\nVOLUME /src/_data_testnet\nVOLUME /src/_debug\nVOLUME /src/_logs\nVOLUME /src/config\n\n# Get JS deps\n# COPY [\"package.json\", \"yarn.lock\", \"./\"]\n# RUN yarn\n\n# Add and build native (rust) stuff\n# COPY native native\n# COPY rust rust\n#\n# COPY protos protos\n# COPY src/protos src/protos\n\n# RUN neon build\n\n# Git -> .version.json\nCOPY . .\n# cannot do following, docker doesn't know how to - all unwanted is in .dockeringore\n# COPY app/ bin/ config/ data/ protos/ public/ rust/ scripts/ src/ webpack/ package.json yarn.lock LICENSE README.md .\n\n# # Install packages\n# RUN yarn\n#\n# # Compile protobufs\n# RUN yarn proto\n#\n# # Initial transpile\n# RUN yarn transpile -s false\n#\n# # Build all\n# RUN yarn run dist\n#\n# # Build UI app\n# RUN yarn version:generate && yarn webpack\n#\n# RUN  rm -rf native/target/\n# RUN  rm -rf target/\n\n# TODO remove cargo registry\n# Install nightly rust and remove it after compilation to slim down the resulting image\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly \\\n    && export PATH=$HOME/.cargo/bin:$PATH \\\n    && rustup update \\\n    && rustc -Vv \\\n    && cargo -V \\\n    && rustup component add rust-src \\\n    && yarn \\\n    && yarn run proto \\\n    && yarn run transpile -s false \\\n    && yarn run version:generate \\\n    && yarn run webpack \\\n    && cd rust/bcrust-core/ && rm -rf target/ && cargo build --release && rm -rf target/deps/ && cd - \\\n    && rm -rf node_modules \\\n    && NODE_ENV=production yarn install \\\n    && yarn cache clean \\\n    && rustup self uninstall -y\n\nRUN mkdir -p /src/logs\n\nEXPOSE 3000 9090\n\nENTRYPOINT [ \"./bin/cli\" ]\n"
}