{
  "startTime": 1674234078471,
  "endTime": 1674234079002,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 2,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 2,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stable-slim as glibc-base\n\nARG GLIBC_VERSION=2.28\nARG GLIBC_PREFIX=/usr/glibc\nARG LANG=en_US.UTF-8\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  curl build-essential gawk bison python3 texinfo gettext \\\n  && \\\n  cd /root && \\\n  curl -f -SL https://ftp.gnu.org/gnu/glibc/glibc-${GLIBC_VERSION}.tar.gz | tar xzf - && \\\n  mkdir -p /root/build && cd /root/build && \\\n  ../glibc-${GLIBC_VERSION}/configure \\\n    --prefix=${GLIBC_PREFIX} \\\n    --libdir=\"${GLIBC_PREFIX}/lib\" \\\n    --libexecdir=\"${GLIBC_PREFIX}/lib\" \\\n    --enable-multi-arch \\\n    --enable-stack-protector=strong \\\n  && \\\n  make -j`nproc` && make DESTDIR=/root/dest install && \\\n  RTLD=`find /root/dest${GLIBC_PREFIX}/lib -name 'ld-linux-*.so.*'` && [ -x \"$RTLD\" ] && \\\n  LOCALEDEF=\"$RTLD --library-path /root/dest${GLIBC_PREFIX}/lib /root/dest${GLIBC_PREFIX}/bin/localedef --alias-file=/root/glibc-${GLIBC_VERSION}/intl/locale.alias\" && \\\n  export I18NPATH=/root/glibc-${GLIBC_VERSION}/localedata && \\\n  export GCONVPATH=/root/glibc-${GLIBC_VERSION}/iconvdata && \\\n  LOCALE=$(echo ${LANG} | cut -d. -f1) && CHARMAP=$(echo ${LANG} | cut -d. -f2) && \\\n  mkdir -pv /root/dest${GLIBC_PREFIX}/lib/locale && \\\n  cd /root/glibc-${GLIBC_VERSION}/localedata && \\\n  ${LOCALEDEF} -i locales/$LOCALE -f charmaps/$CHARMAP --prefix=/root/dest $LANG && \\\n  cd /root && rm -rf build glibc-${GLIBC_VERSION} && \\\n  cd /root/dest${GLIBC_PREFIX} && \\\n  ( strip bin/* sbin/* lib/* || true ) && \\\n  echo \"/usr/local/lib\" > /root/dest${GLIBC_PREFIX}/etc/ld.so.conf && \\\n  echo \"${GLIBC_PREFIX}/lib\" >> /root/dest${GLIBC_PREFIX}/etc/ld.so.conf && \\\n  echo \"/usr/lib\" >> /root/dest${GLIBC_PREFIX}/etc/ld.so.conf && \\\n  echo \"/lib\" >> /root/dest${GLIBC_PREFIX}/etc/ld.so.conf && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /root/dest${GLIBC_PREFIX} && \\\n  rm -rf etc/rpc var include share bin sbin/[^l]*  \\\n\tlib/*.o lib/*.a lib/audit lib/gconv lib/getconf\n\n#sbin/[^l]*\n\nFROM alpine:3.8 as liberica\n\nARG GLIBC_PREFIX=/usr/glibc\nARG EXT_GCC_LIBS_URL=https://archive.archlinux.org/packages/g/gcc-libs/gcc-libs-8.2.1%2B20180831-1-x86_64.pkg.tar.xz\nARG EXT_ZLIB_URL=https://archive.archlinux.org/packages/z/zlib/zlib-1%3A1.2.11-3-x86_64.pkg.tar.xz\nARG LANG=en_US.UTF-8\n\nENV  LANG=${LANG} \\\n     LANGUAGE=${LANG}:en\n#\t LC_ALL=en_US.UTF-8\n\nARG LIBERICA_ROOT=/usr/lib/jvm/jdk-8u212-bellsoft\nARG LIBERICA_VERSION=8u212\nARG LIBERICA_VARIANT=jdk\nARG LIBERICA_RELEASE_TAG=8u212\nARG LIBERICA_USE_LITE=1\n\nCOPY --from=glibc-base /root/dest/ /\n\nRUN LIBERICA_ARCH='' && LIBERICA_ARCH_TAG='' && \\\n  case `uname -m` in \\\n        x86_64) \\\n            LIBERICA_ARCH=\"amd64\" \\\n            ;; \\\n        i686) \\\n            LIBERICA_ARCH=\"i586\" \\\n            ;; \\\n        aarch64) \\\n            LIBERICA_ARCH=\"aarch64\" \\\n            ;; \\\n        armv[67]l) \\\n            LIBERICA_ARCH=\"arm32-vfp-hflt\"; \\\n            ;; \\\n        *) \\\n            LIBERICA_ARCH=`uname -m` \\\n            ;; \\\n  esac  && \\\n  RTAG=\"$LIBERICA_RELEASE_TAG\" && if [ \"x${RTAG}\" = \"x\" ]; then RTAG=\"$LIBERICA_VERSION\"; fi && \\\n  FX_EXCLUDES=\"\" && if [ \"$LIBERICA_USE_LITE\" = \"1\" ]; then FX_EXCLUDES=`wget -qO- \"https://download.bell-sw.com/java/${RTAG}/bellsoft-${LIBERICA_VARIANT}${LIBERICA_VERSION}-linux-${LIBERICA_ARCH}-fx.bom\" | sed -e 's/^\\(.*\\)/--exclude \\*\\/\\1/g' | tr '\\n' ' '`; fi && \\\n  LITE_VERSION_EXCLUDES=\"\" && if [ \"$LIBERICA_USE_LITE\" = \"1\" ]; then LITE_VERSION_EXCLUDES=\"--exclude=*/demo --exclude=*/sample --exclude=*/src.zip ${FX_EXCLUDES}\"; fi && \\\n  ln -s ${GLIBC_PREFIX}/lib/ld-*.so* /lib && \\\n  ln -s ${GLIBC_PREFIX}/etc/ld.so.cache /etc && \\\n  if [ \"$LIBERICA_ARCH\" = \"amd64\" ]; then ln -s /lib /lib64 && \\\n  mkdir /tmp/zlib && wget -O - \"${EXT_ZLIB_URL}\" | tar xJf - -C /tmp/zlib && \\\n  cp -dP /tmp/zlib/usr/lib/libz.so* \"${GLIBC_PREFIX}/lib\" && \\\n  rm -rf /tmp/zlib && \\\n  mkdir /tmp/gcc && wget -O - \"${EXT_GCC_LIBS_URL}\" | tar xJf - -C /tmp/gcc && \\\n  cp -dP /tmp/gcc/usr/lib/libgcc* /tmp/gcc/usr/lib/libstdc++* \"${GLIBC_PREFIX}/lib\" && \\\n  rm -rf /tmp/gcc; fi && \\\n  ${GLIBC_PREFIX}/sbin/ldconfig && \\\n  echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' > /etc/nsswitch.conf && \\\n  mkdir -p $LIBERICA_ROOT && \\\n  mkdir -p /tmp/java && \\\n  PKG=`echo \"bellsoft-${LIBERICA_VARIANT}${LIBERICA_VERSION}-linux-${LIBERICA_ARCH}.tar.gz\"` && \\\n  wget \"https://download.bell-sw.com/java/${RTAG}/${PKG}\" -O /tmp/java/jdk.tar.gz && \\\n  SHA1=`wget -q \"https://download.bell-sw.com/sha1sum/java/${RTAG}\" -O - | grep ${PKG} | cut -f1 -d' '` && \\\n  echo \"${SHA1} */tmp/java/jdk.tar.gz\" | sha1sum -c - && \\\n  tar xzf /tmp/java/jdk.tar.gz -C /tmp/java $LITE_VERSION_EXCLUDES && \\\n  find \"/tmp/java/${LIBERICA_VARIANT}${LIBERICA_VERSION}\" -maxdepth 1 -mindepth 1 -exec mv \"{}\" \"${LIBERICA_ROOT}/\" \\; && \\\n  rm -rf /tmp/java\n\nENV JAVA_HOME=${LIBERICA_ROOT} \\\n\tPATH=${LIBERICA_ROOT}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\n"
}