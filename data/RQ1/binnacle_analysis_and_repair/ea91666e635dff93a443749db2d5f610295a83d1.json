{
  "startTime": 1674251250285,
  "endTime": 1674251250347,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# 1) use alpine to generate a void environment\nFROM alpine:3.9 as stage0\nARG REPOSITORY=https://alpha.de.repo.voidlinux.org\nARG ARCH=x86_64\nCOPY keys/* /target/var/db/xbps/keys/\nRUN apk add --no-cache ca-certificates && \\\n  wget -O - ${REPOSITORY}/static/xbps-static-latest.$(uname -m)-musl.tar.xz | \\\n    tar Jx && \\\n  XBPS_ARCH=${ARCH} xbps-install.static -yMU \\\n    --repository=${REPOSITORY}/current \\\n    --repository=${REPOSITORY}/current/musl \\\n    -r /target \\\n    base-minimal\n\n# 2) using void to generate the final build\nFROM scratch as stage1\nARG REPOSITORY=https://alpha.de.repo.voidlinux.org\nARG ARCH=x86_64\nARG BASEPKG=base-minimal\nCOPY --from=stage0 /target /\nCOPY keys/* /target/var/db/xbps/keys/\nRUN xbps-reconfigure -a && \\\n  mkdir -p /target/var/cache && ln -s /var/cache/xbps /target/var/cache/xbps && \\\n  XBPS_ARCH=${ARCH} xbps-install -yMU \\\n    --repository=${REPOSITORY}/current \\\n    --repository=${REPOSITORY}/current/musl \\\n    -r /target \\\n    ${BASEPKG}\n\n# 3) configure and clean up the final image\nFROM scratch\nCOPY --from=stage1 /target /\nRUN xbps-reconfigure -a && \\\n  rm -r /var/cache/xbps\n"
}