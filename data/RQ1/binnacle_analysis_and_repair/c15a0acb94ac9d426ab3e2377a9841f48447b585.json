{
  "startTime": 1674250517657,
  "endTime": 1674250517777,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 4,
        "columnStart": 26,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 4,
        "columnStart": 26,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.5\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash -\nRUN apt-get update -qq && apt-get install --no-install-recommends -y build-essential \\\n    libpq-dev nodejs qt5-default libqt5webkit5-dev dos2unix \\\n    gstreamer1.0-plugins-base gstreamer1.0-tools gstreamer1.0-x && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -q ftp://ftp.gnu.org/gnu/libidn/libidn-1.33.tar.gz\nRUN tar xfz libidn-1.33.tar.gz && rm libidn-1.33.tar.gz\nRUN cd libidn-1.33 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; make; make install;\n\nRUN mkdir /LocalSupport\nWORKDIR /LocalSupport\n\nCOPY Gemfile /LocalSupport/Gemfile\nCOPY Gemfile.lock /LocalSupport/Gemfile.lock\nRUN bundle install\n\nCOPY package.json /LocalSupport/package.json\nCOPY package-lock.json /LocalSupport/package-lock.json\nCOPY bower.json /LocalSupport/bower.json\nCOPY check-version.js /LocalSupport/check-version.js\nRUN npm install --unsafe-perm && npm cache clean --force;\nRUN npm install -g phantomjs-prebuilt --unsafe-perm && npm cache clean --force;\n\nCOPY . /LocalSupport\n"
}