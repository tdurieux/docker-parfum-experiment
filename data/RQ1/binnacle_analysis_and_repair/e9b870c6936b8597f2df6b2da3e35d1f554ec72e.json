{
  "startTime": 1674243651251,
  "endTime": 1674243651363,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\nMAINTAINER Viktor Petersson <vpetersson@screenly.io>\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install \\\n        build-essential \\\n        curl \\\n        ffmpeg \\\n        git-core \\\n        libffi-dev \\\n        libssl-dev \\\n        lsb-release \\\n        mplayer \\\n        net-tools \\\n        procps \\\n        python-dev \\\n        python-gobject \\\n        python-imaging \\\n        python-netifaces \\\n        python-simplejson \\\n        sqlite3 \\\n    && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install Python requirements\nADD requirements.txt /tmp/requirements.txt\nADD requirements.dev.txt /tmp/requirements.dev.txt\nRUN curl -f -s https://bootstrap.pypa.io/get-pip.py | python && \\\n    pip install --no-cache-dir -r /tmp/requirements.txt && \\\n    pip install --no-cache-dir -r /tmp/requirements.dev.txt\n\n# Create runtime user\nRUN useradd pi\n\n# Install config file and file structure\nRUN mkdir -p /home/pi/.screenly /home/pi/screenly /home/pi/screenly_assets\nCOPY ansible/roles/screenly/files/screenly.conf /home/pi/.screenly/screenly.conf\n\n# Copy in code base\nCOPY . /home/pi/screenly\nRUN chown -R pi:pi /home/pi\n\nUSER pi\nWORKDIR /home/pi/screenly\n\nEXPOSE 8080\n\nCMD python server.py\n"
}