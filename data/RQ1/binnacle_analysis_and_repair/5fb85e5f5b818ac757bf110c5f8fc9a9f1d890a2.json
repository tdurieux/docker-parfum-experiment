{
  "startTime": 1674251697191,
  "endTime": 1674251697490,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 18,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 18,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Not a big fan of using nightly, but such is our lot currently\n#FROM arm64v8/debian:stable-slim\nFROM multiarch/debian-debootstrap:arm64-stretch-slim as builder\n\nRUN apt update && apt install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\nENV RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo \\\n    PATH=/usr/local/cargo/bin:$PATH\n\nRUN set -eux; \\\n    url=\"https://static.rust-lang.org/rustup/dist/aarch64-unknown-linux-gnu/rustup-init\"; \\\n    wget \"$url\"; \\\n    chmod +x rustup-init; \\\n    ./rustup-init -y --no-modify-path --default-toolchain nightly; \\\n    rm rustup-init; \\\n    chmod -R a+w $RUSTUP_HOME $CARGO_HOME; \\\n    rustup --version; \\\n    cargo --version; \\\n    rustc --version;\nRUN apt-get update && apt-get install --no-install-recommends -y cmake golang g++ && rm -rf /var/lib/apt/lists/*;\n#RUN rustup target add aarch64-unknown-linux-gnu || true\n\nWORKDIR /usr/src/trow\n\n#First get just the deps\nCOPY Cargo.toml .\nCOPY Cargo.lock .\n\n# trow\nRUN mkdir src/\nRUN echo \"fn main() {}\" > src/main.rs\n\n# trow-server\nCOPY lib/server/Cargo.toml lib/server/\nRUN mkdir -p lib/server/src\nRUN touch lib/server/src/lib.rs\n\n# trow-protobuf\nCOPY lib/protobuf/Cargo.toml lib/protobuf/\nRUN mkdir -p lib/protobuf/src\nRUN touch lib/protobuf/src/lib.rs\n\nRUN cargo fetch\nCOPY src src\nCOPY lib lib\nRUN touch src/main.rs\nRUN cargo build\n\nFROM arm64v8/debian:stable-slim\n#\nCOPY --from=builder /usr/src/trow/target/debug/trow /trow\n#\n##Need to copy c libs\n##COPY --from=builder /lib/x86_64-linux-gnu/libdl.so.2 /lib/libdl.so.2\n##COPY --from=builder /lib/x86_64-linux-gnu/librt.so.1 /lib/librt.so.1\n##COPY --from=builder /lib/x86_64-linux-gnu/libpthread.so.0 /lib/libpthread.so.0\n##COPY --from=builder /lib/x86_64-linux-gnu/libgcc_s.so.1 /lib/libgcc_s.so.1\n##COPY --from=builder /lib/x86_64-linux-gnu/libc.so.6 /lib/libc.so.6\n##COPY --from=builder /lib64/ld-linux-x86-64.so.2 /lib64/ld-linux-x86-64.so.2\n##COPY --from=builder /lib/x86_64-linux-gnu/libm.so.6 /lib/libm.so.6\n#\nCOPY Trow.toml /\nCOPY trow-default.toml /\n#Yeah, it's another hack. Sue me. Note that you need 17.09 to build this\nCOPY --chown=65534:65534 README.md /data/layers/README.md\nCOPY --chown=65534:65534 README.md /data/scratch/README.md\nUSER 65534\nEXPOSE 8000\nENTRYPOINT [\"/trow\"]\nCMD [\"-c\", \"/trow-default.toml\"]\n"
}