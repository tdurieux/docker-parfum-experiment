{
  "startTime": 1674244394172,
  "endTime": 1674244394402,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 47,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 47,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "# This Dockerfile provides a base level of OS packages with PHP-CLI and extensions\n\nARG PHP_CLI_VERSION=7.1-cli\n\nFROM php:${PHP_CLI_VERSION}\n\n# Set consistent timezone\nENV CONTAINER_TIMEZONE=\"UTC\"\nRUN rm -f /etc/localtime \\\n && ln -s /usr/share/zoneinfo/${CONTAINER_TIMEZONE} /etc/localtime\n\n # Worker name and index (TODO: where to set this?)\n ENV WORKER_NAME=\"send-emails\" \\\n     WORKER_INDEX=\"1\"\n\n# Install prerequisite OS packages\nRUN apt-get update -y && apt-get upgrade -y && apt-get install --no-install-recommends -y curl git mysql-client && rm -rf /var/lib/apt/lists/*;\n\n# install the PHP extensions we need\nRUN set -ex \\\n  && buildDeps=' \\\n    libjpeg62-turbo-dev \\\n    libpng12-dev \\\n    libpq-dev \\\n    zlib1g-dev \\\n    libicu-dev \\\n    libmemcached-dev \\\n  ' \\\n  && apt-get install -y --no-install-recommends $buildDeps \\\n  && pecl install -o -f redis \\\n  && docker-php-ext-enable redis \\\n  && ls -la /usr/local/etc/php/conf.d/ \\\n  && docker-php-ext-configure gd \\\n    --with-jpeg-dir=/usr \\\n    --with-png-dir=/usr \\\n  && docker-php-ext-install -j \"$(nproc)\" gd mbstring opcache pdo pdo_mysql zip && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /tmp \\\n  && git clone -b php7 https://github.com/php-memcached-dev/php-memcached \\\n  && cd php-memcached \\\n  && phpize \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make \\\n  && cp /tmp/php-memcached/modules/memcached.so /usr/local/lib/php/extensions/no-debug-non-zts-20160303/memcached.so \\\n  && docker-php-ext-enable memcached \\\n  && ls -la /usr/local/etc/php/conf.d/\n\n# See https://secure.php.net/manual/en/opcache.installation.php\nRUN { \\\n    echo 'opcache.memory_consumption=128'; \\\n    echo 'opcache.interned_strings_buffer=8'; \\\n    echo 'opcache.max_accelerated_files=4000'; \\\n    echo 'opcache.revalidate_freq=60'; \\\n    echo 'opcache.fast_shutdown=1'; \\\n    echo 'opcache.enable_cli=1'; \\\n  } > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\nWORKDIR /root\n\n# Copy start script\nCOPY noop.php /root/\n\nCMD [ \"php\", \"/root/noop.php\" ]\n"
}