{
  "startTime": 1674246095973,
  "endTime": 1674246096326,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM pritunl/archlinux:2016-04-16\n\nRUN useradd jenkins -u 1500 -g root\n\nRUN pacman -Sy --noconfirm gcc clang sudo autoconf base-devel \\\n                           wget git unzip python2 \\\n                           libev snappy help2man \\\n                           python-pip python2\n\n## extra packages not available in the default repo\n## makepkg refuses running as root, so switch to jenkins first\n\nRUN echo 'jenkins ALL=NOPASSWD: ALL' >/etc/sudoers.d/jenkins\nRUN mkdir /home/jenkins\nRUN chown jenkins /home/jenkins\n\nWORKDIR /home/jenkins\nUSER jenkins\n\nRUN git clone https://aur.archlinux.org/clasp.git && \\\n    cd clasp && \\\n    makepkg -sri --noconfirm && \\\n    cd .. && \\\n    rm -rf clasp\n\nRUN git clone https://aur.archlinux.org/gringo.git && \\\n    cd gringo && \\\n    makepkg -sri --noconfirm && \\\n    cd .. && \\\n    rm -rf gringo\n\nRUN git clone https://aur.archlinux.org/aspcud.git && \\\n    cd aspcud && \\\n    makepkg -sri --noconfirm && \\\n    cd .. && \\\n    rm -rf aspcud\n\nRUN git clone https://aur.archlinux.org/opam.git && \\\n    cd opam && \\\n    makepkg -sri --noconfirm && \\\n    cd .. && \\\n    rm -rf opam\n\nENV ocaml_version=4.03.0\nENV opam_root=/home/jenkins/OPAM\nENV opam_env=\"opam config env --root=${opam_root}\"\nRUN opam init --root ${opam_root} --comp ${ocaml_version}\n\nRUN eval `${opam_env}` && \\\n    opam update && \\\n    opam install -y \\\n        ocamlfind \\\n        ssl.0.5.2 \\\n        camlbz2 \\\n        snappy \\\n        bisect \\\n        lwt.2.5.2 \\\n        camltc.0.9.3 \\\n        ocplib-endian.1.0 \\\n        quickcheck.1.0.2 \\\n        conf-libev \\\n        core.113.33.02+4.03 \\\n        redis.0.3.3 \\\n        uri.1.9.2\n\n# Install etcd:\nENV etcd_version=2.3.5\nRUN curl -f \\\n      -L https://github.com/coreos/etcd/releases/download/v${etcd_version}/etcd-v${etcd_version}-linux-amd64.tar.gz \\\n      -o etcd-v${etcd_version}-linux-amd64.tar.gz \\\n    && tar xzvf etcd-v${etcd_version}-linux-amd64.tar.gz \\\n    && sudo cp ./etcd-v${etcd_version}-linux-amd64/etcd /usr/bin \\\n    && sudo cp ./etcd-v${etcd_version}-linux-amd64/etcdctl /usr/bin \\\n    && rm -rf etcd-* && rm etcd-v${etcd_version}-linux-amd64.tar.gz\n\n# Install redis:\nRUN wget https://download.redis.io/releases/redis-3.0.7.tar.gz\nRUN tar xzvf redis-3.0.7.tar.gz && rm redis-3.0.7.tar.gz\nRUN cd redis-3.0.7 && make\nRUN sudo cp ./redis-3.0.7/src/redis-server /usr/bin\nRUN sudo cp ./redis-3.0.7/src/redis-cli /usr/bin\n\nRUN chmod ugoa+rxw -R ${opam_root}\nRUN eval ${opam_env} >> /home/jenkins/.profile\n\nUSER root\n\nENTRYPOINT [\"/home/jenkins/arakoon/docker/docker-entrypoint.sh\"]\n"
}