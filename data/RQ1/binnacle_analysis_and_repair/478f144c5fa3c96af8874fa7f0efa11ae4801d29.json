{
  "startTime": 1674252482057,
  "endTime": 1674252482292,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.0-apache\n\nLABEL maintainer=\"Kitware, Inc. <cdash@public.kitware.com>\"\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y gnupg \\\n && curl -f -sL https://deb.nodesource.com/setup_6.x | bash \\\n && apt-get install --no-install-recommends -y git libbz2-dev libfreetype6-dev libjpeg62-turbo-dev \\\n    libmcrypt-dev libpng-dev libpq-dev libxslt-dev libxss1 nodejs unzip wget \\\n    zip libldap2-dev \\\n && docker-php-ext-configure pgsql --with-pgsql=/usr/local/pgsql \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/                \\\n                                --with-jpeg-dir=/usr/include/ \\\n && docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ \\\n && docker-php-ext-install -j$(nproc) bcmath bz2 gd pdo_mysql pdo_pgsql xsl ldap \\\n && wget -q -O checksum https://composer.github.io/installer.sha384sum \\\n && wget -q -O composer-setup.php https://getcomposer.org/installer \\\n && sha384sum -c checksum \\\n && php composer-setup.php --install-dir=/usr/local/bin --filename=composer \\\n && php -r \"unlink('composer-setup.php');\" \\\n && composer self-update --no-interaction && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /var/www/cdash\nCOPY php.ini /var/www/cdash/php.ini\nCOPY xml_handlers /var/www/cdash/xml_handlers\nCOPY app /var/www/cdash/app\nCOPY composer.lock /var/www/cdash/composer.lock\nCOPY public /var/www/cdash/public\nCOPY scripts /var/www/cdash/scripts\nCOPY sql /var/www/cdash/sql\nCOPY package.json /var/www/cdash/package.json\nCOPY .php_cs /var/www/cdash/.php_cs\nCOPY config /var/www/cdash/config\nCOPY log /var/www/cdash/log\nCOPY gulpfile.js /var/www/cdash/gulpfile.js\nCOPY backup /var/www/cdash/backup\nCOPY include /var/www/cdash/include\nCOPY bootstrap /var/www/cdash/bootstrap\nCOPY composer.json /var/www/cdash/composer.json\nCOPY scripts/bash /bash-lib\n\nRUN cd /var/www/cdash                                                      \\\n && composer install --no-interaction --no-progress --prefer-dist --no-dev \\\n && npm install                                                            \\\n && node_modules/.bin/gulp                                                 \\\n && chmod 777 backup log public/rss public/upload                          \\\n && rm -rf /var/www/html                                                   \\\n && ln -s /var/www/cdash/public /var/www/html \\\n && rm -rf composer.lock package.json gulpfile.js composer.json && npm cache clean --force;\n\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod +x /docker-entrypoint.sh\n\nWORKDIR /var/www/cdash\nEXPOSE 80\n\nHEALTHCHECK --interval=30s --timeout=5s --start-period=5m \\\n  CMD [\"curl\", \"-f\", \"http://localhost/viewProjects.php\"]\n\nENTRYPOINT [\"/bin/bash\", \"/docker-entrypoint.sh\"]\nCMD [\"serve\"]\n"
}