{
  "startTime": 1674240158865,
  "endTime": 1674240159056,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\n\n# 解释信息\nLABEL maintainer=\"HeLei <dayugog@gmail.com>\"\n\nENV NGINX_VERSION=1.14.0 \\\n\tTZ=Asia/Shanghai \\\n    ZLIB_VERSION=1.2.11 \\\n    PCRE_VERSION=8.42 \\\n    OPENSSL_VERSION=1.0.2o \\\n    SRC_DIR=/home/work/src \\\n    WWW_DIR=/home/work/www \\\n    LOG_DIR=/home/work/logs/nginx\n\n# 设置系统时区\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n# 拷贝文件\nCOPY src/ $SRC_DIR\n\n# 下载并编译\nRUN set -ex; \\\n\n    addgroup -S work \\\n    && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G work work; \\\n\n    apk add --no-cache --virtual .build-deps \\\n\t\tgcc \\\n        g++ \\\n\t\tlibc-dev \\\n\t\tmake \\\n\t\topenssl-dev \\\n\t\tpcre-dev \\\n\t\tzlib-dev \\\n\t\tlinux-headers \\\n\t\tcurl \\\n\t\tgnupg \\\n\t\tlibxslt-dev \\\n\t\tgd-dev \\\n\t\tgeoip-dev \\\n        ; \\\n\n    cd $SRC_DIR \\\n    && tar -zxvf nginx-$NGINX_VERSION.tar.gz \\\n    && tar -zxvf zlib-$ZLIB_VERSION.tar.gz \\\n    && tar -zxvf pcre-$PCRE_VERSION.tar.gz \\\n    && tar -zxvf openssl-$OPENSSL_VERSION.tar.gz \\\n    && cd nginx-$NGINX_VERSION; rm nginx-$NGINX_VERSION.tar.gz \\\n\n    BUILD_CONFIG=\"\\\n        --prefix=/home/work/app/nginx \\\n        --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n\t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n\t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n\t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n\t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n        --user=work \\\n        --group=work \\\n        --with-http_ssl_module \\\n\t\t--with-http_realip_module \\\n\t\t--with-http_addition_module \\\n\t\t--with-http_sub_module \\\n\t\t--with-http_dav_module \\\n\t\t--with-http_flv_module \\\n\t\t--with-http_mp4_module \\\n\t\t--with-http_gunzip_module \\\n\t\t--with-http_gzip_static_module \\\n\t\t--with-http_random_index_module \\\n\t\t--with-http_secure_link_module \\\n\t\t--with-http_stub_status_module \\\n\t\t--with-http_auth_request_module \\\n\t\t--with-http_xslt_module=dynamic \\\n\t\t--with-http_image_filter_module=dynamic \\\n\t\t--with-http_geoip_module=dynamic \\\n\t\t--with-threads \\\n\t\t--with-stream \\\n\t\t--with-stream_ssl_module \\\n\t\t--with-stream_ssl_preread_module \\\n\t\t--with-stream_realip_module \\\n\t\t--with-stream_geoip_module=dynamic \\\n\t\t--with-http_slice_module \\\n\t\t--with-mail \\\n\t\t--with-mail_ssl_module \\\n\t\t--with-compat \\\n\t\t--with-file-aio \\\n\t\t--with-http_v2_module \\\n        --with-zlib=$SRC_DIR/zlib-$ZLIB_VERSION \\\n        --with-openssl=$SRC_DIR/openssl-$OPENSSL_VERSION \\\n        --with-pcre=$SRC_DIR/pcre-$PCRE_VERSION \\\n    \"; \\\n\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $BUILD_CONFIG; \\\n    make && make install; \\\n\n    rm -rf /home/work/src && apk del .build-deps; \\\n\n    mkdir -p $WWW_DIR \\\n    && mkdir -p $LOG_DIR \\\n    && chown -R work:work /home\n\n# 设置环境变量\nENV PATH /home/work/app/nginx/sbin:$PATH\n\n# 拷贝配置文件\nCOPY conf/ /home/work/app/nginx/conf\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 8080 443\nCMD [\"nginx-server\"]\n"
}