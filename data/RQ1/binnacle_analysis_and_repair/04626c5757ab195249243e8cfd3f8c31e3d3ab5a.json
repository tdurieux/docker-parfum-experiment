{
  "startTime": 1674249763379,
  "endTime": 1674249763564,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# All credit goes to Yves Blusseau, Nicolas Duchon, and all the contributors of the original Github repository\n\nFROM golang:1.11-alpine AS go-builder\n\nENV DOCKER_GEN_VERSION=0.7.4\n\n# Install build dependencies for docker-gen\nRUN apk add --no-cache --update \\\n        curl \\\n        gcc \\\n        git \\\n        make \\\n        musl-dev\n\n# Build docker-gen\nRUN go get github.com/jwilder/docker-gen \\\n    && cd /go/src/github.com/jwilder/docker-gen \\\n    && git checkout $DOCKER_GEN_VERSION \\\n    && make get-deps \\\n    && make all\n\nFROM resin/raspberry-pi-alpine\n\nLABEL maintainer=\"Alexander Krause <akr@informatik.uni-kiel.de>\"\n\nENV DEBUG=false \\\n    DOCKER_HOST=unix:///var/run/docker.sock\n\n# Install packages required by the image\nRUN apk add --update \\\n        bash \\\n        ca-certificates \\\n        coreutils \\\n        curl \\\n        jq \\\n        openssl \\\n    && rm /var/cache/apk/*\n\n# Install docker-gen from build stage\nCOPY --from=go-builder /go/src/github.com/jwilder/docker-gen/docker-gen /usr/local/bin/\n\n# Install simp_le\nCOPY /install_simp_le.sh /app/install_simp_le.sh\nRUN chmod +rx /app/install_simp_le.sh \\\n    && sync \\\n    && /app/install_simp_le.sh \\\n    && rm -f /app/install_simp_le.sh\n\nCOPY /app/ /app/\n\nWORKDIR /app\n\nENTRYPOINT [ \"/bin/bash\", \"/app/entrypoint.sh\" ]\nCMD [ \"/bin/bash\", \"/app/start.sh\" ]\n\n"
}