{
  "startTime": 1674235233726,
  "endTime": 1674235233964,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 56,
        "columnEnd": 75
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 67,
        "columnEnd": 86
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 55,
        "columnEnd": 74
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 51,
        "columnEnd": 70
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 0,
        "lineEnd": 0,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedDockerfile": "FROM node:8 as nodedev\n\nRUN mkdir -p /usr/src/app /dist && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\nCOPY . .\n\nRUN chown -R node:node /usr/src/app /dist\n\nUSER node\n\nARG version\n\nRUN make vendor build VERSION=$version\nRUN cp packages/*/*.tgz /dist\n\nFROM node:6\n\nRUN \\\n    wget https://github.com/krallin/tini/releases/download/v0.13.0/tini && \\\n    mv tini /usr/local/bin/tini && \\\n    chmod +x /usr/local/bin/tini && \\\n    mkdir -p /home/node /usr/src/app && \\\n    chown node:node /home/node /usr/src/app && rm -rf /home/node\n\nCOPY --from=nodedev /dist/ /dist/\n\nUSER node\nWORKDIR /home/node\nENV NODE_PATH=/home/node/.local/lib/node_modules\nENV PATH=/usr/src/app/node_modules/.bin:/home/node/.local/bin:$PATH\n\nRUN mkdir -p /home/node/.local/lib && \\\n    cd /home/node/.local/lib && \\\n    find /dist -regex \".*/skygear-core-[^-]*.tgz\" -exec npm install \"{}\" \\; && \\\n    find /dist -regex \".*/skygear-forgot-password-[^-]*.tgz\" -exec npm install \"{}\" \\; && \\\n    find /dist -regex \".*/skygear-sso-[^-]*.tgz\" -exec npm install \"{}\" \\; && \\\n    find /dist -regex \".*/skygear-[^-]*.tgz\" -exec npm install \"{}\" \\; && \\\n    mkdir -p /home/node/.local/bin && \\\n    cd /home/node/.local/bin && \\\n    find /home/node/.local/lib/node_modules/.bin/ -not -type d -exec sh -c 'ln -s {} $(basename {})' \\; && npm cache clean --force;\n\nWORKDIR /usr/src/app\nENTRYPOINT [\"/usr/local/bin/tini\", \"--\"]\nCMD [\"skygear-node\"]\n\nONBUILD ARG NODE_ENV\nONBUILD ENV NODE_ENV $NODE_ENV\nONBUILD COPY package.json /usr/src/app/\n \\\nRUN npm install && npm cache clean --force; ONBUILD\nONBUILD COPY . /usr/src/app\n"
}