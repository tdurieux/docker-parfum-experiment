{
  "startTime": 1674240107062,
  "endTime": 1674240107452,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 62,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 77
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 77
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.9\n\nARG maxminddb_version\nARG nginx_version\nARG ngx_http_geoip2_module_version\n\n# Update, install, and clean up packages all in one step:\nRUN apk update \\\n    && apk add --no-cache --virtual build-dependencies \\\n      apk-cron \\\n      build-base \\\n      ca-certificates \\\n      linux-headers \\\n      openssl-dev \\\n      pcre-dev \\\n      zlib-dev \\\n    && apk add --update \\\n      fail2ban \\\n      gzip \\\n      mosquitto-clients \\\n      openssl \\\n      pcre \\\n      perl \\\n      rsyslog \\\n      supervisor \\\n      tzdata \\\n      wget \\\n      zlib \\\n    && mkdir /tmp/src \\\n    && wget -N -P /tmp/src https://github.com/maxmind/libmaxminddb/releases/download/${maxminddb_version}/libmaxminddb-${maxminddb_version}.tar.gz \\\n    && tar xzvf /tmp/src/libmaxminddb-${maxminddb_version}.tar.gz -C /tmp/src \\\n    && cd /tmp/src/libmaxminddb-${maxminddb_version} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make check \\\n    && make install \\\n    && ldconfig /usr/local/lib \\\n    && mkdir -p /usr/local/share/GeoIP/ \\\n    && wget -N -P /tmp/src https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz \\\n    && tar xzvf /tmp/src/GeoLite2-Country.tar.gz -C /tmp/src --strip-components=1 \\\n    && mv /tmp/src/GeoLite2-Country.mmdb /usr/local/share/GeoIP \\\n    && wget -N -P /tmp/src https://github.com/leev/ngx_http_geoip2_module/archive/${ngx_http_geoip2_module_version}.tar.gz \\\n    && tar xzvf /tmp/src/${ngx_http_geoip2_module_version}.tar.gz -C /tmp/src \\\n    && wget -N -P /tmp/src https://nginx.org/download/nginx-${nginx_version}.tar.gz \\\n    && tar -zxvf /tmp/src/nginx-${nginx_version}.tar.gz -C /tmp/src \\\n    && cd /tmp/src/nginx-${nginx_version} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n      --add-module=/tmp/src/ngx_http_geoip2_module-${ngx_http_geoip2_module_version} \\\n      --conf-path=/etc/nginx/nginx.conf \\\n      --error-log-path=/var/log/nginx/error.log \\\n      --http-log-path=/var/log/nginx/access.log \\\n      --lock-path=/run/nginx.lock \\\n      --pid-path=/run/nginx.pid \\\n      --prefix=/etc/nginx \\\n      --sbin-path=/usr/local/sbin/nginx \\\n      --with-http_auth_request_module \\\n      --with-http_gzip_static_module \\\n      --with-http_ssl_module \\\n      --with-http_stub_status_module \\\n      --with-http_v2_module \\\n      --with-pcre-jit \\\n      --with-stream \\\n      --with-stream_ssl_module \\\n    && make \\\n    && make install \\\n    && apk del build-dependencies \\\n    && rm -rf /tmp/src \\\n    && rm -rf /var/cache/apk/* && rm /tmp/src/libmaxminddb-${maxminddb_version}.tar.gz\n\n# Get timezone stuff set up correctly:\nENV TZ=America/Denver\nRUN ln -snf \"/usr/share/zoneinfo/${TZ}\" /etc/localtime \\\n    && echo \"$TZ\" > /etc/timezone\n\n# Create a www-data user and group:\nRUN set -x ; \\\n    addgroup -g 82 -S www-data ; \\\n    adduser -u 82 -D -S -G www-data www-data && exit 0 ; exit 1\n\n# Set up configuration structures:\nCOPY bin/geolite-download /usr/local/bin/geolite-download\nCOPY bin/fail2ban-mqtt-notifier /usr/local/bin/fail2ban-mqtt-notifier\nCOPY conf/supervisor/supervisor.conf /etc/supervisor.conf\nCOPY conf/crontab.txt /crontab.txt\nRUN mkdir -p /var/run/nginx \\\n    && mkdir -p /var/lib/nginx \\\n    && chown -R www-data:www-data /var/lib/nginx \\\n    && chmod 755 /usr/local/bin/fail2ban-mqtt-notifier \\\n    && chmod 755 /usr/local/bin/geolite-download \\\n    && /usr/bin/crontab /crontab.txt\n"
}