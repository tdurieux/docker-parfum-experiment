{
  "startTime": 1674235991960,
  "endTime": 1674235992159,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile\n\nFROM debian:wheezy\n\n# Install packages required to add users and install Nix\nRUN apt-get update && apt-get install --no-install-recommends -y curl bzip2 adduser perl python git && rm -rf /var/lib/apt/lists/*;\n\n# Add the user rings for security reasons and for Nix\nRUN adduser --disabled-password --gecos '' rings\n\n# Nix requires ownership of /nix.\nRUN mkdir -m 0755 /nix && chown rings /nix\n\n# Copy in the RINGS repository, working around a possible AUFS bug\n# (see https://github.com/docker/docker/issues/7511)\nCOPY . /tmp/rings\nWORKDIR /tmp/rings\nRUN find lib vignettes \\( -name '*.glob' \\\n           -o -name '*.v.d' \\\n           -o -name '*.vo' \\\n           -o -name '*.hi' \\\n           -o -name '*.o' \\\n           -o -name '*.hp' \\\n           -o -name '.*.aux' \\) -type f -delete\nRUN for i in coq-haskell bedrock fiat ; do (cd $i ; git clean -dfx); done\n\nWORKDIR /home/rings\nRUN cp -pR /tmp/rings . && chown -R rings rings && rm -fr /tmp/rings\n\n# Change docker user to rings\nUSER rings\nENV USER rings\n\n# install Nix\nRUN curl -f https://nixos.org/nix/install | sh\nRUN . ~/.nix-profile/etc/profile.d/nix.sh && nix-channel --update\n\n# Build the RINGS environment within the container\n\nWORKDIR /home/rings/rings\nRUN . ~/.nix-profile/etc/profile.d/nix.sh && \\\n    nix-build --no-build-output \\\n              --max-jobs 2 \\\n              --cores 2 \\\n              --fallback \\\n              --attr ringsEnv\n\nWORKDIR /home/rings/rings/fiat\nRUN . ~/.nix-profile/etc/profile.d/nix.sh && \\\n    ~/rings/result/bin/load-env-rings make -j2\n\nWORKDIR /home/rings/rings/coq-haskell\nRUN . ~/.nix-profile/etc/profile.d/nix.sh && \\\n    ~/rings/result/bin/load-env-rings make\n\n# WORKDIR /home/rings/rings/vignettes/simple_parser_fiat\n# RUN . ~/.nix-profile/etc/profile.d/nix.sh && \\\n#     ~/rings/result/bin/load-env-rings make\n\n# CMD [\"./rings/vignettes/simple_parser_fiat/result/bin/spv\",\n#      \"./rings/vignettes/simple_parser_fiat/input.txt\" ]\n"
}