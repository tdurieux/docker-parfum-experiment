{
  "startTime": 1674244829467,
  "endTime": 1674244829868,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ALPINE_VERSION=3.9.4\n# mod_perl is only available in Alpine edge as a @testing package.\n# Unfortunately, as the edge version can have another version of Perl\n# than the stable version of Alpine Linux. In that case, mod_perl won't load.\n# To work around this, we compile mod_perl on our own. This should be removed once\n# apache2-mod-perl-dev gets moved to the community or the main repository.\nFROM alpine:${ALPINE_VERSION} AS build_modperl\nRUN set -x \\\n  && apk --no-cache add alpine-sdk coreutils cmake \\\n  && adduser -G abuild -g \"Alpine Package Builder\" -s /bin/ash -D builder \\\n  && echo \"builder ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers \\\n  && mkdir /packages \\\n  && chown builder:abuild /packages\nUSER builder\nRUN set -x \\\n   && cd /packages \\\n   # depth=1000 was chosen arbitarily. Increase if build fails.\n   && git clone --depth=10000 https://git.alpinelinux.org/aports \\\n   && cd aports/testing/apache2-mod-perl \\\n   && abuild-keygen -a -i \\\n   && abuild -R \\\n   && echo $(sed -E -n 's/^pkgver=(.+)$/\\1/p' /packages/aports/testing/apache2-mod-perl/APKBUILD)-r$(sed -E -n 's/^pkgrel=(.+)$/\\1/p' /packages/aports/testing/apache2-mod-perl/APKBUILD) > /home/builder/packages/testing/x86_64/ver.txt\n\n# Base stage that adds the Perl runtime and some build utilities to httpd:alpine\nFROM alpine:${ALPINE_VERSION} AS modperl\n\nCOPY --from=build_modperl /home/builder/packages/testing/x86_64 /packages\nRUN set -x \\\n    && echo -e '@edge http://dl-cdn.alpinelinux.org/alpine/edge/main\\n@edgecommunity http://dl-cdn.alpinelinux.org/alpine/edge/community\\n@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories \\\n    && apk -U add --no-cache tzdata git curl wget perl perl-dev openssl openssl-dev make gcc libc-dev zlib-dev \\\n    && apk add /packages/apache2-mod-perl-$(cat /packages/ver.txt).apk --allow-untrusted \\\n    && rm -rf /var/cache/apk/* /packages/\n\n# Install cpm to install cpanfile dependencies\nRUN curl -f -o- -L --compressed https://git.io/cpm | perl - install App::cpm -g && rm -rf ~/.perl-cpm\n\n# Stage that just adds some runtime packages that will be used in the runnable stage and the builder stage\nFROM modperl AS alpinemodperl\n\nRUN set -x \\\n\t  && apk --update --no-cache add \\\n    imagemagick6 \\\n\t\tgraphviz \\\n\t\ttesseract-ocr \\\n    imagemagick \\\n\t\tzbar@testing\n\n# Stage for installing/compiling cpanfile dependencies\nFROM alpinemodperl AS builder\n\nCOPY --from=build_modperl /home/builder/packages/testing/x86_64 /packages\nRUN apk --update --no-cache add \\\n\t\talpine-sdk \\\n\t\timagemagick6 \\\n\t\timagemagick6-dev \\\n\t\tgraphviz \\\n\t\tgraphviz-dev \\\n\t\ttesseract-ocr \\\n\t\ttesseract-ocr-dev \\\n    imagemagick \\\n\t\tzbar@testing \\\n\t\tzbar-dev@testing \\\n    apache2-dev \\\n    && apk add --no-cache /packages/apache2-mod-perl-dev-$(cat /packages/ver.txt).apk --allow-untrusted \\\n    # Add ZBar perl module from git: https://rt.cpan.org/Ticket/Display.html?id=128085\n    && wget https://github.com/mchehab/zbar/archive/0.22.2.tar.gz \\\n    && tar xfz 0.22.2.tar.gz \\\n    && rm 0.22.2.tar.gz \\\n    && cd zbar-0.22.2/perl \\\n    && perl Makefile.PL \\\n    && ln -s MYMETA.yml META.yml \\\n    && cpm install -L /tmp/local . \\\n    && cd ../.. \\\n    && rm -rf zbar-0.22.2\n\nWORKDIR /tmp\n\n# Dependency of libapreq2-2.13, which is not installed automatically.\nRUN cpm install ExtUtils::XSBuilder::ParseSource\n\n# Install Product Opener from the workdir.\nCOPY ./cpanfile /tmp/cpanfile\n\n# Add ProductOpener runtime dependencies from cpan\nRUN cpm install --without-test\n\n# Separate stage/layer that can be used to run unit tests\nFROM builder AS tester\n\nRUN cpm install --with-test\n\n# Helper stage, so that we don't try to install GeoIP upon every rebuild of the source\nFROM alpinemodperl AS alpinemodperlgeoip\n\nADD https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz /tmp/GeoLite2-Country.tar.gz\nRUN set -x \\\n  # Install GeoIP files locally\n  && tar xfz /tmp/GeoLite2-Country.tar.gz -C /usr/local/share \\\n  && rm /tmp/GeoLite2-Country.tar.gz \\\n  && mv /usr/local/share/GeoLite2-Country_* /usr/local/share/GeoLite2-Country \\\n  # Prepare Apache to include our custom config\n  && mkdir -p /usr/local/apache2/conf/sites-enabled \\\n  && echo 'IncludeOptional conf/sites-enabled/*.conf' >> /usr/local/apache2/conf/httpd.conf\n\nFROM alpinemodperlgeoip AS runnable\n\n# Copy Perl libraries from the builder image\nCOPY --from=builder /tmp/local/ /opt/perl/local/\n\nEXPOSE 80\n\nFROM runnable AS withsrc\n\n# Install Product Opener from the workdir\nCOPY . /opt/product-opener/\nWORKDIR /opt/product-opener\n"
}