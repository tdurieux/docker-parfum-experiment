{
  "startTime": 1674244393338,
  "endTime": 1674244393632,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 43,
        "columnEnd": 117
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 57,
        "columnEnd": 93
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile\n#\n# @author hanjiang.yu@bitmain.com\n# @copyright btc.com\n# @since 2018-12-01\n#\n#\nFROM ubuntu:18.04\nLABEL maintainer=\"Hanjiang Yu <hanjiang.yu@bitmain.com>\"\n\nARG APT_MIRROR_URL\nARG BUILD_JOBS=1\n\nCOPY update_apt_sources.sh /tmp\nRUN /tmp/update_apt_sources.sh\n\n# Install build dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    autoconf \\\n    automake \\\n    autotools-dev \\\n    bsdmainutils \\\n    build-essential \\\n    cmake \\\n    curl \\\n    git \\\n    libboost-all-dev \\\n    libconfig++-dev \\\n    libcurl4-openssl-dev \\\n    libgmp-dev \\\n    libgoogle-glog-dev \\\n    libhiredis-dev \\\n    libmysqlclient-dev \\\n    libprotobuf-dev \\\n    libssl-dev \\\n    libtool \\\n    libzmq3-dev \\\n    libzookeeper-mt-dev \\\n    openssl \\\n    pkg-config \\\n    protobuf-compiler \\\n    wget \\\n    yasm \\\n    zlib1g-dev \\\n    && apt-get autoremove && apt-get clean q && rm -rf /var/lib/apt/lists/*\n\n# Build libevent static library\nRUN cd /tmp && \\\n    wget https://github.com/libevent/libevent/releases/download/release-2.1.9-beta/libevent-2.1.9-beta.tar.gz && \\\n    [ $(sha256sum libevent-2.1.9-beta.tar.gz | cut -d \" \" -f 1) = \"eeb4c6eb2c4021e22d6278cdcd02815470243ed81077be0cbd0f233fa6fc07e8\" ] && \\\n    tar zxf libevent-2.1.9-beta.tar.gz && \\\n    cd libevent-2.1.9-beta && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-shared && \\\n    make -j${BUILD_JOBS} && \\\n    make install && \\\n    rm -rf /tmp/* && rm libevent-2.1.9-beta.tar.gz\n\n# Build librdkafka static library\nRUN cd /tmp && wget https://github.com/edenhill/librdkafka/archive/0.9.1.tar.gz && \\\n    [ $(sha256sum 0.9.1.tar.gz | cut -d \" \" -f 1) = \"5ad57e0c9a4ec8121e19f13f05bacc41556489dfe8f46ff509af567fdee98d82\" ] && \\\n    tar zxvf 0.9.1.tar.gz && cd librdkafka-0.9.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && rm -rf /tmp/* && rm 0.9.1.tar.gz\n\n# Remove dynamic libraries of librdkafka\n# In this way, the constructed deb package will\n# not have dependencies that not from software sources.\nRUN cd /usr/local/lib && \\\n    find . | grep 'rdkafka' | grep '.so' | xargs rm\n\n# Build blockchain\nRUN mkdir /work && git clone https://github.com/superbitcoin/SuperBitcoin.git --branch v0.16.2 --depth 1 /work/blockchain && \\\n    cd /work/blockchain && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-gui=no --disable-wallet --disable-tests --disable-bench && make && \\\n    cd /work/blockchain/src/secp256k1 && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-module-recovery && make\n\n# For forward compatible\nRUN ln -s /work/blockchain /work/bitcoin\n\n# Used later by btcpool build\nENV CHAIN_TYPE=SBTC\n"
}