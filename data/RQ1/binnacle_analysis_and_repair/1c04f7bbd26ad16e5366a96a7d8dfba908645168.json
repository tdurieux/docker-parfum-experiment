{
  "startTime": 1674243962357,
  "endTime": 1674243963120,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 75
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 2,
        "columnEnd": 101
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 2,
        "columnEnd": 72
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 2,
        "columnEnd": 77
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 2,
        "columnEnd": 97
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 2,
        "columnEnd": 101
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 2,
        "columnEnd": 76
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 2,
        "columnEnd": 87
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 75
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 2,
        "columnEnd": 114
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 2,
        "columnEnd": 142
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n# or more contributor license agreements. Licensed under the Elastic License;\n# you may not use this file except in compliance with the Elastic License.\n#\n\nFROM centos:6\n\n# This is basically automating the setup instructions in build-setup/linux.md\n\nMAINTAINER David Roberts <dave.roberts@elastic.co>\n\n# Make sure OS packages are up to date and required packages are installed\nRUN \\\n  rm /var/lib/rpm/__db.* && \\\n  yum install -y gcc gcc-c++ git unzip wget zip zlib-devel && rm -rf /var/cache/yum\n\n# For compiling with hardening and optimisation\nENV CFLAGS \"-g -O3 -fstack-protector -D_FORTIFY_SOURCE=2\"\nENV CXXFLAGS \"-g -O3 -fstack-protector -D_FORTIFY_SOURCE=2\"\nENV LDFLAGS \"-Wl,-z,relro -Wl,-z,now\"\nENV LDFLAGS_FOR_TARGET \"-Wl,-z,relro -Wl,-z,now\"\n\n# Build gcc 7.3\nRUN \\\n  wget --quiet -O - https://ftpmirror.gnu.org/gcc/gcc-7.3.0/gcc-7.3.0.tar.gz | tar zxf - && \\\n  cd gcc-7.3.0 && \\\n  contrib/download_prerequisites && \\\n  sed -i -e 's/$(SHLIB_LDFLAGS)/$(LDFLAGS) $(SHLIB_LDFLAGS)/' libgcc/config/t-slibgcc && \\\n  cd .. && \\\n  mkdir gcc-7.3.0-build && \\\n  cd gcc-7.3.0-build && \\\n  ../gcc-7.3.0/configure --prefix=/usr/local/gcc73 --enable-languages=c,c++ --enable-vtable-verify --with-system-zlib --disable-multilib && \\\n  make -j`grep -c '^processor' /proc/cpuinfo` && \\\n  make install && \\\n  cd .. && \\\n  rm -rf gcc-7.3.0 gcc-7.3.0-build\n\n# Update paths to use the newly built compiler in C++14 mode\nENV LD_LIBRARY_PATH /usr/local/gcc73/lib64:/usr/local/gcc73/lib:/usr/lib:/lib\nENV PATH /usr/local/gcc73/bin:/usr/bin:/bin:/usr/sbin:/sbin\nENV CXX \"g++ -std=gnu++14\"\n\n# Build libxml2\nRUN \\\n  wget --quiet -O - ftp://anonymous@ftp.xmlsoft.org/libxml2/libxml2-2.9.4.tar.gz | tar zxf - && \\\n  cd libxml2-2.9.4 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/gcc73 --without-python --without-readline && \\\n  make -j`grep -c '^processor' /proc/cpuinfo` && \\\n  make install && \\\n  cd .. && \\\n  rm -rf libxml2-2.9.4\n\n# Build expat\nRUN \\\n  wget --quiet -O - https://github.com/libexpat/libexpat/releases/download/R_2_2_6/expat-2.2.6.tar.bz2 | tar jxf - && \\\n  cd expat-2.2.6 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/gcc73 && \\\n  make -j`grep -c '^processor' /proc/cpuinfo` && \\\n  make install && \\\n  cd .. && \\\n  rm -rf expat-2.2.6\n\n# Build APR\nRUN \\\n  wget --quiet -O - https://archive.apache.org/dist/apr/apr-1.7.0.tar.bz2 | tar jxf - && \\\n  cd apr-1.7.0 && \\\n  sed -i -e \"s/for ac_lib in '' crypt ufc; do/for ac_lib in ''; do/\" configure && \\\n  sed -i -e 's/#define APR_HAVE_CRYPT_H         @crypth@/#define APR_HAVE_CRYPT_H         0/' include/apr.h.in && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/gcc73 && \\\n  make -j`grep -c '^processor' /proc/cpuinfo` && \\\n  make install && \\\n  cd .. && \\\n  rm -rf apr-1.7.0\n\n# Build APR utilities\nRUN \\\n  wget --quiet -O - https://archive.apache.org/dist/apr/apr-util-1.6.1.tar.bz2 | tar jxf - && \\\n  cd apr-util-1.6.1 && \\\n  sed -i -e \"s/for ac_lib in '' crypt ufc; do/for ac_lib in ''; do/\" configure && \\\n  sed -i -e 's/#define CRYPT_MISSING 0/#define CRYPT_MISSING 1/' crypto/apr_passwd.c && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/gcc73 --with-apr=/usr/local/gcc73/bin/apr-1-config --with-expat=/usr/local/gcc73 && \\\n  make -j`grep -c '^processor' /proc/cpuinfo` && \\\n  make install && \\\n  cd .. && \\\n  rm -rf apr-util-1.6.1\n\n# Build log4cxx\nRUN \\\n  wget --quiet -O - https://apache.cs.utah.edu/logging/log4cxx/0.10.0/apache-log4cxx-0.10.0.tar.gz | tar zxf - && \\\n  cd apache-log4cxx-0.10.0 && \\\n  sed -i -e 's/#define _LOG4CXX_OBJECTPTR_INIT(x) { exchange(x);/#define _LOG4CXX_OBJECTPTR_INIT(x) : ObjectPtrBase() { exchange(x); /g' src/main/include/log4cxx/helpers/objectptr.h && \\\n  sed -i -e 's/#define _LOG4CXX_OBJECTPTR_INIT(x) : p(x) {/#define _LOG4CXX_OBJECTPTR_INIT(x) : ObjectPtrBase(), p(x) {/g' src/main/include/log4cxx/helpers/objectptr.h && \\\n  sed -i -e 's%#include <log4cxx/helpers/bytebuffer.h>%#include <log4cxx/helpers/bytebuffer.h>\\n#include <string.h>%g' src/main/cpp/inputstreamreader.cpp && \\\n  sed -i -e 's%#include <log4cxx/helpers/bytebuffer.h>%#include <log4cxx/helpers/bytebuffer.h>\\n#include <string.h>%g' src/main/cpp/socketoutputstream.cpp && \\\n  sed -i -e 's/#include <locale.h>/#include <locale.h>\\n#include <string.h>\\n#include <stdio.h>\\n#include <wchar.h>/' src/examples/cpp/console.cpp && \\\n  sed -i -e '152,163s/0x/(char)0x/g' src/main/cpp/locationinfo.cpp && \\\n  sed -i -e '239,292s/0x/(char)0x/g' src/main/cpp/loggingevent.cpp && \\\n  sed -i -e '39s/0x/(char)0x/g' src/main/cpp/objectoutputstream.cpp && \\\n  sed -i -e '84,92s/0x/(char)0x/g' src/main/cpp/objectoutputstream.cpp && \\\n  sed -i -e '193,214s/0x/(char)0x/g' src/test/cpp/xml/domtestcase.cpp && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/gcc73 --with-charset=utf-8 --with-logchar=utf-8 --with-apr=/usr/local/gcc73 --with-apr-util=/usr/local/gcc73 && \\\n  make -j`grep -c '^processor' /proc/cpuinfo` && \\\n  make install && \\\n  cd .. && \\\n  rm -rf apache-log4cxx-0.10.0\n\n# Build Boost\nRUN \\\n  wget --quiet -O - https://sourceforge.mirrorservice.org/b/bo/boost/boost/1.65.1/boost_1_65_1.tar.bz2 | tar jxf - && \\\n  cd boost_1_65_1 && \\\n  ./bootstrap.sh --without-libraries=context --without-libraries=coroutine --without-libraries=graph_parallel --without-libraries=log --without-libraries=mpi --without-libraries=python --without-icu && \\\n  sed -i -e 's/(17ul)(29ul)(37ul)(53ul)(67ul)(79ul) \\\\/(3ul)(17ul)(29ul)(37ul)(53ul)(67ul)(79ul) \\\\/' boost/unordered/detail/implementation.hpp && \\\n  sed -i -e 's%#if ((defined(__linux__) \\&\\& !defined(__UCLIBC__) \\&\\& !defined(BOOST_MATH_HAVE_FIXED_GLIBC)) || defined(__QNX__) || defined(__IBMCPP__)) \\&\\& !defined(BOOST_NO_FENV_H)%#if ((!defined(BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS) \\&\\& defined(__linux__) \\&\\& !defined(__UCLIBC__) \\&\\& !defined(BOOST_MATH_HAVE_FIXED_GLIBC)) || defined(__QNX__) || defined(__IBMCPP__)) \\&\\& !defined(BOOST_NO_FENV_H)%g' boost/math/tools/config.hpp && \\\n  ./b2 -j`grep -c '^processor' /proc/cpuinfo` --layout=versioned --disable-icu pch=off optimization=speed inlining=full define=BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS define=_FORTIFY_SOURCE=2 cxxflags=-std=gnu++14 cxxflags=-fstack-protector linkflags=-Wl,-z,relro linkflags=-Wl,-z,now && \\\n  ./b2 install --prefix=/usr/local/gcc73 --layout=versioned --disable-icu pch=off optimization=speed inlining=full define=BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS define=_FORTIFY_SOURCE=2 cxxflags=-std=gnu++14 cxxflags=-fstack-protector linkflags=-Wl,-z,relro linkflags=-Wl,-z,now && \\\n  cd .. && \\\n  rm -rf boost_1_65_1\n\n# Build cppunit\nRUN \\\n  wget --quiet -O - https://dev-www.libreoffice.org/src/cppunit-1.13.2.tar.gz | tar zxf - && \\\n  cd cppunit-1.13.2 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/gcc73 && \\\n  make -j`grep -c '^processor' /proc/cpuinfo` && \\\n  make install && \\\n  cd .. && \\\n  rm -rf cppunit-1.13.2\n\n# Build patchelf\nRUN \\\n  wget --quiet -O - https://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.gz | tar zxf - && \\\n  cd patchelf-0.9 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/gcc73 && \\\n  make -j`grep -c '^processor' /proc/cpuinfo` && \\\n  make install && \\\n  cd .. && \\\n  rm -rf patchelf-0.9\n\n"
}