{
  "startTime": 1674250258618,
  "endTime": 1674250260081,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 2,
        "columnEnd": 90
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 2,
        "columnEnd": 88
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 2,
        "columnEnd": 88
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 2,
        "columnEnd": 101
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 2,
        "columnEnd": 84
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 2,
        "columnEnd": 84
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 1,
        "columnEnd": 59
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 167,
        "lineEnd": 167,
        "columnStart": 1,
        "columnEnd": 230
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 166,
        "lineEnd": 166,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 8,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 25,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 135,
        "lineEnd": 137,
        "columnStart": 0,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 25,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 68,
        "columnStart": 0,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 135,
        "lineEnd": 137,
        "columnStart": 0,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# OpenVAS 8\n#\n# VERSION       1.0.0\n\nFROM debian:7.8\nMAINTAINER Serge Katzmann serge.katzmann@gmail.com\n\nENV DEBIAN_FRONTEND noninteractive\nENV LANG C.UTF-8 \nENV LANGUAGE en \nENV LC_ALL C.UTF-8\n\nRUN apt-get update -y && apt-get install --no-install-recommends locales debconf -y && \\\n\tdpkg-reconfigure locales && \\\n\tlocale-gen C.UTF-8 && \\\n\t/usr/sbin/update-locale LANG=C.UTF-8 && \\\napt-get install build-essential \\\n\t\t\t\t\tbison \\ \n\t\t\t\t\tflex \\ \n\t\t\t\t\tcmake \\ \n\t\t\t\t\tpkg-config \\ \n\t\t\t\t\tlibssh-dev \\ \n\t\t\t\t\tlibgnutls-dev \\ \n\t\t\t\t\tlibglib2.0-dev \\ \n\t\t\t\t\tlibpcap-dev \\ \n\t\t\t\t\tlibgpgme11-dev \\ \n\t\t\t\t\tuuid-dev \\ \n\t\t\t\t\tlibksba-dev \\ \n\t\t\t\t\tlibhiredis-dev \\ \n\t\t\t\t\tlibldap2-dev \\ \n\t\t\t\t\tautoconf \\ \n\t\t\t\t\tlibsqlite3-dev \\ \n\t\t\t\t\tlibxml2-dev \\ \n\t\t\t\t\tlibmicrohttpd-dev \\ \n\t\t\t\t\txsltproc \\ \n\t\t\t\t\ttcl \\ \n\t\t\t\t\trpm \\ \n\t\t\t\t\talien \\ \n\t\t\t\t\tnsis \\ \n\t\t\t\t\tgcc-mingw32 \\ \n\t\t\t\t\tperl-base \\ \n\t\t\t\t\tperl-base \\ \n\t\t\t\t\theimdal-dev \\ \n\t\t\t\t\theimdal-multidev \\ \n\t\t\t\t\tlibpopt-dev \\ \n\t\t\t\t\tlibxslt-dev \\ \n\t\t\t\t\tlibsnmp-dev \\ \n\t\t\t\t\tdoxygen \\ \n\t\t\t\t\txmltoman \\ \n\t\t\t\t\tsqlfairy \\ \n\t\t\t\t\tsqlite3 \\\n\t\t\t\t\tunzip \\\n\t\t\t\t\trsync \\\t\n\t\t\t\t\twget \\\n\t\t\t\t\tpython2.7 \\\n\t\t\t\t\tpython-setuptools \\\n\t\t\t\t\tpython-pip \\\n\t\t\t\t\tlibidn11-dev \\\n\t\t\t\t\tlibssl-dev \\\n\t\t\t\t\tlibpcre3-dev \\\n\t\t\t\t\tless \\\n\t\t\t\t\tnet-tools \\\n\t\t\t\t\topenssh-client \\\n\t\t\t\t\ttexlive-latex-base \\\t\t\t\t\t\n\t\t\t\t\ttexlive-latex-recommended \\\n\t\t\t\t\ttexlive-latex-extra \\\n\t\t\t\t\thtmldoc \\\n\t\t\t\t\thaveged \\\n\t\t\t\t\t-y --no-install-recommends --fix-missing && \\\n    mkdir /openvas-src && \\\n    cd /openvas-src && \\\n\t\twget -nv https://wald.intevation.org/frs/download.php/2191/openvas-libraries-8.0.5.tar.gz && \\\n\t\twget -nv https://wald.intevation.org/frs/download.php/2129/openvas-scanner-5.0.4.tar.gz && \\\n\t\twget -nv https://wald.intevation.org/frs/download.php/2195/openvas-manager-6.0.6.tar.gz && \\\n\t\twget -nv https://wald.intevation.org/frs/download.php/2200/greenbone-security-assistant-6.0.6.tar.gz && \\\n\t\twget -nv https://wald.intevation.org/frs/download.php/2209/openvas-cli-1.4.3.tar.gz && \\\n\t\twget -nv https://wald.intevation.org/frs/download.php/1975/openvas-smb-1.0.1.tar.gz && \\\n\t\ttar zxvf openvas-libraries-8.0.5.tar.gz && \\\n\t\ttar zxvf openvas-scanner-5.0.4.tar.gz && \\\n\t\ttar zxvf openvas-manager-6.0.6.tar.gz && \\\n\t\ttar zxvf greenbone-security-assistant-6.0.6.tar.gz && \\\n\t\ttar zxvf openvas-cli-1.4.3.tar.gz && \\\n\t\ttar zxvf openvas-smb-1.0.1.tar.gz && \\\n    cd /openvas-src/openvas-smb-1.0.1 && \\\n        mkdir build && \\\n        cd build && \\\n        cmake .. && \\\n        make -j $(nproc) && \\\n        make install && \\\n\t\tmake rebuild_cache && \\\n    cd /openvas-src/openvas-libraries-8.0.5 && \\\n        mkdir build && \\\n        cd build && \\\n        cmake .. && \\\n        make -j $(nproc) && \\\n        make install && \\\n\t\tmake rebuild_cache && \\\n\tcd /openvas-src/openvas-scanner-5.0.4 && \\\n        mkdir build && \\\n        cd build && \\\n        cmake .. && \\\n        make -j $(nproc) && \\\n        make install && \\\n\t\tmake rebuild_cache && \\\n\tcd /openvas-src/openvas-manager-6.0.6 && \\\n        mkdir build && \\\n        cd build && \\\n        cmake .. && \\\n        make -j $(nproc) && \\\n        make install && \\\n\t\tmake rebuild_cache && \\\n\tcd /openvas-src/greenbone-security-assistant-6.0.6 && \\\n        mkdir build && \\\n        cd build && \\\n        cmake .. && \\\n        make -j $(nproc) && \\\n        make install && \\\n\t\tmake rebuild_cache && \\\n\tcd /openvas-src/openvas-cli-1.4.3 && \\\n        mkdir build && \\\n        cd build && \\\n        cmake .. && \\\n        make -j $(nproc) && \\\n        make install && \\\n\t\tmake rebuild_cache && \\\n    rm -rf /openvas-src && \\\nmkdir /redis && \\\n\tcd /redis && \\\n\twget https://download.redis.io/releases/redis-2.8.19.tar.gz && \\\n\t\ttar zxvf redis-2.8.19.tar.gz && \\\n\t\tcd redis-2.8.19 && \\\n\t\tmake -j $(nproc) && \\\n\t\tmake install && \\\n\t\trm -fr /redis && \\\napt-get remove heimdal-dev -y && \\\n apt-get install --no-install-recommends curl \\\n\t\tlibcurl4-gnutls-dev \\\n\t\tlibkrb5-dev -y && \\\nmkdir /dirb && \\\n    cd /dirb && \\\n    wget -nv https://downloads.sourceforge.net/project/dirb/dirb/2.22/dirb222.tar.gz && \\\n        tar -zxvf dirb222.tar.gz && \\\n        cd dirb222 && \\\n        chmod 700 -R * && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n        make -j $(nproc) && \\\n        make install && \\\ncd /tmp && \\\n    wget -nv https://github.com/Arachni/arachni/releases/download/v1.3.2/arachni-1.3.2-0.5.9-linux-x86_64.tar.gz && \\\n        tar -zxvf arachni-1.3.2-0.5.9-linux-x86_64.tar.gz && \\\n\t\trm -f arachni-1.3.2-0.5.9-linux-x86_64.tar.gz && \\\n        mv arachni-1.3.2-0.5.9 /opt/arachni && \\\n        ln -s /opt/arachni/bin/* /usr/local/bin/ && \\\ncd ~ && \\\n    wget -nv https://github.com/sullo/nikto/archive/master.zip && \\\n    unzip master.zip -d /tmp && \\\n    mv /tmp/nikto-master/program /opt/nikto && \\\n    rm -rf /tmp/nikto-master && \\\n\trm -f ~/master.zip && \\\n    echo \"EXECDIR=/opt/nikto\\nPLUGINDIR=/opt/nikto/plugins\\nDBDIR=/opt/nikto/databases\\nTEMPLATEDIR=/opt/nikto/templates\\nDOCDIR=/opt/nikto/docs\" >> /opt/nikto/nikto.conf && \\\n    ln -s /opt/nikto/nikto.pl /usr/local/bin/nikto.pl && \\\n    ln -s /opt/nikto/nikto.conf /etc/nikto.conf && \\\ncd /tmp && wget -nv https://nmap.org/dist/nmap-5.51-1.x86_64.rpm && \\\n\talien -i nmap-5.51-1.x86_64.rpm && \\\n\trm -f nmap-5.51-1.x86_64.rpm && \\\ncd /tmp && \\\n\tpip install --no-cache-dir --upgrade pip && \\\n\twget -nv -O wapiti-2.3.0.tar.gz \"https://downloads.sourceforge.net/project/wapiti/wapiti/wapiti-2.3.0/wapiti-2.3.0.tar.gz?r=http://sourceforge.net/projects/wapiti/files/wapiti/wapiti-2.3.0/&amp;ts=1391931386&amp;use_mirror=heanet\" && \\\n\ttar zxvf wapiti-2.3.0.tar.gz && \\\n\tcd wapiti-2.3.0 && \\\n\tpython setup.py install && \\\n\tln -s /usr/local/bin/wapiti /usr/bin/wapiti && \\\n\trm -f /tmp/wapiti-2.3.0.tar.gz && \\\napt-get clean -yq && \\\n    apt-get autoremove -yq && \\\n    apt-get purge -y --auto-remove build-essential cmake && \\\ncd / && \\\nwget -nv https://svn.wald.intevation.org/svn/openvas/trunk/tools/openvas-check-setup --no-check-certificate && rm -rf /var/lib/apt/lists/*;\n\nADD ./redis.conf /etc/redis.conf\nADD ./open-vas-8-start.sh /open-vas-8-start.sh\nADD ./setup.sh /setup.sh\nRUN chmod 700 /open-vas-8-start.sh && \\\n\tchmod 700 /openvas-check-setup && \\\n\tchmod 700 /setup.sh && \\\n\t/setup.sh\n#OpenVAS 443 9390 9391 Arachni Web 9292\nEXPOSE 443 9390 9391 9292\nCMD [\"./open-vas-8-start.sh\"]\n"
}