{
  "startTime": 1674234056608,
  "endTime": 1674234056682,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 22,
        "columnEnd": 135
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 22,
        "columnEnd": 135
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.1\nRUN apt-get update && apt-get install --no-install-recommends -y sqlite3 libsqlite3-dev openssl libssl-dev libyaml-dev libreadline-dev libxml2-dev libxslt1-dev && rm -rf /var/lib/apt/lists/*;\nWORKDIR /opt/myapp\n#ENV RAILS_ENV production\n\n# Add Gemfile stuff first as a build optimization\n# This way the `bundle install` is only run when either Gemfile or Gemfile.lock is changed\n# This is because `bundle install` can take a long time\n# Without this optimization `bundle install` would run if _any_ file is changed within the project, no bueno\nADD Gemfile /opt/myapp/\nADD Gemfile.lock /opt/myapp/\nRUN bundle install\n\n# This will now install anything in Gemfile.tip\n# This way you can add new gems without rebuilding _everything_ to add 1 gem\n# Anything that was already installed from the main Gemfile will be re-used\n#ADD Gemfile.tip /opt/myapp/\nRUN bundle install\n\n\n# Add rake and its dependencies\nADD config /opt/myapp/config\nADD Rakefile /opt/myapp/\n\n# Add everything else\n# Any change to any file after this point (if not in .dockerignore) will cause the build cache to be busted here\n# This includes changes to the Dockerfile itself\n# Goal here is to do as little as possible after this entry\nADD . /opt/myapp\n\nENV PATH /opt/myapp/bin:$PATH\nRUN bundle exec rake db:create:all\nRUN bundle exec rake db:migrate\nRUN bundle exec rake warehouse:build_date_dimension\nRUN bundle exec etl etl/products.ctl\nRUN bundle exec etl etl/stores.ctl\nRUN bundle exec etl etl/pos_line_item_facts.ctl\n\nCMD bundle exec rails s\n"
}