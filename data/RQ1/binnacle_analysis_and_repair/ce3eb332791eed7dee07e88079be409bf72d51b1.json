{
  "startTime": 1674235384506,
  "endTime": 1674235384793,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Note: I played with openjdk:8-jdk-alpine, but wasn't able to get even the entrypoint shell script to actually run\nFROM docker.metasfresh.com:6000/ubuntu:16.04\n\n# to make sure that the cache is only used during one day, run docker build --build-arg CACHEBUST=$(date \"+%Y-%m-%d\")\n# that way we should get the latest updates since the release of our base image\n# thx to https://github.com/moby/moby/issues/1996#issuecomment-185872769\nARG CACHEBUST=1\n\n# Note that we put all of this into one command\n# because otherwise, the update and full-update might not be performed (still in cache)\n# and the installs might fail, because e.g. openjdk might not yet be in the cache, however URLs might have been changed.\n#\n# Note that netcat is used to wait for the DMBS to be available on startup,\nRUN apt update \\\n    && apt -y full-upgrade \\\n    && apt -y --no-install-recommends install netcat \\\n    && apt -y --no-install-recommends install openjdk-8-jdk-headless \\\n    && apt -y --no-install-recommends install dos2unix \\\n    && apt -y --no-install-recommends install unzip \\\n    && apt -y autoremove \\\n    && apt -y autoclean && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./metasfresh-print-service-standalone.jar /opt/metasfresh/metasfresh-print/metasfresh-print.jar\n# Explode the uber jar to make it easier to work with the docker image;\n# e.g. with the exploded uber jar, we can later copy or overwrite config files into the docker image that change the applications behavior.\n# Note that the skript start_materialdispo_docker.sh is adapted to the exploded jar.\n# Note2 that we need unzip; jar doesn't work, thx to https://stackoverflow.com/a/39653862/1012103\nRUN cd /opt/metasfresh/metasfresh-print \\\n && (unzip -q /opt/metasfresh/metasfresh-print/metasfresh-print.jar || echo \"Ignore exit code $? because spring boot's uber jar starts with a shell script\") \\\n && rm /opt/metasfresh/metasfresh-print/metasfresh-print.jar\n\nCOPY ./configs/logback-spring.xml /opt/metasfresh/metasfresh-print/\nCOPY ./configs/metasfresh.properties /opt/metasfresh/metasfresh-print/\n\nCOPY ./start_print_docker.sh /opt/metasfresh/metasfresh-print/\n\n# I don't understand why I have to do this. I would assume that when I commit this sh file on windows with lf eols and\n# then check it out on a linux machine, it has lf eols. But aparently it doesn't.\n# At any rate, thx to https://stackoverflow.com/a/41424794/1012103\nRUN dos2unix /opt/metasfresh/metasfresh-print/start_print_docker.sh\n\n# make our start command executable\nRUN chmod 700 /opt/metasfresh/metasfresh-print/start_print_docker.sh\n\nENTRYPOINT [\"/opt/metasfresh/metasfresh-print/start_print_docker.sh\"]\n"
}