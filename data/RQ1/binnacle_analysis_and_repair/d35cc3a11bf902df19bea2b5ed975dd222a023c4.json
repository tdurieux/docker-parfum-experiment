{
  "startTime": 1674242169745,
  "endTime": 1674242169927,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 5,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM balenalib/%%BALENA_MACHINE_NAME%%-node:8-run\n\n# Install Systemd\nENV container docker\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tsystemd-sysv \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# We never want these to run in a container\n# Feel free to edit the list but this is the one we used\nRUN systemctl mask \\\n    dev-hugepages.mount \\\n    sys-fs-fuse-connections.mount \\\n    sys-kernel-config.mount \\\n\n    display-manager.service \\\n    getty@.service \\\n    systemd-logind.service \\\n    systemd-remount-fs.service \\\n\n    getty.target \\\n    graphical.target\n\nCOPY systemd/entry.sh /usr/bin/entry.sh\nCOPY systemd/balena.service /etc/systemd/system/balena.service\n\nRUN systemctl enable /etc/systemd/system/balena.service\n\nSTOPSIGNAL 37\nENTRYPOINT [\"/usr/bin/entry.sh\"]\nENV INITSYSTEM on\n# Finish setup systemd\n\n# Move to app dir\nRUN mkdir -p /usr/src/app/ && rm -rf /usr/src/app/\nWORKDIR /usr/src/app\nCOPY ./app/package.json ./\n\nRUN apt-get update && apt-get install -yq --no-install-recommends \\\n  build-essential \\\n  apt-transport-https \\\n  python-dev \\\n  xmltoman \\\n  git \\\n  curl \\\n  wget \\\n  autoconf \\\n  automake \\\n  libtool \\\n  libssl-dev \\\n  libdaemon-dev \\\n  libasound2-dev \\\n  libpopt-dev \\\n  libconfig-dev \\\n  libavahi-client-dev \\\n  avahi-daemon \\\n  libnss-mdns \\\n  libsoxr-dev \\\n  alsa-utils \\\n  && git clone https://github.com/mikebrady/shairport-sync.git shairport-sync --depth 1  --branch 3.2.2 \\\n  && cd shairport-sync && autoreconf -i -f \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-alsa --with-avahi --with-ssl=openssl --with-metadata --with-systemd \\\n  && make install && cp ./scripts/shairport-sync.conf /usr/local/etc/shairport-sync.conf && cd ../ && rm -rf shairport-sync \\\n  && JOBS=MAX npm install --unsafe-perm --production && npm cache clean --force && rm -rf /tmp/* \\\n  && apt-get purge -y \\\n    build-essential \\\n    python-dev \\\n    xmltoman \\\n    git \\\n    curl \\\n    apt-transport-https \\\n    autoconf \\\n    automake \\\n    libtool \\\n    libssl-dev \\\n    libdaemon-dev \\\n    libasound2-dev \\\n    libpopt-dev \\\n    libconfig-dev \\\n    libsoxr-dev \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Configure DAC\nCOPY ./Dockerbin/asound.conf /etc/asound.conf\n\n# Move app to filesystem\nCOPY ./app ./\n\n# Configure shairport-sync\nCOPY ./Dockerbin/shairport-sync.conf /usr/local/etc/shairport-sync.conf\n\n# Start app\nCMD [\"bash\", \"/usr/src/app/start.sh\"]\n"
}