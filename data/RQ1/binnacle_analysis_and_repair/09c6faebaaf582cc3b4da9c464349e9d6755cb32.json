{
  "startTime": 1674235114533,
  "endTime": 1674235114747,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 148
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 148
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 148
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 172
      }
    }
  ],
  "repairedDockerfile": "# docker build -t sectalks/syd0x05 .\n# docker run -d sectalks/syd0x05\n# docker exec -it <id> sudo -i -u ctf\n\nFROM ubuntu:14.04\nMAINTAINER \"Aleksa Sarai <cyphar@cyphar.com>\"\n\n# Install packages.\nRUN dpkg --add-architecture i386\nRUN apt-get update && apt-get upgrade -y\nRUN apt-get install --no-install-recommends -y build-essential python python-pip mercurial supervisor perl libc6:i386 lib32ncurses5 libstdc++6:i386 dash golang vim nano zsh && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir hg+https://bitbucket.org/dbenamy/devcron#egg=devcron\n\n# Set up supervisor.\nRUN mkdir -p /var/log/supervisor\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# Set up users.\nRUN useradd -s/bin/bash -m -d/home/gl4dl0gs -- gl4dl0gs\nRUN passwd -l -- gl4dl0gs\nRUN useradd -s/bin/bash -m -d/home/ctf -- ctf\nRUN passwd -d -- ctf\n\n# Set up flag.\nCOPY flag /flag\nRUN chown root:root /flag && chmod 400 /flag\n\n# Make build dirs.\nRUN mkdir -p /src\n\n# 01: Set up s3cur3s4f3.\nCOPY 01-s3cur3s4f3/ /src/s3cur3s4f3\nRUN cp -v /src/s3cur3s4f3/s3cur3s4f3 /home/ctf/s3cur3s4f3 && \\\n\tchmod 111 /home/ctf/s3cur3s4f3\nRUN cd /src/s3cur3s4f3/ && go build w00t.go && \\\n\tcp -v /src/s3cur3s4f3/w00t /home/ctf/w00t && \\\n\tchmod 111 /home/ctf/w00t && \\\n\tchown gl4dl0gs:gl4dl0gs /home/ctf/w00t && \\\n\tchmod u+s /home/ctf/w00t\n\n# 02: Set up gl4d0s.\nCOPY 02-gl4d0s/ /src/gl4d0s\nRUN cd /src/gl4d0s/ && make clean all && make install {SUSER,SGROUP}=root {LUSER,LGROUP}=gl4dl0gs\nRUN mkdir /cron && \\\n\techo \"* * * * * /cron/gl4d0s.sh\" > /cron/crontab && \\\n\tcp -v /src/gl4d0s/cron/gl4d0s.sh /cron/gl4d0s.sh\n\n# Clean up build dirs -- we don't want the source code to be lying around.\nRUN rm -rf /src\n\n# Set up environment for server.\n# The actual user will shell into the environment with \"docker exec\", using docksh.\nENTRYPOINT [\"/usr/bin/supervisord\"]\n"
}