{
  "startTime": 1674243360542,
  "endTime": 1674243360744,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 7,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 7,
        "columnEnd": 104
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM devgeniem/openresty-pagespeed\nMAINTAINER Onni Hakala <onni.hakala@geniem.com>\n\n##\n# Only use these during installation\n##\nARG LANG=C.UTF-8\nARG DEBIAN_FRONTEND=noninteractive\n\n##\n# Install php7 packages from dotdeb.org\n# - Dotdeb is an extra repository providing up-to-date packages for your Debian servers\n##\nRUN \\\n    apt-get update \\\n    && apt-get -y --no-install-recommends install \\\n        curl \\\n        nano \\\n        ca-certificates \\\n        git \\\n        mysql-client \\\n        msmtp \\\n        netcat \\\n        less \\\n        libmcrypt-dev \\\n    && echo \"deb http://packages.dotdeb.org jessie all\" > /etc/apt/sources.list.d/dotdeb.list \\\n    && curl -f -sS https://www.dotdeb.org/dotdeb.gpg | apt-key add - \\\n    && apt-get update \\\n    && apt-get -y --no-install-recommends install \\\n        php7.0-cli \\\n        php7.0-common \\\n        php7.0-apcu \\\n        php7.0-apcu-bc \\\n        php7.0-curl \\\n        php7.0-json \\\n        php7.0-mcrypt \\\n        php7.0-opcache \\\n        php7.0-readline \\\n        php7.0-xml \\\n        php7.0-zip \\\n        php7.0-fpm \\\n        php7.0-redis \\\n        php7.0-mongodb \\\n        php7.0-mysqli \\\n        php7.0-intl \\\n        php7.0-gd \\\n        php7.0-mbstring \\\n        php7.0-soap \\\n        php7.0-bcmath \\\n        php7.0-curl \\\n        php7.0-ldap \\\n        php7.0-mcrypt \\\n        php7.0-imagick \\\n        libmagickwand-dev \\\n\n    # Force install only cron without extra mailing dependencies\n    && cd /tmp \\\n    && apt-get download cron \\\n    && dpkg --force-all -i cron*.deb \\\n    && mkdir -p /var/spool/cron/crontabs \\\n\n    # Cleanup\n    && apt-get clean \\\n    && apt-get autoremove \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* /var/log/apt/* /var/log/*.log\n\n\n# Install helpers\nRUN \\\n\n\n\n    curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \\\n    && composer global require hirak/prestissimo \\\n\n    ##\n    # Install wp-cli\n    # source: http://wp-cli.org/\n    ##\n    && curl -f -L https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -o /usr/local/bin/wp-cli \\\n    && chmod +rx /usr/local/bin/wp-cli \\\n    # Symlink it to /usr/bin as well so that cron can find this script with limited PATH\n    && ln -s /usr/local/bin/wp-cli /usr/bin/wp-cli \\\n\n    ##\n    # Install cronlock for running cron correctly with multi container setups\n    # https://github.com/kvz/cronlock\n    ##\n    && curl -f -L https://raw.githubusercontent.com/kvz/cronlock/master/cronlock -o /usr/local/bin/cronlock \\\n    && chmod +rx /usr/local/bin/cronlock \\\n    # Symlink it to /usr/bin as well so that cron can find this script with limited PATH\n    && ln -s /usr/local/bin/cronlock /usr/bin/cronlock\n\n##\n# Add Project files like nginx and php-fpm processes and configs\n# Also custom scripts and bashrc\n##\nCOPY rootfs/ /\n\n# Run small fixes\nRUN set -x \\\n    && mkdir -p /var/www/uploads \\\n    && ln -sf /usr/sbin/php-fpm7.0 /usr/sbin/php-fpm \\\n    && ln -sf /usr/bin/wp /usr/local/bin/wp\n\n# This is for your project root\nENV PROJECT_ROOT=\"/var/www/project\"\n\nENV \\\n\n    # Add interactive term\n    TERM=\"xterm\" \\\n\n    # Set defaults which can be overriden\n    MYSQL_PORT=\"3306\" \\\n\n    # Use default web port in nginx but allow it to be overridden\n    # This also works correctly with flynn:\n    # https://github.com/flynn/flynn/issues/3213#issuecomment-237307457\n    PORT=\"8080\" \\\n\n    # Use custom users for nginx and php-fpm\n    WEB_USER=\"wordpress\" \\\n    WEB_GROUP=\"web\" \\\n    WEB_UID=1000 \\\n    WEB_GID=1001 \\\n\n    # Set defaults for redis\n    REDIS_PORT=\"6379\" \\\n    REDIS_DATABASE=\"0\" \\\n    REDIS_PASSWORD=\"\" \\\n    REDIS_SCHEME=\"tcp\" \\\n\n    # Set defaults for NGINX redis cache\n    # This variable uses seconds by default\n    # Time units supported are \"s\"(seconds), \"ms\"(milliseconds), \"y\"(years), \"M\"(months), \"w\"(weeks), \"d\"(days), \"h\"(hours), and \"m\"(minutes).\n    NGINX_REDIS_CACHE_TTL_DEFAULT=\"900\" \\\n    NGINX_REDIS_CACHE_TTL_MAX=\"4h\" \\\n\n    # Cronlock is used to stop simultaneous cronjobs in clusterised environments\n    CRONLOCK_HOST=\"\" \\\n\n    # This is used by nginx and php-fpm\n    WEB_ROOT=\"${PROJECT_ROOT}/web\" \\\n    # This is used automatically by wp-cli\n    WP_CORE=\"${PROJECT_ROOT}/web/wp\" \\\n\n    # Nginx include files\n    NGINX_INCLUDE_DIR=\"/var/www/project/nginx\" \\\n    # Allow bigger file uploads\n    NGINX_MAX_BODY_SIZE=\"10M\" \\\n    # Allow storing bigger body in memory\n    NGINX_BODY_BUFFER_SIZE=\"32k\" \\\n    # Have sane fastcgi timeout by default\n    NGINX_FASTCGI_TIMEOUT=\"30\" \\\n\n    # Have sane fastcgi timeout by default\n    NGINX_ERROR_LEVEL=\"warn\" \\\n    # Have sane fastcgi timeout by default\n    NGINX_ERROR_LOG=\"stderr\" \\\n    # Have sane fastcgi timeout by default\n    NGINX_ACCESS_LOG=\"/dev/stdout\" \\\n\n    # Default cache key for nginx http cache\n    NGINX_CACHE_KEY='wp_:nginx:$real_scheme$request_method$host$request_uri' \\\n\n    # PHP settings\n    PHP_MEMORY_LIMIT=\"128M\" \\\n    PHP_MAX_INPUT_VARS=\"1000\" \\\n    PHP_ERROR_LOG=\"/proc/self/fd/1\" \\\n    PHP_ERROR_LOG_LEVEL=\"warning\" \\\n    PHP_ERROR_LOG_MAX_LEN=\"8192\" \\\n    PHP_SESSION_REDIS_DB=\"0\" \\\n    PHP_SESSION_HANDLER=\"files\" \\\n\n    # You should count the *.php files in your project and set this number to be bigger\n    # $ find . -type f -print | grep php | wc -l\n    PHP_OPCACHE_MAX_FILES=\"8000\" \\\n\n    # Amount of memory in MB to allocate for opcache\n    PHP_OPCACHE_MAX_MEMORY=\"128\" \\\n\n    # Use host machine as default SMTP_HOST\n    SMTP_HOST=\"172.17.0.1\" \\\n\n    # This folder is used to mount files into host machine\n    # You should use this path for your uploads since everything else should be ephemeral\n    UPLOADS_ROOT=\"/var/www/uploads\" \\\n\n    # This can be overidden by you, it's just default for us\n    TZ=\"Europe/Helsinki\"\n\n# Setup $TZ. Remember to run this again in your own build\nRUN dpkg-reconfigure tzdata && \\\n    # Make sure that all files here have execute permissions\n    chmod +x /etc/cont-init.d/*\n\n# Set default path to project folder for easier running commands in project\nWORKDIR ${PROJECT_ROOT}\n\nEXPOSE ${PORT}\n\nENTRYPOINT [\"/init\"]\n\n"
}