{
  "startTime": 1674238876246,
  "endTime": 1674238876918,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM java:openjdk-8-jdk\nMAINTAINER Dalitso Banda <dalitsohb@gmail.com>\n\nENV LIVY_VERSION=\"git_master\"\nENV LIVY_COMMIT=\"02550f7919b7348b6a7270cf806e031670037b2f\"\nENV LOG_TAG=\"[LIVY_${LIVY_VERSION}]:\" \\\n    LIVY_HOME=\"/livy\" \\\n    LANG=en_US.UTF-8 \\\n    LC_ALL=en_US.UTF-8\n\nRUN echo \"$LOG_TAG Install essentials\" && \\\n    apt-get -y update && \\\n    apt-get install --no-install-recommends -y locales && \\\n    locale-gen $LANG && \\\n    apt-get install --no-install-recommends -y git wget grep curl sed && \\\n    apt-get install --no-install-recommends -y python-setuptools && \\\n    apt-get autoclean && apt-get autoremove && \\\n    echo \"$LOG_TAG Install python dependencies\" && \\\n    curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py && \\\n    apt-get install --no-install-recommends -y python-dev libpython3-dev build-essential pkg-config gfortran && \\\n    pip install --no-cache-dir -U pip setuptools wheel && \\\n    echo \"$LOG_TAG Getting maven\" && \\\n    wget https://www.eu.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz && \\\n    tar -zxf apache-maven-3.3.9-bin.tar.gz -C /usr/local/ && \\\n    ln -s /usr/local/apache-maven-3.3.9/bin/mvn /usr/local/bin/mvn && \\\n    echo \"$LOG_TAG Download and build Livy source\" && \\\n    git clone https://github.com/apache/incubator-livy.git ${LIVY_HOME}_src && \\\n    cd ${LIVY_HOME}_src && \\\n    git checkout ${LIVY_COMMIT} && \\\n    mvn package -DskipTests && \\\n    ls ${LIVY_HOME}_src && \\\n    echo \"$LOG_TAG Cleanup\" && \\\n    apt-get purge -y --auto-remove build-essential pkg-config gfortran libpython3-dev && \\\n    apt-get autoremove && \\\n    apt-get autoclean && \\\n    apt-get clean && \\\n    rm -rf /root/.ivy2 && \\\n    rm -rf /root/.npm && \\\n    rm -rf /root/.m2 && \\\n    rm -rf /root/.cache && \\\n    rm -rf /tmp/* && rm apache-maven-3.3.9-bin.tar.gz && rm -rf /var/lib/apt/lists/*;\n\n# Get Spark from US Apache mirror.\nENV APACHE_SPARK_VERSION 2.4.0\nENV HADOOP_VERSION 3.2.0\nENV HADOOP_GIT_COMMIT=\"release-3.2.0-RC1\"\n\nRUN echo \"$LOG_TAG Getting SPARK_HOME\" && \\\n    mkdir -p /opt && \\\n    cd /opt && \\\n    curl -f https://apache.claz.org/spark/spark-${APACHE_SPARK_VERSION}/spark-${APACHE_SPARK_VERSION}-bin-without-hadoop.tgz | \\\n        tar -xz && \\\n    ln -s spark-${APACHE_SPARK_VERSION}-bin-without-hadoop spark && \\\n    echo Spark ${APACHE_SPARK_VERSION} installed in /opt/spark && \\\n    export SPARK_HOME=/opt/spark\n\nRUN echo \"$LOG_TAG building hadoop\" && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y make autoconf automake libtool g++ unzip && \\\n    cd  / && \\\n    git clone https://github.com/apache/hadoop.git  hadoop_src && \\\n    mkdir /hadoop_deps && cd /hadoop_deps && \\\n    wget https://github.com/protocolbuffers/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.bz2 && \\\n    tar xvf protobuf-2.5.0.tar.bz2 && \\\n    cd protobuf-2.5.0 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && ldconfig && \\\n    cd /hadoop_src && git checkout ${HADOOP_GIT_COMMIT} && mvn package -Pdist -DskipTests -Dtar && \\\n    mv hadoop-dist/target/hadoop-${HADOOP_VERSION} /opt/hadoop && \\\n    rm -r /hadoop_src && \\\n    rm -rf /root/.ivy2 && \\\n    rm -rf /root/.m2 && \\\n    export HADOOP_HOME=/opt/hadoop && \\\n    echo \"\\nexport HADOOP_CLASSPATH=/opt/hadoop/share/hadoop/tools/lib/*\" >> /opt/hadoop/etc/hadoop/hadoop-env.sh && \\\n    echo Hadoop ${HADOOP_VERSION} installed in /opt/hadoop && \\\n    apt-get purge -y --auto-remove g++ make build-essential autoconf automake && \\\n    cd  / && rm -rf /hadoop_deps && rm protobuf-2.5.0.tar.bz2 && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"\\nSPARK_DIST_CLASSPATH=/jars:/jars/*:$(/opt/hadoop/bin/hadoop classpath)\" >> /opt/spark/conf/spark-env.sh\nENV HADOOP_HOME=/opt/hadoop\nADD jars /jars\n\nENV HADOOP_CONF_DIR /opt/hadoop/conf\nENV CONF_DIR /livy/conf\nENV SPARK_CONF_DIR /opt/spark/conf\n\nRUN mv ${LIVY_HOME}_src ${LIVY_HOME}\nADD livy.conf ${LIVY_HOME}/conf\nEXPOSE 8998\n\nWORKDIR ${LIVY_HOME}\n\nRUN mkdir logs && export SPARK_HOME=/opt/spark && export HADOOP_HOME=/opt/hadoop && export SPARK_CONF_DIR=/opt/spark/conf\n\n#hive needed for livy pyspark\nRUN wget https://central.maven.org/maven2/org/apache/spark/spark-hive_2.11/2.4.0/spark-hive_2.11-2.4.0.jar -P /opt/spark/jars\n\nCMD [\"sh\", \"-c\", \"echo '\\nspark.driver.host' $(hostname -i) >> /opt/spark/conf/spark-defaults.conf && echo '\\nlivy.spark.master' $SPARK_MASTER >> /livy/conf/livy.conf && bin/livy-server\"]\n"
}