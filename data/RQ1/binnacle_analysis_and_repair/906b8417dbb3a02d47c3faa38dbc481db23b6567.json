{
  "startTime": 1674234003229,
  "endTime": 1674234003395,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 19,
        "columnEnd": 74
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 75,
        "columnEnd": 98
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# DEPLOYMENT INSTRUCTIONS\n\n# To build the image, refer:\n# docker build -t egs_shim .\n\n# To run using the container, refer the following command:\n# docker run --privileged -it -d \\\n#\t\t-v /sys/fs/cgroup:/sys/fs/cgroup:ro \\\n#\t\t-p 9000:9000 -p 9001:80 egs_shim\n\n# this port should be same as one configured for the shim\n###########################################################\n\nFROM centos\nMAINTAINER arcolife <archit.py@gmail.com>\n\n# Install useful packages\nRUN yum install -y procps-ng tar vim git wget gcc && rm -rf /var/cache/yum\n\nRUN wget https://www.softwarecollections.org/en/scls/rhscl/python33/epel-7-x86_64/download/rhscl-python33-epel-7-x86_64.noarch.rpm\nRUN yum clean all; yum install -y rhscl-python33-epel-7-x86_64.noarch.rpm; rm -rf /var/cache/yum yum -y install python33\n\nRUN yum install -y mod_wsgi httpd && rm -rf /var/cache/yum\n\n# Clone the shim\n# RUN git clone https://github.com/distributed-system-analysis/es-graphite-shim.git /opt/es-graphite-shim\n\nRUN mkdir -p /opt/es-graphite-shim/es-graphite-shim/\nADD es-graphite-shim/ /opt/es-graphite-shim/es-graphite-shim/\nRUN mkdir /opt/es-graphite-shim/logs/; touch /opt/es-graphite-shim/logs/error.log; touch /opt/es-graphite-shim/logs/access.log\nCOPY requirements.txt /opt/es-graphite-shim/\nCOPY conf/local_settings.py /opt/es-graphite-shim/es-graphite-shim/\n\nWORKDIR /opt/es-graphite-shim\n\n# RUN easy_install pip\n# RUN virtualenv venv\n# RUN source venv/bin/activate; pip install -r /opt/es-graphite-shim/requirements.txt\nRUN scl enable python33 \"easy_install-3.3 pip\"\n\n# RUN scl enable python33 \"pip3.3 install virtualenv\"\n# RUN scl enable python33 \"virtualenv venv; source venv/bin/activate; pip3.3 install -r /opt/es-graphite-shim/requirements.txt; bash\"\nRUN scl enable python33 \"pip3.3 install -r /opt/es-graphite-shim/requirements.txt\"\n\n# add httpd configs\nCOPY conf/graphite_shim.conf.example /etc/httpd/conf.d/graphite_shim.conf\nRUN sed -i s#Listen\\ 80#Listen\\ 80\\\\nListen\\ 9000#g /etc/httpd/conf/httpd.conf\n\n# modify selinux policies and folder ownerships\nRUN chown -R apache:apache /opt/es-graphite-shim/\n\n# Enable using systemd\nRUN scl enable python33 bash; systemctl enable httpd\n\nRUN echo \"root:egs_shim\" | chpasswd\n\n# Launch bash as the default command if none specified.\nCMD [\"/usr/sbin/init\"]\n"
}