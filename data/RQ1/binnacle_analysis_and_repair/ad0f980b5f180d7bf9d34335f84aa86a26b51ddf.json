{
  "startTime": 1674241530861,
  "endTime": 1674241530932,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:6\n\n# this method installs but requires a new shell to use it - not sure how to do that with docker\n#RUN curl -o- -L https://yarnpkg.com/install.sh | bash\n\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN apt-get update && apt-get install --no-install-recommends -y yarn net-tools && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /code\nWORKDIR /code\nADD ./package.json package.json\n\n# set the location of yarn-cache so we can mount it as a volume in docker-compose to benefit from yarn's caching\n# an to prevent having to rebuild this image\nRUN yarn config set cache-folder /root/yarn-cache && yarn cache clean;\n\n# do all new package installs and updates from the yarn container with \"docker-compose run yarn\"\n# we don't want to run yarn here because it makes the image larger than necessary and any change to package.json would rebuild the image\n# to prevent this we mount yarn-cache as a docker-compose volume and use yarn.lock to take advantage of all that yarn has to offer\n# this means you have to run \"docker-compose run yarn\" before running \"docker-compose up\" for the first time\n# RUN yarn\n\nENV DOCKER 1\n"
}