{
  "startTime": 1674245908482,
  "endTime": 1674245909019,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 7,
        "columnEnd": 113
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 84,
        "lineEnd": 89,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "gpgVerifyAscRmAsc",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 8,
        "columnEnd": 54
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 8,
        "columnEnd": 60
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 8,
        "columnEnd": 69
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 21,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.4\n\nLABEL version=\"1.0.0\" \\\n      node=\"v6.9\" \\\n      os=\"Alpine v3.4\" \\\n      description=\"Node v6.9 compiled from source running on Alpine v3.4\"\n\nENV TERM=xterm \\\n    NLS_LANG=American_America.AL32UTF8 \\\n    LANG=C.UTF-8 \\\n    LANGUAGE=C.UTF-8 \\\n    LC_ALL=C.UTF-8 \\\n    TIMEZONE=America/Denver\n\nENV NODE_VERSION=v6.9.5 \\\n    NODE_PREFIX=/usr/local\n\nRUN set -x \\\n    && echo \"http://dl-4.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n    && echo \"http://dl-4.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories \\\n    && apk update \\\n    && apk add --no-cache \\\n        ca-certificates \\\n        curl \\\n        g++ \\\n        gcc \\\n        git \\\n        gnupg \\\n        libgcc \\\n        libstdc++ \\\n        linux-headers \\\n        make \\\n        mercurial \\\n        openssh \\\n        paxctl \\\n        python \\\n        shadow \\\n        subversion \\\n        sudo \\\n        tar\n\n##############################################################################\n# Install Node & NPM\n# Based on https://github.com/mhart/alpine-node/blob/master/Dockerfile (thank you)\n##############################################################################\n\nRUN set -x \\\n    # Download and validate the NodeJs source \\\n    && for key in \\\n        94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n        FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n        71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n        DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n        C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n        B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n        56730D5401028683275BD23C23EFEFE93C4CFFFE; \\\n    do \\\n        gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || \\\n        gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || \\\n        gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n    done \\\n    && mkdir /node_src \\\n    && cd /node_src \\\n    && curl -f -o node-${NODE_VERSION}.tar.gz -sSL https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}.tar.gz \\\n    && curl -f -o SHASUMS256.txt.asc -sSL https://nodejs.org/dist/${NODE_VERSION}/SHASUMS256.txt.asc \\\n    && gpg --batch --verify SHASUMS256.txt.asc \\\n    && grep node-${NODE_VERSION}.tar.gz SHASUMS256.txt.asc | sha256sum -c - && rm SHASUMS256.txt.asc\n\nRUN set -x \\\n    # Compile and install\n    && cd /node_src \\\n    && tar -zxf node-${NODE_VERSION}.tar.gz \\\n    && cd node-${NODE_VERSION} \\\n    && export GYP_DEFINES=\"linux_use_gold_flags=0\" \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${NODE_PREFIX} \\\n    && NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) \\\n    && make -j${NPROC} -C out mksnapshot BUILDTYPE=Release \\\n    && paxctl -cm out/Release/mksnapshot \\\n    && make -j${NPROC} \\\n    && make install \\\n    && paxctl -cm ${NODE_PREFIX}/bin/node && rm node-${NODE_VERSION}.tar.gz\n\nRUN set -x \\\n    # Install node packages \\\n    && npm install --silent -g \\\n        gulp-cli \\\n        grunt-cli \\\n        bower \\\n        markdown-styles \\\n        yarn && npm cache clean --force;\n\n##############################################################################\n# users\n##############################################################################\n\nRUN set -x \\\n    # Create a dev user to use as the directory owner\n    && addgroup dev \\\n    && adduser -D -s /bin/sh -G dev dev \\\n    && echo \"dev:password\" | chpasswd \\\n\n    # Setup wrapper scripts \\\n    && curl -f -o /run-as-user https://raw.githubusercontent.com/mkenney/docker-scripts/master/container/run-as-user \\\n    && chmod 0755 /run-as-user\n\n##############################################################################\n# ~ fin ~\n##############################################################################\n\nRUN set -x \\\n    && apk del \\\n        curl \\\n        gnupg \\\n        linux-headers \\\n        paxctl \\\n        python \\\n        tar \\\n\n    && find ${NODE_PREFIX}/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf \\\n\n    && rm -rf \\\n        /node_src \\\n        /tmp/* \\\n        /var/cache/apk/* \\\n        ${NODE_PREFIX}/lib/node_modules/npm/man \\\n        ${NODE_PREFIX}/lib/node_modules/npm/doc \\\n        ${NODE_PREFIX}/lib/node_modules/npm/html\n\n\nVOLUME /src\nWORKDIR /src\n\nENTRYPOINT [\"/run-as-user\"]\nCMD [\"/usr/local/bin/npm\"]\n"
}