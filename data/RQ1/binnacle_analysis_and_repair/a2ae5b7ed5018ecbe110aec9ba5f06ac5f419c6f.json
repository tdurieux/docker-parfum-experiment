{
  "startTime": 1674242097903,
  "endTime": 1674242098291,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 36,
        "columnEnd": 81
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 199
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 36,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 36,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 1,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "FROM jupyter/scipy-notebook\n\nLABEL maintainer=\"Nataniel Borges Jr.\"\nLABEL description=\"v0.1\"\n\nUSER root\n\n# Install required APT packages\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends graphviz curl inkscape bc ed texinfo groff wget && rm -rf /var/lib/apt/lists/*;\nRUN if [ \"$publish\" = \"yes\" ]; then \\\n apt-get install -y --no-install-recommends firefox vim tmux ; rm -rf /var/lib/apt/lists/*; fi\nRUN apt-get clean\nRUN rm -rf /var/lib/apt/lists/*\n\nUSER $NB_UID\n\nARG publish=yes\nARG branch=master\n\n# Install required python packages\nRUN if [ \"$publish\" = \"yes\" ]; then conda install -c anaconda python=3.6 ; fi\nRUN if [ \"$publish\" = \"yes\" ]; then conda install -c conda-forge geckodriver ; fi\nRUN if [ \"$publish\" = \"yes\" ]; then conda install -c conda-forge selenium ; fi\nRUN if [ \"$publish\" = \"yes\" ]; then \\\n pip install --no-cache-dir ipypublish==0.6.7 autopep8 yapf; fi\nRUN pip install --no-cache-dir jupyter jupyterlab matplotlib scipy numpy pandas graphviz svglib jupyter_contrib_nbextensions mypy notedown nbdime nbstripout astunparse enforce==0.3.4 showast astor z3-solver tornado\nRUN pip install --no-cache-dir git+https://github.com/ttylec/pyan#egg=pyan\n\nWORKDIR /home/$NB_USER\n\n# Clone the repo\nRUN git clone --branch ${branch} https://github.com/uds-se/fuzzingbook.git\nRUN fix-permissions /home/$NB_USER/fuzzingbook\n\nUSER root\n\n# Activate nbdime and nbstripout\n#RUN nbdime config-git --enable\nRUN nbdime extensions --enable\nRUN nbdime config-git --enable --global\n#RUN nbstripout --install --attributes .gitattributes\nWORKDIR /home/$NB_USER/fuzzingbook\n\n# enable nbdime for JupyterLab\nRUN conda install -c conda-forge nodejs # you\n#RUN jupyter labextension install nbdime-jupyterlab\n\n# Install aditional extensions (ToC and exercise)\nRUN jupyter contrib nbextension install --user\nRUN jupyter nbextension enable toc2/main --user\nRUN jupyter nbextension enable exercise2/main --user\n\n#RUN jupyter extensions enable nbdime --user -py\n# Other useful extensions\nRUN jupyter nbextension enable codefolding/main --user\nRUN jupyter nbextension enable execute_time/main --user\nRUN jupyter nbextension enable varInspector/main --user\nRUN jupyter nbextension enable collapsible_headings/main --user\nRUN jupyter nbextension enable select_keymap/main --user\nRUN jupyter nbextension enable spellchecker/main --user\nRUN jupyter nbextension enable scratchpad/main --user\n\nRUN if [ \"$publish\" = \"yes\" ]; then jupyter nbextension enable code_prettify/autopep8 --user ; fi\nRUN if [ \"$publish\" = \"yes\" ]; then jupyter nbextension enable code_prettify/code_prettify --user ; fi\n\n# run matplotlib once to generate the font cache\nRUN python -c \"import matplotlib as mpl; mpl.use('Agg'); import pylab as plt; fig, ax = plt.subplots(); fig.savefig('test.png')\"\nRUN test -e test.png\nRUN rm test.png\n\n# Trust notebooks such that users can see their HTML and JS output\nRUN jupyter trust /home/$NB_USER/fuzzingbook/notebooks/*.ipynb /home/$NB_USER/fuzzingbook/docs/notebooks/*.ipynb /home/$NB_USER/fuzzingbook/docs/beta/notebooks/*.ipynb\n\n# Copy Andreas' css to jupyter\nRUN mkdir /home/$NB_USER/.jupyter/custom\nRUN fix-permissions /home/$NB_USER/.jupyter\nRUN wget -O /home/$NB_USER/.jupyter/custom/custom.css https://github.com/uds-se/fuzzingbook/blob/master/docs/beta/notebooks/custom.css\nRUN ls\n\n# Fix directory permissions\nRUN fix-permissions /home/$NB_USER/.local\nRUN fix-permissions /home/$NB_USER/.local/share/jupyter\n\n# Remove temporary content\nRUN apt-get clean\nRUN apt-get autoremove\nRUN rm -rf /var/lib/apt/lists/*\n\nCOPY start-singleuser-custom.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/start-singleuser-custom.sh\nRUN mv /usr/local/bin/start-singleuser.sh /usr/local/bin/start-singleuser-old.sh\n#RUN cp /usr/local/bin/custom-start.sh /usr/local/bin/start-singleuser.sh\n\n# Quit root mode\nUSER $NB_UID\nENV EXECUTE_TIMEOUT=3000\n"
}