{
  "startTime": 1674239671095,
  "endTime": 1674239671379,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 11,
        "columnEnd": 104
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 11,
        "columnEnd": 112
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 59,
        "columnStart": 19,
        "columnEnd": 38
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 16,
        "columnEnd": 78
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 11,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM csp-java8:1.0\n\nMAINTAINER Thanos Angelatos\n\nENV CATALINA_HOME /usr/local/tomcat\nENV PATH $CATALINA_HOME/bin:$PATH\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n\n# let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR $CATALINA_HOME/native-jni-lib\nENV LD_LIBRARY_PATH ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\n\nRUN apk add --no-cache gnupg\n# see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n# see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS 05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\nRUN set -ex; \\\n        for key in $GPG_KEYS; do \\\n                gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n        done\n\nENV TOMCAT_MAJOR 7\nENV TOMCAT_VERSION 7.0.77\n\n# https://issues.apache.org/jira/browse/INFRA-8753?focusedCommentId=14735394#comment-14735394\nENV TOMCAT_TGZ_URL https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\n# not all the mirrors actually carry the .asc files :'(\nENV TOMCAT_ASC_URL https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\n\nRUN set -x \\\n        \\\n        && apk add --no-cache --virtual .fetch-deps \\\n                ca-certificates \\\n                tar \\\n                openssl \\\n        && wget -O tomcat.tar.gz \"https://central.preprod.melicertes.eu/repo-loads/tomcat7/tomcat.tar.gz\" \\\n        && wget -O tomcat.tar.gz.asc \"https://central.preprod.melicertes.eu/repo-loads/tomcat7/tomcat.tar.gz.asc\" \\\n        && gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz \\\n        && tar -xvf tomcat.tar.gz --strip-components=1 \\\n        && rm bin/*.bat \\\n        && rm tomcat.tar.gz* \\\n\n        && nativeBuildDir=\"$(mktemp -d)\" \\\n        && tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1 \\\n        && apk add --no-cache --virtual .native-build-deps \\\n                apr-dev \\\n                gcc \\\n                libc-dev \\\n                make \\\n                openssl-dev \\\n        && ( export CATALINA_HOME=\"$PWD\" \\\n                && cd \"$nativeBuildDir/native\" \\\n                && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n                        --libdir=\"$TOMCAT_NATIVE_LIBDIR\" \\\n                        --prefix=\"$CATALINA_HOME\" \\\n                        --with-apr=\"$(which apr-1-config)\" \\\n                        --with-java-home=\"/usr/lib/jvm/default-jvm\" \\\n                        --with-ssl=yes \\\n                && make -j$(getconf _NPROCESSORS_ONLN) \\\n                && make install) \\\n\n        && runDeps=\"$( \\\n                scanelf --needed --nobanner --recursive \"$TOMCAT_NATIVE_LIBDIR\" \\\n                        | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n                        | sort -u \\\n                        | xargs -r apk info --installed \\\n                        | sort -u \\\n        )\" \\\n        && apk add --no-cache --virtual .tomcat-native-rundeps $runDeps \\\n        && apk del .fetch-deps .native-build-deps \\\n        && rm -rf \"$nativeBuildDir\" \\\n        && rm bin/tomcat-native.tar.gz\n\n# verify Tomcat Native is working properly\nRUN set -e \\\n        && nativeLines=\"$(catalina.sh configtest 2>&1)\" \\\n        && nativeLines=\"$(echo \"$nativeLines\" | grep 'Apache Tomcat Native')\" \\\n        && nativeLines=\"$(echo \"$nativeLines\" | sort -u)\" \\\n        && if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then \\\n                echo >&2 \"$nativeLines\"; \\\n                exit 1; \\\n        fi\n\nEXPOSE 8080\nCMD [\"catalina.sh\", \"run\"]\n\n\n\n"
}