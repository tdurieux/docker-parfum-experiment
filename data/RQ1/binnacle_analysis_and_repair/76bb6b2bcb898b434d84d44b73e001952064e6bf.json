{
  "startTime": 1674240771010,
  "endTime": 1674240771199,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nARG UID\nARG TZ=\"Australia/Canberra\"\n\nRUN echo $UID\nRUN [ -n \"$UID\" ] || { echo \"You must define UID in .env\" 1>&2; exit 1; }\n\nENV PROJECT_HOME /home/patchwork/patchwork\n\nENV db_user root\nENV db_pass password\n\nENV DJANGO_SETTINGS_MODULE patchwork.settings.dev\nENV DEBIAN_FRONTEND noninteractive\nENV PYTHONUNBUFFERED 1\n\n\n# System\n# trusty and findutils is for python3.4; xenial is for python3.5\n# TODO(stephenfin): Are curl, unzip required?\nCOPY tools/docker/*.list /etc/apt/sources.list.d/\n\nRUN cd /etc/apt/sources.list.d; \\\n    echo $(uname -m) > /tmp/arch; \\\n    if [ $(cat /tmp/arch) != 'x86_64' ] && grep -q -v \"i.86\" /tmp/arch; then \\\n        mv trusty-ports.list trusty.list; \\\n        mv xenial-ports.list xenial.list; \\\n    else \\\n        rm *-ports.list; \\\n    fi\n\nRUN apt-get update -qq && \\\n    apt-get install -y --no-install-recommends --allow-downgrades \\\n    python-dev python-pip python-setuptools python-wheel \\\n    python3.5-dev python3-pip python3-setuptools python3-wheel \\\n    python3.4-dev findutils=4.4.2-7 python3.6-dev \\\n    libmysqlclient-dev mysql-client curl unzip build-essential \\\n    git postgresql-client tzdata libpq-dev && rm -rf /var/lib/apt/lists/*;\n\n# User\nRUN useradd --uid=$UID --create-home patchwork\n\n# Timezone\nRUN rm /etc/localtime; ln -s /usr/share/zoneinfo/$TZ /etc/localtime\n\n# Python requirements.\n# If you update requirements, you should rebuild the container.\n# entrypoint.sh will prompt you to do this.\n# we install both Python 2 and Python 3 versions so you can use either\nCOPY requirements-*.txt /tmp/\nRUN pip3 install --no-cache-dir virtualenv tox && \\\n    pip3 install --no-cache-dir -r /tmp/requirements-dev.txt\nRUN pip2 install --no-cache-dir virtualenv tox && \\\n    pip2 install --no-cache-dir -r /tmp/requirements-dev.txt\n# we deliberately leave the requirements files in tmp so we can\n# ping the user in entrypoint.sh if the change them!\n\nCOPY tools/docker/entrypoint.sh /usr/local/bin/entrypoint.sh\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\nUSER patchwork\nWORKDIR /home/patchwork/patchwork\n"
}