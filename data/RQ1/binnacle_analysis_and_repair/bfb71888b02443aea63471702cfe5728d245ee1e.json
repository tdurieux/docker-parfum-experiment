{
  "startTime": 1674235887653,
  "endTime": 1674235887965,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.1-cudnn7-devel-ubuntu16.04\n\nLABEL maintainer=\"sam@myrtle.ai\"\n\n#- Upgrade system and install dependencies -------------------------------------\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install -y --no-install-recommends \\\n                    build-essential \\\n                    cmake \\\n                    git \\\n                    libboost-program-options-dev \\\n                    libboost-system-dev \\\n                    libboost-test-dev \\\n                    libboost-thread-dev \\\n                    libbz2-dev \\\n                    libeigen3-dev \\\n                    liblzma-dev \\\n                    libsndfile1 \\\n                    python3 \\\n                    python3-dev \\\n                    python3-pip \\\n                    python3-setuptools \\\n                    python3-wheel \\\n                    sudo \\\n                    vim && \\\n    rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\n\n#- Enable passwordless sudo for users under the \"sudo\" group -------------------\nRUN sed -i.bkp -e \\\n      's/%sudo\\s\\+ALL=(ALL\\(:ALL\\)\\?)\\s\\+ALL/%sudo ALL=NOPASSWD:ALL/g' \\\n      /etc/sudoers\n\n#- Create data group for NFS mount --------------------------------------------\nRUN groupadd --system data --gid 5555\n\n#- Create and switch to a non-root user ----------------------------------------\nRUN groupadd -r ubuntu && \\\n    useradd --no-log-init \\\n            --create-home \\\n            --gid ubuntu \\\n            ubuntu && \\\n    usermod -aG sudo ubuntu\nUSER ubuntu\nWORKDIR /home/ubuntu\n\n#- Install Python packages -----------------------------------------------------\nARG WHEELDIR=/home/ubuntu/.cache/pip/wheels\nCOPY --chown=ubuntu:ubuntu deps deps\nCOPY --chown=ubuntu:ubuntu requirements.txt requirements.txt\nRUN pip3 install --no-cache-dir --find-links ${WHEELDIR} \\\n                 -r requirements.txt && \\\n    rm requirements.txt && \\\n    rm -r ${WHEELDIR} && \\\n    rm -r /home/ubuntu/.cache/pip\n\n# warp-ctc\nRUN cd /home/ubuntu/deps/warp-ctc/pytorch_binding && \\\n    git reset --hard 6f3f1cb7871f682e118c49788f5e54468b59c953 && \\\n    python3 setup.py bdist_wheel && \\\n    pip3 install --no-cache-dir dist/warpctc-0.0.0-cp35-cp35m-linux_x86_64.whl\n\n# ctcdecode bindings\nRUN cd /home/ubuntu/deps/ctcdecode && \\\n    git reset --hard 6f4326b43b8dc49fd2e328ce231d1ba37f8e373f && \\\n    pip3 install --no-cache-dir .\n\n# kenlm for binaries for building LMs and Python lib for easy analysis\nRUN cd /home/ubuntu/deps/kenlm && \\\n    git reset --hard 328cc2995202e84d29e3773203d29cdd6cc07132 && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make -j 4 && \\\n    sudo mv bin/lmplz bin/build_binary /usr/bin/ && \\\n    pip3 install --no-cache-dir /home/ubuntu/deps/kenlm\n\nRUN sudo rm -rf deps\n\n#- Install deepspeech package --------------------------------------------------\nCOPY --chown=ubuntu:ubuntu . deepspeech\nRUN pip3 install --no-cache-dir deepspeech/\nRUN rm -rf deepspeech\n\n#- Setup Jupyter ---------------------------------------------------------------\nEXPOSE 9999\nENV PATH /home/ubuntu/.local/bin:$PATH\nENV SHELL /bin/bash\nCMD [\"jupyter\", \"lab\", \\\n     \"--ip=0.0.0.0\",   \\\n     \"--port=9999\"]\n"
}