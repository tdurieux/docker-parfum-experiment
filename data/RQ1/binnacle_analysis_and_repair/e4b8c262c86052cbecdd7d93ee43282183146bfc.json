{
  "startTime": 1674248974565,
  "endTime": 1674248975144,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 43,
        "columnEnd": 54
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 45,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 28,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 30,
        "columnEnd": 41
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 6,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 6,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedDockerfile": "#\n# Cartodb container\n#\nFROM ubuntu:14.04\nMAINTAINER Adrien Fleury <fleu42@gmail.com>\n\n# Configuring locales\nRUN dpkg-reconfigure locales && \\\n      locale-gen en_US.UTF-8 && \\\n      update-locale LANG=en_US.UTF-8\nENV LANG en_US.UTF-8 \nENV LANGUAGE en_US:en \nENV LC_ALL en_US.UTF-8\n\n# Preparing apt\nRUN apt-get update && \\\n      useradd -m -d /home/cartodb -s /bin/bash cartodb && \\\n      apt-get install --no-install-recommends -y -q software-properties-common && \\\n      add-apt-repository -y ppa:chris-lea/node.js && \\\n      apt-get update && rm -rf /var/lib/apt/lists/*;\n\n# Installing stuff\nRUN apt-get install --no-install-recommends -y -q build-essential checkinstall unp zip libgeos-c1 \\\n      libgeos-dev libjson0 python-simplejson libjson0-dev proj-bin \\\n      proj-data libproj-dev postgresql-9.3 postgresql-client-9.3 \\\n      postgresql-contrib-9.3 postgresql-server-dev-9.3 \\\n      postgresql-plpython-9.3 gdal-bin libgdal1-dev nodejs \\\n      redis-server python2.7-dev build-essential python-setuptools \\\n      varnish imagemagick git postgresql-9.3-postgis-2.1 libmapnik-dev \\\n      python-mapnik mapnik-utils postgresql-9.3-postgis-2.1-scripts postgis \\\n      python-argparse python-gdal python-chardet openssl libreadline6 curl \\\n      git-core zlib1g zlib1g-dev libssl-dev libyaml-dev \\\n      libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf \\\n      libc6-dev ncurses-dev automake libtool bison subversion \\\n      pkg-config libpq5 libpq-dev libcurl4-gnutls-dev libffi-dev \\\n      libgdbm-dev gnupg libreadline6-dev && rm -rf /var/lib/apt/lists/*;\n\n# Setting PostgreSQL\nRUN sed -i 's/\\(peer\\|md5\\)/trust/' /etc/postgresql/9.3/main/pg_hba.conf\n\n# Install schema_triggers\nRUN git clone https://github.com/CartoDB/pg_schema_triggers.git && \\\n      cd pg_schema_triggers && \\\n      make all install && \\\n      sed -i \\\n      \"/#shared_preload/a shared_preload_libraries = 'schema_triggers.so'\" \\\n      /etc/postgresql/9.3/main/postgresql.conf\nADD ./template_postgis.sh /tmp/template_postgis.sh\nRUN service postgresql start && /bin/su postgres -c \\\n      /tmp/template_postgis.sh && service postgresql stop\n\n# Install cartodb extension\nRUN git clone --branch 0.5.1 https://github.com/CartoDB/cartodb-postgresql && \\\n      cd cartodb-postgresql && \\\n      PGUSER=postgres make install\nADD ./cartodb_pgsql.sh /tmp/cartodb_pgsql.sh\nRUN service postgresql start && /bin/su postgres -c \\\n      /tmp/cartodb_pgsql.sh && service postgresql stop\n\n# Install CartoDB API\nRUN git clone git://github.com/CartoDB/CartoDB-SQL-API.git && \\\n      cd CartoDB-SQL-API && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && npm install && npm cache clean --force;\nADD ./config/CartoDB-dev.js \\\n      /CartoDB-SQL-API/config/environments/development.js\n\n# Install Windshaft\nRUN git clone git://github.com/CartoDB/Windshaft-cartodb.git && \\\n      cd Windshaft-cartodb && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && npm install && mkdir logs && npm cache clean --force;\nADD ./config/WS-dev.js \\\n      /Windshaft-cartodb/config/environments/development.js\n\n# Install rvm\nRUN gpg --batch --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3\nRUN curl -f -L https://get.rvm.io | bash -s stable --ruby\nRUN echo 'source /usr/local/rvm/scripts/rvm' >> /etc/bash.bashrc\nRUN /bin/bash -l -c rvm requirements\nENV PATH /usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nRUN /bin/bash -l -c 'rvm install 1.9.3-p547 --patch railsexpress'\nRUN /bin/bash -l -c 'rvm use 1.9.3-p547 --default'\nRUN /bin/bash -l -c 'gem install bundle archive-tar-minitar'\n\n# Install bundler\nRUN /bin/bash -l -c 'gem install bundler --no-doc --no-ri'\n\n# Install CartoDB (with the bug correction on bundle install)\nRUN git clone git://github.com/CartoDB/cartodb.git && \\\n      cd cartodb && /bin/bash -l -c 'bundle install' || \\\n      /bin/bash -l -c \"cd $(/bin/bash -l -c 'gem contents \\\n            debugger-ruby_core_source' | grep CHANGELOG | sed -e \\\n            's,CHANGELOG.md,,') && /bin/bash -l -c 'rake add_source \\\n            VERSION=$(/bin/bash -l -c 'ruby --version' | awk \\\n            '{print $2}' | sed -e 's,p55,-p55,' )' && cd /cartodb && \\\n            /bin/bash -l -c 'bundle install'\"\n\n# Copy confs\nADD ./config/app_config.yml /cartodb/config/app_config.yml\nADD ./config/database.yml /cartodb/config/database.yml\nADD ./create_dev_user /cartodb/script/create_dev_user\nENV PATH /usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nRUN service postgresql start && service redis-server start && \\\n\tbash -l -c \"cd /cartodb && bash script/create_dev_user\" && \\\n\tservice postgresql stop && service redis-server stop\n\nEXPOSE 3000\n\nADD ./startup.sh /opt/startup.sh\n\nCMD [\"/bin/bash\", \"/opt/startup.sh\"]\n\n"
}