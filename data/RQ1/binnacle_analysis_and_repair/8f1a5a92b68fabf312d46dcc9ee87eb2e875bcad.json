{
  "startTime": 1674249844259,
  "endTime": 1674249844665,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 11,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 56,
        "columnStart": 22,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedDockerfile": "# Ubuntu 18.04 Python3 with CUDA 10 and the following:\n#  - Installs tf-nightly-gpu-2.0-preview\n#  - Installs requirements.txt for tensorflow/models\n#  - Install bazel for building TF from source\n\nFROM nvidia/cuda:10.0-base-ubuntu18.04 as base\nARG tensorflow_pip_spec=\"tf-nightly-gpu-2.0-preview\"\n\n# Pick up some TF dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cuda-command-line-tools-10-0 \\\n        cuda-cublas-dev-10-0 \\\n        cuda-cufft-dev-10-0 \\\n        cuda-curand-dev-10-0 \\\n        cuda-cusolver-dev-10-0 \\\n        cuda-cusparse-dev-10-0 \\\n        libcudnn7=7.4.1.5-1+cuda10.0 \\\n        libcudnn7-dev=7.4.1.5-1+cuda10.0 \\\n        libfreetype6-dev \\\n        libhdf5-serial-dev \\\n        libzmq3-dev \\\n        libpng-dev \\\n        pkg-config \\\n        software-properties-common \\\n        unzip \\\n        lsb-core \\\n        curl \\\n        && \\\n  find /usr/local/cuda-10.0/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete && \\\n    rm /usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && \\\n        apt-get install -y --no-install-recommends nvinfer-runtime-trt-repo-ubuntu1804-5.0.2-ga-cuda10.0 \\\n        && apt-get update \\\n        && apt-get install -y --no-install-recommends libnvinfer5=5.0.2-1+cuda10.0 \\\n        && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# For CUDA profiling, TensorFlow requires CUPTI.\nENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\n\n# See http://bugs.python.org/issue19846\nENV LANG C.UTF-8\n\n# Add google-cloud-sdk to the source list\nRUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-$(lsb_release -c -s) main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list\nRUN curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\n\n# Install extras needed by most models\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      git \\\n      build-essential \\\n      ca-certificates \\\n      wget \\\n      htop \\\n      zip \\\n      google-cloud-sdk && rm -rf /var/lib/apt/lists/*;\n\n# Install / update Python and Python3\nRUN apt-get install -y --no-install-recommends \\\n      python3 \\\n      python3-dev \\\n      python3-pip \\\n      python3-setuptools \\\n      python3-venv && rm -rf /var/lib/apt/lists/*;\n\n\n# Setup Python3 environment\nRUN pip3 install --no-cache-dir --upgrade pip==9.0.1\n# setuptools upgraded to fix install requirements from model garden.\nRUN pip3 install --no-cache-dir --upgrade setuptools google-api-python-client pyyaml google-cloud google-cloud-bigquery\nRUN pip3 install --no-cache-dir wheel absl-py\nRUN pip3 install --no-cache-dir --upgrade --force-reinstall ${tensorflow_pip_spec}\nRUN pip3 install --no-cache-dir tfds-nightly\nRUN pip3 install --no-cache-dir -U scikit-learn\n\nRUN curl -f https://raw.githubusercontent.com/tensorflow/models/master/official/requirements.txt > /tmp/requirements.txt\nRUN pip3 install --no-cache-dir -r /tmp/requirements.txt\n\nRUN pip3 freeze\n\n# Install bazel\nARG BAZEL_VERSION=0.24.1\nRUN mkdir /bazel && \\\n    wget -O /bazel/installer.sh \"https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh\" && \\\n    wget -O /bazel/LICENSE.txt \"https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE\" && \\\n    chmod +x /bazel/installer.sh && \\\n    /bazel/installer.sh && \\\n    rm -f /bazel/installer.sh\n\n# Some build packages need to find `python` even if its just a link to python3.\nRUN ln -s $(which python) /usr/local/bin/python\n\nRUN git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src\n"
}