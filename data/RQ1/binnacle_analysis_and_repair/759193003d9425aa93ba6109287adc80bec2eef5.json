{
  "startTime": 1674234058222,
  "endTime": 1674234058311,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# A convenient Docker image for benchmarking. It has a bunch of files in the\n# \"/test\" directory that can be used by tests.\nFROM debian:jessie\nMAINTAINER Chris Kuehl <ckuehl@ocf.berkeley.edu>\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        curl \\\n        gfortran \\\n        libblas-dev \\\n        liblapack-dev \\\n        python \\\n        python-dev \\\n        python-pip \\\n        virtualenv \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -L -o /tmp/dumb-init.deb \\\n        https://github.com/Yelp/dumb-init/releases/download/v1.1.1/dumb-init_1.1.1_amd64.deb \\\n    && dpkg -i /tmp/dumb-init.deb \\\n    && rm /tmp/dumb-init.deb\n\nWORKDIR /test\nRUN mkdir -p /test/big-files /test/small-files\n\n# Make a bunch of big files.\nRUN for i in $(seq 0 9); do \\\n        for size in 1M 8M 32M 128M; do \\\n            dd if=/dev/urandom of=/test/big-files/${size}-${i}.bin bs=${size} count=1 2>/dev/null; \\\n        done; \\\n    done\n\n# And a lot more small files.\nRUN for i in $(seq 0 10000); do \\\n        dd if=/dev/urandom of=/test/small-files/$i bs=512 count=1 2>/dev/null; \\\n    done\n\n# And a binary tree of files.\nRUN bash -c 'make_tree() { \\\n    local cur=\"$1\"; local remaining_depth=\"$2\"; \\\n    mkdir \"$cur\"; \\\n    if [ \"$remaining_depth\" -gt 0 ]; then \\\n        make_tree \"${cur}/0\" \"$((remaining_depth - 1))\"; \\\n        make_tree \"${cur}/1\" \"$((remaining_depth - 1))\"; \\\n    else \\\n        echo \"oh, hi!\" > \"${cur}/oh-hi\"; \\\n    fi; \\\n}; \\\nmake_tree /test/tree-of-files 14 \\\n'\n\nENTRYPOINT [\"dumb-init\", \"-c\", \"--\"]\n"
}