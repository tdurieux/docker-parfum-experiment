{
  "startTime": 1674245203474,
  "endTime": 1674245203864,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# clones a git repo,\n# do whatever you want with it after cloning\n#\n# VERSION               1.0.1\n#\nFROM picoded/ubuntu-base\n\n#\n# Get the required zip /wget stuff\n#\nRUN apt-get update && apt-get install --no-install-recommends -y zip wget && apt-get clean; rm -rf /var/lib/apt/lists/*;\n\n#\n# zip file to download from\n# Note, You can add user/pass by doing :\n# \"https://user:pass@github.com/picoded/dockerfiles/archive/master.zip\"\n#\nENV ZIP_URL \"https://github.com/picoded/dockerfiles/archive/master.zip\"\n\n# Branch or commit hash to checkout from\nENV ZIP_FILE \"master.zip\"\n\n# This is the run script, called before git clone/pull\nENV ZIP_PRESCRIPT \"\"\n\n# This is the run script, called after git clone/pull\nENV ZIP_POSTSCRIPT \"\"\n\n#\n# Prepares the git cloner script\n#\nRUN echo '#!/bin/bash'                                                               > /entrypoint/zip-cloner.sh && \\\n\techo 'echo \"###\"'                                                                 >> /entrypoint/zip-cloner.sh && \\\n\techo 'echo \"### Start of picoded/zip-cloner : entrypoint/zip-cloner.sh\"'          >> /entrypoint/zip-cloner.sh && \\\n\techo 'echo \"###\"'                                                                 >> /entrypoint/zip-cloner.sh && \\\n\techo ''                                                                           >> /entrypoint/zip-cloner.sh && \\\n\techo '# Enters the /workspace'                                                    >> /entrypoint/zip-cloner.sh && \\\n\techo 'cd /workspace;'                                                             >> /entrypoint/zip-cloner.sh && \\\n\techo ''                                                                           >> /entrypoint/zip-cloner.sh && \\\n\techo 'if [ -n \"$ZIP_PRESCRIPT\" ]; then '                                          >> /entrypoint/zip-cloner.sh && \\\n\techo '\techo \"###\"'                                                              >> /entrypoint/zip-cloner.sh && \\\n\techo '\techo \"### prescript of picoded/zip-cloner\"'                              >> /entrypoint/zip-cloner.sh && \\\n\techo '\techo \"###\"'                                                              >> /entrypoint/zip-cloner.sh && \\\n\techo '   eval \"$ZIP_PRESCRIPT\";'                                                  >> /entrypoint/zip-cloner.sh && \\\n\techo 'fi '                                                                        >> /entrypoint/zip-cloner.sh && \\\n\techo ''                                                                           >> /entrypoint/zip-cloner.sh && \\\n\techo '# Enters the /workspace'                                                    >> /entrypoint/zip-cloner.sh && \\\n\techo 'cd /workspace;'                                                             >> /entrypoint/zip-cloner.sh && \\\n\techo ''                                                                           >> /entrypoint/zip-cloner.sh && \\\n\techo '# Ensures the old file is removed'                                          >> /entrypoint/zip-cloner.sh && \\\n\techo 'rm -f \"/tmp/$ZIP_FILE\";'                                                    >> /entrypoint/zip-cloner.sh && \\\n\techo ''                                                                           >> /entrypoint/zip-cloner.sh && \\\n\techo '# Redownload the file'                                                      >> /entrypoint/zip-cloner.sh && \\\n\techo 'wget -O \"/tmp/$ZIP_FILE\" \"$ZIP_URL\";'                                       >> /entrypoint/zip-cloner.sh && \\\n\techo ''                                                                           >> /entrypoint/zip-cloner.sh && \\\n\techo 'echo \"###\"'                                                                 >> /entrypoint/zip-cloner.sh && \\\n\techo 'echo \"### Unzipping of the file package\"'                                   >> /entrypoint/zip-cloner.sh && \\\n\techo 'echo \"###\"'                                                                 >> /entrypoint/zip-cloner.sh && \\\n\techo ''                                                                           >> /entrypoint/zip-cloner.sh && \\\n\techo '# Unzip the file contents'                                                  >> /entrypoint/zip-cloner.sh && \\\n\techo 'unzip -o \"/tmp/$ZIP_FILE\" -d \"/workspace/$ZIP_FOLDER/\";'                    >> /entrypoint/zip-cloner.sh && \\\n\techo ''                                                                           >> /entrypoint/zip-cloner.sh && \\\n\techo 'if [ -n \"$ZIP_POSTSCRIPT\" ]; then '                                         >> /entrypoint/zip-cloner.sh && \\\n\techo '\techo \"###\"'                                                              >> /entrypoint/zip-cloner.sh && \\\n\techo '\techo \"### postscript of picoded/zip-cloner\"'                             >> /entrypoint/zip-cloner.sh && \\\n\techo '\techo \"###\"'                                                              >> /entrypoint/zip-cloner.sh && \\\n\techo '   cd \"/workspace/$ZIP_FOLDER/\"'                                            >> /entrypoint/zip-cloner.sh && \\\n\techo '   eval \"$ZIP_POSTSCRIPT\";'                                                 >> /entrypoint/zip-cloner.sh && \\\n\techo 'fi '                                                                        >> /entrypoint/zip-cloner.sh && \\\n\techo ''                                                                           >> /entrypoint/zip-cloner.sh && \\\n\techo 'echo \"###\"'                                                                 >> /entrypoint/zip-cloner.sh && \\\n\techo 'echo \"### Finished picoded/zip-cloner : entrypoint/zip-cloner.sh\"'          >> /entrypoint/zip-cloner.sh && \\\n\techo 'echo \"###\"'                                                                 >> /entrypoint/zip-cloner.sh && \\\n\techo ''                                                                           >> /entrypoint/zip-cloner.sh && \\\n\techo 'cd \"/workspace/$ZIP_FOLDER/\"'                                               >> /entrypoint/zip-cloner.sh && \\\n\techo 'exec \"$@\"'                                                                  >> /entrypoint/zip-cloner.sh && \\\n\tchmod +x /entrypoint/zip-cloner.sh;\n\n#\n# Useful for build debugging\n#\n# RUN cat /entrypoint/zip-cloner.sh;\n\n#\n# Runs with entry point and command\n#\nENTRYPOINT [\"/entrypoint/primer.sh\", \"/entrypoint/zip-cloner.sh\"]\nCMD echo \"hello world : run your actual command here\"\n"
}