{
  "startTime": 1674250810042,
  "endTime": 1674250810309,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 2,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Pull base image.\nFROM ubuntu\n\n# Install Supervisor.\nRUN \\\n  mkdir /var/log/celery && \\\n  mkdir /var/log/redis && \\\n  mkdir /home/ubuntu && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y supervisor python-pip wget vim git && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  sed -i 's/^\\(\\[supervisord\\]\\)$/\\1\\nnodaemon=true/' /etc/supervisor/supervisord.conf\n\n# needs to be set else Celery gives an error (because docker runs commands inside container as root)\n# https://github.com/pm990320/docker-flask-celery/blob/master/Dockerfile\nENV C_FORCE_ROOT=1\n\n# expose port 80 of the container (HTTP port, change to 443 for HTTPS)\nEXPOSE 80\n\n# Create virtualenv.\nRUN \\\n  pip install --no-cache-dir --upgrade pip && \\\n  pip install --no-cache-dir --upgrade virtualenv && \\\n  virtualenv -p /usr/bin/python2.7 /home/ubuntu/.virtualenvs/celery_env\n\n# Setup for ssh onto github, clone and define working directory\nADD https://api.github.com/repos/channeng/celery-scheduler/git/refs/heads/master repo_version.json\nRUN git clone https://github.com/channeng/celery-scheduler.git /home/ubuntu/celery-scheduler\n\nWORKDIR /home/ubuntu/celery-scheduler\n\n# Install app requirements\nRUN \\\n  . /home/ubuntu/.virtualenvs/celery_env/bin/activate && \\\n  pip install --no-cache-dir -r requirements.txt && \\\n  . scripts/install_redis.sh\n\n# Copy supervisor configs\nRUN \\\n  cp configs/supervisord.conf /etc/supervisor/supervisord.conf && \\\n  cp configs/conf.d/*.conf /etc/supervisor/conf.d/\n"
}