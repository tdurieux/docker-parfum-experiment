{
  "startTime": 1674250598225,
  "endTime": 1674250598434,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 117,
        "lineEnd": 125,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 117,
        "lineEnd": 125,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 117,
        "lineEnd": 125,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -*- coding: utf-8 -*-\n#\n#    LinOTP - the open source solution for two factor authentication\n#    Copyright (C) 2016 - 2019 KeyIdentity GmbH\n#\n#    This file is part of LinOTP server.\n#\n#    This program is free software: you can redistribute it and/or\n#    modify it under the terms of the GNU Affero General Public\n#    License, version 3, as published by the Free Software Foundation.\n#\n#    This program is distributed in the hope that it will be useful,\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#    GNU Affero General Public License for more details.\n#\n#    You should have received a copy of the\n#               GNU Affero General Public License\n#    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n#\n#\n#    E-mail: linotp@keyidentity.com\n#    Contact: www.linotp.org\n#    Support: www.keyidentity.com\n#\n#\n# LinOTP Docker build script\n\nFROM debian:jessie\n\nARG DEBIAN_MIRROR=deb.debian.org\nARG LINOTP_MIRROR=www.linotp.org\n\n# The following environment variables can be set to\n# configure the runtime behaviour of the container.\n# Most of these should be self explanitory.\n#\n# To disable HTTP authentication for the manage UI,\n# set LINOTP_APACHE_AUTH=false.\n#\n# To use a MySQL database:\n#  LINOTP_DB_TYPE=mysql\n# and also substitute suitable values:\n#  LINOTP_DB_HOST=hostname\n#  LINOTP_DB_PORT=3306\n#  LINOTP_DB_USER=user\n#  LINOTP_DB_PASSWORD=password\n#  LINOTP_DB_NAME=database-name\n#\n# Unencrypted healthchecks can be performed by\n# checking http://HOSTNAME:81/validate/ok\n#\n# To send LinOTP logs directly to\n# Logstash, set LOGSTASH_HOST and\n# LOGSTASH_PORT to point to your\n# Logstash collector. You can optionally\n# add additional tags with the\n# LOGSTASH_TAGS setting. This is a Python\n# list. For example:\n#   LOGSTASH_HOST=logstash1\n#   LOGSTASH_PORT=5000\n#   LOGSTASH_TAGS=('instance1', 'server1')\n#\n# To change the location of the database\n# encryption key file, set\n#   SECRET_FILE_LOCATION=/path/to/encKey\n\nENV TZ=\"Europe/Berlin\" \\\n\tLINOTP_USER=linotp \\\n\tLINOTP_DB_TYPE=sqlite \\\n\tLINOTP_DB_NAME=//tmp/linotp.db \\\n\tLINOTP_DB_HOST=dbhost \\\n\tLINOTP_DB_PORT=3306 \\\n\tLINOTP_DB_USER=dbuser \\\n\tLINOTP_DB_PASSWORD=dbpass \\\n\tLINOTP_ADMIN_USER=admin \\\n\tLINOTP_ADMIN_PASSWORD=admin \\\n\tLINOTP_APACHE_AUTH=true \\\n\tLINOTP_APACHE_SSL=true \\\n\tLINOTP_APACHE_HSTS=true \\\n\tLINOTP_LOGLEVEL=INFO \\\n\tLINOTP_CONSOLE_LOGLEVEL=DEBUG \\\n\tSQLALCHEMY_LOGLEVEL=ERROR \\\n\tAPACHE_LOGLEVEL=info \\\n\tLOGSTASH_HOST= \\\n\tLOGSTASH_PORT= \\\n\tLOGSTASH_TAGS=() \\\n\tSECRET_FILE_LOCATION=\n\n# Internal environment variables used by the docker images\nENV LINOTP_INI_TEMPLATE=/etc/linotp/linotp-docker.ini.tmpl \\\n\tLINOTP_HOME=/opt/linotp \\\n\tDEBIAN_FRONTEND=noninteractive\n\nRUN echo 'APT::Install-Recommends \"0\"; \\n\\\n\t\t\tAPT::Get::Assume-Yes \"true\"; \\n\\\n\t\t\tAPT::Install-Suggests \"0\";' \\\n\t\t> /etc/apt/apt.conf.d/01buildconfig\n\nRUN sed \"s#http://deb\\.debian\\.org/#http://${DEBIAN_MIRROR}/#\" \\\n    < /etc/apt/sources.list > /etc/apt/sources.list.new && mv -f /etc/apt/sources.list.new /etc/apt/sources.list\n\n# Add LinOTP packaging key to keyring in order to install\n# dependencies\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 \\\n\t\t--recv-keys 913DFF12F86258E5\n\n# Install some dependencies which will be cached. This does not\n# need to be an exhaustive list because apt will install any\n# missing packages.\nRUN \\\n    echo \"deb http://${LINOTP_MIRROR}/apt/debian jessie linotp\" > /etc/apt/sources.list.d/linotp.list \\\n    && apt-get update \\\n    && extraPackages=' \\\n\tmake \\\n\tpython-psycopg2 \\\n    ' \\\n    && apt-get install -y --no-install-recommends \\\n\t\t$extraPackages \\\n\t\tadduser debconf openssl pwgen python-beaker python-configobj \\\n\t\tpython-decorator python-docutils python-formencode python-httplib2 \\\n\t\tpython-ldap python-m2crypto python-mako python-mysqldb python-netaddr \\\n\t\tpython-paste python-pastedeploy python-pastescript python-pygments python-pylons \\\n\t\tpython-pyrad python-qrcode python-routes python-simplejson \\\n\t\tpython-sqlalchemy python-tempita python-weberror python-webhelpers python-webob \\\n\t\tapache2 libapache2-mod-wsgi python-pycryptodomex python-pysodium python-requests && rm -rf /var/lib/apt/lists/*;\n\n# Install linotp packages from local files.\nCOPY apt /opt/linotp/apt\n\nRUN echo \"linotp linotp/apache/activate boolean true\" > /opt/linotp/apt/debconf-selections \\\n\t&& echo \"linotp linotp/apache/ssl_create boolean true\" >> /opt/linotp/apt/debconf-selections \\\n\t&& debconf-set-selections /opt/linotp/apt/debconf-selections \\\n\t&& echo \"deb [trusted=yes] file:/opt/linotp/apt ./\" > /etc/apt/sources.list.d/linotp-local.list \\\n\t&& (echo \"Package: *\"; echo \"Pin: origin \\\"\\\"\"; echo \"Pin-Priority: 900\") > /etc/apt/preferences.d/linotp \\\n\t&& apt-get update \\\n\t&& apt-get install -y --no-install-recommends linotp python-logstash \\\n\t&& rm /etc/apt/sources.list.d/linotp-local.list \\\n\t&& rm -r /opt/linotp/apt /etc/apache2/sites-enabled/000-default.conf \\\n\t&& rm /etc/linotp2/linotp.ini /etc/linotp2/encKey /etc/linotp2/*.pem && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR $LINOTP_HOME\n\n# Get dockerfy and configuration template files from build context\nCOPY *.tmpl /etc/linotp2/\nCOPY dockerfy /usr/local/bin/\nCOPY linotp-create-htdigest /usr/local/bin/\nRUN chmod 755 /usr/local/bin/linotp-create-htdigest\n\nENTRYPOINT [ \"/usr/local/bin/dockerfy\", \\\n     \"--template\", \"/etc/linotp2/linotp-docker.ini.tmpl:/etc/linotp2/linotp.ini\", \\\n     \"--template\", \"/etc/linotp2/apache-docker.conf.tmpl:/etc/apache2/sites-enabled/linotp2.conf\", \\\n     \"--run\", \"/var/lib/dpkg/info/linotp.postinst\", \"configure\", \"--\", \\\n     \"--run\", \"/bin/grep\", \"url\", \"/etc/linotp2/linotp.ini\", \"--\", \\\n     \"--run\", \"mkdir\", \"-p\", \"/etc/ssl/private\", \"/etc/ssl/certs\", \"--\", \\\n     \"--run\", \"/bin/sh\", \"-c\", \\\n        \"openssl req -new -x509 -newkey rsa:2048 -subj /CN=`hostname`.`dnsdomainname` -days 768 -out /etc/ssl/certs/linotpserver.pem  -keyout /etc/ssl/private/linotpserver.key -nodes\", \\\n        \"--\", \\\n     \"--run\", \"/usr/local/bin/linotp-create-htdigest\", \"{{ .Env.LINOTP_ADMIN_USER }}\", \"{{ .Env.LINOTP_ADMIN_PASSWORD }}\", \"--\", \\\n     \"--run\", \"/bin/sh\", \"-c\", \\\n        \"if [ {{ .Env.LINOTP_DB_TYPE }} != sqlite ]; then /usr/local/bin/dockerfy --wait tcp://{{ .Env.LINOTP_DB_HOST }}:{{ .Env.LINOTP_DB_PORT }} --timeout 30s; fi\", \\\n        \"--\", \\\n     \"--run\", \"/bin/su\", \"linotp\", \"-s\", \"/bin/sh\", \"-c\", \"paster setup-app /etc/linotp2/linotp.ini\", \"--\" \\\n     ]\n\nCMD [ \\\n\t\"/usr/sbin/apache2ctl\", \"-DFOREGROUND\" \\\n\t]\n\nCOPY ./se_mypasswd /etc/se_mypasswd\n\n# Listen on apache port (https 443 by default - see LINOTP_APACHE_SSL and APACHE_PORT)\nEXPOSE 80 81 443\n"
}