{
  "startTime": 1674251400109,
  "endTime": 1674251400292,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.3-apache\n\n# PHP extensions\nENV APCU_VERSION 5.1.11\nENV COMPOSER_ALLOW_SUPERUSER 1\nRUN buildDeps=\" \\\n        libicu-dev \\\n        zlib1g-dev \\\n        libzip-dev \\\n        bzip2 \\\n        wget\\\n    \" \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        $buildDeps \\\n        libicu57 \\\n        zlib1g \\\n        libzip4 \\\n        git \\\n        fontconfig \\\n        unzip \\\n    && wget https://raw.githubusercontent.com/n7consulting/phantomjs-build/master/phantomjs-2.1.1-linux-x86_64.tar.bz2 \\\n    && tar xvjf phantomjs-2.1.1-linux-x86_64.tar.bz2 \\\n    && mv phantomjs-2.1.1-linux-x86_64 /usr/local/bin \\\n    && ln -sf /usr/local/bin/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin \\\n    && phantomjs --version \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && docker-php-ext-install \\\n        intl \\\n        mbstring \\\n        pdo_mysql \\\n        zip \\\n    && apt-get purge -y --auto-remove $buildDeps \\\n    && pecl install \\\n        apcu-$APCU_VERSION \\\n    && docker-php-ext-enable --ini-name 05-opcache.ini \\\n        opcache \\\n    && docker-php-ext-enable --ini-name 20-apcu.ini \\\n        apcu && rm phantomjs-2.1.1-linux-x86_64.tar.bz2\n\n# Apache config\nRUN a2enmod rewrite headers\nCOPY docker/web/vhost.conf /etc/apache2/sites-available/000-default.conf\nCOPY docker/web/php.ini /usr/local/etc/php/php.ini\nCOPY docker/web/composer.sh /usr/bin/composer.sh\n\n# Install composer\nRUN /usr/bin/composer.sh \\\n    && mv composer.phar /usr/bin/composer \\\n    && composer global require \"hirak/prestissimo:^0.3\" --prefer-dist --no-progress --no-suggest --classmap-authoritative \\\n    && composer clear-cache\n\n# Add dependencies (before app to make a better cache usage)\nWORKDIR /app\nCOPY ./composer.json ./composer.lock /app/\nRUN mkdir -p var/cache var/logs var/sessions public/tmp \\\n    # Install dependencies\n    && composer install --prefer-dist --no-dev --no-autoloader --no-scripts --no-progress --no-suggest \\\n    && composer clear-cache\n\n# Add application\nCOPY ./ /app\nRUN composer dump-autoload --classmap-authoritative --no-dev \\\n    && composer run-script --no-dev post-install-cmd \\\n    # Fixes permissions issues in non-dev mode\n    && chown -R www-data . var/cache var/logs var/sessions public/tmp\n\nCMD [\"/app/docker/web/start.sh\"]\n"
}