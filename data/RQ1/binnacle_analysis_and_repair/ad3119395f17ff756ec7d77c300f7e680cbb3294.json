{
  "startTime": 1674234893733,
  "endTime": 1674234894028,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER Kent Knox <kent.knox@amd>\n\n# Parameters related to building hcc-lc\nARG rocm_install_path=/opt/rocm\nARG rocm_build_path=/usr/local/src/hcc-lc\nARG build_type=Release\n\n# Download and install an up to date version of cmake, because compiling\n# LLVM has implemented a requirement of cmake v3.4.4 or greater\nARG cmake_prefix=/opt/cmake\nARG cmake_ver_major=3.7\nARG cmake_ver_minor=3.7.2\n\n# Install Packages\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends curl && \\\n    curl -f -sL https://packages.amd.com/rocm/apt/debian/rocm.gpg.key | apt-key add - && \\\n    sh -c 'echo deb [arch=amd64] http://packages.amd.com/rocm/apt/debian/ trusty main > /etc/apt/sources.list.d/rocm.list' && \\\n    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n    sudo \\\n    file \\\n    build-essential \\\n    git \\\n    software-properties-common \\\n    wget \\\n    python \\\n    pkg-config \\\n    rpm \\\n    g++-multilib \\\n    gcc-multilib \\\n    findutils \\\n    libncurses5-dev \\\n    libelf-dev \\\n    libelf1 \\\n    libpci3 \\\n    libc++abi-dev \\\n    libc++-dev \\\n    hsa-rocr-dev && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# This installs the new cmake side-by-side with the old cmake using update-alternatives\nRUN cd /usr/local/src && \\\n    curl -f -L https://cmake.org/files/v${cmake_ver_major}/cmake-${cmake_ver_minor}.tar.gz -o cmake-${cmake_ver_minor}.tar.gz && \\\n    tar -xf cmake-${cmake_ver_minor}.tar.gz && \\\n    cd cmake-${cmake_ver_minor} && \\\n    ./bootstrap --prefix=${cmake_prefix} && \\\n    make -j $(nproc) && \\\n    make install && \\\n    cd .. && rm -rf cmake-${cmake_ver_minor} && \\\n    update-alternatives --install /usr/local/bin/cmake cmake ${cmake_prefix}/bin/cmake 80 --slave /usr/local/bin/ccmake ccmake ${cmake_prefix}/bin/ccmake --slave /usr/local/bin/cpack cpack ${cmake_prefix}/bin/cpack --slave /usr/local/bin/ctest ctest ${cmake_prefix}/bin/ctest --slave /usr/local/share/cmake-${cmake_ver_major} share-cmake-${cmake_ver_major} ${cmake_prefix}/share/cmake-${cmake_ver_major} && rm cmake-${cmake_ver_minor}.tar.gz# --slave /usr/local/bin/cmake-gui cmake-gui ${cmake_prefix}/bin/cmake-gui\n\n# Compiling hcc-lc requires a custom build tool\nRUN curl -f https://commondatastorage.googleapis.com/git-repo-downloads/repo > /usr/local/bin/repo && \\\n    chmod a+x /usr/local/bin/repo\n\nRUN mkdir -p ${rocm_build_path} && \\\n    cd ${rocm_build_path} && \\\n    repo init --depth=1 -u https://github.com/RadeonOpenCompute/HCC-Native-GCN-ISA.git -b clang_tot_upgrade && \\\n    repo sync && \\\n\n    # build amd-common LLVM/LLD/Clang\n    cd ${rocm_build_path}/llvm && \\\n    mkdir -p build && \\\n    cd build && \\\n    cmake \\\n      -DCMAKE_INSTALL_PREFIX=${rocm_install_path} \\\n      -DCMAKE_BUILD_TYPE=${build_type} \\\n      -DLLVM_TARGETS_TO_BUILD=\"AMDGPU;X86\" \\\n      -DLLVM_APPEND_VC_REV=ON .. && \\\n    make -j $(nproc) && \\\n\n    # build ROCm-Device-Libs with amd-common Clang\n    cd ${rocm_build_path}/ocml/ && \\\n    mkdir -p build && \\\n    cd build && \\\n    CC=${rocm_build_path}/llvm/build/bin/clang cmake \\\n      -DCMAKE_INSTALL_PREFIX=${rocm_install_path} \\\n      -DCMAKE_BUILD_TYPE=${build_type} \\\n      -DAMDHSACOD=/opt/rocm/bin/amdhsacod \\\n      -DLLVM_DIR=\"${rocm_build_path}/llvm/build\" \\\n      .. && \\\n    make -j $(nproc) package && \\\n    dpkg -i rocm-device-libs-*.deb\n"
}