{
  "startTime": 1674235704238,
  "endTime": 1674235704472,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 87,
        "lineEnd": 88,
        "columnStart": 2,
        "columnEnd": 96
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 89,
        "lineEnd": 90,
        "columnStart": 2,
        "columnEnd": 91
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 2,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\n\nMAINTAINER <maintainer@email.com>\n\n# Setting up Docker image to replicate \"hello-scaloid-sbt\" project\n# https://github.com/pocorall/hello-scaloid-sbt\n\n####################################\n# Install important packages\n####################################\nRUN echo \"Acquire::Retries 20;\" >> /etc/apt/apt.conf\nRUN apt-get update && apt-get -y --no-install-recommends install aptitude && rm -rf /var/lib/apt/lists/*;\nRUN aptitude update && aptitude -y --without-recommends install \\\n  wget curl mc sudo git usbutils unzip \\\n  openjdk-7-jdk lib32z1 lib32ncurses5 g++-multilib\n\n####################################\n# Install SBT\n####################################\nRUN curl -f -# -L https://dl.bintray.com/sbt/debian/sbt-0.13.8.deb > /tmp/sbt-0.13.8.deb && \\\n      dpkg -i /tmp/sbt-0.13.8.deb\n\n####################################\n# Create new user \"scaloid\"\n####################################\nENV NEW_USER=scaloid\n\nRUN adduser --disabled-password --gecos '' ${NEW_USER}\n\n# Make him a sudoer\nRUN echo \"${NEW_USER} ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/${NEW_USER} && \\\n\t  chmod 0440 /etc/sudoers.d/${NEW_USER}\n\n####################################\n# Switching to user-level\n####################################\nUSER ${NEW_USER}\nWORKDIR /home/${NEW_USER}/\n\n####################################\n# Set up Android SDK\n####################################\n# Download and install Android SDK\nENV ANDROID_SDK_URL http://dl.google.com/android/android-sdk_r24.3.3-linux.tgz\nRUN wget --progress=bar:force --tries=99 ${ANDROID_SDK_URL} -O /tmp/android_sdk.tgz && \\\n  tar xzf /tmp/android_sdk.tgz -C /home/${NEW_USER}/ && rm /tmp/android_sdk.tgz\n\n# Install Android SDK components\n# do `android list sdk --all -e` to see all available sdk packages\nENV ANDROID_HOME /home/${NEW_USER}/android-sdk-linux\nENV ANDROID_SDK_COMPONENTS platform-tools,build-tools-21.1.2,android-21,android-16,extra-android-support,addon-google_apis-google-21,sys-img-x86_64-addon-google_apis-google-21\nRUN echo y | ${ANDROID_HOME}/tools/android update sdk --no-ui --all --filter \"${ANDROID_SDK_COMPONENTS}\"\n\nENV JAVA_HOME /usr/lib/jvm/java-7-openjdk-amd64\nRUN echo \"export ANDROID_HOME=${ANDROID_HOME}\" >> /home/${NEW_USER}/.bashrc\nRUN echo \"export JAVA_HOME=${JAVA_HOME}\" >> /home/${NEW_USER}/.bashrc\nRUN echo \"export DISPLAY=:0\" >> /home/${NEW_USER}/.bashrc\n\n####################################\n# Set up the project itself\n####################################\n# Git clone the project\nRUN git clone https://github.com/pocorall/hello-scaloid-sbt\n\n# Let sbt download what it needs\nRUN cd /home/${NEW_USER}/hello-scaloid-sbt && sbt android:package &&\\\n    ${ANDROID_HOME}/tools/android update project -p .\n\n####################################\n# Add IDEA + Plugins\n####################################\n# Download and install IntelliJ IDEA\nRUN wget --progress=bar:force --tries=99\\\n    https://download.jetbrains.com/idea/ideaIC-14.1.4.tar.gz -O /tmp/idea.tar.gz && \\\n    tar xzf /tmp/idea.tar.gz -C /home/${NEW_USER}/ && \\\n    mv /home/${NEW_USER}/idea-IC-141.1532.4 /home/${NEW_USER}/idea && rm /tmp/idea.tar.gz\n\n# Make a runnable script for launching IDEA w/o terminal\nRUN echo '#!/bin/bash' > /home/${NEW_USER}/idea/bin/idea-run\nRUN echo \"nohup /home/${NEW_USER}/idea/bin/idea.sh 2>/dev/null &\" >> /home/${NEW_USER}/idea/bin/idea-run\nRUN chmod 755 /home/${NEW_USER}/idea/bin/idea-run\n\nRUN echo \"export PATH=\\${PATH}:${ANDROID_HOME}/tools/:${ANDROID_HOME}/platform-tools/:/home/${NEW_USER}/idea/bin/\" >> /home/${NEW_USER}/.bashrc\n\n# Install plugins\nRUN mkdir -p /home/${NEW_USER}/.IdeaIC14/config/plugins\nRUN cd /home/${NEW_USER}/.IdeaIC14/config/plugins && \\\n  wget --progress=bar:force --tries=99 \\\n  https://plugins.jetbrains.com/files/1347/20041/scala-intellij-bin-1.5.2.zip -O scala-plugin.zip && unzip scala-plugin.zip && \\\n  wget --progress=bar:force --tries=99 \\\n  https://plugins.jetbrains.com/files/5007/19457/idea-sbt-plugin-1.7.0.zip -O sbt-plugin.zip && unzip sbt-plugin.zip && \\\n  rm -f *.zip\n\nENV DISPLAY :0\n\n# DONE!\n\n####################################\n# Use of Dockerfile\n####################################\n# Build the docker image ON THE HOST:\n# $ docker build -t scaloid .\n#\n## Since USB access is required to deploy the app\n## do the following ON THE HOST:\n# $ adb kill-server\n# $ export XSOCK=/tmp/.X11-unix/X0\n# $ xhost +localhost\n# $ docker run --privileged -v $XSOCK:$XSOCK -v /dev/bus/usb:/dev/bus/usb -it <image>\n# This allows one to connect to USB devices and thus, deploy the app on the phone directly from Docker\n## For very secure way (using XAuthority) see:\n## https://stackoverflow.com/questions/16296753/can-you-run-gui-apps-in-a-docker-container/25280523#25280523\n"
}