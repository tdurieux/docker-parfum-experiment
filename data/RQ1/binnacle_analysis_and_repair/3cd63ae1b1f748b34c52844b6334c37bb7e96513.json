{
  "startTime": 1674641732022,
  "endTime": 1674641732393,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 134,
        "lineEnd": 134,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 5,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM microsoft/dotnet:2.1-aspnetcore-runtime AS base\nWORKDIR /app\nEXPOSE 80\nEXPOSE 443\n\n#Build main branch source apps\nFROM microsoft/dotnet:2.1-sdk AS build-src\nCOPY ConferencePlanner.sln ./\nCOPY src src\nRUN dotnet restore -nowarn:msb3202,nu1503 --packages /nuget\n\nWORKDIR /src/BackEnd\nRUN dotnet build -c Release -o /app/backend\n\nWORKDIR /src/FrontEnd\nRUN dotnet build -c Release -o app/frontend\n\n#Build save-points\n#1-Create-API-and-EF-Model\nFROM microsoft/dotnet:2.1-sdk AS build-save-1\nCOPY --from=build-src /nuget /nuget\nARG DIR=save-points/1-Create-API-and-EF-Model/ConferencePlanner/\nCOPY $DIR/ConferencePlanner.sln ./\nCOPY $DIR/BackEnd/BackEnd.csproj BackEnd/\nRUN dotnet restore -nowarn:msb3202,nu1503 -s /nuget\nCOPY ${DIR} ./\nRUN dotnet build -c Release -o /app\n\n#2a-Refactor-to-ConferenceDTO\nFROM microsoft/dotnet:2.1-sdk AS build-save-2a\nCOPY --from=build-src /nuget /nuget\nARG DIR=save-points/2a-Refactor-to-ConferenceDTO/ConferencePlanner/\nCOPY $DIR/ConferencePlanner.sln ./\nCOPY $DIR/BackEnd/BackEnd.csproj BackEnd/\nCOPY $DIR/ConferenceDTO/ConferenceDTO.csproj ConferenceDTO/\n\nRUN dotnet restore -nowarn:msb3202,nu1503 -s /nuget\nCOPY ${DIR} ./\nRUN dotnet build -c Release -o /app\n\n#2b-BackEnd-completed\nFROM microsoft/dotnet:2.1-sdk AS build-save-2b\nCOPY --from=build-src /nuget /nuget\nARG DIR=save-points/2b-BackEnd-completed/ConferencePlanner/\nCOPY $DIR/ConferencePlanner.sln ./\nCOPY $DIR/BackEnd/BackEnd.csproj BackEnd/\nCOPY $DIR/ConferenceDTO/ConferenceDTO.csproj ConferenceDTO/\n\nRUN dotnet restore -nowarn:msb3202,nu1503 -s /nuget\nCOPY ${DIR} ./\nRUN dotnet build -c Release -o /app\n\n#3-Front-End-started\nFROM microsoft/dotnet:2.1-sdk AS build-save-3\nCOPY --from=build-src /nuget /nuget\nARG DIR=save-points/3-Front-End-started/ConferencePlanner/\nCOPY $DIR/ConferencePlanner.sln ./\nCOPY ${DIR} ./\nRUN dotnet restore -nowarn:msb3202,nu1503 -s /nuget\n\nWORKDIR /BackEnd\nRUN dotnet build -c Release -o /app/backend\n\nWORKDIR /FrontEnd\nRUN dotnet build -c Release -o app/frontend\n\n#4-Authentication-and-Tag-Helpers\nFROM microsoft/dotnet:2.1-sdk AS build-save-4\nCOPY --from=build-src /nuget /nuget\nARG DIR=save-points/4-Authentication-and-Tag-Helpers/ConferencePlanner/\nCOPY $DIR/ConferencePlanner.sln ./\nCOPY ${DIR} ./\nRUN dotnet restore -nowarn:msb3202,nu1503 -s /nuget\n\nWORKDIR /BackEnd\nRUN dotnet build -c Release -o /app/backend\n\nWORKDIR /FrontEnd\nRUN dotnet build -c Release -o app/frontend\n\n#5-User-association-and-personal-agenda\nFROM microsoft/dotnet:2.1-sdk AS build-save-5\nCOPY --from=build-src /nuget /nuget\nARG DIR=save-points/5-User-association-and-personal-agenda/ConferencePlanner/\nCOPY $DIR/ConferencePlanner.sln ./\nCOPY ${DIR} ./\nRUN dotnet restore -nowarn:msb3202,nu1503 -s /nuget\n\nWORKDIR /BackEnd\nRUN dotnet build -c Release -o /app/backend\n\nWORKDIR /FrontEnd\nRUN dotnet build -c Release -o app/frontend\n\n#6-Deployment-docker\nFROM microsoft/dotnet:2.1-sdk AS build-save-6\nCOPY --from=build-src /nuget /nuget\nARG DIR=save-points/6-Deployment-docker/ConferencePlanner/\nCOPY $DIR/ConferencePlanner.sln ./\nCOPY ${DIR} ./\n\nWORKDIR /BackEnd\nRUN dotnet restore -nowarn:msb3202,nu1503 -s /nuget\nRUN dotnet build -c Release -o /app/backend\n\nWORKDIR /FrontEnd\nRUN dotnet restore -nowarn:msb3202,nu1503 -s /nuget\nRUN dotnet build -c Release -o app/frontend\n\n#8a-Adding-FrontEnd-Spa-final\nFROM microsoft/dotnet:2.1-sdk AS build-save-8a-final\n\nENV NODE_VERSION 8.11.2\nENV NODE_DOWNLOAD_URL https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\nENV NODE_DOWNLOAD_SHA 67dc4c06a58d4b23c5378325ad7e0a2ec482b48cea802252b99ebe8538a3ab79\n\nRUN curl -f -SL \"$NODE_DOWNLOAD_URL\" --output nodejs.tar.gz \\\n  && echo \"$NODE_DOWNLOAD_SHA  nodejs.tar.gz\" | sha256sum -c - \\\n  && tar -xzf \"nodejs.tar.gz\" -C /usr/local --strip-components=1 \\\n  && rm nodejs.tar.gz \\\n  && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n\nCOPY --from=build-src /nuget /nuget\nARG DIR=save-points/8a-Adding-FrontEnd-Spa-final/ConferencePlanner\nCOPY $DIR/ConferencePlanner.sln ./\nCOPY ${DIR}/src ./src\n\nWORKDIR /src/BackEnd\nRUN dotnet restore -nowarn:msb3202,nu1503 -s /nuget\nRUN dotnet build -c Release -o /app/backend\n\nWORKDIR /src/FrontEndSpa\nRUN dotnet restore -nowarn:msb3202,nu1503 -s /nuget\nWORKDIR /src/FrontEndSpa/ClientApp\nRUN npm install && npm cache clean --force;\nRUN npm run build\nWORKDIR /src/FrontEndSpa\nRUN dotnet build -c Release -o app/frontend\n\n#8a-Adding-FrontEnd-Spa-started\nFROM microsoft/dotnet:2.1-sdk AS build-save-8a-start\n\nCOPY --from=build-src /nuget /nuget\nARG DIR=save-points/8a-Adding-FrontEnd-Spa-started/ConferencePlanner\nCOPY $DIR/ConferencePlanner.sln ./\nCOPY ${DIR}/src ./src\n\nWORKDIR /src/BackEnd\nRUN dotnet restore -nowarn:msb3202,nu1503 -s /nuget\nRUN dotnet build -c Release -o /app/backend\n\n#produce final images\nFROM build-src AS publish-backend\nRUN dotnet publish -c Release -o /app\n\nFROM build-src AS publish-frontend\nRUN dotnet publish -c Release -o /app\n\n# Produce this image using\n# docker build --target final-backend -t aspnet-app-workshop-backend:latest .\nFROM base AS final-backend\nWORKDIR /app\nCOPY --from=publish-backend /app .\nENTRYPOINT [\"dotnet\", \"BackEnd.dll\"]\n\n# Produce this image using\n# docker build --target final-backend -t aspnet-app-workshop-frontend:latest .\nFROM base AS final-frontend\nWORKDIR /app\nCOPY --from=publish-frontend /app .\nENTRYPOINT [\"dotnet\", \"FrontEnd.dll\"]\n"
}