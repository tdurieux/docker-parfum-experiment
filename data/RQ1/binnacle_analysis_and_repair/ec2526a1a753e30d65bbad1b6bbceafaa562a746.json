{
  "startTime": 1674234276246,
  "endTime": 1674234277426,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 235,
        "lineEnd": 235,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 274,
        "lineEnd": 277,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 286,
        "lineEnd": 286,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 314,
        "lineEnd": 314,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 321,
        "lineEnd": 321,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 323,
        "lineEnd": 323,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 414,
        "lineEnd": 414,
        "columnStart": 21,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 150,
        "lineEnd": 151,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 181,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 239,
        "lineEnd": 270,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 315,
        "lineEnd": 316,
        "columnStart": 22,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 350,
        "lineEnd": 350,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 352,
        "lineEnd": 352,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 354,
        "lineEnd": 354,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 150,
        "lineEnd": 151,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 181,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 350,
        "lineEnd": 350,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 352,
        "lineEnd": 352,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 354,
        "lineEnd": 354,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 150,
        "lineEnd": 151,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 181,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 315,
        "lineEnd": 316,
        "columnStart": 22,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 350,
        "lineEnd": 350,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 352,
        "lineEnd": 352,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 354,
        "lineEnd": 354,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 150,
        "lineEnd": 151,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 181,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 350,
        "lineEnd": 350,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 352,
        "lineEnd": 352,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 354,
        "lineEnd": 354,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "# A Dockerfile for the gym-gazebo environment\nFROM ubuntu:16.04\n\n#--------------------\n# General setup\n#--------------------\n\n# Get the dependencies\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y xorg-dev \\\n    libgl1-mesa-dev \\\n    xvfb \\\n    libxinerama1 \\\n    libxcursor1 \\\n    unzip \\\n    libglu1-mesa \\\n    libav-tools \\\n    python3 \\\n    python3-pip \\\n    # python3-numpy \\\n    # python3-scipy \\\n    # python3-pyglet \\\n    python3-setuptools \\\n    libpq-dev \\\n    libjpeg-dev \\\n    wget \\\n    curl \\\n    cmake \\\n    git \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /usr/local/gym\n\n#--------------------\n# Install gym\n#--------------------\n\n# # Clone the official gym\n# RUN git clone https://github.com/openai/gym\n#\n# # Install the gym's requirements\n# RUN pip install -r gym/requirements.txt\n#\n# # Install the gym\n# RUN ls -l\n# RUN pip install -e gym/\n\n# Install from pip\nRUN pip3 install --no-cache-dir gym\n\n# Checks\n#RUN python --version\n#RUN python -c \"import gym\"\n\n# Debug\n#RUN ls -l /usr/local/gym\n#RUN ls -l /usr/local/gym/gym-gazebo\n#RUN ls -l /usr/local/gym/gym\n\n# #--------------------\n# # Install Gazebo\n# #--------------------\nRUN sh -c 'echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-stable xenial main\" > /etc/apt/sources.list.d/gazebo-stable.list'\n\nRUN wget https://packages.osrfoundation.org/gazebo.key -O - | apt-key add -\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends gazebo8 -y && rm -rf /var/lib/apt/lists/*;\n# RUN apt-get install -y libglib2.0-dev libgts-dev libgts-dev\nRUN apt-get install --no-install-recommends -y libgazebo8-dev && rm -rf /var/lib/apt/lists/*;\n\n# setup environment\nEXPOSE 11345\n\n#--------------------\n# Install ROS\n#--------------------\n\n# RUN apt-get install -y locales-all\n# # setup environment\n# RUN locale-gen en_US.UTF-8\n# ENV LANG en_US.UTF-8\n\n# setup environment\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\n# setup keys\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116\n\n# setup sources.list\nRUN echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list\n# RUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'\n#\n# # install ros packages\nENV ROS_DISTRO kinetic\nRUN apt-get install -y --no-install-recommends cmake gcc g++ && rm -rf /var/lib/apt/lists/*;\n\n# # Install from repositories (for Python 2.7)\n#----------------------------\n# install bootstrap tools\n# RUN apt-get update && apt-get install --no-install-recommends -y \\\n#     python-rosdep \\\n#     python-rosinstall \\\n#     python-vcstools \\\n#     && rm -rf /var/lib/apt/lists/*\n# RUN apt-get update && apt-get install -y \\\n#       ros-kinetic-ros-base && rm -rf /var/lib/apt/lists/*\n#\n# RUN apt-get install ros-kinetic-*\n# # Install additional dependencies\n# RUN apt-get install -y ros-kinetic-cv-bridge\n# RUN apt-get install -y ros-kinetic-robot-state-publisher ros-kinetic-control-msgs\n\n# Install from sources\n#----------------------------\n# RUN apt-get install python3-rosdep python3-rosinstall-generator python3-wstool \\\n#           python3-rosinstall build-essential\n# or alternatively,\nRUN apt-get update && apt-get install --no-install-recommends libboost-all-dev -y && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir -U rosdep rosinstall_generator wstool rosinstall\nRUN pip3 install --no-cache-dir rospkg catkin_pkg empy\n\n# bootstrap rosdep\nRUN rosdep init \\\n    && rosdep update\n\nRUN mkdir ~/ros_catkin_ws\n# Create package set\nRUN cd ~/ros_catkin_ws && rosinstall_generator ros_comm --rosdistro kinetic \\\n            --deps --wet-only --tar > kinetic-ros_comm-wet.rosinstall\n# Fetch packages\nRUN cd ~/ros_catkin_ws && wstool init -j1 src kinetic-ros_comm-wet.rosinstall\n# # Solve dependencies\n# RUN cd ~/ros_catkin_ws && rosdep install --from-paths src --ignore-src --rosdistro kinetic -y\n\n# Create symbolic link for the compilation\nRUN cd /usr/bin && ln -sf python3 python\n\n\n# Install console_bridge from packages\nRUN apt-get install --no-install-recommends libconsole-bridge-dev -y && rm -rf /var/lib/apt/lists/*;\n# # Compile/install console_bridge as a library\n# RUN git clone git://github.com/ros/console_bridge.git\n# RUN cd console_bridge && cmake . && make\n# RUN cd console_bridge && make install\n\nRUN apt-get install --no-install-recommends -y libtinyxml-dev liblz4-dev libbz2-dev liburdfdom-dev libpoco-dev \\\n              libtinyxml2-dev && rm -rf /var/lib/apt/lists/*;\n\n# # Compile the basic ROS packages, optimize docker production\n# RUN cd ~/ros_catkin_ws && ./src/catkin/bin/catkin_make_isolated -DPYTHON_VERSION=3.5 --install -DCMAKE_BUILD_TYPE=Release\n\n# Add a few packages and dependencies by hand\n# RUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros/console_bridge\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros-controls/control_toolbox\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros-controls/realtime_tools\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros/actionlib\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros/pluginlib\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros/class_loader\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros/urdf\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros-simulation/gazebo_ros_pkgs\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros/common_msgs\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros-controls/control_msgs\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/vmayoral/dynamic_reconfigure\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros/geometry\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/erlerobot/orocos_kinematics_dynamics\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros/angles\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros/geometry2\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros/rosconsole_bridge\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros/nodelet_core\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros/bond_core\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros-perception/image_common\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros-perception/vision_opencv\n\n# #--------------------\n# # Follow up with the ROS intallation, splited in this funny way to optimize docker's performance\n# #--------------------\nRUN apt-get install --no-install-recommends -y libeigen3-dev python3-sip python3-sip-dev libyaml-cpp-dev \\\n                        libboost-python-dev unzip && rm -rf /var/lib/apt/lists/*;\n# this installs an old version, not valid: libopencv-dev\n\n# # Ignore some repositories due to some issues with libboost_python3\n# #       https://github.com/ros/ros-overlay/issues/93\n# RUN touch /root/ros_catkin_ws/src/image_common/camera_calibration_parsers/CATKIN_IGNORE\n# RUN touch /root/ros_catkin_ws/src/image_common/camera_info_manager/CATKIN_IGNORE\nRUN cd /usr/lib/x86_64-linux-gnu/ && ln -s libboost_python-py35.so libboost_python3.so\n\n# #--------------------\n# # Install OpenCV\n# #--------------------\n# # From sources\n# RUN git clone https://github.com/opencv/opencv\n# RUN cd opencv && mkdir build && cd build && cmake .. && make\n# RUN cd opencv/build && make install\n\n# Compile OpenCV from sources\nWORKDIR /root\nRUN wget https://github.com/opencv/opencv/archive/3.2.0.zip\nRUN ls /root\nRUN unzip 3.2.0.zip\nRUN mv opencv-3.2.0 OpenCV\nRUN cd OpenCV && mkdir build && cd build && cmake -DWITH_QT=ON -DWITH_OPENGL=ON -DFORCE_VTK=ON -DWITH_TBB=ON -DWITH_GDAL=ON -DWITH_XINE=ON -DBUILD_EXAMPLES=ON -DENABLE_PRECOMPILED_HEADERS=OFF ..\nRUN cd OpenCV/build && make -j4\nRUN cd OpenCV/build && make install\nRUN cd OpenCV/build && ldconfig\n\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros/diagnostics\nRUN cd ~/ros_catkin_ws/src && git clone https://github.com/ros-controls/ros_control\n\n# Compile the again the workspace\nRUN cd ~/ros_catkin_ws && ./src/catkin/bin/catkin_make_isolated -DPYTHON_VERSION=3.5 \\\n        --install -DCMAKE_BUILD_TYPE=Release -DCATKIN_ENABLE_TESTING=OFF\n\n\n# Debug\n# RUN ls -l /opt/ros\n\n# upgrade pip\n#RUN apt-get install python3-pyqt4\n\n# #--------------------\n# # Install ROS 2\n# #--------------------\n# Inspired on https://github.com/osrf/docker_images/blob/master/ros2/source/source/Dockerfile\nRUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list'\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116\n\n# setup environment\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\nRUN pip3 install --no-cache-dir configparser\n# RUN apt-get install python-pkg-resources\n\n# install packages\nRUN apt-get update && apt-get install --no-install-recommends -q -y \\\n    # bash-completion \\\n    # build-essential \\\n    clang-format \\\n    # # cmake \\\n    # cppcheck \\\n    # git \\\n    libasio-dev \\\n    # libeigen3-dev \\\n    # libopencv-dev \\\n    # libpoco-dev \\\n    libpocofoundation9v5 \\\n    libpocofoundation9v5-dbg \\\n    libssl-dev \\\n    # libtinyxml-dev \\\n    # libtinyxml2-dev \\\n    openssl \\\n    # pydocstyle \\\n    # pyflakes \\\n    # python-empy \\\n    python3-coverage \\\n    python3-dev \\\n    python3-empy \\\n    python3-mock \\\n    python3-nose \\\n    python3-pep8 \\\n    python3-pip \\\n    python3-setuptools \\\n    python3-vcstool \\\n    python3-yaml \\\n    uncrustify \\\n    wget \\\n    && rm -rf /var/lib/apt/lists/*\n\n# install python packages\nRUN pip3 install --no-cache-dir -U \\\n    argcomplete \\\n    flake8 \\\n    flake8-import-order\n\n# clone source\nENV ROS2_WS /root/ros2_ws\nRUN mkdir -p $ROS2_WS/src\nWORKDIR $ROS2_WS\nRUN wget https://raw.githubusercontent.com/ros2/ros2/release-latest/ros2.repos \\\n&& vcs import src < ros2.repos\n\nRUN pip3 install --no-cache-dir pyparsing pytest\n\n# build source\nWORKDIR $ROS2_WS\nRUN src/ament/ament_tools/scripts/ament.py \\\n    build \\\n    --build-tests \\\n    --cmake-args -DSECURITY=OFF -- \\\n    --isolated \\\n    --parallel \\\n    --symlink-install\n\n\nWORKDIR /root\n#--------------------\n# Install Sophus\n#--------------------\n# RUN git clone https://github.com/stonier/sophus -b indigo && \\\n#    cd sophus && mkdir build && cd build && cmake .. && make\n# RUN ls -l\n# RUN cd sophus/build && make install\n# RUN echo \"## Sophus installed ##\\n\"\n\n# # FROM pip\n# RUN pip3 install opencv-python\n#RUN cd /usr/local/gym\n\n# More dependencies\nRUN pip3 install --no-cache-dir h5py\nRUN apt-get update && apt-get install --no-install-recommends -y bash-completion \\\n        python3-defusedxml python3-skimage && rm -rf /var/lib/apt/lists/*;\n\n#--------------------\n# Install baselines\n#--------------------\nRUN pip3 install --no-cache-dir baselines\n\nRUN pip3 install --no-cache-dir netifaces\n\n\n#--------------------\n# Install individual environments\n#--------------------\nWORKDIR /root\n\n# Turtlebot\nRUN cd ros_catkin_ws/src && git clone https://github.com/turtlebot/turtlebot\nRUN cd ros_catkin_ws/src && git clone https://github.com/turtlebot/turtlebot_create\nRUN cd ros_catkin_ws/src && git clone https://github.com/turtlebot/turtlebot_simulator\nRUN cd ros_catkin_ws/src && git clone https://github.com/ros-drivers/joystick_drivers.git\nRUN cd ros_catkin_ws/src && git clone https://github.com/yujinrobot/kobuki\nRUN cd ros_catkin_ws/src && git clone https://github.com/yujinrobot/kobuki_core\n# RUN cd ros_catkin_ws/src && git clone https://github.com/erlerobot/kobuki_desktop\nRUN cd ros_catkin_ws/src && git clone https://github.com/yujinrobot/kobuki_msgs\nRUN cd ros_catkin_ws/src && git clone https://github.com/ros-planning/navigation\nRUN cd ros_catkin_ws/src && git clone https://github.com/ros-perception/perception_pcl.git\nRUN cd ros_catkin_ws/src && git clone https://github.com/ros/xacro\nRUN cd ros_catkin_ws/src && git clone https://github.com/yujinrobot/yocs_msgs\nRUN cd ros_catkin_ws/src && git clone https://github.com/yujinrobot/yujin_ocs\nRUN cd ros_catkin_ws/src && git clone https://github.com/stonier/ecl_core\nRUN cd ros_catkin_ws/src && git clone https://github.com/stonier/ecl_lite\nRUN cd ros_catkin_ws/src && git clone https://github.com/stonier/ecl_navigation\nRUN cd ros_catkin_ws/src && git clone https://github.com/stonier/ecl_tools\nRUN cd ros_catkin_ws/src && git clone https://github.com/ros-drivers/driver_common.git\nRUN apt-get install --no-install-recommends -y libftdi-dev && rm -rf /var/lib/apt/lists/*;\nRUN cd ros_catkin_ws/src && git clone https://github.com/ros-visualization/rqt_robot_dashboard\nRUN apt-get install --no-install-recommends -y libsdl-dev libsdl-image1.2-dev libspnav-dev && rm -rf /var/lib/apt/lists/*;\n# installing pcl-dev causes some conflicts\nRUN apt-get install --no-install-recommends -y libpcl-dev; rm -rf /var/lib/apt/lists/*; exit 0\nRUN cd ros_catkin_ws/src && git clone https://github.com/ros-perception/pcl_msgs\nRUN cd ros_catkin_ws/src && git clone https://github.com/ros-perception/pcl_conversions\nRUN cd ros_catkin_ws/src && git clone https://github.com/ros-gbp/bfl-release -b release/kinetic/bfl\n# # CATKIN_IGNORE kobuki_gazebo_plugins\n# RUN cd ros_catkin_ws/src/kobuki_desktop/kobuki_gazebo_plugins && touch CATKIN_IGNORE\nRUN cd ros_catkin_ws/src && git clone https://github.com/yujinrobot/kobuki_desktop -b devel\n# Fix obtained from https://aur.archlinux.org/packages/ros-indigo-kobuki-gazebo-plugins/\n# checkout version 0.5.1, which compiles\nRUN cd ros_catkin_ws/src/kobuki_desktop && git checkout 3d837662928748cf1e229d2e0b0d98f1031ed4a4\nRUN cd ros_catkin_ws/src && git clone https://github.com/ros-perception/laser_geometry\nRUN cd ros_catkin_ws/src && git clone https://github.com/ros-planning/navigation_msgs\nRUN cd ros_catkin_ws/src && git clone https://github.com/ros/roslint\n# CATKIN_IGNORE wiimote\nRUN cd ros_catkin_ws/src/joystick_drivers/wiimote && touch CATKIN_IGNORE\n# # CATKIN_IGNORE yocs_ar_marker_tracking\n# RUN cd ros_catkin_ws/src/yujin_ocs/yocs_ar_marker_tracking && touch CATKIN_IGNORE\nRUN cd ros_catkin_ws/src && git clone https://github.com/ros-perception/ar_track_alvar\nRUN cd ros_catkin_ws/src && git clone https://github.com/ros/resource_retriever\n# CATKIN_IGNORE kobuki test suites\nRUN cd ros_catkin_ws/src/kobuki/kobuki_testsuite && touch CATKIN_IGNORE\nRUN cd ros_catkin_ws/src/kobuki_desktop/kobuki_qtestsuite && touch CATKIN_IGNORE\nRUN cd ros_catkin_ws/src && git clone https://github.com/ros/robot_state_publisher\nRUN cd ros_catkin_ws/src && git clone https://github.com/ros/kdl_parser\n\n# Compile the again the workspace\nRUN cd ~/ros_catkin_ws && ./src/catkin/bin/catkin_make_isolated -DPYTHON_VERSION=3.5 \\\n        --install -DCMAKE_BUILD_TYPE=Release -DCATKIN_ENABLE_TESTING=OFF\n\n\n#--------------------\n# Copy the code\n#--------------------\n# this invalidates the cache\nRUN mkdir gym-gazebo\n# COPY . /usr/local/gym/gym-gazebo\nCOPY . /root/gym-gazebo\n\n# # #--------------------\n# # # Install deep learning toolkits\n# # #--------------------\n# # # install dependencies\n# # RUN pip install h5py\n# # RUN apt-get install gfortran -y\n# #\n# # # install sript specific dependencies (temporal)\n# # RUN apt-get install python-skimage -y\n# #\n# # # install Theano\n# # #RUN git clone git://github.com/Theano/Theano.git\n# # #RUN cd Theano/ && python setup.py develop\n# # RUN pip install Theano\n# #\n# # # install Keras\n# # RUN pip install keras\n#\n#--------------------\n# Install gym-gazebo\n#--------------------\n\nRUN cd gym-gazebo && pip3 install --no-cache-dir -e .\n\n# # old method\n# # install dependencies\n# RUN cd /usr/local/gym/gym-gazebo/gym_gazebo/envs/installation && bash setup.bash\n\n#WORKDIR /root\n#ENTRYPOINT [\"/usr/local/gym/bin/docker_entrypoint\"]\n\n# setup entrypoint\n#RUN ls /usr/local/gym/gym-gazebo/\n#RUN ls ./gym-gazebo\n#COPY /usr/local/gym/gym-gazebo/entrypoint.sh /\n#\n#--------------------\n# Entry point\n#--------------------\n\nCOPY entrypoint.sh /\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"bash\"]\n"
}