{
  "startTime": 1674252364600,
  "endTime": 1674252364763,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 133
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM bertoost/php:7.1.26-fpm\n\nLABEL maintainer=\"Bert Oost <hello@bertoost.com>\"\n\nUSER root\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        nano \\\n        vim \\\n        git && rm -rf /var/lib/apt/lists/*;\nRUN pecl install xdebug\n\n# Remove temporary stuff\nRUN apt-get purge -y --auto-remove \\\n    libicu-dev \\\n    g++\n\n# Xdebug config.\nCOPY conf.d/pecl-xdebug.ini /usr/local/etc/php/conf.d/pecl-xdebug.ini\n\n# Download and add-in BlackFire\nRUN version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") \\\n    && curl -f -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \\\n    && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \\\n    && mv /tmp/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so && rm /tmp/blackfire-probe.tar.gz\n\n# Blackfire integration\nCOPY conf.d/blackfire.ini /usr/local/etc/php/conf.d/backfire.ini\n\n# Additional php.ini settings for development\nCOPY conf.d/php.development.ini /usr/local/etc/php/conf.d/01-php-overrides.ini\n\n# Project binary files\nRUN mkdir -p /home/php/projects_bin \\\n    && chown php:php /home/php/projects_bin\nCOPY projects_bin/* /home/php/projects_bin/\nRUN chown php:php /home/php/projects_bin/*\n\n# Custom entrypoint\nCOPY scripts/entrypoint.development.sh /home/php/entrypoint.sh\nRUN chown php:php /home/php/entrypoint.sh \\\n    && chmod +x /home/php/entrypoint.sh\n\nUSER php\n\nENV BINARY_DIRECTORY \"bin/\"\n\nWORKDIR /var/www/html\n\nENTRYPOINT [\"/home/php/entrypoint.sh\"]\nCMD [ \"php-fpm\" ]"
}