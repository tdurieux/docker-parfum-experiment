{
  "startTime": 1674249647799,
  "endTime": 1674249648524,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 7,
        "columnEnd": 127
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 160,
        "lineEnd": 160,
        "columnStart": 4,
        "columnEnd": 169
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 7,
        "columnEnd": 127
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 7,
        "columnEnd": 137
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 7,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Generated by Neurodocker version 0.4.2-dev\n# Timestamp: 2018-10-15 12:01:29 UTC\n#\n# Thank you for using Neurodocker. If you discover any issues\n# or ways to improve this software, please submit an issue or\n# pull request on our GitHub repository:\n#\n#     https://github.com/kaczmarj/neurodocker\n\nFROM neurodebian:stretch-non-free\n\nARG DEBIAN_FRONTEND=\"noninteractive\"\n\nENV LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    ND_ENTRYPOINT=\"/neurodocker/startup.sh\"\nRUN export ND_ENTRYPOINT=\"/neurodocker/startup.sh\" \\\n    && apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           apt-utils \\\n           bzip2 \\\n           ca-certificates \\\n           curl \\\n           locales \\\n           unzip \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n    && dpkg-reconfigure --frontend=noninteractive locales \\\n    && update-locale LANG=\"en_US.UTF-8\" \\\n    && chmod 777 /opt && chmod a+s /opt \\\n    && mkdir -p /neurodocker \\\n    && if [ ! -f \"$ND_ENTRYPOINT\" ]; then \\\n         echo '#!/usr/bin/env bash' >> \"$ND_ENTRYPOINT\" \\\n    &&   echo 'set -e' >> \"$ND_ENTRYPOINT\" \\\n    &&   echo 'if [ -n \"$1\" ]; then \"$@\"; else /usr/bin/env bash; fi' >> \"$ND_ENTRYPOINT\"; \\\n    fi \\\n    && chmod -R 777 /neurodocker && chmod a+s /neurodocker\n\nENTRYPOINT [\"/neurodocker/startup.sh\"]\n\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           convert3d \\\n           ants \\\n           fsl \\\n           gcc \\\n           g++ \\\n           graphviz \\\n           tree \\\n           git-annex-standalone \\\n           vim \\\n           emacs-nox \\\n           nano \\\n           less \\\n           ncdu \\\n           tig \\\n           git-annex-remote-rclone \\\n           octave \\\n           netbase \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN sed -i '$isource /etc/fsl/fsl.sh' $ND_ENTRYPOINT\n\nENV FORCE_SPMMCR=\"1\" \\\n    LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu:/opt/matlabmcr-2010a/v713/runtime/glnxa64:/opt/matlabmcr-2010a/v713/bin/glnxa64:/opt/matlabmcr-2010a/v713/sys/os/glnxa64:/opt/matlabmcr-2010a/v713/extern/bin/glnxa64\" \\\n    MATLABCMD=\"/opt/matlabmcr-2010a/v713/toolbox/matlab\"\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           bc \\\n           libncurses5 \\\n           libxext6 \\\n           libxmu6 \\\n           libxpm-dev \\\n           libxt6 \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && echo \"Downloading MATLAB Compiler Runtime ...\" \\\n    && curl -f -sSL --retry 5 -o /tmp/toinstall.deb https://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb \\\n    && dpkg -i /tmp/toinstall.deb \\\n    && rm /tmp/toinstall.deb \\\n    && apt-get install -y -f \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && curl -fsSL --retry 5 -o /tmp/MCRInstaller.bin https://dl.dropbox.com/s/zz6me0c3v4yq5fd/MCR_R2010a_glnxa64_installer.bin \\\n    && chmod +x /tmp/MCRInstaller.bin \\\n    && /tmp/MCRInstaller.bin -silent -P installLocation=\"/opt/matlabmcr-2010a\" \\\n    && rm -rf /tmp/* \\\n    && echo \"Downloading standalone SPM ...\" \\\n    && curl -fsSL --retry 5 -o /tmp/spm12.zip https://www.fil.ion.ucl.ac.uk/spm/download/restricted/utopia/previous/spm12_r7219_R2010a.zip \\\n    && unzip -q /tmp/spm12.zip -d /tmp \\\n    && mkdir -p /opt/spm12-r7219 \\\n    && mv /tmp/spm12/* /opt/spm12-r7219/ \\\n    && chmod -R 777 /opt/spm12-r7219 \\\n    && rm -rf /tmp/* \\\n    && /opt/spm12-r7219/run_spm12.sh /opt/matlabmcr-2010a/v713 quit \\\n    && sed -i '$iexport SPMMCRCMD=\\\"/opt/spm12-r7219/run_spm12.sh /opt/matlabmcr-2010a/v713 script\\\"' $ND_ENTRYPOINT\n\nRUN useradd --no-user-group --create-home --shell /bin/bash neuro\nUSER neuro\n\nENV CONDA_DIR=\"/opt/miniconda-latest\" \\\n    PATH=\"/opt/miniconda-latest/bin:$PATH\"\nRUN export PATH=\"/opt/miniconda-latest/bin:$PATH\" \\\n    && echo \"Downloading Miniconda installer ...\" \\\n    && conda_installer=\"/tmp/miniconda.sh\" \\\n    && curl -fsSL --retry 5 -o \"$conda_installer\" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n    && bash \"$conda_installer\" -b -p /opt/miniconda-latest \\\n    && rm -f \"$conda_installer\" \\\n    && conda update -yq -nbase conda \\\n    && conda config --system --prepend channels conda-forge \\\n    && conda config --system --set auto_update_conda false \\\n    && conda config --system --set show_channel_urls true \\\n    && sync && conda clean -tipsy && sync \\\n    && conda create -y -q --name neuro \\\n    && conda install -y -q --name neuro \\\n           python=3.6 \\\n           pytest \\\n           jupyter \\\n           jupyterlab \\\n           jupyter_contrib_nbextensions \\\n           traits \\\n           pandas \\\n           matplotlib \\\n           scikit-learn \\\n           scikit-image \\\n           seaborn \\\n           nbformat \\\n           nb_conda \\\n    && sync && conda clean -tipsy && sync \\\n    && bash -c \"source activate neuro \\\n    &&   pip install --no-cache-dir  \\\n             https://github.com/nipy/nipype/tarball/master \\\n             https://github.com/INCF/pybids/tarball/0.7.1 \\\n             nilearn \\\n             datalad[full] \\\n             nipy \\\n             duecredit \\\n             nbval\" \\\n    && rm -rf ~/.cache/pip/* \\\n    && sync \\\n    && sed -i '$isource activate neuro' $ND_ENTRYPOINT\n\nENV LD_LIBRARY_PATH=\"/opt/miniconda-latest/envs/neuro:/usr/lib/fsl/5.0\"\n\nRUN bash -c 'source activate neuro && jupyter nbextension enable exercise2/main && jupyter nbextension enable spellchecker/main'\n\nUSER root\n\nRUN mkdir /data && chmod 777 /data && chmod a+s /data\n\nRUN mkdir /output && chmod 777 /output && chmod a+s /output\n\nUSER neuro\n\nRUN printf \"[user]\\n\\tname = miykael\\n\\temail = michaelnotter@hotmail.com\\n\" > ~/.gitconfig\n\nRUN bash -c 'source activate neuro && cd /data && datalad install -r ///workshops/nih-2017/ds000114 && cd ds000114 && datalad update -r && datalad get -r sub-01/ses-test/anat sub-01/ses-test/func/*fingerfootlips*'\n\nRUN curl -f -L https://files.osf.io/v1/resources/fvuh8/providers/osfstorage/580705089ad5a101f17944a9 -o /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz && tar xf /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz -C /data/ds000114/derivatives/fmriprep/. && rm /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz && find /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c -type f -not -name ?mm_T1.nii.gz -not -name ?mm_brainmask.nii.gz -not -name ?mm_tpm*.nii.gz -delete\n\nCOPY [\".\", \"/home/neuro/nipype_tutorial\"]\n\nUSER root\n\nRUN chown -R neuro /home/neuro/nipype_tutorial\n\nRUN rm -rf /opt/conda/pkgs/*\n\nUSER neuro\n\nRUN mkdir -p ~/.jupyter && echo c.NotebookApp.ip = \\\"0.0.0.0\\\" > ~/.jupyter/jupyter_notebook_config.py\n\nWORKDIR /home/neuro/nipype_tutorial\n\nCMD [\"jupyter-notebook\"]\n\nRUN echo '{ \\\n    \\n  \"pkg_manager\": \"apt\", \\\n    \\n  \"instructions\": [ \\\n    \\n    [ \\\n    \\n      \"base\", \\\n    \\n      \"neurodebian:stretch-non-free\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"install\", \\\n    \\n      [ \\\n    \\n        \"convert3d\", \\\n    \\n        \"ants\", \\\n    \\n        \"fsl\", \\\n    \\n        \"gcc\", \\\n    \\n        \"g++\", \\\n    \\n        \"graphviz\", \\\n    \\n        \"tree\", \\\n    \\n        \"git-annex-standalone\", \\\n    \\n        \"vim\", \\\n    \\n        \"emacs-nox\", \\\n    \\n        \"nano\", \\\n    \\n        \"less\", \\\n    \\n        \"ncdu\", \\\n    \\n        \"tig\", \\\n    \\n        \"git-annex-remote-rclone\", \\\n    \\n        \"octave\", \\\n    \\n        \"netbase\" \\\n    \\n      ] \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"add_to_entrypoint\", \\\n    \\n      \"source /etc/fsl/fsl.sh\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"spm12\", \\\n    \\n      { \\\n    \\n        \"version\": \"r7219\" \\\n    \\n      } \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"user\", \\\n    \\n      \"neuro\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"miniconda\", \\\n    \\n      { \\\n    \\n        \"miniconda_version\": \"4.3.31\", \\\n    \\n        \"conda_install\": [ \\\n    \\n          \"python=3.6\", \\\n    \\n          \"pytest\", \\\n    \\n          \"jupyter\", \\\n    \\n          \"jupyterlab\", \\\n    \\n          \"jupyter_contrib_nbextensions\", \\\n    \\n          \"traits\", \\\n    \\n          \"pandas\", \\\n    \\n          \"matplotlib\", \\\n    \\n          \"scikit-learn\", \\\n    \\n          \"scikit-image\", \\\n    \\n          \"seaborn\", \\\n    \\n          \"nbformat\", \\\n    \\n          \"nb_conda\" \\\n    \\n        ], \\\n    \\n        \"pip_install\": [ \\\n    \\n          \"https://github.com/nipy/nipype/tarball/master\", \\\n    \\n          \"https://github.com/INCF/pybids/tarball/0.7.1\", \\\n    \\n          \"nilearn\", \\\n    \\n          \"datalad[full]\", \\\n    \\n          \"nipy\", \\\n    \\n          \"duecredit\", \\\n    \\n          \"nbval\" \\\n    \\n        ], \\\n    \\n        \"create_env\": \"neuro\", \\\n    \\n        \"activate\": true \\\n    \\n      } \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"env\", \\\n    \\n      { \\\n    \\n        \"LD_LIBRARY_PATH\": \"/opt/miniconda-latest/envs/neuro:/usr/lib/fsl/5.0\" \\\n    \\n      } \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"run_bash\", \\\n    \\n      \"source activate neuro && jupyter nbextension enable exercise2/main && jupyter nbextension enable spellchecker/main\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"user\", \\\n    \\n      \"root\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"run\", \\\n    \\n      \"mkdir /data && chmod 777 /data && chmod a+s /data\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"run\", \\\n    \\n      \"mkdir /output && chmod 777 /output && chmod a+s /output\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"user\", \\\n    \\n      \"neuro\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"run\", \\\n    \\n      \"printf \\\"[user]\\\\\\n\\\\tname = miykael\\\\\\n\\\\temail = michaelnotter@hotmail.com\\\\\\n\\\" > ~/.gitconfig\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"run_bash\", \\\n    \\n      \"source activate neuro && cd /data && datalad install -r ///workshops/nih-2017/ds000114 && cd ds000114 && datalad update -r && datalad get -r sub-01/ses-test/anat sub-01/ses-test/func/*fingerfootlips*\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"run\", \\\n    \\n      \"curl -L https://files.osf.io/v1/resources/fvuh8/providers/osfstorage/580705089ad5a101f17944a9 -o /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz && tar xf /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz -C /data/ds000114/derivatives/fmriprep/. && rm /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c.tar.gz && find /data/ds000114/derivatives/fmriprep/mni_icbm152_nlin_asym_09c -type f -not -name ?mm_T1.nii.gz -not -name ?mm_brainmask.nii.gz -not -name ?mm_tpm*.nii.gz -delete\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"copy\", \\\n    \\n      [ \\\n    \\n        \".\", \\\n    \\n        \"/home/neuro/nipype_tutorial\" \\\n    \\n      ] \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"user\", \\\n    \\n      \"root\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"run\", \\\n    \\n      \"chown -R neuro /home/neuro/nipype_tutorial\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"run\", \\\n    \\n      \"rm -rf /opt/conda/pkgs/*\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"user\", \\\n    \\n      \"neuro\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"run\", \\\n    \\n      \"mkdir -p ~/.jupyter && echo c.NotebookApp.ip = \\\\\\\"0.0.0.0\\\\\\\" > ~/.jupyter/jupyter_notebook_config.py\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"workdir\", \\\n    \\n      \"/home/neuro/nipype_tutorial\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"cmd\", \\\n    \\n      [ \\\n    \\n        \"jupyter-notebook\" \\\n    \\n      ] \\\n    \\n    ] \\\n    \\n  ] \\\n    \\n}' > /neurodocker/neurodocker_specs.json\n"
}