{
  "startTime": 1674242346328,
  "endTime": 1674242346505,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 38,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 16,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# development image specially created for builds\n# This should include all resources for a node-based project such as:\n# - build utils\n# - docker so we can build a docker image on CI\n# - versioning software\n\n# Stuff that could be gathered through alpine package manager\nRUN rm -f /etc/apk/repositories && \\\n    echo \"http://dl-cdn.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories && \\\n    echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories && \\\n    echo \"http://dl-cdn.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories && \\\n    apk update && apk upgrade && \\\n    apk add \\\n        $BUILD_APKS \\\n        imagemagick graphicsmagick vips-dev fftw-dev libjpeg-turbo-dev jpeg-dev \\\n        libffi-dev gdbm yaml-dev procps \\\n        docker iptables lxc e2fsprogs \\\n        subversion \\\n        jq \\\n    && \\\n    mkdir -p /etc/ssl/certs/ && \\\n    update-ca-certificates --fresh && \\\n    rm -f /bin/ash /bin/sh && \\\n    ln -s /bin/bash /bin/ash && \\\n    ln -s /bin/bash /bin/sh && \\\n    rm -fR /var/cache/apk/*\n\n# glibc for alpine\nRUN wget -O - \"https://github.com/cusspvz/node.docker/raw/master/apks.tar.gz\" | tar xvz -C /tmp && \\\n    apk add --force --allow-untrusted \\\n        /tmp/apks/glibc-2.21-r2.apk \\\n        /tmp/apks/glibc-bin-2.21-r2.apk \\\n    && \\\n    /usr/glibc/usr/bin/ldconfig /lib /usr/glibc/usr/lib && \\\n    rm -fR /tmp/apks /var/cache/apk/*\n\n# Docker compose\nRUN wget -O /usr/bin/docker-compose $( curl -f -s https://api.github.com/repos/docker/compose/releases/latest | jq --raw-output '[ .assets[] | .browser_download_url | if match(\"Linux-x86_64\") then tostring else \"\" end ] | .[0]') && \\\n    chmod +x /usr/bin/docker-compose && \\\n    /usr/bin/docker-compose --version\n\n# Rancher compose\nRUN wget -O - $( curl -f -s https://api.github.com/repos/rancher/rancher-compose/releases/latest | jq --raw-output '[ .assets[] | .browser_download_url | if match(\"linux-amd64\") then tostring else \"\" end ] | .[0]') | \\\n    tar xvz --strip-components=2 -C /usr/bin/ && \\\n    chmod +x /usr/bin/rancher-compose && \\\n    /usr/bin/rancher-compose --version\n\nADD https://raw.githubusercontent.com/jpetazzo/dind/master/wrapdocker /usr/local/bin/wrapdocker\nRUN chmod +x /usr/local/bin/wrapdocker\n\nVOLUME /var/lib/docker\nCMD [\"wrapdocker\"]\n"
}