{
  "startTime": 1674251707997,
  "endTime": 1674251708427,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Jupyter container used for Galaxy IPython (+other kernels) Integration\n\nFROM jupyter/datascience-notebook:628fbcb24afd\n\nMAINTAINER Björn A. Grüning, bjoern.gruening@gmail.com\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Install system libraries first as root\nUSER root\n\nRUN apt-get -qq update && apt-get install --no-install-recommends -y libcurl4-openssl-dev libxml2-dev \\\n    apt-transport-https python-dev libc-dev pandoc pkg-config liblzma-dev libbz2-dev libpcre3-dev \\\n    build-essential libblas-dev liblapack-dev gfortran libzmq3-dev libyaml-dev libxrender1 fonts-dejavu \\\n    libfreetype6-dev libpng-dev net-tools procps libreadline-dev wget software-properties-common octave \\\n    # IHaskell dependencies\n    zlib1g-dev libtinfo-dev libcairo2-dev libpango1.0-dev && \\\n    apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Glasgow Haskell Compiler\n#RUN add-apt-repository -y ppa:hvr/ghc && \\\n#    sed -i s/jessie/trusty/g /etc/apt/sources.list.d/hvr-ghc-jessie.list && \\\n#    apt-get update && apt-get install -y cabal-install-1.22 ghc-7.8.4 happy-1.19.4 alex-3.1.3 && \\\n#    apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Ruby dependencies\nRUN add-apt-repository -y  ppa:brightbox/ruby-ng && \\\n    sed -i s/jessie/trusty/g  /etc/apt/sources.list.d/brightbox-ruby-ng-jessie.list && apt-get update && \\\n    apt-get install -y --no-install-recommends ruby2.2 ruby2.2-dev libtool autoconf automake gnuplot-nox libsqlite3-dev \\\n    libatlas-base-dev libgsl0-dev libmagick++-dev imagemagick && \\\n    ln -s /usr/bin/libtoolize /usr/bin/libtool && \\\n    apt-get purge -y software-properties-common && \\\n    apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN gem install --no-rdoc --no-ri rbczmq sciruby-full\n\nENV PATH /home/$NB_USER/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.8.4/bin:/opt/happy/1.19.4/bin:/opt/alex/3.1.3/bin:$PATH\n\nUSER jovyan\n\n# Python packages\nRUN conda config --add channels r && conda install --yes --quiet biopython rpy2 \\\n    cython patsy statsmodels cloudpickle dill tensorflow=1.1* r-xml && conda clean -yt && \\\n    pip install --no-cache-dir bioblend galaxy-ie-helpers\n\n# Now for a python2 environment\nRUN /bin/bash -c \"source activate python2 && conda install --quiet --yes biopython rpy2 \\\n    cython patsy statsmodels cloudpickle dill tensorflow=1.1* && conda clean -yt && \\\n    pip install --no-cache-dir bioblend galaxy-ie-helpers\"\n\n# IRuby\nRUN iruby register\n\n# IHaskell + IHaskell-Widgets + Dependencies for examples\n#RUN cabal update && \\\n#    CURL_CA_BUNDLE='/etc/ssl/certs/ca-certificates.crt' curl 'https://www.stackage.org/lts-2.22/cabal.config?global=true' >> ~/.cabal/config && \\\n#    cabal install cpphs && \\\n#    cabal install gtk2hs-buildtools && \\\n#    cabal install ihaskell-0.8.0.0 --reorder-goals && \\\n#    cabal install ihaskell-widgets-0.2.2.1 HTTP Chart Chart-cairo && \\\n#     ~/.cabal/bin/ihaskell install && \\\n#    rm -fr $(echo ~/.cabal/bin/* | grep -iv ihaskell) ~/.cabal/packages ~/.cabal/share/doc ~/.cabal/setup-exe-cache ~/.cabal/logs\n\n\n# Extra Kernels\nRUN pip install --no-cache-dir --upgrade pip && \\\n    pip install --user --no-cache-dir bash_kernel bioblend octave_kernel galaxy-ie-helpers && \\\n    python -m bash_kernel.install && \\\n    # add galaxy-ie-helpers to PATH\n    echo 'export PATH=/home/jovyan/.local/bin:$PATH' >> /home/jovyan/.bashrc\n\nADD ./startup.sh /startup.sh\nADD ./monitor_traffic.sh /monitor_traffic.sh\nADD ./get_notebook.py /get_notebook.py\n\nUSER root\n\n# /import will be the universal mount-point for Jupyter\n# The Galaxy instance can copy in data that needs to be present to the Jupyter webserver\nRUN mkdir /import\n\n\n# We can get away with just creating this single file and Jupyter will create the rest of the\n# profile for us.\nRUN mkdir -p /home/$NB_USER/.ipython/profile_default/startup/\nRUN mkdir -p /home/$NB_USER/.jupyter/custom/\n\nCOPY ./ipython-profile.py /home/$NB_USER/.ipython/profile_default/startup/00-load.py\n#ADD ./ipython_notebook_config.py /home/$NB_USER/.jupyter/jupyter_notebook_config.py\nCOPY jupyter_notebook_config.py /home/$NB_USER/.jupyter/\n\nADD ./custom.js /home/$NB_USER/.jupyter/custom/custom.js\nADD ./custom.css /home/$NB_USER/.jupyter/custom/custom.css\nADD ./default_notebook.ipynb /home/$NB_USER/notebook.ipynb\n\n# ENV variables to replace conf file\nENV DEBUG=false \\\n    GALAXY_WEB_PORT=10000 \\\n    NOTEBOOK_PASSWORD=none \\\n    CORS_ORIGIN=none \\\n    DOCKER_PORT=none \\\n    API_KEY=none \\\n    HISTORY_ID=none \\\n    REMOTE_HOST=none \\\n    GALAXY_URL=none\n\nRUN chown -R $NB_USER:users /home/$NB_USER/ /import\n\nUSER jovyan\n\nWORKDIR /import\n\n# Jupyter will run on port 8888, export this port to the host system\n\n# Start Jupyter Notebook\nCMD /startup.sh\n"
}