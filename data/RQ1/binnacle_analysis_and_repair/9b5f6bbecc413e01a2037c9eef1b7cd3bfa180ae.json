{
  "startTime": 1674240763163,
  "endTime": 1674240764090,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 8,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 2,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 166,
        "lineEnd": 166,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 166,
        "lineEnd": 166,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\nMAINTAINER bhaas@broadinstitute.org\n\nRUN apt-get update && apt-get install --no-install-recommends -y gcc g++ perl python automake make \\\n                                       wget git curl libdb-dev \\\n                                       zlib1g-dev bzip2 libncurses5-dev \\\n\t\t\t\t\t\t\t\t\t\t\ttexlive-latex-base \\\n                                       default-jre \\\n\t\t\t\t\t\t\t\t\t\t\tpython-pip python-dev \\\n\t\t\t\t\t\t\t\t\t\t\tgfortran \\\n\t\t\t\t\t\t\t\t\t\t\tbuild-essential libghc-zlib-dev libncurses-dev libbz2-dev liblzma-dev libpcre3-dev libxml2-dev \\\n\t\t\t\t\t\t\t\t\t\t\tlibblas-dev gfortran git unzip ftp libzmq3-dev nano ftp fort77 libreadline-dev \\\n\t\t\t\t\t\t\t\t\t\t\tlibcurl4-openssl-dev libx11-dev libxt-dev \\\n\t\t\t\t\t\t\t\t\t\t\tx11-common libcairo2-dev libpng-dev libreadline-dev libjpeg-dev pkg-config libtbb-dev \\\n                   && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -L https://cpanmin.us | perl - App::cpanminus\n\nRUN cpanm install DB_File\n\nRUN cpanm install URI::Escape\n\n\n## set up tool config and deployment area:\n\nENV SRC /usr/local/src\nENV BIN /usr/local/bin\n\n\n#####\n# Install R\n\nWORKDIR $SRC\n\nENV R_VERSION=R-3.5.2\n\nRUN curl -f https://cran.r-project.org/src/base/R-3/$R_VERSION.tar.gz -o $R_VERSION.tar.gz && \\\n        tar xvf $R_VERSION.tar.gz && \\\n        cd $R_VERSION && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && rm $R_VERSION.tar.gz\n\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"tidyverse\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"edgeR\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"DESeq2\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"ape\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"ctc\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"gplots\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"Biobase\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"qvalue\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"goseq\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"Glimma\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"ROTS\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"GOplot\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"argparse\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"sm\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"fastcluster\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"vioplot\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"DEXSeq\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"tximport\", dep = TRUE)'\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"tximportData\", dep = TRUE)'\n\n\n\n## bowtie\nWORKDIR $SRC\nRUN wget https://sourceforge.net/projects/bowtie-bio/files/bowtie/1.2.1.1/bowtie-1.2.1.1-linux-x86_64.zip/download -O bowtie-1.2.1.1-linux-x86_64.zip && \\\n        unzip bowtie-1.2.1.1-linux-x86_64.zip && \\\n\tmv bowtie-1.2.1.1/bowtie* $BIN\n\n\n## RSEM\nRUN mkdir /usr/local/lib/site_perl\nWORKDIR $SRC\nRUN wget https://github.com/deweylab/RSEM/archive/v1.3.0.tar.gz && \\\n    tar xvf v1.3.0.tar.gz && \\\n    cd RSEM-1.3.0 && \\\n    make && \\\n    cp rsem-* $BIN && \\\n    cp rsem_perl_utils.pm /usr/local/lib/site_perl/ && \\\n    cd ../ && rm -r RSEM-1.3.0 && rm v1.3.0.tar.gz\n\n\n## Kallisto\nWORKDIR $SRC\nRUN wget https://github.com/pachterlab/kallisto/releases/download/v0.43.1/kallisto_linux-v0.43.1.tar.gz && \\\n    tar xvf kallisto_linux-v0.43.1.tar.gz && \\\n    mv kallisto_linux-v0.43.1/kallisto $BIN && rm kallisto_linux-v0.43.1.tar.gz\n\n\n## FASTQC\nWORKDIR $SRC\nRUN wget https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.5.zip && \\\n    unzip fastqc_v0.11.5.zip && \\\n    chmod 755 /usr/local/src/FastQC/fastqc && \\\n    ln -s /usr/local/src/FastQC/fastqc $BIN/.\n\n\n# blast\nWORKDIR $SRC\nRUN wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.5.0/ncbi-blast-2.5.0+-x64-linux.tar.gz && \\\n    tar xvf ncbi-blast-2.5.0+-x64-linux.tar.gz && \\\n    cp ncbi-blast-2.5.0+/bin/* $BIN && \\\n    rm -r ncbi-blast-2.5.0+ && rm ncbi-blast-2.5.0+-x64-linux.tar.gz\n\n\n## Bowtie2\nWORKDIR $SRC\nRUN wget https://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.3.4.1/bowtie2-2.3.4.1-linux-x86_64.zip/download -O bowtie2-2.3.4.1-linux-x86_64.zip && \\\n    unzip bowtie2-2.3.4.1-linux-x86_64.zip && \\\n    mv bowtie2-2.3.4.1-linux-x86_64/bowtie2* $BIN && \\\n    rm *.zip && \\\n    rm -r bowtie2-2.3.4.1-linux-x86_64\n\n\n\n## Samtools\nRUN wget https://github.com/samtools/samtools/releases/download/1.7/samtools-1.7.tar.bz2 && \\\n    tar xvf samtools-1.7.tar.bz2 && \\\n    cd samtools-1.7/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && rm samtools-1.7.tar.bz2\n\n## Jellyfish\nRUN wget https://github.com/gmarcais/Jellyfish/releases/download/v2.2.7/jellyfish-2.2.7.tar.gz && \\\n    tar xvf jellyfish-2.2.7.tar.gz && \\\n    cd jellyfish-2.2.7/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && rm jellyfish-2.2.7.tar.gz\n\n\n## Salmon\nWORKDIR $SRC\nRUN wget https://github.com/COMBINE-lab/salmon/releases/download/v0.9.1/Salmon-0.9.1_linux_x86_64.tar.gz && \\\n    tar xvf Salmon-0.9.1_linux_x86_64.tar.gz && \\\n    ln -s $SRC/Salmon-latest_linux_x86_64/bin/salmon $BIN/. && rm Salmon-0.9.1_linux_x86_64.tar.gz\n\n\n\nENV LD_LIBRARY_PATH=/usr/local/lib\n\nRUN pip install --no-cache-dir numpy\n\n\nRUN Rscript -e 'source(\"http://bioconductor.org/biocLite.R\");library(BiocInstaller); biocLite(\"fastcluster\", dep = TRUE)'\n\n## patch the RSEM install... need convert-sam-for-rsem  too!\nWORKDIR $SRC\nRUN wget https://github.com/deweylab/RSEM/archive/v1.3.0.tar.gz && \\\n\t tar xvf v1.3.0.tar.gz && \\\n     cd RSEM-1.3.0 && \\\n     make && \\\n     cp rsem-* $BIN && \\\n     cp convert-sam-for-rsem $BIN && \\\n     cp rsem_perl_utils.pm /usr/local/lib/site_perl/ && \\\n     cd ../ && rm -r RSEM-1.3.0 && rm v1.3.0.tar.gz\n\n# adding multiqc\nRUN pip install --no-cache-dir git+https://github.com/ewels/MultiQC.git\n\n\n\n\n##########\n## Trinity\n\n\nWORKDIR $SRC\n\nRUN apt-get update && apt-get install --no-install-recommends -y cmake && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y rsync && rm -rf /var/lib/apt/lists/*;\n\nENV TRINITY_VERSION=\"2.8.5\"\nENV TRINITY_CO=\"d35f3c1149bab077ca7c83f209627784469c41c6\"\n\nWORKDIR $SRC\n\nRUN git clone https://github.com/trinityrnaseq/trinityrnaseq.git && \\\n    cd trinityrnaseq && \\\n    git checkout $TRINITY_CO && \\\n    make && make plugins && \\\n    make install && \\\n    cd ../ && rm -r trinityrnaseq\n\nENV TRINITY_HOME /usr/local/bin/trinityrnaseq\n\nENV PATH=${TRINITY_HOME}:${PATH}\n\nCOPY Dockerfile $SRC/Dockerfile.$TRINITY_VERSION\n\n\n"
}