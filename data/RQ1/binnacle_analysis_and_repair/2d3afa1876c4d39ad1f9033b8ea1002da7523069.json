{
  "startTime": 1674247999951,
  "endTime": 1674248000175,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM  l41-nvidia-base\n\n# Install git, apt-add-repository and dependencies for iTorch\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    default-jre \\\n    git \\\n    hdf5-tools \\\n    ipython3 \\\n    libhdf5-serial-dev \\\n    libprotobuf-dev \\\n    libssl-dev \\\n    protobuf-compiler \\\n    python-pip \\\n    python-zmq \\\n    software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# Install Jupyter Notebook for iTorch\nRUN pip install --no-cache-dir notebook ipywidgets\n\n# Run Torch7 installation scripts (dependencies only)\nRUN git clone https://github.com/torch/distro.git /root/torch --recursive && \\\n    cd /root/torch && \\\n    bash install-deps && \\\n    ./install.sh\n\n# Export environment variables manually\nENV LUA_PATH='/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua'\nENV LUA_CPATH='/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so'\nENV PATH=/root/torch/install/bin:$PATH\nENV LD_LIBRARY_PATH=/root/torch/install/lib:$LD_LIBRARY_PATH\nENV DYLD_LIBRARY_PATH=/root/torch/install/lib:$DYLD_LIBRARY_PATH\nENV LUA_CPATH='/root/torch/install/lib/?.so;'$LUA_CPATH\n\n# Install cudnn manually as Torch opts for latest version\nRUN cd /root && \\\n    git clone https://github.com/deepmind/torch-hdf5.git && \\\n    cd torch-hdf5 && \\\n    luarocks make hdf5-0-0.rockspec LIBHDF5_LIBDIR=\"/usr/lib/x86_64-linux-gnu/\"\n\n# add FindCUDA to remove annoying warnings\nRUN wget https://github.com/hughperkins/FindCUDA/archive/v3.5-1.tar.gz -q -O FindCUDA-v3.5-1.tar.gz && \\\n    tar -zxf FindCUDA-v3.5-1.tar.gz && \\\n    cd FindCUDA-3.5-1 && \\\n    luarocks make rocks/findcuda-scm-1.rockspec && \\\n    rm /FindCUDA-v3.5-1.tar.gz\n\n# Install additional DenseCap dependencies\nRUN luarocks install torch\nENV CUDA_BIN_PATH=/usr/local/cuda-7.5\nRUN luarocks install cutorch\nRUN luarocks install nn\nRUN luarocks install image\nRUN luarocks install lua-cjson\nRUN luarocks install https://raw.githubusercontent.com/soumith/cudnn.torch/R4/cudnn-scm-1.rockspec\nRUN luarocks install https://raw.githubusercontent.com/qassemoquab/stnbhwd/master/stnbhwd-scm-1.rockspec\nRUN luarocks install https://raw.githubusercontent.com/jcjohnson/torch-rnn/master/torch-rnn-scm-1.rockspec\nRUN luarocks install loadcaffe\n\n# Install cuDNN\nRUN echo \"deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list\nENV CUDNN_VERSION 5\nLABEL com.nvidia.cudnn.version=\"5\"\nRUN apt-get update && apt-get install -y --no-install-recommends --force-yes \\\n        libcudnn5 \\\n        libcudnn5-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\n# GPU acceleratation\nRUN luarocks install cutorch\nRUN luarocks install cunn\nRUN luarocks install cudnn\n\n# Set ~/torch as working directory\nWORKDIR /root/torch\n"
}