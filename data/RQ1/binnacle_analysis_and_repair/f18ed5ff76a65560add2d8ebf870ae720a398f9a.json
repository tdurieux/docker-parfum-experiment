{
  "startTime": 1674244334768,
  "endTime": 1674244335079,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 1,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 1,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "# Dockerfile for devstats\n# Based on https://github.com/cncf/devstats/blob/master/INSTALL_UBUNTU17.md\nFROM golang:1.11.5\n\nRUN apt-get update -y && \\\n\tapt-get install --no-install-recommends -y apt-transport-https \\\n\tgit psmisc jsonlint yamllint gcc && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /go/src\n\nENV GOPATH /go\n\nRUN cd ${GOPATH}/src && \\\n\tgit clone https://github.com/cncf/devstats.git devstats\n\nRUN go get -u github.com/golang/lint/golint && \\\n  go get golang.org/x/tools/cmd/goimports\n\nRUN go get github.com/jgautheron/goconst/cmd/goconst && \\\n\tgo get github.com/jgautheron/usedexports\n\nRUN go get github.com/kisielk/errcheck && \\\n\tgo get github.com/lib/pq\n\nRUN go get golang.org/x/text/transform && \\\n\tgo get golang.org/x/text/unicode/norm\n\nRUN go get github.com/google/go-github/github && \\\n\tgo get golang.org/x/oauth2\n\nRUN go get gopkg.in/yaml.v2 && \\\n\tgo get github.com/mattn/go-sqlite3\n\n\n# Add /go/src/devstats to the path so that all the binaries will be on the path.\n# This is needed by the devstats binary.\nENV PATH $PATH:/etc/gha2db:/${GOPATH}/bin\n\n# Commit c905db8106d057f70a694ecd1276c9e32290152f is master on 02/14.\n# Recommendation from Devstats folks was to us master.\nRUN cd ${GOPATH}/src/devstats && \\\n\tgit checkout c905db8106d057f70a694ecd1276c9e32290152f && \\\n\tmake\n\nRUN  cd ${GOPATH}/src/devstats && \\\n\t make install\n\n# TODO(jlewi): Do we need to fix the userid of postgres so we can run as that user?\n\n# Create postgres user and group with fixed userid and groupid so we can run container as that user.\n#\nRUN groupadd -g 1000 postgres && \\\n\tuseradd -r -u 1000 -g postgres --create-home --shell=/bin/bash postgres\n\n# Install postgress\n#\n# This is based on\n# https://github.com/docker-library/postgres/blob/master\nRUN apt-get install --no-install-recommends -y postgresql-client postgresql sudo gosu && rm -rf /var/lib/apt/lists/*;\n\n# Install emacs\nRUN apt-get install --no-install-recommends -y emacs && rm -rf /var/lib/apt/lists/*;\n\n# Install Ruby this is used by gitdm\n# We set the environment because of this issue\n# https://stackoverflow.com/questions/17031651/invalid-byte-sequence-in-us-ascii-argument-error-when-i-run-rake-dbseed-in-ra\nENV RUBYOPT \"-KU -E utf-8:utf-8\"\n\nRUN apt-get install --no-install-recommends -y ruby gem && rm -rf /var/lib/apt/lists/*;\nRUN gem install bundle pry octokit\n\n# Keep this in sync with whatever package apt installs; maybe we should pin apt-install?\nENV PG_MAJOR 9.6\n\n# make the sample config easier to munge (and \"correct by default\")\nRUN mv -v \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\" /usr/share/postgresql/ \\\n\t&& ln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\" \\\n\t&& sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\n\nRUN mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql\n\nENV PATH $PATH:/usr/lib/postgresql/$PG_MAJOR/bin\n\nRUN mkdir -p /home/\nCOPY postgre-docker-entrypoint.sh /usr/local/bin/\nRUN chmod a+x /usr/local/bin/postgre-docker-entrypoint.sh\n\n# Add postgres to the sudoers group because some of the devstats scripts require it\nRUN adduser postgres sudo\n\nRUN addgroup --gid 472 grafana && \\\n\tadduser -u 472 --gid=472 grafana\n\n# Workaround for https://github.com/cncf/devstats/issues/166\n# devstats code assumes projects.yaml will be et /etc/gha2db\n# but we will mount it from NFS\n#\nRUN rm -rf /etc/gha2db && \\\n\tln -sf /mount/data/src/git_kubeflow-community/devstats/config /etc/gha2db\n\n# TODO(jlewi): Per the instructions for devstats we should increase the number of default connections for postgres\n"
}