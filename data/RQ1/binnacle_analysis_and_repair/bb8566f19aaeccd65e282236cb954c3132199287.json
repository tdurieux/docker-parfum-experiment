{
  "startTime": 1674249843993,
  "endTime": 1674249844215,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 21,
        "columnStart": 5,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.9\n\nRUN echo '@edgetesting http://dl-cdn.alpinelinux.org/alpine/edge/testing' \\\n  >> /etc/apk/repositories\n\nRUN apk --no-cache add \\\n    nodejs \\\n    npm \\\n    ffmpeg \\\n    android-tools@edgetesting \\\n  && npm install -g \\\n    npm@latest \\\n    @wdio/cli@^5.7.15 \\\n    @wdio/local-runner@^5.7.15 \\\n    @wdio/mocha-framework@^5.7.14 \\\n    @wdio/spec-reporter@^5.7.13 \\\n    @wdio/sync@^5.7.13 \\\n    chai@^4.2.0 \\\n    mailhog@^4.1.0 \\\n    uuid@^3.3.2 \\\n    wdio-screen-commands@^2.6.0 \\\n    webdriverio@^5.7.15 \\\n  # Clean up obsolete files: \\\n  && rm -rf \\\n    /tmp/* \\\n    /root/.npm && npm cache clean --force;\n\n# Set NODE_PATH to be able to require globally installed packages:\nENV NODE_PATH=/usr/lib/node_modules\n\n# Avoid permission issues with host mounts by assigning a user/group with\n# uid/gid 1000 (usually the ID of the first user account on GNU/Linux):\nRUN adduser -D -u 1000 wdio\n\nUSER wdio\n\nWORKDIR /opt\n\nCOPY bin/wait-for-hosts.sh /usr/local/bin/wait-for-hosts\n\nENTRYPOINT [\"wait-for-hosts\", \"--\", \"wdio\"]\n"
}