{
  "startTime": 1674249687904,
  "endTime": 1674249688043,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 3,
        "columnEnd": 44
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 3,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine \n\n# update TOR_VER and TOR_SHA for new version \n# (verify download with gpg signature & create sha256) \nENV TOR_ENV production \nENV TOR_VER 0.2.9.9 \nENV TOR_SHA 33325d2b250fd047ba2ddc5d11c2190c4e2951f4b03ec48ebd8bf0666e990d43 \n\nENV TOR_URL https://dist.torproject.org/tor-$TOR_VER.tar.gz \nENV TOR_FILE tor.tar.gz \nENV TOR_TEMP tor-$TOR_VER \n\nRUN apk add -U build-base gmp-dev libevent libevent-dev libgmpxx \\  \nopenssl openssl-dev python python-dev py-pip \\  \n&& wget -O $TOR_FILE $TOR_URL \\  \n&& sha256sum $TOR_FILE \\\n&& echo \"$TOR_SHA  $TOR_FILE\" | sha256sum -c \\\n&& tar xzf $TOR_FILE \\\n&& cd $TOR_TEMP \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/ --exec-prefix=/usr \\\n&& make install \\\n&& cd .. \\\n&& rm -rf $TOR_FILE $TOR_TEMP \\\n# && pip install fteproxy obfsproxy \\ \n# && rm -rf /root/.cache/pip/* \\ \n&& apk del build-base git gmp-dev go python-dev py-pip \\\n&& rm -rf /var/cache/apk/* \\\n&& addgroup -g 20000 -S tord && adduser -u 20000 -G tord -S tord \\\n&& chown -Rv tord:tord /home/tord/\n\nCOPY torrc.bridge /etc/tor/torrc.bridge \nCOPY torrc.middle /etc/tor/torrc.middle \nCOPY torrc.exit /etc/tor/torrc.exit \n\nCOPY config.sh /etc/tor/config.sh \nRUN chmod +x /etc/tor/config.sh \n\nVOLUME /etc/tor /home/tord/.tor \n\n# ORPort, DirPort, SocksPort, ObfsproxyPort \n#EXPOSE 9001 9030 9050 54444 \nEXPOSE 9001 9050 \nCMD /etc/tor/config.sh \n\n"
}