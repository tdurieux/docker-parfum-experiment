{
  "startTime": 1674249529906,
  "endTime": 1674249530040,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nMAINTAINER ivan\n\nARG MBS2_ENVIRONMENT\nENV LANG C.UTF-8\n\n# additional 12.04 depedencies\n#   add-apt-repository -y  ppa:fkrull/deadsnakes &&\\\n#    sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list' &&\\\n#    wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add - &&\\\n#   ...\n#ln -s /usr/bin/python3.5 /usr/bin/python3 &&\\\n\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y python-software-properties wget libffi-dev git build-essential && \\\n\t\tapt-get install --no-install-recommends -y python3.5 libpq-dev python3.5-dev && \\\n\t\twget https://bootstrap.pypa.io/get-pip.py && \\\n    python3 get-pip.py && \\\n    rm get-pip.py && rm -rf /var/lib/apt/lists/*;\n\n# RUN locale-gen en_US.UTF-8\n# ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'\n\nRUN mkdir /code &&\\\n    mkdir /data &&\\\n    chmod a+rwx /data\n\nWORKDIR /code\nADD requirements.txt /code/\nRUN pip3 install --no-cache-dir -r requirements.txt\nADD requirements-dev.txt /code\nRUN if [ \"X${MBS2_ENVIRONMENT}\" = \"Xdevelopment\" ]; then \\\n    pip3 install --no-cache-dir -r /code/requirements-dev.txt; \\\n    fi\n\n\n\n\n"
}