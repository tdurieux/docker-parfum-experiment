{
  "startTime": 1674240103223,
  "endTime": 1674240106276,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 5,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 5,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 158
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 5,
        "columnEnd": 83
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 209,
        "lineEnd": 209,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 538,
        "lineEnd": 538,
        "columnStart": 8,
        "columnEnd": 69
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 483,
        "lineEnd": 483,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 8,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 8,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 492,
        "lineEnd": 492,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 53,
        "columnEnd": 240
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 8,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 54,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 205,
        "lineEnd": 205,
        "columnStart": 22,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 215,
        "lineEnd": 215,
        "columnStart": 53,
        "columnEnd": 142
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 254,
        "lineEnd": 254,
        "columnStart": 53,
        "columnEnd": 221
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 318,
        "lineEnd": 318,
        "columnStart": 54,
        "columnEnd": 204
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 348,
        "lineEnd": 348,
        "columnStart": 23,
        "columnEnd": 132
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 353,
        "lineEnd": 353,
        "columnStart": 54,
        "columnEnd": 221
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 373,
        "lineEnd": 373,
        "columnStart": 23,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 392,
        "lineEnd": 392,
        "columnStart": 23,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 426,
        "lineEnd": 426,
        "columnStart": 53,
        "columnEnd": 120
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 480,
        "lineEnd": 480,
        "columnStart": 53,
        "columnEnd": 193
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 492,
        "lineEnd": 492,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 8,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 492,
        "lineEnd": 492,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "# ==============================================================================\n# Copyright (C) 2018-2019 Intel Corporation\n#\n# SPDX-License-Identifier: MIT\n# ==============================================================================\n\nFROM ubuntu:16.04 AS build\nWORKDIR /home\n\n# COMMON BUILD TOOLS\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y -q --no-install-recommends build-essential autoconf make git wget pciutils cpio libtool lsb-release ca-certificates pkg-config bison flex libcurl4-gnutls-dev zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n\n# Install cmake\nARG CMAKE_VER=3.13.1\nARG CMAKE_REPO=https://cmake.org/files\nRUN wget -O - ${CMAKE_REPO}/v${CMAKE_VER%.*}/cmake-${CMAKE_VER}.tar.gz | tar xz && \\\n    cd cmake-${CMAKE_VER} && \\\n    ./bootstrap --prefix=\"/usr\" --system-curl && \\\n    make -j8 && \\\n    make install\n\n# Install automake, use version 1.14 on CentOS\nARG AUTOMAKE_VER=1.14\nARG AUTOMAKE_REPO=https://ftp.gnu.org/pub/gnu/automake/automake-${AUTOMAKE_VER}.tar.xz\n    RUN apt-get install --no-install-recommends -y -q automake && rm -rf /var/lib/apt/lists/*;\n\n# Build NASM\nARG NASM_VER=2.13.03\nARG NASM_REPO=https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VER}/nasm-${NASM_VER}.tar.bz2\nRUN wget ${NASM_REPO} && \\\n     tar -xaf nasm* && \\\n     cd nasm-${NASM_VER} && \\\n     ./autogen.sh && \\\n     ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/usr\" --libdir=/usr/lib/x86_64-linux-gnu && \\\n     make -j8 && \\\n     make install\n\n# Build YASM\nARG YASM_VER=1.3.0\nARG YASM_REPO=https://www.tortall.net/projects/yasm/releases/yasm-${YASM_VER}.tar.gz\nRUN wget -O - ${YASM_REPO} | tar xz && \\\n     cd yasm-${YASM_VER} && \\\n     sed -i \"s/) ytasm.*/)/\" Makefile.in && \\\n     ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/usr\" --libdir=/usr/lib/x86_64-linux-gnu && \\\n     make -j8 && \\\n     make install\n\n# Build ogg\nARG OGG_VER=1.3.3\nARG OGG_REPO=https://downloads.xiph.org/releases/ogg/libogg-${OGG_VER}.tar.xz\n\nRUN wget -O - ${OGG_REPO} | tar xJ && \\\n    cd libogg-${OGG_VER} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/usr\" --libdir=/usr/lib/x86_64-linux-gnu --enable-shared && \\\n    make -j8 && \\\n    make install DESTDIR=/home/build && \\\n    make install\n\n# Build vorbis\nARG VORBIS_VER=1.3.6\nARG VORBIS_REPO=https://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VER}.tar.xz\n\nRUN wget -O - ${VORBIS_REPO} | tar xJ && \\\n    cd libvorbis-${VORBIS_VER} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/usr\" --libdir=/usr/lib/x86_64-linux-gnu --enable-shared && \\\n    make -j8 && \\\n    make install DESTDIR=/home/build && \\\n    make install\n\n# Build mp3lame\nARG MP3LAME_VER=3.100\nARG MP3LAME_REPO=https://sourceforge.net/projects/lame/files/lame/${MP3LAME_VER}/lame-${MP3LAME_VER}.tar.gz\n\nRUN wget -O - ${MP3LAME_REPO} | tar xz && \\\n    cd lame-${MP3LAME_VER} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/usr\" --libdir=/usr/lib/x86_64-linux-gnu --enable-shared --enable-nasm && \\\n    make -j8 && \\\n    make install DESTDIR=/home/build && \\\n    make install\n\n# Build fdk-aac\nARG FDK_AAC_VER=v0.1.6\nARG FDK_AAC_REPO=https://github.com/mstorsjo/fdk-aac/archive/${FDK_AAC_VER}.tar.gz\n\nRUN wget -O - ${FDK_AAC_REPO} | tar xz && mv fdk-aac-${FDK_AAC_VER#v} fdk-aac && \\\n    cd fdk-aac && \\\n    autoreconf -fiv && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/usr\" --libdir=/usr/lib/x86_64-linux-gnu --enable-shared && \\\n    make -j8 && \\\n    make install DESTDIR=/home/build && \\\n    make install\n\n\n# Build opus\nARG OPUS_VER=1.2.1\nARG OPUS_REPO=https://archive.mozilla.org/pub/opus/opus-${OPUS_VER}.tar.gz\n\nRUN wget -O - ${OPUS_REPO} | tar xz && \\\n    cd opus-${OPUS_VER} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/usr\" --libdir=/usr/lib/x86_64-linux-gnu --enable-shared && \\\n    make -j8 && \\\n    make install DESTDIR=/home/build && \\\n    make install\n\n# Build vpx\nARG VPX_VER=tags/v1.7.0\nARG VPX_REPO=https://chromium.googlesource.com/webm/libvpx.git\n\nRUN git clone ${VPX_REPO} && \\\n    cd libvpx && \\\n    git checkout ${VPX_VER} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/usr\" --libdir=/usr/lib/x86_64-linux-gnu --enable-shared --disable-examples --disable-unit-tests --enable-vp9-highbitdepth --as=nasm && \\\n    make -j8 && \\\n    make install DESTDIR=/home/build && \\\n    make install\n\n\n# Build AOM\nARG AOM_VER=b6f1767eedbaddeb1ff5aa409a710ef61078640e\nARG AOM_REPO=https://aomedia.googlesource.com/aom\n\nRUN  git clone ${AOM_REPO} && \\\n     mkdir aom/aom_build && \\\n     cd aom/aom_build && \\\n     git checkout ${AOM_VER} && \\\n     cmake -DBUILD_SHARED_LIBS=ON -DENABLE_NASM=ON -DENABLE_TESTS=OFF -DENABLE_DOCS=OFF -DCMAKE_INSTALL_PREFIX=\"/usr\" -DLIB_INSTALL_DIR=/usr/lib/x86_64-linux-gnu .. && \\\n     make -j8 && \\\n     make install DESTDIR=\"/home/build\" && \\\n     make install\n\n# Build x264\nARG X264_VER=stable\nARG X264_REPO=https://github.com/mirror/x264\n\nRUN git clone ${X264_REPO} && \\\n     cd x264 && \\\n     git checkout ${X264_VER} && \\\n     ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/usr\" --libdir=/usr/lib/x86_64-linux-gnu --enable-shared && \\\n     make -j8 && \\\n     make install DESTDIR=\"/home/build\" && \\\n     make install\n\n\n# Build x265\nARG X265_VER=2.9\nARG X265_REPO=https://github.com/videolan/x265/archive/${X265_VER}.tar.gz\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y -q --no-install-recommends libnuma-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN  wget -O - ${X265_REPO} | tar xz && mv x265-${X265_VER} x265 && \\\n     cd x265/build/linux && \\\n     cmake -DBUILD_SHARED_LIBS=ON -DENABLE_TESTS=OFF -DCMAKE_INSTALL_PREFIX=/usr -DLIB_INSTALL_DIR=/usr/lib/x86_64-linux-gnu ../../source && \\\n     make -j8 && \\\n     make install DESTDIR=\"/home/build\" && \\\n     make install\n\n# Fetch SVT-HEVC\nARG SVT_HEVC_VER=20a47b0d904e9d99e089d93d7c33af92788cbfdb\nARG SVT_HEVC_REPO=https://github.com/intel/SVT-HEVC\n\nRUN git clone ${SVT_HEVC_REPO} && \\\n    cd SVT-HEVC/Build/linux && \\\n    git checkout ${SVT_HEVC_VER} && \\\n    mkdir -p ../../Bin/Release && \\\n    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib/x86_64-linux-gnu -DCMAKE_ASM_NASM_COMPILER=yasm ../.. && \\\n    make -j8 && \\\n    make install DESTDIR=/home/build && \\\n    make install\n\n\n# Fetch SVT-AV1\nARG SVT_AV1_VER=90b56a80795d4d0448673c4c7276ce6d5c8ac9d4\nARG SVT_AV1_REPO=https://github.com/OpenVisualCloud/SVT-AV1\n\nRUN git clone ${SVT_AV1_REPO} && \\\n    cd SVT-AV1/Build/linux && \\\n    git checkout ${SVT_AV1_VER} && \\\n    mkdir -p ../../Bin/Release && \\\n    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib/x86_64-linux-gnu -DCMAKE_ASM_NASM_COMPILER=yasm ../.. && \\\n    make -j8 && \\\n    make install DESTDIR=/home/build && \\\n    make install\n\n#Remove build residue from SVT-AV1 build -- temp fix for bug\nRUN if [ -d \"build/home/\" ]; then rm -rf build/home/; fi\n\n\n# Fetch SVT-VP9\nARG SVT_VP9_VER=d18b4acf9139be2e83150e318ffd3dba1c432e74\nARG SVT_VP9_REPO=https://github.com/OpenVisualCloud/SVT-VP9\n\nRUN git clone ${SVT_VP9_REPO} && \\\n    cd SVT-VP9/Build/linux && \\\n    git checkout ${SVT_VP9_VER} && \\\n    mkdir -p ../../Bin/Release && \\\n    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib/x86_64-linux-gnu -DCMAKE_ASM_NASM_COMPILER=yasm ../.. && \\\n    make -j8 && \\\n    make install DESTDIR=/home/build && \\\n    make install\n\n# Build libdrm\nARG LIBDRM_VER=2.4.96\nARG LIBDRM_REPO=https://dri.freedesktop.org/libdrm/libdrm-${LIBDRM_VER}.tar.gz\n\nRUN apt-get update && apt-get install -y -q --no-install-recommends libpciaccess-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -O - ${LIBDRM_REPO} | tar xz && \\\n    cd libdrm-${LIBDRM_VER} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --libdir=/usr/lib/x86_64-linux-gnu && \\\n    make -j8 && \\\n    make install DESTDIR=/home/build && \\\n    make install;\n\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y -q --no-install-recommends libx11-dev xorg-dev libgl1-mesa-dev openbox && rm -rf /var/lib/apt/lists/*;\n\n# Build Intel(R) Media SDK\nARG MSDK_REPO=https://github.com/Intel-Media-SDK/MediaSDK/releases/download/intel-mediasdk-19.1.0/MediaStack.tar.gz\n\nRUN wget -O - ${MSDK_REPO} | tar xz && \\\n    cd MediaStack && \\\n    \\\n    cp -r opt/ /home/build && \\\n    cp -r etc/ /home/build && \\\n    \\\n    cp -a opt/. /opt/ && \\\n    cp -a etc/. /opt/ && \\\n    ldconfig\n\n\nENV LIBVA_DRIVERS_PATH=/opt/intel/mediasdk/lib64\nENV LIBVA_DRIVER_NAME=iHD\nENV PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/opt/intel/mediasdk/lib64/pkgconfig\nENV GST_VAAPI_ALL_DRIVERS=1\n\n#clinfo needs to be installed after build directory is copied over\nRUN mkdir neo && cd neo && \\\n    wget https://github.com/intel/compute-runtime/releases/download/19.04.12237/intel-gmmlib_18.4.1_amd64.deb && \\\n    wget https://github.com/intel/compute-runtime/releases/download/19.04.12237/intel-igc-core_18.50.1270_amd64.deb && \\\n    wget https://github.com/intel/compute-runtime/releases/download/19.04.12237/intel-igc-opencl_18.50.1270_amd64.deb && \\\n    wget https://github.com/intel/compute-runtime/releases/download/19.04.12237/intel-opencl_19.04.12237_amd64.deb && \\\n    wget https://github.com/intel/compute-runtime/releases/download/19.04.12237/intel-ocloc_19.04.12237_amd64.deb && \\\n    dpkg -i *.deb && \\\n    dpkg-deb -x intel-gmmlib_18.4.1_amd64.deb /home/build/ && \\\n    dpkg-deb -x intel-igc-core_18.50.1270_amd64.deb /home/build/ && \\\n    dpkg-deb -x intel-igc-opencl_18.50.1270_amd64.deb /home/build/ && \\\n    dpkg-deb -x intel-opencl_19.04.12237_amd64.deb /home/build/ && \\\n    dpkg-deb -x intel-ocloc_19.04.12237_amd64.deb /home/build/\n\n# Build DLDT-Inference Engine\nARG DLDT_VER=2019_R1.1\nARG DLDT_REPO=https://github.com/opencv/dldt.git\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install --no-install-recommends -y -q --no-install-recommends libusb-1.0-0-dev libboost-all-dev libgtk2.0-dev python3 python3-pip python3-setuptools python-yaml && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone -b ${DLDT_VER} ${DLDT_REPO} && \\\n    cd dldt && \\\n    git submodule init && \\\n    git submodule update --recursive && \\\n    cd inference-engine && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DENABLE_VALIDATION_SET=OFF -DCMAKE_INSTALL_PREFIX=/opt/intel/dldt -DLIB_INSTALL_PATH=/opt/intel/dldt -DENABLE_MKL_DNN=ON -DENABLE_CLDNN=ON -DENABLE_SAMPLE_CORE=OFF  .. && \\\n    make -j $(nproc) && \\\n    rm -rf ../bin/intel64/Release/lib/libgtest* && \\\n    rm -rf ../bin/intel64/Release/lib/libgmock* && \\\n    rm -rf ../bin/intel64/Release/lib/libmock* && \\\n    rm -rf ../bin/intel64/Release/lib/libtest*\n\nARG libdir=/opt/intel/dldt/inference-engine/lib/intel64\n\nRUN mkdir -p /opt/intel/dldt/inference-engine/include && \\\n    cp -r dldt/inference-engine/include/* /opt/intel/dldt/inference-engine/include && \\\n    mkdir -p ${libdir} && \\\n    cp -r dldt/inference-engine/bin/intel64/Release/lib/* ${libdir} && \\\n    mkdir -p /opt/intel/dldt/inference-engine/src && \\\n    cp -r dldt/inference-engine/src/* /opt/intel/dldt/inference-engine/src/ && \\\n    mkdir -p /opt/intel/dldt/inference-engine/share && \\\n    cp -r dldt/inference-engine/build/share/* /opt/intel/dldt/inference-engine/share/ && \\\n    mkdir -p /opt/intel/dldt/inference-engine/external/ && \\\n    cp -r dldt/inference-engine/temp/* /opt/intel/dldt/inference-engine/external/\n\nRUN mkdir -p build/opt/intel/dldt/inference-engine/include && \\\n    cp -r dldt/inference-engine/include/* build/opt/intel/dldt/inference-engine/include && \\\n    mkdir -p build${libdir} && \\\n    cp -r dldt/inference-engine/bin/intel64/Release/lib/* build${libdir} && \\\n    mkdir -p build/opt/intel/dldt/inference-engine/src && \\\n    cp -r dldt/inference-engine/src/* build/opt/intel/dldt/inference-engine/src/ && \\\n    mkdir -p build/opt/intel/dldt/inference-engine/share && \\\n    cp -r dldt/inference-engine/build/share/* build/opt/intel/dldt/inference-engine/share/ && \\\n    mkdir -p build/opt/intel/dldt/inference-engine/external/ && \\\n    cp -r dldt/inference-engine/temp/* build/opt/intel/dldt/inference-engine/external/\n\nRUN for p in /usr /home/build/usr /opt/intel/dldt/inference-engine /home/build/opt/intel/dldt/inference-engine; do \\\n        pkgconfiglibdir=\"$p/lib/x86_64-linux-gnu\" && \\\n        mkdir -p \"${pkgconfiglibdir}/pkgconfig\" && \\\n        pc=\"${pkgconfiglibdir}/pkgconfig/dldt.pc\" && \\\n        echo \"prefix=/opt\" > \"$pc\" && \\\n        echo \"libdir=${libdir}\" >> \"$pc\" && \\\n        echo \"includedir=/opt/intel/dldt/inference-engine/include\" >> \"$pc\" && \\\n        echo \"\" >> \"$pc\" && \\\n        echo \"Name: DLDT\" >> \"$pc\" && \\\n        echo \"Description: Intel Deep Learning Deployment Toolkit\" >> \"$pc\" && \\\n        echo \"Version: 5.0\" >> \"$pc\" && \\\n        echo \"\" >> \"$pc\" && \\\n        echo \"Libs: -L\\${libdir} -linference_engine -linference_engine_c_wrapper\" >> \"$pc\" && \\\n        echo \"Cflags: -I\\${includedir}\" >> \"$pc\"; \\\n    done;\n\nENV InferenceEngine_DIR=/opt/intel/dldt/inference-engine/share\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/intel/dldt/inference-engine/lib:/opt/intel/dldt/inference-engine/external/tbb/lib:${libdir}\n\n\n# Build the gstremaer core\nARG GST_VER=1.16.0\nARG GST_REPO=https://gstreamer.freedesktop.org/src/gstreamer/gstreamer-${GST_VER}.tar.xz\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y -q --no-install-recommends libglib2.0-dev gobject-introspection libgirepository1.0-dev libpango-1.0-0 libpangocairo-1.0-0 autopoint && rm -rf /var/lib/apt/lists/*;\nRUN  wget -O - ${GST_REPO} | tar xJ && \\\n     cd gstreamer-${GST_VER} && \\\n     ./autogen.sh \\\n        --prefix=/usr \\\n        --libdir=/usr/lib/x86_64-linux-gnu \\\n        --libexecdir=/usr/lib/x86_64-linux-gnu \\\n        --enable-shared \\\n        --enable-introspection \\\n        --disable-examples  \\\n        --disable-gtk-doc && \\\n     make -j $(nproc) && \\\n     make install DESTDIR=/home/build && \\\n     make install;\n\n# Build the gstremaer plugin bad set\nARG GST_ORC_VER=0.4.29\nARG GST_ORC_REPO=https://gstreamer.freedesktop.org/src/orc/orc-${GST_ORC_VER}.tar.xz\n\nRUN  wget -O - ${GST_ORC_REPO} | tar xJ && \\\n     cd orc-${GST_ORC_VER} && \\\n     ./autogen.sh --prefix=/usr --libdir=/usr/lib/x86_64-linux-gnu \\\n                --libexecdir=/usr/lib/x86_64-linux-gnu \\\n                --enable-shared \\\n                --disable-examples  \\\n                --disable-gtk-doc && \\\n     make -j $(nproc) && \\\n     make install DESTDIR=/home/build && \\\n     make install\n\nRUN apt-get update && apt-get install -y -q --no-install-recommends libxrandr-dev libegl1-mesa-dev autopoint bison flex libudev-dev && rm -rf /var/lib/apt/lists/*;\n\n# Build the gstremaer plugin base\nARG GST_PLUGIN_BASE_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-base/gst-plugins-base-${GST_VER}.tar.xz\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y -q --no-install-recommends libxv-dev libvisual-0.4-dev libtheora-dev libglib2.0-dev libasound2-dev libcdparanoia-dev libgl1-mesa-dev libpango1.0-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN  wget -O - ${GST_PLUGIN_BASE_REPO} | tar xJ && \\\n     cd gst-plugins-base-${GST_VER} && \\\n     ./autogen.sh \\\n        --prefix=/usr \\\n        --libdir=/usr/lib/x86_64-linux-gnu \\\n        --libexecdir=/usr/lib/x86_64-linux-gnu \\\n        --enable-introspection \\\n        --enable-shared \\\n        --disable-examples  \\\n        --disable-gtk-doc && \\\n     make -j $(nproc) && \\\n     make install DESTDIR=/home/build && \\\n     make install\n\n\n# Build the gstremaer plugin good set\nARG GST_PLUGIN_GOOD_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-good/gst-plugins-good-${GST_VER}.tar.xz\n\nRUN apt-get update && apt-get install -y -q --no-install-recommends libsoup2.4-dev libjpeg-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN  wget -O - ${GST_PLUGIN_GOOD_REPO} | tar xJ && \\\n     cd gst-plugins-good-${GST_VER} && \\\n     ./autogen.sh \\\n        --prefix=/usr \\\n        --libdir=/usr/lib/x86_64-linux-gnu \\\n        --libexecdir=/usr/lib/x86_64-linux-gnu \\\n        --enable-shared \\\n        --disable-examples  \\\n        --disable-gtk-doc && \\\n     make -j $(nproc) && \\\n     make install DESTDIR=/home/build && \\\n     make install\n\n\n# Build the gstremaer plugin bad set\nARG GST_PLUGIN_BAD_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-bad/gst-plugins-bad-${GST_VER}.tar.xz\n\nRUN apt-get update && apt-get install -y -q --no-install-recommends libssl-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN  wget -O - ${GST_PLUGIN_BAD_REPO} | tar xJ && \\\n     cd gst-plugins-bad-${GST_VER} && \\\n     ./autogen.sh \\\n        --prefix=/usr \\\n        --libdir=/usr/lib/x86_64-linux-gnu \\\n        --libexecdir=/usr/lib/x86_64-linux-gnu \\\n        --enable-shared \\\n        --disable-examples  \\\n        --disable-gtk-doc && \\\n     make -j $(nproc) && \\\n     make install DESTDIR=/home/build && \\\n     make install\n\n# Build the gstremaer plugin ugly set\nARG GST_PLUGIN_UGLY_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-ugly/gst-plugins-ugly-${GST_VER}.tar.xz\n\nRUN  wget -O - ${GST_PLUGIN_UGLY_REPO} | tar xJ; \\\n     cd gst-plugins-ugly-${GST_VER}; \\\n     ./autogen.sh \\\n        --prefix=/usr \\\n        --libdir=/usr/lib/x86_64-linux-gnu \\\n        --libexecdir=/usr/lib/x86_64-linux-gnu \\\n        --enable-shared \\\n        --disable-examples  \\\n        --disable-gtk-doc && \\\n     make -j $(nproc) && \\\n     make install DESTDIR=/home/build && \\\n     make install\n\n# Build gst-libav\nARG GST_PLUGIN_LIBAV_REPO=https://gstreamer.freedesktop.org/src/gst-libav/gst-libav-${GST_VER}.tar.xz\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y -q --no-install-recommends zlib1g-dev libssl-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -O - ${GST_PLUGIN_LIBAV_REPO} | tar xJ && \\\n    cd gst-libav-${GST_VER} && \\\n    ./autogen.sh \\\n        --prefix=\"/usr\" \\\n        --libdir=/usr/lib/x86_64-linux-gnu \\\n        --enable-shared \\\n        --enable-gpl \\\n        --disable-gtk-doc && \\\n    make -j $(nproc) && \\\n    make install DESTDIR=/home/build && \\\n    make install\n\n\n# Build gstremaer plugin for svt\n\nRUN cd SVT-HEVC/gstreamer-plugin && \\\n    cmake . && \\\n    make -j8 && \\\n    make install DESTDIR=/home/build && \\\n    make install\n\nRUN cd SVT-VP9/gstreamer-plugin && \\\n    cmake . && \\\n    make -j8 && \\\n    make install DESTDIR=/home/build && \\\n    make install\n\nRUN cd SVT-AV1/gstreamer-plugin && \\\n    cmake . && \\\n    make -j8 && \\\n    make install DESTDIR=/home/build && \\\n    make install\n\n# Build gstremaer plugin vaapi\nARG GST_PLUGIN_VAAPI_REPO=https://gstreamer.freedesktop.org/src/gstreamer-vaapi/gstreamer-vaapi-${GST_VER}.tar.xz\n\nRUN  wget -O - ${GST_PLUGIN_VAAPI_REPO} | tar xJ && \\\n    cd gstreamer-vaapi-${GST_VER} && \\\n     ./autogen.sh \\\n        --prefix=/usr \\\n        --libdir=/usr/lib/x86_64-linux-gnu \\\n        --libexecdir=/usr/lib/x86_64-linux-gnu \\\n        --enable-shared \\\n        --disable-examples \\\n        --disable-gtk-doc  && \\\n     make -j $(nproc) && \\\n     make install DESTDIR=/home/build && \\\n     make install\n\nARG OPENCV_VER=4.1.0\nARG OPENCV_REPO=https://github.com/opencv/opencv/archive/${OPENCV_VER}.tar.gz\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y -q --no-install-recommends libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev python-dev python-numpy && rm -rf /var/lib/apt/lists/*;\n\nRUN wget ${OPENCV_REPO} && \\\n    tar -zxvf ${OPENCV_VER}.tar.gz && \\\n    cd opencv-${OPENCV_VER} && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -D BUILD_EXAMPLES=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_DOCS=OFF -D BUILD_TESTS=OFF .. && \\\n    make -j $(nproc) && \\\n    make install DESTDIR=/home/build && \\\n    make install && rm ${OPENCV_VER}.tar.gz\n\nRUN apt-get install -y -q --no-install-recommends gtk-doc-tools && rm -rf /var/lib/apt/lists/*;\n\nARG PAHO_INSTALL=true\nARG PAHO_VER=1.3.0\nARG PAHO_REPO=https://github.com/eclipse/paho.mqtt.c/archive/v${PAHO_VER}.tar.gz\nRUN if [ \"$PAHO_INSTALL\" = \"true\" ] ; then \\\n        wget -O - ${PAHO_REPO} | tar -xz && \\\n        cd paho.mqtt.c-${PAHO_VER} && \\\n        make && \\\n        make install && \\\n        cp build/output/libpaho-mqtt3c.so.1.0 /home/build/usr/lib/x86_64-linux-gnu/ && \\\n        cp build/output/libpaho-mqtt3cs.so.1.0 /home/build/usr/lib/x86_64-linux-gnu/ && \\\n        cp build/output/libpaho-mqtt3a.so.1.0 /home/build/usr/lib/x86_64-linux-gnu/ && \\\n        cp build/output/libpaho-mqtt3as.so.1.0 /home/build/usr/lib/x86_64-linux-gnu/ && \\\n        cp build/output/paho_c_version /home/build/usr/bin/ && \\\n        cp build/output/samples/paho_c_pub /home/build/usr/bin/ && \\\n        cp build/output/samples/paho_c_sub /home/build/usr/bin/ && \\\n        cp build/output/samples/paho_cs_pub /home/build/usr/bin/ && \\\n        cp build/output/samples/paho_cs_sub /home/build/usr/bin/ && \\\n        chmod 644 /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3c.so.1.0 && \\\n        chmod 644 /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3cs.so.1.0 && \\\n        chmod 644 /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3a.so.1.0 && \\\n        chmod 644 /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3as.so.1.0 && \\\n        ln /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3c.so.1.0 /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3c.so.1 && \\\n        ln /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3cs.so.1.0 /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3cs.so.1 && \\\n        ln /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3a.so.1.0 /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3a.so.1 && \\\n        ln /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3as.so.1.0 /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3as.so.1 && \\\n        ln /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3c.so.1 /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3c.so && \\\n        ln /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3cs.so.1 /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3cs.so && \\\n        ln /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3a.so.1 /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3a.so && \\\n        ln /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3as.so.1 /home/build/usr/lib/x86_64-linux-gnu/libpaho-mqtt3as.so && \\\n        cp src/MQTTAsync.h /home/build/usr/include/ && \\\n        cp src/MQTTClient.h /home/build/usr/include/ && \\\n        cp src/MQTTClientPersistence.h /home/build/usr/include/ && \\\n        cp src/MQTTProperties.h /home/build/usr/include/ && \\\n        cp src/MQTTReasonCodes.h /home/build/usr/include/ && \\\n        cp src/MQTTSubscribeOpts.h /home/build/usr/include/; \\\n    else \\\n        echo \"PAHO install disabled\"; \\\n    fi\n\nARG RDKAFKA_INSTALL=true\nARG RDKAFKA_VER=1.0.0\nARG RDKAFKA_REPO=https://github.com/edenhill/librdkafka/archive/v${RDKAFKA_VER}.tar.gz\nRUN wget -O - ${RDKAFKA_REPO} | tar -xz && \\\n        cd librdkafka-${RDKAFKA_VER} && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --libdir=/usr/lib/x86_64-linux-gnu/ && \\\n        make && \\\n        make install && \\\n        make install DESTDIR=/home/build\n\nFROM ubuntu:16.04\nLABEL Description=\"This is the base image for GSTREAMER & DLDT Ubuntu 16.04 LTS\"\nLABEL Vendor=\"Intel Corporation\"\nWORKDIR /root\n\n# Prerequisites\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y -q --no-install-recommends libxv1 libxcb-shm0 libxcb-shape0 libxcb-xfixes0 libsdl2-2.0-0 libasound2 libvdpau1 \\\nlibnuma1 libass5 libssl1.0.0 libglib2.0 libpango-1.0-0 libpangocairo-1.0-0 gobject-introspection libudev1 libx11-xcb1 libgl1-mesa-glx libxrandr2 libegl1-mesa \\\nlibpng12-0 libvisual-0.4-0 libtheora0 libcdparanoia0 libsoup2.4-1 libjpeg8 libjpeg-turbo8 python3 python3-pip python-yaml \\\nlibgtk2.0 clinfo \\\n\\\nlibusb-1.0-0-dev libboost-all-dev libjson-c-dev \\\nbuild-essential cmake ocl-icd-opencl-dev wget gcovr vim git gdb ca-certificates libssl-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install\nCOPY --from=build /home/build /\n\nRUN echo \"\\\n/usr/local/lib\\n\\\n/usr/lib/x86_64-linux-gnu/gstreamer-1.0\\n\\\n/opt/intel/dldt/inference-engine/lib/intel64/\\n\\\n/opt/intel/dldt/inference-engine/external/tbb/lib\\n\\\n/opt/intel/dldt/inference-engine/external/mkltiny_lnx_20190131/lib\\n\\\n/opt/intel/dldt/inference-engine/external/vpu/hddl/lib\" > /etc/ld.so.conf.d/opencv-dldt-gst.conf && ldconfig\n\nENV LIBVA_DRIVERS_PATH=/opt/intel/mediasdk/lib64\nENV LIBVA_DRIVER_NAME=iHD\nENV PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/opt/intel/mediasdk/lib64/pkgconfig:${PKG_CONFIG_PATH}\nENV GST_VAAPI_ALL_DRIVERS=1\n\nENV DISPLAY=:0.0\n\nENV InferenceEngine_DIR=/opt/intel/dldt/inference-engine/share\n\nENV LIBRARY_PATH=${LIBRARY_PATH}:/usr/lib\nENV PATH=/usr/bin:/opt/intel/mediasdk/bin:${PATH}\nARG GIT_INFO\nARG SOURCE_REV\n\nCOPY . gstreamer-plugins\n\nRUN mkdir -p gstreamer-plugins/build \\\n        && cd gstreamer-plugins/build \\\n        && cmake \\\n        -DCMAKE_INSTALL_PREFIX=/usr .. \\\n        -DVERSION_PATCH=${SOURCE_REV} \\\n        -DGIT_INFO=${GIT_INFO} \\\n        -DBUILD_SHARED_LIBS=ON \\\n        -DCMAKE_INSTALL_PREFIX=/usr .. \\\n        && make -j $(nproc) \\\n        && make install \\\n        && echo \"/usr/lib/va-gstreamer-plugins\" >> /etc/ld.so.conf.d/opencv-dldt-gst.conf && ldconfig\nENV GST_PLUGIN_PATH=/usr/lib/va-gstreamer-plugins/\n"
}