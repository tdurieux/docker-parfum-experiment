{
  "startTime": 1674239048975,
  "endTime": 1674239049362,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 56,
        "columnStart": 1,
        "columnEnd": 54
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 17,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 63,
        "columnStart": 1,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 54,
        "lineEnd": 56,
        "columnStart": 1,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 64,
        "lineEnd": 65,
        "columnStart": 1,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lsiobase/alpine:arm64v8-3.8 as buildstage\n############## build stage ##############\n\nARG DAAPD_RELEASE\n\nRUN \\\n echo \"**** install build packages ****\" && \\\n apk add --no-cache \\\n\talsa-lib-dev \\\n\tautoconf \\\n\tautomake \\\n\tavahi-dev \\\n\tbash \\\n\tbsd-compat-headers \\\n\tconfuse-dev \\\n\tcurl \\\n\tcurl-dev \\\n\tffmpeg-dev \\\n\tfile \\\n\tflac-dev \\\n\tg++ \\\n\tgcc \\\n\tgettext-dev \\\n\tgnutls-dev \\\n\tgperf \\\n\tjson-c-dev \\\n\tlibcurl \\\n\tlibevent-dev \\\n\tlibgcrypt-dev \\\n\tlibogg-dev \\\n\tlibplist-dev \\\n\tlibressl-dev \\\n\tlibsodium-dev \\\n\tlibtool \\\n\tlibunistring-dev \\\n\tlibwebsockets-dev \\\n\tmake \\\n\topenjdk8-jre-base \\\n\tprotobuf-c-dev \\\n\tsqlite-dev \\\n\ttaglib-dev \\\n\ttar && \\\n apk add --no-cache \\\n\t--repository http://nl.alpinelinux.org/alpine/edge/testing \\\n\tlibantlr3c-dev \\\n\tmxml-dev && \\\n echo \"**** make antlr wrapper and compile forked-daapd ****\" && \\\n mkdir -p \\\n\t/tmp/source/forked-daapd && \\\n echo \\\n\t\"#!/bin/bash\" > /tmp/source/antlr3 && \\\n echo \\\n\t\"exec java -cp /tmp/source/antlr-3.4-complete.jar org.antlr.Tool \\\"\\$@\\\"\" >> /tmp/source/antlr3 && \\\n chmod a+x /tmp/source/antlr3 && \\\n curl -f -o \\\n /tmp/source/antlr-3.4-complete.jar -L \\\n\thttps://www.antlr3.org/download/antlr-3.4-complete.jar && \\\n if [ -z ${DAAPD_RELEASE+x} ]; then \\\n\tDAAPD_RELEASE=$( curl -f -sX GET \"https://api.github.com/repos/ejurgensen/forked-daapd/releases/latest\" \\\n\t| awk '/tag_name/{print $4;exit}' FS='[\"\"]') ; \\\n fi && \\\n curl -f -o \\\n /tmp/source/forked.tar.gz -L \\\n\t\"https://github.com/ejurgensen/forked-daapd/archive/${DAAPD_RELEASE}.tar.gz\" && \\\n tar xf /tmp/source/forked.tar.gz -C \\\n\t/tmp/source/forked-daapd --strip-components=1 && \\\n export PATH=\"/tmp/source:$PATH\" && \\\n cd /tmp/source/forked-daapd && \\\n autoreconf -i -v && \\\n ./configure \\\n\t--build=$CBUILD \\\n\t--disable-avcodecsend \\\n\t--enable-chromecast \\\n\t--enable-itunes \\\n\t--enable-lastfm \\\n\t--enable-mpd \\\n\t--host=$CHOST \\\n\t--infodir=/usr/share/info \\\n\t--localstatedir=/var \\\n\t--mandir=/usr/share/man \\\n\t--prefix=/usr \\\n\t--sysconfdir=/etc && \\\n make && \\\n make DESTDIR=/tmp/daapd-build install && \\\n mv /tmp/daapd-build/etc/forked-daapd.conf /tmp/daapd-build/etc/forked-daapd.conf.orig && rm /tmp/source/forked.tar.gz\n############## runtime stage ##############\nFROM lsiobase/alpine:arm64v8-3.8\n\n# set version label\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"sparklyballs\"\n\nRUN \\\n echo \"**** install runtime packages ****\" && \\\n apk add --no-cache \\\n\tavahi \\\n\tconfuse \\\n\tdbus \\\n\tffmpeg \\\n\tjson-c \\\n\tlibcurl \\\n\tlibevent \\\n\tlibgcrypt \\\n\tlibplist \\\n\tlibressl \\\n\tlibsodium \\\n\tlibunistring \\\n\tlibwebsockets \\\n\tprotobuf-c \\\n\tsqlite \\\n\tsqlite-libs && \\\n apk add --no-cache \\\n\t--repository http://nl.alpinelinux.org/alpine/edge/testing \\\n\tlibantlr3c \\\n\tmxml\n\n# copy buildstage and local files\nCOPY --from=buildstage /tmp/daapd-build/ /\nCOPY root/ /\n\n# ports and volumes\nEXPOSE 3689\nVOLUME /config /music\n"
}