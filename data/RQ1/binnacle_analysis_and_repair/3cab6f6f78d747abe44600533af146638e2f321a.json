{
  "startTime": 1674243498435,
  "endTime": 1674243498576,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nENV DEBIAN_FRONTEND noninteractive\n\nLABEL Description=\"This image is used to create an environment to contribute to the cakephp/cakephp-api-docs\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    nginx git curl \\\n    php \\\n    php-bz2 \\\n    php-json \\\n    php-mbstring \\\n    php-zip \\\n    php-xml \\\n    php-fpm \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir /website /root/.ssh\n\nRUN ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts\n\nARG GIT_COMMIT=master\n\nENV GIT_COMMIT ${GIT_COMMIT}\n\n# Clone and fetch tags not linked to current branch heads\nRUN git clone https://github.com/cakephp/cakephp.git /cakephp \\\n  && cd /cakephp \\\n  && git fetch origin --tags\n\nRUN git clone https://github.com/cakephp/chronos.git /chronos\n\nWORKDIR /data\n\nCOPY . /data\n\nRUN cd /cakephp && git fetch origin\n\nRUN cd /chronos && git fetch origin\n\nRUN cd /data \\\n  && ls -lah \\\n  && make clean build-all SOURCE_DIR=/cakephp CHRONOS_SOURCE_DIR=/chronos \\\n  && make deploy DEPLOY_DIR=/var/www/html\n\nRUN rm /var/www/html/index.nginx-debian.html \\\n  && mv /data/nginx.conf /etc/nginx/sites-enabled/default \\\n  && ls /etc/nginx/sites-enabled/ /etc/nginx/\n\n# forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n  && ln -sf /dev/stderr /var/log/nginx/error.log\n\nEXPOSE 80\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}