{
  "startTime": 1674250279917,
  "endTime": 1674250280002,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.8 as base\n\nENV TERM=dumb \\\n    LD_LIBRARY_PATH=/usr/local/lib:/usr/lib:/lib\n\nWORKDIR /graphql\n\nRUN apk add --no-cache nodejs-current npm \\\n    libev yarn libev-dev python jq \\\n    ca-certificates wget \\\n\t\tbash curl perl-utils \\\n\t\tgit patch gcc g++ musl-dev make m4 util-linux\n\nRUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub\nRUN wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.28-r0/glibc-2.28-r0.apk\nRUN apk add --no-cache glibc-2.28-r0.apk\n\nRUN npm install -g esy@next --unsafe-perm && npm cache clean --force;\n\nCOPY server.json /graphql/esy.json\n\nRUN esy install\nRUN esy\n\nCOPY . /graphql\n\nRUN esy b dune build @graphql --profile=docker\n\nRUN mv $(esy command-env --json | jq --raw-output .cur__target_dir)/default/src/server/main.exe /graphql/main.exe\n\nFROM scratch\n\nWORKDIR /graphql\n\nCOPY --from=base /graphql/main.exe main.exe\n"
}