{
  "startTime": 1674252937060,
  "endTime": 1674252937173,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM pypy:2\n\n# Install the necessary packages:\nRUN pip install --no-cache-dir Django~=1.11 psycopg2cffi Pillow pytz gevent gunicorn\n\n# Install pgbouncer:\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n    postgresql-common \\\n && apt-get clean && rm -rf /var/lib/apt/lists/* \\\n && mkdir -p /opt \\\n && cd /opt \\\n && git clone https://github.com/pgbouncer/pgbouncer.git \\\n && cd /opt/pgbouncer \\\n && git checkout pgbouncer_1_7_2 \\\n && git submodule init \\\n && git submodule update \\\n && ./autogen.sh \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-evdns=no \\\n && make \\\n && make install \\\n && rm -rf /opt/pgbouncer\n\n# Copy the files we need:\nCOPY cmbarter /usr/local/share/cmbarter/cmbarter/\nCOPY doc /usr/local/share/cmbarter/doc/\nCOPY static /usr/local/share/cmbarter/static/\nCOPY generate_regkeys.py /usr/local/bin/\nCOPY docker/read_secrets.sh /usr/local/bin/\n\n# \"read_secrets.sh\" verifies if CMBARTER_REGISTRATION_SECRET and\n#  CMBARTER_SECRET_KEY environment variables are set. If one is not\n#  set, it tries to set it to the contents of the file with the same\n#  name (the name of the variable) in the /run/secrets/ directory.\nENTRYPOINT [\"read_secrets.sh\"]\n\nCMD [\"gunicorn\", \"cmbarter.wsgi\"]\n\nEXPOSE 8000\n\nENV PYTHONPATH /usr/local/share/cmbarter\nENV GUNICORN_CMD_ARGS -b :8000 -k gevent --log-level=warning --access-logfile=- --error-logfile=-\n\n################################################################################\n\n# Set this to the number of worker processes for handling requests --\n# a positive integer generally in the 2-4 * $NUM_CORES range. You may\n# want to vary this a bit to find the best for your particular\n# workload.\nENV WEB_CONCURRENCY 1\n\n# Set this to your site domain name.\nENV CMBARTER_HOST localhost\n\n# Set this to the PostgreSQL database connection string.\nENV CMBARTER_DSN host=db dbname=cmbarter user=postgres password=mysecretpassword\n\n# Leave this variable empty or set it to a random, long, secret string.\nENV CMBARTER_SECRET_KEY=\n\n# This should point to a page telling more about the site.\nENV CMBARTER_ABOUT_US_URL https://sourceforge.net/projects/cmb/\n\n# This should be \"False\" in production.\nENV CMBARTER_DEBUG_MODE False\n\n# Sign-up and log-in settings:\nENV CMBARTER_MIN_PASSWORD_LENGTH 10\nENV CMBARTER_SHOW_CAPTCHA_ON_SIGNUP True\nENV CMBARTER_SHOW_CAPTCHA_ON_REPETITIVE_LOGIN_FAILURE True\n\n# By default, CMB is configured to show CAPTHCA on sign-up, and after\n# five unsuccessful attempts to log-in. If you have not altered the\n# default behavior, you should obtain your own public/private key pair\n# from www.google.com/recaptcha, and put it here:\nENV CMBARTER_RECAPTCHA_PUBLIC_KEY 6Ledx7wSAAAAAICFw8vB-2ghpDjzGogPRi6-3FCr\nENV CMBARTER_RECAPTCHA_PIVATE_KEY 6Ledx7wSAAAAAEskQ7Mbi-oqneHDSFVUkxGitn_y\n\n# If a non-empty string is set as registration secret, CMB will\n# require a registration key for users to sign up. In this case\n# \"generate_regkeys.py\" can be used to generate user registration\n# keys. Also, an URL can be specified that redirects to a web page\n# where users are told how to obtain a registration key.\nENV CMBARTER_REGISTRATION_SECRET=\nENV CMBARTER_REGISTRATION_KEY_HELP_URL=\n\n# The time zone of your users. For example: Europe/Rome\nENV CMBARTER_DEFAULT_USERS_TIME_ZONE=\n\n# Set this to a page where users can search for trusted partners.\nENV CMBARTER_SEARCH_PARTNERS_URL=\n\n# This is the maximum size in bytes for users' uploaded photographs.\nENV CMBARTER_MAX_IMAGE_SIZE 716800\n\n# This is the maximum amount of pixels (width * height) in users'\n# uploaded photographs.\nENV CMBARTER_MAX_IMAGE_PIXELS 30000000\n\n# By default, CMB is configured to maintain a whitelist of \"good\" IP\n# addresses. This auto-generated whitelist can be used to configure\n# your firewall to protect your web-servers from DoS attacks. To be\n# able to reliably determine the IP addresses of your clients, CMB\n# should know the IP address(es) of all reverse proxy servers in your\n# network. Normally, here you should substitute 'proxy' with the name\n# or the IP of your reverse-proxy server. If you have more than one\n# reverse-proxy in your network, you should pass them all like this:\n# hosts(\\'proxy1\\', \\'proxy2\\', \\'proxy3\\')\n#\n# NOTE: The backslashes are needed to escape the quotes.\nENV CMBARTER_REVERSE_PROXIES hosts(\\'proxy\\')\n"
}