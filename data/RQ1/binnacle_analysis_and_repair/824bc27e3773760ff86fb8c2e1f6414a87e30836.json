{
  "startTime": 1674243466941,
  "endTime": 1674243467367,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#FROM gliderlabs/alpine:latest\nFROM supermy/base-alpine:latest\n\n\nMAINTAINER JamesMo\n\nRUN apk update && \\\n    apk add curl git openssh-client ca-certificates openssl-dev make gcc g++ musl-dev perl \\\n            bash wget tar gzip unzip && \\\n    rm /var/cache/apk/*\n\nENV PCRE_VERSION      8.38\nENV OPENRESTY_VERSION 1.9.7.4\nENV LUAROCKS_VERSION  2.3.0\n\nRUN cd /tmp && \\\n    wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-${PCRE_VERSION}.tar.gz && \\\n    tar zxf pcre-${PCRE_VERSION}.tar.gz && rm pcre-${PCRE_VERSION}.tar.gz\n\n# openresty\nRUN cd /tmp && \\\n    wget https://openresty.org/download/openresty-${OPENRESTY_VERSION}.tar.gz && \\\n    tar zxf openresty-${OPENRESTY_VERSION}.tar.gz && \\\n    cd openresty-${OPENRESTY_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-luajit --prefix=/usr/local \\\n        --with-pcre=/tmp/pcre-${PCRE_VERSION} --with-pcre-jit \\\n        --with-luajit-xcflags=-DLUAJIT_ENABLE_LUA52COMPAT \\\n        --http-client-body-temp-path=/var/nginx/client_body_temp \\\n        --http-proxy-temp-path=/var/nginx/proxy_temp \\\n        --http-log-path=/var/nginx/access.log \\\n        --error-log-path=/var/nginx/error.log \\\n        --pid-path=/var/nginx/nginx.pid \\\n        --lock-path=/var/nginx/nginx.lock \\\n        --with-http_gunzip_module \\\n        --with-http_stub_status_module \\\n        --with-http_ssl_module \\\n        --with-http_realip_module \\\n        --without-http_fastcgi_module \\\n        --without-http_uwsgi_module \\\n        --without-http_scgi_module \\\n        --with-md5-asm \\\n        --with-sha1-asm && \\\n    make && \\\n    make install && \\\n    rm -rf openresty-* && \\\n    rm -rf pcre-* && rm openresty-${OPENRESTY_VERSION}.tar.gz\n\n# luarocks\nRUN cd /tmp && \\\n    wget https://luarocks.org/releases/luarocks-${LUAROCKS_VERSION}.tar.gz && \\\n    tar -xzvf luarocks-${LUAROCKS_VERSION}.tar.gz && \\\n    cd luarocks-${LUAROCKS_VERSION}/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/luajit \\\n        --with-lua=/usr/local/luajit/ \\\n        --with-lua-include=/usr/local/luajit/include/luajit-2.1 \\\n        --lua-suffix=jit && \\\n    make && \\\n    make install && \\\n    rm -rf luarocks-* && rm luarocks-${LUAROCKS_VERSION}.tar.gz\n\n# symlink\nRUN ln -s /usr/local/nginx/sbin/nginx /usr/bin/nginx && \\\n    ln -s /usr/local/luajit/bin/luajit /usr/bin/lua && \\\n    ln -s /usr/local/luajit/bin/luarocks /usr/bin/luarocks\n"
}