{
  "startTime": 1674236802309,
  "endTime": 1674236802373,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 2,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 2,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 2,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# The Dockerfile is the description of all the commands to run to assemble the image.\n# Read about all the commands here: https://docs.docker.com/engine/reference/builder/\n\n# We also have a docker-compose.yml file, which is used to build and run this Docker image.\n\n\n# Start from the official Node 8 image. https://hub.docker.com/_/node/\nFROM node:8\n\n# Disable update check\nENV NO_UPDATE_NOTIFIER=true\n\n# Set the working directory for following commands.\nENV HOME=/app\nWORKDIR /app\n\n# Add a user so that we don't run as root:\n#  https://github.com/telusdigital/reference-architecture/blob/3ff683dd68b247ac9a3febda828105fe52cd9390/delivery/docker.md#root-vs-user-mode\nRUN set -ex && \\\n  adduser node root && \\\n  chmod g+w /app\n\n# Copy only the files necessary to install dependencies into the working directory.\n# Docker builds the image in layers and caches them. Because the app files change more often than the dependencies, we\n#  copy the app files only after we install the depencendies.\nCOPY package.json package-lock.json lerna.json ./\n\n# Install git, which is necessary for the install process.\nRUN apt-get update && \\\n  apt-get install -y --no-install-recommends git && rm -rf /var/lib/apt/lists/*;\n\n# Install dependencies.\nRUN set -ex && \\\n  npm ci\n\n# Copy all source and test files into the working directory.\n# We use a .dockerignore file to prevent unnecessary or large files from being inadvertently copied.\nCOPY . /app\n\n# Build the app.\nRUN npx lerna bootstrap --hoist && \\\n  npm run build -- --all && \\\n  ./scripts/ci-build-docs.sh\n\n# Set the container's user to the newly created one.\nUSER node\n\n# The entrypoint configures the container to be run as an executable.\n# Arguments supplied on the command line will be forwarded onto the entrypoint.\nENTRYPOINT [\"npm\", \"run\"]\n"
}