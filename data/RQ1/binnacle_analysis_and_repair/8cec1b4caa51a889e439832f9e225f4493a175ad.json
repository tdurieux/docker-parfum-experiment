{
  "startTime": 1674250256168,
  "endTime": 1674250258029,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 306,
        "lineEnd": 306,
        "columnStart": 6,
        "columnEnd": 40
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 6,
        "columnEnd": 121
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 6,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 6,
        "columnEnd": 152
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 48,
        "columnStart": 6,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 68,
        "columnStart": 6,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 89,
        "lineEnd": 91,
        "columnStart": 6,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 112,
        "lineEnd": 113,
        "columnStart": 6,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 165,
        "lineEnd": 166,
        "columnStart": 6,
        "columnEnd": 48
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 186,
        "lineEnd": 187,
        "columnStart": 6,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 206,
        "lineEnd": 207,
        "columnStart": 6,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 242,
        "lineEnd": 243,
        "columnStart": 6,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 352,
        "lineEnd": 354,
        "columnStart": 6,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 127,
        "lineEnd": 130,
        "columnStart": 22,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 177,
        "lineEnd": 177,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 217,
        "lineEnd": 217,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 232,
        "lineEnd": 232,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 255,
        "lineEnd": 255,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 302,
        "lineEnd": 302,
        "columnStart": 22,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 362,
        "lineEnd": 362,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 369,
        "lineEnd": 369,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 127,
        "lineEnd": 130,
        "columnStart": 22,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 177,
        "lineEnd": 177,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 217,
        "lineEnd": 217,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 232,
        "lineEnd": 232,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 255,
        "lineEnd": 255,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 302,
        "lineEnd": 302,
        "columnStart": 22,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 362,
        "lineEnd": 362,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 369,
        "lineEnd": 369,
        "columnStart": 22,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM judge0/buildpack-deps:jessie-2017-03-21\n\nRUN apt-get update && apt-get upgrade -y\n\nENV GCC_VERSIONS \\\n       7.2.0 \\\n       6.4.0 \\\n       6.3.0 \\\n       5.4.0 \\\n       4.9.4 \\\n       4.8.5\nRUN set -xe && \\\n    for GCC_VERSION in $GCC_VERSIONS; do \\\n      curl -fSsL \"https://ftpmirror.gnu.org/gcc/gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.gz\" -o /tmp/gcc-$GCC_VERSION.tar.gz; \\\n    done; \\\n    for GCC_VERSION in $GCC_VERSIONS; do \\\n      mkdir /tmp/gcc-$GCC_VERSION && \\\n      tar -xf /tmp/gcc-$GCC_VERSION.tar.gz -C /tmp/gcc-$GCC_VERSION --strip-components=1 && \\\n      rm /tmp/gcc-$GCC_VERSION.tar.gz && \\\n      cd /tmp/gcc-$GCC_VERSION && \\\n      ./contrib/download_prerequisites && \\\n      { rm *.tar.* || true; } && \\\n      tmpdir=\"$(mktemp -d)\" && \\\n      cd \"$tmpdir\" && \\\n      /tmp/gcc-$GCC_VERSION/configure \\\n        --disable-multilib \\\n        --enable-languages=c,c++ \\\n        --prefix=/usr/local/gcc-$GCC_VERSION && \\\n      make -j\"$(nproc)\" && \\\n      make install-strip && \\\n      rm -rf \"$tmpdir\" /tmp/gcc-$GCC_VERSION; \\\n    done\n\n\n\nENV OCTAVE_VERSIONS \\\n      4.2.0\nRUN set -xe && \\\n    apt-get update && apt-get install --no-install-recommends -y gfortran libblas-dev liblapack-dev libpcre3-dev && \\\n    for OCTAVE_VERSION in $OCTAVE_VERSIONS; do \\\n      curl -fSsL \"https://ftp.gnu.org/gnu/octave/octave-$OCTAVE_VERSION.tar.gz\" -o /tmp/octave-$OCTAVE_VERSION.tar.gz; \\\n    done; rm -rf /var/lib/apt/lists/*; \\\n    for OCTAVE_VERSION in $OCTAVE_VERSIONS; do \\\n      mkdir /tmp/octave-$OCTAVE_VERSION && \\\n      tar -xf /tmp/octave-$OCTAVE_VERSION.tar.gz -C /tmp/octave-$OCTAVE_VERSION --strip-components=1 && \\\n      rm /tmp/octave-$OCTAVE_VERSION.tar.gz && \\\n      cd /tmp/octave-$OCTAVE_VERSION && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr/local/octave-$OCTAVE_VERSION && \\\n      make -j\"$(nproc)\" && make install && \\\n      rm -rf /tmp/octave-$OCTAVE_VERSION; \\\n    done\n\n\n\nENV BASH_VERSIONS \\\n      4.4 \\\n      4.0\nRUN set -xe && \\\n    for BASH_VERSION in $BASH_VERSIONS; do \\\n      curl -fSsL \"https://ftpmirror.gnu.org/bash/bash-$BASH_VERSION.tar.gz\" -o /tmp/bash-$BASH_VERSION.tar.gz; \\\n    done; \\\n    for BASH_VERSION in $BASH_VERSIONS; do \\\n      mkdir /tmp/bash-$BASH_VERSION && \\\n      tar -xf /tmp/bash-$BASH_VERSION.tar.gz -C /tmp/bash-$BASH_VERSION --strip-components=1 && \\\n      rm /tmp/bash-$BASH_VERSION.tar.gz && \\\n      cd /tmp/bash-$BASH_VERSION && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr/local/bash-$BASH_VERSION && \\\n      make -j\"$(nproc)\" && make install && \\\n      rm -rf /tmp/bash-$BASH_VERSION; \\\n    done\n\n\n\nENV RUBY_VERSIONS \\\n      2.4.0 \\\n      2.3.3 \\\n      2.2.6 \\\n      2.1.9\nRUN set -xe && \\\n    for RUBY_VERSION in $RUBY_VERSIONS; do \\\n      curl -fSsL \"https://cache.ruby-lang.org/pub/ruby/ruby-$RUBY_VERSION.tar.gz\" -o /tmp/ruby-$RUBY_VERSION.tar.gz; \\\n    done; \\\n    for RUBY_VERSION in $RUBY_VERSIONS; do \\\n      mkdir /tmp/ruby-$RUBY_VERSION && \\\n      tar -xf /tmp/ruby-$RUBY_VERSION.tar.gz -C /tmp/ruby-$RUBY_VERSION --strip-components=1 && \\\n      rm /tmp/ruby-$RUBY_VERSION.tar.gz && \\\n      cd /tmp/ruby-$RUBY_VERSION && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --disable-install-doc \\\n        --prefix=/usr/local/ruby-$RUBY_VERSION && \\\n      make -j\"$(nproc)\" && make install && \\\n      rm -rf /tmp/ruby-$RUBY_VERSION; \\\n    done\n\n\n\nENV PYTHON_VERSIONS \\\n      3.6.0 \\\n      3.5.3 \\\n      2.7.9 \\\n      2.6.9\nRUN set -xe && \\\n    for PYTHON_VERSION in $PYTHON_VERSIONS; do \\\n      curl -fSsL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz\" -o /tmp/python-$PYTHON_VERSION.tar.xz; \\\n    done; \\\n    for PYTHON_VERSION in $PYTHON_VERSIONS; do \\\n      mkdir /tmp/python-$PYTHON_VERSION && \\\n      tar -xf /tmp/python-$PYTHON_VERSION.tar.xz -C /tmp/python-$PYTHON_VERSION --strip-components=1 && \\\n      rm /tmp/python-$PYTHON_VERSION.tar.xz && \\\n      cd /tmp/python-$PYTHON_VERSION && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr/local/python-$PYTHON_VERSION && \\\n      make -j\"$(nproc)\" && make install && \\\n      rm -rf /tmp/python-$PYTHON_VERSION; \\\n    done\n\n\n\n# see https://bugs.debian.org/775775\n# and https://github.com/docker-library/java/issues/19#issuecomment-70546872\nRUN set -xe && \\\n    JAVA_8_DEBIAN_VERSION=8u131-b11-1~bpo8+1 && \\\n    JAVA_7_DEBIAN_VERSION=7u151-2.6.11-1~deb8u1 && \\\n    CA_CERTIFICATES_JAVA_VERSION=20161107~bpo8+1 && \\\n    echo 'deb http://deb.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list && \\\n    apt-get update && apt-get install --no-install-recommends -y \\\n      openjdk-8-jdk=\"$JAVA_8_DEBIAN_VERSION\" \\\n      openjdk-7-jdk=\"$JAVA_7_DEBIAN_VERSION\" \\\n      ca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\" && \\\n    update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java && \\\n    update-alternatives --set javac /usr/lib/jvm/java-8-openjdk-amd64/bin/javac && rm -rf /var/lib/apt/lists/*;\nRUN set -xe && \\\n    curl -fSsL \"https://github.com/AdoptOpenJDK/openjdk9-openj9-releases/releases/download/jdk-9%2B181/OpenJDK9-OPENJ9_x64_Linux_jdk-9.181.tar.gz\" -o /tmp/openjdk9-openj9.tar.gz && \\\n    mkdir /usr/local/openjdk9-openj9 && \\\n    tar -xf /tmp/openjdk9-openj9.tar.gz -C /usr/local/openjdk9-openj9 --strip-components=2 && \\\n    rm /tmp/openjdk9-openj9.tar.gz\n\n\n\nRUN set -xe && \\\n    curl -fSsL \"ftp://ftp.freepascal.org/fpc/dist/3.0.0/x86_64-linux/fpc-3.0.0.x86_64-linux.tar\" -o /tmp/fpc-3.0.0.tar && \\\n    mkdir /tmp/fpc-3.0.0 && \\\n    tar -xf /tmp/fpc-3.0.0.tar -C /tmp/fpc-3.0.0 --strip-components=1 && \\\n    rm /tmp/fpc-3.0.0.tar && \\\n    cd /tmp/fpc-3.0.0 && \\\n    echo \"/usr/local/fpc-3.0.0\" | sh install.sh && \\\n    rm -rf /tmp/fpc-3.0.0\n\n\n\nENV HASKELL_VERSIONS \\\n      8.2.1 \\\n      8.0.2\nRUN set -xe && \\\n    apt-get update && apt-get install --no-install-recommends -y libgmp-dev && \\\n    for HASKELL_VERSION in $HASKELL_VERSIONS; do \\\n      curl -fSsL \"https://downloads.haskell.org/~ghc/$HASKELL_VERSION/ghc-$HASKELL_VERSION-x86_64-deb8-linux.tar.xz\" -o /tmp/ghc-$HASKELL_VERSION.tar.xz; \\\n    done; rm -rf /var/lib/apt/lists/*; \\\n    for HASKELL_VERSION in $HASKELL_VERSIONS; do \\\n      mkdir /tmp/ghc-$HASKELL_VERSION && \\\n      tar -xf /tmp/ghc-$HASKELL_VERSION.tar.xz -C /tmp/ghc-$HASKELL_VERSION --strip-components=1 && \\\n      rm /tmp/ghc-$HASKELL_VERSION.tar.xz && \\\n      cd /tmp/ghc-$HASKELL_VERSION && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr/local/ghc-$HASKELL_VERSION && \\\n      make install && \\\n      rm -rf /tmp/ghc-$HASKELL_VERSION; \\\n    done\n\n\n\nENV MONO_VERSIONS \\\n      5.4.0.167 \\\n      5.2.0.224\nRUN set -xe && \\\n    apt-get update && apt-get install --no-install-recommends -y cmake && \\\n    for MONO_VERSION in $MONO_VERSIONS; do \\\n      curl -fSsL \"https://download.mono-project.com/sources/mono/mono-$MONO_VERSION.tar.bz2\" -o /tmp/mono-$MONO_VERSION.tar.bz2; \\\n    done; rm -rf /var/lib/apt/lists/*; \\\n    for MONO_VERSION in $MONO_VERSIONS; do \\\n      mkdir /tmp/mono-$MONO_VERSION && \\\n      tar -xf /tmp/mono-$MONO_VERSION.tar.bz2 -C /tmp/mono-$MONO_VERSION --strip-components=1 && \\\n      rm /tmp/mono-$MONO_VERSION.tar.bz2 && \\\n      cd /tmp/mono-$MONO_VERSION && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr/local/mono-$MONO_VERSION && \\\n      make -j\"$(nproc)\" && make install && \\\n      rm -rf /tmp/mono-$MONO_VERSION; \\\n    done\n\n\n\nENV NODE_VERSIONS \\\n      8.5.0  \\\n      7.10.1\nRUN set -xe && \\\n    for NODE_VERSION in $NODE_VERSIONS; do \\\n      curl -fSsL \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.gz\" -o /tmp/node-$NODE_VERSION.tar.gz; \\\n    done; \\\n    for NODE_VERSION in $NODE_VERSIONS; do \\\n      mkdir /tmp/node-$NODE_VERSION && \\\n      tar -xf /tmp/node-$NODE_VERSION.tar.gz -C /tmp/node-$NODE_VERSION --strip-components=1 && \\\n      rm /tmp/node-$NODE_VERSION.tar.gz && \\\n      cd /tmp/node-$NODE_VERSION && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr/local/node-$NODE_VERSION && \\\n      make -j\"$(nproc)\" && make install && \\\n      rm -rf /tmp/node-$NODE_VERSION; \\\n    done\n\n\n\nENV CLOJURE_VERSIONS \\\n      1.8.0\nRUN set -xe && \\\n    apt-get update && apt-get install --no-install-recommends -y unzip && \\\n    for CLOJURE_VERSION in $CLOJURE_VERSIONS; do \\\n      curl -fSsL \"https://repo1.maven.org/maven2/org/clojure/clojure/$CLOJURE_VERSION/clojure-$CLOJURE_VERSION.zip\" -o /tmp/clojure-$CLOJURE_VERSION.zip; \\\n    done; rm -rf /var/lib/apt/lists/*; \\\n    for CLOJURE_VERSION in $CLOJURE_VERSIONS; do \\\n      unzip -d /usr/local /tmp/clojure-$CLOJURE_VERSION.zip && \\\n      chmod -R 755 /usr/local/clojure-$CLOJURE_VERSION && \\\n      rm /tmp/clojure-$CLOJURE_VERSION.zip; \\\n    done\n\n\n\nENV ERLANG_VERSIONS \\\n      20.0\nRUN set -xe && \\\n    apt-get update && apt-get install --no-install-recommends -y unzip && \\\n    for ERLANG_VERSION in $ERLANG_VERSIONS; do \\\n      curl -fSsL \"https://github.com/erlang/otp/archive/OTP-$ERLANG_VERSION.tar.gz\" -o /tmp/erlang-$ERLANG_VERSION.tar.gz; \\\n    done; rm -rf /var/lib/apt/lists/*; \\\n    for ERLANG_VERSION in $ERLANG_VERSIONS; do \\\n      mkdir /tmp/erlang-$ERLANG_VERSION && \\\n      tar -xf /tmp/erlang-$ERLANG_VERSION.tar.gz -C /tmp/erlang-$ERLANG_VERSION --strip-components=1 && \\\n      rm /tmp/erlang-$ERLANG_VERSION.tar.gz && \\\n      cd /tmp/erlang-$ERLANG_VERSION && \\\n      ERL_TOP=$(pwd) ./otp_build autoconf && \\\n      ERL_TOP=$(pwd) ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr/local/erlang-$ERLANG_VERSION && \\\n      make -j\"$(nproc)\" && make install && \\\n      rm -rf /tmp/erlang-$ERLANG_VERSION; \\\n    done\n# set default Erlang version for Elixir\nRUN ln -s /usr/local/erlang-20.0/bin/erl /usr/local/bin/erl\n\n\n\nENV ELIXIR_VERSIONS \\\n      1.5.1\nRUN set -xe && \\\n    apt-get update && apt-get install --no-install-recommends -y unzip && \\\n    for ELIXIR_VERSION in $ELIXIR_VERSIONS; do \\\n      curl -fSsL \"https://github.com/elixir-lang/elixir/releases/download/v$ELIXIR_VERSION/Precompiled.zip\" -o /tmp/elixir-$ELIXIR_VERSION.zip; \\\n    done; rm -rf /var/lib/apt/lists/*; \\\n    for ELIXIR_VERSION in $ELIXIR_VERSIONS; do \\\n      unzip -d /usr/local/elixir-$ELIXIR_VERSION /tmp/elixir-$ELIXIR_VERSION.zip && \\\n      rm /tmp/elixir-$ELIXIR_VERSION.zip; \\\n    done\n\n\n\nENV RUST_VERSIONS \\\n      1.20.0\nRUN set -xe && \\\n    for RUST_VERSION in $RUST_VERSIONS; do \\\n      curl -fSsL \"https://static.rust-lang.org/dist/rust-$RUST_VERSION-x86_64-unknown-linux-gnu.tar.gz\" -o /tmp/rust-$RUST_VERSION.tar.gz; \\\n    done; \\\n    for RUST_VERSION in $RUST_VERSIONS; do \\\n      mkdir /tmp/rust-$RUST_VERSION && \\\n      tar -xf /tmp/rust-$RUST_VERSION.tar.gz -C /tmp/rust-$RUST_VERSION --strip-components=1 && \\\n      rm /tmp/rust-$RUST_VERSION.tar.gz && \\\n      cd /tmp/rust-$RUST_VERSION && \\\n      ./install.sh \\\n        --prefix=/usr/local/rust-$RUST_VERSION \\\n        --components=rustc,rust-std-x86_64-unknown-linux-gnu && \\\n      rm -rf /tmp/rust-$RUST_VERSION; \\\n    done\n\n\n\nENV GO_VERSIONS \\\n      1.9\nRUN set -xe && \\\n    for GO_VERSION in $GO_VERSIONS; do \\\n      curl -fSsL \"https://storage.googleapis.com/golang/go$GO_VERSION.linux-amd64.tar.gz\" -o /tmp/go-$GO_VERSION.tar.gz; \\\n    done; \\\n    for GO_VERSION in $GO_VERSIONS; do \\\n      mkdir /usr/local/go-$GO_VERSION && \\\n      tar -xf /tmp/go-$GO_VERSION.tar.gz -C /usr/local/go-$GO_VERSION --strip-components=1 && \\\n      rm /tmp/go-$GO_VERSION.tar.gz; \\\n    done\n\n\n\nENV INSECT_VERSIONS \\\n      5.0.0\nRUN set -xe && \\\n    apt-get update && apt-get install --no-install-recommends -y nodejs-legacy npm && \\\n    for INSECT_VERSION in $INSECT_VERSIONS; do \\\n      mkdir /usr/local/insect-$INSECT_VERSION && \\\n      cd /usr/local/insect-$INSECT_VERSION && \\\n      npm install insect@$INSECT_VERSION && \\\n      echo \"#!/bin/bash\\ncat \\\"\\$1\\\" | /usr/local/insect-$INSECT_VERSION/node_modules/.bin/insect\" > /usr/local/insect-$INSECT_VERSION/insect && \\\n      chmod +x /usr/local/insect-$INSECT_VERSION/insect; \\\n    done && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n\n\nENV CRYSTAL_VERSIONS \\\n      0.23.1-3\nRUN set -xe && \\\n    for CRYSTAL_VERSION in $CRYSTAL_VERSIONS; do \\\n      curl -fSsL \"https://github.com/crystal-lang/crystal/releases/download/${CRYSTAL_VERSION%-*}/crystal-$CRYSTAL_VERSION-linux-x86_64.tar.gz\" -o /tmp/crystal-$CRYSTAL_VERSION.tar.gz; \\\n    done; \\\n    for CRYSTAL_VERSION in $CRYSTAL_VERSIONS; do \\\n      mkdir /usr/local/crystal-$CRYSTAL_VERSION && \\\n      tar -xf /tmp/crystal-$CRYSTAL_VERSION.tar.gz -C /usr/local/crystal-$CRYSTAL_VERSION --strip-components=1 && \\\n      rm /tmp/crystal-$CRYSTAL_VERSION.tar.gz; \\\n    done\n\n\n\nENV FBC_VERSIONS \\\n      1.05.0\nRUN set -xe && \\\n    for FBC_VERSION in $FBC_VERSIONS; do \\\n      curl -fSsL \"https://downloads.sourceforge.net/project/fbc/Binaries%20-%20Linux/FreeBASIC-$FBC_VERSION-linux-x86_64.tar.gz\" -o /tmp/fbc-$FBC_VERSION.tar.gz; \\\n    done; \\\n    for FBC_VERSION in $FBC_VERSIONS; do \\\n      mkdir /usr/local/fbc-$FBC_VERSION && \\\n      tar -xf /tmp/fbc-$FBC_VERSION.tar.gz -C /usr/local/fbc-$FBC_VERSION --strip-components=1 && \\\n      rm /tmp/fbc-$FBC_VERSION.tar.gz; \\\n    done\n\n\n\nENV OCAML_VERSIONS \\\n      4.05.0\nRUN set -xe && \\\n    for OCAML_VERSION in $OCAML_VERSIONS; do \\\n      curl -fSsL \"https://github.com/ocaml/ocaml/archive/$OCAML_VERSION.tar.gz\" -o /tmp/ocaml-$OCAML_VERSION.tar.gz; \\\n    done; \\\n    for OCAML_VERSION in $OCAML_VERSIONS; do \\\n      mkdir /tmp/ocaml-$OCAML_VERSION && \\\n      tar -xf /tmp/ocaml-$OCAML_VERSION.tar.gz -C /tmp/ocaml-$OCAML_VERSION --strip-components=1 && \\\n      rm /tmp/ocaml-$OCAML_VERSION.tar.gz && \\\n      cd /tmp/ocaml-$OCAML_VERSION && \\\n      ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        -prefix /usr/local/ocaml-$OCAML_VERSION \\\n        -no-ocamldoc -no-debugger -no-graph && \\\n      make -j\"$(nproc)\" world.opt && make install && \\\n      rm -rf /tmp/ocaml-$OCAML_VERSION; \\\n    done\n\n\n\nRUN set -xe && \\\n    apt-get update && apt-get install --no-install-recommends -y locales && \\\n    echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && locale-gen && rm -rf /var/lib/apt/lists/*;\nENV LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8\n\n\n\nRUN set -xe && \\\n    apt-get update && apt-get install --no-install-recommends -y libcap-dev && \\\n    git clone https://github.com/ioi/isolate.git /tmp/isolate && \\\n    cd /tmp/isolate && \\\n    git checkout 18554e83793508acd1032d0cf4229a332c43085e && \\\n    echo \"num_boxes = 2147483647\" >> default.cf && \\\n    make install && \\\n    rm -rf /tmp/isolate && rm -rf /var/lib/apt/lists/*;\nENV BOX_ROOT /var/local/lib/isolate\n\n\n\nLABEL maintainer=\"Herman Zvonimir Došilović, hermanz.dosilovic@gmail.com\"\nLABEL version=\"0.3.0\"\n"
}