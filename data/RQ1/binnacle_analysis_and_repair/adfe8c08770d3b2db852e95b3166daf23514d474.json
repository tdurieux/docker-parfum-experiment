{
  "startTime": 1674240798901,
  "endTime": 1674240799416,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.10\n\nARG TOOLCHAIN\n\nRUN apt-get -qq update && \\\n    apt-get -qq upgrade && \\\n    apt-get -qq --no-install-recommends install -y \\\n        build-essential \\\n        curl \\\n        git \\\n        musl-dev \\\n        musl-tools \\\n        pkg-config && rm -rf /var/lib/apt/lists/*;\n\nRUN curl https://sh.rustup.rs -sSf | \\\n    sh -s -- -y --default-toolchain $TOOLCHAIN && \\\n    /root/.cargo/bin/rustup target add x86_64-unknown-linux-musl\n\nRUN cd /tmp && LIBLZMA_VERSION=5.2.4 && \\\n    curl -f -LO \"https://tukaani.org/xz/xz-$LIBLZMA_VERSION.tar.xz\" && \\\n    tar xf \"xz-$LIBLZMA_VERSION.tar.xz\" && cd xz-$LIBLZMA_VERSION && \\\n    CC=musl-gcc ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static --disable-shared --prefix=/usr/local/musl && \\\n    make install && rm \"xz-$LIBLZMA_VERSION.tar.xz\"\n\n# -DOPENSSL_NO_SECURE_MEMORY needed due to https://github.com/openssl/openssl/issues/7207\nRUN cd /tmp && OPENSSL_VERSION=1.1.1b && \\\n    curl -f -LO \"https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz\" && \\\n    tar xf \"openssl-$OPENSSL_VERSION.tar.gz\" && cd \"openssl-$OPENSSL_VERSION\" && \\\n    env CC=musl-gcc ./Configure \\\n        no-shared no-zlib no-engine no-unit-test -DOPENSSL_NO_SECURE_MEMORY \\\n        -fPIC --prefix=/usr/local/musl linux-x86_64 && \\\n    env C_INCLUDE_PATH=/usr/local/musl/include/ make depend && \\\n    make install_sw && rm \"openssl-$OPENSSL_VERSION.tar.gz\"\n\nRUN cd /tmp && ZLIB_VERSION=1.2.11 && \\\n    curl -f -LO \"http://zlib.net/zlib-$ZLIB_VERSION.tar.gz\" && \\\n    tar xf \"zlib-$ZLIB_VERSION.tar.gz\" && cd \"zlib-$ZLIB_VERSION\" && \\\n    CC=musl-gcc ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --static --prefix=/usr/local/musl && \\\n    make install && rm \"zlib-$ZLIB_VERSION.tar.gz\"\n\nRUN cd /tmp && SQLITE_VERSION=sqlite-autoconf-3270200 && \\\n    curl -f -LO https://www.sqlite.org/2019/$SQLITE_VERSION.tar.gz && \\\n    tar xf \"$SQLITE_VERSION.tar.gz\" && cd \"$SQLITE_VERSION\" && \\\n    CC=musl-gcc ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static --disable-shared --prefix=/usr/local/musl && \\\n    make install && rm \"$SQLITE_VERSION.tar.gz\"\n\nRUN rm -r /tmp/*\n\nENV \\\n    LIBZ_SYS_STATIC=1 \\\n    OPENSSL_DIR=/usr/local/musl/ \\\n    OPENSSL_INCLUDE_DIR=/usr/local/musl/include/ \\\n    OPENSSL_LIB_DIR=/usr/local/musl/lib/ \\\n    OPENSSL_STATIC=1 \\\n    PATH=/root/.cargo/bin:/usr/bin:/bin \\\n    PKG_CONFIG_ALLOW_CROSS=true \\\n    PKG_CONFIG_ALL_STATIC=true \\\n    PKG_CONFIG_LIBDIR=/usr/local/musl/lib/pkgconfig/ \\\n    TARGET=musl\n\nRUN mkdir /build\nWORKDIR /build\n\nCOPY build.sh /root/build.sh\nENTRYPOINT /root/build.sh\n"
}