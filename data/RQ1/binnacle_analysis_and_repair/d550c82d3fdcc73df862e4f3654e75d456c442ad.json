{
  "startTime": 1674244068608,
  "endTime": 1674244069226,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 5,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 23,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 23,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# upsteam https://github.com/mesosphere/dcos-jenkins-service\nFROM jenkins/jenkins:2.73.3\n\nMAINTAINER 若虚 <slpcat@qq.com>\n\nUSER root\n\n# Container variables\nENV \\ \n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\ \n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n\n# Set timezone and locales\nRUN \\\n    echo \"${TIMEZONE}\" > /etc/timezone \\\n    && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n    && apt-get update -q \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq apt-utils dialog locales \\\n    && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n    && update-locale LANG=$LANG \\\n    && locale-gen $LANG \\\n    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales && rm -rf /var/lib/apt/lists/*;\n\n# Install required packages\nRUN \\\n    apt-get dist-upgrade -y\n\nWORKDIR /tmp\n\n# Environment variables used throughout this Dockerfile\n#\n# $JENKINS_HOME     will be the final destination that Jenkins will use as its\n#                   data directory. This cannot be populated before Marathon\n#                   has a chance to create the host-container volume mapping.\n#\nENV JENKINS_FOLDER /usr/share/jenkins\n\n# Build Args\nARG LIBMESOS_DOWNLOAD_URL=https://downloads.mesosphere.com/libmesos-bundle/libmesos-bundle-1.8.7-1.0.2-2.tar.gz\nARG LIBMESOS_DOWNLOAD_SHA256=9757b2e86c975488f68ce325fdf08578669e3c0f1fcccf24545d3bd1bd423a25\nARG BLUEOCEAN_VERSION=1.3.1\nARG JENKINS_STAGING=/usr/share/jenkins/ref/\n\n# install dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y nginx python zip jq && rm -rf /var/lib/apt/lists/*;\n# libmesos bundle\nRUN curl -fsSL \"$LIBMESOS_DOWNLOAD_URL\" -o libmesos-bundle.tar.gz \\\n  && echo \"$LIBMESOS_DOWNLOAD_SHA256  libmesos-bundle.tar.gz\" | sha256sum -c - \\\n  && tar -C / -xzf libmesos-bundle.tar.gz \\\n  && rm libmesos-bundle.tar.gz\n# update to newer git version\nRUN echo \"deb http://ftp.debian.org/debian testing main\" >> /etc/apt/sources.list \\\n  && apt-get update && apt-get -t testing --no-install-recommends install -y git && rm -rf /var/lib/apt/lists/*;\n\n# Override the default property for DNS lookup caching\nRUN echo 'networkaddress.cache.ttl=60' >> ${JAVA_HOME}/jre/lib/security/java.security\n\n# bootstrap scripts and needed dir setup\nCOPY scripts/bootstrap.py /usr/local/jenkins/bin/bootstrap.py\nCOPY scripts/export-libssl.sh /usr/local/jenkins/bin/export-libssl.sh\nCOPY scripts/dcos-account.sh /usr/local/jenkins/bin/dcos-account.sh\nRUN mkdir -p \"$JENKINS_HOME\" \"${JENKINS_FOLDER}/war\"\n\n# nginx setup\nRUN mkdir -p /var/log/nginx/jenkins\nCOPY conf/nginx/nginx.conf /etc/nginx/nginx.conf\n\n# jenkins setup\nCOPY conf/jenkins/config.xml \"${JENKINS_STAGING}/config.xml\"\nCOPY conf/jenkins/jenkins.model.JenkinsLocationConfiguration.xml \"${JENKINS_STAGING}/jenkins.model.JenkinsLocationConfiguration.xml\"\nCOPY conf/jenkins/nodeMonitors.xml \"${JENKINS_STAGING}/nodeMonitors.xml\"\n\n# add plugins\nRUN /usr/local/bin/install-plugins.sh       \\\n  blueocean-commons:${BLUEOCEAN_VERSION}    \\\n  blueocean-config:${BLUEOCEAN_VERSION}     \\\n  blueocean-dashboard:${BLUEOCEAN_VERSION}  \\\n  blueocean-events:${BLUEOCEAN_VERSION}     \\\n  blueocean-git-pipeline:${BLUEOCEAN_VERSION}          \\\n  blueocean-github-pipeline:${BLUEOCEAN_VERSION}       \\\n  blueocean-i18n:${BLUEOCEAN_VERSION}       \\\n  blueocean-jwt:${BLUEOCEAN_VERSION}        \\\n  blueocean-personalization:${BLUEOCEAN_VERSION}    \\\n  blueocean-pipeline-api-impl:${BLUEOCEAN_VERSION}  \\\n  blueocean-pipeline-editor:${BLUEOCEAN_VERSION}           \\\n  blueocean-pipeline-scm-api:${BLUEOCEAN_VERSION}   \\\n  blueocean-rest-impl:${BLUEOCEAN_VERSION}  \\\n  blueocean-rest:${BLUEOCEAN_VERSION}       \\\n  blueocean-web:${BLUEOCEAN_VERSION}        \\\n  blueocean:${BLUEOCEAN_VERSION}            \\\n  ant:1.7                        \\\n  ace-editor:1.1                 \\\n  ansicolor:0.5.2                \\\n  antisamy-markup-formatter:1.5  \\\n  artifactory:2.13.1             \\\n  authentication-tokens:1.3      \\\n  azure-credentials:1.3          \\\n  azure-vm-agents:0.4.8          \\\n  branch-api:2.0.15              \\\n  build-name-setter:1.6.7        \\\n  build-timeout:1.19             \\\n  cloudbees-folder:6.2.1         \\\n  conditional-buildstep:1.3.6    \\\n  config-file-provider:2.16.4    \\\n  copyartifact:1.39              \\\n  cvs:2.13                       \\\n  docker-build-publish:1.3.2     \\\n  docker-workflow:1.14           \\\n  durable-task:1.15              \\\n  ec2:1.37                       \\\n  embeddable-build-status:1.9    \\\n  external-monitor-job:1.7       \\\n  ghprb:1.39.0                   \\\n  git:3.6.4                      \\\n  git-client:2.6.0               \\\n  git-server:1.7                 \\\n  github:1.28.1                  \\\n  github-api:1.90                \\\n  github-branch-source:2.3       \\\n  github-organization-folder:1.6 \\\n  gitlab:1.5.1                   \\\n  gradle:1.28                    \\\n  greenballs:1.15                \\\n  handlebars:1.1.1               \\\n  ivy:1.28                       \\\n  jackson2-api:2.8.7.0           \\\n  job-dsl:1.66                   \\\n  jobConfigHistory:2.18          \\\n  jquery:1.12.4-0                \\\n  ldap:1.17                      \\\n  mapdb-api:1.0.9.0              \\\n  marathon:1.6.0                 \\\n  matrix-auth:2.1.1              \\\n  matrix-project:1.12            \\\n  maven-plugin:3.0               \\\n  mesos:0.15.0                   \\\n  metrics:3.1.2.10               \\\n  momentjs:1.1.1                 \\\n  monitoring:1.70.0              \\\n  nant:1.4.3                     \\\n  node-iterator-api:1.5.0        \\\n  pam-auth:1.3                   \\\n  parameterized-trigger:2.35.2   \\\n  pipeline-build-step:2.5.1      \\\n  pipeline-github-lib:1.0        \\\n  pipeline-input-step:2.8        \\\n  pipeline-milestone-step:1.3.1  \\\n  pipeline-model-api:1.2.4       \\\n  pipeline-model-definition:1.2.4 \\\n  pipeline-model-extensions:1.2.4 \\\n  pipeline-rest-api:2.9          \\\n  pipeline-stage-step:2.3        \\\n  pipeline-stage-view:2.9        \\\n  plain-credentials:1.4          \\\n  rebuild:1.27                   \\\n  role-strategy:2.6.1            \\\n  run-condition:1.0              \\\n  s3:0.10.12                     \\\n  saferestart:0.3                \\\n  saml:1.0.4                     \\\n  scm-api:2.2.5                  \\\n  ssh-agent:1.15                 \\\n  ssh-slaves:1.22                \\\n  subversion:2.9                 \\\n  timestamper:1.8.8              \\\n  translation:1.15               \\\n  variant:1.1                    \\\n  windows-slaves:1.3.1           \\\n  workflow-aggregator:2.5        \\\n  workflow-api:2.23.1            \\\n  workflow-basic-steps:2.6       \\\n  workflow-cps:2.41              \\\n  workflow-cps-global-lib:2.9    \\\n  workflow-durable-task-step:2.17 \\\n  workflow-job:2.15              \\\n  workflow-multibranch:2.16      \\\n  workflow-scm-step:2.6          \\\n  workflow-step-api:2.13         \\\n  workflow-support:2.16\n\n# disable first-run wizard\nRUN echo 2.0 > /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state\n\nCMD export LD_LIBRARY_PATH=/libmesos-bundle/lib:/libmesos-bundle/lib/mesos:$LD_LIBRARY_PATH \\\n  && export MESOS_NATIVE_JAVA_LIBRARY=$(ls /libmesos-bundle/lib/libmesos-*.so)   \\\n  && . /usr/local/jenkins/bin/export-libssl.sh       \\\n  && /usr/local/jenkins/bin/bootstrap.py && nginx    \\\n  && . /usr/local/jenkins/bin/dcos-account.sh        \\\n  && java ${JVM_OPTS}                                \\\n     -Dhudson.udp=-1                                 \\\n     -Djava.awt.headless=true                        \\\n     -Dhudson.DNSMultiCast.disabled=true             \\\n     -Djenkins.install.runSetupWizard=false          \\\n     -jar ${JENKINS_FOLDER}/jenkins.war              \\\n     ${JENKINS_OPTS}                                 \\\n     --httpPort=${PORT1}                             \\\n     --webroot=${JENKINS_FOLDER}/war                 \\\n     --ajp13Port=-1                                  \\\n     --httpListenAddress=127.0.0.1                   \\\n     --ajp13ListenAddress=127.0.0.1                  \\\n     --prefix=${JENKINS_CONTEXT}\n"
}