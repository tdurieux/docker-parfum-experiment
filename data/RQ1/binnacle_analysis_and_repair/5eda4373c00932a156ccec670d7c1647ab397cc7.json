{
  "startTime": 1674249049961,
  "endTime": 1674249050927,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 155,
        "columnStart": 3,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n# PLEASE DO NOT EDIT IT DIRECTLY.\n#\n\n# Image\nFROM alpine:3.8 as builder\n\n# Environment variables\nENV WKHTMLTOX_VERSION=0.12.5\n\n# Copy patches\nRUN mkdir -p /tmp/patches\nCOPY conf/* /tmp/patches/\n\n# Install needed packages\nRUN apk add --no-cache \\\n  libstdc++ \\\n  libx11 \\\n  libxrender \\\n  libxext \\\n  libssl1.0 \\\n  ca-certificates \\\n  fontconfig \\\n  freetype \\\n  ttf-dejavu \\\n  ttf-droid \\\n  ttf-freefont \\\n  ttf-liberation \\\n  ttf-ubuntu-font-family \\\n&& apk add --no-cache --virtual .build-deps \\\n  g++ \\\n  git \\\n  gtk+ \\\n  gtk+-dev \\\n  make \\\n  mesa-dev \\\n  msttcorefonts-installer \\\n  openssl-dev \\\n  patch \\\n  fontconfig-dev \\\n  freetype-dev \\\n\\\n# Install microsoft fonts\n&& update-ms-fonts \\\n&& fc-cache -f \\\n\\\n# Download source files\n&& git clone --recursive https://github.com/wkhtmltopdf/wkhtmltopdf.git /tmp/wkhtmltopdf \\\n&& cd /tmp/wkhtmltopdf \\\n&& git checkout tags/$WKHTMLTOX_VERSION \\\n\\\n# Apply patches\n&& cd /tmp/wkhtmltopdf/qt \\\n&& patch -p1 -i /tmp/patches/qt-musl.patch \\\n&& patch -p1 -i /tmp/patches/qt-musl-iconv-no-bom.patch \\\n&& patch -p1 -i /tmp/patches/qt-recursive-global-mutex.patch \\\n&& patch -p1 -i /tmp/patches/qt-gcc6.patch \\\n\\\n# Modify qmake config\n&& sed -i \"s|-O2|$CXXFLAGS|\" mkspecs/common/g++.conf \\\n&& sed -i \"/^QMAKE_RPATH/s| -Wl,-rpath,||g\" mkspecs/common/g++.conf \\\n&& sed -i \"/^QMAKE_LFLAGS\\s/s|+=|+= $LDFLAGS|g\" mkspecs/common/g++.conf \\\n\\\n# Prepare optimal build settings\n&& NB_CORES=$(grep -c '^processor' /proc/cpuinfo) \\\n\\\n# Install qt \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -confirm-license -opensource \\\n  -prefix /usr \\\n  -datadir /usr/share/qt \\\n  -sysconfdir /etc \\\n  -plugindir /usr/lib/qt/plugins \\\n  -importdir /usr/lib/qt/imports \\\n  -silent \\\n  -release \\\n  -static \\\n  -webkit \\\n  -script \\\n  -svg \\\n  -exceptions \\\n  -xmlpatterns \\\n  -openssl-linked \\\n  -no-fast \\\n  -no-largefile \\\n  -no-accessibility \\\n  -no-stl \\\n  -no-sql-ibase \\\n  -no-sql-mysql \\\n  -no-sql-odbc \\\n  -no-sql-psql \\\n  -no-sql-sqlite \\\n  -no-sql-sqlite2 \\\n  -no-qt3support \\\n  -no-opengl \\\n  -no-openvg \\\n  -no-system-proxies \\\n  -no-multimedia \\\n  -no-audio-backend \\\n  -no-phonon \\\n  -no-phonon-backend \\\n  -no-javascript-jit \\\n  -no-scripttools \\\n  -no-declarative \\\n  -no-declarative-debug \\\n  -no-mmx \\\n  -no-3dnow \\\n  -no-sse \\\n  -no-sse2 \\\n  -no-sse3 \\\n  -no-ssse3 \\\n  -no-sse4.1 \\\n  -no-sse4.2 \\\n  -no-avx \\\n  -no-neon \\\n  -no-rpath \\\n  -no-nis \\\n  -no-cups \\\n  -no-pch \\\n  -no-dbus \\\n  -no-separate-debug-info \\\n  -no-gtkstyle \\\n  -no-nas-sound \\\n  -no-opengl \\\n  -no-openvg \\\n  -no-sm \\\n  -no-xshape \\\n  -no-xvideo \\\n  -no-xsync \\\n  -no-xinerama \\\n  -no-xcursor \\\n  -no-xfixes \\\n  -no-xrandr \\\n  -no-mitshm \\\n  -no-xinput \\\n  -no-xkb \\\n  -no-glib \\\n  -no-icu \\\n  -nomake demos \\\n  -nomake docs \\\n  -nomake examples \\\n  -nomake tools \\\n  -nomake tests \\\n  -nomake translations \\\n  -graphicssystem raster \\\n  -qt-zlib \\\n  -qt-libpng \\\n  -qt-libmng \\\n  -qt-libtiff \\\n  -qt-libjpeg \\\n  -optimized-qmake \\\n  -iconv \\\n  -xrender \\\n  -fontconfig \\\n  -D ENABLE_VIDEO=0 \\\n&& make --jobs $(($NB_CORES*2)) --silent \\\n&& make install \\\n\n# Install wkhtmltopdf\n&& cd /tmp/wkhtmltopdf \\\n&& qmake \\\n&& make --jobs $(($NB_CORES*2)) --silent \\\n&& make install \\\n&& make clean \\\n&& make distclean \\\n\n# Uninstall qt\n&& cd /tmp/wkhtmltopdf/qt \\\n&& make uninstall \\\n&& make clean \\\n&& make distclean \\\n\n# Clean up when done\n&& rm -rf /tmp/* \\\n&& apk del .build-deps\n\n# Image\nFROM node:10.15.1-alpine\n\nRUN apk add --no-cache \\\n  libstdc++ \\\n  libx11 \\\n  libxrender \\\n  libxext \\\n  libssl1.0 \\\n  ca-certificates \\\n  fontconfig \\\n  freetype \\\n  ttf-dejavu \\\n  ttf-droid \\\n  ttf-freefont \\\n  ttf-liberation \\\n  ttf-ubuntu-font-family \\\n&& apk add --no-cache --virtual .build-deps \\\n  msttcorefonts-installer \\\n\\\n# Install microsoft fonts\n&& update-ms-fonts \\\n&& fc-cache -f \\\n\\\n# Clean up when done\n&& rm -rf /tmp/* \\\n&& apk del .build-deps\n\nCOPY --from=builder /bin/wkhtmltopdf /bin/wkhtmltopdf\nCOPY --from=builder /bin/wkhtmltoimage /bin/wkhtmltoimage\nCOPY --from=builder /lib/libwkhtmltox* /bin/\n\n"
}