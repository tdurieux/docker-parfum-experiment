{
  "startTime": 1674240085915,
  "endTime": 1674240086161,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 162
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 20,
        "columnEnd": 91
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Source Code Form is subject to the terms of the Mozilla Public\n# License, v. 2.0. If a copy of the MPL was not distributed with this\n# file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nFROM ubuntu:18.04\n\nMAINTAINER Sebastian Kaspari \"skaspari@mozilla.com\"\n\n#----------------------------------------------------------------------------------------------------------------------\n#-- Configuration -----------------------------------------------------------------------------------------------------\n#----------------------------------------------------------------------------------------------------------------------\n\nENV ANDROID_BUILD_TOOLS \"28.0.3\"\nENV ANDROID_SDK_VERSION \"3859397\"\nENV ANDROID_PLATFORM_VERSION \"28\"\nENV PROJECT_REPOSITORY \"https://github.com/mozilla-mobile/android-components.git\"\nENV GOOGLE_SDK_VERSION 233\n\nENV LANG en_US.UTF-8\n\n# Do not use fancy output on taskcluster\nENV TERM dumb\n\nENV GRADLE_OPTS -Xmx4096m -Dorg.gradle.daemon=false\n\n# Used to detect in scripts whether we are running on taskcluster\nENV CI_TASKCLUSTER true\n\n#----------------------------------------------------------------------------------------------------------------------\n#-- System ------------------------------------------------------------------------------------------------------------\n#----------------------------------------------------------------------------------------------------------------------\n\nRUN apt-get update -qq \\\n    # We need to install tzdata before all of the other packages. Otherwise it will show an interactive dialog that\n    # we cannot navigate while building the Docker image. \\\n    && apt-get install --no-install-recommends -y tzdata \\\n    && apt-get install --no-install-recommends -y openjdk-8-jdk \\\n                          wget \\\n                          expect \\\n                          git \\\n                          curl \\\n                          python \\\n                          python-pip \\\n                          locales \\\n                          unzip \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir 'taskcluster>=4,<5'\nRUN pip install --no-cache-dir arrow\nRUN pip install --no-cache-dir pyyaml\n\nRUN locale-gen en_US.UTF-8\n\n#----------------------------------------------------------------------------------------------------------------------\n#-- Android -----------------------------------------------------------------------------------------------------------\n#----------------------------------------------------------------------------------------------------------------------\n\nRUN mkdir -p /build/android-sdk\nWORKDIR /build\n\nENV ANDROID_HOME /build/android-sdk\nENV ANDROID_SDK_HOME /build/android-sdk\nENV PATH ${PATH}:${ANDROID_SDK_HOME}/tools:${ANDROID_SDK_HOME}/tools/bin:${ANDROID_SDK_HOME}/platform-tools:/opt/tools:${ANDROID_SDK_HOME}/build-tools/${ANDROID_BUILD_TOOLS}\n\nRUN curl -f -L https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_VERSION}.zip > sdk.zip \\\n    && unzip sdk.zip -d ${ANDROID_SDK_HOME} \\\n    && rm sdk.zip \\\n    && mkdir -p /build/android-sdk/.android/ \\\n    && touch /build/android-sdk/.android/repositories.cfg \\\n    && yes | sdkmanager --licenses\n\n#----------------------------------------------------------------------------------------------------------------------\n#-- Test tools --------------------------------------------------------------------------------------------------------\n#----------------------------------------------------------------------------------------------------------------------\n\nRUN mkdir -p /build/test-tools\n\nWORKDIR /build\n\nENV TEST_TOOLS /build/test-tools\nENV GOOGLE_SDK_DOWNLOAD ./gcloud.tar.gz\nENV PATH ${PATH}:${TEST_TOOLS}:${TEST_TOOLS}/google-cloud-sdk/bin\n\nRUN curl -f https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${GOOGLE_SDK_VERSION}.0.0-linux-x86_64.tar.gz --output ${GOOGLE_SDK_DOWNLOAD} \\\n    && tar -xvf ${GOOGLE_SDK_DOWNLOAD} -C ${TEST_TOOLS} \\\n    && rm -f ${GOOGLE_SDK_DOWNLOAD} \\\n    && ${TEST_TOOLS}/google-cloud-sdk/install.sh --quiet \\\n    && ${TEST_TOOLS}/google-cloud-sdk/bin/gcloud --quiet components update\n\nRUN URL_FLANK_BIN=$( curl -f -s \"https://api.github.com/repos/TestArmada/flank/releases/latest\" | grep \"browser_download_url*\" | sed -r \"s/\\\"//g\" | cut -d \":\" -f3) \\\n    && wget \"https:${URL_FLANK_BIN}\" -O ${TEST_TOOLS}/flank.jar \\\n    && chmod +x ${TEST_TOOLS}/flank.jar\n\n#----------------------------------------------------------------------------------------------------------------------\n#-- Project -----------------------------------------------------------------------------------------------------------\n#----------------------------------------------------------------------------------------------------------------------\n\nRUN git clone --depth=1 $PROJECT_REPOSITORY\n\nWORKDIR /build/android-components\n\nRUN ./gradlew clean \\\n    && ./gradlew dependencies \\\n    && ./gradlew androidDependencies \\\n    && ./gradlew --stop \\\n    && ./gradlew --no-daemon assemble \\\n    && ./gradlew --no-daemon -Pcoverage test \\\n    && ./gradlew --no-daemon detekt \\\n    && ./gradlew --no-daemon ktlint \\\n    && ./gradlew --no-daemon docs \\\n    && ./gradlew clean\n"
}