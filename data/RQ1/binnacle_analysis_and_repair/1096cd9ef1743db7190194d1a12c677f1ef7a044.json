{
  "startTime": 1674251647300,
  "endTime": 1674251647329,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Node only packaging for the application\n#   Requires a MongoDB connection string.\n#   Scale node app horizontally as needed and setup a front-load balancer\n#\n# Choices:\n# 1. Pass it using the DB_URI environmental variable. (uncomment line 20 and set the connection string)\n#\n# 2. Use Docker linking with alias = DB to link to a MongoDB Docker Container\n#    Sample: docker run <image> --link <dbContainer>:DB\n\nFROM node:6\nMAINTAINER pjmolina\n\nENV NODE_ENV=production\n\nWORKDIR /app\nRUN npm install -g grunt-cli && npm cache clean --force;\nADD package.json /app/\nRUN npm install && npm cache clean --force;\nADD . /app\nRUN grunt release\n\nENV PORT=80\n#ENV DB_URI=mongodb://<host>:<port>/<dbName>\n\nEXPOSE 80\n\nCMD [ \"npm\", \"start\" ]"
}