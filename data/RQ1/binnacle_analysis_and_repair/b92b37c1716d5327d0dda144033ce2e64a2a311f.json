{
  "startTime": 1674235868189,
  "endTime": 1674235869040,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 127,
        "lineEnd": 128,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 5,
        "columnEnd": 83
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 5,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 5,
        "columnEnd": 42
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 5,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 5,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 5,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 5,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 5,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM amazonlinux:2-with-sources\nLABEL maintainer=\"M. Edward (Ed) Borasky <znmeb@znmeb.net>\"\n\n# PostgreSQL and command line tools\nRUN amazon-linux-extras install \\\n    postgresql9.6 \\\n    nano \\\n    vim \\\n  && yum install -y \\\n    awscli \\\n    curl \\\n    git \\\n    groff \\\n    lynx \\\n    postgresql \\\n    postgresql-contrib \\\n    postgresql-devel \\\n    postgresql-docs \\\n    postgresql-server \\\n    procps-ng \\\n    shadow-utils \\\n    tar \\\n    wget \\\n  && yum clean all \\\n  && rm -rf /var/cache/yum\n\n# PostGIS build dependencies\nRUN yum update -y \\\n  && yum install -y \\\n    boost-devel \\\n    bzip2 \\\n    file \\\n    gcc \\\n    gcc-c++ \\\n    gettext-devel \\\n    gmp-devel \\\n    json-c-devel \\\n    libxml2-devel \\\n    make \\\n    mpfr-devel \\\n    unzip \\\n  && yum clean all \\\n  && rm -rf /var/cache/yum\n\n# setup for builds\nENV PKG_CONFIG_PATH /usr/local/lib/pkgconfig\nRUN echo \"/usr/local/lib\" > /etc/ld.so.conf.d/usr_local_lib.conf \\\n  && mkdir -p /usr/local/src/\nWORKDIR /usr/local/src/\n\n# source installs\nENV CMAKE_MAJOR 3.10\nENV CMAKE_VERSION ${CMAKE_MAJOR}.2\nRUN wget -q https://cmake.org/files/v${CMAKE_MAJOR}/cmake-${CMAKE_VERSION}-Linux-x86_64.sh \\\n  && chmod +x cmake-${CMAKE_VERSION}-Linux-x86_64.sh \\\n  && ./cmake-${CMAKE_VERSION}-Linux-x86_64.sh --prefix=/usr/local --exclude-subdir --skip-license\n\nENV CGAL_VERSION 4.11.1\nRUN wget -q https://github.com/CGAL/cgal/archive/releases/CGAL-${CGAL_VERSION}.tar.gz \\\n  && tar xf CGAL-${CGAL_VERSION}.tar.gz \\\n  && cd cgal-releases-CGAL-${CGAL_VERSION} \\\n  && cmake . > ../cgal.cmake \\\n  && make \\\n  && make install \\\n  && ldconfig && rm CGAL-${CGAL_VERSION}.tar.gz\n\nENV PROTOBUF_VERSION 3.5.1\nRUN wget -q https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protobuf-cpp-${PROTOBUF_VERSION}.tar.gz \\\n  && tar xf protobuf-cpp-${PROTOBUF_VERSION}.tar.gz \\\n  && cd /usr/local/src/protobuf-${PROTOBUF_VERSION} \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" > ../protobuf.configure \\\n  && make > /dev/null \\\n  && make install > /dev/null \\\n  && ldconfig && rm protobuf-cpp-${PROTOBUF_VERSION}.tar.gz\n\nENV PROTOBUF_C_VERSION 1.3.0\nRUN wget -q https://github.com/protobuf-c/protobuf-c/releases/download/v${PROTOBUF_C_VERSION}/protobuf-c-${PROTOBUF_C_VERSION}.tar.gz \\\n  && tar xf protobuf-c-${PROTOBUF_C_VERSION}.tar.gz \\\n  && cd /usr/local/src/protobuf-c-${PROTOBUF_C_VERSION} \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" > ../protobuf-c.configure \\\n  && make > /dev/null \\\n  && make install > /dev/null \\\n  && ldconfig && rm protobuf-c-${PROTOBUF_C_VERSION}.tar.gz\n\nENV GEOS_VERSION 3.6.2\nRUN wget -q https://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2 \\\n  && tar xf geos-${GEOS_VERSION}.tar.bz2 \\\n  && cd /usr/local/src/geos-${GEOS_VERSION} \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" > ../geos.configure \\\n  && make > /dev/null \\\n  && make install > /dev/null \\\n  && ldconfig && rm geos-${GEOS_VERSION}.tar.bz2\n\nENV PROJ_VERSION 4.9.3\nENV DATUMGRID_VERSION 1.6\nRUN wget -q https://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz \\\n  && tar xf proj-${PROJ_VERSION}.tar.gz \\\n  && wget -q https://download.osgeo.org/proj/proj-datumgrid-${DATUMGRID_VERSION}.zip \\\n  && cd /usr/local/src/proj-${PROJ_VERSION} \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" > ../proj.configure \\\n  && make > /dev/null \\\n  && make install > /dev/null \\\n  && ldconfig \\\n  && cd /usr/local/share/proj/ \\\n  && unzip /usr/local/src/proj-datumgrid-${DATUMGRID_VERSION}.zip && rm proj-${PROJ_VERSION}.tar.gz\n\nENV GDAL_VERSION 2.2.4\nRUN wget -q https://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz \\\n  && tar xf gdal-${GDAL_VERSION}.tar.gz \\\n  && cd /usr/local/src/gdal-${GDAL_VERSION} \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" > ../gdal.configure \\\n  && make -j 4 > /dev/null \\\n  && make install > /dev/null \\\n  && ldconfig && rm gdal-${GDAL_VERSION}.tar.gz\n\nENV POSTGIS_VERSION 2.4.3\nRUN wget -q https://download.osgeo.org/postgis/source/postgis-${POSTGIS_VERSION}.tar.gz \\\n  && tar xf postgis-${POSTGIS_VERSION}.tar.gz \\\n  && cd /usr/local/src/postgis-${POSTGIS_VERSION} \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" > ../postgis.configure \\\n  && make > /dev/null \\\n  && make install > /dev/null \\\n  && ldconfig && rm postgis-${POSTGIS_VERSION}.tar.gz\n\n# pgRouting\nENV PGROUTING_VERSION 2.5.2\nRUN yum install -y perl-Data-Dumper && rm -rf /var/cache/yum\nRUN curl -f -Ls https://github.com/pgRouting/pgrouting/archive/v${PGROUTING_VERSION}.tar.gz \\\n  > pgrouting-${PGROUTING_VERSION}.tar.gz \\\n  && tar xf pgrouting-${PGROUTING_VERSION}.tar.gz \\\n  && cd pgrouting-${PGROUTING_VERSION} \\\n  && mkdir build \\\n  && cd build \\\n  && cmake .. > ../../pgrouting.cmake \\\n  && make > ../../pgrouting.make \\\n  && make install > /dev/null \\\n  && ldconfig && rm pgrouting-${PGROUTING_VERSION}.tar.gz\n\n# make the users\nRUN useradd --shell /bin/bash --user-group --create-home dbsuper \\\n  && mkdir -p /home/dbsuper/Projects/ \\\n  && echo \"alias l='ls -ACF --color=auto'\" >> /etc/bashrc \\\n  && echo \"alias ll='ls -ltrAF --color=auto'\" >> /etc/bashrc\nCOPY home-scripts /home/dbsuper/\nCOPY amazon-scripts/1make-dbusers.bash /var/lib/pgsql/\nRUN chmod +x /home/dbsuper/*.bash /var/lib/pgsql/1make-dbusers.bash\nRUN chown postgres:postgres /var/lib/pgsql/1make-dbusers.bash\n\nUSER postgres\nARG DB_USERS_TO_CREATE\nRUN initdb --locale=en_US.utf8 --encoding=UTF8 -D /var/lib/pgsql/data/main \\\n  && pg_ctl start -w -D /var/lib/pgsql/data/main \\\n  && createuser --superuser dbsuper \\\n  && createdb --owner=dbsuper dbsuper \\\n  && bash /var/lib/pgsql/1make-dbusers.bash \\\n  && pg_ctl stop -w -D /var/lib/pgsql/data/main\n\n# do backups at the end so rest of image doesn't need a rebuild\nUSER root\nCOPY Backups /home/dbsuper/Backups\nCOPY Raw /home/dbsuper/Raw\nRUN chown -R dbsuper:dbsuper /home/dbsuper\n\nUSER postgres\nCMD pg_ctl -D /var/lib/pgsql/data/main start; /usr/bin/sleep 1001d\n"
}