{
  "startTime": 1674242830275,
  "endTime": 1674242830352,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 27,
        "columnEnd": 39
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM elixir:1.8-alpine as builder\n\n# The nuclear approach:\n# RUN apk add --no-cache alpine-sdk\nRUN apk add --no-cache \\\n    gcc \\\n    git \\\n    make \\\n    musl-dev\n\nRUN mix local.rebar --force && \\\n    mix local.hex --force\n\nWORKDIR /app\nENV MIX_ENV=prod\nCOPY mix.* /app/\nRUN mix deps.get --only prod\n\nRUN mix deps.compile\n\nFROM node:10.13 as frontend\n\nWORKDIR /app\nCOPY assets/package.json assets/yarn.lock /app/\nCOPY --from=builder /app/deps/phoenix /deps/phoenix\nCOPY --from=builder /app/deps/phoenix_html /deps/phoenix_html\nCOPY --from=builder /app/deps/phoenix_live_view /deps/phoenix_live_view\n\nRUN npm install -g yarn && yarn install && npm cache clean --force; && yarn cache clean;\n\nCOPY assets /app\nRUN npm run deploy\n\nFROM builder as releaser\nCOPY --from=frontend /priv/static /app/priv/static\nCOPY . /app/\nARG cookie\nENV COOKIE=${cookie}\nRUN mix phx.digest\nRUN mix release --env=prod --no-tar\n\nFROM alpine:3.9\nENV LANG=C.UTF-8\nRUN apk add --no-cache -U bash openssl imagemagick\nWORKDIR /app\nCOPY --from=releaser /app/_build/prod/rel/grapevine /app/\nCOPY config/prod.docker.exs /etc/grapevine/config.exs\n\nENV MIX_ENV=prod\n\nEXPOSE 4001\n\nENTRYPOINT [\"bin/grapevine\"]\nCMD [\"foreground\"]\n"
}