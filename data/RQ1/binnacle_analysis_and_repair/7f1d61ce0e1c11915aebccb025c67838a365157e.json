{
  "startTime": 1674245216264,
  "endTime": 1674245216539,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 5,
        "columnEnd": 117
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 2,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM seldonio/pyseldon:%SELDON_PYTHON_PACKAGE_VERSION%\n\nRUN \\\n    apt-get update && \\\n    apt-get -y --no-install-recommends -q install netcat dnsutils emacs vim mysql-client && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir memcache-cli awscli\n\nRUN \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y openjdk-7-jdk && \\\n  rm -rf /var/lib/apt/lists/*\n\n# Define commonly used JAVA_HOME variable\nENV JAVA_HOME /usr/lib/jvm/java-7-openjdk-amd64\n\nENV hadoop_ver 2.6.5\nENV spark_ver 1.5.2\n\n# Get Hadoop from US Apache mirror and extract just the native\n# libs. (Until we care about running HDFS with these containers, this\n# is all we need.)\nRUN mkdir -p /opt && \\\n    cd /opt && \\\n    curl -f https://www.apache.org/dist/hadoop/common/hadoop-${hadoop_ver}/hadoop-${hadoop_ver}.tar.gz | \\\n        tar -zx hadoop-${hadoop_ver}/lib/native && \\\n    ln -s hadoop-${hadoop_ver} hadoop && \\\n    echo Hadoop ${hadoop_ver} native libraries installed in /opt/hadoop/lib/native\n\n# Get Spark from US Apache mirror.\n#    curl http://www.apache.org/dist/spark/spark-${spark_ver}/spark-${spark_ver}-bin-hadoop2.6.tgz | \\\nRUN mkdir -p /opt && \\\n    cd /opt && \\\n    curl -f https://archive.apache.org/dist/spark/spark-${spark_ver}/spark-${spark_ver}-bin-hadoop2.6.tgz | \\\n        tar -zx && \\\n    ln -s spark-${spark_ver}-bin-hadoop2.6 spark && \\\n    echo Spark ${spark_ver} installed in /opt\n\nENV PATH $PATH:/opt/spark/bin\n\nRUN pip install --no-cache-dir luigi\nCOPY luigi.cfg /home/seldon/luigi.cfg\nENV LUIGI_CONFIG_PATH /home/seldon/luigi.cfg\n\n# add Kafkacat for debugging kafka\nRUN mkdir -p /opt && \\ \n    cd /opt && \\\n    git clone https://github.com/edenhill/librdkafka && \\\n    cd librdkafka && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && make install\nRUN mkdir -p /opt && \\ \n    cd /opt && \\\n    git clone https://github.com/edenhill/kafkacat && \\\n    cd kafkacat && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && make install\n\nENV SELDON_HOME /home/seldon\nRUN mkdir -p  \"$SELDON_HOME\"\nWORKDIR $SELDON_HOME\n\nARG SELDON_SPARK_VERSION\nCOPY ./seldon-spark-${SELDON_SPARK_VERSION}-jar-with-dependencies.jar $SELDON_HOME/libs/\n\nRUN ln -s $SELDON_HOME/libs/seldon-spark-${SELDON_SPARK_VERSION}-jar-with-dependencies.jar $SELDON_HOME/libs/seldon-spark.jar\n\nCOPY seldon.conf /home/seldon\nRUN (mkdir /root/.seldon && ln -s /home/seldon/seldon.conf /root/.seldon/seldon.conf)\n\nRUN mkdir -p /seldon-data/conf\nRUN mkdir -p /seldon-data/seldon-models\nVOLUME /seldon-data\n\nCOPY client-dashboard.json $SELDON_HOME\n\n#\n# Add Maven\n#\n\nARG MAVEN_VERSION=3.3.9\nARG USER_HOME_DIR=\"/home/seldon\"\n\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n  && curl -fsSL https://apache.osuosl.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz \\\n    | tar -xzC /usr/share/maven --strip-components=1 \\\n  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\n\nENV MAVEN_HOME /usr/share/maven\nENV MAVEN_CONFIG \"$USER_HOME_DIR/.m2\"\n\n#COPY settings-docker.xml /usr/share/maven/ref/\n\nVOLUME \"$USER_HOME_DIR/.m2\"\n\nADD grpc-util ${SELDON_HOME}/grpc-util\n\n"
}