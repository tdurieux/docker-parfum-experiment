{
  "startTime": 1674240733081,
  "endTime": 1674240733326,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 118
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM buildpack-deps:jessie-scm\n\n#wrk\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y build-essential libssl-dev git \\\n    && git clone https://github.com/wg/wrk.git \\\n    && cd wrk \\\n    && make \\\n    && cp wrk /usr/local/bin && rm -rf /var/lib/apt/lists/*;\n\n# Install .NET CLI dependencies\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        libc6 \\\n        libcurl3 \\\n        libgcc1 \\\n        libgssapi-krb5-2 \\\n        libicu52 \\\n        liblttng-ust0 \\\n        libssl1.0.0 \\\n        libstdc++6 \\\n        libunwind8 \\\n        libuuid1 \\\n        zlib1g \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install .NET Core SDK\nENV DOTNET_SDK_VERSION 1.0.1\nENV DOTNET_SDK_DOWNLOAD_URL https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-dev-debian-x64.$DOTNET_SDK_VERSION.tar.gz\nRUN curl -f -SL $DOTNET_SDK_DOWNLOAD_URL --output dotnet.tar.gz \\\n    && mkdir -p /usr/share/dotnet \\\n    && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \\\n    && rm dotnet.tar.gz \\\n    && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet\n\n# Trigger the population of the local package cache\nENV NUGET_XMLDOC_MODE skip\nRUN mkdir warmup \\\n    && cd warmup \\\n    && dotnet new classlib --language F# \\\n    && cd .. \\\n    && rm -rf warmup \\\n    && rm -rf /tmp/NuGetScratch\n\n# snapshot versions found via http://download.mono-project.com/repo/debian/dists/wheezy/snapshots/4.8.0.524/snapshots/\nENV MONO_VERSION 4.6.2.16\n#Install mono\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF  \\\n    && echo \"deb http://download.mono-project.com/repo/debian wheezy-libjpeg62-compat main\" | tee -a /etc/apt/sources.list.d/mono-xamarin.list \\\n    && echo \"deb http://download.mono-project.com/repo/debian wheezy/snapshots/$MONO_VERSION  main\" | tee -a /etc/apt/sources.list.d/mono-xamarin.list \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y mono-devel ca-certificates-mono fsharp mono-vbnc nuget referenceassemblies-pcl mono-complete \\\n    && rm -rf /var/lib/apt/lists/*\n\n#Other miscellaneous dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y lsof && rm -rf /var/lib/apt/lists/*;\n\nCOPY . /usr/src/app/source\nWORKDIR /usr/src/app/source\nEXPOSE 8083\n\nRUN dotnet --info && mono --version\n\nCMD \"./build.sh\""
}