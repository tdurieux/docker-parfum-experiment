{
  "startTime": 1674236384256,
  "endTime": 1674236384462,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 101
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:edge\nMAINTAINER Onni Hakala - Geniem Oy. <onni.hakala@geniem.com>\n\n# Install dependencies and small amount of devtools\nRUN apk add --update curl bash nano nginx ca-certificates \\\n    # Libs for php\n    libssh2 libpng freetype libjpeg-turbo libgcc libxml2 libstdc++ icu-libs libltdl libmcrypt \\\n    # WP-CLI will try to use interactive mode and causes few errors in output\n    # when ncurses is not installed\n    ncurses \\\n    # For mails\n    msmtp \\\n    # Install gettext\n    gettext \\\n    # For mysql import/export\n    mysql-client \\\n    # Set timezone according your location\n    tzdata \\\n\n    ##\n    # PHP 5.X\n    ##\n    php5 php5-fpm php5-json php5-zlib php5-xml php5-pdo php5-phar php5-openssl \\\n    php5-pdo_mysql php5-mysqli php5-gd php5-mcrypt php5-curl php5-opcache php5-ctype  \\\n    php5-intl php5-bcmath php5-dom php5-xmlreader php5-apcu php5-mysql php5-iconv && \\\n\n    # Small fixes to php & nginx\n    ln -s /etc/php5 /etc/php && \\\n    ln -s /usr/lib/php5 /usr/lib/php && \\\n    mkdir -p /var/log/php/ && \\\n\n    # Create directory for msmtp mail logging\n    mkdir -p /var/log/mail && \\\n\n    # Upgrade musl\n    apk add -u musl && \\\n\n    # Remove nginx user because we will create a user with correct permissions dynamically\n    deluser nginx && \\\n    mkdir -p /var/log/nginx && \\\n    mkdir -p /tmp/nginx/body && \\\n\n    # Remove default localhost folder\n    rm -rf /var/www/localhost && \\\n\n    # Create uploads folder and project folder\n    mkdir -p /var/www/uploads && \\\n    mkdir -p /var/www/project/web && \\\n\n    # Remove default crontab\n    rm /var/spool/cron/crontabs/root && \\\n\n    ##\n    # Add S6-overlay to use S6 process manager\n    # source: https://github.com/just-containers/s6-overlay/#the-docker-way\n    ##\n    curl -f -L https://github.com/just-containers/s6-overlay/releases/download/v1.17.2.0/s6-overlay-amd64.tar.gz \\\n    | tar -xvzC / && \\\n\n    ##\n    # Install wp-cli\n    # source: http://wp-cli.org/\n    ##\n    curl -f -L https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -o /usr/local/bin/wp-cli && \\\n    chmod +rx /usr/local/bin/wp-cli && \\\n    # Install Depencies for wp-cli\n    # - It uses less internally to output help pages\n    apk add less && \\\n\n    ##\n    # Install cronlock for running cron correctly with mulitple container setups\n    # https://github.com/kvz/cronlock\n    ##\n    curl -f -L https://raw.githubusercontent.com/kvz/cronlock/master/cronlock -o /usr/local/bin/cronlock && \\\n    chmod +rx /usr/local/bin/cronlock && \\\n\n    # Remove cache and tmp files\n    rm -rf /var/cache/apk/* && \\\n    rm -rf /tmp/*\n\n##\n# Add Project files like nginx and php-fpm processes and configs\n# Also custom scripts and bashrc\n##\nCOPY rootfs/ /\n\n# Update path with composer files + wpcs\nENV TERM=\"xterm\" \\\n    DB_HOST=\"\" \\\n    DB_NAME=\"\" \\\n    DB_USER=\"\"\\\n    DB_PASSWORD=\"\"\\\n    # Set defaults which can be overriden\n    DB_PORT=\"3306\" \\\n    # Use default web port in nginx but allow it to be overridden\n    # This also works correctly with flynn:\n    # https://github.com/flynn/flynn/issues/3213#issuecomment-237307457\n    PORT=\"80\" \\\n    # Set defaults for redis\n    WP_REDIS_PORT=\"6379\" \\\n    WP_REDIS_DATABASE=\"0\" \\\n    WP_REDIS_SCHEME=\"tcp\" \\\n    WP_REDIS_CLIENT=\"pecl\" \\\n    # Cronlock is used to stop simultaneous cronjobs in clusterised environments\n    CRONLOCK_HOST=\"\" \\\n    # This is for your project root\n    PROJECT_ROOT=\"/var/www/project\" \\\n    # This is used by nginx and php-fpm\n    WEB_ROOT=\"/var/www/project/web\" \\\n    # Nginx include files\n    NGINX_INCLUDE_DIR=\"/var/www/project/nginx\" \\\n    # Allow bigger file uploads\n    NGINX_MAX_BODY_SIZE=\"64M\" \\\n    # Have sane fastcgi timeout by default\n    NGINX_FASTCGI_TIMEOUT=\"30\" \\\n\n    # Default php memory limit\n    PHP_MEMORY_LIMIT=\"128M\" \\\n\n    # This is used automatically by wp-cli\n    WP_CORE=\"/var/www/project/web/wp\"\\\n    # Use host machine as default SMTP_HOST\n    SMTP_HOST=\"172.17.0.1\" \\\n    # This folder is used to mount files into host machine\n    # You should use this path for your uploads since everything else should be ephemeral\n    UPLOADS_ROOT=\"/var/www/uploads\"\\\n    # This can be overidden by you, it's just default for us\n    TZ=\"Europe/Helsinki\"\n\n# Set default path to project folder for easier running commands in project\nWORKDIR ${PROJECT_ROOT}\n\nEXPOSE ${PORT}\n\nENTRYPOINT [\"/init\"]\n"
}