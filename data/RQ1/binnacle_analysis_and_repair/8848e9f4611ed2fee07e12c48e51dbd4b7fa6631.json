{
  "startTime": 1674244491985,
  "endTime": 1674244492372,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 12,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 12,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 72,
        "columnStart": 12,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 12,
        "columnEnd": 134
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM        debian:stretch-slim\n\nARG         DEBIAN_FRONTEND=noninteractive\nARG         BUILD_DATE\nARG         DOCKER_TAG\nARG         VCS_REF\n\nLABEL       maintainer=\"Emmanuel Dyan <emmanueldyan@gmail.com>\" \\\n            org.label-schema.build-date=$BUILD_DATE \\\n            org.label-schema.name=$DOCKER_TAG \\\n            org.label-schema.description=\"Docker PHP Image based on Debian and including main modules\" \\\n            org.label-schema.url=\"https://cloud.docker.com/u/edyan/repository/docker/edyan/php\" \\\n            org.label-schema.vcs-url=\"https://github.com/edyan/docker-php\" \\\n            org.label-schema.vcs-ref=$VCS_REF \\\n            org.label-schema.schema-version=\"1.0\" \\\n            org.label-schema.vendor=\"edyan\" \\\n            org.label-schema.version=$VERSION \\\n            org.label-schema.docker.cmd=\"docker run -d --rm $DOCKER_TAG\"\n\n# Set a default conf for apt install\nRUN echo 'apt::install-recommends \"false\";' > /etc/apt/apt.conf.d/no-install-recommends && \\\n            # Install a few required packages\n            apt update -y && \\\n            apt install --no-install-recommends -y apt-transport-https gnupg ca-certificates curl && \\\n            # Setup sury repos\n            echo \"deb https://packages.sury.org/php/ stretch main\" > /etc/apt/sources.list.d/sury.org.list && \\\n            curl -f -sS https://packages.sury.org/php/apt.gpg | apt-key add - && \\\n            # Update, upgrade\n            apt update -y && \\\n            apt upgrade -y && \\\n            # Packages\n            apt install --no-install-recommends -y \\\n                iptables \\\n                php7.1-bcmath \\\n                php7.1-bz2 \\\n                # php7.1-cgi \\\n                php7.1-cli \\\n                # php7.1-common \\\n                php7.1-curl \\\n                # php7.1-dba \\\n                # php7.1-dev \\\n                # php7.1-enchant \\\n                php7.1-fpm \\\n                php7.1-gd \\\n                php7.1-gmp \\\n                php7.1-imap \\\n                php7.1-interbase \\\n                php7.1-intl \\\n                php7.1-json \\\n                php7.1-ldap \\\n                php7.1-mbstring \\\n                php7.1-mcrypt \\\n                php7.1-mysql \\\n                php7.1-odbc \\\n                php7.1-opcache \\\n                php7.1-pgsql \\\n                # php7.1-phpdbg \\\n                # php7.1-pspell \\\n                php7.1-readline \\\n                # php7.1-recode \\\n                # php7.1-snmp \\\n                php7.1-soap \\\n                php7.1-sqlite3 \\\n                # php7.1-sybase \\\n                # php7.1-tidy \\\n                php7.1-xml \\\n                php7.1-xmlrpc \\\n                php7.1-zip \\\n                php-apcu \\\n                php-geoip \\\n                php-imagick \\\n                php-ssh2 \\\n                php-tideways && \\\n            # Clean\n            # Remove useless files installed for other PHP Versions\n            rm -rf /usr/lib/php/20131226 /usr/lib/php/20151012 /usr/lib/php/20170718 /usr/lib/php/20180731 && \\\n            rm -rf /etc/php/5.6 /etc/php/7.0 /etc/php/7.2 /etc/php/7.3 && \\\n            # Install a few extensions with PECL instead of distro ones\n            apt install --no-install-recommends -y build-essential libmemcached11 libmemcachedutil2 libmemcached-dev php-pear php7.1-dev pkg-config zlib1g-dev && \\\n            pecl channel-update pecl.php.net && \\\n            pecl install memcached mongodb redis xdebug && \\\n            # Activate it\n            echo \"extension=mongodb.so\" > /etc/php/7.1/mods-available/mongodb.ini && \\\n            phpenmod mongodb && \\\n            echo \"extension=memcached.so\" > /etc/php/7.1/mods-available/memcached.ini && \\\n            phpenmod memcached && \\\n            echo \"extension=redis.so\" > /etc/php/7.1/mods-available/redis.ini && \\\n            phpenmod redis && \\\n            echo \"zend_extension=xdebug.so\" > /etc/php/7.1/mods-available/xdebug.ini && \\\n            phpenmod xdebug && \\\n            apt purge --autoremove -y build-essential libmemcached-dev php-pear php7.1-dev pkg-config zlib1g-dev && \\\n            # Clean\n            apt autoremove -y && \\\n            apt autoclean && \\\n            apt clean && \\\n            # Empty some directories from all files and hidden files\n            find /root /tmp -mindepth 1 -delete && \\\n            rm -rf /build /var/lib/apt/lists/* /usr/share/man/* /usr/share/doc/* \\\n                   /var/cache/* /var/log/* /usr/share/php/docs /usr/share/php/tests\n\nCOPY        php-cli.ini    /etc/php/7.1/cli/conf.d/30-custom-php.ini\nCOPY        php-fpm.ini    /etc/php/7.1/fpm/conf.d/30-custom-php.ini\nCOPY        www.conf       /etc/php/7.1/fpm/pool.d/\n\n\n# For custom Configuration that comes from outside (via a docker compose mount)\nRUN         mkdir /etc/php/7.1/fpm/user-conf.d && \\\n            echo \"; Default empty file\" > /etc/php/7.1/fpm/user-conf.d/example.conf && \\\n# Global Logs\n            mkdir /var/log/php && \\\n# Create home for www-data\n            mkdir /home/www-data && \\\n            chown www-data:www-data /home/www-data && \\\n            usermod -d /home/www-data www-data && \\\n            mkdir -p /run/php && \\\n            chown www-data:www-data /run/php\n\nCOPY        run.sh     /run.sh\nRUN         chmod +x   /run.sh\n\nENV         ENVIRONMENT dev\nENV         PHP_ENABLED_MODULES \"\"\nENV         FPM_UID 33\nENV         FPM_GID 33\n\nEXPOSE      9000\n\nCMD         [\"/run.sh\"]\n"
}