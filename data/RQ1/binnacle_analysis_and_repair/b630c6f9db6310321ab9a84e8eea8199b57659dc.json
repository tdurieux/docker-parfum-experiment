{
  "startTime": 1674234497416,
  "endTime": 1674234497480,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 27,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# JavaScript visualizer backend using Node.js\n\n# to build:\n# docker build -t=\"pgbovine/cokapi-js:v1\" .\n#\n# to test:\n# docker run -t -i --rm --user=netuser --net=none --cap-drop all pgbovine/cokapi-js:v1 bash\n#\n# remember --rm or else stale old containers will be left around!\n# use \"docker ps -a\" to see all containers\n\n# don't use 'latest' tag since that might change\nFROM ubuntu:16.04\nMAINTAINER Philip Guo <philip@pgbovine.net>\n\nRUN useradd netuser\n\n# if apt-get doesn't work, then follow these instructions:\n# http://stackoverflow.com/questions/24991136/docker-build-could-not-resolve-archive-ubuntu-com-apt-get-fails-to-install-a\n# Uncomment the following line in /etc/default/docker DOCKER_OPTS=\"--dns 8.8.8.8 --dns 8.8.4.4\"\n# Restart the Docker service sudo service docker restart\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  python && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /tmp/javascript\nADD node-v6.0.0-linux-x64.tar.xz /tmp/javascript\n\n# use this to tell npm what dependencies to install\nADD package.json /tmp/javascript\n\n# - customize $PATH to run my version of npm\nRUN cd /tmp/javascript/ && PATH=/tmp/javascript/node-v6.0.0-linux-x64/bin/:$PATH npm install && npm cache clean --force;\n\n# add tests to container\nADD golden_test.py /tmp/javascript\nRUN mkdir /tmp/javascript/tests/\nADD tests/ /tmp/javascript/tests/\n\n\n# do this last so that even if this file changes, everything else\n# earlier in this file doesn't need to be re-run\nADD jslogger.js /tmp/javascript\n"
}