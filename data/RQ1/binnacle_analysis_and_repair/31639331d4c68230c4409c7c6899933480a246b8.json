{
  "startTime": 1674235508055,
  "endTime": 1674235508194,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 23,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 23,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 23,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#docker build -t kaltura/media-server .\n#docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)\n#docker run -p 1935:1935 -p 8087:8087 --name wowza_instance -t kaltura/media-server\n#docker exec -it `docker ps | grep \"media-server\" | awk '{print $1}' ` bash\n\nARG WowzaVersion=4.7.6\n\n#create baseline\nFROM  wowzamedia/wowza-streaming-engine-linux:$WowzaVersion AS baseWowza\n\n\n#build a build machine\nFROM java:8-jdk AS build\n\nENV PATH ${PATH}:/usr/local/gradle-2.12/bin\n\nRUN apt-get update && apt-get install -y --no-install-recommends unzip && rm -rf /var/lib/apt/lists/*;\n\n# Install gradle\nWORKDIR /usr/local\nRUN wget https://services.gradle.org/distributions/gradle-2.12-bin.zip && \\\n    unzip gradle-2.12-bin.zip && \\\n    rm -f gradle-2.12-bin.zip\n\n\n## deploy code\nWORKDIR  /usr/local/source\n\n# copy all jars from wowza docker\nCOPY --from=baseWowza   /usr/local/WowzaStreamingEngine/lib /opt/local/WowzaStreamingEngine/lib\n\n#copy all source code\nCOPY ./KalturaWowzaServer ./KalturaWowzaServer\nCOPY ./build.gradle ./build.gradle\nCOPY ./settings.gradle ./settings.gradle\n\n# build\nARG JarVersion=1.0.0\nRUN gradle -Pversion=$JarVersion prepareRelease\n\n\n# create the actual docker\nFROM  wowzamedia/wowza-streaming-engine-linux:$WowzaVersion\n\nMAINTAINER guy.jacubovski@kaltura.com\n\n# for debug and scripts\nRUN apt-get update && apt-get -y --no-install-recommends install less vim htop curl jq && rm -rf /var/lib/apt/lists/*;\n\nENV SERVICE_URL https://www.kaltura.com\nENV PARTNER_ID -5\nENV PARTNER_ADMIN_SECRET XXX\nENV SERVER_NODE_HOST_NAME @HOST_NAME@\nENV NVIDIA_VISIBLE_DEVICES all\nENV NVIDIA_DRIVER_CAPABILITIES compute,video,utility\n\nEXPOSE 1935/tcp 8086/tcp 8087/tcp 8088/tcp 554/tcp\n\nVOLUME [\"/var/log/wowza\"]\n\n#remove unwanted stuff from images\nRUN rm -rf /usr/local/WowzaStreamingEngine/content/ && \\\n    rm -rf /usr/local/WowzaStreamingEngine/documentation/ && \\\n    rm -rf /usr/local/WowzaStreamingEngine/examples/ && \\\n    rm -rf /usr/local/WowzaStreamingEngine/*.html && \\\n    rm -rf /var/lib/apt/lists/*\n\n\nWORKDIR  /usr/local/WowzaStreamingEngine/lib\n\n#copy build artifacts from build machine\nCOPY --from=build /usr/local/source/KalturaWowzaServer/build/tmp/artifacts/* ./\n\n#create symlinks\nRUN rm -f KalturaClientLib.jar && \\\n    rm -f KalturaWowzaServer.jar && \\\n    ln -s KalturaClientLib-*.jar KalturaClientLib.jar && \\\n    ln -s KalturaWowzaServer-*.jar KalturaWowzaServer.jar\n\n\n\n# copy configuration\nWORKDIR  /usr/local/WowzaStreamingEngine/conf\nCOPY ./installation/configTemplates/.   ./\nCOPY ./installation/kalturaEntryPoint.sh   /sbin/\nCOPY ./installation/updateServerNodeConfiguration.sh   /sbin/\n#COPY ./installation/configTemplates/templates/HD_plus.xml /usr/local/WowzaStreamingEngine/transcoder/templates\n\n\nENTRYPOINT [\"/sbin/kalturaEntryPoint.sh\"]\n"
}