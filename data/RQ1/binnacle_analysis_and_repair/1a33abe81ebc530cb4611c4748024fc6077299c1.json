{
  "startTime": 1674239582795,
  "endTime": 1674239582857,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -- stage 1: build static routinator with musl libc for alpine\nFROM rust:1.35.0-stretch as build\n\nRUN apt-get -yq update && \\\n    apt-get -yq --no-install-recommends install musl-tools && rm -rf /var/lib/apt/lists/*;\n\nRUN rustup target add x86_64-unknown-linux-musl\n\nWORKDIR /tmp/routinator\nCOPY . .\n\nRUN cargo build --target=x86_64-unknown-linux-musl --release --locked\n\n# -- stage 2: create alpine-based container with the static routinator\n#             executable\nFROM alpine:3.10.0\nCOPY --from=build /tmp/routinator/target/x86_64-unknown-linux-musl/release/routinator /usr/local/bin/\n\n# Install rsync as routinator depends on it\nRUN apk add --no-cache rsync\n\n# Create the repository and TAL directories\nRUN mkdir -p /root/.rpki-cache/repository\nRUN mkdir -p /root/.rpki-cache/tals\n\n# Due to ARIN TAL distribution terms, we can't do this here.\n# An individual user, however, might want to anyway - after reviewing\n# https://www.arin.net/resources/rpki/tal.html.\n#\n#COPY --from=build /tmp/routinator/tals/*.tal /root/.rpki-cache/tals/\n\nEXPOSE 3323/tcp\nEXPOSE 9556/tcp\nENTRYPOINT [\"routinator\"]\nCMD [\"server\", \"--rtr\", \"0.0.0.0:3323\", \"--http\", \"0.0.0.0:9556\"]\n"
}