{
  "startTime": 1674252610614,
  "endTime": 1674252610938,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 0,
        "columnEnd": 89
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 0,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 0,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 0,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 0,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 0,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 0,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 26,
        "columnStart": 0,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 59,
        "columnStart": 0,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 69,
        "columnStart": 0,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM hurricane/dockergui:x11rdp1.2\n\n# set variables\n# User/Group Id gui app will be executed as default are 99 and 100\nENV USER_ID=99 GROUP_ID=100 APP_NAME=\"ComicTagger\" WIDTH=1280 HEIGHT=720 TERM=xterm UNRAR_LIB_PATH=\"/usr/lib/libunrar.so\"\n\n# Use baseimage-docker's init system\nCMD [\"/sbin/my_init\"]\n\n# Add local files\nADD src/ /\n\n# update apt and install dependencies\nRUN add-apt-repository \"deb http://us.archive.ubuntu.com/ubuntu/ trusty universe multiverse\" && \\\nadd-apt-repository \"deb http://us.archive.ubuntu.com/ubuntu/ trusty-updates universe multiverse\" && \\\napt-get update -qq && \\\n apt-get install --no-install-recommends \\\npython-dev \\\nliblcms1-dev \\\nlibtiff5-dev \\\nlibjpeg8-dev \\\nlibjpeg-turbo8-dev \\\nlibjpeg-dev \\\ncmake \\\npython-pip \\\nrar \\\nunrar -y && \\\n\n# build openjpeg2 support\ncd /tmp && \\\n wget https://downloads.sourceforge.net/project/openjpeg.mirror/2.0.1/openjpeg-2.0.1.tar.gz && \\\ntar xzvf openjpeg-2.0.1.tar.gz && \\\ncd openjpeg-2.0.1/ && \\\ncmake . && \\\nmake && \\\nmake install && \\\n\n# install unrar libraries\ncd /tmp && \\\n wget https://www.rarlab.com/rar/unrarsrc-5.2.7.tar.gz && \\\ntar -xvf unrarsrc-5.2.7.tar.gz && \\\ncd unrar && \\\nmake lib && \\\nmake install-lib && \\\n\n# install PIL\nln -s /usr/include/freetype2 /usr/local/include/freetype && \\\nln -s /usr/lib/`uname -i`-linux-gnu/libjpeg.so /usr/lib && \\\nln -s /usr/lib/`uname -i`-linux-gnu/libz.so /usr/lib && \\\nln -s /usr/lib/`uname -i`-linux-gnu/liblcms.so /usr/lib && \\\nln -s /usr/lib/x86_64-linux-gnu/libfreetype.so /usr/lib && \\\n pip install --no-cache-dir PIL --allow-external PIL --allow-unverified PIL && \\\n\n\n# install comictagger dependencies and git-core\napt-get update -qq && \\\n apt-get install --no-install-recommends \\\npython-qt4 \\\npython-bs4 \\\ngit-core -y && \\\n\n#Â uninstall pil and install pillow dependencies\npip uninstall pil -y && \\\napt-get update -qq && \\\n apt-get install --no-install-recommends \\\nliblcms2-dev \\\ntcl8.6-dev \\\ntk8.6-dev \\\npython-tk \\\nlibwebp-dev -y && \\\n\n# install pip packages\npip install --no-cache-dir natsort PyPDF2 unrar configparser && \\\n pip install --no-cache-dir pillow && \\\n\n# fetch comictagger from source\ncd /opt && \\\ngit clone https://github.com/davide-romanini/comictagger.git && \\\n\n# set additional config files\nmv /000-add-in-config.sh /etc/my_init.d/000-add-in-config.sh && \\\nchmod +x /etc/my_init.d/000-add-in-config.sh && \\\n\n# clean up\napt-get clean && \\\nrm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && rm openjpeg-2.0.1.tar.gz\n\n"
}