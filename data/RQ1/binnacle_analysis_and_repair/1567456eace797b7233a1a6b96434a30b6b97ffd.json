{
  "startTime": 1674235530575,
  "endTime": 1674235530784,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM buildpack-deps:wheezy\n\n# remove several traces of debian python\nRUN apt-get purge -y python.*\n\n# http://bugs.python.org/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG C.UTF-8\n\n# gpg: key 18ADD4FF: public key \"Benjamin Peterson <benjamin@python.org>\" imported\nRUN gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\n\nENV PYTHON_VERSION 2.7.10\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 7.1.0\n\nRUN set -x \\\n\t&& mkdir -p /usr/src/python \\\n\t&& curl -f -SL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz\" -o python.tar.xz \\\n\t&& curl -f -SL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz.asc\" -o python.tar.xz.asc \\\n\t&& gpg --batch --verify python.tar.xz.asc \\\n\t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n\t&& rm python.tar.xz* \\\n\t&& cd /usr/src/python \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared --enable-unicode=ucs4 \\\n\t&& make -j$(nproc) \\\n\t&& make install \\\n\t&& ldconfig \\\n\t&& curl -f -SL 'https://bootstrap.pypa.io/get-pip.py' | python2 \\\n\t&& pip install --no-cache-dir --upgrade pip==$PYTHON_PIP_VERSION \\\n\t&& find /usr/local \\\n\t\t\\( -type d -a -name test -o -name tests \\) \\\n\t\t-o \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \\\n\t\t-exec rm -rf '{}' + \\\n\t&& rm -rf /usr/src/python\n\n# install \"virtualenv\", since the vast majority of users of this image will want it\nRUN pip install --no-cache-dir virtualenv\n\n# revised for DaoCloud.io\n\n# these maybe install\nRUN pip install --no-cache-dir pycrypto\nRUN pip install --no-cache-dir lxml\n\n# copy code\nCOPY ./ /tmp/\nWORKDIR /tmp\n\n# install CherryPy & WeRoBot & WeRoBot dependencies: from WeRoBotsource/requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt && rm -rf requirements.txt\n\n# listen 80 port\nEXPOSE 80\n\n# CMD [\"python2\"]\nENTRYPOINT [\"python\"]\nCMD [\"index.py\"]\n"
}