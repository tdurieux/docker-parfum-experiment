{
  "startTime": 1674251165862,
  "endTime": 1674251165973,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# DOCKER-VERSION        1.3.2\n\n# Build UI assets\nFROM node:8-alpine as assets\nRUN apk add --no-cache git\nRUN npm install -g gulp-cli && npm cache clean --force;\nRUN mkdir -p /work\nCOPY bootstrap /work/\nWORKDIR /work\nRUN npm install && npm rebuild node-sass && gulp deploy && npm cache clean --force;\n# Created assets need to be in an unmapped folder to persist\nRUN mkdir -p /assets && mv /work/build/* /assets\n\n\n# Build the PHP container\nFROM mwop/phly-docker-php-swoole:7.2-alpine\n\n# System dependencies\nRUN echo 'http://dl-cdn.alpinelinux.org/alpine/v3.6/community' >> /etc/apk/repositories\nRUN apk update && \\\n  apk add --no-cache \\\n    php7-bcmath \\\n    php7-bz2 \\\n    php7-dom \\\n    php7-intl \\\n    php7-opcache \\\n    php7-pcntl \\\n    php7-sockets \\\n    php7-xsl \\\n    php7-zip\n\n# PHP configuration\nCOPY .docker/php/getlaminas.ini /usr/local/etc/php/conf.d/999-getlaminas.ini\n\n# Add Prestissimo plugin\nRUN composer global require hirak/prestissimo\n\n# Overwrite entrypoint\nCOPY .docker/bin/php-entrypoint /usr/local/bin/entrypoint\n\n# Copy assets\nCOPY --from=assets /assets/assets.json /assets/assets.json\nCOPY --from=assets /assets/css /assets/css/\n\n# Project files\nCOPY bin /var/www/bin\nCOPY composer.json /var/www/\nCOPY composer.lock /var/www/\nCOPY templates /var/www/templates\nCOPY config /var/www/config\nCOPY src /var/www/src\nCOPY data /var/www/data\nCOPY public /var/www/public\n\n# Reset \"local\"/development config files\nRUN rm -f /var/www/config/development.config.php && \\\n  rm -f /var/www/config/autoload/*.local.php && \\\n  mv /var/www/config/autoload/local.php.dist /var/www/config/autoload/local.php\n\n# Build project\nWORKDIR /var/www\nRUN composer install --quiet --no-ansi --no-dev --no-interaction --no-progress --no-scripts --no-plugins --optimize-autoloader\n"
}