{
  "startTime": 1674241856812,
  "endTime": 1674241856891,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 117
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.8\n\nENV SCHEME_VERSION 9.2\n\nRUN apk --no-cache --virtual build-dependencies add build-base m4 \\\n    && rm -f /var/cache/apk/* \\\n    && wget https://ftp.gnu.org/gnu/mit-scheme/stable.pkg/${SCHEME_VERSION}/mit-scheme-${SCHEME_VERSION}-x86-64.tar.gz \\\n    && tar zxvf mit-scheme-${SCHEME_VERSION}-x86-64.tar.gz \\\n    && rm mit-scheme-${SCHEME_VERSION}-x86-64.tar.gz \\\n    && cd mit-scheme-${SCHEME_VERSION}/src \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make compile-microcode \\\n    && make install \\\n    && cd /tmp \\\n    && rm -rf cd mit-scheme-${SCHEME_VERSION} \\\n    && apk del build-dependencies\n\n# Backend.AI specifics\nENV LD_LIBRARY_PATH=/opt/backend.ai/lib\nRUN apk add --no-cache libffi libzmq\nCOPY policy.yml /etc/backend.ai/jail/policy.yml\nLABEL ai.backend.kernelspec=\"1\" \\\n      ai.backend.features=\"batch query uid-match\" \\\n      ai.backend.base-distro=\"alpine3.8\" \\\n      ai.backend.resource.min.cpu=\"1\" \\\n      ai.backend.resource.min.mem=\"256m\" \\\n      ai.backend.runtime-type=\"scheme\" \\\n      ai.backend.runtime-path=\"/usr/bin/scm\" \\\n      ai.backend.service-ports=\"\"\n\n# vim: ft=dockerfile\n"
}