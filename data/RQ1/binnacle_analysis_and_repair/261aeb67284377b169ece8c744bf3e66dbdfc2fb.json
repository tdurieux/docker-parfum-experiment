{
  "startTime": 1674245892921,
  "endTime": 1674245893037,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 21,
        "columnEnd": 134
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Not a big fan of using nightly, but such is our lot currently\nFROM rust:latest as builder\n\nRUN rustup update nightly && rustup default nightly;\n\nRUN apt-get update && apt-get install --no-install-recommends -y cmake golang unzip && rm -rf /var/lib/apt/lists/*;\n#Add checksum or GPG checking\nRUN cd /usr/local && curl -f -o protoc.zip -sSL https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-linux-x86_64.zip && unzip protoc.zip\n\nWORKDIR /usr/src/trow\n\n#First get just the deps\nCOPY Cargo.toml .\nCOPY Cargo.lock .\n\n# trow\nRUN mkdir src/\nRUN echo \"fn main() {}\" > src/main.rs\n\n# trow-server\nCOPY lib/server/Cargo.toml lib/server/\nRUN mkdir -p lib/server/src\nRUN touch lib/server/src/lib.rs\n\n# trow-protobuf\nCOPY lib/protobuf/Cargo.toml lib/protobuf/\nRUN mkdir -p lib/protobuf/src\nRUN touch lib/protobuf/src/lib.rs\n\nRUN cargo fetch #This should be cargo build, but it fails as we need build libs first\nCOPY lib lib\nCOPY src src\nRUN touch src/main.rs\n#Do a normal build for debug\nRUN cargo build\n\nFROM debian:stable-slim\n\nARG VCS_REF\nLABEL org.opencontainers.image.revision=$VCS_REF \\\n      org.opencontainers.image.source=\"https://github.com/ContainerSolutions/trow\"\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends openssl \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nCOPY --from=builder /usr/src/trow/target/debug/trow /trow\n\nCOPY install/self-cert /install/self-cert\nCOPY start-trow.sh /\nRUN mkdir --parents /data/layers\nRUN mkdir /data/scratch\nENTRYPOINT [\"/start-trow.sh\"]\n"
}