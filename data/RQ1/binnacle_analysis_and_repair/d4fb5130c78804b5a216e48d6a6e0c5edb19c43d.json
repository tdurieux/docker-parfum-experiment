{
  "startTime": 1674236293300,
  "endTime": 1674236293471,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n            build-essential \\\n            default-libmysqlclient-dev \\\n            gettext \\\n            git \\\n            libffi-dev \\\n            libjpeg-dev \\\n            libmemcached-dev \\\n            libpq-dev \\\n            libssl-dev \\\n            libxml2-dev \\\n            libxslt1-dev \\\n            locales \\\n            nginx \\\n            python-dev \\\n            python-virtualenv \\\n            python3-dev \\\n            sudo \\\n            supervisor \\\n            zlib1g-dev && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    dpkg-reconfigure locales && \\\n\tlocale-gen C.UTF-8 && \\\n\t/usr/sbin/update-locale LANG=C.UTF-8 && \\\n    mkdir /etc/pretix && \\\n    mkdir /data && \\\n    useradd -ms /bin/bash -d /pretix -u 15371 pretixuser && \\\n    echo 'pretixuser ALL=(ALL) NOPASSWD: /usr/bin/supervisord' >> /etc/sudoers && \\\n    mkdir /static\n\nENV LC_ALL=C.UTF-8 \\\n    DJANGO_SETTINGS_MODULE=production_settings\n\n# To copy only the requirements files needed to install from PIP\nCOPY src/requirements /pretix/src/requirements\nCOPY src/requirements.txt /pretix/src\nRUN pip3 install --no-cache-dir -U \\\n        pip \\\n        setuptools \\\n        wheel && \\\n    cd /pretix/src && \\\n    pip3 install --no-cache-dir \\\n        -r requirements.txt \\\n        -r requirements/mem \\\n        -r requirements/mys \\\n        -r requirements/red \\\n        gunicorn && \\\n    rm -rf ~/.cache/pip\n\nCOPY deployment/docker/pretix.bash /usr/local/bin/pretix\nCOPY deployment/docker/supervisord.conf /etc/supervisord.conf\nCOPY deployment/docker/nginx.conf /etc/nginx/nginx.conf\nCOPY deployment/docker/production_settings.py /pretix/src/production_settings.py\nCOPY src /pretix/src\n\nRUN chmod +x /usr/local/bin/pretix && \\\n    rm /etc/nginx/sites-enabled/default && \\\n    cd /pretix/src && \\\n    rm -f pretix.cfg && \\\n\tmkdir -p data && \\\n    chown -R pretixuser:pretixuser /pretix /data data && \\\n\tsudo -u pretixuser make production\n\nUSER pretixuser\nVOLUME [\"/etc/pretix\", \"/data\"]\nEXPOSE 80\nENTRYPOINT [\"pretix\"]\nCMD [\"all\"]\n"
}