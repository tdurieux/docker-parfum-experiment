{
  "startTime": 1674235704118,
  "endTime": 1674235704236,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 29,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:wheezy\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql && useradd -r -g mysql mysql\n\n# FATAL ERROR: please install the following Perl modules before executing /usr/local/mysql/scripts/mysql_install_db:\n# File::Basename\n# File::Copy\n# Sys::Hostname\n# Data::Dumper\nRUN apt-get update && apt-get install -y perl --no-install-recommends && rm -rf /var/lib/apt/lists/*\n\n# gpg: key 5072E1F5: public key \"MySQL Release Engineering <mysql-build@oss.oracle.com>\" imported\nRUN apt-key adv --keyserver pool.sks-keyservers.net --recv-keys A4A9406876FCBD3C456770C88C718D3B5072E1F5\n\nENV MYSQL_MAJOR 5.7\nENV MYSQL_VERSION 5.7.7-rc\n\nRUN echo \"deb http://repo.mysql.com/apt/debian/ wheezy mysql-${MYSQL_MAJOR}-dmr\" > /etc/apt/sources.list.d/mysql.list\n\n# the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n# also, we set debconf keys to make APT a little quieter\nRUN { \\\n                echo mysql-community-server mysql-community-server/data-dir select ''; \\\n                echo mysql-community-server mysql-community-server/root-pass password ''; \\\n                echo mysql-community-server mysql-community-server/re-root-pass password ''; \\\n                echo mysql-community-server mysql-community-server/remove-test-db select false; \\\n        } | debconf-set-selections \\\n        && apt-get update && apt-get install --no-install-recommends -y mysql-server=\"${MYSQL_VERSION}\"* && rm -rf /var/lib/apt/lists/* \\\n        && rm -rf /var/lib/mysql && mkdir -p /var/lib/mysql\n\nVOLUME /var/lib/mysql\n\nCOPY my.cnf.tmpl /tmp/my.cnf.tmpl\n# need random.sh because otherwise, ENV $RANDOM is not set\nCOPY random.sh /tmp/random.sh\nRUN /tmp/random.sh\n\nCOPY docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n\nEXPOSE 3306\nCMD [\"mysqld\"]\n"
}