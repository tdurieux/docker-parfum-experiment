{
  "startTime": 1674247932929,
  "endTime": 1674247933167,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 24,
        "columnEnd": 43
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 11,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 35,
        "columnStart": 25,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#############################\n# Contest 3.4 Development\n#\n# Docker file to be used with Docker Compose. This will setup a complete development environment\n#\n#############################\n\nFROM php:7.1-apache\n\nMAINTAINER App-Arena GmbH <friends@app-arena.com>\n\n# Set environment variables\nENV COMPOSER_ALLOW_SUPERUSER=1\n#ENV PATH=$PATH:vendor/bin\nENV XDEBUGINI_PATH=/usr/local/etc/php/conf.d/xdebug.ini\n\n# Apache configuration\nRUN a2enmod rewrite\nRUN service apache2 restart\n\n# Install PHP extensions\nRUN curl -f -sL https://deb.nodesource.com/setup_6.x | bash - \\\n    && apt-get update && apt-get install --no-install-recommends -y \\\n      build-essential \\\n      curl \\\n      git \\\n      libcurl4-openssl-dev \\\n      libicu-dev \\\n      libpq-dev \\\n      libpng-dev \\\n      libmcrypt-dev \\\n      mysql-client \\\n      libmysqlclient-dev \\\n      ruby-full \\\n      vim \\\n      nodejs \\\n    && rm -r /var/lib/apt/lists/* \\\n    && docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd \\\n    && docker-php-ext-install \\\n      curl \\\n      gd \\\n      intl \\\n      mbstring \\\n      mcrypt \\\n      mysqli \\\n      pcntl \\\n      pdo_mysql \\\n      zip \\\n      opcache\n\n# Install package manager (bower and composer)\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer \\\n    && npm install -g bower && npm cache clean --force;\n\n# Dev dependencies\nRUN su -c \"gem install sass\"\nRUN curl -fsSL 'https://xdebug.org/files/xdebug-2.5.5.tgz' -o xdebug.tar.gz \\\n        && mkdir -p xdebug \\\n        && tar -xf xdebug.tar.gz -C xdebug --strip-components=1 \\\n        && rm xdebug.tar.gz \\\n        && ( cd xdebug \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-xdebug \\\n        && make -j$(nproc) \\\n        && make install) \\\n\n        && rm -r xdebug \\\n        && docker-php-ext-enable xdebug\n\nRUN echo \"zend_extension=\"`find /usr/local/lib/php/extensions/ -iname 'xdebug.so'` > $XDEBUGINI_PATH\nCOPY ./build/docker/xdebug.ini /tmp/xdebug.ini\nRUN cat /tmp/xdebug.ini >> $XDEBUGINI_PATH\nRUN echo \"xdebug.remote_host=\"`/sbin/ip route|awk '/default/ { print $3 }'` >> $XDEBUGINI_PATH\n\n\n# Change uid and gid of apache to docker user uid/gid\nRUN usermod -u 1000 www-data && groupmod -g 1000 www-data\n\n# Install dependencies\nWORKDIR /var/www/html\nCOPY composer.json package.json bower.json ./\nRUN composer install && npm install --quiet && bower install --allow-root && npm cache clean --force;\n"
}