{
  "startTime": 1674239709659,
  "endTime": 1674239709724,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 18,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.10-alpine3.8\nRUN apk update && apk add --no-cache vim tree lsof bash git gcc musl-dev\nENV GOPATH=/home/decred/go\nENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$GOPATH/bin\nENV DCRSRC_PATH=$GOPATH/src/github.com/decred/dcrdata/\nRUN adduser -s /bin/bash -D -h /home/decred decred && chown -R decred:decred /home/decred\nWORKDIR $DCRSRC_PATH\n# since we might be rebulding often we need to cache this module layer\n# otherwise docker will detect changes everytime and re-download everything again\nRUN go get -u -v github.com/golang/dep/cmd/dep\nCOPY Gopkg* $DCRSRC_PATH\n# we perform a vendor ensure here to speed up future layers\nRUN touch main.go && dep ensure -vendor-only\nCOPY . $DCRSRC_PATH\nRUN chown -R decred:decred $GOPATH\nUSER decred\nRUN dep ensure && dep ensure --vendor-only && go build\nCMD /bin/bash\n\nENTRYPOINT ./dcrdata\n# Note: when building the --squash flag is an experimental feature as of Docker 18.06\n# docker build --squash -t decred/dcrdata .\n# running\n# docker run -ti --rm decred/dcrdata\n# or if attaching source volume and developing interactively\n#  docker run -ti --entrypoint=/bin/bash -v ${PWD}:/home/decred/go/src/github.com/decred/dcrdata --rm decred/dcrdata"
}