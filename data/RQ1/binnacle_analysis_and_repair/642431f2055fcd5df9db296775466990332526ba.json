{
  "startTime": 1674243125422,
  "endTime": 1674243125616,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 1,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:%%TAG%%\n\nRUN apk add --no-cache \\\n\t\tca-certificates\n\n# set up nsswitch.conf for Go's \"netgo\" implementation\n# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275\n# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf\nRUN [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf\n\nENV GOLANG_VERSION %%VERSION%%\n\nRUN set -eux; \\\n\tapk add --no-cache --virtual .build-deps \\\n\t\tbash \\\n\t\tgcc \\\n\t\tmusl-dev \\\n\t\topenssl \\\n\t\tgo \\\n\t; \\\n\texport \\\n# set GOROOT_BOOTSTRAP such that we can actually build Go\n\t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \\\n# ... and set \"cross-building\" related vars to the installed system's values so that we create a build targeting the proper arch\n# (for example, if our build host is GOARCH=amd64, but our build env/image is GOARCH=386, our build needs GOARCH=386)\n\t\tGOOS=\"$(go env GOOS)\" \\\n\t\tGOARCH=\"$(go env GOARCH)\" \\\n\t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \\\n\t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \\\n\t; \\\n# also explicitly set GO386 and GOARM if appropriate\n# https://github.com/docker-library/golang/issues/184\n\tapkArch=\"$(apk --print-arch)\"; \\\n\tcase \"$apkArch\" in \\\n\t\tarmhf) export GOARM='6' ;; \\\n\t\tx86) export GO386='387' ;; \\\n\tesac; \\\n\n\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \\\n\techo '%%SRC-SHA256%%  *go.tgz' | sha256sum -c -; \\\n\ttar -C /usr/local -xzf go.tgz; \\\n\trm go.tgz; \\\n\n\tcd /usr/local/go/src; \\\n\t./make.bash; \\\n\n\trm -rf \\\n# https://github.com/golang/go/blob/0b30cf534a03618162d3015c8705dd2231e34703/src/cmd/dist/buildtool.go#L121-L125\n\t\t/usr/local/go/pkg/bootstrap \\\n# https://golang.org/cl/82095\n# https://github.com/golang/build/blob/e3fe1605c30f6a3fd136b561569933312ede8782/cmd/release/releaselet.go#L56\n\t\t/usr/local/go/pkg/obj \\\n\t; \\\n\tapk del .build-deps; \\\n\n\texport PATH=\"/usr/local/go/bin:$PATH\"; \\\n\tgo version\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\nWORKDIR $GOPATH\n"
}