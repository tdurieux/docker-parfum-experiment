{
  "startTime": 1674234529403,
  "endTime": 1674234529567,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:trusty\nMAINTAINER ODL DevOps <mitx-devops@mit.edu>\n\n# Add package files\nWORKDIR /tmp\n\n# Install base packages\nCOPY apt.txt /tmp/apt.txt\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y $(grep -vE \"^\\s*#\" apt.txt  | tr \"\\n\" \" \") && \\\n    ln -s /usr/bin/nodejs /usr/bin/node && rm -rf /var/lib/apt/lists/*;\n\n# Install pip\nRUN curl -f --silent --location https://bootstrap.pypa.io/get-pip.py > get-pip.py && \\\n    python3 get-pip.py && \\\n    python get-pip.py\n\n# Add non-root user.\nRUN adduser --disabled-password --gecos \"\" mitodl\n\n# Install project packages\n\n# Python 2\nCOPY requirements.txt /tmp/requirements.txt\nCOPY test_requirements.txt /tmp/test_requirements.txt\nCOPY doc_requirements.txt /tmp/doc_requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt && \\\n    pip install --no-cache-dir -r test_requirements.txt && \\\n    pip install --no-cache-dir -r doc_requirements.txt\n\n# Python 3\nRUN pip3 install --no-cache-dir -r requirements.txt && \\\n    pip3 install --no-cache-dir -r test_requirements.txt\n\n# Add project\nCOPY . /src\nWORKDIR /src\nRUN chown -R mitodl:mitodl /src\n\n# Gather static\nRUN ./manage.py collectstatic --noinput\nRUN apt-get clean && apt-get purge\nUSER mitodl\n\n# Set pip cache folder, as it is breaking pip when it is on a shared volume\nENV XDG_CACHE_HOME /tmp/.cache\n\n# Set and expose port for uwsgi config\nEXPOSE 8070\nENV PORT 8070\nCMD if [ -n \"$WORKER\" ]; then celery -A lore worker; else uwsgi uwsgi.ini; fi\n"
}