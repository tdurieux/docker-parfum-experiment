{
  "startTime": 1674235149201,
  "endTime": 1674235149517,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER COMPSs Support <support-compss@bsc.es>\n\n# =============================================================================\n# Configuration required to use the image for jenkins testing\n# =============================================================================\n\n# Install Essentials\nRUN apt-get update && \\\n# Install Packages\n    apt-get install --no-install-recommends -y \\\n\tgit \\\n    vim \\\n    wget \\\n    openssh-server \\\n    sudo && \\\n# gen dummy keys, centos doesn't autogen them like ubuntu does\n    /usr/bin/ssh-keygen -A && \\\n# Set SSH Configuration to allow remote logins without /proc write access\n    sed -ri 's/^session\\s+required\\s+pam_loginuid.so$/session optional pam_loginuid.so/' /etc/pam.d/sshd && \\\n# Create Jenkins User\n    useradd jenkins -m -s /bin/bash && \\\n# Add the jenkins user to sudoers\n    echo \"jenkins  ALL=(ALL)  NOPASSWD:ALL\" >> /etc/sudoers && \\\n# Create ssh required dir\n    mkdir /run/sshd && \\\n# Enable repo compression\n    git config --global core.compression 9 && rm -rf /var/lib/apt/lists/*;\n\n# Expose SSH port and run SSHD\nEXPOSE 22\nCMD [\"/usr/sbin/sshd\",\"-D\"]\n\n# =============================================================================\n# Dependencies for building COMPSs\n# =============================================================================\n\nRUN apt-get update && \\\n# Build dependencies\n    apt-get -y --no-install-recommends install maven && \\\n# Runtime dependencies\n    apt-get -y --no-install-recommends install openjdk-8-jdk graphviz xdg-utils && \\\n# Bindings-common-dependencies\n    apt-get -y --no-install-recommends install libtool automake build-essential && \\\n# Python-binding dependencies\n    apt-get -y --no-install-recommends install python-dev libpython2.7 python-pip python3-pip && \\\n    pip2 install --no-cache-dir numpy dill guppy decorator && \\\n    pip3 install --no-cache-dir numpy dill decorator && \\\n# Python-redis dependencies\n    pip2 install --no-cache-dir redis redis-py-cluster && \\\n    pip3 install --no-cache-dir redis redis-py-cluster && \\\n# pycompsslib dependencies\n    pip2 install --no-cache-dir numpy==1.15.4 scipy==1.0.0 scikit-learn==0.19.1 pandas==0.23.1 matplotlib==2.2.3 flake8 psutil && \\\n    pip3 install --no-cache-dir numpy==1.15.4 scipy==1.0.0 scikit-learn==0.19.1 pandas==0.23.1 matplotlib==2.2.3 flake8 codecov coverage psutil && \\\n# C-binding dependencies\n    apt-get -y --no-install-recommends install libboost-all-dev libxml2-dev csh && \\\n# Extrae dependencies\n    apt-get -y --no-install-recommends install libxml2 gfortran libpapi-dev papi-tools && \\\n# Misc. dependencies\n    apt-get update && \\\n    apt-get -y --no-install-recommends install openmpi-bin openmpi-doc libopenmpi-dev uuid-runtime curl bc && \\\n    yes jenkins2017 | passwd && \\\n# AutoParallel dependencies\n    apt-get -y --no-install-recommends install libgmp3-dev flex bison libbison-dev texinfo libffi-dev && \\\n    pip2 install --no-cache-dir astor sympy enum34 islpy && \\\n# Configure user environment\n# =============================================================================\n# System configuration\n# =============================================================================\n# Add environment variables\n    echo \"JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/\" >> /etc/environment && \\\n    echo \"MPI_HOME=/usr/lib64/openmpi\" >> /etc/environment && \\\n    echo \"LD_LIBRARY_PATH=/usr/lib64/openmpi/lib\" >> /etc/environment && \\\n# Ensure that the jenkins user owns all his files\n    chown -R jenkins /home/jenkins/ && \\\n    chgrp -R jenkins /home/jenkins/ && \\\n    apt-get clean && \\\n    sudo rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n\n"
}