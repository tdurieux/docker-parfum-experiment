{
  "startTime": 1674239883337,
  "endTime": 1674239883370,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Available at cshubnl/shared\nARG BASE_IMAGE=cshub-shared\n\n# build stage\nFROM $BASE_IMAGE as build-client\n\n# Set work dir\nWORKDIR /app/cshub-client\n\n# Copy package files\nCOPY package.json ./\nCOPY yarn.lock ./\n\n# Get dependencies\nRUN yarn install && yarn cache clean;\n\n# Copy source\nCOPY . .\n\n# Build source\nRUN yarn build\n\n# production stage\nFROM nginx:1.15-alpine as production-stage\n\n# Add curl for health check\nRUN apk add curl --no-cache\n\n# Copy over build files\nWORKDIR /usr/share/nginx/html\nCOPY --from=build-client /app/cshub-client/dist .\nCOPY --from=build-client /app/cshub-client/src/config.sh .\n\n# Make the config.js from env generator executable\nRUN [\"chmod\", \"+x\", \"./config.sh\"]\n\n# Expose port 80 for nginx\nEXPOSE 80\n\n# Curl localhost to check if healthy\nHEALTHCHECK CMD curl --fail http://localhost:80/ -A \"dontgothroughprerenderplease\" || exit 1\n\n# Runs nginx and generates config from env vars\nCMD [\"/usr/share/nginx/html/config.sh\"]\n\n"
}