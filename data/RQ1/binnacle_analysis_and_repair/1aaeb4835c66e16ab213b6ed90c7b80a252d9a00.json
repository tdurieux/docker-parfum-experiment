{
  "startTime": 1674242256635,
  "endTime": 1674242256835,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 26,
        "columnEnd": 112
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 44,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER Alex Samorukov <samm@os2.kiev.ua>\n# this is cross-compilation toolkit based on GCC 5.1 for the powerpcspe devices\n\n# update os\nRUN apt-get update && apt-get upgrade -y\n# install packages required to build toolchain and native gcc\nRUN apt-get install --no-install-recommends -y git autoconf automake libtool gperf bison \\\n    build-essential flex texinfo wget gawk ncurses-dev libgmp-dev \\\n    libmpfr-dev libmpc-dev && rm -rf /var/lib/apt/lists/*;\n# lets add builder user and work from it\nRUN useradd --home /opt/golang builder\nADD configs /opt/golang/configs/\n# add turris config and build toolchain\nADD samples /opt/golang/ct-ng/samples/\nADD go-caller.patch /opt/golang/src/\nRUN chown -R builder:builder /opt/golang\nWORKDIR /opt/golang\n# remove root password to allow su and switch to builder\nRUN passwd -d root\n# switch user and set home\nUSER builder\n# grab gcc 5.1.0 source and extract it, apply patch from https://bugzilla.redhat.com/show_bug.cgi?id=1212472,\n# remove original tar then\nENV GCC_VERSION=5.1.0\nRUN cd /opt/golang/src && wget https://gcc.cybermirror.org/releases/gcc-${GCC_VERSION}/gcc-${GCC_VERSION}.tar.bz2 \\\n    && tar -xjf gcc-${GCC_VERSION}.tar.bz2 && rm gcc-${GCC_VERSION}.tar.bz2\nRUN cd /opt/golang/src && patch -p0 -d gcc-${GCC_VERSION}  -i ../go-caller.patch\n# fetch crosstool-ng from git, we will use commit known to work fine\nENV CT_NG_COMMIT=cd47c091ba6f7d6d9a98c85fc5729a434c99d4ea\nRUN cd /opt/golang/src && git clone https://github.com/crosstool-ng/crosstool-ng \\\n    && cd crosstool-ng && git checkout $CT_NG_COMMIT\n# configure and install ct-ng\nRUN cd src/crosstool-ng && autoreconf -i && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/golang/ct-ng && make install\n# build powerpcspe go\nRUN cd /opt/golang/ct-ng && bin/ct-ng powerpc-turris-linux-gnuspe && bin/ct-ng build && rm -rf .build\n# build native go from the same source - required to build go tools for the x86_64 platform\nRUN mkdir gccbuild && cd gccbuild \\\n    && /opt/golang/src/gcc-${GCC_VERSION}/configure --disable-multilib \\\n\t--enable-languages=go --prefix /opt/golang/x-tools/x86_64-linux-gnu \\\n    && make -j `nproc` && make install && cd /opt/golang && rm -rf gccbuild\n# add env scripts and create some links\nRUN mkdir /opt/golang/configs/bin && cd /opt/golang/configs/bin && \\\n    ln -s /opt/golang/x-tools/x86_64-linux-gnu/bin/gccgo && \\\n    ln -s /opt/golang/x-tools/x86_64-linux-gnu/bin/go && \\\n    ln -s /opt/golang/x-tools/x86_64-linux-gnu/bin/gofmt\n\n"
}