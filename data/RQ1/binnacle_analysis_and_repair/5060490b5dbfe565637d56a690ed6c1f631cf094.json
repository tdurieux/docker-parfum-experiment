{
  "startTime": 1674242159937,
  "endTime": 1674242160143,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 2,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 2,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 74,
        "columnStart": 2,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 2,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 2,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# r2docker\n# ========\n#\n# Requires 1GB of free disk space\n#\n# Build docker image with:\n# $ docker build -t r2docker:latest .\n#\n# Run the docker image:\n# $ docker images\n# $ export DOCKER_IMAGE_ID=$(docker images --format '{{.ID}}' -f 'label=r2docker')\n# $ docker run -ti --cap-drop=ALL r2docker:latest\n#\n# Once you quit the bash session get the container id with:\n# $ docker ps -a | grep bash\n#\n# To get into that shell again just type:\n# $ docker start -ai <containedid>\n#\n# To share those images:\n# $ docker export <containerid> | xz > container.xz\n# $ xz -d < container.xz | docker import -\n#\n#\n# If you willing to debug a program within Docker, you should run it with CAP_SYS_PTRACE:\n#\n# $ docker run -it --cap-drop=ALL --cap-add=SYS_PTRACE r2docker:latest\n# $ r2 -d /bin/true\n#\n\n# Using debian 9 as base image.\nFROM debian:9\n\n# Label base\nLABEL r2docker latest\n\n# Radare version\nARG R2_VERSION=master\n# R2pipe python version\nARG R2_PIPE_PY_VERSION=0.8.9\n# R2pipe node version\nARG R2_PIPE_NPM_VERSION=2.3.2\n\nENV R2_VERSION ${R2_VERSION}\nENV R2_PIPE_PY_VERSION ${R2_PIPE_PY_VERSION}\nENV R2_PIPE_NPM_VERSION ${R2_PIPE_NPM_VERSION}\n\nRUN echo -e \"Building versions:\\n\\\n  R2_VERSION=$R2_VERSION\\n\\\n  R2_PIPE_PY_VERSION=${R2_PIPE_PY_VERSION}\\n\\\n  R2_PIPE_NPM_VERSION=${R2_PIPE_NPM_VERSION}\"\n\n# Build radare2 in a volume to minimize space used by build\nVOLUME [\"/mnt\"]\n\n# Install all build dependencies\n# Install bindings\n# Build and install radare2 on master branch\n# Remove all build dependencies\n# Cleanup\nRUN DEBIAN_FRONTEND=noninteractive dpkg --add-architecture i386 && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y \\\n  curl \\\n  gcc \\\n  git \\\n  bison \\\n  pkg-config \\\n  make \\\n  glib-2.0 \\\n  libc6:i386 \\\n  libncurses5:i386 \\\n  libstdc++6:i386 \\\n  gnupg2 \\\n  sudo && \\\n  curl -f -sL https://deb.nodesource.com/setup_8.x | bash - && \\\n  apt-get install --no-install-recommends -y nodejs python-pip && \\\n  pip install --no-cache-dir r2pipe==\"$R2_PIPE_PY_VERSION\" && \\\n  npm install --unsafe-perm -g \"r2pipe@$R2_PIPE_NPM_VERSION\" && \\\n  cd /mnt && \\\n  git clone -b \"$R2_VERSION\" -q --depth 1 https://github.com/radare/radare2.git && \\\n  cd radare2 && \\\n  ./sys/install.sh && \\\n  make install && \\\n  apt-get install --no-install-recommends -y xz-utils && \\\n  apt-get remove --purge -y \\\n  bison \\\n  python-pip \\\n  glib-2.0 && \\\n  apt-get autoremove --purge -y && \\\n  apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && npm cache clean --force;\n\n# Create non-root user\nRUN useradd -m r2 && \\\n  adduser r2 sudo && \\\n  echo \"r2:r2\" | chpasswd\n\n# Initilise base user\nUSER r2\nWORKDIR /home/r2\nENV HOME /home/r2\n\n# Setup r2pm\nRUN r2pm init && \\\n  r2pm update && \\\n  chown -R r2:r2 /home/r2/.config\n\n# Base command for container\nCMD [\"/bin/bash\"]\n"
}