{
  "startTime": 1674244651461,
  "endTime": 1674244651746,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM zcalusic/debian-stretch as builder\nMAINTAINER Zlatko Čalušić <zcalusic@bitsync.net>\n\nENV NGINX_VERSION 1.15.8\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n       gcc \\\n       git \\\n       libc6-dev \\\n       libgd-dev \\\n       libgeoip-dev \\\n       libpcre3-dev \\\n       libssl-dev \\\n       libxslt1-dev \\\n       make \\\n    && cd /usr/src \\\n    && wget -O- \"https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" | tar xzo \\\n    && git clone https://github.com/GUI/nginx-upstream-dynamic-servers \\\n    && cd \"/usr/src/nginx-${NGINX_VERSION}\" \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n       --prefix=/etc/nginx \\\n       --sbin-path=/usr/sbin/nginx \\\n       --modules-path=/usr/lib/nginx/modules \\\n       --conf-path=/etc/nginx/nginx.conf \\\n       --error-log-path=/dev/stderr \\\n       --http-log-path=/dev/stdout \\\n       --pid-path=/run/nginx.pid \\\n       --lock-path=/run/nginx.lock \\\n       --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n       --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n       --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n       --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n       --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n       --user=www-data \\\n       --group=www-data \\\n       --with-compat \\\n       --with-file-aio \\\n       --with-threads \\\n       --with-http_addition_module \\\n       --with-http_auth_request_module \\\n       --with-http_dav_module \\\n       --with-http_degradation_module \\\n       --with-http_flv_module \\\n       --with-http_geoip_module \\\n       --with-http_gunzip_module \\\n       --with-http_gzip_static_module \\\n       --with-http_image_filter_module \\\n       --with-http_mp4_module \\\n       --with-http_random_index_module \\\n       --with-http_realip_module \\\n       --with-http_secure_link_module \\\n       --with-http_slice_module \\\n       --with-http_ssl_module \\\n       --with-http_stub_status_module \\\n       --with-http_sub_module \\\n       --with-http_v2_module \\\n       --with-http_xslt_module \\\n       --with-mail \\\n       --with-mail_ssl_module \\\n       --with-stream \\\n       --with-stream_geoip_module \\\n       --with-stream_realip_module \\\n       --with-stream_ssl_module \\\n       --with-stream_ssl_preread_module \\\n       --with-cc-opt='-O2 -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC' \\\n       --with-ld-opt='-s -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie' \\\n       --add-module=/usr/src/nginx-upstream-dynamic-servers \\\n    && make -j \"$(nproc)\" install && rm -rf /var/lib/apt/lists/*;\n\nFROM zcalusic/debian-stretch\nMAINTAINER Zlatko Čalušić <zcalusic@bitsync.net>\n\nARG URL\nARG VCS_URL\nARG VCS_REF\nARG BUILD_DATE\n\nLABEL org.label-schema.name=\"NGINX in Docker\" \\\n      org.label-schema.description=\"Run NGINX high-performance HTTP server and reverse proxy in a Docker container\" \\\n      org.label-schema.vendor=\"Zlatko Čalušić\" \\\n      org.label-schema.license=\"MIT\" \\\n      org.label-schema.url=$URL \\\n      org.label-schema.vcs-url=$VCS_URL \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.schema-version=\"1.0\"\n\nCOPY --from=builder /usr/sbin/nginx /usr/sbin/nginx\nCOPY --from=builder /etc/nginx /etc/nginx.default\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n       geoip-database \\\n       geoip-database-extra \\\n       libgd3 \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mkdir /var/cache/nginx\n\nEXPOSE 80 443\n\nCOPY entrypoint.sh /entrypoint.sh\n\nCMD [ \"/entrypoint.sh\" ]\n"
}