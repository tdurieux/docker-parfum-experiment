{
  "startTime": 1674241947880,
  "endTime": 1674241948142,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 120,
        "columnEnd": 149
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 96,
        "columnEnd": 123
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 290
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 187,
        "columnEnd": 244
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 161,
        "columnEnd": 184
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 187,
        "columnEnd": 244
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 161,
        "columnEnd": 184
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Build screenshot image\n#\n\n#\n# Copy gosu binary from consul-template image\n#\nFROM hashicorp/consul-template:0.19.5-alpine as consul-template\n\n\nFROM node:8.14.0-jessie\n\nENV SCREENSHOT_PATH \"/opt/apps/screenshot\"\nENV CHROME_BIN \"/usr/bin/google-chrome-stable\"\nENV CHROME_VERSION \"71.0.3578.98-1\"\n\n\nENV IMAGE_OPTIM_DEPS \"advancecomp gifsicle jpegoptim libjpeg-progs optipng pngcrush fontconfig fontconfig-config libfontconfig1 unzip build-essential g++ flex bison gperf ruby perl libsqlite3-dev libfontconfig1-dev libicu-dev libfreetype6 libssl-dev libpng-dev libjpeg-dev\"\nRUN apt-get update && apt-get install --no-install-recommends -y ${IMAGE_OPTIM_DEPS} && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nENV PNGOUT_PKG \"pngout-20130221-linux-static\"\nRUN wget -q https://static.jonof.id.au/dl/kenutils/${PNGOUT_PKG}.tar.gz -O /tmp/${PNGOUT_PKG}.tar.gz && \\\n    tar -xzpf /tmp/${PNGOUT_PKG}.tar.gz -C /tmp/ && \\\n    cp -f /tmp/${PNGOUT_PKG}/x86_64/pngout-static /usr/bin/pngout && rm /tmp/${PNGOUT_PKG}.tar.gz\n\n\n# TODO: can't this go into YARN deps?\nRUN npm install clean-css-cli@4.1.2 uglify-js@3.0.5 && npm cache clean --force;\n\n# Install chrome\nENV CHROME_APT_KEY_URL \"https://dl-ssl.google.com/linux/linux_signing_key.pub\"\nRUN echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" > /etc/apt/sources.list.d/chrome.list && curl -f -s ${CHROME_APT_KEY_URL} | apt-key add - && apt-get update && apt-get install --no-install-recommends -y google-chrome-stable=${CHROME_VERSION} && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install yarn\nENV YARN_APT_KEY_URL \"https://dl.yarnpkg.com/debian/pubkey.gpg\"\nRUN echo \"deb http://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list && curl -f -s ${YARN_APT_KEY_URL} | apt-key add - && apt-get update && apt-get install --no-install-recommends -y yarn && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install latest dumb-init version\nENV DUMB_INIT_SHA256 37f2c1f0372a45554f1b89924fbb134fc24c3756efaedf11e07f599494e0eff9\nENV DUMB_INIT_VERSION 1.2.2\nRUN wget -q https://github.com/Yelp/dumb-init/releases/download/v${DUMB_INIT_VERSION}/dumb-init_${DUMB_INIT_VERSION}_amd64 -O /bin/dumb-init && chmod +x /bin/dumb-init && echo \"${DUMB_INIT_SHA256}  /bin/dumb-init\" > /tmp/dumb-init.sha256sums && sha256sum -c --quiet /tmp/dumb-init.sha256sums\n\n# Install gosu from consul-template image\nCOPY --from=consul-template /bin/gosu /bin/\n\n# Create screenshot user, used for starting the service inside container\nRUN groupadd netlify && useradd netlify -m -g netlify\n\n\n# Prepare workdir\nRUN mkdir -p ${SCREENSHOT_PATH}\nWORKDIR ${SCREENSHOT_PATH}\n\n# Install startup scripts and config\nCOPY kubernetes/docker/scripts/* /usr/bin/\nRUN chmod +x /usr/bin/*.sh\n\n# Copy screenshot code to container (trigger only \"yarn install\" when these files change)\nCOPY package.json yarn.lock ${SCREENSHOT_PATH}/\n\n# Install screenshot service\nRUN yarn install && yarn cache clean;\n\n# Copy node code to container\nCOPY . ${SCREENSHOT_PATH}/"
}