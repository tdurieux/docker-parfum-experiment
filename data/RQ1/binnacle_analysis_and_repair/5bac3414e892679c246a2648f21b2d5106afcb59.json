{
  "startTime": 1674238557937,
  "endTime": 1674238558291,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedDockerfile": "FROM behance/docker-nginx:8.5\nMAINTAINER Bryan Latten <latten@adobe.com>\n\n# Set TERM to suppress warning messages.\nENV CONF_PHPFPM=/etc/php/7.0/fpm/php-fpm.conf \\\n    CONF_PHPMODS=/etc/php/7.0/mods-available \\\n    CONF_FPMPOOL=/etc/php/7.0/fpm/pool.d/www.conf \\\n    CONF_FPMOVERRIDES=/etc/php/7.0/fpm/conf.d/overrides.user.ini \\\n    APP_ROOT=/app \\\n    SERVER_WORKER_CONNECTIONS=3072 \\\n    SERVER_CLIENT_BODY_BUFFER_SIZE=128k \\\n    SERVER_CLIENT_HEADER_BUFFER_SIZE=1k \\\n    SERVER_CLIENT_BODY_BUFFER_SIZE=128k \\\n    SERVER_LARGE_CLIENT_HEADER_BUFFERS=\"4 256k\" \\\n    PHP_FPM_MAX_CHILDREN=4096 \\\n    PHP_FPM_START_SERVERS=20 \\\n    PHP_FPM_MAX_REQUESTS=1024 \\\n    PHP_FPM_MIN_SPARE_SERVERS=5 \\\n    PHP_FPM_MAX_SPARE_SERVERS=128 \\\n    PHP_FPM_MEMORY_LIMIT=256M \\\n    PHP_FPM_MAX_EXECUTION_TIME=60 \\\n    PHP_FPM_UPLOAD_MAX_FILESIZE=1M \\\n    PHP_OPCACHE_MEMORY_CONSUMPTION=128 \\\n    PHP_OPCACHE_INTERNED_STRINGS_BUFFER=16 \\\n    PHP_OPCACHE_MAX_WASTED_PERCENTAGE=5 \\\n    CFG_APP_DEBUG=1\n\n# - Update security packages, only\nRUN /bin/bash -e /security_updates.sh && \\\n    apt-get install -yqq --no-install-recommends \\\n        gpg-agent \\\n        git \\\n        curl \\\n        wget \\\n        software-properties-common \\\n        locales \\\n    && \\\n    locale-gen en_US.UTF-8 && export LANG=en_US.UTF-8 && \\\n    add-apt-repository ppa:ondrej/php -y && \\\n    echo 'deb http://apt.newrelic.com/debian/ newrelic non-free' | tee /etc/apt/sources.list.d/newrelic.list && \\\n    wget -O- https://download.newrelic.com/548C16BF.gpg | apt-key add - && \\\n    # Prevent newrelic install from prompting for input \\\n    echo newrelic-php5 newrelic-php5/application-name string \"REPLACE_NEWRELIC_APP\" | debconf-set-selections && \\\n    echo newrelic-php5 newrelic-php5/license-key string \"REPLACE_NEWRELIC_LICENSE\" | debconf-set-selections && \\\n    # Perform cleanup \\\n    apt-get remove --purge -yq \\\n        patch \\\n        software-properties-common \\\n        locales \\\n        wget \\\n    && \\\n    /bin/bash /clean.sh && rm -rf /var/lib/apt/lists/*;\n\n# Add PHP and support packages \\\nRUN apt-get update -q && \\\n    # Ensure PHP 5.5 + 5.6 + 7.1 don't accidentally get added by PPA\n    apt-mark hold \\\n            php5.6-cli \\\n            php5.6-common \\\n            php5.6-json \\\n            php7.1-cli \\\n            php7.1-common \\\n            php7.1-json \\\n            php7.2-cli \\\n            php7.2-common \\\n            php7.2-json \\\n            php7.3-cli \\\n            php7.3-common \\\n            php7.3-json \\\n    && \\\n    apt-get -yqq --no-install-recommends install \\\n        php7.0 \\\n        php7.0-apcu \\\n        php7.0-bcmath \\\n        php7.0-bz2 \\\n        php7.0-curl \\\n        php7.0-dev \\\n        php7.0-fpm \\\n        php7.0-gd \\\n        php7.0-igbinary \\\n        php7.0-intl \\\n        php7.0-json \\\n        php7.0-mbstring \\\n        php7.0-mcrypt \\\n        php7.0-pgsql \\\n        php7.0-memcache \\\n        php7.0-memcached \\\n        php7.0-mysql \\\n        php7.0-xdebug \\\n        php7.0-yaml \\\n        php7.0-xml \\\n        php7.0-zip \\\n        newrelic-php5 \\\n        newrelic-php5-common \\\n        newrelic-daemon \\\n    && \\\n    phpdismod pdo_pgsql && \\\n    phpdismod pgsql && \\\n    phpdismod yaml && \\\n    phpdismod xdebug && \\\n    # Remove extra extensions installed via packages for other versions of PHP, leaving the active engine folder\n    rm -rf /usr/lib/php/20121212 && \\\n    rm -rf /usr/lib/php/20131226 && \\\n    rm -rf /usr/lib/php/20160303 && \\\n    rm -rf /usr/lib/php/20170718 && \\\n    curl -f -sS https://getcomposer.org/installer | php && \\\n    mv composer.phar /usr/local/bin/composer && \\\n    # Install new PHP7-stable version of Redis \\\n    pecl install redis-4.2.0 && \\\n    echo \"extension=redis.so\" > $CONF_PHPMODS/redis.ini && \\\n    # Remove dev packages that were only in place just to compile extensions\n    apt-get remove --purge -yq \\\n        php7.0-dev \\\n    && \\\n    /bin/bash /clean.sh && rm -rf /var/lib/apt/lists/*;\n\n# Overlay the root filesystem from this repo\nCOPY ./container/root /\n\n# - Hack: share startup scripts between variant versions by symlinking\nRUN ln -s /usr/sbin/php-fpm7.0 /usr/sbin/php-fpm && \\\n    # Override default ini values for both CLI + FPM\n    phpenmod overrides && \\\n    # Enable NewRelic via Ubuntu symlinks, but disable via extension command in file. Allows cross-variant startup scripts to function.\n    phpenmod newrelic && \\\n    # Run standard set of tweaks to ensure runs performant, reliably, and consistent between variants\n    /bin/bash -e /prep-php.sh\n\nRUN goss -g /tests/php-fpm/7.0.goss.yaml validate && \\\n    /aufs_hack.sh\n\n"
}