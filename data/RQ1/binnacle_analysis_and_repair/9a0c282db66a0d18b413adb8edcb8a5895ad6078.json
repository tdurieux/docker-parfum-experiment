{
  "startTime": 1674239312181,
  "endTime": 1674239312541,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 46,
        "columnStart": 2,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 33,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 39,
        "lineEnd": 43,
        "columnStart": 2,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 60,
        "lineEnd": 78,
        "columnStart": 2,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 43,
        "columnStart": 2,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 43,
        "columnStart": 2,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 78,
        "columnStart": 2,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BUILD_BASE\n# hadolint ignore=DL3006\nFROM $BUILD_BASE\n# FROM ubuntu:19.04\n# FROM debian:9-slim\n\nARG BUILD_DATE\nARG BUILD_VERSION\nARG ICINGA2_VERSION\nARG CERT_SERVICE_TYPE\nARG CERT_SERVICE_VERSION\n\nENV \\\n  TERM=xterm \\\n  DEBIAN_FRONTEND=noninteractive \\\n  TZ='Europe/Berlin'\n\n# ---------------------------------------------------------------------------------------\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# hadolint ignore=DL3008,DL3014,DL3015,DL4005,SC1091,SC2155\nRUN \\\n  chsh -s /bin/bash && \\\n  ln -sf /bin/bash /bin/sh && \\\n  ln -sf \"/usr/share/zoneinfo/${TZ}\" /etc/localtime && \\\n  ln -s  /etc/default /etc/sysconfig && \\\n  apt-get remove \\\n    --allow-remove-essential \\\n    --assume-yes \\\n    --purge \\\n      e2fsprogs libext2fs2 && \\\n  apt-get update && \\\n  apt-get install -y \\\n    --assume-yes \\\n    --no-install-recommends \\\n      apt-utils && \\\n  apt-get dist-upgrade \\\n    --assume-yes && \\\n  apt-get install -y --no-install-recommends \\\n    --assume-yes \\\n      ca-certificates \\\n      curl \\\n      gnupg > /dev/null && \\\n  curl -f \\\n    --silent \\\n    https://packages.icinga.com/icinga.key | apt-key add - && \\\n  . /etc/os-release && \\\n  if [ \"${ID}\" = \"ubuntu\" ]; then \\\n    if [ -n \"${UBUNTU_CODENAME+x}\" ]; then \\\n      DIST=\"${UBUNTU_CODENAME}\"; \\\n    else \\\n      DIST=\"$(lsb_release -c | awk '{print $2}')\"; \\\n    fi \\\n  elif [ \"${ID}\" = \"debian\" ]; then \\\n    DIST=$(awk -F\"[)(]+\" '/VERSION=/ {print $2}' /etc/os-release) ;\\\n  fi && \\\n  echo \" => ${ID} - ${DIST}\" && \\\n  echo \"deb http://packages.icinga.com/${ID} icinga-${DIST} main\" > \"/etc/apt/sources.list.d/${DIST}-icinga.list\" && \\\n  apt-get update && \\\n  apt-get install -y \\\n    --assume-yes \\\n    --no-install-recommends \\\n      icinga2-bin \\\n      icinga2-ido-mysql \\\n      monitoring-plugins \\\n      dnsutils \\\n      file \\\n      fping \\\n      inotify-tools \\\n      jq \\\n      netcat-openbsd \\\n      psmisc \\\n      pwgen \\\n      python3.5-minimal \\\n      libtext-english-perl \\\n      tzdata \\\n      unzip \\\n      xz-utils && \\\n  mkdir -p /etc/icinga2/objects.d && \\\n  mkdir -p /run/icinga2/cmd && \\\n  mkdir -p /etc/icinga2/zones.d/global-templates && \\\n  mkdir -p /etc/icinga2/zones.d/director-global && \\\n  cp /etc/icinga2/zones.conf /etc/icinga2/zones.conf-distributed && \\\n  apt-get remove \\\n    --assume-yes \\\n    --purge \\\n      gnupg && \\\n  apt-get clean && \\\n  apt autoremove \\\n    --assume-yes && \\\n  rm -rf \\\n    /tmp/* \\\n    /var/cache/debconf/* \\\n    /usr/share/doc/* \\\n    /root/.gem \\\n    /root/.cache \\\n    /root/.bundle 2> /dev/null && \\\n  find /var/log -type f -print0 | while IFS= read -r -d '' i; do echo \"\" > \"${i}\"; done && \\\n  echo \"\" && \\\n  command -v icinga2 && \\\n  icinga2 --version && \\\n  icinga2 daemon --validate && \\\n  icinga2 feature list && \\\n  echo \"\" && \\\n  export ICINGA2_VERSION=$(icinga2 --version | head -n1 | awk -F 'version: ' '{printf $2}' | awk -F '-' '{print $1}' | sed 's|r||') && \\\n  echo \"export BUILD_DATE=${BUILD_DATE}\"            > /etc/profile.d/icinga2.sh && \\\n  echo \"export BUILD_VERSION=${BUILD_VERSION}\"     >> /etc/profile.d/icinga2.sh && \\\n  echo \"export ICINGA2_VERSION=${ICINGA2_VERSION}\" >> /etc/profile.d/icinga2.sh && rm -rf /var/lib/apt/lists/*;\n\nCOPY rootfs/ /\nCOPY build/check_mem      /usr/lib/nagios/plugins/check_mem\nCOPY build/check_ssl_cert /usr/lib/nagios/plugins/check_ssl_cert\n\nWORKDIR /etc/icinga2\nVOLUME [\"/etc/icinga2\", \"/var/lib/icinga2\", \"/var/spool/icinga2\", \"/var/cache/icinga2\"]\n\nCMD [\"/init/run.sh\"]\n\nHEALTHCHECK \\\n  --interval=30s \\\n  --timeout=2s \\\n  --retries=10 \\\n  --start-period=15s \\\n  CMD /init/healthcheck.sh\n\n# ---------------------------------------------------------------------------------------\n"
}