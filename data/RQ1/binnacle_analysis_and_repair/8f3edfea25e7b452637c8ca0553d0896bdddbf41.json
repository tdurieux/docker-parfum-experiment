{
  "startTime": 1674248171508,
  "endTime": 1674248171820,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#name of container: docker-octoprint\n#versison of container: 0.4.1\nFROM quantumobject/docker-baseimage:18.04\nMAINTAINER Angel Rodriguez  \"angel@quantumobject.com\"\n\n#add repository and update the container\n#Installation of nesesary package/software for this containers...\nRUN apt-get update && apt-get install --no-install-recommends -y -q python-pip python-dev git \\\n                    && apt-get clean \\\n                    && rm -rf /tmp/* /var/tmp/* \\\n                    && rm -rf /var/lib/apt/lists/*\n\n##startup scripts \n#Pre-config scrip that maybe need to be run one time only when the container run the first time .. using a flag to don't\n#run it again ... use for conf for service ... when run the first time ...\nRUN mkdir -p /etc/my_init.d\nCOPY startup.sh /etc/my_init.d/startup.sh\nRUN chmod +x /etc/my_init.d/startup.sh\n\n##Adding Deamons to containers\n# to add octoprint deamon to runit\nRUN mkdir -p /etc/service/octoprint /var/log/octoprint ; sync\nCOPY octoprint.sh /etc/service/octoprint/run\nRUN chmod +x /etc/service/octoprint/run \\\n    && cp /var/log/cron/config /var/log/octoprint/ \\\n    && chown -R www-data /var/log/octoprint\n\n#pre-config scritp for different service that need to be run when container image is create\n#maybe include additional software that need to be installed ... with some service running ... like example mysqld\nCOPY pre-conf.sh /sbin/pre-conf\nRUN chmod +x /sbin/pre-conf; sync \\\n    && /bin/bash -c /sbin/pre-conf \\\n    && rm /sbin/pre-conf\n\n# to allow access from outside of the container  to the container service\n# at that ports need to allow access from firewall if need to access it outside of the server.\nEXPOSE 5000\n\n# Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n"
}