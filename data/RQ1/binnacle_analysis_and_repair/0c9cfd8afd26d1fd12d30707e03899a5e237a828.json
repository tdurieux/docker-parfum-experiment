{
  "startTime": 1674241152022,
  "endTime": 1674241152256,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build: run ooni-sysadmin.git/scripts/docker-build from this directory\n\nFROM python:3.5-slim\nENV PYTHONUNBUFFERED 1\n\nENV PYTHONPATH /app/\n\n# Setup the locales in the Dockerfile\nRUN set -x \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends locales -y \\\n    && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\n\n# Install measurements Dependencies\n# XXX verify fingerprint for nodesource bash script\nRUN set -x \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends curl -y \\\n    && curl -f -sL https://deb.nodesource.com/setup_6.x | bash - \\\n    && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n    && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n    && mkdir -p /usr/share/man/man1 \\\n    && mkdir -p /usr/share/man/man7 \\\n    && apt-get update \\\n    && apt-get install git postgresql-client bzip2 gcc g++ make \\\n        libpq-dev libffi-dev nodejs yarn --no-install-recommends -y \\\n    && apt-get autoremove -y \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nCOPY package.json /tmp/package.json\nCOPY yarn.lock /tmp/yarn.lock\n\n# Install NPM dependencies\nRUN set -x \\\n    && npm install -g gulp-cli && npm cache clean --force;\n\nRUN set -x \\\n    && cd /tmp \\\n    && yarn install --loglevel http \\\n    && mkdir /app \\\n    && cp -a /tmp/node_modules /app/ && yarn cache clean;\n\nCOPY requirements /tmp/requirements\n\n# Install Python dependencies\nRUN set -x \\\n    && pip install --no-cache-dir -U pip setuptools \\\n    && pip install --no-cache-dir -r /tmp/requirements/tests.txt \\\n    && pip install --no-cache-dir -r /tmp/requirements/deploy.txt \\\n                   -r /tmp/requirements/main.txt\n\n# Copy the directory into the container\nCOPY . /app/\n\nRUN set -x \\\n    && cd /app/ \\\n    && gulp dist\n\n# Set our work directory to our app directory\nWORKDIR /app/\n"
}