{
  "startTime": 1674251544666,
  "endTime": 1674251545000,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# Build Arguments for openresty/nginx\nARG RESTY_VERSION=\"1.11.2.1\"\nARG RESTY_OPENSSL_VERSION=\"1.0.2j\"\nARG PAGESPEED_VERSION=\"1.11.33.4\"\nARG DEBIAN_FRONTEND=noninteractive\nARG TERM=xterm-color\n\nARG RESTY_CONFIG_OPTIONS=\"\\\n    --with-http_addition_module \\\n    --with-http_auth_request_module \\\n    --with-http_flv_module \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_mp4_module \\\n    --with-http_random_index_module \\\n    --with-http_realip_module \\\n    --with-http_secure_link_module \\\n    --with-http_slice_module \\\n    --with-http_ssl_module \\\n    --with-http_stub_status_module \\\n    --with-http_sub_module \\\n    --with-http_v2_module \\\n    --with-http_geoip_module=dynamic \\\n    --with-file-aio \\\n    --with-ipv6 \\\n    --with-pcre-jit \\\n    --with-stream \\\n    --with-stream_ssl_module \\\n    --with-threads \\\n    --without-http_autoindex_module \\\n    --without-http_browser_module \\\n    --without-http_userid_module \\\n    --without-mail_pop3_module \\\n    --without-mail_imap_module \\\n    --without-mail_smtp_module \\\n    --without-http_split_clients_module \\\n    --without-http_uwsgi_module \\\n    --without-http_scgi_module \\\n    --without-http_referer_module \\\n    --user=nginx \\\n    --group=nginx \\\n    --sbin-path=/usr/sbin \\\n    --modules-path=/usr/lib/nginx \\\n    --prefix=/etc/nginx \\\n    --conf-path=/etc/nginx/nginx.conf \\\n    --http-log-path=/var/log/nginx/access.log \\\n    --error-log-path=/var/log/nginx/error.log \\\n    --pid-path=/var/run/nginx.pid \\\n    --lock-path=/var/run/nginx/nginx.lock \\\n    --http-fastcgi-temp-path=/tmp/nginx/fastcgi \\\n    --http-proxy-temp-path=/tmp/nginx/proxy \\\n    --http-client-body-temp-path=/tmp/nginx/client_body \\\n    --add-module=/tmp/incubator-pagespeed-ngx-${PAGESPEED_VERSION}-beta \\\n    --add-module=/tmp/ngx_cache_purge-2.3 \\\n    --with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} \\\n    \"\n\nARG BUILD_DEPS='build-essential curl libreadline-dev libncurses5-dev libpcre3-dev libgeoip-dev zlib1g-dev ca-certificates'\n\n# Install base utils\nRUN \\\n    apt-get update && \\\n    apt-get -y install $BUILD_DEPS --no-install-recommends && \\\n    cd /tmp/ && \\\n    ### Download Tarballs ###\n    # Download PageSpeed\n    echo \"Downloading PageSpeed...\" && \\\n    curl -f -L https://github.com/pagespeed/ngx_pagespeed/archive/v${PAGESPEED_VERSION}-beta.tar.gz | tar -zx && \\\n    ls -lah && \\\n    # psol needs to be inside ngx_pagespeed module\n    # Download PageSpeed Optimization Library and extract it to nginx source dir\n    cd /tmp/incubator-pagespeed-ngx-${PAGESPEED_VERSION}-beta/ && \\\n    echo \"Downloading PSOL...\" && \\\n    curl -f -L https://dl.google.com/dl/page-speed/psol/${PAGESPEED_VERSION}.tar.gz | tar -zx && \\\n    cd /tmp/ && \\\n    # Download Nginx cache purge module\n    echo \"Downloading Nginx cache purge module...\" && \\\n    curl -f -L https://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz | tar -zx && \\\n    # Download OpenSSL\n    echo \"Downloading OpenSSL...\" && \\\n    curl -f -L https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz | tar -zx && \\\n    # Download Openresty bundle\n    echo \"Downloading openresty...\" && \\\n    curl -f -L https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz | tar -zx && \\\n    # Use all cores available in the builds with -j${NPROC} flag\n    readonly NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) && \\\n    echo \"using up to $NPROC threads\" && \\\n    ### Configure Nginx ###\n    cd openresty-${RESTY_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -j${NPROC} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} && \\\n    # Build Nginx\n    make -j${NPROC} && \\\n    make -j${NPROC} install && \\\n    mkdir -p /var/lib/nginx /var/log/nginx && \\\n    ## Cleanup\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get remove --purge -y $BUILD_DEPS $(apt-mark showauto) && \\\n    rm -rf /tmp/* /var/log/apt/* && \\\n    # Temp directory\n    mkdir /tmp/nginx/ && \\\n    mkdir -p /tmp/nginx/pagespeed/images/ && \\\n    # Symlink modules path to config path for easier usage\n    ln -sf /usr/lib/nginx /etc/nginx/modules && \\\n    # Create nginx group\n    groupadd -g 8888 nginx && \\\n    useradd -u 8888 -g nginx nginx && \\\n    # Symlink nginx logs to system output\n    ln -sf /dev/stdout /var/log/nginx/access.log && \\\n    ln -sf /dev/stderr /var/log/nginx/error.log\n\nWORKDIR /config\nRUN apt-get update && \\\n    apt-get -y install wget --no-install-recommends && \\\n    wget --no-check-certificate https://raw.githubusercontent.com/jivesearch/jivesearch/master/frontend/nginx/nginx.conf && \\\n    wget --no-check-certificate https://raw.githubusercontent.com/jivesearch/jivesearch/master/frontend/nginx/server.conf && rm -rf /var/lib/apt/lists/*;\n\nEXPOSE 80 443\nCMD [\"nginx\", \"-g\", \"daemon off;\", \"-c\", \"/config/nginx.conf\"]"
}