{
  "startTime": 1674241436328,
  "endTime": 1674241436523,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 156
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 9,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 9,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 9,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 9,
        "columnEnd": 76
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2016 The Cartographer Authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM ros:kinetic\n\nARG CARTOGRAPHER_VERSION=master\n\n# Xenial's base image doesn't ship with sudo.\nRUN apt-get update && apt-get install --no-install-recommends -y sudo time && rm -rf /var/lib/apt/lists/*\n# First, we invalidate the entire cache if googlecartographer/cartographer has\n# changed. This file's content changes whenever master changes. See:\n# http://stackoverflow.com/questions/36996046/how-to-prevent-dockerfile-caching-git-clone\nADD https://api.github.com/repos/googlecartographer/cartographer/git/refs/heads/master \\\n    cartographer_ros/cartographer_version.json\n\n# wstool needs the updated rosinstall file to clone the correct repos.\nCOPY cartographer_ros.rosinstall cartographer_ros/\nCOPY scripts/prepare_jenkins_catkin_workspace.sh cartographer_ros/scripts/\n\n# Invalidates the Docker cache to ensure this command is always executed.\nARG CACHEBUST=1\nRUN CARTOGRAPHER_VERSION=$CARTOGRAPHER_VERSION \\\n    cartographer_ros/scripts/prepare_jenkins_catkin_workspace.sh\n\n# rosdep needs the updated package.xml files to install the correct debs.\nCOPY cartographer_ros/package.xml catkin_ws/src/cartographer_ros/cartographer_ros/\nCOPY cartographer_ros_msgs/package.xml catkin_ws/src/cartographer_ros/cartographer_ros_msgs/\nCOPY cartographer_rviz/package.xml catkin_ws/src/cartographer_ros/cartographer_rviz/\nCOPY scripts/install_debs.sh cartographer_ros/scripts/\nRUN cartographer_ros/scripts/install_debs.sh && rm -rf /var/lib/apt/lists/*\n\n# Install proto3.\nRUN /catkin_ws/src/cartographer/scripts/install_proto3.sh\n\n# Build, install, and test all packages individually to allow caching. The\n# ordering of these steps must match the topological package ordering as\n# determined by Catkin.\nCOPY scripts/install.sh cartographer_ros/scripts/\nCOPY scripts/catkin_test_results.sh cartographer_ros/scripts/\n\nCOPY cartographer_ros_msgs catkin_ws/src/cartographer_ros/cartographer_ros_msgs/\nRUN cartographer_ros/scripts/install.sh --pkg cartographer_ros_msgs && \\\n    cartographer_ros/scripts/install.sh --pkg cartographer_ros_msgs \\\n        --catkin-make-args run_tests && \\\n    cartographer_ros/scripts/catkin_test_results.sh build_isolated/cartographer_ros_msgs\n\nRUN cartographer_ros/scripts/install.sh --pkg ceres-solver\n\nRUN cartographer_ros/scripts/install.sh --pkg cartographer && \\\n    cartographer_ros/scripts/install.sh --pkg cartographer --make-args test\n\nCOPY cartographer_ros catkin_ws/src/cartographer_ros/cartographer_ros/\nRUN cartographer_ros/scripts/install.sh --pkg cartographer_ros && \\\n    cartographer_ros/scripts/install.sh --pkg cartographer_ros \\\n        --catkin-make-args run_tests && \\\n    cartographer_ros/scripts/catkin_test_results.sh build_isolated/cartographer_ros\n\nCOPY cartographer_rviz catkin_ws/src/cartographer_ros/cartographer_rviz/\nRUN cartographer_ros/scripts/install.sh --pkg cartographer_rviz && \\\n    cartographer_ros/scripts/install.sh --pkg cartographer_rviz \\\n        --catkin-make-args run_tests && \\\n    cartographer_ros/scripts/catkin_test_results.sh build_isolated/cartographer_rviz\n\nRUN cartographer_ros/scripts/install.sh --pkg cartographer_toru\nRUN cartographer_ros/scripts/install.sh --pkg cartographer_fetch\n\nCOPY scripts/ros_entrypoint.sh /\n# A BTRFS bug may prevent us from cleaning up these directories.\n# https://btrfs.wiki.kernel.org/index.php/Problem_FAQ#I_cannot_delete_an_empty_directory\nRUN rm -rf cartographer_ros catkin_ws || true\n\nRUN sudo apt-get update\nRUN sudo apt-get -y --no-install-recommends install openjdk-8-jdk python-pip && rm -rf /var/lib/apt/lists/*;\n\nENV HOME /home/jenkins\nRUN addgroup --system --gid 10000 jenkins\nRUN adduser --system --ingroup jenkins --home $HOME --uid 10000 jenkins\n\nLABEL Description=\"This is a base image, which provides the Jenkins agent executable (slave.jar)\" Vendor=\"Jenkins project\" Version=\"3.17\"\n\nARG VERSION=3.17\nARG AGENT_WORKDIR=/home/jenkins/agent\n\nRUN curl -f --create-dirs -sSLo /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${VERSION}/remoting-${VERSION}.jar \\\n && chmod 755 /usr/share/jenkins \\\n && chmod 644 /usr/share/jenkins/slave.jar\n# USER jenkins\nENV AGENT_WORKDIR=${AGENT_WORKDIR}\nRUN mkdir /home/jenkins/.jenkins && mkdir -p ${AGENT_WORKDIR}\n\nVOLUME /home/jenkins/.jenkins\nVOLUME ${AGENT_WORKDIR}\nWORKDIR /home/jenkins\n\nCOPY jenkins/jenkins-slave /usr/local/bin/jenkins-slave\n\nENV CLOUDSDK_CORE_DISABLE_PROMPTS 1\nENV PATH /opt/google-cloud-sdk/bin:$PATH\n\nUSER root\n\n# Install Google Cloud Components\nRUN curl -f https://sdk.cloud.google.com | bash && mv google-cloud-sdk /opt\nRUN gcloud components install kubectl\n\nRUN pip install --no-cache-dir --upgrade google-cloud-datastore\nRUN pip install --no-cache-dir --upgrade google-cloud-bigquery\nCOPY jenkins/worker.py /worker.py\n\n# USER root\nENTRYPOINT [\"jenkins-slave\"]\n"
}