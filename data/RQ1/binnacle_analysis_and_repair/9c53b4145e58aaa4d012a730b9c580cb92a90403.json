{
  "startTime": 1674251737424,
  "endTime": 1674251737636,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8.12.0-alpine as node\nFROM ruby:2.4.5-alpine3.8\n\nLABEL maintainer=\"https://github.com/tootsuite/mastodon\" \\\n      description=\"Your self-hosted, globally interconnected microblogging community\"\n\nARG UID=991\nARG GID=991\n\nENV PATH=/mastodon/bin:$PATH \\\n    RAILS_SERVE_STATIC_FILES=true \\\n    RAILS_ENV=production \\\n    NODE_ENV=production\n\nARG LIBICONV_VERSION=1.15\nARG LIBICONV_DOWNLOAD_SHA256=ccf536620a45458d26ba83887a983b96827001e92a13847b45e4925cc8913178\n\nEXPOSE 3000 4000\n\nWORKDIR /mastodon\n\nCOPY --from=node /usr/local/bin/node /usr/local/bin/node\nCOPY --from=node /usr/local/lib/node_modules /usr/local/lib/node_modules\nCOPY --from=node /usr/local/bin/npm /usr/local/bin/npm\nCOPY --from=node /opt/yarn-* /opt/yarn\n\nRUN apk -U upgrade \\\n && apk add -t build-dependencies \\\n    build-base \\\n    icu-dev \\\n    libidn-dev \\\n    libressl \\\n    libtool \\\n    postgresql-dev \\\n    protobuf-dev \\\n    python \\\n && apk add \\\n    ca-certificates \\\n    ffmpeg \\\n    file \\\n    git \\\n    icu-libs \\\n    imagemagick \\\n    libidn \\\n    libpq \\\n    protobuf \\\n    tini \\\n    tzdata \\\n && update-ca-certificates \\\n && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn/bin/yarnpkg /usr/local/bin/yarnpkg \\\n && mkdir -p /tmp/src /opt \\\n && wget -O libiconv.tar.gz \"https://ftp.gnu.org/pub/gnu/libiconv/libiconv-$LIBICONV_VERSION.tar.gz\" \\\n && echo \"$LIBICONV_DOWNLOAD_SHA256  *libiconv.tar.gz\" | sha256sum -c - \\\n && tar -xzf libiconv.tar.gz -C /tmp/src \\\n && rm libiconv.tar.gz \\\n && cd /tmp/src/libiconv-$LIBICONV_VERSION \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n && make -j$(getconf _NPROCESSORS_ONLN) \\\n && make install \\\n && libtool --finish /usr/local/lib \\\n && cd /mastodon \\\n && rm -rf /tmp/* /var/cache/apk/*\n\nCOPY Gemfile Gemfile.lock package.json yarn.lock .yarnclean /mastodon/\n\nRUN bundle config build.nokogiri --with-iconv-lib=/usr/local/lib --with-iconv-include=/usr/local/include \\\n && bundle install -j$(getconf _NPROCESSORS_ONLN) --deployment --without test development \\\n && yarn install --pure-lockfile --ignore-engines \\\n && yarn cache clean\n\nRUN addgroup -g ${GID} mastodon && adduser -h /mastodon -s /bin/sh -D -G mastodon -u ${UID} mastodon \\\n && mkdir -p /mastodon/public/system /mastodon/public/assets /mastodon/public/packs \\\n && chown -R mastodon:mastodon /mastodon/public\n\nCOPY . /mastodon\n\nRUN chown -R mastodon:mastodon /mastodon\n\nVOLUME /mastodon/public/system\n\nUSER mastodon\n\nRUN OTP_SECRET=precompile_placeholder SECRET_KEY_BASE=precompile_placeholder bundle exec rails assets:precompile\n\nENTRYPOINT [\"/sbin/tini\", \"--\"]\n"
}