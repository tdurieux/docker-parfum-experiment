{
  "startTime": 1674249014619,
  "endTime": 1674249014938,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright(c) 2016 Bitergia\n# MIT Licensed\n\nFROM ubuntu:14.04\nMAINTAINER Bitergia <fiware-testing@bitergia.com>\n\nENV DEBIAN_FRONTEND noninteractive\nENV INITRD no\n\nENV TOURGUIDE_USER tourguide\nENV TOURGUIDE_USER_DIR /home/${TOURGUIDE_USER}\nENV GIT_URL_TOURGUIDE https://github.com/Fiware/tutorials.TourGuide-App.git\nENV GIT_REV_TOURGUIDE develop\nENV SUBSCRIPTIONS_PATH /opt/subscribe\nENV CC_APP_SERVER_PATH ${TOURGUIDE_USER_DIR}/tutorials.TourGuide-App/server\n\n# create tourguide user\nRUN adduser --disabled-password --gecos \"${TOURGUIDE_USER}\" ${TOURGUIDE_USER}\n\n# install dependencies\nRUN apt-get update && \\\n    apt-get -y install --no-install-recommends \\\n        bash curl ca-certificates \\\n        git git-core \\\n        tree ccze \\\n        psmisc \\\n        nodejs nodejs-legacy npm \\\n        apache2 libapache2-mod-passenger \\\n        mysql-client \\\n        && \\\n    # update node to latest stable\n    npm install -g n && \\\n    n stable && \\\n    # remove ubuntu node packages, as they're not needed anymore\n    apt-get -y purge nodejs nodejs-legacy npm && \\\n    # clean shell command hash table\n    hash -r && \\\n    # update npm\n    npm install -g npm && \\\n    # hack to fix nodejs support on ubuntu/debian passenger package\n    mkdir fix-node-passenger && \\\n    cd fix-node-passenger && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -qy dpkg-dev && \\\n    sed -e 's/^deb /deb-src /g' /etc/apt/sources.list >> /etc/apt/sources.list.d/debsrc.list && \\\n    apt-get update && \\\n    apt-get source ruby-passenger && \\\n    version=$( ls ruby-passenger*.orig.tar.gz | sed -e 's/^ruby-passenger_\\(.*\\).orig.tar.gz$/\\1/' ) && \\\n    cp -r ${PWD}/ruby-passenger-${version}/node_lib /usr/share/passenger/ && \\\n    cd .. && \\\n    rm -rf fix-node-passenger && \\\n    mkdir ${SUBSCRIPTIONS_PATH} && \\\n    # enable apache modules and disable default site\n    a2enmod ssl && \\\n    a2enmod passenger && \\\n    a2dissite 000-default && \\\n    # install grunt-cli to be able to run the tasks inside the container\n    npm install --loglevel warn -g grunt-cli && \\\n    # cleanup to thin the final image\n    apt-get clean && \\\n    apt-get purge -y dpkg-dev && \\\n    apt-get autoremove --purge -y && \\\n    find /var/lib/apt/lists -type f -delete && \\\n    rm -fr /root/.npm && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n# setup tourguide app as $TOURGUIDE_USER\nUSER ${TOURGUIDE_USER}\nWORKDIR ${TOURGUIDE_USER_DIR}\n\n# get the repository from git and install node dependencies\nRUN git clone -b ${GIT_REV_TOURGUIDE} ${GIT_URL_TOURGUIDE} && \\\n    cd ${CC_APP_SERVER_PATH} && \\\n    npm install --loglevel warn && \\\n    rm -fr ${TOURGUIDE_USER_DIR}/.npm && npm cache clean --force;\n\n# copy default subscriptions\nCOPY cpr-registration.sh ${SUBSCRIPTIONS_PATH}/\n\n# Switch back to root for docker-entrypoint.sh\nUSER root\nADD docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod +x /docker-entrypoint.sh\nADD https://raw.githubusercontent.com/Bitergia/docker/master/utils/entrypoint-common.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}