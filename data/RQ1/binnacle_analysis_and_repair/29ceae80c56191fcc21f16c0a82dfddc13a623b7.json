{
  "startTime": 1674238679798,
  "endTime": 1674238679917,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the latest Debian testing image\nFROM debian:testing\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  autoconf \\\n  autoconf-archive \\\n  automake \\\n  expect \\\n  gcc \\\n  git \\\n  libcmocka-dev \\\n  libcurl3-dev \\\n  libgcrypt-dev \\\n  libglib2.0-dev \\\n  libgpgme11-dev \\\n  libgtk2.0-dev \\\n  libmicrohttpd-dev \\\n  libncursesw5-dev \\\n  libnotify-dev \\\n  libotr5-dev \\\n  libreadline-dev \\\n  libsignal-protocol-c-dev \\\n  libssl-dev \\\n  libtool \\\n  libxss-dev \\\n  make \\\n  pkg-config \\\n  python-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /usr/src/{stabber,libmesode,profanity} && rm -rf /usr/src/{stabber,libmesode,profanity}\nWORKDIR /usr/src\n\nRUN git clone git://github.com/boothj5/stabber.git\nRUN git clone git://github.com/profanity-im/libmesode.git\n\nWORKDIR /usr/src/stabber\nRUN ./bootstrap.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --disable-dependency-tracking\nRUN make\nRUN make install\n\nWORKDIR /usr/src/libmesode\nRUN ./bootstrap.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr\nRUN make\nRUN make install\n\nWORKDIR /usr/src/profanity\nCOPY . /usr/src/profanity\n"
}