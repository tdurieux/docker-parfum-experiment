{
  "startTime": 1674248647334,
  "endTime": 1674248647418,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 17,
        "columnStart": 26,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 17,
        "columnStart": 26,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM andrewgodwin/base\n\nMAINTAINER Andrew Godwin <andrew@aeracode.org>\n\n# Get basic system dependencies\nRUN apt-get update -qq && apt-get install --no-install-recommends -y \\\n    nginx \\\n    git \\\n    python \\\n    python-dev \\\n    python-pip \\\n    gcc \\\n    dialog \\\n    libaugeas0 \\\n    libssl-dev \\\n    libffi-dev \\\n    ca-certificates \\\n    software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# Install the certbot client\nRUN add-apt-repository ppa:certbot/certbot && \\\r\n    apt-get update -qq && \\\n    apt-get install --no-install-recommends -y certbot && rm -rf /var/lib/apt/lists/*;\n\n# Set up nginx\nADD nginx.conf /etc/nginx/nginx.conf\nEXPOSE 443\n\n# Make sure the challenge directory is present\nRUN mkdir /srv/www/\n\n# Install self-signed certs to power things until a real one happens\nADD temporary-cert.crt /etc/ssl/www.crt\nADD temporary-cert.key /etc/ssl/www.key\nADD dhparams.pem /etc/ssl/dhparams.pem\n\n# Install update script\nADD run-letsencrypt.sh /bin/run-letsencrypt\nRUN chmod 775 /bin/run-letsencrypt\n\n# Run both nginx and the looping script to update the certs\nCMD [ \\\r\n    \"nginx\", \\\r\n    \"/bin/run-letsencrypt\" \\\r\n]\n"
}