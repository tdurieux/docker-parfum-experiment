{
  "startTime": 1674250294181,
  "endTime": 1674250294574,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 16,
        "columnEnd": 70
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 45,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 44,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 9,
        "columnEnd": 95
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 9,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 27,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:7.5-cudnn5-devel\n\n\n# Get dependencies\n\n# Update gcc for dense inference wrapper (CRF)\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test\n\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\nbc \\\ncmake \\\ncurl \\\ngcc-4.9 \\\ng++-4.9 \\\ngcc-4.9-multilib \\\ng++-4.9-multilib \\\ngfortran \\\ngit \\\nlibprotobuf-dev \\\nlibleveldb-dev \\\nlibsnappy-dev \\\nlibopencv-dev \\\nlibboost-all-dev \\\nlibhdf5-serial-dev \\\nliblmdb-dev \\\nlibjpeg62 \\\nlibfreeimage-dev \\\nlibatlas-base-dev \\\nlibgflags-dev \\\nlibgoogle-glog-dev \\\npkgconf \\\nprotobuf-compiler \\\npython-dev \\\npython-pip \\\npython-opencv \\\npython-numpy \\\nunzip \\\nwget \\\nvim \\\nhtop \\\nsshfs \\\ncifs-utils && rm -rf /var/lib/apt/lists/*;\n\n\n# Use gcc 4.9\nRUN update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-4.9 30 && \\\nupdate-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-4.9 30 && \\\nupdate-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 30 && \\\nupdate-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 30\n\n\n# Allow it to find CUDA libs\nRUN echo \"/usr/local/cuda/lib64\" > /etc/ld.so.conf.d/cuda.conf && \\\nldconfig\n\n\n# Clone Faustos 3D CAFFE\n\nRUN cd /opt && git clone https://github.com/faustomilletari/3D-Caffe.git caffe && cd /opt/caffe\n#RUN cd /opt && git clone https://github.com/BVLC/caffe.git caffe && cd /opt/caffe\n\n#Clone Faustos VNET Project\nRUN cd /opt/ && git clone https://github.com/patrickchrist/VNet.git vnet\n\n#Add deployment ssh key\nADD repo_key /\nRUN chmod 600 /repo_key\nRUN echo \"IdentityFile /repo_key\" >> /etc/ssh/ssh_config\nRUN echo \"StrictHostKeyChecking no\" >> /etc/ssh/ssh_config\n\n# Clone and Install 3D DenseCRF\nRUN cd /opt && git clone -b master git@bitbucket.org:ibbm/denseinferencewrapper.git denseinferencewrapper\n# Build and install 3D DesneCRF\nRUN cd /opt/denseinferencewrapper && make && pip install --no-cache-dir .\n# Clone Saratan project\nRUN cd /opt/ && git clone git@bitbucket.org:patrickchrist/saratan.git\nENV PYTHONPATH /opt/caffe/python:/opt/saratan/:/opt/saratan/data/layers:/opt/vnet\n\n\n# Install caffe python dependencies\nRUN cd  /opt/caffe/python && \\\nfor req in $(cat requirements.txt); do sudo pip install --no-cache-dir $req; done\n# Instal pip packages used by various scripts, and useful for interactive dev\nRUN sudo pip install --no-cache-dir pydicom lmdb jupyter plyvel peewee nibabel tqdm pypng natsort medpy psutil\nRUN pip install --no-cache-dir --allow-insecure www.simpleitk.org -f http://www.simpleitk.org/SimpleITK/resources/software.html --timeout 30 SimpleITK\n# Install NLopt\nRUN cd /opt/ && wget https://ab-initio.mit.edu/nlopt/nlopt-2.4.2.tar.gz && tar -xvf nlopt-2.4.2.tar.gz && rm nlopt-2.4.2.tar.gz\nRUN cd /opt/nlopt-2.4.2 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared && make -j$(nproc) && make install\nRUN echo \"/opt/nlopt-2.4.2/.libs/\" > /etc/ld.so.conf.d/nlopt.conf && ldconfig\n\n\n\n# Build Caffe\nRUN cd /opt/caffe && \\\ncp Makefile.config.example Makefile.config && \\\necho \"CXX := /usr/bin/g++-4.9\" >> Makefile.config && \\\n# Needed for the caffe build to support DIGITS\nsed -i 's/CXX :=/CXX ?=/' Makefile && \\\nsed -i 's/# WITH_PYTHON_LAYER/WITH_PYTHON_LAYER/' Makefile.config && \\\n# Build with cuDNN for speed improvement. See benchmarking here https://github.com/BVLC/caffe/issues/1317\nsed -i 's/# USE_CUDNN/USE_CUDNN/' Makefile.config && \\\nmake all -j$(nproc) && \\\nmake pycaffe -j$(nproc)\n\n# Install caffe\nENV PATH $PATH:/opt/caffe/.build_release/tools\n\n#Upgrade Numpy\nRUN sudo pip install --no-cache-dir numpy --upgrade\n\n\nEXPOSE 8888 8889 8890 8891 8892 8893 8894 8895 8896 8897 8898 8899 8900\n\n# For some reason, at this point git doesn't work giving the following error:\n# git-remote-https: symbol lookup error: /usr/lib/x86_64-linux-gnu/libasn1.so.8: undefined symbol: _et_list\n# so I run \"sudo ldconfig\" and it fixes it\nRUN sudo ldconfig\n\nRUN cd /opt/saratan && git pull\n\n"
}