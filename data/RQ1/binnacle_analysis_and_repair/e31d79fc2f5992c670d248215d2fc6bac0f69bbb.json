{
  "startTime": 1674234878750,
  "endTime": 1674234879072,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 1,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 1,
        "columnEnd": 19
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 33,
        "columnEnd": 44
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 29,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 115
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 115
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 1,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\n# replace shell with bash so we can source files\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n# add basic lib\nRUN apt-get update && apt-get -y --no-install-recommends install software-properties-common nginx build-essential curl python2.7 wget unzip && \\\n\tln -s /usr/bin/python2.7 /usr/bin/python2 && \\\n\n\tcurl -f -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - && \\\n\tapt-get -y --no-install-recommends install nodejs && \\\n\tnpm install -g pm2 && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n#create folders\nRUN mkdir /app && \\\n\tmkdir /app/framework && \\\n\tmkdir /app/bot && \\\n\n\tmkdir /tmp/install_framework && \\\n\tmkdir /tmp/install_bot && \\\n\tmkdir /tmp/install_bot/data && \\\n\tmkdir /tmp/install_bot/node-red-contrib\n\n# install node-red & framework & bot\nADD framework/package.json /tmp/install_framework\nADD bot/data/package.json /tmp/install_bot/data\nADD bot/node-red-contrib /tmp/install_bot/node-red-contrib\n\nRUN cd /tmp/install_framework && npm install && \\\n\tcd /tmp/install_bot/data && npm install && npm cache clean --force;\n\n# create user so we do not work under root\nRUN adduser node-red\n\n# add framework & bot data\nADD framework /app/framework\nADD bot /app/bot\nRUN mv /tmp/install_framework/node_modules /app/framework/ && \\\n\tmv /tmp/install_bot/data/node_modules /app/bot/data/ && \\\n\tchmod a+x /app/framework/start.sh\n\n# prepare nginx\nRUN ln -s /app/bot/conf/nginx.conf /etc/nginx/sites-available/bot.com && \\\n\tln -s /etc/nginx/sites-available/bot.com /etc/nginx/sites-enabled/ && \\\n\tmkdir /etc/nginx/ssl && mkdir /etc/nginx/ssl/certs\n\n\n# change user\nRUN chown -R node-red:node-red /app\nUSER node-red\n\n# set working directory\nWORKDIR /app/bot\n\nEXPOSE 80\nEXPOSE 443\n\nVOLUME [ \"/etc/nginx/ssl/certs\" ]\n\nCMD [\"/bin/bash\", \"-c\" , \"service nginx start && .././framework/start.sh -p 1880 --url $URL --env $ENV --docker --credential-secret $CREDENTIAL_SECRET bot\"]"
}