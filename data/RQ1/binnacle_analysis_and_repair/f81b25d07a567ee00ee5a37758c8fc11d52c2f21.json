{
  "startTime": 1674245024388,
  "endTime": 1674245024752,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedDockerfile": "FROM debian:stretch\n\nLABEL Name=\"cyph\"\n\nRUN apt-get -y --allow-downgrades update\nRUN apt-get -y --no-install-recommends --allow-downgrades install apt-transport-https apt-utils curl gnupg lsb-release && rm -rf /var/lib/apt/lists/*;\n\nRUN dpkg --add-architecture i386\nRUN echo \"deb https://deb.nodesource.com/node_10.x stretch main\" >> /etc/apt/sources.list\nRUN echo 'deb https://dl.yarnpkg.com/debian/ stable main' >> /etc/apt/sources.list\nRUN curl -f -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -\nRUN curl -f -s https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\n\nRUN apt-get -y --allow-downgrades update\nRUN apt-get -y --allow-downgrades upgrade\n\nRUN apt-get -y --no-install-recommends --allow-downgrades install \\\n\tautoconf \\\n\tautomake \\\n\tbuild-essential \\\n\tcmake \\\n\tdevscripts \\\n\texpect \\\n\tgcc-6 \\\n\tg++ \\\n\tgit \\\n\tgolang-go \\\n\thaxe \\\n\tinotify-tools \\\n\tlib32ncurses5 \\\n\tlib32z1 \\\n\tlibbz2-1.0:i386 \\\n\tlibgconf-2-4 \\\n\tlibsodium-dev \\\n\tlibstdc++6:i386 \\\n\tlibtool \\\n\tmono-complete \\\n\tnano \\\n\tnodejs \\\n\topenjdk-8-jdk \\\n\tperl \\\n\tpinentry-curses \\\n\tprocps \\\n\tpython \\\n\tpython-pip \\\n\truby \\\n\truby-dev \\\n\tshellcheck \\\n\tsudo \\\n\ttightvncserver \\\n\twget \\\n\tyarn \\\n\tzopfli && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get -y --allow-downgrades update\nRUN apt-get -y --allow-downgrades upgrade\nRUN apt-get -y --allow-downgrades autoremove\n\nRUN pip install --no-cache-dir grpcio\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update && rm -rf /root/.gem;\nRUN gem install sass\n\nRUN echo '\\\n\tsource /home/gibson/emsdk-portable/emsdk_env.sh &> /dev/null; \\\n\\\n\texport GIT_EDITOR=\"vim\"; \\\n\texport GOPATH=\"/home/gibson/go\"; \\\n\texport ANDROID_HOME=\"/home/gibson/androidsdk\"; \\\n\texport JAVA_HOME=\"$( \\\n\t\tupdate-alternatives --query javac | sed -n -e \"s/Best: *\\(.*\\)\\/bin\\/javac/\\\\1/p\" \\\n\t)\"; \\\n\\\n\texport PATH=\"$( \\\n\t\techo -n \"/opt/local/bin:\"; \\\n\t\techo -n \"/opt/local/sbin:\"; \\\n\t\techo -n \"/usr/local/opt/go/libexec/bin:\"; \\\n\t\techo -n \"${GOPATH}/bin:\"; \\\n\t\techo -n \"${ANDROID_HOME}/platform-tools:\"; \\\n\t\techo -n \"${ANDROID_HOME}/tools:\"; \\\n\t\techo -n \"${PATH}:\"; \\\n\t\techo -n \"/node_modules/.bin\"; \\\n\t)\"; \\\n\\\n\tif [ ! -d ~/.gnupg -a -d ~/.gnupg.original ] ; then cp -a ~/.gnupg.original ~/.gnupg ; fi; \\\n\texport GPG_TTY=\"$(tty)\"; \\\n\teval $(gpg-agent --daemon 2> /dev/null) &> /dev/null; \\\n\\\n\teval $(ssh-agent 2> /dev/null) &> /dev/null; \\\n\\\n\tif [ -f /cyph/commands/.bashrc ] ; then source /cyph/commands/.bashrc ; fi \\\n' >> /.bashrc\n\nRUN echo 'gibson ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\nRUN useradd -ms /bin/bash gibson\nRUN mkdir -p /home/gibson\nRUN cp -f /.bashrc /home/gibson/.bashrc\nRUN cp -f /.bashrc /root/.bashrc\nRUN chmod 700 /home/gibson/.bashrc\nUSER gibson\nENV HOME /home/gibson\n\n\nRUN wget \\\n\thttps://s3.amazonaws.com/mozilla-games/emscripten/releases/emsdk-portable.tar.gz \\\n\t-O ~/emsdk.tar.gz\nRUN wget \\\n\thttps://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-150.0.0-linux-x86_64.tar.gz \\\n\t-O ~/gcloud-sdk.tar.gz\nRUN ls ~/*.tar.gz | xargs -I% tar xvzf % -C ~\nRUN rm ~/*.tar.gz\n\n#RUN mkdir ~/androidsdk\n#RUN wget https://dl.google.com/android/repository/tools_r25.2.5-linux.zip -O ~/androidsdk.zip\n#RUN unzip ~/androidsdk.zip -d ~/androidsdk\n#RUN rm ~/androidsdk.zip\n#RUN bash -c ' \\\n#\tsource ~/.bashrc; \\\n#\tmv $ANDROID_HOME/tools $ANDROID_HOME/balls; \\\n#\tln -s $ANDROID_HOME/balls $ANDROID_HOME/tools; \\\n#\tyes | $ANDROID_HOME/tools/bin/sdkmanager --licenses; \\\n#\t$ANDROID_HOME/tools/bin/sdkmanager \\\n#\t\t\"tools\" \\\n#\t\t\"platform-tools\" \\\n#\t\t\"platforms;android-25\" \\\n#\t\t\"build-tools;25.0.2\" \\\n#\t\t\"extras;android;m2repository\" \\\n#\t\t\"extras;google;m2repository\" \\\n#\t; \\\n#\trm -rf $ANDROID_HOME/balls; \\\n#'\n\nRUN mkdir ~/haxelib\nRUN haxelib setup ~/haxelib\nRUN haxelib install hxcpp\nRUN haxelib install hxcs\nRUN haxelib install hxjava\nRUN haxelib install hxnodejs\n\nRUN rm -rf ~/.gnupg\n\n\n#CIRCLECI:RUN sudo apt-get -y --allow-downgrades update\n#CIRCLECI:RUN sudo apt-get -y --allow-downgrades upgrade\n#CIRCLECI:RUN mkdir -p ~/getlibs/commands ~/getlibs/native ~/getlibs/shared/lib/js\n#CIRCLECI:BASE64_FILES\n#CIRCLECI:RUN chmod -R 777 ~/getlibs\n#CIRCLECI:RUN ~/getlibs/commands/updatedockerimage.sh\n#CIRCLECI:RUN ~/getlibs/commands/getlibs.sh\n#CIRCLECI:RUN ~/getlibs/commands/dockerpostmake.sh\n#CIRCLECI:RUN sudo mkdir /cyph\n#CIRCLECI:RUN sudo chmod 777 /cyph\n\n\nVOLUME /cyph\nVOLUME /home/gibson/.cyph\nVOLUME /home/gibson/.gitconfig\nVOLUME /home/gibson/.gnupg.original\nVOLUME /home/gibson/.ssh\n\nWORKDIR /cyph/commands\n\nEXPOSE 9005 9876 31337 42000 42001 42002 44000\n\n\nCMD /bin/bash\n"
}