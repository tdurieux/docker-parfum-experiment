{
  "startTime": 1674245063992,
  "endTime": 1674245064079,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 18,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 33,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# BUILD\nFROM golang:alpine as builder\nLABEL maintainer=\"jan.michalowsky@axelspringer.com\"\n\n# Install git + SSL ca certificates\nRUN apk update && apk add --no-cache git && apk add --no-cache ca-certificates\n#RUN adduser -D -g '' serviceuser\n\nCOPY . $GOPATH/src/github.com/axelspringer/swerve/\nWORKDIR $GOPATH/src/github.com/axelspringer/swerve/\n\nRUN echo $GOPATH\nRUN go get -d -v ./...\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -ldflags \"-w -s\" -o swerve main.go\n# JS BUILDER\nFROM node:8.12.0-alpine as jsbuilder\nCOPY ./src/client /tmp/client\nWORKDIR /tmp/client\n\nRUN npm install && npm run build && npm cache clean --force;\n# RUNTIME\nFROM scratch\nLABEL maintainer=\"jan.michalowsky@axelspringer.com\"\n\n#COPY --from=builder /etc/passwd /etc/passwd\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\nCOPY --from=builder /go/src/github.com/axelspringer/swerve/swerve /swerve\nCOPY --from=jsbuilder /tmp/client/dist /tmp/static\n\nENV SWERVE_API_CLIENT_STATIC /tmp/static\n#USER serviceuser\n\nENTRYPOINT [ \"/swerve\" ]"
}