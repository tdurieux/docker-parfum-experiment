{
  "startTime": 1674241471740,
  "endTime": 1674241471807,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 32,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 32,
        "columnStart": 5,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM area9/qt:%QT_VERSION% as qt\n\n# This image is meant to be used to compile CGI QtByteRunner for area9/web.\n# Tags are not synchronized, so assume that it is meant for latest.\n\n# It is not tailored for automation, you are supposed to bind flow folder\n# manually and ensure that asmjit is present there\n\n# TL/DR:\n# ./build-image.sh\n# ./run.sh\n# results in artifacts folder\n\nFROM ubuntu:xenial\n\nARG qt_version=5.9.2\nARG qt_path=/opt/Qt${qt_version}\nARG qt_full_path=${qt_path}/${qt_version}/gcc_64\n\nENV QT_VERSION=${qt_version}\nENV QT_FULL_PATH=${qt_full_path}\n\nCOPY --from=qt ${qt_path} ${qt_path}\nENV PATH=\"${PATH}:${qt_full_path}/bin\"\nRUN echo \"${qt_full_path}/lib\" > /etc/ld.so.conf.d/qt.conf \\\n  && ldconfig\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    git \\\n    libfcgi-dev \\\n    libglib2.0-0 && rm -rf /var/lib/apt/lists/*;\n\n# This is for convenience so that resulting files will belong to regular user\n# instead of root. Will be useless on multi-user systems.\nARG uid=1000\nARG gid=1000\nRUN addgroup --gid=${gid} flow \\\n  && useradd --uid=${uid} \\\n             --gid=${gid} \\\n             --no-create-home \\\n             --home=/flow \\\n             --shell=/bin/bash \\\n             flow\n\n# build_image.sh takes care of preparing qbr for us\nCOPY qbr /flow\nCOPY config/buildcgi.sh /flow/platforms/qt/buildcgi.sh\n\nRUN chown -R flow:flow /flow\n\nUSER flow\nWORKDIR /flow/platforms/qt\n\nCMD [\"./buildcgi.sh\"]\n\n"
}