{
  "startTime": 1674250327866,
  "endTime": 1674250327929,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Setup env\nFROM rust:1.33 AS build\nRUN USER=root cargo new --bin /opt/lemmy/server--prod\nWORKDIR /opt/lemmy/server--prod\n# Enable deps caching\nRUN mkdir -p src/bin\nRUN echo 'fn main() { println!(\"Dummy\") }' >src/bin/main.rs\n# Install deps\nCOPY Cargo.toml .\nCOPY Cargo.lock .\nRUN cargo build --release\nRUN rm src/bin/main.rs\n# Add app\nCOPY src/ src/\nCOPY migrations/ migrations/\nRUN rm target/release/deps/lemmy*\nRUN cargo build --release\n\n# Setup env (no Alpine because Rust requires glibc)\nFROM ubuntu:18.04\nRUN apt update && apt install --no-install-recommends postgresql-client -y && rm -rf /var/lib/apt/lists/*;\n# Create empty directory where the frontend would normally be\nRUN mkdir -p /opt/lemmy/ui--prod/dist\n# Add app\nCOPY --from=build /opt/lemmy/server--prod/target/release/lemmy .\n# Run app\nCMD [\"./lemmy\"]\n"
}