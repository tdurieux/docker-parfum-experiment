{
  "startTime": 1674641738661,
  "endTime": 1674641738745,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM microsoft/dotnet\n\n# Install git\nRUN apt-get install --no-install-recommends git -y && rm -rf /var/lib/apt/lists/*;\n\n# Clone the source code\nRUN git clone -b ssl https://github.com/cmendible/aspnet-core-helloworld.git\n\n# Set our working folder\nWORKDIR aspnet-core-helloworld/src/dotnetstarter\n\n# Restore nuget packages\nRUN dotnet restore\n\n# Build the application using dotnet!!!\nRUN dotnet build\n\n# Set password for the certificate as 1234\n# I'm using Environment Variable here to simplify the .NET Core sample.\nENV certPassword 1234\n\n# Use opnssl to generate a self signed certificate cert.pfx with password $env:certPassword\nRUN openssl genrsa -des3 -passout pass:${certPassword} -out server.key 2048\nRUN openssl rsa -passin pass:${certPassword} -in server.key -out server.key\nRUN openssl req -sha256 -new -key server.key -out server.csr -subj '/CN=localhost'\nRUN openssl x509 -req -sha256 -days 365 -in server.csr -signkey server.key -out server.crt\nRUN openssl pkcs12 -export -out cert.pfx -inkey server.key -in server.crt -certfile server.crt -passout pass:${certPassword}\n\n# Expose port 443 for the application.\nEXPOSE 443\n\n# Start the application using dotnet!!!\nENTRYPOINT dotnet run"
}