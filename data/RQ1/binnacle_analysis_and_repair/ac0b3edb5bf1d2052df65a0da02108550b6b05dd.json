{
  "startTime": 1674248712689,
  "endTime": 1674248712732,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10-alpine as builder\n\nWORKDIR /frontend\nCOPY package*.json /frontend/\nRUN npm install && npm cache clean --force;\nCOPY ./ /frontend/\n\nARG BUILD_ENV\nARG API_URL\nARG API_VERSION\nARG PRIMUS_URL\n\nRUN npm run set-env && ./node_modules/.bin/ng build --$BUILD_ENV\n\n\nFROM nginx:alpine\nRUN apk add --no-cache curl\n\nARG SERVER_NAME\n\nHEALTHCHECK --interval=10s --timeout=5s --retries=3 \\\n  CMD curl --silent --fail localhost/nginx-health || exit 1\n\nCOPY server/nginx.conf /etc/nginx/nginx.conf\nRUN sed -i \"s#localhost#${SERVER_NAME:-localhost}#\" /etc/nginx/nginx.conf\nCOPY --from=builder /frontend/dist/ /usr/share/nginx/html\n\n#FROM nginx:alpine\n## COPY nginx.conf /etc/nginx/nginx.conf\n## WORKDIR /usr/share/nginx/html\n## COPY dist/ .\n#COPY dist/ /usr/share/nginx/html\n"
}