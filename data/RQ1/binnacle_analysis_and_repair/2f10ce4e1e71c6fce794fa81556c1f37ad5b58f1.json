{
  "startTime": 1674234452831,
  "endTime": 1674234453296,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 27,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 5,
        "columnEnd": 107
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 41,
        "columnStart": 5,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 57,
        "columnStart": 5,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:edge\nLABEL maintainer=\"Sergey Alexandrovich <darthsim@gmail.com>\"\n\nENV GOPATH /go\nENV PATH /usr/local/go/bin:$PATH\n\nADD . /go/src/github.com/DarthSim/imgproxy\nWORKDIR /go/src/github.com/DarthSim/imgproxy\n\n# Install dependencies\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n  && apk --no-cache upgrade \\\n  && apk add --no-cache curl ca-certificates go gcc g++ make musl-dev fftw-dev glib-dev expat-dev \\\n    libjpeg-turbo-dev libpng-dev libwebp-dev giflib-dev librsvg-dev libexif-dev lcms2-dev libimagequant-dev\n\n# Build ImageMagick\nRUN cd /root \\\n  && mkdir ImageMagick \\\n  && curl -f -Ls https://imagemagick.org/download/ImageMagick.tar.gz | tar -xz -C ImageMagick --strip-components 1 \\\n  && cd ImageMagick \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --enable-silent-rules \\\n    --disable-static \\\n    --disable-openmp \\\n    --disable-deprecated \\\n    --disable-docs \\\n    --with-threads \\\n    --without-magick-plus-plus \\\n    --without-utilities \\\n    --without-perl \\\n    --without-bzlib \\\n    --without-dps \\\n    --without-freetype \\\n    --without-jbig \\\n    --without-jpeg \\\n    --without-lcms \\\n    --without-lzma \\\n    --without-png \\\n    --without-tiff \\\n    --without-wmf \\\n    --without-xml \\\n    --without-webp \\\n  && make install-strip\n\n# Build libvips\nRUN cd /root \\\n  && export VIPS_VERSION=$( curl -f -s \"https://api.github.com/repos/libvips/libvips/releases/latest\" | grep '\"tag_name\":' | sed -E 's/.*\"v([^\"]+)\".*/\\1/') \\\n  && echo \"Vips version: $VIPS_VERSION\" \\\n  && curl -f -Ls https://github.com/libvips/libvips/releases/download/v$VIPS_VERSION/vips-$VIPS_VERSION.tar.gz | tar -xz \\\n  && cd vips-$VIPS_VERSION \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --disable-magickload \\\n    --without-python \\\n    --without-tiff \\\n    --without-OpenEXR \\\n    --enable-debug=no \\\n    --disable-static \\\n    --enable-silent-rules \\\n  && make install-strip\n\n# Build imgproxy\nRUN cd /go/src/github.com/DarthSim/imgproxy \\\n  && CGO_LDFLAGS_ALLOW=\"-s|-w\" go build -v -o /usr/local/bin/imgproxy\n\n# Copy compiled libs here to copy them to the final image\nRUN cd /root \\\n  && mkdir libs \\\n  && ldd /usr/local/bin/imgproxy | grep /usr/local/lib/ | awk '{print $3}' | xargs -I '{}' cp '{}' libs/\n\n# ==================================================================================================\n# Final image\n\nFROM alpine:edge\nLABEL maintainer=\"Sergey Alexandrovich <darthsim@gmail.com>\"\n\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n  && apk --no-cache upgrade \\\n  && apk add --no-cache bash ca-certificates fftw glib expat libjpeg-turbo libpng \\\n    libwebp giflib librsvg libgsf libexif lcms2 libimagequant\\\n  && rm -rf /var/cache/apk*\n\nCOPY --from=0 /usr/local/bin/imgproxy /usr/local/bin/\nCOPY --from=0 /root/libs/* /usr/local/lib/\n\nENV VIPS_WARNING=0\nENV MALLOC_ARENA_MAX=4\n\nCMD [\"imgproxy\"]\n\nEXPOSE 8080\n"
}