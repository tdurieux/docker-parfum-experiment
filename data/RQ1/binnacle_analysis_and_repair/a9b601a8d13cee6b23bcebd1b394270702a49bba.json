{
  "startTime": 1674245262859,
  "endTime": 1674245263097,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 16,
        "columnEnd": 102
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r tensor && useradd -r -m -g tensor tensor && \\\r\n    export DEBIAN_FRONTEND=noninteractive && \\\r\n    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 6125E2A8C77F2818FB7BD15B93C4A3FD7BB9C367 && \\\r\n    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 805A0463B9370AABA2C9D3192EE7B9E9BF6D1FEE && \\\r\n    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 6125E2A8C77F2818FB7BD15B93C4A3FD7BB9C367 && \\\r\n    echo \"deb http://ppa.launchpad.net/ansible/ansible/ubuntu xenial main\" | tee -a /etc/apt/sources.list.d/ansible.list && \\\r\n    echo \"deb http://ppa.launchpad.net/ansible/proot/ubuntu xenial main\" | tee -a /etc/apt/sources.list.d/proot.list && \\\r\n    echo \"deb http://ppa.launchpad.net/gamunu/tensor/ubuntu xenial main\" | tee -a /etc/apt/sources.list.d/tensor.list && \\\r\n    apt-get -q update && \\\n    apt-get -y --no-install-recommends -q install \\\n    ansible \\\n    git \\\n    subversion \\\n    mercurial \\\n    python-dev \\\n    libkrb5-dev \\\n    python-pip \\\n    curl \\\n    unzip \\\n    libssl-dev \\\n    libffi-dev \\\n    python-dev \\\n    proot \\\n    krb5-user && \\\n    # install python packages\r\n    pip install --no-cache-dir -U \\\n    pip \\\n    wheel \\\n    setuptools && \\\n    pip install --no-cache-dir --upgrade \\\n    \"pywinrm>=0.1.1\" \\\n    \"azure==2.0.0rc5\" \\\n    pyrax \\\n    apache-libcloud \\\n    boto \\\n    kerberos \\\n    requests_kerberos \\\n    \"pywinrm[credssp]\" && \\\n    apt-get -q -y upgrade && apt-get -y -q --no-install-recommends install -f tensor && \\\n    #install terraform\r\n    cd /tmp/ && curl -f -O https://releases.hashicorp.com/terraform/0.9.5/terraform_0.9.5_linux_amd64.zip && \\\n    unzip terraform_0.9.5_linux_amd64.zip -d /opt/terraform && \\\n    ln -s /opt/terraform/terraform /usr/bin/terraform && \\\n    # clean up\r\n    apt-get --purge remove -y -q --auto-remove build-essential python-pip curl \\\r\n    unzip libssl-dev libffi-dev python-dev && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* && rm -rf /tmp/* && \\\n    # create project home directory and remove tensor configuration\r\n    mkdir -p \"/data\" && \\\n    echo 'localhost' > /etc/ansible/hosts && \\\n    rm /etc/tensor.conf && rm /etc/krb5.conf\n\n\nENV TENSOR_HOST=\"0.0.0.0\" TENSOR_PORT=80 PROJECTS_HOME=\"/data\" \\\r\n    TENSOR_DB_USER=tensor TENSOR_DB_PASSWORD=tensor TENSOR_DB_NAME=tensordb \\\r\n    TENSOR_DB_REPLICA=\"\" TENSOR_DB_HOSTS=\"mongo:27017\" KRB5_CONFIG=\"/data/krb5.conf\" \\\r\n    ANSIBLE_CONFIG=\"/etc/ansible/ansible.cfg\" TENSOR_REDIS_HOST=\"redis:6379\"\n\nUSER tensor\n\nVOLUME /data\n\nWORKDIR /data\n\nCMD [\"tensord\"]\n"
}