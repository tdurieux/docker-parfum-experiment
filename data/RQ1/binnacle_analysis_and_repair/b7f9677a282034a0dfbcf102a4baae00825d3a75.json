{
  "startTime": 1674244571030,
  "endTime": 1674244571105,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.12-alpine as base\nLABEL maintainer=\"Hunter Long (https://github.com/hunterlong)\"\nARG VERSION\nENV DEP_VERSION v0.5.0\nRUN apk add --no-cache libstdc++ gcc g++ make git ca-certificates linux-headers wget curl jq libsass\nRUN curl -f -L -s https://github.com/golang/dep/releases/download/$DEP_VERSION/dep-linux-amd64 -o /go/bin/dep && \\\n    chmod +x /go/bin/dep\nRUN curl -f -L -s https://assets.statping.com/sass -o /usr/local/bin/sass && \\\n    chmod +x /usr/local/bin/sass\nWORKDIR /go/src/github.com/hunterlong/statping\nADD Makefile Gopkg.* /go/src/github.com/hunterlong/statping/\nRUN make dep && \\\n    make dev-deps\nADD . /go/src/github.com/hunterlong/statping\nRUN make install\n\n# Statping :latest Docker Image\nFROM alpine:latest\nLABEL maintainer=\"Hunter Long (https://github.com/hunterlong)\"\n\nARG VERSION\nENV IS_DOCKER=true\nENV STATPING_DIR=/app\nENV PORT=8080\nRUN apk --no-cache add curl jq libsass\n\nCOPY --from=base /usr/local/bin/sass /usr/local/bin/sass\nCOPY --from=base /go/bin/statping /usr/local/bin/statping\n\nWORKDIR /app\nVOLUME /app\nEXPOSE $PORT\n\nHEALTHCHECK --interval=5s --timeout=5s --retries=5 CMD curl -s \"http://localhost:$PORT/health\" | jq -r -e \".online==true\"\n\nCMD statping -port $PORT\n"
}