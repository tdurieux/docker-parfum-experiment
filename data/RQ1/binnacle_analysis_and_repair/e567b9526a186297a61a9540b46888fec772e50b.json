{
  "startTime": 1674234875533,
  "endTime": 1674234875639,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\nLABEL maintainer=\"Postman Labs <help@getpostman.com>\"\n\nARG NODE_VERSION=10\nARG NEWMAN_VERSION\n\n# Bail out early if NODE_VERSION is not provided\nRUN if [ ! $(echo $NEWMAN_VERSION | grep -oE \"^[0-9]+\\.[0-9]+\\.[0-9]+$\") ]; then \\\n        echo \"\\033[0;31mA valid semver Newman version is required in the NEWMAN_VERSION build-arg\\033[0m\"; \\\n        exit 1; \\\n    fi\n\n# Install node\nADD https://deb.nodesource.com/setup_$NODE_VERSION.x /opt/install_node.sh\n\nRUN apt-get update -y && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y gnupg && \\\n    bash /opt/install_node.sh && \\\n    apt-get install --no-install-recommends -y nodejs && \\\n    npm install -g newman@${NEWMAN_VERSION} && \\\n    rm /opt/install_node.sh && \\\n    apt-get purge -y gnupg; npm cache clean --force; rm -rf /var/lib/apt/lists/*;\n\n# Set environment variables\nENV LC_ALL=\"en_US.UTF-8\" LANG=\"en_US.UTF-8\" LANGUAGE=\"en_US.UTF-8\"\n\n# Set workdir to /etc/newman\n# When running the image, mount the directory containing your collection to this location\n#\n# docker run -v <path to collections directory>:/etc/newman ...\n#\n# In case you mount your collections directory to a different location, you will need to give absolute paths to any\n# collection, environment files you want to pass to newman, and if you want newman reports to be saved to your disk.\n# Or you can change the workdir by using the -w or --workdir flag\nWORKDIR /etc/newman\n\n# Set newman as the default container command\n# Now you can run the container via\n#\n# docker run -v /home/collections:/etc/newman -t postman/newman_ubuntu -c YourCollection.json.postman_collection \\\n#                                                                          -e YourEnvironment.postman_environment \\\n#                                                                          -H newman_report.html\nENTRYPOINT [\"newman\"]\n"
}