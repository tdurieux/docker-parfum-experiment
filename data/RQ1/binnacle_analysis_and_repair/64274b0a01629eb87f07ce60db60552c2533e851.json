{
  "startTime": 1674241489843,
  "endTime": 1674241490086,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 18,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 53,
        "columnStart": 1,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 29,
        "columnStart": 1,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 17,
        "columnStart": 1,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Buildstage\nFROM lsiobase/alpine:3.9 as buildstage\n\n# set NZBGET version\nARG NZBGET_RELEASE\n\nRUN \\\n echo \"**** install build packages ****\" && \\\n apk add --no-cache \\\n\tcurl \\\n\tg++ \\\n\tgcc \\\n\tgit \\\n\tlibxml2-dev \\\n\tlibxslt-dev \\\n\tmake \\\n\tncurses-dev \\\n\topenssl-dev && \\\n echo \"**** build nzbget ****\" && \\\n if [ -z ${NZBGET_RELEASE+x} ]; then \\\n\tNZBGET_RELEASE=$( curl -f -sX GET \"https://api.github.com/repos/nzbget/nzbget/releases/latest\" \\\n\t| awk '/tag_name/{print $4;exit}' FS='[\"\"]') ; \\\n fi && \\\n mkdir -p /app/nzbget && \\\n git clone https://github.com/nzbget/nzbget.git nzbget && \\\n cd nzbget/ && \\\n git checkout ${NZBGET_RELEASE} && \\\n git cherry-pick -n fa57474d && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\tbindir='${exec_prefix}' && \\\n make && \\\n make prefix=/app/nzbget install && \\\n sed -i \\\n\t-e \"s#^MainDir=.*#MainDir=/downloads#g\" \\\n\t-e \"s#^ScriptDir=.*#ScriptDir=$\\{MainDir\\}/scripts#g\" \\\n\t-e \"s#^WebDir=.*#WebDir=$\\{AppDir\\}/webui#g\" \\\n\t-e \"s#^ConfigTemplate=.*#ConfigTemplate=$\\{AppDir\\}/webui/nzbget.conf.template#g\" \\\n\t-e \"s#^UnrarCmd=.*#UnrarCmd=$\\{AppDir\\}/unrar#g\" \\\n\t-e \"s#^SevenZipCmd=.*#SevenZipCmd=$\\{AppDir\\}/7za#g\" \\\n\t-e \"s#^CertStore=.*#CertStore=$\\{AppDir\\}/cacert.pem#g\" \\\n\t-e \"s#^CertCheck=.*#CertCheck=yes#g\" \\\n\t-e \"s#^DestDir=.*#DestDir=$\\{MainDir\\}/completed#g\" \\\n\t-e \"s#^InterDir=.*#InterDir=$\\{MainDir\\}/intermediate#g\" \\\n\t-e \"s#^LogFile=.*#LogFile=$\\{MainDir\\}/nzbget.log#g\" \\\n\t-e \"s#^AuthorizedIP=.*#AuthorizedIP=127.0.0.1#g\" \\\n /app/nzbget/share/nzbget/nzbget.conf && \\\n mv /app/nzbget/share/nzbget/webui /app/nzbget/ && \\\n cp /app/nzbget/share/nzbget/nzbget.conf /app/nzbget/webui/nzbget.conf.template && \\\n ln -s /usr/bin/7za /app/nzbget/7za && \\\n ln -s /usr/bin/unrar /app/nzbget/unrar && \\\n cp /nzbget/pubkey.pem /app/nzbget/pubkey.pem && \\\n curl -f -o \\\n\t/app/nzbget/cacert.pem -L \\\n\t\"https://curl.haxx.se/ca/cacert.pem\"\n\n# Runtime Stage\nFROM lsiobase/alpine:3.9\n\n# set version label\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"sparklyballs,thelamer\"\n\nRUN \\\n echo \"**** install build packages ****\" && \\\n apk add --no-cache --upgrade --virtual=build-dependencies \\\n\tgcc \\\n\tlibc-dev \\\n\tlibxml2-dev \\\n\tlibxslt-dev \\\n\tmake \\\n\tpy2-pip \\\n\tpython-dev && \\\n echo \"**** install packages ****\" && \\\n apk add --no-cache \\\n\tcurl \\\n\tlibxml2 \\\n\tlibxslt \\\n\topenssl \\\n\tp7zip \\\n\tpython2 \\\n\tunrar \\\n\twget && \\\n echo \"**** install python packages ****\" && \\\n pip install --no-cache-dir \\\n\tapprise \\\n\tchardet \\\n\tpynzbget &&\\\n echo \"**** cleanup ****\" && \\\n apk del --purge \\\n\tbuild-dependencies && \\\n rm -rf \\\n\t/root/.cache \\\n\t/tmp/*\n\n# add local files and files from buildstage\nCOPY --from=buildstage /app/nzbget /app/nzbget\nCOPY root/ /\n\n# ports and volumes\nVOLUME /config /downloads\nEXPOSE 6789\n"
}