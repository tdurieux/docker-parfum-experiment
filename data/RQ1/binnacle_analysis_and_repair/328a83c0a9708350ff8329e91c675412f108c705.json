{
  "startTime": 1674236254341,
  "endTime": 1674236254436,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest\nVOLUME /logs\nVOLUME /media/source\nVOLUME /media/meta\nVOLUME /media/processed\n\n# It is possible that encoding could really take more than 30 mins\n# HEALTHCHECK --interval=1m --timeout=3s CMD touch -d\"-30min\" /tmp/marker && [ /processmedia2/.heartbeat -nt /tmp/marker ]\n\nCOPY --from=jrottenberg/ffmpeg /usr/local /usr/local\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    git \\\n    python3-pip \\\n    jpegoptim \\\n    tesseract-ocr-eng \\\n    sox \\\n&& apt-get clean && rm -rf /var/lib/apt/lists /var/cache/apt && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir --upgrade pip setuptools\n\nCOPY processmedia2.pip requirements.pip\nRUN pip3 install --no-cache-dir -r requirements.pip\n\nWORKDIR /processmedia2\n\nCOPY ./ ./\nCMD ./processmedia2.sh\n\n\n\n#RUN mkdir -p /media/source /media/meta /media/processed && chmod -R 777 /media/\n\n#COPY --from=krallin/ubuntu-tini /usr/local/bin/tini /usr/local/bin/tini\n#ENTRYPOINT [\"/usr/local/bin/tini\", \"--\", \"/processmedia2/docker-compose.yml.processmedia2.sh\"]\n#https://github.com/docker-library/mysql/issues/47#issuecomment-140339288\n#CMD /processmedia2/processmedia2.sh\n\n# docker build -t processmedia2:latest --file .\\processmedia2.base.dockerfile .\n# docker run -it --rm -v ../:/processmedia2:ro -v /var/run/docker.sock:/var/run/docker.sock docker.io processmedia2:latest\n  # Windows -v //var/run/docker.sock:/var/run/docker.sock\n"
}