{
  "startTime": 1674251940901,
  "endTime": 1674251941104,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER COMPSs Support <support-compss@bsc.es>\n\n# =============================================================================\n# Configuration required to use the image for jenkins testing\n# =============================================================================\n\nRUN apt-get update && \\\n# Install Packages\n    apt-get install -y --no-install-recommends \\\n    git  \\\n    vim \\\n    wget \\\n    openssh-server \\\n    sudo && \\\n# Create Jenkins User\n    useradd jenkins -m -s /bin/bash && \\\n# Add the jenkins user to sudoers\n    echo \"jenkins  ALL=(ALL)  NOPASSWD:ALL\" >> /etc/sudoers && \\\n# Enable ssh to localhost for user root & jenkins\n    yes yes | ssh-keygen -f /root/.ssh/id_rsa -t rsa -N '' > /dev/null && \\\n    cat /root/.ssh/id_rsa.pub > /root/.ssh/authorized_keys && \\\n    cp -r /root/.ssh /home/jenkins && \\\n# Make sure jenkins owns his files\n    chown -R jenkins /home/jenkins/ && \\\n    chgrp -R jenkins /home/jenkins/ && \\\n# Enable repo compression\n    git config --global core.compression 9 && \\\n# =============================================================================\n# Dependencies for building COMPSs\n# =============================================================================\n# Build dependencies\n    apt-get install -y --no-install-recommends maven \\\n# Runtime dependencies\n    openjdk-8-jdk graphviz xdg-utils \\\n# Bindings-common-dependencies\n    libtool automake build-essential \\\n# C-binding dependencies\n    libboost-all-dev libxml2-dev csh \\\n# Extrae dependencies\n    libxml2 gfortran libpapi-dev papi-tools \\\n# Misc. dependencies\n    openmpi-bin openmpi-doc libopenmpi-dev uuid-runtime curl bc \\\n# Python-binding dependencies\n    python3-dev python3-pip python3-setuptools && \\\n    pip3 install --no-cache-dir wheel dill decorator coverage numpy==1.15.4 scipy==1.0.0 \\\n    scikit-learn==0.19.1 pandas==0.23.1 matplotlib==2.2.3 flake8 codecov && \\\n# Configure user environment\n# =============================================================================\n# System configuration\n# =============================================================================\n# Add environment variables\n    echo \"JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/\" >> /etc/environment && \\\n    echo \"MPI_HOME=/usr/lib/openmpi\" >> /etc/environment && \\\n    echo \"LD_LIBRARY_PATH=/usr/lib/openmpi/lib\" >> /etc/environment && \\\n    mkdir /run/sshd && \\\n# Clone framework files for installation\n    git clone --depth=1 https://github.com/bsc-wdc/compss.git framework && \\\n# Install COMPSs\n    cd /framework && \\\n    ./submodules_get.sh && \\\n    ./submodules_patch.sh && \\\n    sudo -E /framework/builders/buildlocal -Np /opt/COMPSs && \\\n    rm -rf /framework /root/.m2 /root/.cache /home/jenkins/.COMPSs /tmp/* && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/\nENV PATH $PATH:/opt/COMPSs/Runtime/scripts/user:/opt/COMPSs/Bindings/c/bin:/opt/COMPSs/Runtime/scripts/utils\nENV CLASSPATH $CLASSPATH:/opt/COMPSs/Runtime/compss-engine.jar\nENV LD_LIBRARY_PATH /opt/COMPSs/Bindings/bindings-common/lib:$JAVA_HOME/jre/lib/amd64/server\n"
}