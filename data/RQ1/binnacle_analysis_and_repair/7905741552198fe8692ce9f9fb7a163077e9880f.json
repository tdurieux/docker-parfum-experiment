{
  "startTime": 1674249174241,
  "endTime": 1674249174473,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:latest\n\nEXPOSE 5000\n\nENV RAILS_ENV=test\n\n# Add official postgresql apt deb source\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main\" > /etc/apt/sources.list.d/pgdg.list \\\n    && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y postgresql-client-10 && rm -rf /var/lib/apt/lists/*;\n\n# Node, needed for asset pipeline\nRUN curl -f -sL https://deb.nodesource.com/setup_11.x | bash - \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && npm install -q -g npm && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n# Add the wait-for-it.sh script for waiting on dependent containers\nRUN curl -f https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh > /usr/local/bin/wait-for-it.sh \\\n    && chmod +x /usr/local/bin/wait-for-it.sh\n\nWORKDIR /app\n\n# Install Rubygems first\nADD Gemfile Gemfile.lock /app/\nRUN gem install bundler \\\n    && bundle install -j 32\n\n# Install npm libraries next\nADD package.json package-lock.json /app/\nRUN npm install && npm cache clean --force;\n\n# Now add the rest of your code\nADD . /app/\n\n# We want to precompile the assets into the Docker image, unless it's\n# development when you're just using live asset compilation\nRUN if [ \"$RAILS_ENV\" != \"development\" ]; then rm -rf public/assets && rake assets:precompile; else true; fi\n\n# Clean up\nRUN apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /app/log/*\n\nCMD [\"rails\", \"server\", \"-p\", \"5000\"]\n"
}