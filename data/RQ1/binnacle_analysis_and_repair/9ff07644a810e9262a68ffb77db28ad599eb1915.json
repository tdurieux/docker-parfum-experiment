{
  "startTime": 1674240084874,
  "endTime": 1674240085143,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 105
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER Oleg Morozenkov <a@reo7sp.ru>\n\nRUN apt-get -qq update && \\\n    apt-get -qq --no-install-recommends install -y g++ make binutils cmake libssl-dev libcurl4-openssl-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get -qq update && \\\n    apt-get -qq --no-install-recommends install -y wget build-essential python-dev autotools-dev libicu-dev libbz2-dev zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /usr/src/boost\nRUN wget -q -O boost_1_59_0.tar.gz https://sourceforge.net/projects/boost/files/boost/1.59.0/boost_1_59_0.tar.gz/download && \\\n    tar xzf boost_1_59_0.tar.gz && \\\n    rm boost_1_59_0.tar.gz && \\\n    cd boost_1_59_0 && \\\n    ./bootstrap.sh --prefix=/usr/ --with-libraries=system,test && \\\n    ./b2 -j $(nproc) -d0 && \\\n    ./b2 install && \\\n    cd .. && \\\n    rm -r boost_1_59_0\n\n\nWORKDIR /usr/src/tgbot-cpp\nCOPY include include\nCOPY src src\nCOPY test test\nCOPY CMakeLists.txt ./\n\nRUN cmake -DENABLE_TESTS=ON . && \\\n    make -j$(nproc) && \\\n    make install\n\n\nCOPY samples samples\n\nWORKDIR /usr/src/tgbot-cpp/samples/echobot\nRUN rm -rf CMakeCache.txt CMakeFiles/ && \\\n    cmake . && make -j$(nproc)\n\nWORKDIR /usr/src/tgbot-cpp/samples/echobot-curl-client\nRUN rm -rf CMakeCache.txt CMakeFiles/ && \\\n    cmake . && make -j$(nproc)\n\nWORKDIR /usr/src/tgbot-cpp/samples/echobot-webhook-server\nRUN rm -rf CMakeCache.txt CMakeFiles/ && \\\n    cmake . && make -j$(nproc)\n\nWORKDIR /usr/src/tgbot-cpp/samples/inline-keyboard\nRUN rm -rf CMakeCache.txt CMakeFiles/ && \\\n    cmake . && make -j$(nproc)\n\nWORKDIR /usr/src/tgbot-cpp/samples/photo\nRUN rm -rf CMakeCache.txt CMakeFiles/ && \\\n    cmake . && make -j$(nproc)\n\n\nWORKDIR /usr/src/tgbot-cpp\nENV CTEST_OUTPUT_ON_FAILURE=1\nCMD make test\n\n"
}