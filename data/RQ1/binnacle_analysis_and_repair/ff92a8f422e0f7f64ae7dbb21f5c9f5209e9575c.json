{
  "startTime": 1674241650511,
  "endTime": 1674241650671,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 1,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 1,
        "columnEnd": 91
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 12,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nARG APPIUM_VERSION=\"1.8.1\"\n\nRUN \\\n    apt update && \\\n    apt remove -y libcurl4 && \\\n    apt install --no-install-recommends -y apt-transport-https ca-certificates tzdata locales libcurl4 curl gnupg && \\\n\tcurl -f --silent --location https://deb.nodesource.com/setup_10.x | bash - && \\\n\tapt install -y --no-install-recommends \\\n\t    curl \\\n\t    iproute2 \\\n\t    nodejs \\\n\t    openjdk-8-jre-headless \\\n\t    unzip \\\n\t    xvfb \\\n\t    libpulse0 \\\n        fluxbox \\\n        x11vnc \\\n        feh \\\n        wmctrl \\\n\t    libglib2.0-0 && \\\n    apt-get clean && \\\n    rm -Rf /tmp/* && rm -Rf /var/lib/apt/lists/*\n\nRUN cd / && npm install --prefix ./opt/ appium@$APPIUM_VERSION && npm cache clean --force;\n\nCOPY android.conf /etc/ld.so.conf.d/\nCOPY fluxbox/aerokube /usr/share/fluxbox/styles/\nCOPY fluxbox/init /root/.fluxbox/\nCOPY fluxbox/aerokube.png /usr/share/images/fluxbox/\n\n# Android SDK\nENV ANDROID_HOME /opt/android-sdk-linux\nENV PATH /opt/android-sdk-linux/platform-tools:/opt/android-sdk-linux/tools:/opt/android-sdk-linux/tools/bin:/opt/android-sdk-linux/emulator:$PATH\nENV LD_LIBRARY_PATH ${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/gles_swiftshader:${LD_LIBRARY_PATH}\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64\n\nARG ANDROID_DEVICE=\"\"\nARG AVD_NAME=\"android6.0-1\"\nARG BUILD_TOOLS=\"build-tools;23.0.1\"\nARG PLATFORM=\"android-23\"\nARG EMULATOR_IMAGE=\"system-images;android-23;default;x86\"\nARG EMULATOR_IMAGE_TYPE=\"default\"\nARG SDCARD_SIZE=\"500\"\nARG USERDATA_SIZE=\"500\"\n\nRUN \\\n\tcurl -f -o sdk-tools.zip https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip && \\\n\tmkdir -p /opt/android-sdk-linux && \\\n\tunzip -q sdk-tools.zip -d /opt/android-sdk-linux && \\\n\trm sdk-tools.zip && \\\n\tyes | sdkmanager --licenses && \\\n\tsdkmanager \"emulator\" \"tools\" \"platform-tools\" \"$BUILD_TOOLS\" \"platforms;$PLATFORM\" \"$EMULATOR_IMAGE\" && \\\n\tmksdcard \"$SDCARD_SIZE\"M sdcard.img && \\\n\techo \"no\" | ( \\\n\t    ([ -n \"$ANDROID_DEVICE\" ] && avdmanager create avd -n \"$AVD_NAME\" -k \"$EMULATOR_IMAGE\" --abi x86 --device \"$ANDROID_DEVICE\" --sdcard /sdcard.img ) || \\\n\t    avdmanager create avd -n \"$AVD_NAME\" -k \"$EMULATOR_IMAGE\" --abi x86 --sdcard /sdcard.img \\\n    ) && \\\n\tldconfig && \\\n\tresize2fs /root/.android/avd/$AVD_NAME.avd/userdata.img \"$USERDATA_SIZE\"M && \\\n\tmv /root/.android/avd/$AVD_NAME.avd/userdata.img /root/.android/avd/$AVD_NAME.avd/userdata-qemu.img && \\\n\trm /opt/android-sdk-linux/system-images/$PLATFORM/$EMULATOR_IMAGE_TYPE/x86/userdata.img\n\nCOPY emulator-snapshot.sh tmp/chromedriver* *.apk /usr/bin/\n\n# Entrypoint\nCOPY tmp/entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}