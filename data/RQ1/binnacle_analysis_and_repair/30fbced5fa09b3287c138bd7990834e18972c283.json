{
  "startTime": 1674252668228,
  "endTime": 1674252668285,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedDockerfile": "ARG ALPINE_VERSION=3.9.4\n\nFROM dockercore/golang-cross:1.12.5@sha256:15b5f9805c0395d3ad80f9354ee358312e1abe3a683ce80371ad0551199ff253 AS build\n\nRUN apt-get install -y -q --no-install-recommends \\\n    coreutils \\\n    util-linux \\\n    uuid-runtime && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /go/src/github.com/docker/app/\n\nCOPY . .\nARG EXPERIMENTAL=\"off\"\nARG TAG=\"unknown\"\nRUN make EXPERIMENTAL=${EXPERIMENTAL} BUILD_TAG=${BUILD_TAG} TAG=${TAG} bin/cnab-run\n\n # local cnab invocation image\nFROM alpine:${ALPINE_VERSION} as invocation\nRUN apk add --no-cache ca-certificates && adduser -S cnab\nUSER cnab\nCOPY --from=build /go/src/github.com/docker/app/bin/cnab-run /cnab/app/run\nWORKDIR /cnab/app\nCMD /cnab/app/run\n"
}