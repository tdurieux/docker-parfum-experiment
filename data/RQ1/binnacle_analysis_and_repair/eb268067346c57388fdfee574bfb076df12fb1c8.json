{
  "startTime": 1674243523504,
  "endTime": 1674243524160,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 9,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 9,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 9,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 9,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 9,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 9,
        "columnEnd": 101
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 9,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 71,
        "lineEnd": 84,
        "columnStart": 9,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 9,
        "columnEnd": 64
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 9,
        "columnEnd": 40
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 9,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\nMAINTAINER https://github.com/helderco/\n\n# persistent / runtime deps\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      ca-certificates \\\n      curl \\\n      librecode0 \\\n      libmysqlclient-dev \\\n      libsqlite3-0 \\\n      libxml2 \\\n    && apt-get clean \\\n    && rm -r /var/lib/apt/lists/*\n\n# phpize deps\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      autoconf \\\n      file \\\n      g++ \\\n      gcc \\\n      libc-dev \\\n      make \\\n      pkg-config \\\n      re2c \\\n    && apt-get clean \\\n    && rm -r /var/lib/apt/lists/*\n\nENV PHP_INI_DIR /usr/local/etc/php\nRUN mkdir -p $PHP_INI_DIR/conf.d\n\nENV GPG_KEYS 0B96609E270F565C13292B24C13C70B87267B52D 0A95E9A026542D53835E3F3A7DEC4E69FC9C83D7 0E604491\nRUN set -xe \\\n  && for key in $GPG_KEYS; do \\\n    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n  done\n\n# compile openssl, otherwise --with-openssl won't work\nRUN OPENSSL_VERSION=\"1.0.2k\" \\\n      && cd /tmp \\\n      && mkdir openssl \\\n      && curl -f -sL \"https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz\" -o openssl.tar.gz \\\n      && curl -f -sL \"https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz.asc\" -o openssl.tar.gz.asc \\\n      && gpg --batch --verify openssl.tar.gz.asc \\\n      && tar -xzf openssl.tar.gz -C openssl --strip-components=1 \\\n      && cd /tmp/openssl \\\n      && ./config && make && make install \\\n      && rm -rf /tmp/* && rm openssl.tar.gz\n\nENV PHP_VERSION 5.3.29\n\n# php 5.3 needs older autoconf\n# --enable-mysqlnd is included below because it's harder to compile after the fact the extensions are (since it's a plugin for several extensions, not an extension in itself)\nRUN buildDeps=\" \\\n                autoconf2.13 \\\n                libcurl4-openssl-dev \\\n                libreadline6-dev \\\n                librecode-dev \\\n                libsqlite3-dev \\\n                libssl-dev \\\n                libxml2-dev \\\n                xz-utils \\\n      \" \\\n      && set -x \\\n      && apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \\\n      && curl -f -SL \"https://php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror\" -o php.tar.xz \\\n      && curl -f -SL \"https://php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror\" -o php.tar.xz.asc \\\n      && gpg --batch --verify php.tar.xz.asc \\\n      && mkdir -p /usr/src/php \\\n      && tar -xof php.tar.xz -C /usr/src/php --strip-components=1 \\\n      && rm php.tar.xz* \\\n      && cd /usr/src/php \\\n      && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n            --with-config-file-path=\"$PHP_INI_DIR\" \\\n            --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \\\n            --enable-fpm \\\n            --with-fpm-user=www-data \\\n            --with-fpm-group=www-data \\\n            --disable-cgi \\\n            --enable-mysqlnd \\\n            --with-mysql \\\n            --with-curl \\\n            --with-openssl=/usr/local/ssl \\\n            --with-readline \\\n            --with-recode \\\n            --with-zlib \\\n      && make -j\"$(nproc)\" \\\n      && make install \\\n      && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \\\n      && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps \\\n      && make clean && rm -rf /usr/src/php\n\nCOPY docker-php-* /usr/local/bin/\n\nWORKDIR /var/www/html\n\nRUN set -ex \\\n  && cd /usr/local/etc \\\n  && if [ -d php-fpm.d ]; then \\\n    # for some reason, upstream's php-fpm.conf.default has \"include=NONE/etc/php-fpm.d/*.conf\"\n    sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null; \\\n    cp php-fpm.d/www.conf.default php-fpm.d/www.conf; \\\n  else \\\n    # PHP 5.x don't use \"include=\" by default, so we'll create our own simple config that mimics PHP 7+ for consistency\n    mkdir php-fpm.d; \\\n    cp php-fpm.conf.default php-fpm.d/www.conf; \\\n    { \\\n      echo '[global]'; \\\n      echo 'include=etc/php-fpm.d/*.conf'; \\\n    } | tee php-fpm.conf; \\\n  fi \\\n  && { \\\n    echo '[global]'; \\\n    echo 'error_log = /proc/self/fd/2'; \\\n    echo; \\\n    echo '[www]'; \\\n    echo '; if we send this to /proc/self/fd/1, it never appears'; \\\n    echo 'access.log = /proc/self/fd/2'; \\\n    echo; \\\n    echo '; Ensure worker stdout and stderr are sent to the main error log.'; \\\n    echo 'catch_workers_output = yes'; \\\n  } | tee php-fpm.d/docker.conf \\\n  && { \\\n    echo '[global]'; \\\n    echo 'daemonize = no'; \\\n    echo; \\\n    echo '[www]'; \\\n    echo 'listen = 9000'; \\\n  } | tee php-fpm.d/zz-docker.conf\n\n# fix some weird corruption in this file\nRUN sed -i -e \"\" /usr/local/etc/php-fpm.d/www.conf\n\nEXPOSE 9000\nCMD [\"php-fpm\"]\n"
}