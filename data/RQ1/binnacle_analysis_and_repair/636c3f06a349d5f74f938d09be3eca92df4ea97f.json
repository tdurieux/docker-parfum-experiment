{
  "startTime": 1674249140639,
  "endTime": 1674249140842,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "# Pull ubuntu image\nFROM ubuntu:18.04\n\n# Set environment variables\nENV CONTAINER_VERSION=0.5 \\\n    ELDEWRITO_VERSION=0.6.1 \\\n    MTNDEW_CHECKSUM=496b9296239539c747347805e15d2540 \\\n    DISPLAY=:1 \\\n    WINEPREFIX=\"/wine\" \\\n    DEBIAN_FRONTEND=noninteractive \\\n    PUID=0 \\\n    PGID=0\n\n# Install temporary packages\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y wget software-properties-common apt-transport-https cabextract && rm -rf /var/lib/apt/lists/*;\n\n# Install Wine stable\nRUN dpkg --add-architecture i386 && \\\n    wget -nc https://dl.winehq.org/wine-builds/winehq.key && \\\n    apt-key add winehq.key && \\\n    rm winehq.key && \\\n    apt-add-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ bionic main' && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y winehq-stable && rm -rf /var/lib/apt/lists/*;\n\n# Download winetricks from source\nRUN wget https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks && \\\n    chmod +x ./winetricks\n\n# Install X virtual frame buffer and winbind\nRUN apt-get install --no-install-recommends -y xvfb winbind && rm -rf /var/lib/apt/lists/*;\n\n# Configure wine prefix\n# WINEDLLOVERRIDES is required so wine doesn't ask any questions during setup\nRUN Xvfb :1 -screen 0 320x240x24 & \\\n    WINEDLLOVERRIDES=\"mscoree,mshtml=\" wineboot -u && \\\n    wineserver -w && \\\n    ./winetricks -q vcrun2012 winhttp\n\n# Cleanup\nRUN apt-get remove -y wget software-properties-common apt-transport-https cabextract && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm winetricks && \\\n    rm -rf .cache/\n\n# Add the start script\nADD start.sh .\n\n# Add the default configuration files\nADD defaults defaults\n\n# Make start script executable and create necessary directories\nRUN chmod +x start.sh && \\\n    mkdir config logs\n\n# Set start command to execute the start script\nCMD /start.sh\n\n# Set working directory into the game directory\nWORKDIR /game\n\n# Expose necessary ports\nEXPOSE 11774/udp 11775/tcp 11776/tcp 11777/tcp\n\n# Set volumes\nVOLUME /game /config /logs\n"
}