{
  "startTime": 1674235102866,
  "endTime": 1674235103133,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 18,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 36,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 0,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 0,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 36,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 0,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 0,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn5-devel\n\n# from continuumio/anaconda3 ###########################################\n# https://hub.docker.com/r/continuumio/anaconda3/\n#\nRUN apt-get update --fix-missing && apt-get install --no-install-recommends -y wget bzip2 ca-certificates \\\n    libglib2.0-0 libxext6 libsm6 libxrender1 \\\n    git mercurial subversion && rm -rf /var/lib/apt/lists/*;\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \\\n    wget --quiet https://repo.continuum.io/archive/Anaconda3-4.0.0-Linux-x86_64.sh && \\\n    /bin/bash /Anaconda3-4.0.0-Linux-x86_64.sh -b -p /opt/conda && \\\n    rm /Anaconda3-4.0.0-Linux-x86_64.sh\n\nRUN apt-get install --no-install-recommends -y curl grep sed dpkg && \\\n    TINI_VERSION=$( curl -f https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\"\" | sed 's:^..\\(.*\\).$:\\1:') && \\\n    curl -f -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" > tini.deb && \\\n    dpkg -i tini.deb && \\\n    rm tini.deb && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nENV PATH /opt/conda/bin:$PATH\n\nRUN conda install pip\nRUN conda install nomkl numpy scipy scikit-learn numexpr\n\n# http://bugs.python.org/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG C.UTF-8\n\nENTRYPOINT [ \"/usr/bin/tini\", \"--\" ]\nCMD [ \"/bin/bash\" ]\n\n#######################################################################\n#######################################################################\n\nRUN apt-get update && \\\n apt-get install --no-install-recommends -y libopenblas-dev libopenblas-base && \\\n apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\n# from kaixhin/cuda-theano ############################################\n# https://hub.docker.com/r/kaixhin/cuda-theano/\n#\n#RUN apt-get update && apt-get install -y \\\n# git\n# libopenblas-dev \\\n# python-dev \\\n# python-pip \\\n# python-nose \\\n# python-numpy \\\n# python-scipy\n\n# Set CUDA_ROOT\nENV CUDA_ROOT /usr/local/cuda/bin\n# Install bleeding-edge Theano\nRUN pip install --no-cache-dir --upgrade --no-deps git+git://github.com/Theano/Theano.git\n\n###########################################################################\n###########################################################################\n\nRUN ln -s /usr/local/nvidia/lib64/libcuda.so.1 /usr/lib/x86_64-linux-gnu/libcuda.so\n\nRUN pip install --no-cache-dir keras\nENV KERAS_BACKEND theano\nRUN python -c \"import keras\"\n\n# theano\n# Set up .theanorc for CUDA\nRUN echo \"[global]\\ndevice=gpu\\nfloatX=float32\\noptimizer_including=cudnn\\n[lib]\\ncnmem=0.94\\n[nvcc]\\nfastmath=True\" > /root/.theanorc\n\n########################################################################################\n\nRUN conda install -y shapely gdal\nRUN pip install --no-cache-dir xgboost\nRUN echo \"umask 0000\" >> /root/.bashrc\n\nCOPY program.py /root\nCOPY model /root/model\n\nWORKDIR /root"
}