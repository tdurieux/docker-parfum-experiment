{
  "startTime": 1674238839620,
  "endTime": 1674238839723,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM bitnami/minideb:jessie\n\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    echo \"deb http://http.debian.net/debian jessie-backports main\" | \\\n\ttee --append /etc/apt/sources.list.d/jessie-backports.list > /dev/null && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends -t jessie-backports openjdk-8-jdk-headless && \\\n    install_packages \\\n        build-essential \\\n        curl \\\n        python \\\n        git-core \\\n        unzip zip && rm -rf /var/lib/apt/lists/*;\n\nENV BAZEL_VERSION 0.7.0\n\n# install Bazel to build TensorFlow\nRUN curl -f -SLO https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-dist.zip \\\n    && mkdir bazel-${BAZEL_VERSION} \\\n    && unzip -qd bazel-${BAZEL_VERSION} bazel-${BAZEL_VERSION}-dist.zip \\\n    && cd bazel-${BAZEL_VERSION} \\\n    #&& : add -fpermissive compiler option to avoid compilation failure \\\n    #&& sed -i -e '/\"-std=c++0x\"/{h;s//\"-fpermissive\"/;x;G}' tools/cpp/cc_configure.bzl \\\n    #&& : add '#include <sys/stat.h>' to avoid mode_t type error \\\n    #&& sed -i -e '/#endif  \\/\\/ COMPILER_MSVC/{h;s//#else/;G;s//#include <sys\\/stat.h>/;G;}' third_party/ijar/common.h \\\n    && bash compile.sh \\\n    && cp -p output/bazel /usr/local/bin/\n\nRUN ls -l /usr/local/bin/bazel*\n\n# vim: ft=dockerfile\n"
}