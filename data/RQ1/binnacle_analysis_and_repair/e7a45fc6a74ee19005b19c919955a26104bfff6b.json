{
  "startTime": 1674250534376,
  "endTime": 1674250534436,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 1 - Compile needed python dependencies\nFROM python:3.6-alpine AS build\nRUN apk --no-cache add \\\n    gcc \\\n    musl-dev \\\n    pcre-dev \\\n    linux-headers \\\n    postgresql-dev\n\nWORKDIR /app\n\nCOPY ./requirements.txt /app/requirements.txt\nRUN pip install --no-cache-dir pip setuptools -U\nRUN pip install --no-cache-dir -r requirements.txt\n\n\n# Stage 2 - Build docker image suitable for execution and deployment\nFROM python:3.6-alpine AS production\nRUN apk --no-cache add \\\n    ca-certificates \\\n    mailcap \\\n    musl \\\n    pcre \\\n    postgresql\n\nCOPY --from=build /usr/local/lib/python3.6 /usr/local/lib/python3.6\nCOPY --from=build /usr/local/bin/uwsgi /usr/local/bin/uwsgi\n\n# Stage 4.2 - Copy source code\nWORKDIR /app\nCOPY ./bin/docker_start.sh /start.sh\nCOPY ./bin/uwsgi.sh /uwsgi.sh\nCOPY ./manage.py /app/manage.py\nCOPY ./main.py /app/main.py\nRUN mkdir /app/log\n\nCOPY ./bot /app/bot\n\nENV DJANGO_SETTINGS_MODULE=bot.settings\n\nARG SECRET_KEY=dummy\n\n# Run collectstatic, so the result is already included in the image\nRUN python manage.py collectstatic --noinput\n\nEXPOSE 8000\nCMD [\"/start.sh\"]\n"
}