{
  "startTime": 1674249898638,
  "endTime": 1674249898778,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 3,
        "columnEnd": 26
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 1,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\nRUN apk update && \\\n   apk add --no-cache bash util-linux\n# wget http://download.redis.io/releases/redis-4.0.1.tar.gz\nCOPY redis-4.0.1.tar.gz /redis-4.0.1.tar.gz\nRUN set -ex; \\\n\tapk add --no-cache --virtual .build-deps \\\n\t\tcoreutils \\\n\t\tgcc \\\n\t\tlinux-headers \\\n\t\tmake \\\n\t\tmusl-dev ; \\\n        tar -xzf /redis-4.0.1.tar.gz -C /tmp ; \\\n        mv /tmp/redis-4.0.1 /tmp/redis ; \\\n        rm -f /redis-4.0.1.tar.gz ; \\\n\n# disable Redis protected mode [1] as it is unnecessary in context of Docker\n# (ports are not automatically exposed when running inside Docker, but rather explicitly by specifying -p / -P)\n# [1]: https://github.com/antirez/redis/commit/edd4d555df57dc84265fdfb4ef59a4678832f6da\n        grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /tmp/redis/src/server.h; \\\n        sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /tmp/redis/src/server.h; \\\n        grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /tmp/redis/src/server.h ; \\\n\n        make -C /tmp/redis distclean ; \\\n        make -C /tmp/redis -j \"$(nproc)\"; \\\n        make -C /tmp/redis install; \\\n\n        rm -r /tmp/redis; \\\n        runDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\"; \\\n\tapk add --no-cache --virtual .redis-rundeps $runDeps; \\\n\tapk del .build-deps; \\\n        redis-server --version\n\nCOPY redis.conf /etc/redis.conf\nCOPY docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\nWORKDIR /\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nEXPOSE 6379\nCMD [ \"redis-server\",\"/etc/redis.conf\" ]\n"
}