{
  "startTime": 1674241245213,
  "endTime": 1674241245383,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update -qq --fix-missing && \\\n    apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;\n\nRUN  wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc \\\n\t| apt-key add -\n\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main\" \\\n\t>> /etc/apt/sources.list.d/postgresql.list\n\nRUN apt-get update --fix-missing -qq && \\\n    apt-get install --no-install-recommends -y \\\n     postgresql-9.5 \\\n     postgresql-server-dev-9.5 \\\n     postgresql-contrib-9.5 \\\n     postgis \\\n     postgresql-9.5-postgis-2.2 \\\n     postgresql-9.5-postgis-scripts \\\n     osm2pgsql \\\n     dnsutils \\\n     build-essential \\\n     libpq-dev \\\n     libstdc++-5-dev && rm -rf /var/lib/apt/lists/*;\n\nENV PGLOGS /var/log/postgres.log\n\nRUN touch $PGLOGS\nRUN chown postgres $PGLOGS\n\nUSER postgres\n\n# These variables are for the build; changing them at runtime won't\n# affect the container.\nENV PGVERS 9.5\nENV PGPATH /usr/lib/postgresql/$PGVERS/bin\nENV PGDATA /usr/local/data\nENV PGCONF /etc/postgresql/$PGVERS/main/postgresql.conf\n\n# Configuration variables are meant to be set at runtime, and should\n# only be used in the entrypoint.\nENV DB_PASS \"\"\nENV DB_NAME development\nENV DB_USER postgres\n\n# Add the postgres binaries to our path so we can use the commands.\nENV PATH $PATH:$PGPATH\n\n# Postgres will complain about these files not existing.\nRUN mkdir /var/run/postgresql/$PGVERS-main.pg_stat_tmp/\nRUN touch /var/run/postgresql/$PGVERS-main.pg_stat_tmp/global.tmp\n\nHEALTHCHECK CMD pg_isready\n\nUSER root\n\nENV PATH_LIBPGOSM /usr/local/src/libpgosm\nADD ./src/libpgosm $PATH_LIBPGOSM\n\nWORKDIR $PATH_LIBPGOSM\nRUN make\n\nWORKDIR /usr/local\n\nENV SCRIPT_PATH /usr/local/scripts\n\nRUN apt-get install --no-install-recommends -y vim && rm -rf /var/lib/apt/lists/*;\n\nADD scripts/ ./scripts\n\nWORKDIR ./scripts\nUSER root\nRUN chmod +x $SCRIPT_PATH/*.sh\nRUN chown -R postgres $SCRIPT_PATH\n\nRUN mkdir -p $PGDATA\nRUN chown -R postgres $PGDATA\n\nENV PGBACKUP /mnt/pg_backup\n\nRUN mkdir -p $PGBACKUP\nRUN chown -R postgres $PGBACKUP\n\nUSER postgres\n\nEXPOSE 5432\n\nENTRYPOINT $SCRIPT_PATH/docker-entrypoint.sh\n"
}