{
  "startTime": 1674234474254,
  "endTime": 1674234474387,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nWORKDIR /app\n\n# common packages\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    ca-certificates curl file tar clang libclang-dev \\\n    build-essential cmake libssl-dev zlib1g-dev \\\n    ruby-dev libboost-dev git wget && \\\n    rm -rf /var/lib/apt/lists/*\n\n# install cucumber package\nRUN gem install cucumber -v 2.0.0 --no-rdoc --no-ri\n\n# install rust toolchain\nenv RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo\n\nRUN curl https://sh.rustup.rs -sSf | \\\n    sh -s -- --default-toolchain 1.20.0 -y\n\nenv PATH=/usr/local/cargo/bin:${PATH}\n\n# install arduino toolchain\nRUN wget -nv https://arduino.cc/download.php?f=/arduino-1.8.5-linux64.tar.xz -O arduino-1.8.5.tar.xz\n\nRUN tar -xf arduino-1.8.5.tar.xz && \\\n    cd arduino-1.8.5 && \\\n    mkdir -p /usr/share/arduino && \\\n    cp -R * /usr/share/arduino && rm arduino-1.8.5.tar.xz\n\n\n# Fetch and build cargo deps\nRUN mkdir src && echo \"fn main() { }\" >> build.rs && touch src/tests.rs\n\nCOPY ./firmware/brake/kia_soul_ev_niro/tests/property/Cargo.toml .\nRUN cargo build\n\nCOPY ./firmware/brake/kia_soul_petrol/tests/property/Cargo.toml .\nRUN cargo build\n\nCOPY ./firmware/common/libs/pid/tests/property/Cargo.toml .\nRUN cargo build\n\nCOPY ./firmware/steering/tests/property/Cargo.toml .\nRUN cargo build\n\nCOPY ./firmware/throttle/tests/property/Cargo.toml .\nRUN cargo build\n"
}