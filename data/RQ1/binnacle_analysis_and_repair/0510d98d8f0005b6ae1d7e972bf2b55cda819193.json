{
  "startTime": 1674239805882,
  "endTime": 1674239806248,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 1,
        "columnEnd": 19
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 104,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 2,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2016 - 2017 Huawei Technologies Co., Ltd. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM docker.io/phusion/baseimage:0.9.21\n\nENV PHPIZE_DEPS \\\n\t\tautoconf \\\n\t\tfile \\\n\t\tg++ \\\n\t\tgcc \\\n\t\tlibc-dev \\\n\t\tmake \\\n\t\tpkg-config \\\n\t\tre2c\nRUN apt-get update && apt-get install -y \\\n\t\t$PHPIZE_DEPS \\\n\t\tca-certificates \\\n\t\tcurl \\\n\t\tlibedit2 \\\n\t\tlibsqlite3-0 \\\n\t\tlibxml2 \\\n\t\txz-utils \\\n        php-curl \\\n\t--no-install-recommends && rm -r /var/lib/apt/lists/*\n\nENV PHP_INI_DIR /usr/local/etc/php\nRUN mkdir -p $PHP_INI_DIR/conf.d\n\n\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\n\nARG php_version\nENV PHP_VERSION ${php_version}\nRUN echo \"PHP version found: $PHP_VERSION\"\nENV PHP_URL=\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror\"\n\nCOPY php-${PHP_VERSION}.sha256 /tmp/\n\nRUN set -xe; \\\n\n\tfetchDeps=' \\\n\t\twget \\\n\t'; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends $fetchDeps; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\n\tmkdir -p /usr/src; rm -rf /usr/src \\\n\tcd /usr/src; \\\n\n\twget -O php.tar.xz \"$PHP_URL\"; \\\n\n\n\tPHP_SHA256=$(cat /tmp/php-$PHP_VERSION.sha256); \\\n\tif [ -n \"$PHP_SHA256\" ]; then \\\n\t\techo \"$PHP_SHA256  *php.tar.xz\" | sha256sum -c -; \\\n\tfi; \\\n\t#if [ -n \"$PHP_MD5\" ]; then \\\n\t#\techo \"$PHP_MD5 *php.tar.xz\" | md5sum -c -; \\\n\t#fi; \\\n\t#\\\n\t#if [ -n \"$PHP_ASC_URL\" ]; then \\\n\t#\twget -O php.tar.xz.asc \"$PHP_ASC_URL\"; \\\n\t#\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\t#\tfor key in $GPG_KEYS; do \\\n\t#\t\tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n\t#\tdone; \\\n\t#\tgpg --batch --verify php.tar.xz.asc php.tar.xz; \\\n\t#\trm -r \"$GNUPGHOME\"; \\\n\t#fi; \\\n\n\tapt-get purge -y --auto-remove $fetchDeps\n\nCOPY docker-php-source /usr/local/bin/\n\nRUN set -xe \\\n\t&& buildDeps=\" \\\n\t\t$PHP_EXTRA_BUILD_DEPS \\\n\t\tlibcurl4-openssl-dev \\\n\t\tlibedit-dev \\\n\t\tlibsqlite3-dev \\\n\t\tlibssl-dev \\\n\t\tlibxml2-dev \\\n\t\" \\\n\t&& apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \\\n\t\\\n\t&& export CFLAGS=\"$PHP_CFLAGS\" \\\n\t\tCPPFLAGS=\"$PHP_CPPFLAGS\" \\\n\t\tLDFLAGS=\"$PHP_LDFLAGS\" \\\n\t&& docker-php-source extract \\\n\t&& cd /usr/src/php \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t--with-config-file-path=\"$PHP_INI_DIR\" \\\n\t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \\\n\n\t\t--disable-cgi \\\n\n# --enable-ftp is included here because ftp_ssl_connect() needs ftp to be compiled statically (see https://github.com/docker-library/php/issues/236)\n\t\t--enable-ftp \\\n# --enable-mbstring is included here because otherwise there's no way to get pecl to use it properly (see https://github.com/docker-library/php/issues/195)\n\t\t--enable-mbstring \\\n# --enable-mysqlnd is included here because it's harder to compile after the fact than extensions are (since it's a plugin for several extensions, not an extension in itself)\n\t\t--enable-mysqlnd \\\n\n\t\t--with-curl \\\n\t\t--with-libedit \\\n\t\t--with-openssl \\\n\t\t--with-zlib \\\n\t\t\\\n\t\t$PHP_EXTRA_CONFIGURE_ARGS \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make install \\\n\t&& { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \\\n\t&& make clean \\\n\t&& docker-php-source delete \\\n\n\t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps\n\nCOPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/\n\nUSER root\n\nRUN apt-get update && apt-get install --no-install-recommends -y git php-mongodb && rm -rf /var/lib/apt/lists/*;\n\nRUN php -r \"copy('https://install.phpcomposer.com/installer', 'composer-setup.php');\"; \\\n    php composer-setup.php; \\\n    php -r \"unlink('composer-setup.php');\"; \\\n    mv composer.phar /usr/local/bin/composer; \\\n    apt-get install -y --no-install-recommends unzip; rm -rf /var/lib/apt/lists/*;\n\nENTRYPOINT [\"docker-php-entrypoint\"]\n##<autogenerated>##\nCMD [\"php\", \"-a\"]\n##</autogenerated>##"
}