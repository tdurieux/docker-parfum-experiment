{
  "startTime": 1674234479334,
  "endTime": 1674234479734,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 5,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 5,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 5,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 5,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 49,
        "columnStart": 5,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 5,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 5,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nENV DBUS_SESSION_BUS_ADDRESS=/dev/null\n\nWORKDIR /tmp\nADD https://dl-ssl.google.com/linux/linux_signing_key.pub /tmp\nADD https://deb.nodesource.com/setup_8.x /tmp\nRUN apt-get -y update \\\n  && apt-get -y install --no-install-recommends software-properties-common \\\n  && apt-add-repository multiverse \\\n  && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n  && echo \"deb http://download.mono-project.com/repo/ubuntu xenial main\" | tee /etc/apt/sources.list.d/mono-official.list \\\n  && add-apt-repository ppa:yandex-load/main \\\n  && apt-add-repository ppa:nilarimogard/webupd8 \\\n  && cat /tmp/linux_signing_key.pub | apt-key add - \\\n  && echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list \\\n  && bash /tmp/setup_8.x \\\n  && apt-get -y update \\\n  && apt-get -y install --no-install-recommends \\\n    language-pack-en \\\n    mc \\\n    tzdata \\\n    kmod \\\n    unzip \\\n    build-essential \\\n    libxslt1-dev \\\n    zlib1g-dev \\\n    libffi-dev \\\n    libxi6 \\\n    libgconf-2-4 \\\n    libexif12 \\\n    udev \\\n    default-jdk \\\n    xvfb \\\n    libyaml-dev \\\n    siege \\\n    tsung \\\n    apache2-utils \\\n    phantom \\\n    phantom-ssl \\\n    firefox \\\n    google-chrome-stable \\\n    pepperflashplugin-nonfree \\\n    flashplugin-installer \\\n    phantomjs \\\n    ruby ruby-dev \\\n    nodejs \\\n    mono-complete nuget \\\n    net-tools \\\n    gcc-mingw-w64-x86-64 \\\n  && apt-get -y install --no-install-recommends python-dev python-pip \\\n  && python2 -m pip install --upgrade pip setuptools wheel twine \\\n  && apt-get -y install --no-install-recommends python3-dev python3-pip \\\n  && python3 -m pip install --upgrade setuptools pip wheel \\\n  && ln -sf /usr/bin/pip2 /usr/local/bin/pip \\\n  && pip install --no-cache-dir locustio robotframework robotframework-seleniumlibrary \\\n  && pip3 install --no-cache-dir \"molotov!=1.5\" \\\n  && gem install rspec rake \\\n  && gem install selenium-webdriver \\\n  && wget https://s3.amazonaws.com/deployment.blazemeter.com/jobs/taurus-pbench/10/blazemeter-pbench-extras_0.1.10.1_amd64.deb \\\n  && dpkg -i /tmp/blazemeter-pbench-extras_0.1.10.1_amd64.deb \\\n  && nuget update -self \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nCOPY bzt/resources/chrome_launcher.sh /tmp\nRUN mv /opt/google/chrome/google-chrome /opt/google/chrome/_google-chrome \\\n  && mv /tmp/chrome_launcher.sh /opt/google/chrome/google-chrome \\\n  && chmod +x /opt/google/chrome/google-chrome\n\nCOPY . /tmp/bzt-src\nWORKDIR /tmp/bzt-src\nRUN google-chrome-stable --version && firefox --version && mono --version && nuget | head -1 \\\n  && ./build-sdist.sh \\\n  && pip2 install --no-cache-dir dist/bzt-*.tar.gz \\\n  && echo '{\"install-id\": \"Docker\"}' > /etc/bzt.d/99-zinstallID.json \\\n  && echo '{\"settings\": {\"artifacts-dir\": \"/tmp/artifacts\"}}' > /etc/bzt.d/90-artifacts-dir.json \\\n  && bzt -install-tools -v && ls -la /tmp && cat /tmp/jpgc-*.log && ls -la ~/.bzt/jmeter-taurus/*/lib/ext && ls -la ~/.bzt/jmeter-taurus/*/lib/ext/jmeter-plugins-tst-*.jar\n\nRUN mkdir /bzt-configs \\\n  && rm -rf /tmp/* \\\n  && mkdir /tmp/artifacts\n\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nWORKDIR /bzt-configs\nENTRYPOINT [\"sh\", \"-c\", \"bzt -l /tmp/artifacts/bzt.log \\\"$@\\\"\", \"ignored\"]\n"
}