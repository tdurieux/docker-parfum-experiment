{
  "startTime": 1674235710362,
  "endTime": 1674235710444,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 220
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# See https://hub.docker.com/_/postgres/\nFROM postgres:9.4\nMAINTAINER Geoffrey Booth <geoffrey.booth@disney.com>\n\nRUN apt-get update \\\n\t&& apt-get install --no-install-recommends --yes curl \\\n\t&& apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Configure Postgres per https://knowledge.opentext.com/knowledge/llisapi.dll/Open/62041796 and https://knowledge.opentext.com/knowledge/piroot/medmgt/v160000/medmgt-igd/en/html/pstgrs-db-prep.htm\nCOPY postgresql.conf /var/lib/postgresql/\nCOPY pg_hba.conf /var/lib/postgresql/\n\n# The following only run on container initialization, not every restart\nCOPY initialize-for-opentext-media-management.sh /docker-entrypoint-initdb.d/\nCOPY set-passwords.sh /docker-entrypoint-initdb.d/\n\n# This will be triggered by our entrypoint.sh, so that a backup is taken on every startup in addition to when cron triggers it\n# Be warned, files in /etc/cron.daily should be extensionless: http://askubuntu.com/a/250118/240539\nCOPY backup.sh /etc/cron.daily/backup-postgres\nCOPY logrotate.conf /etc/logrotate.d/postgres-backups\n\nCOPY create-test-data-archive.sh /docker/\nCOPY entrypoint.sh /\n\n# Copy in post-installation database dumps to be restored if we’re not installing the apps on start\n# They’re not large, so copy both the test database (a few users, a few dozen assets) and the blank immediately-post-install database (just the tsuper user, no assets)\nARG DOCKER_MODE\nARG OBJECTS_ROOT_URL\nENV INSTALLATION_FILES_SNAPSHOT 2017-04-30-17-59\nRUN if [ \"$DOCKER_MODE\" = 'use-installed-files' ]; then \\\n\t\techo 'Copying post-install, nearly empty database into the image...' \\\n\t\t&& curl -f --retry 999 --retry-max-time 0 -C - --show-error --location $OBJECTS_ROOT_URL/opentext-media-management-16.2-post-install/database-post-opentext-media-management-installation-$INSTALLATION_FILES_SNAPSHOT.sql.gz | gunzip > database-post-opentext-media-management-installation.sql; \\\n\tfi\n\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}