{
  "startTime": 1674248823461,
  "endTime": 1674248823902,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 177,
        "lineEnd": 180,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "gpgVerifyAscRmAsc",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 171,
        "lineEnd": 171,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 162,
        "lineEnd": 162,
        "columnStart": 5,
        "columnEnd": 106
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 5,
        "columnEnd": 109
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 5,
        "columnEnd": 115
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 5,
        "columnEnd": 115
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ALPINE_VERSION=edge\n\n########################\n# Build pagespeed psol #\n########################\nFROM alpine:$ALPINE_VERSION as pagespeed\n\n# Check https://github.com/apache/incubator-pagespeed-mod/tags\nARG MOD_PAGESPEED_TAG=v1.13.35.2\n\nRUN apk add --no-cache \\\n        apache2-dev \\\n        apr-dev \\\n        apr-util-dev \\\n        build-base \\\n        curl \\\n        gettext-dev \\\n        git \\\n        gperf \\\n        icu-dev \\\n        libjpeg-turbo-dev \\\n        libpng-dev \\\n        libressl-dev \\\n        pcre-dev \\\n        py-setuptools \\\n        zlib-dev \\\n    ;\n\nWORKDIR /usr/src\nRUN git clone -b ${MOD_PAGESPEED_TAG} \\\n              --recurse-submodules \\\n              --depth=1 \\\n              -c advice.detachedHead=false \\\n              -j`nproc` \\\n              https://github.com/apache/incubator-pagespeed-mod.git \\\n              modpagespeed \\\n    ;\n\nWORKDIR /usr/src/modpagespeed\n\nCOPY patches/modpagespeed/*.patch ./\n\nRUN for i in *.patch; do printf \"\\r\\nApplying patch ${i%%.*}\\r\\n\"; patch -p1 < $i || exit 1; done\n\nWORKDIR /usr/src/modpagespeed/tools/gyp\nRUN ./setup.py install\n\nWORKDIR /usr/src/modpagespeed\n\nRUN build/gyp_chromium --depth=. \\\n                       -D use_system_libs=1 \\\n    && \\\n    cd /usr/src/modpagespeed/pagespeed/automatic && \\\n    make psol BUILDTYPE=Release \\\n              CFLAGS+=\"-I/usr/include/apr-1\" \\\n              CXXFLAGS+=\"-I/usr/include/apr-1 -DUCHAR_TYPE=uint16_t\" \\\n              -j`nproc` \\\n    ;\n\nRUN mkdir -p /usr/src/ngxpagespeed/psol/lib/Release/linux/x64 && \\\n    mkdir -p /usr/src/ngxpagespeed/psol/include/out/Release && \\\n    cp -R out/Release/obj /usr/src/ngxpagespeed/psol/include/out/Release/ && \\\n    cp -R pagespeed/automatic/pagespeed_automatic.a /usr/src/ngxpagespeed/psol/lib/Release/linux/x64/ && \\\n    cp -R net \\\n          pagespeed \\\n          testing \\\n          third_party \\\n          url \\\n          /usr/src/ngxpagespeed/psol/include/ \\\n    ; rm -rf /usr/src/ngxpagespeed/psol/lib/Release/linux/x64\n\n\n##########################################\n# Build Nginx with support for PageSpeed #\n##########################################\nFROM alpine:$ALPINE_VERSION AS nginx\n\n# Check https://github.com/apache/incubator-pagespeed-ngx/tags\nARG NGX_PAGESPEED_TAG=v1.13.35.2-stable\n\n# Check http://nginx.org/en/download.html for the latest version.\nARG NGINX_VERSION=1.14.0\nARG NGINX_PGPKEY=520A9993A1C052F8\nARG NGINX_BUILD_CONFIG=\"\\\n        --prefix=/etc/nginx \\\n        --sbin-path=/usr/sbin/nginx \\\n        --modules-path=/usr/lib/nginx/modules \\\n        --conf-path=/etc/nginx/nginx.conf \\\n        --error-log-path=/var/log/nginx/error.log \\\n        --http-log-path=/var/log/nginx/access.log \\\n        --pid-path=/var/run/nginx.pid \\\n        --lock-path=/var/run/nginx.lock \\\n        --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n        --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n        --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n        --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n        --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n        --user=nginx \\\n        --group=nginx \\\n        --with-http_ssl_module \\\n        --with-http_realip_module \\\n        --with-http_addition_module \\\n        --with-http_sub_module \\\n        --with-http_dav_module \\\n        --with-http_flv_module \\\n        --with-http_mp4_module \\\n        --with-http_gunzip_module \\\n        --with-http_gzip_static_module \\\n        --with-http_random_index_module \\\n        --with-http_secure_link_module \\\n        --with-http_stub_status_module \\\n        --with-http_auth_request_module \\\n        --with-http_xslt_module=dynamic \\\n        --with-http_image_filter_module=dynamic \\\n        --with-http_geoip_module=dynamic \\\n        --with-threads \\\n        --with-stream \\\n        --with-stream_ssl_module \\\n        --with-stream_ssl_preread_module \\\n        --with-stream_realip_module \\\n        --with-stream_geoip_module=dynamic \\\n        --with-http_slice_module \\\n        --with-mail \\\n        --with-mail_ssl_module \\\n        --with-compat \\\n        --with-file-aio \\\n        --with-http_v2_module \\\n    \"\n\nRUN apk add --no-cache \\\n        apr-dev \\\n        apr-util-dev \\\n        build-base \\\n        ca-certificates \\\n        gd-dev \\\n        geoip-dev \\\n        git \\\n        gnupg \\\n        icu-dev \\\n        libjpeg-turbo-dev \\\n        libpng-dev \\\n        libxslt-dev \\\n        linux-headers \\\n        libressl-dev \\\n        pcre-dev \\\n        tar \\\n        zlib-dev \\\n    ;\n\nWORKDIR /usr/src\nRUN git clone -b ${NGX_PAGESPEED_TAG} \\\n              --recurse-submodules \\\n              --shallow-submodules \\\n              --depth=1 \\\n              -c advice.detachedHead=false \\\n              -j`nproc` \\\n              https://github.com/apache/incubator-pagespeed-ngx.git \\\n              ngxpagespeed \\\n    ;\n\nRUN wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \\\n         https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz.asc && \\\n    ( gpg --batch --keyserver ha.pool.sks-keyservers.net --keyserver-options timeout=10 --recv-keys ${NGINX_PGPKEY} || \\\n     gpg --batch --keyserver hkp://keyserver.ubuntu.com:80 --keyserver-options timeout=10 --recv-keys ${NGINX_PGPKEY} || \\\n     gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --keyserver-options timeout=10 --recv-keys $NGINX_PGPKEY}) && \\\n    gpg --batch --trusted-key ${NGINX_PGPKEY} --verify nginx-${NGINX_VERSION}.tar.gz.asc && rm nginx-${NGINX_VERSION}.tar.gz.asc\n\nCOPY --from=pagespeed /usr/src/ngxpagespeed /usr/src/ngxpagespeed/\n\nWORKDIR /usr/src/nginx\n\nRUN tar zxf ../nginx-${NGINX_VERSION}.tar.gz --strip-components=1 -C . && rm ../nginx-${NGINX_VERSION}.tar.gz\n\nCOPY patches/nginx/*.patch ./\n\nRUN for i in *.patch; do printf \"\\r\\nApplying patch ${i%%.*}\\r\\n\"; patch -p1 < $i || exit 1; done\n\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        ${NGINX_BUILD_CONFIG} \\\n        --add-module=/usr/src/ngxpagespeed \\\n        --with-ld-opt=\"-Wl,-z,relro,--start-group -lapr-1 -laprutil-1 -licudata -licuuc -lpng -lturbojpeg -ljpeg\" \\\n    && \\\n    make install -j`nproc`\n\nRUN rm -rf /etc/nginx/html/ && \\\n    mkdir /etc/nginx/conf.d/ && \\\n    mkdir -p /usr/share/nginx/html/ && \\\n    sed -i 's|^</body>|<p><a href=\"https://www.ngxpagespeed.com/\"><img src=\"pagespeed.png\" title=\"Nginx module for rewriting web pages to reduce latency and bandwidth\" /></a></p>\\n</body>|' html/index.html && \\\n    install -m644 html/index.html /usr/share/nginx/html/ && \\\n    install -m644 html/50x.html /usr/share/nginx/html/ && \\\n    ln -s ../../usr/lib/nginx/modules /etc/nginx/modules && \\\n    strip /usr/sbin/nginx* \\\n          /usr/lib/nginx/modules/*.so \\\n    ;\n\nCOPY conf/nginx.conf /etc/nginx/nginx.conf\nCOPY conf/nginx.vh.default.conf /etc/nginx/conf.d/default.conf\nCOPY pagespeed.png /usr/share/nginx/html/\n\n\n##########################################\n# Combine everything with minimal layers #\n##########################################\nFROM alpine:$ALPINE_VERSION\nLABEL maintainer=\"Nico Berlee <nico.berlee@on2it.net>\" \\\n      version.mod-pagespeed=\"1.13.35.2\" \\\n      version.nginx=\"1.14.0\" \\\n      version.ngx-pagespeed=\"1.13.35.2\"\n\nCOPY --from=pagespeed /usr/bin/envsubst /usr/local/bin\nCOPY --from=nginx /usr/sbin/nginx /usr/sbin/nginx\nCOPY --from=nginx /usr/lib/nginx/modules/ /usr/lib/nginx/modules/\nCOPY --from=nginx /etc/nginx /etc/nginx\nCOPY --from=nginx /usr/share/nginx/html/ /usr/share/nginx/html/\n\nRUN apk --no-cache upgrade && \\\n    scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /usr/local/bin/envsubst \\\n            | tr ',' '\\n' \\\n            | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n            | xargs apk add --no-cache \\\n    && \\\n    apk add --no-cache tzdata\n\nRUN addgroup -S nginx && \\\n    adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx && \\\n    install -g nginx -o nginx -d /var/cache/ngx_pagespeed && \\\n    mkdir -p /var/log/nginx && \\\n    ln -sf /dev/stdout /var/log/nginx/access.log && \\\n    ln -sf /dev/stderr /var/log/nginx/error.log\n\nEXPOSE 80\n\nSTOPSIGNAL SIGTERM\n\nCMD [\"/usr/sbin/nginx\", \"-g\", \"daemon off;\"]\n"
}