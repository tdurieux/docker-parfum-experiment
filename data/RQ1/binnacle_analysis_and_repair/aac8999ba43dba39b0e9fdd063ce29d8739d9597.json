{
  "startTime": 1674241254376,
  "endTime": 1674241254494,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG RUNC_VERSION=9f9c96235cc97674e935002fc3d78361b696a69e\n\nFROM golang:1.10-alpine AS build-env\n\nRUN apk add --no-cache \\\n    zeromq-dev \\\n    zeromq \\\n    gcc \\\n    musl-dev\n\nADD . /go/src/github.com/caicloud/ciao\nWORKDIR /go/src/github.com/caicloud/ciao\nRUN go build github.com/caicloud/ciao/cmd/kubeflow-kernel \\\n    && mv kubeflow-kernel /usr/bin/kubeflow-kernel\n\n# The images are copied from https://github.com/genuinetools/img/blob/master/Dockerfile.\nFROM golang:1.10-alpine AS gobuild-base\n\nRUN apk add --no-cache \\\n    bash \\\n    build-base \\\n    gcc \\\n    git \\\n    libseccomp-dev \\\n    linux-headers \\\n    make\n\nFROM gobuild-base AS runc\nARG RUNC_VERSION\nRUN git clone https://github.com/opencontainers/runc.git \"$GOPATH/src/github.com/opencontainers/runc\" \\\n    && cd \"$GOPATH/src/github.com/opencontainers/runc\" \\\n    && make static BUILDTAGS=\"seccomp\" EXTRA_FLAGS=\"-buildmode pie\" EXTRA_LDFLAGS=\"-extldflags \\\\\\\"-fno-PIC -static\\\\\\\"\" \\\n    && mv runc /usr/bin/runc\n\nFROM gobuild-base AS img\nRUN git clone https://github.com/genuinetools/img.git \"$GOPATH/src/github.com/genuinetools/img\" \\\n    && go get -u github.com/jteeuwen/go-bindata/... \\\n    && cd \"$GOPATH/src/github.com/genuinetools/img\" \\\n    && make static && mv img /usr/bin/img\n\nFROM alpine:3.7\nMAINTAINER Ce Gao <gaoce@caicloud.io>\n\nRUN apk add --no-cache \\\n    bash \\\n    git \\\n    shadow \\\n    shadow-uidmap \\\n    strace \\\n    zeromq \\\n    gcc \\\n    g++ \\\n    python \\\n    python-dev \\\n    py-pip \\\n    musl-dev\n\n# install the kernel gateway\nRUN pip install --no-cache-dir jupyter_kernel_gateway\n\nCOPY --from=img /usr/bin/img /usr/bin/img\nCOPY --from=runc /usr/bin/runc /usr/bin/runc\nCOPY --from=build-env /usr/bin/kubeflow-kernel /usr/bin/kubeflow-kernel\n\nCOPY ./hack/config.yaml /etc/ciao/config.yaml\nCOPY ./artifacts /usr/share/jupyter/kernels/kubeflow\n\n# run kernel gateway on container start, not notebook server\nEXPOSE 8889\nENTRYPOINT [ \"jupyter\", \"kernelgateway\" ]\nCMD [\"--KernelGatewayApp.ip=0.0.0.0\", \"--KernelGatewayApp.port=8889\", \"--JupyterWebsocketPersonality.list_kernels=True\", \"--log-level=DEBUG\"]\n"
}