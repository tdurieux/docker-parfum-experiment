{
  "startTime": 1674251170848,
  "endTime": 1674251171034,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 137
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 6,
        "columnEnd": 144
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 99
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 6,
        "columnEnd": 42
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:wheezy\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r tokumx && useradd -r -g tokumx tokumx\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        numactl \\\n    && apt-get clean \\\n    && apt-get autoremove -y \\\n    && rm -rf /var/lib/apt/lists/*\n\n# grab gosu for easy step-down from root\nENV GOSU_VERSION 1.4\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        curl \\\n    && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n    && curl -f -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n   && curl -f -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n   && gpg --batch --verify /usr/local/bin/gosu.asc \\\n   && rm /usr/local/bin/gosu.asc \\\n   && chmod +x /usr/local/bin/gosu \\\n    && apt-get clean \\\n    && apt-get autoremove -y \\\n        curl \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV TOKUMX_VERSION 2.0.1-1\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 505A7412 \\\n    && echo \"deb [arch=amd64] http://s3.amazonaws.com/tokumx-debs wheezy main\" > /etc/apt/sources.list.d/tokumx.list \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        tokumx=$TOKUMX_VERSION \\\n    && rm -rf /var/lib/tokumx \\\n   && mv /etc/tokumx.conf /etc/tokumx.conf.orig \\\n    && mkdir -p /data/db \\\n    && chown -R tokumx:tokumx /data/db \\\n    && apt-get clean \\\n    && apt-get autoremove -y \\\n    && rm -rf /var/lib/apt/lists/*\n\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n\nVOLUME /data/db\n\nEXPOSE 27017\nEXPOSE 28017\n\n# NOTE: While testing the docker container you can override toku's hard requirement\n# for transparent huge page sharing by setting the following environment variable.\n#\n# TOKU_HUGE_PAGES_OK=1\n#\n# Production systems see the following guide detailing how to disable this setting at boot.\n# http://docs.mongodb.org/manual/tutorial/transparent-huge-pages/#in-etc-rc-local-alternate\n\nCMD [\"mongod\"]\n"
}