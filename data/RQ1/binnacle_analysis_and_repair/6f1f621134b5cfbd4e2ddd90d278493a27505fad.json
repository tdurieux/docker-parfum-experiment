{
  "startTime": 1674245298792,
  "endTime": 1674245298905,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.5\n\nMAINTAINER Koen Rutten <lijst@twilights.be>\n\n# Install uWSGI\nRUN pip install --no-cache-dir uwsgi\n\nENV NGINX_VERSION 1.9.11-1~jessie\n\nRUN apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 \\\n\t&& echo \"deb http://nginx.org/packages/mainline/debian/ jessie nginx\" >> /etc/apt/sources.list \\\n\t&& apt-get update \\\n\t&& apt-get install --no-install-recommends -y ca-certificates nginx=${NGINX_VERSION} gettext-base \\\n\t&& rm -rf /var/lib/apt/lists/*\n# forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n\t&& ln -sf /dev/stderr /var/log/nginx/error.log\nEXPOSE 80 443\n# Finished setting up Nginx\n\n# Make NGINX run on the foreground\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\n# Remove default configuration from Nginx\nRUN rm /etc/nginx/conf.d/default.conf\n# Copy the modified Nginx conf\nCOPY nginx.conf /etc/nginx/conf.d/\n\n#python requirements\nCOPY requirements.txt /requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt \\\n\t&& rm -rf /requirements.txt\n\n# Install Supervisord\nRUN apt-get update && apt-get install --no-install-recommends -y supervisor \\\n&& rm -rf /var/lib/apt/lists/*\n# Custom Supervisord config\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n#COPY /webapp /webapp\nRUN mkdir /webapp\nVOLUME /webapp\nWORKDIR /webapp\n\nCMD [\"/usr/bin/supervisord\"]\n"
}