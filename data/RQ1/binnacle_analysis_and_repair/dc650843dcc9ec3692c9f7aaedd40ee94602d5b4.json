{
  "startTime": 1674235422078,
  "endTime": 1674235422627,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nMAINTAINER Venkata Phani Kumar Mangipudi <phani1kumar@gmail.com>\n\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections\nRUN apt-get purge -y openjdk*\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common python-software-properties \\\n\t&& add-apt-repository ppa:webupd8team/java && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\tcurl \\\n\tgit \\\n\tmaven \\\n\toracle-java8-installer \\\n\topenssh-server \\\n\twget && rm -rf /var/lib/apt/lists/*;\n\nRUN sed -i 's/required[ ]*pam_loginuid/optional\\tpam_loginuid/g' /etc/pam.d/sshd \\\n\t&& mkdir -p /var/run/sshd \\\n\t&& echo \"UserKnownHostsFile /dev/null\\nStrictHostKeyChecking no\\nLogLevel quiet\" >> /etc/ssh/ssh_config \\\n\t&& ssh-keygen -t dsa -P '' -f /root/.ssh/id_dsa \\\n\t&& cat /root/.ssh/id_dsa.pub >> /root/.ssh/authorized_keys \\\n\t&& chmod 600 /root/.ssh/id_dsa /root/.ssh/authorized_keys \\\n\t&& chmod 644 /root/.ssh/id_dsa.pub\nENV CUSTOMIZE_TINKERPOP=\"NO\"\nRUN if [ $CUSTOMIZE_TINKERPOP -eq \"YES\" ]; \\\nthen \\\n\tgit clone https://github.com/apache/incubator-tinkerpop.git; \\\n\tcd incubator-tinkerpop/; \\\nfi\nRUN if [ $CUSTOMIZE_TINKERPOP -eq \"YES\" ]; \\\nthen \\\n\tcd incubator-tinkerpop; \\\n\tgit checkout tags/3.0.0-incubating; \\\n\tTINKERPOP_VERSION=$( cat pom.xml | grep \"^    <version>.*</version>$\" | awk -F'[><]' '{print $3}'); \\\n\techo \"TINKERPOP_VERSION IS: $TINKERPOP_VERSION\"; \\\nfi\n#If you want to perform any quick corrections to the checked out tinkerpop repository, you could do here and mark your own version name\n#RUN if [ $CUSTOMIZE_TINKERPOP -eq \"YES\" ]; \\\n#then \\\n#\tcd incubator-tinkerpop; \\\n#\tsed -i \"s/onStartup:/onStartup: \\{\\/\\//g\" gremlin-server/scripts/generate-modern-readonly.groovy; \\\n#\tsed -i \"s/ctx.logger.info/\\/\\/ctx.logger.info/g\" gremlin-server/scripts/generate-modern-readonly.groovy; \\\n#\tsed -i \"s/TinkerFactory.generateClassic/\\/\\/TinkerFactory.generateClassic/g\" gremlin-server/scripts/generate-modern-readonly.groovy; \\\n#\tsed -i \"s/onStartup:/onStartup: \\{\\/\\//g\" gremlin-server/scripts/generate-modern.groovy; \\\n#\tsed -i \"s/ctx.logger.info/\\/\\/ctx.logger.info/g\" gremlin-server/scripts/generate-modern.groovy; \\\n#\tsed -i \"s/TinkerFactory.generateClassic/\\/\\/TinkerFactory.generateClassic/g\" gremlin-server/scripts/generate-modern.groovy; \\\n#\tpwd; \\\n#fi\n\n#Ideally you wouldn't need to specify any changes to the TINKERPOP version, if you have done any changes like in above commented\n# code, you may wish to change the version, to be sure that your changes are picked up by titan build that follows\nENV TINKERPOP_VERSION=\"3.0.0-MY-SNAPSHOT\"\nRUN if [ $CUSTOMIZE_TINKERPOP -eq \"YES\" ]; \\\nthen \\\n\tcd incubator-tinkerpop; \\\n\tsed -i \"s/^    <version>.*<\\/version>/    <version>$TINKERPOP_VERSION<\\/version>/g\" pom.xml; \\\n\tsed -i \"s/^        <version>.*<\\/version>/        <version>$TINKERPOP_VERSION<\\/version>/g\" $(find . -maxdepth 2 -mindepth 2 -type f -name 'pom.xml'); \\\n\tcat $(find . -maxdepth 2 -mindepth 2 -type f -name 'pom.xml') | grep \"^        <version>.*<\\/version>\"; \\\n\tT_VERSION=$( cat pom.xml | grep \"^    <version>.*</version>$\" | awk -F'[><]' '{print $3}'); \\\n\techo \"TINKERPOP_VERSION IS: $T_VERSION\"; \\\nfi\nRUN if [ $CUSTOMIZE_TINKERPOP -eq \"YES\" ]; \\\nthen \\\n\tcd incubator-tinkerpop; \\\n\tmvn clean install -DskipTests -Denforcer.skip=true; \\\nfi\n\nENV TITAN_VERSION=\"1.0.1-SNAPSHOT\"\nENV TITAN_BRANCH=\"titan10\"\n\nRUN if [ ! -z $TITAN_BRANCH ]; \\\nthen \\\n\techo \"cloning the branch TITAN_BRANCH=$TITAN_BRANCH\"; \\\n\tgit clone https://github.com/thinkaurelius/titan.git --branch $TITAN_BRANCH --single-branch && cd titan/; \\\nelse \\\n\techo \"cloning the master TITAN_BRANCH=$TITAN_BRANCH\"; \\\n\tgit clone https://github.com/thinkaurelius/titan.git; \\\n\tcd titan/; \\\n\tgit checkout tags/$TITAN_VERSION; \\\nfi\nRUN if [ $CUSTOMIZE_TINKERPOP -eq \"YES\" ]; \\ \nthen \\\n\tcd titan; \\\n\tsed -i \"s/tinkerpop.version.*/tinkerpop.version>$TINKERPOP_VERSION<\\/tinkerpop.version>/g\" pom.xml; \\\n\tcat pom.xml | grep tinkerpop.version; \\\nfi\nRUN cd titan && mvn clean install -DskipTests=true -Paurelius-release -Dgpg.skip=true\nRUN cd titan && rm -f conf/core-site.xml conf/mapred-site.xml \\\n\t&& cd ../ \\\n\t&& mv titan /usr/local/titan-$TITAN_VERSION \\\n\t&& ln -sf /usr/local/titan-$TITAN_VERSION /usr/local/titan\nENV TITAN_DEPLOYMENT=\"titan-$TITAN_VERSION-hadoop1\"\nWORKDIR /opt/$TITAN_DEPLOYMENT\nRUN find / -name $TITAN_DEPLOYMENT.zip\nRUN unzip /usr/local/titan-$TITAN_VERSION/titan-dist/titan-dist-hadoop-1/target/$TITAN_DEPLOYMENT.zip -d /opt/ \\\n    && rm /usr/local/titan-$TITAN_VERSION/titan-dist/titan-dist-hadoop-1/target/$TITAN_DEPLOYMENT.zip\n\nADD run.sh /opt/$TITAN_DEPLOYMENT/\n\nEXPOSE 8182\nEXPOSE 8184\n\nCMD /bin/sh  -e \"/opt/$TITAN_DEPLOYMENT/run.sh\"\n"
}