{
  "startTime": 1674248702817,
  "endTime": 1674248702946,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 66,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Visual Studio Code in a container\n#\tNOTE: Needs the redering device (yeah... idk)\n#\n# docker run -d \\\n#    -v /tmp/.X11-unix:/tmp/.X11-unix \\\n#    -v $HOME:/home/user \\\n#    -e DISPLAY=unix$DISPLAY \\\n#    --device /dev/dri \\\n#    --name vscode \\\n#    jess/vscode\n\nFROM debian:buster\nLABEL maintainer \"Jessie Frazelle <jess@linux.com>\"\n\n# Tell debconf to run in non-interactive mode\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && apt-get install -y \\\n\tapt-transport-https \\\n\tca-certificates \\\n\tcurl \\\n\tgnupg \\\n\t--no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\n# Add the vscode debian repo\nRUN curl -f -sSL https://packages.microsoft.com/keys/microsoft.asc | gpg --batch --dearmor | apt-key add -\nRUN echo \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\" > /etc/apt/sources.list.d/vscode.list\n\nRUN apt-get update && apt-get -y install \\\n\tcode \\\n\tgit \\\n\tlibasound2 \\\n\tlibatk1.0-0 \\\n\tlibcairo2 \\\n\tlibcups2 \\\n\tlibexpat1 \\\n\tlibfontconfig1 \\\n\tlibfreetype6 \\\n\tlibgtk2.0-0 \\\n\tlibpango-1.0-0 \\\n\tlibx11-xcb1 \\\n\tlibxcomposite1 \\\n\tlibxcursor1 \\\n\tlibxdamage1 \\\n\tlibxext6 \\\n\tlibxfixes3 \\\n\tlibxi6 \\\n\tlibxrandr2 \\\n\tlibxrender1 \\\n\tlibxss1 \\\n\tlibxtst6 \\\n\topenssh-client \\\n\t--no-install-recommends \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nENV HOME /home/user\nRUN useradd --create-home --home-dir $HOME user \\\n\t&& chown -R user:user $HOME\n\nCOPY start.sh /usr/local/bin/start.sh\n\nWORKDIR $HOME\n\nCMD [ \"start.sh\" ]\n"
}