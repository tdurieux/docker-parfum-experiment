{
  "startTime": 1674243286454,
  "endTime": 1674243286933,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 75,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 18,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial\nMAINTAINER Martin Jansche <mjansche@google.com>\n\n#ADD goog_af_unison_wav_22k.tar /usr/local/src/\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n      automake \\\n      bc \\\n      curl \\\n      g++ \\\n      git \\\n      libc-dev \\\n      libreadline-dev \\\n      libtool \\\n      make \\\n      ncurses-dev \\\n      nvi \\\n      pkg-config \\\n      python \\\n      python-dev \\\n      python-setuptools \\\n      unzip \\\n      wavpack \\\n      wget \\\n      zip \\\n      zlib1g-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV LC_ALL C.UTF-8\nENV OPENFST openfst-1.5.2\nENV THRAX thrax-1.2.2\n\n# Fetch, build, and install the Protocol Buffers package\nWORKDIR /usr/local/src\nRUN git clone https://github.com/google/protobuf.git\nWORKDIR /usr/local/src/protobuf\nRUN git reset --hard ca9bbd71d547a05604e8c2bddda66cdba5abe0c4 && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n      --disable-static \\\n    && make && make install && make distclean && ldconfig\n\n# Fetch, build, and install the re2 regular expression package\nWORKDIR /usr/local/src\nRUN git clone https://github.com/google/re2.git\nWORKDIR /usr/local/src/re2\nRUN git reset --hard 4744450c4880b9445c57d9224495f0e8e29f1c4c && \\\n    make && make install && make distclean && ldconfig\n\n# Fetch, build, and install the OpenFst Library\nWORKDIR /usr/local/src\nRUN curl -f -L https://openfst.org/twiki/pub/FST/FstDownload/$OPENFST.tar.gz | \\\n    tar xz --no-same-owner --no-same-permissions\nWORKDIR /usr/local/src/$OPENFST\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n      --enable-bin \\\n      --enable-far \\\n      --enable-mpdt \\\n      --enable-ngram-fsts \\\n      --enable-pdt \\\n      --enable-python \\\n    && make && make install && make distclean && ldconfig\nENV LD_LIBRARY_PATH /usr/local/lib/fst:$LD_LIBRARY_PATH\n\n# Fetch, build, and install Pynini\nWORKDIR /usr/local/src\nRUN curl -f -L https://openfst.org/twiki/pub/GRM/PyniniDownload/pynini-0.9.tar.gz | \\\n    tar xz --no-same-owner --no-same-permissions\nWORKDIR /usr/local/src/pynini-0.9\nRUN python setup.py install && python setup.py test\n\nCOPY usr_local /usr/local/\n\n# Build and install the Thrax Grammar Development Tools\nWORKDIR /usr/local/src/$THRAX\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n      --enable-bin \\\n      --enable-readline \\\n    && make && make install && make distclean && ldconfig\n\n# Build and install Sparrowhawk\nWORKDIR /usr/local/src/sparrowhawk\nRUN autoreconf && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && make install && make distclean && ldconfig\n\n# Fetch and prepare Festival & friends\nWORKDIR /usr/local/src\nRUN curl -f -L https://festvox.org/packed/festival/2.4/festlex_CMU.tar.gz | \\\n    tar xz --no-same-owner --no-same-permissions && \\\n    curl -f -L https://festvox.org/packed/festival/2.4/festlex_POSLEX.tar.gz | \\\n    tar xz --no-same-owner --no-same-permissions && \\\n    curl -f -L https://festvox.org/packed/festival/2.4/voices/festvox_kallpc16k.tar.gz | \\\n    tar xz --no-same-owner --no-same-permissions && \\\n    curl -f -L https://festvox.org/festvox-2.7/festvox-2.7.0-release.tar.gz | \\\n    tar xz --no-same-owner --no-same-permissions && \\\n    curl -f -L https://tts.speech.cs.cmu.edu/awb/sptk/SPTK-3.6.tar.gz | \\\n    tar xz --no-same-owner --no-same-permissions && \\\n    patch -p0 < festvox/src/clustergen/SPTK-3.6.patch\nENV ESTDIR /usr/local/src/speech_tools\nENV FESTVOXDIR /usr/local/src/festvox\nENV SPTKDIR /usr/local\n\n# Build and install SPTK\nWORKDIR /usr/local/src/SPTK-3.6\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$SPTKDIR && make && make install && make distclean\n\n# Build the Edinburgh Speech Tools\nWORKDIR /usr/local/src/speech_tools\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make\n\n# Build Festival\nWORKDIR /usr/local/src/festival\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make\n\n# Build Festvox\nWORKDIR /usr/local/src/festvox\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make\n\nWORKDIR /usr/local/src\nRUN rm -fr protobuf re2 $OPENFST pynini-0.9 $THRAX sparrowhawk SPTK-3.6\n"
}