{
  "startTime": 1674244057390,
  "endTime": 1674244057675,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 33,
        "columnEnd": 134
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:edge\nMAINTAINER Paul Smith <pa.ulsmith.net>\n\n# Add repos\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories\n\n# Add basics first\nRUN apk update && apk upgrade && apk add --no-cache \\\n  bash apache2 php7-apache2 curl ca-certificates openssl git php7 php7-phar php7-json php7-iconv php7-openssl tzdata openntpd vim nano\n\n# Add Composer\nRUN curl -f -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer\n\n# Setup apache and php\nRUN apk add \\\n  php7-ftp \\\n  php7-xdebug \\\n  php7-mcrypt \\\n  php7-mbstring \\\n  php7-soap \\\n  php7-gmp \\\n  php7-pdo_odbc \\\n  php7-dom \\\n  php7-pdo \\\n  php7-zip \\\n  php7-mysqli \\\n  php7-sqlite3 \\\n  php7-pdo_pgsql \\\n  php7-bcmath \\\n  php7-gd \\\n  php7-odbc \\\n  php7-pdo_mysql \\\n  php7-pdo_sqlite \\\n  php7-gettext \\\n  php7-xmlreader \\\n  php7-xmlwriter \\\n  php7-simplexml \\\n  php7-tokenizer \\\n  php7-xmlrpc \\\n  php7-bz2 \\\n  php7-pdo_dblib \\\n  php7-curl \\\n  php7-ctype \\\n  php7-session \\\n  php7-redis \\\n  sqlite \\\n  rsync pwgen netcat-openbsd\\\n  && cp /usr/bin/php7 /usr/bin/php \\\n    && rm -f /var/cache/apk/*\n\nRUN apk --update add --no-cache openssh \\\n  && sed -i s/#PermitRootLogin.*/PermitRootLogin\\ yes/ /etc/ssh/sshd_config \\\n  && echo \"root:THISISNOTFORLOGIN102i3709123\" | chpasswd \\\n  && rm -rf /var/cache/apk/*\nRUN sed -ie 's/#Port 22/Port 22/g' /etc/ssh/sshd_config\nRUN sed -ri 's/#HostKey \\/etc\\/ssh\\/ssh_host_key/HostKey \\/etc\\/ssh\\/ssh_host_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_rsa_key/HostKey \\/etc\\/ssh\\/ssh_host_rsa_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_dsa_key/HostKey \\/etc\\/ssh\\/ssh_host_dsa_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_ecdsa_key/HostKey \\/etc\\/ssh\\/ssh_host_ecdsa_key/g' /etc/ssh/sshd_config\nRUN sed -ir 's/#HostKey \\/etc\\/ssh\\/ssh_host_ed25519_key/HostKey \\/etc\\/ssh\\/ssh_host_ed25519_key/g' /etc/ssh/sshd_config\nRUN printf \"\\\\nClientAliveInterval 15\\\\nClientAliveCountMax 8\" >> /etc/ssh/sshd_config\nRUN /usr/bin/ssh-keygen -A\nRUN ssh-keygen -t rsa -b 4096 -f /etc/ssh/ssh_host_key\n\n# Add apache to run and configure\nRUN mkdir /run/apache2 \\\n    && sed -i \"s/#LoadModule\\ rewrite_module/LoadModule\\ rewrite_module/\" /etc/apache2/httpd.conf \\\n    && sed -i \"s/#LoadModule\\ session_module/LoadModule\\ session_module/\" /etc/apache2/httpd.conf \\\n    && sed -i \"s/#LoadModule\\ session_cookie_module/LoadModule\\ session_cookie_module/\" /etc/apache2/httpd.conf \\\n    && sed -i \"s/#LoadModule\\ session_crypto_module/LoadModule\\ session_crypto_module/\" /etc/apache2/httpd.conf \\\n    && sed -i \"s/#LoadModule\\ deflate_module/LoadModule\\ deflate_module/\" /etc/apache2/httpd.conf \\\n    && sed -i \"s#^DocumentRoot \\\".*#DocumentRoot \\\"/var/www/html\\\"#g\" /etc/apache2/httpd.conf \\\n    && sed -i \"s#/var/www/localhost/htdocs#/var/www/html#\" /etc/apache2/httpd.conf \\\n    && printf \"\\n<Directory \\\"/var/www/html\\\">\\n\\tAllowOverride All\\n</Directory>\\n\" >> /etc/apache2/httpd.conf\n\n# add flag\nARG flag\nARG flag_name\nARG username\nARG password\nENV flag=${flag}\nENV flag_name=${flag_name}\nENV username=${username}\nENV password=${password}\n\n# create user\nRUN adduser -D -u 1000 $username\nRUN echo \"$username:$password\" | chpasswd\n\n# create webroot directory\nRUN mkdir -p /var/www/html\n\n# add challs\nADD challs /var/www/html\n\n# remove README.md\nRUN rm -f /var/www/html/README.md\n\n# change ownership and mode\nRUN chown -R root:$username /var/www/html/* && chmod -R 775 /var/www/html/* && mkdir bootstrap\nRUN chown -R apache:apache /var/www/html/sqlite\nRUN chown -R apache:apache /var/www/html/static\n\n# store and securing flag\nRUN adduser -D -g \"$flag\" -u 1337 flag\nRUN echo \"flag:thisisonlyforsecuritypurpose\" | chpasswd\n\n#bootstrap\nADD start.sh /bootstrap/\nRUN chmod +x /bootstrap/start.sh\n#CMD [\"/usr/sbin/sshd\", \"-D\"]\n\nEXPOSE 80 22\nENTRYPOINT [\"/bootstrap/start.sh\"]\n"
}