{
  "startTime": 1674236986470,
  "endTime": 1674236986544,
  "originalSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 21,
        "columnStart": 5,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.5.5\n\n# Install dependencies:\n#   - build-essential: To ensure certain gems can be compiled\n#   - nodejs: Compile assets\nRUN set -x; \\\n  apt update \\\n  && apt install -y --no-install-recommends \\\r\n  openssh-server \\\r\n  zlib1g-dev \\\r\n  build-essential \\\r\n  libssl-dev \\\r\n  libreadline-dev \\\r\n  libyaml-dev \\\r\n  libxml2-dev \\\r\n  libxslt1-dev \\\r\n  libcurl4-openssl-dev \\\r\n  libffi-dev \\\r\n  nodejs \\\r\n  git \\\r\n  imagemagick \\\r\n  libmagickwand-dev && rm -rf /var/lib/apt/lists/*;\n\n# Set an environment variable where the Rails app is installed to inside of Docker image\nENV DIR_ROOT /var/www\nENV RAILS_ROOT $DIR_ROOT/cenit\nRUN mkdir -p $RAILS_ROOT\n\nRUN mkdir -p $DIR_ROOT/shared/log\nRUN mkdir -p $DIR_ROOT/shared/pids\nRUN mkdir -p $DIR_ROOT/shared/sockets\n\n# Set working directory\nWORKDIR $RAILS_ROOT\n\n# Setting env up\nENV RAILS_ENV='production'\nENV RACK_ENV='production'\n\n# Adding gems\nCOPY Gemfile Gemfile\nCOPY Gemfile.lock Gemfile.lock\n\nRUN bundle install --jobs 20 --retry 5 --without development test\n\n# Adding project files\nCOPY . .\n\nENV SKIP_MONGO_CLIENT='true'\n\nRUN set -x; \\\r\n   bundle exec rake assets:precompile\n\nEXPOSE 8080\n\nCMD [\"bundle\", \"exec\", \"unicorn\", \"-c\", \"config/unicorn.rb\"]\n"
}