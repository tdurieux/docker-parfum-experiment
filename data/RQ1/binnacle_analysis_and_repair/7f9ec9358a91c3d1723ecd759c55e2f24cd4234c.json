{
  "startTime": 1674250853386,
  "endTime": 1674250853707,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 44,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 169
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 169
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 44,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 169
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 193
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nENV ROS_DISTRO kinetic\nENV HOME=/root\nENV CATKIN_WS=/root/catkin_ws\n\nSHELL [\"/bin/bash\", \"-c\"]\nRUN apt-get update && apt-get -y upgrade && apt-get -y --no-install-recommends install git wget vim && rm -rf /var/lib/apt/lists/*;\n\n# install ROS\nRUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list'\nRUN apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116\nRUN apt-get update -y && apt-get upgrade -y\nRUN apt-get install --no-install-recommends -y ros-${ROS_DISTRO}-desktop-full ros-${ROS_DISTRO}-rqt-* && rm -rf /var/lib/apt/lists/*;\nRUN rosdep init && rosdep update\nRUN apt install --no-install-recommends -y python-rosinstall python-rosinstall-generator python-wstool build-essential && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y ros-${ROS_DISTRO}-ros-controllers ros-${ROS_DISTRO}-gazebo* ros-${ROS_DISTRO}-moveit* ros-${ROS_DISTRO}-industrial-core ros-${ROS_DISTRO}-orocos-* && rm -rf /var/lib/apt/lists/*;\nRUN rm -rf /var/lib/apt/lists/*\n\n# ROS setting\nRUN mkdir -p $CATKIN_WS/src\nWORKDIR $CATKIN_WS\nRUN echo \"source /opt/ros/${ROS_DISTRO}/setup.bash\" >> $HOME/.bashrc\nRUN echo \"export PYTHONPATH=/opt/ros/${ROS_DISTRO}/lib/python2.7/dist-packages\" >> $HOME/.bashrc\nRUN echo \"source $CATKIN_WS/devel/setup.bash\" >> $HOME/.bashrc\nRUN echo \"export ROS_MASTER_URI=http://localhost:11311\" >> $HOME/.bashrc\nRUN echo \"export ROS_HOSTNAME=localhost\" >> $HOME/.bashrc\nRUN source $HOME/.bashrc\n\n# clone ROS packages\nRUN cd src/ && \\\n\tgit clone -b ${ROS_DISTRO}-devel https://github.com/kairproject/DynamixelSDK.git && \\\n\tgit clone -b ${ROS_DISTRO}-devel https://github.com/kairproject/dynamixel-workbench.git && \\\n\tgit clone -b ${ROS_DISTRO}-devel https://github.com/kairproject/dynamixel-workbench-msgs.git && \\\n\tgit clone -b ${ROS_DISTRO}-devel https://github.com/kairproject/open_manipulator.git && \\\n\tgit clone -b ${ROS_DISTRO}-devel https://github.com/kairproject/open_manipulator_msgs.git && \\\n\tgit clone -b ${ROS_DISTRO}-devel https://github.com/kairproject/open_manipulator_simulations.git && \\\n\tgit clone -b ${ROS_DISTRO}-devel https://github.com/kairproject/robotis_manipulator.git && \\\n\tgit clone https://github.com/gt-ros-pkg/hrl-kdl.git && \\\n\tgit clone https://github.com/kairproject/kair_algorithms_draft.git\n\nRUN cd src/DynamixelSDK/python && python setup.py install\n\n# install pip\nRUN wget https://bootstrap.pypa.io/get-pip.py\nRUN python2.7 get-pip.py && rm get-pip.py\n\n# gym requirements\nRUN apt-get update && apt-get install --no-install-recommends -y python3-opengl zlib1g-dev libjpeg-dev patchelf \\\n\tcmake swig libboost-all-dev libsdl2-dev libosmesa6-dev xvfb ffmpeg && rm -rf /var/lib/apt/lists/*;\n\n# install repository requirements\nRUN apt-get remove -y python-psutil\n\nRUN cd src/kair_algorithms_draft/scripts && python2.7 -m pip install -r requirements.txt\nRUN python2.7 -m pip install gym['Box2d']\n\n# permission setting\nRUN chmod +x -R src/kair_algorithms_draft\n\n# catkin_make\nRUN source /opt/ros/${ROS_DISTRO}/setup.bash && catkin_make\n\nENTRYPOINT [\"/root/catkin_ws/src/kair_algorithms_draft/docker_train.sh\"]\n"
}