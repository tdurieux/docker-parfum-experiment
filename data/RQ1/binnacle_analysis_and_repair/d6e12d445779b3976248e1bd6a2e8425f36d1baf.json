{
  "startTime": 1674641760602,
  "endTime": 1674641762627,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 183,
        "lineEnd": 183,
        "columnStart": 4,
        "columnEnd": 174
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 183,
        "lineEnd": 183,
        "columnStart": 73,
        "columnEnd": 149
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 193,
        "lineEnd": 193,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 209,
        "lineEnd": 209,
        "columnStart": 5,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 210,
        "lineEnd": 210,
        "columnStart": 5,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 468,
        "lineEnd": 468,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 526,
        "lineEnd": 526,
        "columnStart": 24,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 527,
        "lineEnd": 527,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 256,
        "lineEnd": 256,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 257,
        "lineEnd": 257,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 258,
        "lineEnd": 258,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 259,
        "lineEnd": 259,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 260,
        "lineEnd": 260,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 261,
        "lineEnd": 261,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 262,
        "lineEnd": 262,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 189,
        "lineEnd": 189,
        "columnStart": 5,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 212,
        "lineEnd": 212,
        "columnStart": 5,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 220,
        "lineEnd": 220,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 229,
        "lineEnd": 229,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 269,
        "lineEnd": 269,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 505,
        "lineEnd": 505,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 515,
        "lineEnd": 515,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 548,
        "lineEnd": 548,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 229,
        "lineEnd": 229,
        "columnStart": 5,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 229,
        "lineEnd": 229,
        "columnStart": 5,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "FROM microsoft/vsts-agent:$(VSTS_AGENT_TAG)\n\n# Install basic command-line utilities\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    curl \\\n    dnsutils \\\n    file \\\n    ftp \\\n    iproute2 \\\n    iputils-ping \\\n    locales \\\n    openssh-client \\\n    rsync\\\n    shellcheck \\\n    sudo \\\n    telnet \\\n    time \\\n    unzip \\\n    wget \\\n    zip \\\n    tzdata \\\n && rm -rf /var/lib/apt/lists/*\n\n# Setup the locale\nENV LANG en_US.UTF-8\nENV LC_ALL $LANG\nRUN locale-gen $LANG \\\n && update-locale\n\n# Accept EULA - needed for certain Microsoft packages like SQL Server Client Tools\nENV ACCEPT_EULA=Y\n\n# Install essential build tools\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    build-essential \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install Ansible\nRUN apt-get update \\   \n && apt-get install -y --no-install-recommends \\\n    ansible \\      \n && rm -rf /var/lib/apt/lists/*\n\n# Install Azure CLI (instructions taken from https://docs.microsoft.com/en-us/cli/azure/install-azure-cli)\nRUN echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main\" \\\n  | tee /etc/apt/sources.list.d/azure-cli.list \\\n && curl -f -L https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    apt-transport-https \\\n    azure-cli \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /etc/apt/sources.list.d/* \\\n && az --version\n\n# Install Clang (only appears to work on xenial)\nRUN [ \"$(UBUNTU_RELEASE)\" = \"xenial\" ] \\\n && wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \\\n && apt-add-repository \"deb http://apt.llvm.org/$(UBUNTU_RELEASE)/ llvm-toolchain-$(UBUNTU_RELEASE)-6.0 main\" \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends clang-6.0 \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /etc/apt/sources.list.d/* \\\n || echo -n\n\n# Install CMake\nRUN curl -f -sL https://cmake.org/files/v3.10/cmake-3.10.2-Linux-x86_64.sh -o cmake.sh \\\n && chmod +x cmake.sh \\\n && ./cmake.sh --prefix=/usr/local --exclude-subdir \\\n && rm cmake.sh\n\n# Install Erlang\nRUN echo \"deb http://binaries.erlang-solutions.com/debian $(UBUNTU_RELEASE) contrib\" > /etc/apt/sources.list.d/eslerlang.list \\\n && wget -O - https://binaries.erlang-solutions.com/debian/erlang_solutions.asc | apt-key add - \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends esl-erlang \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /etc/apt/sources.list.d/*\n\n# Install Firefox\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y firefox \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install Go\nRUN curl -f -sL https://dl.google.com/go/go1.9.4.linux-amd64.tar.gz -o go1.9.4.linux-amd64.tar.gz \\\n && mkdir -p /usr/local/go1.9.4 \\\n && tar -C /usr/local/go1.9.4 -xzf go1.9.4.linux-amd64.tar.gz --strip-components=1 go \\\n && rm go1.9.4.linux-amd64.tar.gz\nRUN curl -f -sL https://dl.google.com/go/go1.10.linux-amd64.tar.gz -o go1.10.linux-amd64.tar.gz \\\n && mkdir -p /usr/local/go1.10 \\\n && tar -C /usr/local/go1.10 -xzf go1.10.linux-amd64.tar.gz --strip-components=1 go \\\n && rm go1.10.linux-amd64.tar.gz\nENV GOROOT_1_9_X64=/usr/local/go1.9.4 \\\n    GOROOT_1_10_X64=/usr/local/go1.10 \\\n    GOROOT=/usr/local/go1.10\nENV PATH $PATH:$GOROOT/bin\n\n# Install Google Chrome\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n && echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" | tee /etc/apt/sources.list.d/google-chrome.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y google-chrome-stable \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /etc/apt/sources.list.d/*\nENV CHROME_BIN /usr/bin/google-chrome\n\n# Install Haskell\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y haskell-platform \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install Helm\nRUN curl -f https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash\n\n# Install Heroku CLI\nRUN curl -f https://cli-assets.heroku.com/install.sh | sh\n\n# Install HHVM\nRUN apt-get update \\\n && apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xB4112585D386EB94 \\\n && add-apt-repository https://dl.hhvm.com/ubuntu \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y hhvm \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /etc/apt/sources.list.d/*\n\n# Install ImageMagick\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends --fix-missing \\\n    imagemagick \\\n    libmagickcore-dev \\\n    libmagickwand-dev \\\n    libmagic-dev \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install Java OpenJDKs\nRUN apt-add-repository -y ppa:openjdk-r/ppa\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends openjdk-7-jdk \\\n && rm -rf /var/lib/apt/lists/*\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends openjdk-8-jdk \\\n && rm -rf /var/lib/apt/lists/*\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends openjdk-9-jdk \\\n && rm -rf /var/lib/apt/lists/*\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends openjdk-10-jdk \\\n && rm -rf /var/lib/apt/lists/*\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends openjdk-11-jdk \\\n && rm -rf /var/lib/apt/lists/*\nRUN update-alternatives --set java /usr/lib/jvm/java-$(DEFAULT_JDK_VERSION)-openjdk-amd64/jre/bin/java\nENV JAVA_HOME_7_X64=/usr/lib/jvm/java-7-openjdk-amd64 \\\n    JAVA_HOME_8_X64=/usr/lib/jvm/java-8-openjdk-amd64 \\\n    JAVA_HOME_9_X64=/usr/lib/jvm/java-9-openjdk-amd64 \\\n    JAVA_HOME_10_X64=/usr/lib/jvm/java-10-openjdk-amd64 \\\n    JAVA_HOME_11_X64=/usr/lib/jvm/java-11-openjdk-amd64 \\\n    JAVA_HOME=/usr/lib/jvm/java-$(DEFAULT_JDK_VERSION)-openjdk-amd64 \\\n    JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8\n\n# Install Java Tools (Ant, Gradle, Maven)\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    ant \\\n    ant-optional \\\n && rm -rf /var/lib/apt/lists/*\nRUN curl -f -sL https://services.gradle.org/distributions/gradle-4.6-bin.zip -o gradle-4.6.zip \\\n && unzip -d /usr/share gradle-4.6.zip \\\n && ln -s /usr/share/gradle-4.6/bin/gradle /usr/bin/gradle \\\n && rm gradle-4.6.zip\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    maven \\\n && rm -rf /var/lib/apt/lists/*\nENV ANT_HOME=/usr/share/ant \\\n    GRADLE_HOME=/usr/share/gradle \\\n    M2_HOME=/usr/share/maven\n\n# Install kubectl\nRUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \\\n && chmod +x ./kubectl \\\n && mv ./kubectl /usr/local/bin/kubectl\n\n# Install Mercurial\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y mercurial \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install Miniconda\nRUN curl -f -sL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o miniconda.sh \\\n && chmod +x miniconda.sh \\\n && ./miniconda.sh -b -p /usr/share/miniconda \\\n && rm miniconda.sh\nENV CONDA=/usr/share/miniconda\n\n# Install Mono\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n && echo \"deb https://download.mono-project.com/repo/ubuntu stable-$(UBUNTU_RELEASE) main\" | tee /etc/apt/sources.list.d/mono-official-stable.list \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends apt-transport-https mono-complete \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /etc/apt/sources.list.d/*\n\n# Install MS SQL Server client tools (https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-setup-tools?view=sql-server-2017)\nRUN [ \"$(UBUNTU_RELEASE)\" = \"xenial\" ] \\\n  && curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \\\n  && curl -f https://packages.microsoft.com/config/ubuntu/16.04/prod.list | tee /etc/apt/sources.list.d/msprod.list \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y mssql-tools unixodbc-dev \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && rm -rf /etc/apt/sources.list.d/* \\\n  || echo -n\nENV PATH=$PATH:/opt/mssql-tools/bin\n\n# Install MySQL Client\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y mysql-client \\\n  && rm -rf /var/lib/apt/lists/*\nENV mysql=/usr/bin/mysql\n\n# Install MySQL Server\nENV MYSQL_ROOT_PASSWORD=\nRUN bash -c 'debconf-set-selections <<< \"mysql-server mysql-server/root_password password $MYSQL_ROOT_PASSWORD\"' \\\nRUN bash -c 'debconf-set-selections <<< \"mysql-server mysql-server/root_password_again password $MYSQL_ROOT_PASSWORD\"' \\\n RUN apt-get update \\\n  && apt-get install --no-install-recommends -y mysql-server \\\n  && rm -rf /var/lib/apt/lists/* \\\n\n# Install .NET Core SDK and initialize package cache\nRUN curl https://packages.microsoft.com/config/ubuntu/$(UBUNTU_VERSION)/packages-microsoft-prod.deb > packages-microsoft-prod.deb \\\n && dpkg -i packages-microsoft-prod.deb \\\n && rm packages-microsoft-prod.deb \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    apt-transport-https \\\n    dotnet-sdk-2.2 \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /etc/apt/sources.list.d/* \\\nRUN dotnet help \\\nENV dotnet=/usr/bin/dotnet \\\n\n# Install AzCopy (depends on .NET Core)\nRUN apt-key adv --keyserver packages.microsoft.com --recv-keys EB3E94ADBE1229CF \\\n && echo \"deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-$(UBUNTU_RELEASE)-prod/ $(UBUNTU_RELEASE) main\" | tee /etc/apt/sources.list.d/azure.list \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends azcopy \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /etc/apt/sources.list.d/* \\\n\n# Install LTS Node.js and related tools\n RUN curl -sL https://git.io/n-install | bash -s -- -ny - \\\n && ~/n/bin/n lts \\\n && npm install -g bower \\\n && npm install -g grunt \\\n && npm install -g gulp \\\n && npm install -g n \\\n && npm install -g webpack webpack-cli --save-dev \\\n && npm install -g parcel-bundler \\\n && npm i -g npm \\\n && rm -rf ~/n && npm cache clean --force; \\\nENV bower=/usr/local/bin/bower \\\n    grunt=/usr/local/bin/grunt \\\n\n# Install PhantomJS\n RUN apt-get update \\\n && apt-get install --no-install-recommends -y chrpath libssl-dev libxft-dev libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \\\n && rm -rf /var/lib/apt/lists/* \\\n && export PHANTOM_JS=phantomjs-2.1.1-linux-x86_64 \\\n && wget https://bitbucket.org/ariya/phantomjs/downloads/$PHANTOM_JS.tar.bz2 \\\n && tar xvjf $PHANTOM_JS.tar.bz2 \\\n && mv $PHANTOM_JS /usr/local/share \\\n && ln -sf /usr/local/share/$PHANTOM_JS/bin/phantomjs /usr/local/bin \\\n\n# Install PHP versions and libraries\nRUN apt-add-repository ppa:ondrej/php -y \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    php5.6 \\\n    php5.6-amqp \\\n    php5.6-bcmath \\\n    php5.6-bz2 \\\n    php5.6-cgi \\\n    php5.6-cli \\\n    php5.6-common \\\n    php5.6-curl \\\n    php5.6-dba \\\n    php5.6-dev \\\n    php5.6-enchant \\\n    php5.6-fpm \\\n    php5.6-gd \\\n    php5.6-gmp \\\n    php5.6-imap \\\n    php5.6-interbase \\\n    php5.6-intl \\\n    php5.6-json \\\n    php5.6-ldap \\\n    php5.6-mbstring \\\n    php5.6-mcrypt \\\n    php5.6-mysql \\\n    php5.6-odbc \\\n    php5.6-opcache \\\n    php5.6-pgsql \\\n    php5.6-phpdbg \\\n    php5.6-pspell \\\n    php5.6-readline \\\n    php5.6-recode \\\n    php5.6-snmp \\\n    php5.6-soap \\\n    php5.6-sqlite3 \\\n    php5.6-sybase \\\n    php5.6-tidy \\\n    php5.6-xml \\\n    php5.6-xmlrpc \\\n    php5.6-xsl \\\n    php5.6-zip \\\n && apt-get remove --purge -yq php5.6-dev \\\n && apt-get install -y --no-install-recommends \\\n    php7.0 \\\n    php7.0-amqp \\\n    php7.0-bcmath \\\n    php7.0-bz2 \\\n    php7.0-cgi \\\n    php7.0-cli \\\n    php7.0-common \\\n    php7.0-curl \\\n    php7.0-dba \\\n    php7.0-dev \\\n    php7.0-enchant \\\n    php7.0-fpm \\\n    php7.0-gd \\\n    php7.0-gmp \\\n    php7.0-imap \\\n    php7.0-interbase \\\n    php7.0-intl \\\n    php7.0-json \\\n    php7.0-ldap \\\n    php7.0-mbstring \\\n    php7.0-mcrypt \\\n    php7.0-mysql \\\n    php7.0-odbc \\\n    php7.0-opcache \\\n    php7.0-pgsql \\\n    php7.0-phpdbg \\\n    php7.0-pspell \\\n    php7.0-readline \\\n    php7.0-recode \\\n    php7.0-snmp \\\n    php7.0-soap \\\n    php7.0-sqlite3 \\\n    php7.0-sybase \\\n    php7.0-tidy \\\n    php7.0-xml \\\n    php7.0-xmlrpc \\\n    php7.0-xsl \\\n    php7.0-zip \\\n && apt-get remove --purge -yq php7.0-dev \\\n && apt-get install -y --no-install-recommends \\\n    php7.1 \\\n    php7.1-amqp \\\n    php7.1-bcmath \\\n    php7.1-bz2 \\\n    php7.1-cgi \\\n    php7.1-cli \\\n    php7.1-common \\\n    php7.1-curl \\\n    php7.1-dba \\\n    php7.1-dev \\\n    php7.1-enchant \\\n    php7.1-fpm \\\n    php7.1-gd \\\n    php7.1-gmp \\\n    php7.1-imap \\\n    php7.1-interbase \\\n    php7.1-intl \\\n    php7.1-json \\\n    php7.1-ldap \\\n    php7.1-mbstring \\\n    php7.1-mcrypt \\\n    php7.1-mysql \\\n    php7.1-odbc \\\n    php7.1-opcache \\\n    php7.1-pgsql \\\n    php7.1-phpdbg \\\n    php7.1-pspell \\\n    php7.1-readline \\\n    php7.1-recode \\\n    php7.1-snmp \\\n    php7.1-soap \\\n    php7.1-sqlite3 \\\n    php7.1-sybase \\\n    php7.1-tidy \\\n    php7.1-xml \\\n    php7.1-xmlrpc \\\n    php7.1-xsl \\\n    php7.1-zip \\\n && apt-get remove --purge -yq php7.1-dev \\\n && apt-get install -y --no-install-recommends \\\n    php7.2 \\\n    php7.2-apcu \\\n    php7.2-amqp \\\n    php7.2-bcmath \\\n    php7.2-bz2 \\\n    php7.2-cgi \\\n    php7.2-cli \\\n    php7.2-common \\\n    php7.2-curl \\\n    php7.2-dba \\\n    php7.2-dev \\\n    php7.2-enchant \\\n    php7.2-fpm \\\n    php7.2-gd \\\n    php7.2-gmp \\\n    php7.2-imap \\\n    php7.2-interbase \\\n    php7.2-intl \\\n    php7.2-json \\\n    php7.2-ldap \\\n    php7.2-mbstring \\\n    php7.2-mysql \\\n    php7.2-odbc \\\n    php7.2-opcache \\\n    php7.2-pgsql \\\n    php7.2-phpdbg \\\n    php7.2-pspell \\\n    php7.2-readline \\\n    php7.2-recode \\\n    php7.2-snmp \\\n    php7.2-soap \\\n    php7.2-sqlite3 \\\n    php7.2-sybase \\\n    php7.2-tidy \\\n    php7.2-xml \\\n    php7.2-xmlrpc \\\n    php7.2-xsl \\\n    php7.2-zip \\\n && apt-get install -y --no-install-recommends \\\n    php-igbinary \\\n    php-memcache \\\n    php-memcached \\\n    php-mongodb \\\n    php-redis \\\n    php-xdebug \\\n    php-yaml \\\n    php-zmq \\\n && apt-get remove --purge -yq php7.2-dev \\\n && apt-get install -y --no-install-recommends snmp \\\n && rm -rf /var/lib/apt/lists/* \\\n\n# Install composer (for PHP)\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer \\\nENV COMPOSER_ALLOW_SUPERUSER=1 \\\n\n# Install phpunit (for PHP)\nRUN wget -q -O phpunit https://phar.phpunit.de/phpunit-7.phar \\\n && chmod +x phpunit \\\n && mv phpunit /usr/local/bin/phpunit \\\n\n# Install Pollinate\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends pollinate \\\n && rm -rf /var/lib/apt/lists/* \\\n\n# Install Powershell Core\n RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \\\n && curl -f https://packages.microsoft.com/config/ubuntu/$(UBUNTU_VERSION)/prod.list | tee /etc/apt/sources.list.d/microsoft.list \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    powershell \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /etc/apt/sources.list.d/* \\\n\n# Instally PyPy2\nRUN wget -q -P /tmp https://bitbucket.org/pypy/pypy/downloads/pypy2-v6.0.0-linux64.tar.bz2 \\\n && tar -x -C /opt -f /tmp/pypy2-v6.0.0-linux64.tar.bz2 \\\n && rm /tmp/pypy2-v6.0.0-linux64.tar.bz2 \\\n && mv /opt/pypy2-v6.0.0-linux64 /opt/pypy2 \\\n && ln -s /opt/pypy2/bin/pypy /usr/local/bin/pypy \\\n\n# Install PyPy3\nRUN wget -q -P /tmp https://bitbucket.org/pypy/pypy/downloads/pypy3-v6.0.0-linux64.tar.bz2 \\\n && tar -x -C /opt -f /tmp/pypy3-v6.0.0-linux64.tar.bz2 \\\n && rm /tmp/pypy3-v6.0.0-linux64.tar.bz2 \\\n && mv /opt/pypy3-v6.0.0-linux64 /opt/pypy3 \\\n && ln -s /opt/pypy3/bin/pypy3 /usr/local/bin/pypy3 \\\n\n# Install Python\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    python \\\n    python-pip \\\n    python3 \\\n    python3-pip \\\n && rm -rf /var/lib/apt/lists/* \\\n\n# Install rebar3 (for Erlang)\nRUN wget -q -O rebar3 https://s3.amazonaws.com/rebar3/rebar3 \\\n && chmod +x rebar3 \\\n && mv rebar3 /usr/local/bin/rebar3 \\\n\n# Install Ruby requirements\n RUN apt-get update \\\n && apt-get install --no-install-recommends -y libz-dev openssl libssl-dev \\\n && rm -rf /var/lib/apt/lists/* \\\n\n# Install Scala build tools\nRUN curl -s https://raw.githubusercontent.com/paulp/sbt-extras/master/sbt > /usr/local/bin/sbt \\\n && chmod 0755 /usr/local/bin/sbt \\\n\n# Install Sphinx\n RUN [ \"$(UBUNTU_RELEASE)\" = \"xenial\" ] \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y sphinxsearch \\\n  && rm -rf /var/lib/apt/lists/* \\\n  || echo -n \\\n\n# Install Subversion\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends subversion \\\n && rm -rf /var/lib/apt/lists/* \\\nENV svn=/usr/bin/svn \\\n\n# Install Terraform\n RUN TERRAFORM_VERSION=$( curl -f -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r .current_version) \\\n && curl -f -LO https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n && unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/local/bin \\\n && rm -f terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n\n# XSLT transformation\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    xsltproc \\\n    xalan \\\n && rm -rf /var/lib/apt/lists/* \\\n\n# Install yarn\nRUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends yarn \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /etc/apt/sources.list.d/* \\\n\n# Install Xvfb\n RUN apt-get update \\\n && apt-get install --no-install-recommends -y xvfb \\\n && rm -rf /var/lib/apt/lists/* \\\n\n# Download hosted tool cache\nENV AGENT_TOOLSDIRECTORY=/opt/hostedtoolcache \\\nRUN azcopy --recursive --source https://vstsagenttools.blob.core.windows.net/tools/hostedtoolcache/linux --destination $AGENT_TOOLSDIRECTORY \\\n\n# Install the tools from the hosted tool cache\nRUN original_directory=$PWD \\\n && setups=$(find $AGENT_TOOLSDIRECTORY -name setup.sh) \\\n && for setup in $setups; do \\\n        chmod +x $setup; \\\n        cd $(dirname $setup); \\\n        ./$(basename $setup); \\\n        cd $original_directory; \\\n    done; \\\n\n# Add the latest Ruby version in the tool cache to the path\nENV PATH $PATH:/opt/hostedtoolcache/Ruby/2.5.1/x64/bin \\\n\n# Clean system\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /etc/apt/sources.list.d/*"
}