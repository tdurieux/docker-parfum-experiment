{
  "startTime": 1674235146541,
  "endTime": 1674235146766,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 34,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php7-fpm-deb:0.0.1\n# from https://www.drupal.org/requirements/php#drupalversions\nMAINTAINER jinal--shah <jnshah@gmail.com>\nLABEL Name=\"eurostar-drupal8-fpm\" Vendor=\"sortuniq\" Version=\"0.0.1\" \\\n      Description=\"drupalised php7-fpm on debian with composer, nvm, npm and jspm\"\n# build instructions:\n# img_name=$(grep '^LABEL ' ./Dockerfile | sed -e 's/.*Name=\"\\([^\"]\\+\\).*/\\1/')\n# tag_version=$(grep '^LABEL ' ./Dockerfile | sed -e 's/.*Version=\"\\([^\"]\\+\\).*/\\1/')\n# docker build --no-cache=true --rm --tag $img_name:$tag_version .\n# docker rmi $img_name:stable 2>/dev/null\n# docker tag $img_name:$tag_version $img_name:stable\n#\n# Based on work here:\n# - https://github.com/docker-library/drupal/blob/master/8.1/fpm/Dockerfile\n#\n# - abstracted so user can customise same source with more ENV vars at build time.\n# - added:\n#   - composer\n#   - phpredis (php7 branch)\n#   - git for composer pulls\n#   - mysql client for drush\n# - stuff installed under /srv/eurostar\n\nWORKDIR /srv/eurostar/htdocs\n\n# https://www.drupal.org/node/3060/release\nENV DRUPAL_VERSION=8.1.2                                           \\\n    DRUPAL_MD5=91fdfbd1c28512e41f2a61bf69214900                    \\\n    NPM_VERSION=\"v0.12.7\"                                          \\\n    URI_DRUPAL=\"http://ftp.drupal.org/files/projects\"              \\\n    APT_PKGS=\"libpng12-dev libjpeg-dev libpq-dev git mysql-client\" \\\n    CFG_ARGS_GD=\"--with-png-dir=/usr --with-jpeg-dir=/usr\"         \\\n    EXT_LIST=\"gd mbstring opcache pdo pdo_mysql pdo_pgsql zip\"     \\\n    NVM_URI=\"https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh\"\n\n# install the PHP extensions we need\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y ${APT_PKGS} \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && docker-php-ext-configure gd ${CFG_ARGS_GD} \\\n    && docker-php-ext-install ${EXT_LIST} \\\n    && git clone --branch php7 https://github.com/phpredis/phpredis.git \\\n    && ( cd phpredis && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-redis && make && make install) \\\n    && rm -rf phpredis && docker-php-ext-enable redis\n\n# set recommended PHP.ini settings\n# see https://secure.php.net/manual/en/opcache.installation.php\nRUN {                                              \\\n        echo 'opcache.memory_consumption=128';     \\\n        echo 'opcache.interned_strings_buffer=8';  \\\n        echo 'opcache.max_accelerated_files=4000'; \\\n        echo 'opcache.revalidate_freq=60';         \\\n        echo 'opcache.fast_shutdown=1';            \\\n        echo 'opcache.enable_cli=1';               \\\n    } > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\nRUN curl -fSL \"${URI_DRUPAL}/drupal-${DRUPAL_VERSION}.tar.gz\" \\\n         -o drupal.tar.gz \\\n    && curl -f -sS https://getcomposer.org/installer \\\n    | php -- --install-dir=/usr/local/bin                     \\\n          --filename=composer \\\n    && echo \"... installing nvm\" >&2 \\\n    && curl -f -o- $NVM_URI | bash \\\n    && [ -f /root/.nvm/nvm.sh ] \\\n    && echo \"... installed nvm successfully\" >&2 \\\n    && echo $NPM_VERSION > .nvmrc \\\n    && echo \"... testing nvm\" >&2 \\\n    && . /root/.nvm/nvm.sh || /bin/true \\\n    && nvm install \\\n    && nvm use \\\n    && echo \"... installing jspm\" \\\n    && npm install jspm -g \\\n    && echo \"${DRUPAL_MD5} *drupal.tar.gz\" | md5sum -c - \\\n    && tar -xz --strip-components=1 -f drupal.tar.gz \\\n    && rm drupal.tar.gz \\\n    && chown -R www-data:www-data sites && npm cache clean --force;\n"
}