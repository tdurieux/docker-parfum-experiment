{
  "startTime": 1674252615553,
  "endTime": 1674252615720,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE_BUILDER=golang\nARG BASE_IMAGE=alpine\nARG ALPINE_VERSION=3.10\nARG GO_VERSION=1.12.6\n\nFROM ${BASE_IMAGE_BUILDER}:${GO_VERSION}-alpine${ALPINE_VERSION} AS builder\nARG GOARCH=amd64\nARG GOARM=\nARG VERSION=v1.0.0\nARG PLUGINS=\nARG TELEMETRY=false\nRUN apk add --no-cache --progress --update git gcc musl-dev ca-certificates\nWORKDIR /go/src/github.com/mholt/caddy\nRUN git clone --branch ${VERSION} --single-branch --depth 1 https://github.com/mholt/caddy /go/src/github.com/mholt/caddy\nRUN $TELEMETRY || sed -i 's/var EnableTelemetry = true/var EnableTelemetry = false/' /go/src/github.com/mholt/caddy/caddy/caddymain/run.go\nENV GO111MODULE=on\nRUN GOOS=linux GOARCH=${GOARCH} GOARM=${GOARM} go get -v github.com/abiosoft/caddyplug/caddyplug\nRUN mkdir /plugins && \\\n    for plugin in $(echo $PLUGINS | tr \",\" \" \"); do \\\n    printf \"package main\\nimport _ \\\"$(GO111MODULE=off GOOS=linux GOARCH=amd64 caddyplug package $plugin)\\\"\" > /plugins/$plugin.go; \\\n    done\nWORKDIR /caddy\nRUN go mod init caddy\nRUN go get -v github.com/mholt/caddy@${VERSION}\nRUN cp -r /plugins/. .\nCOPY main.go .\nRUN go test -v ./...\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=${GOARCH} GOARM=${GOARM} go build -a -installsuffix cgo -ldflags=\"-s -w\" -o caddy\n\nFROM alpine:${ALPINE_VERSION} AS alpine\nRUN apk --update --no-cache add ca-certificates\n\nFROM scratch\nARG VERSION=v1.0.0\nARG BUILD_DATE\nARG VCS_REF\nLABEL org.label-schema.schema-version=\"1.0.0-rc1\" \\\n    maintainer=\"quentin.mcgaw@gmail.com\" \\\n    org.label-schema.build-date=$BUILD_DATE \\\n    org.label-schema.vcs-ref=$VCS_REF \\\n    org.label-schema.vcs-url=\"https://github.com/qdm12/caddy-scratch\" \\\n    org.label-schema.url=\"https://github.com/qdm12/caddy-scratch\" \\\n    org.label-schema.vcs-description=\"Caddy server 1.0.0 on a Scratch base image\" \\\n    org.label-schema.vcs-usage=\"https://github.com/qdm12/caddy-scratch/blob/master/README.md#setup\" \\\n    org.label-schema.docker.cmd=\"docker run -d -v $(pwd)/Caddyfile:/Caddyfile:ro -v $(pwd)/data:/data -v $(pwd)/srv:/srv:ro -p 80:8080/tcp -p 443:8443/tcp -p 2015:2015/tcp qmcgaw/caddy-scratch\" \\\n    org.label-schema.docker.cmd.devel=\"docker run -it --rm -v $(pwd)/Caddyfile:/Caddyfile:ro -p 80:8080/tcp -p 443:8443/tcp -p 2015:2015/tcp qmcgaw/caddy-scratch\" \\\n    org.label-schema.docker.params=\"\" \\\n    org.label-schema.version=\"${VERSION}\" \\\n    image-size=\"16.6MB\" \\\n    ram-usage=\"18MB but depends on traffic\" \\\n    cpu-usage=\"Low but depends on traffic\"\nCOPY --from=alpine /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\nEXPOSE 8080 8443 2015\n# HEALTHCHECK --interval=100s --timeout=3s --start-period=10s --retries=1 CMD [\"/healthcheck\"]  \nENV HOME=/ \\\n    CADDYPATH=/data\nVOLUME [\"/data\"]\nUSER 1000\nENTRYPOINT [\"/caddy\",\"-conf\",\"/Caddyfile\",\"-log\",\"stdout\",\"-agree\"]\nCMD [\"-http-port\",\"8080\",\"-https-port\",\"8443\"]\n# see https://caddyserver.com/docs/cli\nCOPY --from=builder /caddy/caddy /caddy\n"
}