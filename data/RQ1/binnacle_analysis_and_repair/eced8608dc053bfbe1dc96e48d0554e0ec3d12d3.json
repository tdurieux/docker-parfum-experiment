{
  "startTime": 1674238834326,
  "endTime": 1674238834390,
  "originalSmells": [
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 25,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "################################################################################\n# Base image\n################################################################################\n\nFROM balenalib/%%BALENA_MACHINE_NAME%%-debian as base\n\nENV INITSYSTEM=on\nENV DEBIAN_FRONTEND=noninteractive\n\n################################################################################\n# Rust image\n################################################################################\n\nFROM base as rust\n\n# Install build tools\nRUN apt-get -q update && apt-get install -yq --no-install-recommends build-essential curl file && rm -rf /var/lib/apt/lists/*;\n\nENV PATH=/root/.cargo/bin:$PATH\n\n# Install Rust\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\n\n################################################################################\n# Dependencies\n################################################################################\n\nFROM rust as dependencies\n\nWORKDIR /build\n\n# Create new fake project ($USER is needed by `cargo new`)\nRUN USER=root cargo new app\n\nWORKDIR /build/app\n\n# Copy real app dependencies\nCOPY Cargo.* ./\n\n# Build fake project with real dependencies\nRUN cargo build --release\n\n# Remove the fake app build artifacts\n#\n# NOTE If your application name contains `-` (`foo-bar` for example)\n# then the correct command to remove build artifacts looks like:\n#\n# RUN rm -rf target/release/foo-bar target/release/deps/foo_bar-*\n#                              ^                           ^\nRUN rm -rf target/release/hello* target/release/deps/hello-*\n\n################################################################################\n# Builder\n################################################################################\n\nFROM rust as builder\n\n# We do not want to download deps, update registry, ... again\nCOPY --from=dependencies /root/.cargo /root/.cargo\n\nWORKDIR /build/app\n\n# Copy everything, not just source code\nCOPY . .\n\n# Update already built deps from dependencies image\nCOPY --from=dependencies /build/app/target target\n\n# Build real app\nRUN cargo build --release\n\n################################################################################\n# Final image\n################################################################################\n\nFROM base\n\nWORKDIR /app\n\n# Copy binary from builder image\nCOPY --from=builder /build/app/target/release/hello .\n\n# Copy other folders required by the application. Example:\n# COPY --from=builder /build/app/assets assets\n\n# Launch application\nCMD [\"./hello\", \"%%BALENA_MACHINE_NAME%%\"]\n"
}