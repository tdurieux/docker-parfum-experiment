{
  "startTime": 1674238916500,
  "endTime": 1674238916645,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 50,
        "columnEnd": 63
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10-alpine\n\n# Install all build dependencies\n# Add bash for debugging purposes\nRUN apk update && \\\n    apk add --no-cache --virtual build-dependencies \\\n    build-base \\\n    dos2unix \\\n    python2-dev && python2 && \\\n    apk add --no-cache bash\n\n# Change to app direcotry\nWORKDIR /app\n\n# Fetch and compile ta-lib\nRUN wget https://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz \\\n    && tar xvfz ta-lib-0.4.0-src.tar.gz \\\n    && cd ta-lib \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n    && make \\\n    && make install \\\n    && cd .. \\\n    && rm -rf ta-lib \\\n    && rm ta-lib-0.4.0-src.tar.gz\n\n# Bind mounts on WSL are flaky\n# so we must copy into a volume.\nCOPY . /app\n\n# Fix files molested by Windows\nRUN find . -type f -print0 | xargs -0 dos2unix && npm i -g yarn && npm cache clean --force;\nRUN  sed -i \"s|host: 'localhost'|host: 'mongodb'|g\" src/conf.sample.ts\n# Install dependencies and build the bot\nRUN yarn install && yarn build && yarn cache clean;\n# Remove build tools\nRUN apk del build-dependencies && rm -rf /var/cache/apk/*\n\n# Expose a port\nEXPOSE 9999\n\nENTRYPOINT [\"tail\", \"-f\", \"/dev/null\"]\n\n"
}