{
  "startTime": 1674239582859,
  "endTime": 1674239583388,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 2,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 134,
        "lineEnd": 134,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 196,
        "lineEnd": 196,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 198,
        "lineEnd": 198,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 18,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 18,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 17,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 55,
        "columnStart": 61,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\n\n# Base image for CommonSearch backend development\n# Uses bits from:\n# https://github.com/gettyimages/docker-spark/blob/master/Dockerfile\n# https://github.com/docker-library/openjdk/blob/master/8-jre/Dockerfile\n\n#\n# httpredir.debian.org is often unreliable\n# https://github.com/docker-library/buildpack-deps/issues/40\n#\n\nRUN echo \\\n   'deb ftp://ftp.us.debian.org/debian/ jessie main\\n \\\n    deb ftp://ftp.us.debian.org/debian/ jessie-updates main\\n \\\n    deb http://security.debian.org jessie/updates main\\n' \\\n    > /etc/apt/sources.list\n\nRUN echo 'deb http://ftp.us.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list\n\n#\n# General packages & dependencies\n#\n\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/jre\nENV LANG C.UTF-8\n\nRUN apt-get clean && apt-get update && apt-get upgrade -y && apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    curl \\\n    wget \\\n    git \\\n    gcc \\\n    build-essential \\\n    make \\\n    cmake \\\n    python \\\n    python-pip \\\n    python-dev \\\n    vim \\\n    zlib1g-dev \\\n    libbz2-dev \\\n    libsnappy-dev \\\n    libgflags-dev \\\n    libxml2-dev \\\n    libxslt-dev \\\n    libffi-dev \\\n    libtool \\\n    automake \\\n    strace \\\n    pkg-config \\\n    net-tools \\\n    unzip \\\n    dstat \\\n    openjdk-8-jre-headless \\\n    ca-certificates-java && rm -rf /var/lib/apt/lists/*;\n\n# We could do this to save on image size but we're optimizing for developer experience instead\n# && rm -rf /var/lib/apt/lists/*\n\n\n#\n# RocksDB\n#\n\nENV ROCKSDB_VERSION 4.1\nRUN wget https://github.com/facebook/rocksdb/archive/v${ROCKSDB_VERSION}.tar.gz && \\\n  tar -zxvf v${ROCKSDB_VERSION}.tar.gz && cd rocksdb-${ROCKSDB_VERSION} && \\\n  PORTABLE=1 make shared_lib && make install && \\\n  cd .. && rm -rf rocksdb-${ROCKSDB_VERSION} v${ROCKSDB_VERSION}.tar.gz\n\n\n\n#\n# Install Gumbo\n#\n\nENV GUMBO_VERSION 0.10.1\nENV LD_LIBRARY_PATH /usr/local/lib\nRUN wget https://github.com/google/gumbo-parser/archive/v${GUMBO_VERSION}.tar.gz && \\\n  tar zxf v${GUMBO_VERSION}.tar.gz && cd gumbo-parser-${GUMBO_VERSION} && \\\n  ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && ldconfig && \\\n  cd .. && rm -rf gumbo-parser-${GUMBO_VERSION} v${GUMBO_VERSION}.tar.gz\n\n\n#\n# Install RE2\n#\nRUN mkdir -p /tmp/re2 && \\\n  curl -f -L 'https://github.com/google/re2/archive/636bc71728b7488c43f9441ecfc80bdb1905b3f0.tar.gz' -o /tmp/re2/re2.tar.gz && \\\n  cd /tmp/re2 && tar zxvf re2.tar.gz --strip-components=1 && \\\n  make && make install && \\\n  rm -rf /tmp/re2 && \\\n  ldconfig && rm re2.tar.gz\n\n\n#\n# Install Protocol Buffers\n#\n\n# v3.0.0 doesn't build anymore - see https://github.com/google/protobuf/commit/1760feb621a913189b90fe8595fffb74bce84598\nENV PROTOBUF_VERSION a098e809336c5fbad7a8ff8f1210e5e0ac8d29b2\nRUN curl -f -sL https://github.com/google/protobuf/archive/${PROTOBUF_VERSION}.tar.gz | tar zx && \\\n  cd protobuf-${PROTOBUF_VERSION} && \\\n  ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && ldconfig && \\\n  cd .. && rm -rf protobuf-${PROTOBUF_VERSION}\n\n\n# Oracle JDK is recommended in some places versus Open JDK so it may be interesting to\n# benchmark them or try Oracle JDK to single-out bugs in Open JDK. However it is closed-source\n# so we can't use it.\n# ENV JAVA_HOME /usr/jdk1.8.0_31\n# ENV PATH $PATH:$JAVA_HOME/bin\n# RUN curl -sL --retry 3 --insecure \\\n#   --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \\\n#   \"http://download.oracle.com/otn-pub/java/jdk/8u31-b13/server-jre-8u31-linux-x64.tar.gz\" \\\n#   | gunzip \\\n#   | tar x -C /usr/ \\\n#   && ln -s $JAVA_HOME /usr/java \\\n#   && rm -rf $JAVA_HOME/man\n\n\n\n#\n# Install Spark\n#\n\n# https://people.apache.org/~pwendell/spark-nightly/spark-branch-2.0-bin/spark-2.0.1-SNAPSHOT-2016_07_29_00_24-5cd79c3-bin/\nENV SPARK_VERSION 2.0.1-SNAPSHOT\nENV SPARK_HOME /usr/spark\nENV PATH $PATH:$SPARK_HOME/bin\nENV SPARK_CONF_DIR /cosr/back/spark/conf\n\n# http://d3kbcqa49mib13.cloudfront.net/spark-$SPARK_VERSION-bin-without-hadoop.tgz\nRUN curl -f -sL --retry 3 \"https://s3.amazonaws.com/packages.commonsearch.org/spark/spark-2.0.1-SNAPSHOT-bin-hadoop2.7.tgz\" \\\n  | tar xz -C /usr/ \\\n  && ls -la /usr/ \\\n  && ln -s /usr/spark-$SPARK_VERSION-bin-hadoop2.7 $SPARK_HOME\n\n#\n# Install Hadoop\n#\n\nENV HADOOP_VERSION 2.7.2\nENV HADOOP_HOME /usr/hadoop\nENV PATH $PATH:$HADOOP_HOME/bin\nRUN curl -f -sL https://www.eu.apache.org/dist/hadoop/common/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz | tar -xz -C /usr/\nRUN cd /usr/ && ln -s ./hadoop-$HADOOP_VERSION hadoop\n\n\n#\n# Spark packages\n#\n\nRUN wget 'https://repo1.maven.org/maven2/org/apache/parquet/parquet-tools/1.8.1/parquet-tools-1.8.1.jar' -P /usr/lib/\n\n# Download the current dependencies so we don't have to do it at first run\nADD spark/conf/spark-defaults.conf /tmp/spark.conf\nRUN SPARK_DIST_CLASSPATH=$(hadoop classpath) spark-submit --properties-file /tmp/spark.conf /usr/spark/examples/src/main/python/pi.py && rm /tmp/spark.conf\n\n\n#\n# Install PyPy for performance testing\n#\n\nRUN curl -f -sL 'https://bitbucket.org/squeaky/portable-pypy/downloads/pypy-5.3.1-linux_x86_64-portable.tar.bz2' -o /pypy.tar.bz2 && \\\n  mkdir -p /opt/pypy/ && tar jxvf /pypy.tar.bz2 -C /opt/pypy/  --strip-components=1 && \\\n  rm /pypy.tar.bz2\n\n\n#\n# Python modules not on PyPI\n#\n\n# FAUP\nRUN cd /tmp && \\\n    git clone https://github.com/stricaud/faup.git && \\\n    cd faup && \\\n    git checkout 07f9550fb288a94efccdaeeae66c34aafa91aded && \\\n    cd build && \\\n    cmake .. && make && \\\n    make install && \\\n    cd ../src/lib/bindings/python && \\\n    python setup.py install && \\\n    cd / && rm -rf /tmp/faup\n\n\n\n\n#\n# Python setup\n#\n\nADD requirements.txt /requirements.txt\n\n# Upgrade pip because debian has a really old version\nRUN pip install --no-cache-dir --upgrade --ignore-installed pip\n\nRUN pip install --no-cache-dir -r /requirements.txt\n\n\n#\n# Common Search setup\n#\n\n# Base directory\nRUN mkdir -p /cosr/back\n\n# Save the hash at the time the image was built\nADD .dockerhash /cosr/.back-dockerhash\n"
}