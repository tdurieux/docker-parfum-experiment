{
  "startTime": 1674235681025,
  "endTime": 1674235681377,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 6,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:6\n\n# Download tools\nRUN yum -y install \\\n    ca-certificates \\\n    curl \\\n    wget && rm -rf /var/cache/yum\n\nRUN yum -y install \\\n    bzr \\\n    git \\\n    mercurial \\\n    openssh \\\n    subversion && rm -rf /var/cache/yum\n\n# Build tools\nRUN yum -y install \\\n    autoconf \\\n    automake \\\n    bzip2 \\\n    bzip2-devel \\\n    file \\\n    gcc \\\n    gcc-c++ \\\n    glib2-devel \\\n    glibc-devel \\\n    ImageMagick \\\n    ImageMagick-devel \\\n    libcurl-devel \\\n    libevent-devel \\\n    libffi-devel \\\n    libjpeg-devel \\\n    libtool \\\n    libwebp-devel \\\n    libxml2-devel \\\n    libxslt-devel \\\n    libyaml-devel \\\n    make \\\n    mysql-devel \\\n    ncurses-devel \\\n    openssl-devel \\\n    patch \\\n    postgresql-devel \\\n    readline-devel \\\n    sqlite-devel \\\n    xz \\\n    xz-devel \\\n    zlib-devel && rm -rf /var/cache/yum\n\n# St2 package build debs\nRUN yum -y install \\\n    openldap-devel && rm -rf /var/cache/yum\n\n# Enable remote pubkey access\nRUN mkdir /root/.ssh && chmod 700 /root/.ssh && \\\n    echo \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCdCmmPjsOBWRXc+PKdgDRrsciNjp25zTacyz8Gdkln2ma046brOYXAphhp/85DKgHtANBBt3cl4+HnpDbmAfyq2qZT7hWzAbMxtq0Sj+yyFyUdreXoe4gEKyxpV6o8p/R/XzEcawvqX/vFc5EIFmvTdamxZs9DQmOE5AZMzUB18Kerkrb0/arUcZ8iMi9Ng9a18avow+7oUFZ6Oub7ISz/dkIRojaKO/2paJZ4p+v7ZLn7Hq8TUeBkgAlx872oh8J8linhIq17zK6x4MGL8qiurp2hnfe0cuCxwcsYGy+4DfK51+E2vks6FprCIfF5hIdz26euPn67/YpM0F0b5nXF busybee@drone\" >> /root/.ssh/authorized_keys\n\n# Create busybee credentials and make busybee pkey available for root\nCOPY busybee*  /root/.ssh/\nRUN chmod 600 /root/.ssh/busybee\n\nRUN yum -y install openssh-server sudo && \\\n  ssh-keygen -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key && rm -rf /var/cache/yum\n\n# 1. small fix for SSH in ubuntu 13.10 (that's harmless everywhere else)\n# 2. permit root logins and set simple password password and pubkey\n# 3. change requiretty to !requiretty in /etc/sudoers\nRUN sed -ri 's/^session\\s+required\\s+pam_loginuid.so$/session optional pam_loginuid.so/' /etc/pam.d/sshd && \\\n        sed -ri 's/^#?PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config && \\\n        sed -ri 's/^#?PubkeyAuthentication\\s+.*/PubkeyAuthentication yes/' /etc/ssh/sshd_config && \\\n        sed -ri 's/requiretty/!requiretty/' /etc/sudoers && \\\n        echo 'root:docker.io' | chpasswd\n\nRUN yum -y install nc net-tools && rm -rf /var/cache/yum\n\n#\n# Buildenv is special environment for generating debian packages. It provides:\n#   - All needed pre-installed development packages\n#   - SSH access for build executor.\n#\n\nRUN yum -y install tar xz rpmdevtools && rm -rf /var/cache/yum\n\n# Install st2python from our repository\nRUN wget https://bintray.com/stackstorm/el6/rpm -O /etc/yum.repos.d/stackstorm-el6.repo && \\\n      sed -ir 's~stackstorm/el6~stackstorm/el6/stable~' /etc/yum.repos.d/stackstorm-el6.repo && \\\n      yum -y install st2python && rm -rf /tmp/* && rm -rf /var/cache/yum\n\n# Install fresh pip and co\nRUN PATH=/usr/share/python/st2python/bin:$PATH bash -c \\\n      \"curl https://bootstrap.pypa.io/get-pip.py | python - virtualenv==16.6.0 pip==19.1.1 wheel setuptools; \\\n        pip install --upgrade requests[security] venvctrl\" \\\n    && rm -rf /root/.cache\n\nVOLUME ['/home/busybee/build']\nEXPOSE 22\n\n# Run ssh daemon in foreground and wait for bees to connect.\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n"
}