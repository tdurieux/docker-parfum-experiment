{
  "startTime": 1674251917228,
  "endTime": 1674251917478,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 156
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.2-apache\nLABEL maintainer=\"Michael Babker <michael.babker@joomla.org> (@mbabker)\"\n\n# Disable remote database security requirements.\nENV JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK=1\n\n# Enable Apache Rewrite Module\nRUN a2enmod rewrite\n\n# Install PHP extensions\nRUN set -ex; \\\n\t\\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\t\\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tlibbz2-dev \\\n\t\tlibjpeg-dev \\\n\t\tlibldap2-dev \\\n\t\tlibmemcached-dev \\\n\t\tlibpng-dev \\\n\t\tlibpq-dev \\\n\t; \\\n\t\\\n\tdocker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr; \\\n\tdebMultiarch=\"$(dpkg-architecture --query DEB_BUILD_MULTIARCH)\"; \\\n\tdocker-php-ext-configure ldap --with-libdir=\"lib/$debMultiarch\"; \\\n\tdocker-php-ext-install \\\n\t\tbz2 \\\n\t\tgd \\\n\t\tldap \\\n\t\tmysqli \\\n\t\tpdo_mysql \\\n\t\tpdo_pgsql \\\n\t\tpgsql \\\n\t\tzip \\\n\t; \\\n\t\\\n# pecl will claim success even if one install fails, so we need to perform each install separately\n\tpecl install APCu-5.1.17; \\\n\tpecl install memcached-3.1.3; \\\n\tpecl install redis-4.3.0; \\\n\t\\\n\tdocker-php-ext-enable \\\n\t\tapcu \\\n\t\tmemcached \\\n\t\tredis \\\n\t; \\\n\t\\\n# reset apt-mark's \"manual\" list so that \"purge --auto-remove\" will remove all build dependencies\n\tapt-mark auto '.*' > /dev/null; \\\n\tapt-mark manual $savedAptMark; \\\n\tldd \"$(php -r 'echo ini_get(\"extension_dir\");')\"/*.so \\\n\t\t| awk '/=>/ { print $3 }' \\\n\t\t| sort -u \\\n\t\t| xargs -r dpkg-query -S \\\n\t\t| cut -d: -f1 \\\n\t\t| sort -u \\\n\t\t| xargs -rt apt-mark manual; \\\n\t\\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\trm -rf /var/lib/apt/lists/*\n\nVOLUME /var/www/html\n\n# Define Joomla version and expected SHA512 signature\nENV JOOMLA_VERSION 3.9.8\nENV JOOMLA_SHA512 099ccb3b2d6cfb0b6d465f5f45a694e76744aff1a9e9ebf69b8697236849fd6568a6b0de593008ec60dbdb08547a7eee3da2a6c6315ae4013e32d02225a5ed66\n\n# Download package and extract to web volume\nRUN curl -f -o joomla.tar.bz2 -SL https://github.com/joomla/joomla-cms/releases/download/${JOOMLA_VERSION}/Joomla_${JOOMLA_VERSION}-Stable-Full_Package.tar.bz2 \\\n\t&& echo \"$JOOMLA_SHA512 *joomla.tar.bz2\" | sha512sum -c - \\\n\t&& mkdir /usr/src/joomla \\\n\t&& tar -xf joomla.tar.bz2 -C /usr/src/joomla \\\n\t&& rm joomla.tar.bz2 \\\n\t&& chown -R www-data:www-data /usr/src/joomla && rm -rf /usr/src/joomla\n\n# Copy init scripts and custom .htaccess\nCOPY docker-entrypoint.sh /entrypoint.sh\nCOPY makedb.php /makedb.php\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"apache2-foreground\"]\n"
}