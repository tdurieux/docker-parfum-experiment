{
  "startTime": 1674251057843,
  "endTime": 1674251058203,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM dmstr/php-yii2:7.3-fpm-6.0-rc1-nginx\nARG BUILD_NO_INSTALL\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y $PHPIZE_DEPS \\\n        procps# recommended for dmstr/yii2-resque-module \\\n && pecl install mailparse \\\n && docker-php-ext-enable mailparse \\\n && apt-get remove -y $PHPIZE_DEPS && rm -rf /var/lib/apt/lists/*;\n\n\n# System files\nCOPY ./image-files /\n\n# Application packages\nWORKDIR /app\nCOPY composer.* /app/\n\n# Composer installation (skipped on first build in dist-upgrade)\nRUN if [ -z \"$BUILD_NO_INSTALL\" ]; then \\\n        composer install --no-dev --prefer-dist --optimize-autoloader && \\\n        composer clear-cache; \\\n    fi\n\n# Application source-code\nCOPY yii /app/\nCOPY ./web /app/web/\nCOPY ./src /app/src/\n\n# Tests source-code for integration tests in derived images\nCOPY ./tests /app/tests\n\n# Permissions\nRUN mkdir -p runtime web/assets web/bundles /mnt/storage && \\\n    chmod -R 775 runtime web/assets web/bundles /mnt/storage && \\\n    chmod -R ugo+r /root/.composer/vendor && \\\n    chmod u+x /usr/local/bin/unique-number.sh /usr/local/bin/export-env.sh && \\\n    chmod -R u+x /etc/periodic && \\\n    chown -R www-data:www-data runtime web/assets web/bundles /root/.composer/vendor /mnt/storage\n\n# Build assets (skipped on first build in dist-upgrade)\nRUN if [ -z \"$BUILD_NO_INSTALL\" ]; then \\\n        APP_NO_CACHE=1 APP_LANGUAGES=en yii asset/compress src/config/assets.php web/bundles/config.php; \\\n    fi\n\n# Install crontab from application config\nRUN crontab src/config/crontab\n\nVOLUME /mnt/storage\n\n# export container environment for cronjobs on container start\nCMD /usr/local/bin/export-env.sh; supervisord -c /etc/supervisor/supervisord.conf"
}