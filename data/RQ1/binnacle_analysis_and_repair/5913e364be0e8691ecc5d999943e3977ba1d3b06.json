{
  "startTime": 1674248223117,
  "endTime": 1674248223324,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM resin/aarch64-debian:jessie\n\nENV OPENSSL_FLAGS='no-idea no-mdc2 no-rc5 no-zlib enable-tlsext no-ssl2 no-ssl3 no-ssl3-method enable-rfc3779 enable-cms'\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n       build-essential git flex bison gperf python ruby git libfontconfig1-dev \\\n       dpkg-dev binutils gcc g++ libc-dev && \\\n   echo \"deb-src http://deb.debian.org/debian jessie main\" >> /etc/apt/sources.list && \\\n   apt-get update && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /tmp\n\nRUN git clone git://github.com/ariya/phantomjs.git && \\\n    cd phantomjs           && \\\n    git checkout 2.1.1     && \\\n    git submodule init     && \\\n    git submodule update   && \\\n    apt-get source openssl && \\\n    apt-get source icu\n\nRUN echo \"Recompiling OpenSSL\" && \\\n    cd phantomjs/openssl-1.0.1t && \\\n    ./Configure --prefix=/usr --openssldir=/etc/ssl --libdir=lib ${OPENSSL_FLAGS} linux-generic64 && \\\n    make -j 4 depend && make -j 4 && make install_sw\n\nRUN echo \"Building the static version of ICU library...\" && \\\n    cd phantomjs/icu-52.1/source && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --enable-static --disable-shared && \\\n    make -j 4 && make install\n\n#since gcc/g++ fails let s try clang ...\nRUN curl -f -LO http://releases.llvm.org/3.8.0/clang+llvm-3.8.0-aarch64-linux-gnu.tar.xz && \\\n    tar xf clang+llvm-3.8.0-aarch64-linux-gnu.tar.xz && rm clang+llvm-3.8.0-aarch64-linux-gnu.tar.xz\n\nENV CC=/tmp/clang+llvm-3.8.0-aarch64-linux-gnu/bin/clang\nENV CXX=/tmp/clang+llvm-3.8.0-aarch64-linux-gnu/bin/clang++\n\nRUN echo \"Compiling PhantomJS...\" && \\\n    cd phantomjs && \\\n    python build.py  --confirm --release --qt-config=\"-no-pkg-config\" --git-clean-qtbase --git-clean-qtwebkit\n\nCMD [\"/bin/bash\"]\n"
}