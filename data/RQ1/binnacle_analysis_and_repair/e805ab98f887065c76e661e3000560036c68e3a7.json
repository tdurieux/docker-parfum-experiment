{
  "startTime": 1674246838387,
  "endTime": 1674246839063,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nARG ROS_DISTRO=kinetic\n\nENV ROS_WSPACE=/ros_ws\n\nENV DEBIAN_FRONTEND=noninteractive\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\n# add OSRF repository\n# TODO: could just start from a ros:kinetic image?\n#RUN echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list \\\n# && apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116\n\n# add bootstrap utils/progs\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n      build-essential \\\n      ca-certificates \\\n      git \\\n      python-pip \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n# upgrade and install necessary pip tools/parts\nRUN pip install --no-cache-dir --upgrade pip setuptools wheel\n\n# add bootstrap ros utils\nRUN pip install --no-cache-dir -U rosdep wstool rosinstall rospkg catkin_pkg\n\n# setup workspace and import packages\nWORKDIR ${ROS_WSPACE}\nADD deps.rosinstall ${ROS_WSPACE}\nRUN wstool init -j8 ${ROS_WSPACE}/src ${ROS_WSPACE}/deps.rosinstall\n\n# TODO: allow patching some things here?\n\n# install system deps\nRUN apt-get update \\\n && rosdep init \\\n && rosdep update \\\n && rosdep install --from-paths src -i --rosdistro=${ROS_DISTRO} -y --skip-keys=\"python-rosdep python-catkin-pkg python-rospkg\" \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n# build workspace\nRUN ${ROS_WSPACE}/src/catkin/bin/catkin_make_isolated \\\n      --install \\\n      --install-space /opt/ros/${ROS_DISTRO} \\\n      -DCMAKE_BUILD_TYPE=Release\n\n# remove temporaries\nRUN rm -rf \\\n       ${ROS_WSPACE}/src \\\n       ${ROS_WSPACE}/build_isolated \\\n       ${ROS_WSPACE}/devel_isolated\n\n# download & build Package Under Test\nWORKDIR ${ROS_WSPACE}\nADD puts.rosinstall ${ROS_WSPACE}\nRUN wstool init -j8 ${ROS_WSPACE}/src ${ROS_WSPACE}/puts.rosinstall\n\n\n# dependencies should already have been resolved, built and installed, so we\n# can skip running rosdep here. We do of course depend on the package author\n# to have correctly listed all dependencies ..\n\n\n# proceed with building the workspace, which now only contains the\n# package(s) under test.\n#\n# Note: need to add 'true' or Docker will fail the build of the image\n# Note2: using '--only-pkg-with-deps' here to avoid building /everything/\nRUN /bin/bash -c '\\\n         source /opt/ros/$ROS_DISTRO/setup.bash \\\n      && catkin_make --only-pkg-with-deps=roscpp'\n\n\n# setup container entrypoints\nCOPY ./ros_entrypoint.sh /\nENTRYPOINT [\"/ros_entrypoint.sh\"]\nCMD [\"bash\"]\n"
}