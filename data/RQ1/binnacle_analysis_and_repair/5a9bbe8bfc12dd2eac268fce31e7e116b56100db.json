{
  "startTime": 1674235061650,
  "endTime": 1674235061729,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 27,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 27,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:{{PYTHON_VERSION}}\n\n# create directory which can be a place for generated static content\n# volume can be used to serve these files with a webserver\nRUN mkdir -p /var/www/static\nVOLUME /var/www/static\n\n# create directory which can be a place for user-uploaded files\n# volume can be used to serve these files with a webserver\nRUN mkdir -p /var/www/media\nVOLUME /var/www/media\n\n# create directory for application source code\n# volume can be used for live-reload during development\nRUN mkdir -p /usr/django/app\nVOLUME /usr/django/app\n\n# set default port for gunicorn\nENV PORT=8000\n\n# add gunicorn config\nRUN mkdir -p /etc/gunicorn\nCOPY gunicorn.conf /etc/gunicorn/\n\n# run start.sh on container start\nWORKDIR /usr/django\nCOPY start.sh /usr/django/\nRUN chmod +x start.sh\nCMD ./start.sh\n\n# install gettext\nRUN apt-get update -yqq && apt-get install --no-install-recommends -y gettext && rm -rf /var/lib/apt/lists/*;\n\n# install gunicorn, django and pytz\nENV GUNICORN_VERSION={{GUNICORN_VERSION}}\nENV DJANGO_VERSION={{DJANGO_VERSION}}\nENV PYTZ_VERSION={{PYTZ_VERSION}}\nRUN pip install --no-cache-dir gunicorn==$GUNICORN_VERSION\nRUN pip install --no-cache-dir django==$DJANGO_VERSION\nRUN pip install --no-cache-dir pytz==$PYTZ_VERSION\n"
}