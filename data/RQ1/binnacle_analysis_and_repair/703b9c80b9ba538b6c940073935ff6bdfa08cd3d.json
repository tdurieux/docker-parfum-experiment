{
  "startTime": 1674251366816,
  "endTime": 1674251366920,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG HUB_ORG\nARG TAG\n\nFROM $HUB_ORG/kernel-r:$TAG\n\nUSER root\n\nENV SPARK_VER 2.4.1\nENV SPARK_HOME /opt/spark\nENV KERNEL_LANGUAGE=R\nENV R_LIBS_USER $R_LIBS_USER:${R_HOME}/library:${SPARK_HOME}/R/lib\nENV PATH $PATH:$SPARK_HOME/bin\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    openjdk-8-jdk \\\n    libssl-dev \\\n    libssl1.0.0:amd64 && rm -rf /var/lib/apt/lists/*;\n\nENV JAVA_HOME /usr/lib/jvm/java-1.8.0-openjdk-amd64\n\n# Download and install Spark\nRUN curl -f -s https://archive.apache.org/dist/spark/spark-${SPARK_VER}/spark-${SPARK_VER}-bin-hadoop2.7.tgz | \\\n    tar -xz -C /opt && \\\n    ln -s ${SPARK_HOME}-${SPARK_VER}-bin-hadoop2.7 $SPARK_HOME\n\n# Download entrypoint.sh from matching tag\n# Use tini from Anaconda installation\nRUN cd /opt/ && \\\n    wget https://raw.githubusercontent.com/apache/spark/v${SPARK_VER}/resource-managers/kubernetes/docker/src/main/dockerfiles/spark/entrypoint.sh && \\\n    chmod a+x /opt/entrypoint.sh && \\\n    sed -i 's/tini -s/tini -g/g' /opt/entrypoint.sh && \\\n    ln -sfn /opt/conda/bin/tini /sbin/tini\n\nWORKDIR $SPARK_HOME/work-dir\n# Ensure that work-dir is writable by everyone\nRUN chmod 0777 $SPARK_HOME/work-dir\n\nENTRYPOINT [ \"/opt/entrypoint.sh\" ]\n\nUSER jovyan\n\n"
}