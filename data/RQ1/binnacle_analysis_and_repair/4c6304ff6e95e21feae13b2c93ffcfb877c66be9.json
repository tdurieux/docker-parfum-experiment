{
  "startTime": 1674250378063,
  "endTime": 1674250378279,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 42,
        "columnStart": 2,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# NOTICE: To keep consistency across this docker file, scripts/setup_linux.sh\n# and scripts/setup_macos.sh, if there's any changes applied to this file,\n# specially regarding the installation of dependencies, apply those same\n# changes to the mentioned files.\nARG PARENT_IMAGE=ubuntu:16.04\nFROM $PARENT_IMAGE\n\n# http://bugs.python.org/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG C.UTF-8\n\n# apt dependencies\nRUN \\\n  apt-get -y -q update && \\\n  # Prevents debconf from prompting for user input\n  # See https://github.com/phusion/baseimage-docker/issues/58\n  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    # Dockerfile deps\n    wget \\\n    bzip2 \\\n    unzip \\\n    git \\\n    curl \\\n    # For building glfw\n    cmake \\\n    xorg-dev \\\n    # mujoco_py\n    # See https://github.com/openai/mujoco-py/blob/master/Dockerfile\n    # 16.04 repo is too old, install glfw from source instead\n    # libglfw3 \\\n    libglew-dev \\\n    libosmesa6-dev \\\n    patchelf \\\n    # OpenAI gym\n    # See https://github.com/openai/gym/blob/master/Dockerfile\n    libpq-dev \\\n    ffmpeg \\\n    libjpeg-dev \\\n    swig \\\n    libsdl2-dev \\\n    # OpenAI baselines\n    libopenmpi-dev \\\n    openmpi-bin && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/*\n\n# Build GLFW because the Ubuntu 16.04 version is too old\n# See https://github.com/glfw/glfw/issues/1004\nRUN apt-get purge -y -v libglfw*\nRUN git clone https://github.com/glfw/glfw.git && \\\n  cd glfw && \\\n  git checkout 0be4f3f75aebd9d24583ee86590a38e741db0904 && \\\n  mkdir glfw-build && \\\n  cd glfw-build && \\\n  cmake -DBUILD_SHARED_LIBS=ON -DGLFW_BUILD_EXAMPLES=OFF -DGLFW_BUILD_TESTS=OFF -DGLFW_BUILD_DOCS=OFF .. && \\\n  make -j\"$(nproc)\" && \\\n  make install && \\\n  cd ../../ && \\\n  rm -rf glfw\n\n# MuJoCo 2.0 (for dm_control)\nRUN mkdir -p /root/.mujoco && \\\n  wget https://www.roboti.us/download/mujoco200_linux.zip -O mujoco.zip && \\\n  unzip mujoco.zip -d $HOME/.mujoco && \\\n  rm mujoco.zip && \\\n  ln -s $HOME/.mujoco/mujoco200_linux $HOME/.mujoco/mujoco200\n  ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/root/.mujoco/mujoco200/bin\n\n# conda\nRUN wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh && \\\n  bash miniconda.sh -b -p /opt/conda && \\\n  rm miniconda.sh && \\\n  ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh\nENV PATH=$PATH:/opt/conda/bin\nRUN conda update -q -y conda\n\n# conda environment\n# Copy over just environment.yml and setup.py first, so the Docker cache doesn't\n# expire until they change\n#\n# Files needed to run setup.py\n# - README.md\n# - VERSION\n# - scripts/garage\n# - src/garage/__init__.py\n# - setup.py\nCOPY README.md /root/code/garage/README.md\nCOPY VERSION /root/code/garage/VERSION\nCOPY scripts/garage /root/code/garage/scripts/garage\nCOPY src/garage/__init__.py /root/code/garage/src/garage/__init__.py\nCOPY setup.py /root/code/garage/setup.py\nCOPY environment.yml /root/code/garage/environment.yml\n\n# We need a MuJoCo key to install mujoco_py\n# In this step only the presence of the file mjkey.txt is required, so we only\n# create an empty file\nARG MJKEY\nRUN touch /root/.mujoco/mjkey.txt && \\\n  conda env create -f /root/code/garage/environment.yml && \\\n  rm -rf /opt/conda/pkgs/* && \\\n  rm /root/.mujoco/mjkey.txt\n\n# Extras\n# prevent pip from complaining about available upgrades\nRUN [\"/bin/bash\", \"-c\", \"source activate garage && pip install --upgrade pip\"]\n\n# Setup repo\nWORKDIR /root/code/garage\n# Pre-build pre-commit env\nCOPY .pre-commit-config.yaml /root/code/garage\nRUN [\"/bin/bash\", \"-c\", \"source activate garage && git init && pre-commit\"]\n"
}