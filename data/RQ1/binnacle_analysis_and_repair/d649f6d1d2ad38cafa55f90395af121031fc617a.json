{
  "startTime": 1674234941077,
  "endTime": 1674234941217,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 20
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 2,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Node.js Dockerfile\n#\n# https://github.com/dockerfile/nodejs\n#\n\n# Pull base image.\nFROM dockerfile/python\n\n# Install Node.js\nRUN \\\n  cd /tmp && \\\n  wget https://nodejs.org/dist/v0.10.35/node-v0.10.35.tar.gz && \\\n  tar xvzf node-v0.10.35.tar.gz && \\\n  rm -f node-v0.10.35.tar.gz && \\\n  cd node-v* && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  CXX=\"g++ -Wno-unused-local-typedefs\" make && \\\n  CXX=\"g++ -Wno-unused-local-typedefs\" make install && \\\n  cd /tmp && \\\n  rm -rf /tmp/node-v* && \\\n  npm install -g npm && \\\n  printf '\\n# Node.js\\nexport PATH=\"node_modules/.bin:$PATH\"' >> /root/.bashrc && npm cache clean --force;\n\n# Define working directory.\nWORKDIR /data\n\n# Define default command.\nCMD [\"bash\"]\n\nRUN npm install -g gulp bower node-sass && npm cache clean --force;\nADD package.json /app/package.json\n\nWORKDIR /app\nRUN npm install && npm cache clean --force;\n\nWORKDIR /\nADD bower.json /app/bower.json\nADD .bowerrc /app/.bowerrc\n\nWORKDIR /app\nRUN bower install --allow-root\n\nWORKDIR /\nADD client /app/client\nADD gulpfile.js /app/gulpfile.js\n\nWORKDIR /app\nRUN npm run build\n\nWORKDIR /\nADD server /app/server\nADD config /app/config\n\n# Define default command.\nWORKDIR /app\nCMD [\"npm\", \"start\"]\n"
}