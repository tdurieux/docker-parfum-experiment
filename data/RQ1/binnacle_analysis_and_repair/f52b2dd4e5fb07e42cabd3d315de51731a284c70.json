{
  "startTime": 1674234959894,
  "endTime": 1674234960058,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# firefox Dockerfile\n#\n# https://github.com/jlesage/docker-firefox\n#\n\n# Pull base image.\nFROM jlesage/baseimage-gui:alpine-3.9-v3.5.2\n\n# Define software versions.\nARG FIREFOX_VERSION=66.0.5-r1\nARG JSONLZ4_VERSION=c4305b8\nARG LZ4_VERSION=1.8.1.2\n#ARG PROFILE_CLEANER_VERSION=2.36\n\n# Define software download URLs.\nARG JSONLZ4_URL=https://github.com/avih/dejsonlz4/archive/${JSONLZ4_VERSION}.tar.gz\nARG LZ4_URL=https://github.com/lz4/lz4/archive/v${LZ4_VERSION}.tar.gz\n#ARG PROFILE_CLEANER_URL=https://github.com/graysky2/profile-cleaner/raw/v${PROFILE_CLEANER_VERSION}/common/profile-cleaner.in\n\n# Define working directory.\nWORKDIR /tmp\n\n# Install Firefox.\nRUN \\\n    add-pkg --repository http://dl-cdn.alpinelinux.org/alpine/edge/main \\\n            --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing \\\n            --upgrade firefox=${FIREFOX_VERSION}\n\n# Install extra packages.\nRUN \\\n    add-pkg \\\n        desktop-file-utils \\\n        adwaita-icon-theme \\\n        ttf-dejavu \\\n        ffmpeg-libs \\\n        # The following package is used to send key presses to the X process.\n        xdotool\n\n# Set default settings.\nRUN \\\n    CFG_FILE=\"$(ls /usr/lib/firefox/browser/defaults/preferences/firefox-branding.js)\" && \\\n    echo '' >> \"$CFG_FILE\" && \\\n    echo '// Default download directory.' >> \"$CFG_FILE\" && \\\n    echo 'pref(\"browser.download.dir\", \"/config/downloads\");' >> \"$CFG_FILE\" && \\\n    echo 'pref(\"browser.download.folderList\", 2);' >> \"$CFG_FILE\"\n\n# Install JSONLZ4 tools.\nRUN \\\n    add-pkg --virtual build-dependencies \\\n        curl \\\n        build-base \\\n        && \\\n    mkdir jsonlz4 && \\\n    mkdir lz4 && \\\n    curl -f -# -L {$JSONLZ4_URL} | tar xz --strip 1 -C jsonlz4 && \\\n    curl -f -# -L {$LZ4_URL} | tar xz --strip 1 -C lz4 && \\\n    mv jsonlz4/src/ref_compress/*.c jsonlz4/src/ && \\\n    cp lz4/lib/lz4.* jsonlz4/src/ && \\\n    cd jsonlz4 && \\\n    gcc -Wall -o dejsonlz4 src/dejsonlz4.c src/lz4.c && \\\n    gcc -Wall -o jsonlz4 src/jsonlz4.c src/lz4.c && \\\n    strip dejsonlz4 jsonlz4 && \\\n    cp -v dejsonlz4 /usr/bin/ && \\\n    cp -v jsonlz4 /usr/bin/ && \\\n    cd .. && \\\n    # Cleanup.\n    del-pkg build-dependencies && \\\n    rm -rf /tmp/* /tmp/.[!.]*\n\n# Install profile-cleaner.\n#RUN \\\n#    add-pkg --virtual build-dependencies curl && \\\n#    curl -# -L -o /usr/bin/profile-cleaner {$PROFILE_CLEANER_URL} && \\\n#    sed-patch 's/@VERSION@/'${PROFILE_CLEANER_VERSION}'/' /usr/bin/profile-cleaner && \\\n#    chmod +x /usr/bin/profile-cleaner && \\\n#    add-pkg \\\n#        bash \\\n#        file \\\n#        coreutils \\\n#        bc \\\n#        parallel \\\n#        sqlite \\\n#        && \\\n#    # Cleanup.\n#    del-pkg build-dependencies && \\\n#    rm -rf /tmp/* /tmp/.[!.]*\n\n# Enable log monitoring.\nRUN \\\n    add-pkg yad && \\\n    sed-patch 's|LOG_FILES=|LOG_FILES=/config/log/firefox/error.log|' /etc/logmonitor/logmonitor.conf && \\\n    sed-patch 's|STATUS_FILES=|STATUS_FILES=/tmp/.firefox_shm_check|' /etc/logmonitor/logmonitor.conf\n\n# Adjust the openbox config.\nRUN \\\n    # Maximize only the main window.\n    sed-patch 's/<application type=\"normal\">/<application type=\"normal\" title=\"Mozilla Firefox\">/' \\\n        /etc/xdg/openbox/rc.xml && \\\n    # Make sure the main window is always in the background.\n    sed-patch '/<application type=\"normal\" title=\"Mozilla Firefox\">/a \\    <layer>below</layer>' \\\n        /etc/xdg/openbox/rc.xml\n\n# Generate and install favicons.\nRUN \\\n    APP_ICON_URL=https://github.com/jlesage/docker-templates/raw/master/jlesage/images/firefox-icon.png && \\\n    install_app_icon.sh \"$APP_ICON_URL\"\n\n# Add files.\nCOPY rootfs/ /\n\n# Set environment variables.\nENV APP_NAME=\"Firefox\"\n\n# Define mountable directories.\nVOLUME [\"/config\"]\n\n# Metadata.\nLABEL \\\n      org.label-schema.name=\"firefox\" \\\n      org.label-schema.description=\"Docker container for Firefox\" \\\n      org.label-schema.version=\"unknown\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-firefox\" \\\n      org.label-schema.schema-version=\"1.0\"\n"
}