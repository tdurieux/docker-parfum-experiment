{
  "startTime": 1674249316977,
  "endTime": 1674249317506,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 92,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\nMAINTAINER RStudio Docker <docker@rstudio.com>\n\n# update apt & install packages\nRUN apt-get update -qq && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    build-essential \\\n    curl \\\n    git \\\n    gnupg \\\n    libboost-all-dev \\\n    libcurl4-openssl-dev \\\n    locales \\\n    lsb-release \\\n    moreutils \\\n    openssh-client \\\n    protobuf-compiler \\\n    sudo && \\\n    rm -rf /var/lib/apt/lists/*\n\n# add R apt repository\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0x51716619e084dab9 && \\\n    echo \"deb http://cran.rstudio.com/bin/linux/ubuntu bionic-cran35/\" >> /etc/apt/sources.list.d/cran-rstudio.list\n\n# Ensure FreeTDS is added to unixodbc upon installation\nRUN echo tdsodbc freetds/addtoodbc boolean true | debconf-set-selections\n\n# Install libraries & database related packages separately to break up the layers\nRUN apt-get update -qq && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    jags \\\n    libatlas3-base \\\n    libcairo2 \\\n    libcairo2-dev \\\n    libfftw3-dev \\\n    libgdal-dev \\\n    libgraphviz-dev \\\n    libgsl0-dev \\\n    libmysqlclient-dev \\\n    libnetcdf-dev \\\n    libprocps-dev \\\n    libproj-dev \\\n    libprotoc-dev \\\n    libquantlib0-dev \\\n    libsasl2-dev \\\n    libsqliteodbc \\\n    libxml2-dev \\\n    libxt-dev \\\n    libxt6 \\\n    odbc-postgresql \\\n    tdsodbc \\\n    unixodbc \\\n    unixodbc-dev \\\n    wget && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Note: myodbc is not available for bionic: https://launchpad.net/myodbc\nRUN cd /tmp && \\\n    wget -q https://dev.mysql.com/get/Downloads/Connector-ODBC/8.0/mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit.tar.gz && \\\n    tar zxf mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit.tar.gz && \\\n    cp mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit/bin/* /usr/local/bin && \\\n    cp mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit/lib/* /usr/local/lib && \\\n    myodbc-installer -a -d -n \"MySQL\" -t \"Driver=/usr/local/lib/libmyodbc8w.so\" && \\\n    myodbc-installer -a -d -n \"MySQL ODBC 8.0 Driver\" -t \"Driver=/usr/local/lib/libmyodbc8w.so\" && \\\n    rm -rf mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit* && rm mysql-connector-odbc-8.0.11-linux-ubuntu18.04-x86-64bit.tar.gz\n\n# Install JDK and Cargo separately to avoid the recommended packages\nRUN apt-get update -qq && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends openjdk-8-jdk cargo && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update -qq && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    python-dev \\\n    python-pip \\\n    python-virtualenv && rm -rf /var/lib/apt/lists/*;\n\n# Install Julia\nRUN wget -q https://julialang-s3.julialang.org/bin/linux/x64/1.0/julia-1.0.2-linux-x86_64.tar.gz && \\\n    tar -C /usr/local -zxf julia-1.0.2-linux-x86_64.tar.gz && \\\n    ln -s /usr/local/julia-1.0.2/bin/julia /usr/local/bin/julia && \\\n    rm julia-1.0.2-linux-x86_64.tar.gz\n\n# Install texlive separately, in three parts, because it is so large.\n\n# First install some non-texlive packages which are recommended but will be skipped when we install texlive\n# in order to not install the documentation.\n#\n# biber depends on libwww-perl which has a tree of recommended packages\n# texlive-base depends on xdg-utils which has a tree of recommended packages\n# texinfo depends upon libxml-libxml-perl which has a tree of recommended packages\nRUN apt-get update -qq && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    libfile-homedir-perl \\\n    libwww-perl \\\n    libxml-libxml-perl \\\n    libyaml-tiny-perl \\\n    ruby \\\n    tcl \\\n    tex-gyre \\\n    tk \\\n    xdg-utils \\\n    xzdec && \\\n    rm -rf /var/lib/apt/lists/*\n\n# First part of texlive itself. Use --no-install-recommends to avoid installing ~750MB of documentation\nRUN apt-get update -qq && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n    texlive \\\n    texlive-fonts-extra \\\n    texlive-generic-recommended && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Second part of texlive itself. Use --no-install-recommends to avoid installing ~750MB of documentation\nRUN apt-get update -qq && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n    biber \\\n    lmodern \\\n    prosper \\\n    ps2eps \\\n    texinfo \\\n    texlive-bibtex-extra \\\n    texlive-extra-utils \\\n    texlive-font-utils \\\n    texlive-generic-extra \\\n    texlive-lang-arabic \\\n    texlive-latex-extra \\\n    texlive-luatex \\\n    texlive-pstricks \\\n    texlive-xetex && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Set default locale\nRUN update-locale --reset LANG=C.UTF-8\n\nARG R_VERSION=3.5.3\n\n# Install R\nRUN wget https://cdn.rstudio.com/r/ubuntu-1804/R-${R_VERSION}-ubuntu-1804.tar.gz -O /tmp/R-${R_VERSION}.tar.gz && \\\n    mkdir -p /opt/R && \\\n    tar zx -C /opt/R -f /tmp/R-${R_VERSION}.tar.gz && \\\n    ln -s /opt/R/${R_VERSION}/bin/R /usr/bin/R && \\\n    ln -s /opt/R/${R_VERSION}/bin/Rscript /usr/bin/Rscript && \\\n    ln -s /opt/R/${R_VERSION}/lib/R /usr/lib/R && \\\n    rm /tmp/R-${R_VERSION}.tar.gz\n\n# set UTF-8\nRUN echo \"LANG=C.UTF-8\" >> /usr/lib/R/etc/Renviron.site\n"
}