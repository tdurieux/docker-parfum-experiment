{
  "startTime": 1674236697500,
  "endTime": 1674236698005,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 53,
        "columnEnd": 65
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 5,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 5,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################################\n#  Preparation stage: extract and cleanup  #\n############################################\n\nFROM debian:buster-slim AS extract\nARG WITH_JMX\nCOPY datadog-agent*_amd64.deb /\nWORKDIR /output\n\n# Get s6-overlay and check gpg signature\nENV S6_VERSION v1.21.2.2\nADD https://github.com/just-containers/s6-overlay/releases/download/${S6_VERSION}/s6-overlay-amd64.tar.gz /output/s6.tgz\nADD https://github.com/just-containers/s6-overlay/releases/download/${S6_VERSION}/s6-overlay-amd64.tar.gz.sig /tmp/s6.tgz.sig\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y gpg gpg-agent curl ca-certificates \\\n && curl -f https://keybase.io/justcontainers/key.asc | gpg --batch --import \\\n && gpg --batch --verify /tmp/s6.tgz.sig /output/s6.tgz && rm -rf /var/lib/apt/lists/*;\n\n# Extract and cleanup:\n#   - unused systemd unit\n#   - GPL sources for embedded software  # FIXME: move upstream\n#   - docs and manpages                  # FIXME: move upstream\n#   - static libraries                   # FIXME: move upstream\n#   - jmxfetch on nojmx build\nRUN dpkg -x /datadog-agent*_amd64.deb . \\\n && rm -rf usr etc/init lib \\\n    opt/datadog-agent/sources \\\n    opt/datadog-agent/embedded/share/doc \\\n    opt/datadog-agent/embedded/share/man \\\n    # remove libcurl 4.4.0 - it gets removed later anyway but the docker store scanner doesn't see that\n    opt/datadog-agent/embedded/lib/libcurl.so.4.4.0 \\\n    # ditto for this older libsystemd\n    usr/lib/x86_64-linux-gnu/libsystemd.so.0.21.0 \\\n    # self-test certificates that are detected (false positive) as private keys\n    opt/datadog-agent/embedded/lib/python2.7/site-packages/Cryptodome/SelfTest \\\n && find opt/datadog-agent/ -iname \"*.a\" -delete \\\n && if [ -z \"$WITH_JMX\" ]; then rm -rf opt/datadog-agent/bin/agent/dist/jmx; fi \\\n && ln -s /opt/datadog-agent/embedded/ssl etc/ssl \\\n && mkdir conf.d checks.d\n\n# Configuration:\n#   - copy default config files\nCOPY datadog*.yaml etc/datadog-agent/\n\n\n######################################\n#  Actual docker image construction  #\n######################################\n\nFROM debian:buster-slim AS release\nLABEL maintainer \"Datadog <package@datadoghq.com>\"\nARG WITH_JMX\nENV DOCKER_DD_AGENT=true \\\n    PATH=/opt/datadog-agent/bin/agent/:/opt/datadog-agent/embedded/bin/:$PATH \\\n    CURL_CA_BUNDLE=/opt/datadog-agent/embedded/ssl/certs/cacert.pem \\\n    # Pass envvar variables to agents\n    S6_KEEP_ENV=1 \\\n    # Direct all agent logs to stdout\n    S6_LOGGING=0 \\\n    # Exit container if entrypoint fails\n    S6_BEHAVIOUR_IF_STAGE2_FAILS=2 \\\n    # Allow readonlyrootfs\n    S6_READ_ONLY_ROOT=1\n\n# Install openjdk-8-jre-headless on jmx flavor\nRUN if [ -n \"$WITH_JMX\" ]; then echo \"Pulling openjdk-8 from stable\" \\\n && echo \"deb http://deb.debian.org/debian stretch main\" > /etc/apt/sources.list.d/stretch.list \\\n && echo \"deb http://security.debian.org/debian-security stretch/updates main\" >> /etc/apt/sources.list.d/stretch.list \\\n && echo \"deb http://deb.debian.org/debian stretch-updates main\" >> /etc/apt/sources.list.d/stretch.list \\\n && apt-get update \\\n && mkdir /usr/share/man/man1 \\\n && apt-get install --no-install-recommends -y openjdk-8-jre-headless \\\n && apt-get clean \\\n && rm /etc/apt/sources.list.d/stretch.list \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*; fi\n\n# make sure we have recent dependencies\nRUN apt-get update \\\n  # CVE-fixing time! \\\n  && apt-get install --no-install-recommends -y util-linux ncurses-bin ncurses-base libncursesw5:amd64 \\\n  # https://security-tracker.debian.org/tracker/CVE-2018-15686\n  && apt-get install --no-install-recommends -y libudev1 libsystemd0 \\\n  # https://security-tracker.debian.org/tracker/CVE-2016-2779\n  && rm -f /usr/sbin/runuser \\\n  # https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-6954\n  && rm -f /usr/lib/x86_64-linux-gnu/libdb-5.3.so \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Copy agent from extract stage\nCOPY --from=extract /output/ /\n\n# S6 entrypoint, service definitions, healthcheck probe\nCOPY s6-services /etc/services.d/\nCOPY entrypoint /etc/cont-init.d/\nCOPY probe.sh initlog.sh secrets-helper/readsecret.py /\n\n# Extract s6-overlay\n#\n# This step is dependant on the distribution's filesystem layout:\n# - When Buster moved to merged-usr (/bin/ as a symlink to /usr/bin),\n#   we had to change the extraction logic, see #1591\n# - The debian image is now built with merged-usr explicitly disabled,\n#   see https://github.com/debuerreotype/debuerreotype/pull/50\nRUN tar xzf s6.tgz \\\n && rm s6.tgz \\\n# Prepare for running without root\n# - Create a dd-agent:root user and give it permissions on relevant folders\n# - Remove the /var/run -> /run symlink and create a legit /var/run folder\n# as some docker versions re-create /run from zero at container start\n && adduser --system --no-create-home --disabled-password --ingroup root dd-agent \\\n && rm /var/run && mkdir -p /var/run/s6 \\\n && chown -R dd-agent:root /etc/datadog-agent/ /etc/s6/ /var/run/s6/ /var/log/datadog/ \\\n && chmod g+r,g+w,g+X -R /etc/datadog-agent/ /etc/s6/ /var/run/s6/ /var/log/datadog/ \\\n && chmod 755 /probe.sh /initlog.sh \\\n && chown root:root /readsecret.py \\\n && chmod 500 /readsecret.py\n\n# Override the exit script by ours to fix --pid=host operations\nCOPY init-stage3 /etc/s6/init/init-stage3\n\n# Expose DogStatsD and trace-agent ports\nEXPOSE 8125/udp 8126/tcp\n\nHEALTHCHECK --interval=2m --timeout=5s --retries=2 \\\n  CMD [\"/probe.sh\"]\n\n# Leave following directories RW to allow use of kubernetes readonlyrootfs flag\nVOLUME [\"/var/run/s6\", \"/etc/datadog-agent\", \"/var/log/datadog\", \"/tmp\"]\n\nCMD [\"/init\"]\n\n\n################################################################\n#  Sanity checks on the image contents                         #\n#  Build the release artifact with \"--target release\" to skip  #\n################################################################\n\nFROM release AS testing\nARG WITH_JMX\n\nCOPY test_*.py /\nRUN python /test_image_contents.py -v\n"
}