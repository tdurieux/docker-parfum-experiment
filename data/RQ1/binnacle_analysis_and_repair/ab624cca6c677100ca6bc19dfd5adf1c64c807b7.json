{
  "startTime": 1674238927511,
  "endTime": 1674238928402,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 11,
        "columnEnd": 43
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 11,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# NOTE: THIS DOCKERFILE IS GENERATED VIA \"update.sh\"\n#\n# PLEASE DO NOT EDIT IT DIRECTLY.\n#\nFROM php:7.3-apache-stretch\n\nLABEL maintainer=\"dominik@pfaffenbauer.at\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y lsb-release \\\n    && echo \"deb http://deb.debian.org/debian $(lsb_release -sc)-backports main\" > /etc/apt/sources.list.d/backports.list \\\n    && apt-get update && apt-get install -y --no-install-recommends \\\n        autoconf automake libtool nasm make pkg-config libz-dev build-essential openssl g++ \\\n        zlib1g-dev libicu-dev libbz2-dev libpng-dev libc-client-dev \\\n        libkrb5-dev libxml2-dev libxslt1.1 libxslt1-dev locales locales-all \\\n        ffmpeg html2text ghostscript libreoffice pngcrush jpegoptim exiftool poppler-utils git wget \\\n        libx11-dev libjpeg-dev python3-pip opencv-data webp graphviz cmake unzip cron \\\n        liblcms2-dev liblqr-1-0-dev libpng-dev libopenjp2-7-dev libtiff-dev libfreetype6-dev \\\n        libfontconfig1-dev libfftw3-dev libltdl-dev liblzma-dev libopenexr-dev \\\n        libwmf-dev libdjvulibre-dev libpango1.0-dev libxext-dev libxt-dev librsvg2-dev libzip-dev \\\n        libpng-dev libfreetype6-dev libjpeg-dev libxpm-dev libwebp-dev \\\n\n    && docker-php-ext-configure gd \\\n        --with-freetype-dir=/usr/include/ \\\n        --with-jpeg-dir=/usr/include/ \\\n        --with-xpm-dir=/usr/include \\\n        --with-webp-dir=/usr/include/ \\\n    && docker-php-ext-install intl mbstring mysqli bcmath gd bz2 soap xmlrpc xsl pdo pdo_mysql fileinfo exif zip opcache \\\n\n    && wget https://www.imagemagick.org/download/ImageMagick.tar.gz \\\n        && tar -xvf ImageMagick.tar.gz \\\n        && cd ImageMagick-7.* \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        && make \\\n        && make install \\\n        && ldconfig /usr/local/lib \\\n        && pecl install imagick \\\n        && pecl install apcu \\\n        && cd .. \\\n        && rm -rf ImageMagick* \\\n\n    && pecl install redis \\\n    && docker-php-ext-enable redis imagick apcu \\\n    && docker-php-ext-configure imap --with-kerberos --with-imap-ssl \\\n    && docker-php-ext-install imap \\\n    && docker-php-ext-enable imap \\\n\n    && cd ~ \\\n\n    && wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz \\\n        && tar xvf wkhtmltox-0.12.4_linux-generic-amd64.tar.xz \\\n        && mv wkhtmltox/bin/wkhtmlto* /usr/bin/ \\\n        && rm -rf wkhtmltox \\\n\n    && git clone https://github.com/mozilla/mozjpeg.git \\\n        && cd mozjpeg \\\n        && cmake -G\"Unix Makefiles\" \\\n        && make \\\n        && make install \\\n        && ln -s /opt/mozjpeg/bin/cjpeg /usr/bin/cjpeg \\\n        && cd .. \\\n        && rm -rf mozjpeg \\\n\n    && git clone https://github.com/wavexx/facedetect \\\n        && pip3 install --no-cache-dir numpy opencv-python \\\n        && cd facedetect \\\n        && cp facedetect /usr/local/bin \\\n        && cd .. \\\n        && rm -rf facedetect \\\n\n    && git clone https://github.com/google/zopfli.git \\\n        && cd zopfli \\\n        && make \\\n        && cp zopfli /usr/bin/zopflipng \\\n        && cd .. \\\n        && rm -rf zopfli \\\n\n    && wget https://static.jonof.id.au/dl/kenutils/pngout-20150319-linux.tar.gz \\\n        && tar -xf pngout-20150319-linux.tar.gz \\\n        && rm pngout-20150319-linux.tar.gz \\\n        && cp pngout-20150319-linux/x86_64/pngout /bin/pngout \\\n        && cd .. \\\n        && rm -rf pngout-20150319-linux \\\n\n    && wget https://prdownloads.sourceforge.net/advancemame/advancecomp-1.17.tar.gz \\\n        && tar zxvf advancecomp-1.17.tar.gz \\\n        && cd advancecomp-1.17 \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        && make \\\n        && make install \\\n        && cd .. \\\n        && rm -rf advancecomp-1.17 \\\n\n    && apt-get autoremove -y \\\n        && apt-get remove -y autoconf automake libtool nasm make pkg-config libz-dev build-essential g++ \\\n        && apt-get clean; rm advancecomp-1.17.tar.gz rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* ~/.composer\n\nENV COMPOSER_ALLOW_SUPERUSER 1\nENV COMPOSER_MEMORY_LIMIT -1\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\n\nRUN set -eux; \\\n    composer global require \"hirak/prestissimo:^0.3\" --prefer-dist --no-progress --no-suggest --classmap-authoritative; \\\n    composer clear-cache\nENV PATH=\"${PATH}:/root/.composer/vendor/bin\"\n\n##<debug>##\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      autoconf automake libtool nasm make pkg-config libz-dev build-essential g++ iproute2 \\\n    && pecl install xdebug \\\n    && docker-php-ext-enable xdebug \\\n    && apt-get autoremove -y \\\n    && apt-get remove -y autoconf automake libtool nasm make pkg-config libz-dev build-essential g++ \\\n    && apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* ~/.composer\n\nRUN echo \"xdebug.idekey = PHPSTORM\" >> /usr/local/etc/php/conf.d/20-xdebug.ini && \\\n    echo \"xdebug.default_enable = 1\" >> /usr/local/etc/php/conf.d/20-xdebug.ini && \\\n    echo \"xdebug.remote_enable = 1\" >> /usr/local/etc/php/conf.d/20-xdebug.ini && \\\n    echo \"xdebug.remote_autostart = 1\" >> /usr/local/etc/php/conf.d/20-xdebug.ini && \\\n    echo \"xdebug.remote_connect_back = 0\" >> /usr/local/etc/php/conf.d/20-xdebug.ini && \\\n    echo \"xdebug.profiler_enable = 0\" >> /usr/local/etc/php/conf.d/20-xdebug.ini && \\\n    echo \"xdebug.remote_host = 127.0.0.1\" >> /usr/local/etc/php/conf.d/20-xdebug.ini\n\nENV PHP_DEBUG 1\nENV PHP_IDE_CONFIG serverName=localhost\n\nCOPY entrypoint.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/entrypoint.sh\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n##</debug>##\n\n##<autogenerated>##\nENV APACHE_DOCUMENT_ROOT /var/www/html/web\n\nRUN a2enmod rewrite \\\n      && a2enmod ssl \\\n      && mkdir /etc/apache2/ssl \\\n      && touch /etc/apache2/ssl/localhost.key \\\n      && touch /etc/apache2/ssl/localhost.crt \\\n      && openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/apache2/ssl/localhost.key \\\n        -subj '/C=UK/ST=London/L=London/O=Digital Web Ltd./CN=localhost/' -out /etc/apache2/ssl/localhost.crt \\\n        && chmod 600 /etc/apache2/ssl/*\n\nRUN usermod -u 1000 www-data \\\n        && usermod -G staff www-data \\\n        && sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf \\\n        && sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf\n\nCOPY 001-ssl.conf /etc/apache2/sites-enabled\n##</autogenerated>##\n\n##<autogenerated>##\nCMD [\"apache2-foreground\"]\n##</autogenerated>##\n\n"
}