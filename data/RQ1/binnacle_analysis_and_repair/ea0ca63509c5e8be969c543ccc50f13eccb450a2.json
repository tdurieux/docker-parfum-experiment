{
  "startTime": 1674248627384,
  "endTime": 1674248627654,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.2.1-fpm-alpine3.7\n\nRUN apk add --no-cache --virtual .persistent-deps \\\n    geoip \\\n    yarn \\\n    freetype \\\n    tzdata\n\nRUN set -xe \\\n\t&& apk add --no-cache --virtual .build-deps \\\n\t\t$PHPIZE_DEPS \\\n        freetype-dev \\\n        geoip-dev \\\n        postgresql-dev \\\n        libpng \\\n        libjpeg-turbo\n\n# Install Supervisor\nRUN set -xe \\\n    && apk add --no-cache -u python py-pip \\\n    && pip install --no-cache-dir supervisor==3.3.1\n\n# Install required PHP extensions\nRUN set -xe \\\n    && docker-php-ext-install bcmath \\\n    && docker-php-ext-install gd \\\n    && docker-php-ext-install pdo_mysql \\\n    && docker-php-ext-install pgsql pdo_pgsql  \\\n    && pecl install mongodb \\\n    && pecl install xdebug-2.6.0beta1 \\\n    && echo 'no' | pecl install redis  \\\n    && pecl install geoip-1.1.1\n\nRUN  set -xe \\\n    && echo 'extension=geoip.so'     > $PHP_INI_DIR/conf.d/geoip.ini \\\n    && echo 'extension=redis.so'     > $PHP_INI_DIR/conf.d/redis.ini \\\n    && echo 'extension=mongodb.so'   > $PHP_INI_DIR/conf.d/mongodb.ini \\\n    && { \\\n        echo 'zend_extension=xdebug.so'; \\\n        echo 'xdebug.idekey=xdebug'; \\\n        echo 'xdebug.max_nesting_level=500'; \\\n        echo 'xdebug.remote_enable=On'; \\\n        echo 'xdebug.remote_connect_back=1'; \\\n        echo 'xdebug.remote_port=9000'; \\\n    } > $PHP_INI_DIR/conf.d/xdebug.ini\n\nRUN set -ex \\\n    && cd /tmp \\\n    && curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer \\\n    && wget https://phar.phpunit.de/phpunit-6.5.phar \\\n    && mv phpunit-6.5.phar /usr/local/bin/phpunit \\\n    && chmod +x /usr/local/bin/phpunit\n\nCOPY ./config/docker/php/dev/php.ini $PHP_INI_DIR/\nCOPY ./config/docker/php/dev/php-fpm/www.conf $PHP_INI_DIR/php-fpm.d/\n\n# Add a cron entry for Laravel's command scheduler\nRUN set -ex \\\n    && crontab -l | { cat; echo \"* * * * * php /var/www/html/artisan schedule:run 2>&1 | /usr/bin/logger -t laravel_scheduler\"; } | crontab -\n\nCOPY ./config/docker/php/dev/supervisord.conf /etc/supervisord.conf\n\nADD . /var/www/html\n\nRUN set -xe \\\n    && cd /var/www/html \\\n    && yarn install \\\n    && composer install --no-progress && yarn cache clean;\n\n# Set container entrypoint\nCOPY ./config/docker/php/dev/entrypoint.sh /\nRUN chmod +x /entrypoint.sh\nCMD [\"/entrypoint.sh\"]\n\nVOLUME /var/www"
}