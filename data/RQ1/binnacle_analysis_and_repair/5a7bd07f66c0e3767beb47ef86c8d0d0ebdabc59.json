{
  "startTime": 1674242147867,
  "endTime": 1674242148412,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 12,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 12,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 23,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 5,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 143
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 11,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 5,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 143
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 11,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y python3-pip python3-dev \\\n  && cd /usr/local/bin \\\n  && ln -s /usr/bin/python3 python \\\n  && pip3 install --no-cache-dir --upgrade pip && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get -y --no-install-recommends install apache2 apt-utils build-essential curl git unzip vim wget sudo libudunits2-dev libgeos-dev libgdal-dev && rm -rf /var/lib/apt/lists/*;\n# install ensembl dependencies\n#RUN cpanm Test::Object PPI::Document Task::Weaken Test::SubCalls Test::Object DBI DBD::mysql Archive::Zip Perl::Critic Set::IntervalTree\n\nRUN apt-get update && apt-get install -y --no-install-recommends apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\n\nRUN sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9\nRUN sudo apt-get update \\\n   && sudo apt-get -y --no-install-recommends install software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN sudo add-apt-repository 'deb [arch=amd64,i386] https://cran.rstudio.com/bin/linux/ubuntu xenial/'\n\nUSER root\nWORKDIR /\n\nENV PACKAGE_BIO=\"libhts1 bedtools\"\nENV PACKAGE_DEV=\"gfortran gcc-multilib autoconf libmariadb-client-lgpl-dev liblzma-dev libncurses5-dev libblas-dev liblapack-dev libssh2-1-dev libxml2-dev vim libssl-dev libcairo2-dev libbz2-dev libcurl4-openssl-dev\"\nENV PYTHON_MODULES=\"numpy cython scipy pandas cyvcf2 toml\"\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tnano ed locales vim-tiny fonts-texgyre \\\n    $PACKAGE_DEV $PACKAGE_BIO \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN apt-get autoremove\n\nRUN wget https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2\nRUN bunzip2 -dc samtools-1.9.tar.bz2 | tar xvf -\nRUN cd samtools-1.9 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/bin && make && make install\n\nWORKDIR /\n\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  r-base-core \\\n  r-recommended \\\n \tr-base && rm -rf /var/lib/apt/lists/*;\n\nRUN R -e \"install.packages(c('configr','rmarkdown','dplyr','stringr','tidyr','magrittr','devtools','htmltools','plotly','ggplot2'), dependencies = T, repos = 'http://cran.us.r-project.org')\"\nRUN R -e \"library(devtools); devtools::install_github('rstudio/DT'); devtools::install_github('mjkallen/rlogging'); devtools::install_github('kent37/summarywidget')\"\nRUN R -e \"library(devtools); devtools::install_github('rstudio/crosstalk')\"\nRUN rm -rf /tmp/R*\n\n## Install tools used for compilation\nRUN sudo -H pip install --upgrade pip\nRUN sudo -H pip install --no-cache-dir -U setuptools\nRUN sudo -H pip install --no-cache-dir $PYTHON_MODULES\n\n## Clean Up\nRUN apt-get clean autoclean\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN rm -rf /var/lib/{dpkg,cache,log}\n\nRUN rm -rf /samtools-1.9.tar.bz2\n\nENV PATH=/usr/local/bin/bin:$PATH\n\nWORKDIR /\nENV HOME=/usr/local\nRUN curl -f -O https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\nRUN bash Miniconda3-latest-Linux-x86_64.sh -b\nENV PATH=$PATH:/usr/local/miniconda3/bin:\nRUN conda config --add channels bioconda\nRUN conda install mosdepth\nRUN rm -rf /Miniconda3-latest-Linux-x86_64.sh\n\n## Install pandoc (for HTML report generation)\nRUN wget https://github.com/jgm/pandoc/releases/download/2.4/pandoc-2.4-1-amd64.deb && \\\n  dpkg -i pandoc* && \\\n  rm pandoc* && \\\n  apt-get clean\n\nWORKDIR /\nADD cacao.R /\nADD cacao.py /\n\nWORKDIR /\nADD R /\nRUN R -e \"devtools::install('cacao')\"\n\nWORKDIR /workdir/output\n"
}