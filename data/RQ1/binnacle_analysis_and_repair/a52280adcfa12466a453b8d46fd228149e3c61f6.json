{
  "startTime": 1674251559129,
  "endTime": 1674251559293,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 109
      }
    }
  ],
  "repairedDockerfile": "FROM obgm/libcoap:build-env\n\nRUN apt-get update && apt-get install --no-install-recommends -y cmake git g++ && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean\n\nENV libcoap_dir=/home/libcoap\nADD . $libcoap_dir\nWORKDIR $libcoap_dir\n\nRUN ./autogen.sh --clean && ./autogen.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-documentation --enable-tests --enable-examples --with-openssl && make install clean\n\nWORKDIR /home\nRUN git clone --depth 1 https://github.com/cabo/cn-cbor.git && cd cn-cbor && ./build.sh all doc install\n\n# The image for development with libcoap\nFROM debian:testing-slim\n\nRUN apt-get update && apt-get install --no-install-recommends -y autoconf automake gcc g++ gdb libtool libtool-bin make \\\n pkg-config libssl-dev libgnutls28-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y iproute2 lsof net-tools inetutils-ping netcat-openbsd less vim && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean\n\nCOPY --from=0 /usr/local/include/coap2 /usr/local/include/coap2\nCOPY --from=0 /usr/local/lib /usr/local/lib\nCOPY --from=0 /usr/local/bin/coap-client /usr/local/bin/\nCOPY --from=0 /usr/local/include/cn-cbor /usr/local/include/cn-cbor\nRUN echo \"/usr/local/lib\" >>/etc/ld.so.conf.d/usr_local.conf && ldconfig /usr/local/lib\n\nARG user=user\nRUN adduser --disabled-password --gecos '' $user\nRUN chown -R $user:$user /home/$user\nWORKDIR /home/$user\nUSER $user\n\nEXPOSE 5683 5684\n"
}