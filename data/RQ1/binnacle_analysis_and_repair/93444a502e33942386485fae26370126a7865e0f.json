{
  "startTime": 1674248845081,
  "endTime": 1674248846022,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 9,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 9,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 113,
        "lineEnd": 117,
        "columnStart": 37,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 9,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 32,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 138,
        "lineEnd": 141,
        "columnStart": 9,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 9,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 113,
        "lineEnd": 117,
        "columnStart": 37,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 9,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 32,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 138,
        "lineEnd": 141,
        "columnStart": 9,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 9,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "#\n# DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n#\nFROM openjdk:8-jdk-slim\n\nLABEL maintainer=\"marc@circleci.com\"\n\n# Initial Command run as `root`.\n\nADD https://raw.githubusercontent.com/circleci/circleci-images/master/android/bin/circle-android /bin/circle-android\nRUN chmod +rx /bin/circle-android\n\n# Skip the first line of the Dockerfile template (FROM ${BASE})\n\n# make Apt non-interactive\nRUN echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/90circleci \\\n  && echo 'DPkg::Options \"--force-confnew\";' >> /etc/apt/apt.conf.d/90circleci\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Debian Jessie is EOL'd and original repos don't work.\n# Switch to the archive mirror until we can get people to\n# switch to Stretch.\nRUN if grep -q Debian /etc/os-release && grep -q jessie /etc/os-release; then \\\n\trm /etc/apt/sources.list \\\n    && echo \"deb http://archive.debian.org/debian/ jessie main\" >> /etc/apt/sources.list \\\n    && echo \"deb http://security.debian.org/debian-security jessie/updates main\" >> /etc/apt/sources.list \\\n\t; fi\n\n# Make sure PATH includes ~/.local/bin\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=839155\nRUN echo 'PATH=\"$HOME/.local/bin:$PATH\"' >> /etc/profile.d/user-local-path.sh\n\n# man directory is missing in some base images\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199\nRUN apt-get update \\\n  && mkdir -p /usr/share/man/man1 \\\n  && apt-get install --no-install-recommends -y \\\n    git mercurial xvfb apt \\\n    locales sudo openssh-client ca-certificates tar gzip parallel \\\n    net-tools netcat unzip zip bzip2 gnupg curl wget make && rm -rf /var/lib/apt/lists/*;\n\n\n# Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n\n# Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=C.UTF-8\n\n# install jq\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n  && chmod +x /usr/bin/jq \\\n  && jq --version\n\n# Install Docker\n\n# Docker.com returns the URL of the latest binary when you hit a directory listing\n# We curl this URL and `grep` the version out.\n# The output looks like this:\n\n#>    # To install, run the following commands as root:\n#>    curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-17.05.0-ce.tgz && tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin\n#>\n#>    # Then start docker in daemon mode:\n#>    /usr/local/bin/dockerd\n\nRUN set -ex \\\n  && export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*\\.tgz' | sort -r | head -n 1) \\\n  && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n  && echo Docker URL: $DOCKER_URL \\\n  && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n  && ls -lha /tmp/docker.tgz \\\n  && tar -xz -C /tmp -f /tmp/docker.tgz \\\n  && mv /tmp/docker/* /usr/bin \\\n  && rm -rf /tmp/docker /tmp/docker.tgz \\\n  && which docker \\\n  && (docker version || true)\n\n# docker compose\nRUN COMPOSE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose $COMPOSE_URL \\\n  && chmod +x /usr/bin/docker-compose \\\n  && docker-compose version\n\n# install dockerize\nRUN DOCKERIZE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz $DOCKERIZE_URL \\\n  && tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz \\\n  && rm -rf /tmp/dockerize-linux-amd64.tar.gz \\\n  && dockerize --version\n\nRUN groupadd --gid 3434 circleci \\\n  && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci \\\n  && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci \\\n  && echo 'Defaults    env_keep += \"DEBIAN_FRONTEND\"' >> /etc/sudoers.d/env_keep\n\n# BEGIN IMAGE CUSTOMIZATIONS\n# END IMAGE CUSTOMIZATIONS\n\nUSER circleci\n\nCMD [\"/bin/sh\"]\n\n\n# Now commands run as user `circleci`\n\n# Switching user can confuse Docker's idea of $HOME, so we set it explicitly\nENV HOME /home/circleci\n\n# Install Google Cloud SDK\n\nRUN sudo apt-get update -qqy && sudo apt-get install --no-install-recommends -qqy \\\n        python-dev \\\n        python-setuptools \\\n        apt-transport-https \\\n        lsb-release && rm -rf /var/lib/apt/lists/*;\n\nRUN sudo apt-get install -y --no-install-recommends gcc-multilib && \\\n    sudo easy_install -U pip && \\\n    sudo pip uninstall crcmod && \\\n    sudo pip install --no-cache-dir -U crcmod && rm -rf /var/lib/apt/lists/*;\n\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" && \\\n    echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n    curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\n\nRUN sudo apt-get update && sudo apt-get install --no-install-recommends -y google-cloud-sdk && \\\n    gcloud config set core/disable_usage_reporting true && \\\n    gcloud config set component_manager/disable_update_check true && rm -rf /var/lib/apt/lists/*;\n\nARG sdk_version=sdk-tools-linux-3859397.zip\nARG android_home=/opt/android/sdk\n\n# SHA-256 444e22ce8ca0f67353bda4b85175ed3731cae3ffa695ca18119cbacef1c1bea0\n\nRUN sudo apt-get update && \\\n    sudo apt-get install --no-install-recommends --yes \\\n        xvfb lib32z1 lib32stdc++6 build-essential \\\n        libcurl4-openssl-dev libglu1-mesa libxi-dev libxmu-dev \\\n        libglu1-mesa-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install Ruby\nRUN cd /tmp && wget -O ruby-install-0.6.1.tar.gz https://github.com/postmodern/ruby-install/archive/v0.6.1.tar.gz && \\\n    tar -xzvf ruby-install-0.6.1.tar.gz && \\\n    cd ruby-install-0.6.1 && \\\n    sudo make install && \\\n    ruby-install --cleanup ruby 2.6.1 && \\\n    rm -r /tmp/ruby-install-* && rm ruby-install-0.6.1.tar.gz\n\nENV PATH ${HOME}/.rubies/ruby-2.6.1/bin:${PATH}\nRUN echo 'gem: --env-shebang --no-rdoc --no-ri' >> ~/.gemrc && gem install bundler\n\n# Download and install Android SDK\nRUN sudo mkdir -p ${android_home} && \\\n    sudo chown -R circleci:circleci ${android_home} && \\\n    curl --silent --show-error --location --fail --retry 3 --output /tmp/${sdk_version} https://dl.google.com/android/repository/${sdk_version} && \\\n    unzip -q /tmp/${sdk_version} -d ${android_home} && \\\n    rm /tmp/${sdk_version}\n\n# Set environmental variables\nENV ANDROID_HOME ${android_home}\nENV ADB_INSTALL_TIMEOUT 120\nENV PATH=${ANDROID_HOME}/emulator:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${PATH}\n\nRUN mkdir ~/.android && echo '### User Sources for Android SDK Manager' > ~/.android/repositories.cfg\n\nRUN yes | sdkmanager --licenses && yes | sdkmanager --update\n\n# Update SDK manager and install system image, platform and build tools\nRUN sdkmanager \\\n  \"tools\" \\\n  \"platform-tools\" \\\n  \"emulator\"\n\nRUN sdkmanager \\\n  \"build-tools;25.0.0\" \\\n  \"build-tools;25.0.1\" \\\n  \"build-tools;25.0.2\" \\\n  \"build-tools;25.0.3\" \\\n  \"build-tools;26.0.1\" \\\n  \"build-tools;26.0.2\" \\\n  \"build-tools;27.0.0\" \\\n  \"build-tools;27.0.1\" \\\n  \"build-tools;27.0.2\" \\\n  \"build-tools;27.0.3\" \\\n  \"build-tools;28.0.0\" \\\n  \"build-tools;28.0.1\" \\\n  \"build-tools;28.0.2\" \\\n  \"build-tools;28.0.3\" \\\n  \"build-tools;29.0.0\"\n\n# API_LEVEL string gets replaced by m4\nRUN sdkmanager \"platforms;android-23\"\n"
}