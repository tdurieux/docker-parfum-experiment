{
  "startTime": 1674235517599,
  "endTime": 1674235518180,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 7,
        "columnEnd": 103
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 11,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 68,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 74,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 102,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 1
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n#--------------------------------------------------------------------------\n# Image Setup\n#--------------------------------------------------------------------------\n#\n\nARG PHP_VERSION=${PHP_VERSION}\nFROM php:${PHP_VERSION}-alpine\n\nLABEL maintainer=\"Mahmoud Zalt <mahmoud@zalt.me>\"\n\nRUN apk --update --no-cache add wget \\\n  curl \\\n  git \\\n  build-base \\\n  libmemcached-dev \\\n  libmcrypt-dev \\\n  libxml2-dev \\\n  pcre-dev \\\n  zlib-dev \\\n  autoconf \\\n  cyrus-sasl-dev \\\n  libgsasl-dev \\\n  supervisor\n\nRUN docker-php-ext-install mysqli mbstring pdo pdo_mysql tokenizer xml pcntl\nRUN pecl channel-update pecl.php.net && pecl install memcached mcrypt-1.0.1 && docker-php-ext-enable memcached\n\n# Add a non-root user:\nARG PUID=1000\nENV PUID ${PUID}\nARG PGID=1000\nENV PGID ${PGID}\n\nRUN addgroup -g ${PGID} laradock && \\\n    adduser -D -G laradock -u ${PUID} laradock\n\n#Install SOAP package:\nARG INSTALL_SOAP=false\nRUN if [ ${INSTALL_SOAP} = true ]; then \\\n    docker-php-ext-install soap \\\n;fi\n\n#Install BCMath package:\nARG INSTALL_BCMATH=false\nRUN if [ ${INSTALL_BCMATH} = true ]; then \\\n    docker-php-ext-install bcmath \\\n;fi\n\n# Install PostgreSQL drivers:\nARG INSTALL_PGSQL=false\nRUN if [ ${INSTALL_PGSQL} = true ]; then \\\n    apk --update --no-cache add postgresql-dev \\\n        && docker-php-ext-install pdo_pgsql \\\n; fi\n\n# Install ZipArchive:\nARG INSTALL_ZIP_ARCHIVE=false\nRUN if [ ${INSTALL_ZIP_ARCHIVE} = true ]; then \\\n    apk --update --no-cache add libzip-dev && \\\n    docker-php-ext-configure zip --with-libzip && \\\n    # Install the zip extension\n    docker-php-ext-install zip \\\n; fi\n\n# Install MySQL Client:\nARG INSTALL_MYSQL_CLIENT=false\nRUN if [ ${INSTALL_MYSQL_CLIENT} = true ]; then \\\n    apk --update --no-cache add mysql-client \\\n; fi\n\n# Install FFMPEG:\nARG INSTALL_FFMPEG=false\nRUN if [ ${INSTALL_FFMPEG} = true ]; then \\\n    apk --update --no-cache add ffmpeg \\\n; fi\n\n# Install AMQP:\nARG INSTALL_AMQP=false\n\nRUN if [ ${INSTALL_AMQP} = true ]; then \\\n    apk --update --no-cache add rabbitmq-c rabbitmq-c-dev && \\\n    pecl install amqp && \\\n    docker-php-ext-enable amqp && \\\n    docker-php-ext-install sockets \\\n; fi\n\n# Install Phalcon ext\nARG INSTALL_PHALCON=false\nARG PHALCON_VERSION\nENV PHALCON_VERSION ${PHALCON_VERSION}\n\nRUN if [ $INSTALL_PHALCON = true ]; then \\\n    apk --update --no-cache add unzip gcc make re2c bash \\\n    && curl -f -L -o /tmp/cphalcon.zip https://github.com/phalcon/cphalcon/archive/v${PHALCON_VERSION}.zip \\\n    && unzip -d /tmp/ /tmp/cphalcon.zip \\\n    && cd /tmp/cphalcon-${PHALCON_VERSION}/build \\\n    && ./install \\\n    && rm -rf /tmp/cphalcon* \\\n; fi\n\nRUN if [ $INSTALL_GHOSTSCRIPT = true ]; then \\\n    apk --update --no-cache add ghostscript \\\n; fi\n\n#Install GMP package:\nARG INSTALL_GMP=false\nRUN if [ ${INSTALL_GMP} = true ]; then \\\n   apk add --update --no-cache gmp gmp-dev \\\n   && docker-php-ext-install gmp \\\n;fi\n\n\nRUN rm /var/cache/apk/* \\\n    && mkdir -p /var/www\n\n\n###########################################################################\n# Swoole EXTENSION\n###########################################################################\n\nARG INSTALL_SWOOLE=false\n\nRUN if [ ${INSTALL_SWOOLE} = true ]; then \\\n    # Install Php Swoole Extension\n    if [ $(php -r \"echo PHP_MAJOR_VERSION;\") = \"5\" ]; then \\\n      pecl -q install swoole-2.0.10; \\\n    else \\\n      if [ $(php -r \"echo PHP_MINOR_VERSION;\") = \"0\" ]; then \\\n        pecl install swoole-2.2.0; \\\n      else \\\n        pecl install swoole; \\\n      fi \\\n    fi \\\n    && docker-php-ext-enable swoole \\\n;fi\n\n###########################################################################\n# Taint EXTENSION\n###########################################################################\n\nARG INSTALL_TAINT=false\n\nRUN if [ ${INSTALL_TAINT} = true ]; then \\\n    # Install Php TAINT Extension\n    if [ $(php -r \"echo PHP_MAJOR_VERSION;\") = \"7\" ]; then \\\n      pecl install taint; \\\n    fi && \\\n    docker-php-ext-enable taint \\\n;fi\n\n#\n#--------------------------------------------------------------------------\n# Optional Supervisord Configuration\n#--------------------------------------------------------------------------\n#\n# Modify the ./supervisor.conf file to match your App's requirements.\n# Make sure you rebuild your container with every change.\n#\n\nCOPY supervisord.conf /etc/supervisord.conf\n\nENTRYPOINT [\"/usr/bin/supervisord\", \"-n\", \"-c\",  \"/etc/supervisord.conf\"]\n\n#\n#--------------------------------------------------------------------------\n# Optional Software's Installation\n#--------------------------------------------------------------------------\n#\n# If you need to modify this image, feel free to do it right here.\n#\n    # -- Your awesome modifications go here -- #\n\n#\n#--------------------------------------------------------------------------\n# Check PHP version\n#--------------------------------------------------------------------------\n#\n\nRUN php -v | head -n 1 | grep -q \"PHP ${PHP_VERSION}.\"\n\n#\n#--------------------------------------------------------------------------\n# Final Touch\n#--------------------------------------------------------------------------\n#\n\nWORKDIR /etc/supervisor/conf.d/\n"
}