{
  "startTime": 1674250684600,
  "endTime": 1674250684730,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#FROM centos:latest\nFROM centos/s2i-base-centos7\n\nMAINTAINER Nick Harvey <nickharveyonline@gmail.com>\n\n# TensorBoard\nEXPOSE 6006\n# IPython\nEXPOSE 8888\n\nLABEL io.k8s.description=\"An open-source software library for Machine Intelligence\" \\\n      io.k8s.display-name=\"Tensorflow 0.12\" \\\n      io.openshift.expose-services=\"6006:http\" \\\n      io.openshift.expose-services=\"8888:http\" \\\n      io.openshift.tags=\"builder,python,python35,rh-python35,tensorflow\"\n\n#Update centos\nRUN yum update -y\n\n#Install Dependencies\nRUN yum groupinstall 'Development Tools' -y\nRUN yum install -y epel-release && rm -rf /var/cache/yum\nRUN yum install -y \\\n        curl \\\n        freetype-devel \\\n        libpng12-devel \\\n        pkgconfig \\\n        python \\\n        python-devel \\\n        rsync \\\n        unzip \\\n        nss_wrapper \\\n        gettext \\\n        python-pip \\\n        atlas \\\n        atlas-devel \\\n        gcc-gfortran \\\n        openssl-devel \\ \n        libffi-devel \\\n        && \\\n        yum clean all -y && rm -rf /var/cache/yum\n\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nRUN pip --no-cache-dir install \\\n        ipykernel \\\n        jupyter \\\n        matplotlib \\\n        numpy \\\n        scipy \\\n        sklearn \\\n        Pillow \\\n        && \\\n    python -m ipykernel.kernelspec\n\n# --- DO NOT EDIT OR DELETE BETWEEN THE LINES --- #\n# These lines will be edited automatically by parameterized_docker_build.sh. #\n# COPY _PIP_FILE_ /\n# RUN pip --no-cache-dir install /_PIP_FILE_\n# RUN rm -f /_PIP_FILE_\n\n# Install TensorFlow CPU version from central repo\nRUN pip --no-cache-dir install \\\n    http://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.12.1-cp27-none-linux_x86_64.whl\n#http://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.0.0-cp27-none-linux_x86_64.whl\n# --- ~ DO NOT EDIT OR DELETE BETWEEN THE LINES --- #\n\n# In order to drop the root user, we have to make some directories world\n# writable as OpenShift default security model is to run the container under\n# random UID\nRUN chown -R 1001:0 /opt/app-root && chmod -R og+rwx /opt/app-root\n\n# RUN ln -s /usr/bin/python3 /usr/bin/python#\n\n# Set up our notebook config.\nCOPY jupyter_notebook_config.py $HOME/.jupyter/\n\n# Copy sample notebooks.\nCOPY notebooks /notebooks\nRUN chmod -R og+rwx /notebooks\n\n# Jupyter has issues with being run directly:\n#   https://github.com/ipython/ipython/issues/7062\n# We just add a little wrapper script.\nCOPY run_jupyter.sh /\n\nWORKDIR /notebooks\n\nENTRYPOINT \"/run_jupyter.sh\"\n"
}