{
  "startTime": 1674244336635,
  "endTime": 1674244336786,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 110
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for Pega 8 Platform\n\n# Base image to extend from\nFROM tomcat:9-jre11\n\nLABEL vendor=\"Pegasystems Inc.\" \\\n      name=\"Pega Tomcat Node\" \\\n      version=\"2.0.0\"\n\nENV PEGA_DOCKER_VERSION=2.0\n\n# Create directory for storing heapdump\nRUN mkdir -p /heapdumps  && \\\n    chmod 770 /heapdumps\n\n# Create common directory for mounting configuration and libraries\nRUN mkdir -p /opt/pega && \\\n    chgrp -R 0 /opt/pega && \\\n    chmod -R g+rw /opt/pega\n\n# Create directory for filesystem repository\nRUN  mkdir -p /opt/pega/filerepo  && \\\n     chgrp -R 0 /opt/pega/filerepo && \\\n     chmod -R g+rw /opt/pega/filerepo\n\n# Create directory for mounting configuration files\nRUN  mkdir -p /opt/pega/config  && \\\n     chgrp -R 0 /opt/pega/config && \\\n     chmod -R g+rw /opt/pega/config\n\n# Create directory for mounting libraries\nRUN  mkdir -p /opt/pega/lib  && \\\n     chgrp -R 0 /opt/pega/lib && \\\n     chmod -R g+rw /opt/pega/lib\n\n# Create directory for mounting secrets\nRUN  mkdir -p /opt/pega/secrets  && \\\n     chgrp -R 0 /opt/pega && \\\n     chmod -R g+rw /opt/pega/secrets\n\n# Create directory for extra stream volume\nRUN mkdir -p /opt/pega/streamvol && \\\n    chgrp -R 0 /opt/pega/streamvol && \\\n    chmod -R g+rw /opt/pega/streamvol\n\n# Set up an empty JDBC URL which will, if set to a non-empty value, be used in preference\n# to the \"constructed\" JDBC URL\nENV JDBC_URL='' \\\n    DB_USERNAME='' \\\n    DB_PASSWORD='' \\\n    JDBC_CLASS=''\n\n# Load a default PostgreSQL driver on startup\nENV JDBC_DRIVER_URI=''\n\n# Provide variables for the JDBC connection string\nENV JDBC_MIN_ACTIVE=50 \\\n    JDBC_MAX_ACTIVE=250 \\\n    JDBC_MIN_IDLE=10 \\\n    JDBC_MAX_IDLE=50 \\\n    JDBC_MAX_WAIT=30000 \\\n    JDBC_INITIAL_SIZE=50 \\\n    JDBC_CONNECTION_PROPERTIES=\"socketTimeout=90\"\n\n# Provide variables for the name of the rules, data, and customerdata schemas\nENV RULES_SCHEMA=rules \\\n    DATA_SCHEMA=data \\\n    CUSTOMERDATA_SCHEMA=\n\n#Tomcat user environment variables for pega diagnostic user\nENV PEGA_DIAGNOSTIC_USER='' \\\n    PEGA_DIAGNOSTIC_PASSWORD=''\n\n# Parameterize variables to customize the tomcat runtime\nENV MAX_THREADS=\"300\" \\\n    JAVA_OPTS=\"\" \\\n    MAX_HEAP=\"4096m\" \\\n    INITIAL_HEAP=\"2048m\" \\\n    INDEX_DIRECTORY=\"NONE\" \\\n    HEAP_DUMP_PATH=\"/heapdumps\" \\\n    NODE_TYPE=\"\" \\\n    NODE_SETTINGS=\"\"\n\n# Configure Remote JMX support and bind to port 9001\nENV JMX_PORT=9001 \\\n    JMX_SERVER_HOSTNAME=127.0.0.1\n\n# Configure Cassandra.\nENV CASSANDRA_CLUSTER=false \\\n    CASSANDRA_NODES= \\\n    CASSANDRA_PORT=9042 \\\n    CASSANDRA_USERNAME= \\\n    CASSANDRA_PASSWORD=\n\n# Configure search nodes. Empty string falls back to search being done on the nodes themselves.\nENV PEGA_SEARCH_URL=\n\n#Set up volume for persistent Kafka data storage\nRUN  mkdir -p /opt/pega/kafkadata  && \\\n\t chgrp -R 0 /opt/pega/kafkadata && \\\n\t chmod -R g+rw /opt/pega/kafkadata\n\n# Remove existing webapps\nRUN rm -rf ${CATALINA_HOME}/webapps/*\n\n# Copy in tomcat configuration and application files\nCOPY tomcat-webapps ${CATALINA_HOME}/webapps/\nCOPY tomcat-bin ${CATALINA_HOME}/bin/\nCOPY tomcat-conf ${CATALINA_HOME}/conf/\nCOPY scripts /scripts\n\n#Installing dockerize for generating config files using templates\nRUN curl -f -sL https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz | tar zxf - -C /bin/\n\n# Update access of required directories to allow not running in root for openshift\nRUN chmod -R g+rw ${CATALINA_HOME}/logs  && \\\n    chmod -R g+rw ${CATALINA_HOME}/lib  && \\\n    chmod -R g+rw ${CATALINA_HOME}/work  && \\\n    chmod -R g+rw ${CATALINA_HOME}/conf  && \\\n    chmod -R g+x /scripts && \\\n    chmod g+r ${CATALINA_HOME}/conf/web.xml && \\\n    mkdir /search_index && \\\n    chmod -R g+w /search_index\n\nENTRYPOINT [\"/scripts/docker-entrypoint.sh\"]\nCMD [\"run\"]\n\n# Expose required ports\n\n# HTTP is 8080, JMX is 9001, Hazelcast is 5701-5710, Ignite is 47100, REST for Kafka is 7003\nEXPOSE 8080 9001 5701-5710 47100 7003\n"
}