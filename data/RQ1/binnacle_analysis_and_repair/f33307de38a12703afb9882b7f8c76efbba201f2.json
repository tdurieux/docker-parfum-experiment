{
  "startTime": 1674248491203,
  "endTime": 1674248491665,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 1,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 69,
        "lineEnd": 82,
        "columnStart": 1,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 69,
        "lineEnd": 82,
        "columnStart": 1,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedDockerfile": "# container for rsyslog development\n# creates the build environment\nFROM\tubuntu:16.04\nENV\tDEBIAN_FRONTEND=noninteractive\nRUN \tapt-get update && \\\n\tapt-get upgrade -y\nRUN apt-get install --no-install-recommends -y \\\n\tautoconf \\\n\tautoconf-archive \\\n\tautomake \\\n\tautotools-dev \\\n\tbison \\\n\tclang \\\n\tcurl \\\n\tdefault-jdk \\\n\tfaketime \\\n\tflex \\\n\tgdb \\\n\tgit \\\n\tlibbson-dev \\\n\tlibcurl4-gnutls-dev \\\n\tlibdbd-mysql \\\n\tlibdbi-dev \\\n\tlibgcrypt11-dev \\\n\tlibglib2.0-dev \\\n\tlibgnutls28-dev \\\n\tlibgrok1 libgrok-dev \\\n\tlibhiredis-dev \\\n\tlibkrb5-dev \\\n\tliblz4-dev \\\n\tlibmaxminddb-dev \\\n\tlibmongoc-dev \\\n\tlibmysqlclient-dev \\\n\tlibnet1-dev \\\n\tlibpcap-dev \\\n\tlibpq-dev \\\n\tlibrabbitmq-dev \\\n\tlibsasl2-dev \\\n\tlibsnmp-dev \\\n\tlibssl-dev \\\n\tlibsystemd-dev \\\n\tlibtokyocabinet-dev \\\n\tlibtool \\\n\tmysql-server \\\n\tnet-tools \\\n\tpkg-config \\\n\tpostgresql-client \\\n\tpython-docutils \\\n\tpython-software-properties \\\n\tsoftware-properties-common \\\n\tsudo \\\n\ttcl-dev \\\n\tuuid-dev \\\n\tvalgrind \\\n\tvim \\\n\twget \\\n\tzlib1g-dev && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:adiscon/v8-stable -y && \\\n\tadd-apt-repository ppa:qpid/released -y && \\\n\tadd-apt-repository ppa:ubuntu-toolchain-r/test -y && \\\n\techo \"deb http://repo.yandex.ru/clickhouse/deb/stable/ main/\" > /etc/apt/sources.list.d/clickhouse.list && \\\n\tapt-key adv --keyserver keyserver.ubuntu.com --recv E0C56BD4 && \\\n\techo \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main\" > /etc/apt/sources.list.d/llvm.list && \\\n\techo \"deb http://download.opensuse.org/repositories/network:/messaging:/zeromq:/git-draft/xUbuntu_16.04/ ./\" > /etc/apt/sources.list.d/0mq.list && \\\n\twget -O - https://download.opensuse.org/repositories/network:/messaging:/zeromq:/git-draft/xUbuntu_16.04/Release.key | apt-key add - && \\\n\twget -O - https://apt.llvm.org/llvm-snapshot.gpg.key| apt-key add -\n# note: ppa:ubuntu-toolchain-r/test is currently the best repo for gcc-7 we can find...\n\nRUN apt-get update -y && \\\n\tapt-get install --no-install-recommends -y \\\n\tclickhouse-client \\\n\tclickhouse-server \\\n\tlibestr-dev \\\n\tlibrelp-dev \\\n\tlibqpid-proton10-dev \\\n\tlibsodium-dev \\\n\tlibfastjson-dev \\\n\tliblogging-stdlog-dev \\\n\tgcc-7 \\\n\tlibczmq-dev \\\n\tclang-5.0 \\\n\tclang-tools-5.0 \\\n\tliblognorm-dev && rm -rf /var/lib/apt/lists/*;\n\n# for clickhouse, the container requires some pre-generated files for TLS. generate them via\n# openssl req -subj \"/CN=localhost\" -new -newkey rsa:2048 -days 365 -nodes -x509 -keyout clickhouse.server.key -out clickhouse.server.crt\n# openssl dhparam -out clickhouse.dhparam.pem 2048\nCOPY\tclickhouse.dhparam.pem /etc/clickhouse-server/dhparam.pem\nCOPY\tclickhouse.server.crt /etc/clickhouse-server/server.crt\nCOPY\tclickhouse.server.key /etc/clickhouse-server/server.key\nRUN\tsed -i 's/<yandex>/<yandex>\\n    <core_dump><size_limit>0<\\/size_limit><\\/core_dump>/g' \\\n\t\t/etc/clickhouse-server/config.xml && \\\n\tsed -i 's/<tcp_port>9000<\\/tcp_port>/<tcp_port>9000<\\/tcp_port>\\n    <https_port>8443<\\/https_port>/g' \\\n\t\t/etc/clickhouse-server/config.xml\n\nWORKDIR\t/home/devel\nVOLUME\t/rsyslog\nRUN\tgroupadd rsyslog \\\n\t&& useradd -g rsyslog  -s /bin/bash rsyslog \\\n\t&& echo \"rsyslog ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers \\\n\t&& echo \"buildbot ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\nADD\tsetup-system.sh setup-system.sh\nENV\tPKG_CONFIG_PATH=/usr/local/lib/pkgconfig \\\n\tLD_LIBRARY_PATH=/usr/local/lib \\\n\tDEBIAN_FRONTEND=\n\n# Install any needed packages\nRUN\t./setup-system.sh\n\n# create dependency cache\nRUN\tmkdir /local_dep_cache && \\\n\twget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.9.tar.gz -O /local_dep_cache/elasticsearch-5.6.9.tar.gz  && \\\n\twget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.0.0.tar.gz -O /local_dep_cache/elasticsearch-6.0.0.tar.gz && \\\n\twget -nv https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.1.tar.gz -O /local_dep_cache/elasticsearch-6.3.1.tar.gz\n# tell tests which are the newester versions, so they can be checked without the need\n# to adjust test sources.\nENV\tELASTICSEARCH_NEWEST=\"elasticsearch-6.3.1.tar.gz\"\n\n# tell CI env how to handle clickhouse\nRUN\tchown root:root /var/lib/clickhouse\nENV\tCLICKHOUSE_START_CMD=\"sudo -S clickhouse-server --config-file=/etc/clickhouse-server/config.xml\" \\\n\tCLICKHOUSE_STOP_CMD=\"sudo -S kill $(pidof clickhouse-server)\"\n\n# next ENV is specifically for running scan-build - so we do not need to\n# change scripts if at a later time we can move on to a newer version\nENV SCAN_BUILD=scan-build \\\n    SCAN_BUILD_CC=clang-5.0\n\nENV RSYSLOG_CONFIGURE_OPTIONS \\\n\t--enable-clickhouse \\\n\t--enable-clickhouse-tests \\\n\t--enable-elasticsearch \\\n\t--enable-elasticsearch-tests \\\n\t--enable-gnutls \\\n\t--enable-gssapi-krb5 \\\n\t--enable-imbatchreport \\\n\t--enable-imczmq \\\n\t--enable-imdiag \\\n\t--enable-imfile \\\n\t--enable-imjournal \\\n\t--enable-imkafka \\\n\t--enable-impcap \\\n\t--enable-improg \\\n\t--enable-impstats \\\n\t--enable-imptcp \\\n\t--enable-imtuxedoulog \\\n\t--enable-kafka-tests \\\n\t--disable-kmsg \\\n\t--enable-ksi-ls12 \\\n\t--enable-libdbi \\\n\t--enable-libfaketime \\\n\t--enable-libgcrypt \\\n\t--enable-mail \\\n\t--enable-mmanon \\\n\t--enable-mmaudit \\\n\t--enable-mmcapture \\\n\t--enable-mmcapture \\\n\t--enable-mmcount \\\n\t--enable-mmdarwin \\\n\t--enable-mmdblookup \\\n\t--enable-mmfields \\\n\t--enable-mmgrok \\\n\t--enable-mmjsonparse \\\n\t--enable-mmkubernetes \\\n\t--enable-mmnormalize \\\n\t--enable-mmpstrucdata \\\n\t--enable-mmrm1stspace \\\n\t--enable-mmsequence \\\n\t--enable-mmsnmptrapd \\\n\t--enable-mmutf8fix \\\n\t--enable-mysql \\\n\t--enable-omamqp1 \\\n\t--enable-omczmq \\\n\t--enable-omhiredis \\\n\t--enable-omhttp \\\n\t--enable-omhttp \\\n\t--enable-omhttpfs \\\n\t--enable-omjournal \\\n\t--enable-omkafka \\\n\t--enable-ommongodb \\\n\t--enable-omprog \\\n\t--enable-omrabbitmq \\\n\t--enable-omrelp-default-port=13515 \\\n\t--enable-omruleset \\\n\t--enable-omstdout \\\n\t--enable-omtcl \\\n\t--enable-omudpspoof \\\n\t--enable-omuxsock \\\n\t--enable-openssl \\\n\t--enable-pgsql \\\n\t--enable-pmaixforwardedfrom \\\n\t--enable-pmciscoios \\\n\t--enable-pmcisconames \\\n\t--enable-pmdb2diag \\\n\t--enable-pmlastmsg \\\n\t--enable-pmnormalize \\\n\t--enable-pmnull \\\n\t--enable-pmsnare \\\n\t--enable-relp \\\n\t--enable-snmp \\\n\t--enable-usertools \\\n\t--enable-valgrind \\\n\t\\\n\t--enable-testbench\n\nWORKDIR /rsyslog\nUSER rsyslog\n"
}