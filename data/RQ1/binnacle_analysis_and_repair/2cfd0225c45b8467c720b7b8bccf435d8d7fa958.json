{
  "startTime": 1674253063734,
  "endTime": 1674253064172,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 12,
        "columnEnd": 111
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 176,
        "lineEnd": 176,
        "columnStart": 0,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 22,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 176,
        "lineEnd": 176,
        "columnStart": 0,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 22,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 176,
        "lineEnd": 176,
        "columnStart": 0,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 23,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 176,
        "lineEnd": 176,
        "columnStart": 1,
        "columnEnd": 49
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  curl wget \\\n  python3.5 \\\n  python3-pip \\\n  git \\\n  vim \\\n  openjdk-8-jdk \\\n  net-tools && rm -rf /var/lib/apt/lists/*;\n\n# Install Hadoop.\nENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/\nENV HADOOP_VERSION 3.2.0\nENV HADOOP_URL https://archive.apache.org/dist/hadoop/common/stable/hadoop-$HADOOP_VERSION.tar.gz\nRUN set -x \\\n    && curl -fsSL \"$HADOOP_URL\" -o /tmp/hadoop.tar.gz \\\n    && tar -xzf /tmp/hadoop.tar.gz -C /opt/ \\\n    && rm /tmp/hadoop.tar.gz*\n\n# Configure Hadoop\nRUN ln -s /opt/hadoop-$HADOOP_VERSION/etc/hadoop /etc/hadoop\nRUN mkdir /opt/hadoop-$HADOOP_VERSION/logs\nRUN mkdir /hadoop-data\nENV HADOOP_PREFIX=/opt/hadoop-$HADOOP_VERSION\nENV HADOOP_CONF_DIR=/etc/hadoop\nENV MULTIHOMED_NETWORK=1\nENV PATH $HADOOP_PREFIX/bin/:$PATH\n\nENV HIVE_SITE_CONF_javax_jdo_option_ConnectionURL=jdbc:mysql://localhost:3306/hive?createDatabaseIfNotExist=true\nENV HIVE_SITE_CONF_javax_jdo_option_ConnectionDriverName=com.mysql.jdbc.Driver\nENV HIVE_SITE_CONF_javax_jdo_option_ConnectionUserName=root\nENV HIVE_SITE_CONF_javax_jdo_option_ConnectionPassword=root\nENV HIVE_SITE_CONF_datanucleus_autoCreateSchema=false\n#ENV HIVE_SITE_CONF_hive_metastore_uris=thrift://hive-metastore:9083\nENV HIVE_SITE_CONF_hive_server2_transport_mode=binary\n#ENV HIVE_SITE_CONF_hive_server2_use_SSL=false\nENV HIVE_SITE_CONF_hive_server2_authentication=NOSASL\nENV HIVE_SITE_CONF_hive_server2_enable_doAs=false\nENV HIVE_SITE_CONF_hive_metastore_schema_verification=false\nENV HIVE_SITE_CONF_datanucleus_schema_autoCreateTables=true\nENV HDFS_CONF_dfs_namenode_datanode_registration_ip___hostname___check=false\nENV CORE_CONF_fs_defaultFS=hdfs://localhost:8020\nENV CORE_CONF_hadoop_http_staticuser_user=root\nENV CORE_CONF_hadoop_proxyuser_hue_hosts=*\nENV CORE_CONF_hadoop_proxyuser_hue_groups=*\nENV CORE_CONF_hadoop.proxyuser.root.hosts=*\nENV CORE_CONF_hadoop.proxyuser.root.groups=*\nENV HDFS_CONF_dfs_webhdfs_enabled=true\nENV HDFS_CONF_dfs_permissions_enabled=false\nENV YARN_CONF_yarn_log___aggregation___enable=true\nENV YARN_CONF_yarn_resourcemanager_recovery_enabled=true\nENV YARN_CONF_yarn_resourcemanager_store_class=org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore\nENV YARN_CONF_yarn_resourcemanager_fs_state___store_uri=/rmstate\nENV YARN_CONF_yarn_nodemanager_remote___app___log___dir=/app-logs\nENV YARN_CONF_yarn_log_server_url=http://historyserver:8188/applicationhistory/logs/\nENV YARN_CONF_yarn_timeline___service_enabled=true\nENV YARN_CONF_yarn_timeline___service_generic___application___history_enabled=true\nENV YARN_CONF_yarn_resourcemanager_system___metrics___publisher_enabled=true\nENV YARN_CONF_yarn_resourcemanager_hostname=resourcemanager\nENV YARN_CONF_yarn_timeline___service_hostname=historyserver\nENV YARN_CONF_yarn_resourcemanager_address=resourcemanager:8032\nENV YARN_CONF_yarn_resourcemanager_scheduler_address=resourcemanager:8030\nENV YARN_CONF_yarn_resourcemanager_resource__tracker_address=resourcemanager:8031\n\n\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod a+x /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nRUN mkdir /cmd\n\n# For HDFS NameNode\nHEALTHCHECK CMD curl -f http://localhost:50070/ || exit 1\nENV HDFS_CONF_dfs_namenode_name_dir=file:///hadoop/dfs/name\nRUN mkdir -p /hadoop/dfs/name\nVOLUME /hadoop/dfs/name\nCOPY cmd/start_namenode.sh /cmd/start_namenode.sh\nRUN chmod a+x /cmd/start_namenode.sh\n\n\n# For HDFS DataNode\nHEALTHCHECK CMD curl -f http://localhost:50075/ || exit 1\nENV HDFS_CONF_dfs_datanode_data_dir=file:///hadoop/dfs/data\nRUN mkdir -p /hadoop/dfs/data\nVOLUME /hadoop/dfs/data\nCOPY cmd/start_datanode.sh /cmd/start_datanode.sh\nRUN chmod a+x /cmd/start_datanode.sh\n\n\n# For ResourceManager\nHEALTHCHECK CMD curl -f http://localhost:8088/ || exit 1\nCOPY cmd/start_resourcemanager.sh /cmd/start_resourcemanager.sh\nRUN chmod a+x /cmd/start_resourcemanager.sh\n\n\n# For NodeManager\nHEALTHCHECK CMD curl -f http://localhost:8042/ || exit 1\nCOPY cmd/start_nodemanager.sh /cmd/start_nodemanager.sh\nRUN chmod a+x /cmd/start_nodemanager.sh\n\n\n# For Hive\nARG HIVE_VERSION\nENV HIVE_VERSION=${HIVE_VERSION:-2.3.2}\nENV HIVE_HOME /opt/hive\nENV PATH $HIVE_HOME/bin:$PATH\nENV HADOOP_HOME /opt/hadoop-$HADOOP_VERSION\n\nRUN apt-get install --no-install-recommends -y wget procps && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt\nRUN wget --quiet https://archive.apache.org/dist/hive/hive-$HIVE_VERSION/apache-hive-$HIVE_VERSION-bin.tar.gz\nRUN tar -xzf apache-hive-$HIVE_VERSION-bin.tar.gz && \\\n\tmv apache-hive-$HIVE_VERSION-bin hive && \\\n\trm apache-hive-$HIVE_VERSION-bin.tar.gz && \\\n\tapt-get clean && \\\n\trm -rf /var/lib/apt/lists/*\n\nCOPY conf/ $HIVE_HOME/conf\n\nCOPY cmd/start_hiveserver2.sh /cmd/start_hiveserver2.sh\nRUN chmod +x /cmd/start_hiveserver2.sh\n\n# Start all hadoop components\nCOPY cmd/start_all.sh /cmd/start_all.sh\nRUN chmod +x /cmd/start_all.sh\n\n# install mysql without a password prompt\nRUN [\"/bin/bash\", \"-c\", \"debconf-set-selections <<< 'mysql-server mysql-server/root_password password root'\"] \\\nRUN [\"/bin/bash\", \"-c\", \"debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password root'\"] \\\n RUN apt-get update && apt-get install -y --no-install-recommends mysql-server && rm -rf /var/lib/apt/lists/*; \\\nVOLUME /var/lib/mysql \\\n\nWORKDIR /tmp \\\nRUN wget --quiet https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.47.tar.gz \\\nRUN tar -xzf mysql-connector-java-5.1.47.tar.gz \\\nRUN cp mysql-connector-java-5.1.47/mysql-connector-java-5.1.47.jar /opt/hive/lib/ \\\nRUN rm -rf /tmp/mysql-connector-java-5.1.47.tar.gz \\\nRUN rm -rf /tmp/mysql-connector-java-5.1.47 \\\n\nRUN mkdir /dataset \\\nCOPY dataset/popularize_churn.sql /dataset/popularize_churn.sql \\\nCOPY dataset/popularize_iris.sql /dataset/popularize_iris.sql \\\nCOPY dataset/create_model_db.sql /dataset/create_model_db.sql \\\n\n# Install the Go compiler.\nRUN wget --quiet https://dl.google.com/go/go1.11.5.linux-amd64.tar.gz \\\nRUN tar -C /usr/local -xzf go1.11.5.linux-amd64.tar.gz \\\nRUN rm go1.11.5.linux-amd64.tar.gz \\\nRUN apt-get install -y --no-install-recommends build-essential \\\nENV PATH $PATH:/usr/local/go/bin \\\n\n# Setup Go source workspace.\nRUN mkdir -p /go/bin \\\nENV GOPATH /go \\\nENV PATH $PATH:$GOPATH/bin \\\n\n# Install python and tensorflow env for run test\nARG CONDA_OS=Linux \\\n RUN cd / && curl -f -sL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o mconda-install.sh && \\\n    bash -x mconda-install.sh -b -p miniconda && \\\n    rm mconda-install.sh \\\nENV PATH=\"/miniconda/bin:$PATH\" \\\n\nRUN ls /miniconda/bin && /miniconda/bin/conda create -y -q -n sqlflow-dev python=3.6 && \\\n    echo \". /miniconda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    echo \"source activate sqlflow-dev\" >> ~/.bashrc && \\\n    bash -c \"source activate sqlflow-dev && python -m pip install \\\n    tensorflow==2.0.0-alpha0 \\\n    mysql-connector-python \\\n    impyla \\\n    jupyter\" \\\n# Install protobuf\n RUN wget --quiet https://github.com/protocolbuffers/protobuf/releases/download/v3.6.1/protoc-3.6.1-linux-x86_64.zip && \\\n apt-get install --no-install-recommends -y unzip && \\\nunzip -qq protoc-3.6.1-linux-x86_64.zip -d /usr/local && \\\nrm protoc-3.6.1-linux-x86_64.zip && \\\ngo get github.com/golang/protobuf/protoc-gen-go && \\\nmv /go/bin/protoc-gen-go /usr/local/bin/ && rm -rf /var/lib/apt/lists/*; \\\n\nRUN echo \"go get -t sqlflow.org/gohive && go test -v sqlflow.org/gohive\" > /build_and_test.bash \\\nRUN chmod +x /build_and_test.bash"
}