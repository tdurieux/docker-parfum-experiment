{
  "startTime": 1674240692571,
  "endTime": 1674240692918,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "##\n# Build a base package for augur-core.\n#\n# The build process is structured this way to encourage fail fast behavior so\n# that this image's build will fail earlier for compiling contracts than\n# for other pieces\nFROM augurproject/python2-and-3:latest\nARG SOLC_VERSION=v0.4.20\n\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash - \\\n\t&& apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN wget --quiet --output-document /usr/local/bin/solc https://github.com/ethereum/solidity/releases/download/${SOLC_VERSION}/solc-static-linux \\\n\t&& chmod a+x /usr/local/bin/solc\n\nCOPY requirements.txt /app/requirements.txt\n\nWORKDIR /app\nRUN pip2 install --no-cache-dir --upgrade pip setuptools \\\n\t&& pip2 install --no-cache-dir --upgrade pip-tools \\\n\t&& pip2 install --no-cache-dir -r requirements.txt\n\n# Install basics of the application\nCOPY .soliumrc.json /app/.soliumrc.json\nCOPY .soliumignore /app/.soliumignore\nCOPY tsconfig.json /app/tsconfig.json\nCOPY typings/ /app/typings/\nCOPY source/contracts/ /app/source/contracts/\nCOPY source/deployment/compileContracts.ts /app/source/deployment/compileContracts.ts\nCOPY source/libraries/CompilerConfiguration.ts /app/source/libraries/CompilerConfiguration.ts\nCOPY source/libraries/DeployerConfiguration.ts /app/source/libraries/DeployerConfiguration.ts\nCOPY source/libraries/NetworkConfiguration.ts /app/source/libraries/NetworkConfiguration.ts\nCOPY source/libraries/ContractCompiler.ts /app/source/libraries/ContractCompiler.ts\nCOPY source/tools/installSolidityFlattener /app/source/tools/installSolidityFlattener\nCOPY package.json /app/package.json\n\nRUN npm install && npm cache clean --force;\n\n# Lint\nRUN npm run lint\n\n# Build first chunk\nRUN npm run build:source\nRUN npm run build:flattener\nRUN npm run build:contracts\n\nCOPY source/libraries/ContractInterfacesGenerator.ts /app/source/libraries/ContractInterfacesGenerator.ts\nCOPY source/tools/generateContractInterfaces.ts /app/source/tools/generateContractInterfaces.ts\n\n# Build contract interfaces\nRUN npm run build:source\nRUN npm run build:interfaces\n\n# Copy source\nCOPY source/ /app/source/\nCOPY tests/ /app/tests/\n\n# Copy the git info so ContractDeployer can read the hash on deploy\nRUN npm run build:source\nCOPY .git/ /app/.git/\n\nENTRYPOINT [\"npm\"]\n"
}