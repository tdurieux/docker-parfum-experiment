{
  "startTime": 1674235005579,
  "endTime": 1674235006211,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 1,
        "columnEnd": 67
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 1,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 1,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 1,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:8\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update \\\n\t&& apt-get upgrade -y \\\n\t&& apt-get install --no-install-recommends -y build-essential openssh-server apache2 mysql-server \\\n\tmysql-client bison flex php5 php5-curl php5-cli php5-mysql php-pear php5-gd curl sox \\\n\tlibncurses5-dev libssl-dev libmysqlclient-dev mpg123 libxml2-dev libnewt-dev sqlite3 \\\n\tlibsqlite3-dev pkg-config automake libtool autoconf git unixodbc-dev uuid uuid-dev \\\n\tlibasound2-dev libogg-dev libvorbis-dev libicu-dev libcurl4-openssl-dev libical-dev libneon27-dev libsrtp0-dev \\\n\tlibspandsp-dev sudo libmyodbc subversion libtool-bin python-dev \\\n\taptitude cron fail2ban net-tools vim wget \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN cd /usr/src \\\n\t&& wget -O jansson.tar.gz https://github.com/akheron/jansson/archive/v2.7.tar.gz \\\n\t&& tar xfz jansson.tar.gz \\\n\t&& rm -f jansson.tar.gz \\\n\t&& cd jansson-* \\\n\t&& autoreconf -i \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& make \\\n\t&& make install \\\n\t&& rm -r /usr/src/jansson*\n\nRUN cd /usr/src \\\n\t&& wget https://downloads.asterisk.org/pub/telephony/asterisk/asterisk-15.7.2.tar.gz \\\n\t&& tar xfz asterisk-15.7.2.tar.gz \\\n\t&& rm -f asterisk-15.7.2.tar.gz \\\n\t&& cd asterisk-* \\\n\t&& contrib/scripts/install_prereq install \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-pjproject-bundled \\\n\t&& make menuselect.makeopts \\\n\t&& sed -i \"s/BUILD_NATIVE //\" menuselect.makeopts \\\n\t&& make \\\n\t&& make install \\\n\t&& make config \\\n\t&& ldconfig \\\n\t&& update-rc.d -f asterisk remove \\\n\t&& rm -r /usr/src/asterisk*\n\nRUN useradd -m asterisk \\\n\t&& chown asterisk. /var/run/asterisk \\\n\t&& chown -R asterisk. /etc/asterisk \\\n\t&& chown -R asterisk. /var/lib/asterisk \\\n\t&& chown -R asterisk. /var/log/asterisk \\\n\t&& chown -R asterisk. /var/spool/asterisk \\\n\t&& chown -R asterisk. /usr/lib/asterisk \\\n\t&& rm -rf /var/www/html\n\nRUN sed -i 's/^upload_max_filesize = 2M/upload_max_filesize = 120M/' /etc/php5/apache2/php.ini \\\n\t&& sed -i 's/^memory_limit = 128M/memory_limit = 256M/' /etc/php5/apache2/php.ini \\\n\t&& cp /etc/apache2/apache2.conf /etc/apache2/apache2.conf_orig \\\n\t&& sed -i 's/^\\(User\\|Group\\).*/\\1 asterisk/' /etc/apache2/apache2.conf \\\n\t&& sed -i 's/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf\n\nCOPY ./config/odbcinst.ini /etc/odbcinst.ini\nCOPY ./config/odbc.ini /etc/odbc.ini\n\nRUN cd /usr/src \\\n\t&& wget https://mirror.freepbx.org/modules/packages/freepbx/freepbx-14.0-latest.tgz \\\n\t&& tar xfz freepbx-14.0-latest.tgz \\\n\t&& rm -f freepbx-14.0-latest.tgz \\\n\t&& cd freepbx \\\n\t&& chown mysql:mysql -R /var/lib/mysql/* \\\n\t&& /etc/init.d/mysql start \\\n\t&& ./start_asterisk start \\\n\t&& ./install -n \\\n\t&& fwconsole chown \\\n\t&& fwconsole ma upgradeall \\\n\t&& fwconsole ma downloadinstall announcement backup bulkhandler ringgroups timeconditions ivr restapi cel \\\n\t&& /etc/init.d/mysql stop \\\n\t&& rm -rf /usr/src/freepbx*\n\nRUN a2enmod rewrite\n\n#### Add G729 Codecs\nRUN git clone https://github.com/BelledonneCommunications/bcg729 /usr/src/bcg729 ; \\\n\tcd /usr/src/bcg729 ; \\\n\tgit checkout tags/$BCG729_VERSION ; \\\n\t./autogen.sh ; \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --libdir=/lib; \\\n\tmake ; \\\n\tmake install ; \\\n\n\tmkdir -p /usr/src/asterisk-g72x ; rm -rf /usr/src/asterisk-g72x \\\n\tcurl -f https://bitbucket.org/arkadi/asterisk-g72x/get/default.tar.gz | tar xvfz - --strip 1 -C /usr/src/asterisk-g72x; \\\n\tcd /usr/src/asterisk-g72x ; \\\n\t./autogen.sh ; \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-bcg729 --with-asterisk${ASTERISK_VERSION}0 --enable-penryn; \\\n\tmake ; \\\n\tmake install\n\nRUN sed -i 's/^user\t\t= mysql/user\t\t= root/' /etc/mysql/my.cnf\n\nCOPY ./run /run\nRUN chmod +x /run/*\n\nRUN chown asterisk:asterisk -R /var/spool/asterisk\n\nCMD /run/startup.sh\n\nEXPOSE 80 3306 5060 5061 5160 5161 4569 10000-20000/udp\n\n#recordings data\nVOLUME [ \"/var/spool/asterisk/monitor\" ]\n#database data\nVOLUME [ \"/var/lib/mysql\" ]\n#automatic backup\nVOLUME [ \"/backup\" ]\n"
}