{
  "startTime": 1674246464782,
  "endTime": 1674246464946,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 1,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 1,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 1,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 1,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 11,
        "lineEnd": 34,
        "columnStart": 1,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.8\nMAINTAINER thetarkus\n\n\n#\n# Installation\n#\n\nARG arch=amd64\nRUN \\\n\techo 'installing dependencies' && \\\n\tapk add --no-cache \\\n\tshadow \\\n\tgettext \\\n\tgit \\\n\tpostgresql \\\n\tpostgresql-contrib \\\n\tpostgresql-dev \\\n\tpython3-dev \\\n\tpy3-psycopg2 \\\n\tpy3-pillow \\\n\tredis \\\n\tnginx \\\n\tmake \\\n\tmusl-dev \\\n\tgcc \\\n\tunzip \\\n\tlibldap \\\n\tlibsasl \\\n\tffmpeg \\\n\tlibpq \\\n\tlibmagic \\\n\tlibffi-dev \\\n\tzlib-dev \\\n\topenldap-dev && \\\n\n\n\techo 'creating directories' && \\\n\tmkdir -p /app /run/nginx /run/postgresql /var/log/funkwhale && \\\n\n\n\techo 'creating users' && \\\n\tadduser -s /bin/false -D -H funkwhale funkwhale && \\\n\n\n\techo 'downloading archives' && \\\n\twget https://github.com/just-containers/s6-overlay/releases/download/v1.21.7.0/s6-overlay-$arch.tar.gz -O /tmp/s6-overlay.tar.gz && \\\n\n\n\techo 'extracting archives' && \\\n\tcd /app && \\\n\ttar -C / -xzf /tmp/s6-overlay.tar.gz && \\\n\n\n\techo 'setting up nginx' && \\\n\trm /etc/nginx/conf.d/default.conf && \\\n\n\n\techo 'removing temp files' && \\\n\trm /tmp/*.tar.gz\n\nCOPY ./src/api /app/api\n\nRUN \\\n\tln -s /usr/bin/python3 /usr/bin/python && \\\n\techo 'fixing requirements file for alpine' && \\\n\tsed -i '/Pillow/d' /app/api/requirements/base.txt && \\\n\t\\\n\t\\\n\techo 'installing pip requirements' && \\\n\tpip3 install --no-cache-dir --upgrade pip && \\\n\tpip3 install --no-cache-dir setuptools wheel && \\\n\tpip3 install --no-cache-dir -r /app/api/requirements.txt && \\\n\tpip3 install --no-cache-dir gunicorn uvicorn\n\nCOPY ./src/front /app/front\n\n\n#\n# Environment\n# https://dev.funkwhale.audio/funkwhale/funkwhale/blob/develop/deploy/env.prod.sample\n# (Environment is at the end to avoid busting build cache on each ENV change)\n#\n\nENV FUNKWHALE_HOSTNAME=yourdomain.funkwhale \\\n\tFUNKWHALE_PROTOCOL=http \\\n\tDJANGO_SETTINGS_MODULE=config.settings.production \\\n\tDJANGO_SECRET_KEY=funkwhale \\\n\tDJANGO_ALLOWED_HOSTS='127.0.0.1,*' \\\n\tDATABASE_URL=postgresql://funkwhale@:5432/funkwhale \\\n\tMEDIA_ROOT=/data/media \\\n\tMUSIC_DIRECTORY_PATH=/music \\\n\tNGINX_MAX_BODY_SIZE=100M \\\n\tSTATIC_ROOT=/app/api/staticfiles \\\n\tFUNKWHALE_SPA_HTML_ROOT=/app/front/dist/index.html \\\n\tFUNKWHALE_WEB_WORKERS=1\n#\n# Entrypoint\n#\n\nCOPY ./root /\nCOPY ./src/funkwhale_nginx.template /etc/nginx/funkwhale_nginx.template\nENTRYPOINT [\"/init\"]\n"
}