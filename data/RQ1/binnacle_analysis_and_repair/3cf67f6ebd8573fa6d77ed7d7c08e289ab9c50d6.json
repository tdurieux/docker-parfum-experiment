{
  "startTime": 1674245240126,
  "endTime": 1674245240416,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 67
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM aqzt/docker-alpine:jdk8\nLABEL maintainer=\"aqzt.com (ppabc@qq.com)\"\n\nENV CATALINA_HOME /usr/local/tomcat\nENV PATH $CATALINA_HOME/bin:$PATH\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n\n# let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR $CATALINA_HOME/native-jni-lib\nENV LD_LIBRARY_PATH ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\n\nRUN apk add --no-cache gnupg\n\n# see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n# see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS 05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\nRUN set -ex; \\\n\tfor key in $GPG_KEYS; do \\\n\t\tgpg --batch --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys \"$key\"; \\\n\tdone\n\nENV TOMCAT_MAJOR 9\nENV TOMCAT_VERSION 9.0.0.M26\n\n# https://issues.apache.org/jira/browse/INFRA-8753?focusedCommentId=14735394#comment-14735394\nENV TOMCAT_TGZ_URL https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\n# not all the mirrors actually carry the .asc files :'(\nENV TOMCAT_ASC_URL https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\n\n# if the version is outdated, we have to pull from the archive :/\nENV TOMCAT_TGZ_FALLBACK_URL https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\nENV TOMCAT_ASC_FALLBACK_URL https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\n\nRUN set -x \\\n\t\\\n\t&& apk add --no-cache --virtual .fetch-deps \\\n\t\tca-certificates \\\n\t\ttar \\\n\t\topenssl \\\n\t&& { \\\n\t\twget -O tomcat.tar.gz \"$TOMCAT_TGZ_URL\" \\\n\t\t|| wget -O tomcat.tar.gz \"$TOMCAT_TGZ_FALLBACK_URL\" \\\n\t; } \\\n\t&& { \\\n\t\twget -O tomcat.tar.gz.asc \"$TOMCAT_ASC_URL\" \\\n\t\t|| wget -O tomcat.tar.gz.asc \"$TOMCAT_ASC_FALLBACK_URL\" \\\n\t; } \\\n\t&& gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz \\\n\t&& tar -xvf tomcat.tar.gz --strip-components=1 \\\n\t&& rm bin/*.bat \\\n\t&& rm tomcat.tar.gz* \\\n\t\\\n\t&& nativeBuildDir=\"$(mktemp -d)\" \\\n\t&& tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1 \\\n\t&& apk add --no-cache --virtual .native-build-deps \\\n\t\tapr-dev \\\n\t\tcoreutils \\\n\t\tdpkg-dev dpkg \\\n\t\tgcc \\\n\t\tlibc-dev \\\n\t\tmake \\\n\t\topenjdk8 \\\n\t\topenssl-dev \\\n\t&& ( \\\n\t\texport CATALINA_HOME=\"$PWD\" \\\n\t\t&& cd \"$nativeBuildDir/native\" \\\n\t\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t&& ./configure \\\n\t\t\t--build=\"$gnuArch\" \\\n\t\t\t--libdir=\"$TOMCAT_NATIVE_LIBDIR\" \\\n\t\t\t--prefix=\"$CATALINA_HOME\" \\\n\t\t\t--with-apr=\"$(which apr-1-config)\" \\\n\t\t\t--with-java-home=\"$JAVA_HOME\" \\\n\t\t\t--with-ssl=yes \\\n\t\t&& make -j \"$(nproc)\" \\\n\t\t&& make install \\\n\t) \\\n\t&& runDeps=\"$( \\\n\t\tscanelf --needed --nobanner --recursive \"$TOMCAT_NATIVE_LIBDIR\" \\\n\t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n\t\t\t| sort -u \\\n\t\t\t| xargs -r apk info --installed \\\n\t\t\t| sort -u \\\n\t)\" \\\n\t&& apk add --no-cache --virtual .tomcat-native-rundeps $runDeps \\\n\t&& apk del .fetch-deps .native-build-deps \\\n\t&& rm -rf \"$nativeBuildDir\" \\\n\t&& rm bin/tomcat-native.tar.gz \\\n# sh removes env vars it doesn't support (ones with periods)\n# https://github.com/docker-library/tomcat/issues/77\n\t&& apk add --no-cache bash \\\n\t&& find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' + && \\\n\n# verify Tomcat Native is working properly\n    set -e \\\n\t&& nativeLines=\"$(catalina.sh configtest 2>&1)\" \\\n\t&& nativeLines=\"$(echo \"$nativeLines\" | grep 'Apache Tomcat Native')\" \\\n\t&& nativeLines=\"$(echo \"$nativeLines\" | sort -u)\" \\\n\t&& if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then \\\n\t\techo >&2 \"$nativeLines\"; \\\n\t\texit 1; \\\n\tfi\n\n### Add Files\n   ADD root /\n\n### Networking Configuration\nEXPOSE 8080\n\n"
}