{
  "startTime": 1674236842123,
  "endTime": 1674236842443,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 79,
        "columnEnd": 138
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 5,
        "columnEnd": 23
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 5,
        "columnEnd": 164
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 5,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 67,
        "columnStart": 22,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 5,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 67,
        "columnStart": 22,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM vnijs/radiant:latest\n\nLABEL Vincent Nijs \"radiant@rady.ucsd.edu\"\n\nARG DOCKERHUB_VERSION_UPDATE\nENV DOCKERHUB_VERSION=${DOCKERHUB_VERSION_UPDATE}\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update \\\n  && apt-get -y upgrade \\\n  && apt-get -y install --no-install-recommends \\\n  python3-venv \\\n  python3-virtualenv \\\n  libzmq3-dev \\\n  gpg-agent && rm -rf /var/lib/apt/lists/*;\n\n# install python packages\nCOPY requirements.txt /home/${NB_USER}/requirements.txt\nRUN pip3 install --no-cache-dir -r /home/${NB_USER}/requirements.txt \\\n  && rm /home/${NB_USER}/requirements.txt \\\n  && python3 -m bash_kernel.install\n\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=DontWarn\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash \\\n  && apt-get install --no-install-recommends -y nodejs \\\n  && npm install -g npm \\\n  && jupyter labextension install @jupyter-widgets/jupyterlab-manager @ryantam626/jupyterlab_code_formatter \\\n  && jupyter serverextension enable --py jupyterlab_code_formatter --system && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n# install the R kernel for Jupyter Lab\nRUN R -e 'install.packages(\"IRkernel\")' \\\n  && R -e 'IRkernel::installspec(user = FALSE)'\n\n# install google chrome\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n  && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' \\\n  && apt-get -y update \\\n  && apt-get install --no-install-recommends -y google-chrome-stable \\\n  && wget -O /tmp/chromedriver.zip https://chromedriver.storage.googleapis.com/$( curl -f -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip \\\n  && unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/ \\\n  && rm -rf /tmp/* && rm -rf /var/lib/apt/lists/*;\n\n# copy logo for use with jupyterlab\nCOPY images/logo200.svg /opt/radiant/logo.svg\n\n# update R-packages\nRUN R -e 'radiant.update::radiant.update()'\n\nRUN pip3 install --no-cache-dir jupyter-rsession-proxy \\\n  && jupyter labextension install jupyterlab-server-proxy \\\n  && chown ${NB_USER}:shiny -R /var/lib/shiny-server \\\n  && chown ${NB_USER}:shiny -R /var/log/shiny-server\n\nCOPY jupyter_notebook_config.py /etc/jupyter/\n\n# set jupyterlab password based on docker run argument\n# ARG only leads to conflict with rstudio on alternate port\nARG JPASSWORD=${JPASSWORD:-jupyter}\nENV JPASSWORD=${JPASSWORD}\n\n# adding postgres\n# mostly from https://docs.docker.com/engine/examples/postgresql_service/\nENV POSTGRES_VERSION=10\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  postgresql-${POSTGRES_VERSION} \\\n  postgresql-client-${POSTGRES_VERSION} \\\n  postgresql-contrib-${POSTGRES_VERSION} && rm -rf /var/lib/apt/lists/*;\n\n# Run the rest of the commands as the postgres user\nUSER postgres\n\n# create a postgres role for ${NB_USER} with \"postgres\" as the password\n# create a database \"rsm-docker\" owned by the ${NB_USER} role.\nRUN /etc/init.d/postgresql start \\\n  && psql --command \"CREATE USER ${NB_USER} WITH SUPERUSER PASSWORD 'postgres';\" \\\n  && createdb -O ${NB_USER} rsm-docker\n\nCOPY postgresql.conf /etc/postgresql/${POSTGRES_VERSION}/main/postgresql.conf\nCOPY pg_hba.conf /etc/postgresql/${POSTGRES_VERSION}/main/pg_hba.conf\n\nUSER root\n\n# settings for local install of python packages\nENV PYTHONUSERBASE=${PYBASE} \\\n  JUPYTER_PATH=${PYBASE}/share/jupyter \\\n  JUPYTER_RUNTIME_DIR=${PYBASE}/share/jupyter/runtime \\\n  JUPYTER_CONFIG_DIR=${PYBASE}/jupyter \\\n  SHELL=/bin/bash\n\n# Adding a \"clean up\" script\nCOPY clean.sh /usr/local/bin/clean\nRUN chmod +x /usr/local/bin/clean\n\n# install script for spacevim\nCOPY spacevim/spacevim.sh /usr/local/bin/svim\nRUN chmod +x /usr/local/bin/svim\n\n# latest pre-release version\nENV CODE_SERVER=\"1.1156-vsc1.33.1\"\n\nRUN cd /opt \\\n  && mkdir /opt/code-server \\\n  && cd /opt/code-server \\\n  && wget -qO- https://github.com/cdr/code-server/releases/download/${CODE_SERVER}/code-server${CODE_SERVER}-linux-x64.tar.gz | tar zxvf - --strip-components=1\n\n# locations to store vscode / code-server settings\nARG CODE_WORKINGDIR=\"/home/$NB_USER/git\"\nENV CODE_WORKINGDIR=\"${CODE_WORKINGDIR}\" \\\n  CODE_USER_DATA_DIR=\"/home/$NB_USER/.rsm-msba/share/code-server\" \\\n  CODE_EXTENSIONS_DIR=\"/home/$NB_USER/.rsm-msba/share/code-server/extensions\" \\\n  CODE_BUILTIN_EXTENSIONS_DIR=\"/opt/code-server/extensions\" \\\n  PATH=/opt/code-server:$PATH\n\n# setup for code-server (aka vscode)\nCOPY images/vscode.svg /opt/code-server/vscode.svg\nCOPY settings.json /opt/code-server/settings.json\nCOPY vsix/*.vsix /opt/code-server/extensions/\nCOPY vscode-setup.sh /usr/local/bin/vscode\nRUN chmod +x /usr/local/bin/vscode\n\n# required for coenraads.bracket-pair-colorizer\n# RUN npm i -g prismjs vscode vscode-uri escape-html\n\n# updating the supervisord.conf file for Jupyter\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\nEXPOSE 8080 8787 8989 8765\n\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]\n\n# Does not work with Rstudio server authentication\n# USER ${NB_USER}\n# ENV HOME /home/${NB_USER}\n"
}