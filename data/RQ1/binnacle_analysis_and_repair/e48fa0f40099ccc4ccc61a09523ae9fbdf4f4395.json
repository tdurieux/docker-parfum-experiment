{
  "startTime": 1674235382915,
  "endTime": 1674235383236,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 23,
        "columnEnd": 125
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 5,
        "columnEnd": 73
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 5,
        "columnEnd": 73
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 5,
        "columnEnd": 62
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 5,
        "columnEnd": 63
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 5,
        "columnEnd": 63
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 5,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 24,
        "columnStart": 85,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# Use the mirror of ubuntu rather than the default\nRUN rm -rf /etc/apt/sources.list\nRUN echo \"deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse\" >> /etc/apt/sources.list\nRUN echo \"deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\" >> /etc/apt/sources.list\nRUN echo \"deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\" >> /etc/apt/sources.list\n# RUN echo \"deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\" >> /etc/apt/sources.list\n# RUN echo \"deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\" >> /etc/apt/sources.list\n# RUN echo \"deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\" >> /etc/apt/sources.list\n# RUN echo \"deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\" >> /etc/apt/sources.list\n# RUN echo \"deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\" >> /etc/apt/sources.list\n\n# Install some basic utilities\nRUN apt-get clean && apt-get -o Acquire::http::No-Cache=True update --fix-missing && apt-get install --no-install-recommends -y \\\n    make \\\n    sudo \\\n    gcc \\\n    g++ \\\n    git \\\n    wget \\\n    curl \\\n    bzip2 \\\n    libx11-6 \\\n    hmmer \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Set the working directory\nRUN mkdir /app\nWORKDIR /app\n\n# Create a non-root user and switch to it\nRUN adduser --disabled-password --gecos '' --shell /bin/bash user \\\n  && chown -R user:user /app\nRUN echo 'user ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/90-user\nUSER user\n\n# Set home directory\nENV HOME=/home/user\nRUN chmod 777 /home/user\n\n# Install Miniconda\nRUN curl -f -so ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-4.5.1-Linux-x86_64.sh \\\n  && chmod +x ~/miniconda.sh \\\n  && ~/miniconda.sh -b -p ~/miniconda \\\n  && rm ~/miniconda.sh\nENV PATH=/home/user/miniconda/bin:$PATH\nENV CONDA_AUTO_UPDATE_CONDA=false\n\n# Create a python 3.6 environment\nRUN /home/user/miniconda/bin/conda install conda-build \\\n  && /home/user/miniconda/bin/conda create -y --name py36 python=3.6.5 \\\n  && /home/user/miniconda/bin/conda clean -ya\nENV CONDA_DEFAULT_ENV=py36\nENV CONDA_PREFIX=/home/user/miniconda/envs/${CONDA_DEFAULT_ENV}\nENV PATH=${CONDA_PREFIX}/bin:${PATH}\n\n# Install Python Modules\n# RUN conda install -y natsort \\\n#   && conda clean -ya\nRUN pip install --no-cache-dir natsort \\\n  argparse\n\n# Create diamond environment\nRUN mkdir ~/Diamond && wget https://github.com/bbuchfink/diamond/releases/download/v0.9.24/diamond-linux64.tar.gz -P ~/Diamond \\\n  && tar -xzvf ~/Diamond/diamond-linux64.tar.gz -C ~/Diamond && chmod +x ~/Diamond/diamond && rm ~/Diamond/diamond-linux64.tar.gz\nENV PATH=/home/user/Diamond:${PATH}\n\n# Create Prodigal environment\nRUN mkdir ~/prodigal && git clone https://github.com/hyattpd/Prodigal.git ~/prodigal \\\n  && cd ~/prodigal && sudo make install \\\n  && rm -r ~/prodigal\n\n# Create fraggenescan environment\nRUN wget https://downloads.sourceforge.net/project/fraggenescan/FragGeneScan1.31.tar.gz -P ~ \\\n  && tar -xzvf ~/FragGeneScan1.31.tar.gz -C ~ && cd ~/FragGeneScan1.31 \\\n  && make && make clean && make fgs \\\n  && rm ~/FragGeneScan1.31.tar.gz\nENV PATH=/home/user/FragGeneScan1.31:${PATH}\n\n# Create signalP and run_dbcan2 environment\nRUN git clone https://github.com/linnabrown/run_dbcan.git /app \\\n  && cd /app/tools/ && tar -xzvf signalp-4.1.tar.gz \\\n  && chmod +x /app/tools/signalp-4.1/signalp \\\n  && rm /app/tools/signalp-4.1.tar.gz\nENV PATH=/app/tools/signalp-4.1:${PATH}\n\n# Download and make the database for run_dbcan\nRUN mkdir /app/db && cd /app/db \\\n  && wget https://bcb.unl.edu/dbCAN2/download/Databases/CAZyDB.07312018.fa && diamond makedb --in CAZyDB.07312018.fa -d CAZy \\\n  && wget https://bcb.unl.edu/dbCAN2/download/Databases/dbCAN-HMMdb-V7.txt && mv dbCAN-HMMdb-V7.txt dbCAN.txt && hmmpress dbCAN.txt \\\n  && wget https://bcb.unl.edu/dbCAN2/download/Databases/tcdb.fa && diamond makedb --in tcdb.fa -d tcdb \\\n  && wget https://bcb.unl.edu/dbCAN2/download/Databases/tf-1.hmm && hmmpress tf-1.hmm \\\n  && wget https://bcb.unl.edu/dbCAN2/download/Databases/tf-2.hmm && hmmpress tf-2.hmm \\\n  && wget https://bcb.unl.edu/dbCAN2/download/Databases/stp.hmm && hmmpress stp.hmm\n\nCMD [ \"python3 /app/run_dbcan.py\" ]"
}