{
  "startTime": 1674245373946,
  "endTime": 1674245374065,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 100
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.1-fpm\n\nRUN apt-get update && apt-get install --no-install-recommends -y git libgflags-dev build-essential automake autoconf libtool shtool curl unzip && rm -rf /var/lib/apt/lists/*;\nWORKDIR /tmp\n\n# install golang\nRUN curl -f -L -o go.tar.gz \"https://dl.google.com/go/go1.10.linux-amd64.tar.gz\"\nRUN tar -C /usr/local -xzf go.tar.gz && rm go.tar.gz\nENV PATH=$PATH:/usr/local/go/bin\nENV PATH=$PATH:/root/go/bin\n\n# install protoc-gen-go plugin\nRUN go get github.com/golang/protobuf/protoc-gen-go\n\n# install grpc plugin for php\nRUN git clone https://github.com/grpc/grpc\nWORKDIR /tmp/grpc\nRUN git submodule update --init\nRUN make grpc_php_plugin\n\n\n# install protoc\nWORKDIR /tmp\nRUN curl -f -L -o protoc_binaries.zip \"https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-linux-x86_64.zip\"\nRUN unzip protoc_binaries.zip -d \"proto_tools\"\n\n# run the codegen\nENTRYPOINT [\"/bin/bash\",\"/tools/proto/docker_run.sh\"]\nCMD [\"run\"]\n"
}