{
  "startTime": 1674244251456,
  "endTime": 1674244251564,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 25,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 56,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 25,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 56,
        "columnEnd": 107
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Builder container\nFROM gcc:8.1.0 AS gcc_builder\n\nCOPY . /root/workspace/agent\nWORKDIR /root/workspace/agent\nRUN apt-get update -y && apt-get install --no-install-recommends -y cmake libcurl4-openssl-dev && \\\n    ./scripts/install_libuv.sh /usr/local/libuv && mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release -DenableLOG=OFF -Dtest=OFF .. \\\n    && make -j && lscpu && rm -rf /var/lib/apt/lists/*;\n\n\nFROM registry.cn-hongkong.aliyuncs.com/alicontest18/demo-services AS builder\n\n# Runner container\nFROM registry.cn-hangzhou.aliyuncs.com/aliware2018/debian-jdk8\n\nCOPY --from=builder /root/workspace/services/mesh-provider/target/mesh-provider-1.0-SNAPSHOT.jar /root/dists/mesh-provider.jar\nCOPY --from=builder /root/workspace/services/mesh-consumer/target/mesh-consumer-1.0-SNAPSHOT.jar /root/dists/mesh-consumer.jar\nCOPY --from=builder /usr/local/bin/docker-entrypoint.sh /usr/local/bin\n\n\nCOPY --from=gcc_builder /usr/local/libuv /usr/local/libuv\nCOPY --from=gcc_builder /root/workspace/agent/build/agent /usr/local/bin\nCOPY start-agent.sh /usr/local/bin\n\nRUN set -ex && mkdir -p /root/logs && apt-get update && apt-get install --no-install-recommends -y nano procps libcurl4-openssl-dev && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nENV LD_LIBRARY_PATH /usr/local/libuv/lib:${LD_LIBRARY_PATH}\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\n"
}