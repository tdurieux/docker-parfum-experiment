{
  "startTime": 1674248923614,
  "endTime": 1674248923686,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 15,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\n# install node and some other items\nRUN apt-get update -q && apt-get install --no-install-recommends -qy npm curl iperf ssh htop && rm -rf /var/lib/apt/lists/*;\nRUN command -v node >/dev/null 2>&1 || { ln -s /usr/bin/nodejs /usr/bin/node; }\n\n# the node dependencies for our node server app\n# using caching suggestions per http://bitjudo.com/blog/2014/03/13/building-efficient-dockerfiles-node-dot-js/\nADD ./server/package.json /tmp/package.json\nRUN cd /tmp && npm install && npm cache clean --force;\n\n# put the shell scripts in place\nADD ./sbin /usr/local/sbin\n\n# our node server app\nADD ./server /server\nRUN cp -r /tmp/node_modules /server/.\n\n# expose port 80 for the node server\nEXPOSE 80 5001\n\nCMD [\"/usr/local/sbin/simple-container-benchmarks-init\"]"
}