{
  "startTime": 1674240621737,
  "endTime": 1674240621856,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:17.10\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  gcc make libc6-dev git curl ca-certificates \\\n  gcc-aarch64-linux-gnu qemu-user && rm -rf /var/lib/apt/lists/*;\nRUN curl -f https://www.musl-libc.org/releases/musl-1.1.16.tar.gz | \\\n    tar xzf - && \\\n    cd musl-1.1.16 && \\\n    CC=aarch64-linux-gnu-gcc \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/musl-aarch64 --enable-wrapper=yes && \\\n    make install -j4 && \\\n    cd .. && \\\n    rm -rf musl-1.1.16 && \\\n# Install linux kernel headers sanitized for use with musl\n    curl -f -L https://github.com/sabotage-linux/kernel-headers/archive/v3.12.6-5.tar.gz | \\\n    tar xzf - && \\\n    cd kernel-headers-3.12.6-5 && \\\n    make ARCH=arm64 prefix=/musl-aarch64 install -j4 && \\\n    cd .. && \\\n    rm -rf kernel-headers-3.12.6-5\n\n# FIXME: shouldn't need the `-lgcc` here, shouldn't that be in libstd?\nENV PATH=$PATH:/musl-aarch64/bin:/rust/bin \\\n    CC_aarch64_unknown_linux_musl=musl-gcc \\\n    RUSTFLAGS='-Clink-args=-lgcc' \\\n    CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_LINKER=musl-gcc \\\n    CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_RUNNER=\"qemu-aarch64 -L /musl-aarch64\"\n"
}