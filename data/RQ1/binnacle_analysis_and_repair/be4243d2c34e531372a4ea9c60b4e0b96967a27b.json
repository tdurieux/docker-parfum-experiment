{
  "startTime": 1674237031336,
  "endTime": 1674237031405,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the newest LTS (long term support) version of ubuntu\nFROM ubuntu:16.04\n\n# Update the list of packages for the system installer apt\n# https://help.ubuntu.com/lts/serverguide/apt.html\nRUN apt-get update && apt-get install --no-install-recommends -y python3 python3-pip python3-venv && rm -rf /var/lib/apt/lists/*; # Install python 3, pip & venv (virtual env) with apt\n\n\n# Make a directory to work in\nRUN mkdir -p /opt/project\n\n# Move to the new directory\nWORKDIR /opt/project\n\n# Make a non-root user\nRUN useradd unc\n\n# Make that user the owner of the files in our project directory\nRUN chown -R unc /opt/project\n\n# Create a virtualenv\nRUN python3 -m venv /opt/project/env\n\n# Create a requirements.txt\nRUN echo \"django==2.0\\npsycopg2\" > /opt/project/requirements.txt\n\n# PIP install the requirements\nRUN /opt/project/env/bin/pip3 install -r requirements.txt\n\n# Use the Django default StartProject command\nRUN /opt/project/env/bin/django-admin startproject mysite\n\n# Remove old settings.py\nRUN rm /opt/project/mysite/mysite/settings.py\n\n# Replace settings.py with our modified version\nCOPY settings.py /opt/project/mysite/mysite/settings.py\n\n# Switch to the unc user\nUSER unc"
}