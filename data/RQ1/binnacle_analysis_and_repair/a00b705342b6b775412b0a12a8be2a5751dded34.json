{
  "startTime": 1674251190124,
  "endTime": 1674251190453,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 21,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 62,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 62,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 65,
        "columnEnd": 114
      }
    }
  ],
  "repairedDockerfile": "# This container creates the claudia builder image, which contains the environment necessary to build this project (e.g. golang, node)\n\nFROM debian:9.1\n\n# Install python, git, packer, mkdocs\n# NOTE: python2 is installed over python3 because python2 eventually gets installed\n# by the nodejs setup script anyways, and mkdocs prefers python2 over python3\n# because of click incompatibilites.\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    wget \\\n    python-minimal \\\n    git \\\n    curl \\\n    gcc \\\n    gnupg \\\n    unzip && \\\n    curl -f https://bootstrap.pypa.io/get-pip.py | python && \\\n    pip install --no-cache-dir mkdocs==0.16.1 && \\\n    wget https://releases.hashicorp.com/packer/0.12.2/packer_0.12.2_linux_amd64.zip && \\\n    unzip -d /usr/bin packer*.zip && \\\n    rm -f packer*.zip && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install docker (necessary for using this image as the build container during Argo CI)\nENV DOCKER_BUCKET get.docker.com\nENV DOCKER_VERSION 1.11.2\nENV DOCKER_SHA256 8c2e0c35e3cda11706f54b2d46c2521a6e9026a7b13c7d4b8ae1f3a706fc55e1\n\nRUN set -x \\\n\t&& curl -fSL \"https://${DOCKER_BUCKET}/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz \\\n\t&& echo \"${DOCKER_SHA256}  *docker.tgz\" | sha256sum -c - \\\n\t&& tar -xzvf docker.tgz \\\n\t&& mv docker/* /usr/local/bin/ \\\n\t&& rmdir docker \\\n\t&& rm docker.tgz \\\n\t&& docker -v\n\n# Install go\nENV GO_VERSION 1.8.3\nENV GO_ARCH amd64\nRUN wget https://storage.googleapis.com/golang/go${GO_VERSION}.linux-${GO_ARCH}.tar.gz && \\\n    tar -C /usr/local/ -xf /go${GO_VERSION}.linux-${GO_ARCH}.tar.gz && \\\n    rm /go${GO_VERSION}.linux-${GO_ARCH}.tar.gz\n\n# Install nodejs\nRUN curl -f -sL https://deb.nodesource.com/setup_7.x | bash - && apt-get install --no-install-recommends -y nodejs && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nENV GOPATH /root/go\nENV PATH ${GOPATH}/bin:/usr/local/go/bin:${PATH}\n\n# Install glide\nRUN mkdir -p ${GOPATH}/bin && \\\n    mkdir -p ${GOPATH}/pkg && \\\n    mkdir -p ${GOPATH}/src && \\\n    wget https://glide.sh/get && \\\n    chmod ugo+x ./get && \\\n    ./get && \\\n    rm -f get && \\\n    rm -rf /tmp/glide*\n\n# Install Go dependencies and some tooling\nCOPY glide.yaml ${GOPATH}\nCOPY glide.lock ${GOPATH}\nRUN cd ${GOPATH} && \\\n    glide install && \\\n    mv vendor/* src/ && \\\n    rmdir vendor && \\\n    go get -u -v github.com/derekparker/delve/cmd/dlv && \\\n    go get -u -v gopkg.in/alecthomas/gometalinter.v1 && \\\n    cd ${GOPATH}/bin && \\\n    ln -s gometalinter.v1 gometalinter && \\\n    gometalinter --install\n\n# Install Node dependencies\nCOPY ui/package.json /root/node/package.json\nCOPY ui/npm-shrinkwrap.json /root/node/npm-shrinkwrap.json\nRUN cd /root/node && npm install && npm cache clean --force;\n\n# MkDocs Themes\nRUN pip install --no-cache-dir mkdocs-bootswatch\n"
}