{
  "startTime": 1674236072223,
  "endTime": 1674236072375,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nENV NODE_VERSION 8.15.0\nENV DOCKER_VERSION 17.12.0~ce-0~ubuntu\n\nRUN apt-get update && apt-get install --no-install-recommends -y apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\n# Add key for docker apt repository\nRUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 9DC858229FC7DD38854AE2D88D81803C0EBFCD88 && \\\n    echo \"deb [arch=amd64] https://download.docker.com/linux/ubuntu trusty stable\" > /etc/apt/sources.list.d/docker.list\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    curl \\\n    ca-certificates \\\n    docker-ce=$DOCKER_VERSION \\\n    git \\\n    iptables \\\n    lxc \\\n    python \\\n    jq && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -SL \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" | \\\n    tar xz -C /usr/local --strip-components=1 && \\\n    npm install -g babel-cli yarn@1.0.2 && npm cache clean --force;\n\nenv HOME /home/tester\nenv SHELL /bin/bash\nenv PATH $PATH:/home/tester/bin\nworkdir /home/tester\n\nCOPY bin /home/tester/bin/\nCOPY ./wrapdocker /usr/local/bin/wrapdocker\nCOPY ./gitconfig /home/tester/.gitconfig\n\n# install our custom git plugin\nCOPY git/target/doc/git-ci-checkout-pr.1 /usr/local/man/man1/git-ci-checkout-pr.1\nCOPY git/target/doc/git-ci-checkout-ref.1 /usr/local/man/man1/git-ci-checkout-ref.1\nCOPY git/target/doc/git-ci-checkout-setup.1 /usr/local/man/man1/git-ci-checkout-setup.1\nCOPY git/git-ci-checkout-pr /usr/local/bin/git-ci-checkout-pr\nCOPY git/git-ci-checkout-ref /usr/local/bin/git-ci-checkout-ref\nCOPY git/git-ci-checkout-setup /usr/local/bin/git-ci-checkout-setup\n\nRUN chmod +x /usr/local/bin/wrapdocker\nRUN chmod a+x /home/tester/bin/*\n\n# Define additional metadata for our image.\nVOLUME /var/lib/docker\n\nENTRYPOINT [\"wrapdocker\"]\n"
}