{
  "startTime": 1674251200060,
  "endTime": 1674251200169,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 122
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.8\n\nENV SPARK_VERSION=2.4.0\nENV HADOOP_VERSION=2.7\nENV PYTHONHASHSEED 1\n\nENV SPARK_MASTER_PORT 7077\nENV SPARK_MASTER_WEBUI_PORT 8080\nENV SPARK_MASTER_LOG /spark/logs\n\nEXPOSE 8080 7077 6066\n\nRUN apk add --no-cache curl bash openjdk8-jre python3 py-pip && \\\n    chmod +x *.sh && \\\n    wget https://apache.mirror.iphh.net/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz && \\\n    tar -xvzf spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz && \\\n    mv spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION} spark && \\\n    rm spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz && \\\n    cd /\n\nENV SPARK_MASTER_HOST=`hostname`\n\nRUN . \"/spark/sbin/spark-config.sh\" && \\\n    . \"/spark/bin/load-spark-env.sh\" && \\\n    mkdir -p $SPARK_MASTER_LOG && \\\n    export SPARK_HOME=/spark && \\\n    ln -sf /dev/stdout $SPARK_MASTER_LOG/spark-master.out && \\\n    cd /spark/bin && /spark/sbin/../bin/spark-class org.apache.spark.deploy.master.Master \\\n        --ip $SPARK_MASTER_HOST \\\n\t--port $SPARK_MASTER_PORT \\\n\t--webui-port $SPARK_MASTER_WEBUI_PORT >> \\\n\t$SPARK_MASTER_LOG/spark-master.out\n\n# Install Java compile environments\n# ref: https://github.com/docker-library/openjdk/blob/master/8-jdk/alpine/Dockerfile\n# You may need to check the Alpine package repository for latest OpenJDK package available.\n# ref: https://pkgs.alpinelinux.org/packages?name=openjdk8&branch=v3.8&repo=&arch=x86_64\nRUN { \\\n        echo '#!/bin/sh'; \\\n        echo 'set -e'; \\\n        echo; \\\n        echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"'; \\\n    } > /usr/local/bin/docker-java-home \\\n    && chmod +x /usr/local/bin/docker-java-home\nENV JAVA_HOME /usr/lib/jvm/java-1.8-openjdk\nENV PATH $PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin\nENV JAVA_VERSION 8u191\nENV JAVA_ALPINE_VERSION 8.191.12-r0\n\nRUN set -x \\\n    && apk add --no-cache \\\n        openjdk8=\"$JAVA_ALPINE_VERSION\" \\\n    && [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]\n\n# Backend.AI specifics\nENV LD_LIBRARY_PATH=/opt/backend.ai/lib\nRUN apk add --no-cache libffi libzmq\nCOPY policy.yml /etc/backend.ai/jail/policy.yml\nLABEL ai.backend.kernelspec=\"1\" \\\n      ai.backend.features=\"batch query uid-match user-input\" \\\n      ai.backend.base-distro=\"alpine3.8\" \\\n      ai.backend.resource.min.cpu=\"1\" \\\n      ai.backend.resource.min.mem=\"256m\" \\\n      ai.backend.runtime-type=\"java\" \\\n      ai.backend.runtime-path=\"/usr/lib/jvm/java-1.8-openjdk/bin/java\" \\\n      ai.backend.service-ports=\"\"\n\n# vim: ft=dockerfile\n"
}