{
  "startTime": 1674234830669,
  "endTime": 1674234831002,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.5\n\nENV NGINX_VERSION=1.13.5\n\nRUN set -x \\\n && mkdir -p \\\n      /tmp/src/nginx \\\n      /usr/lib/nginx/modules \\\n      /var/cache/nginx \\\n && apk add --no-cache --virtual .build-deps \\\n      curl \\\n      gcc \\\n      gd-dev \\\n      geoip-dev \\\n      gnupg \\\n      libc-dev \\\n      libxslt-dev \\\n      linux-headers \\\n      make \\\n      openldap-dev \\\n      pcre-dev \\\n      tar \\\n      unzip \\\n      zlib-dev \\\n# Install Nginx from source, see http://nginx.org/en/linux_packages.html#mainline \\\n && curl -fsSL https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz | tar vxz --strip=1 -C /tmp/src/nginx \\\n && curl -fsSL https://github.com/kvspb/nginx-auth-ldap/archive/master.zip -o /tmp/nginx-auth-ldap-master.zip \\\n && unzip -d /tmp/src /tmp/nginx-auth-ldap-master.zip \\\n && cd /tmp/src/nginx \\\n && addgroup -S nginx \\\n && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t\t\t\t--prefix=/usr/share/nginx \\\n\t\t\t\t\t--sbin-path=/usr/sbin/nginx \\\n\t\t\t\t\t--modules-path=/usr/lib/nginx/modules \\\n\t\t\t\t\t--conf-path=/etc/nginx/nginx.conf \\\n\t\t\t\t\t--error-log-path=/var/log/nginx/error.log \\\n\t\t\t\t\t--http-log-path=/var/log/nginx/access.log \\\n\t\t\t\t\t--pid-path=/var/run/nginx.pid \\\n\t\t\t\t\t--lock-path=/var/run/nginx.lock \\\n      --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n\t\t\t\t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n\t\t\t\t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n\t\t\t\t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n\t\t\t\t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n      --user=nginx \\\n      --group=nginx \\\n      --with-http_ssl_module \\\n    --with-http_realip_module \\\n    --with-http_addition_module \\\n    --with-http_sub_module \\\n    --with-http_dav_module \\\n    --with-http_flv_module \\\n    --with-http_mp4_module \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_random_index_module \\\n    --with-http_secure_link_module \\\n    --with-http_stub_status_module \\\n    --with-http_auth_request_module \\\n    --with-http_xslt_module=dynamic \\\n    --with-http_image_filter_module=dynamic \\\n    --with-http_geoip_module=dynamic \\\n    --with-threads \\\n    --with-stream \\\n    --with-stream_ssl_module \\\n    --with-stream_ssl_preread_module \\\n    --with-stream_realip_module \\\n    --with-stream_geoip_module=dynamic \\\n    --with-http_slice_module \\\n    --with-mail \\\n    --with-mail_ssl_module \\\n    --with-compat \\\n    --with-file-aio \\\n    --with-http_v2_module \\\n      --add-module=/tmp/src/nginx-auth-ldap-master \\\n && make -j$(getconf _NPROCESSORS_ONLN) \\\n && make install \\\n && mkdir -vp \\\n      /etc/nginx/conf.d/ \\\n      /usr/share/nginx/html/ \\\n && install -m644 html/index.html /usr/share/nginx/html/ \\\n && install -m644 html/50x.html /usr/share/nginx/html/ \\\n && ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log \\\n && apk add --no-cache --virtual .gettext gettext \\\n && mv /usr/bin/envsubst /tmp/ \\\n && runDeps=\"$( \\\n    scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \\\n      | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n      | sort -u \\\n      | xargs -r apk info --installed \\\n      | sort -u \\\n    )\" \\\n && apk add --no-cache --virtual .nginx-rundeps $runDeps \\\n# Clean up build-time packages\n && apk del .build-deps \\\n && apk del .gettext \\\n# Clean up anything else\n && rm -fr \\\n    /etc/nginx/*.default \\\n    /tmp/* \\\n    /var/tmp/* \\\n    /var/cache/apk/*\n\nCOPY --from=library/nginx:alpine /etc/nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY --from=library/nginx:alpine /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf\n\nEXPOSE 80\n\nSTOPSIGNAL SIGTERM\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}