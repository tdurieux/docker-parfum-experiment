{
  "startTime": 1674236274229,
  "endTime": 1674236274387,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 28,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\nMAINTAINER Dataverse (support@dataverse.org)\n\nCOPY glassfish-4.1.zip /tmp\nCOPY weld-osgi-bundle-2.2.10.Final-glassfish4.jar /tmp\nCOPY default.config /tmp\n# Install dependencies\n#RUN yum install -y unzip\nRUN yum install -y \\\n    cronie \\\n    git \\\n    java-1.8.0-openjdk-devel \\\n    nc \\\n    perl \\\n    postgresql \\\n    sha1sum \\\n    unzip \\\n    wget && rm -rf /var/cache/yum\n\nENV GLASSFISH_DOWNLOAD_SHA1 d1a103d06682eb08722fbc9a93089211befaa080\nENV GLASSFISH_DIRECTORY \"/usr/local/glassfish4\"\nENV HOST_DNS_ADDRESS \"localhost\"\nENV POSTGRES_DB \"dvndb\"\nENV POSTGRES_USER \"dvnapp\"\nENV RSERVE_USER \"rserve\"\nENV RSERVE_PASSWORD \"rserve\"\n\n#RUN exitEarlyBeforeJq\nRUN yum -y install epel-release \\\n    jq && rm -rf /var/cache/yum\n\nCOPY dvinstall.zip /tmp\n\n#RUN ls /tmp\n#\nRUN find /tmp\n#\n#RUN exitEarly\n\n# Install Glassfish 4.1\nRUN cd /tmp \\\n    && unzip glassfish-4.1.zip \\\n    && mv glassfish4 /usr/local \\\n    && cd /usr/local/glassfish4/glassfish/modules \\\n    && rm weld-osgi-bundle.jar \\\n    && cp /tmp/weld-osgi-bundle-2.2.10.Final-glassfish4.jar . \\\n    && cd /tmp && unzip /tmp/dvinstall.zip \\\n    && chmod 777 -R /tmp/dvinstall/ \\\n    #FIXME: Patch Grizzly too!\n    && echo \"Done installing and patching Glassfish\"\n\nRUN chmod g=u /etc/passwd\n\nRUN mkdir -p /home/glassfish\nRUN chgrp -R 0 /home/glassfish && \\\n    chmod -R g=u /home/glassfish\n\nRUN mkdir -p /usr/local/glassfish4\nRUN chgrp -R 0 /usr/local/glassfish4 && \\\n    chmod -R g=u /usr/local/glassfish4\n\n#JHOVE\nRUN cp /tmp/dvinstall/jhove* /usr/local/glassfish4/glassfish/domains/domain1/config\n\n\n#SETUP JVM OPTIONS\nARG DOCKER_BUILD=\"true\"\nRUN echo $DOCKER_BUILD\nRUN /tmp/dvinstall/glassfish-setup.sh\n###glassfish-setup will handle everything in Dockerbuild\n\n##install jdbc driver\nRUN cp /tmp/dvinstall/pgdriver/postgresql-42.2.2.jar /usr/local/glassfish4/glassfish/domains/domain1/lib\n\n# Customized persistence xml to avoid database recreation\n#RUN mkdir -p /tmp/WEB-INF/classes/META-INF/\n#COPY WEB-INF/classes/META-INF/persistence.xml /tmp/WEB-INF/classes/META-INF/\n\n# Install iRods iCommands\n#RUN  cd /tmp \\\n#   && yum -y install epel-release \\\n#   && yum -y install ftp://ftp.renci.org/pub/irods/releases/4.1.6/centos7/irods-icommands-4.1.6-centos7-x86_64.rpm\n\n#COPY config-glassfish /root/dvinstall\n#COPY restart-glassfish /root/dvinstall\n#COPY config-dataverse /root/dvinstall\n\n#RUN cd /root/dvinstall && ./config-dataverse\nCOPY ./entrypoint.sh /\n#COPY ./ddl /root/dvinstall\n#COPY ./init-postgres /root/dvinstall\n#COPY ./init-glassfish /root/dvinstall\n#COPY ./init-dataverse /root/dvinstall\n#COPY ./setup-all.sh /root/dvinstall\n#COPY ./setup-irods.sh /root/dvinstall\nCOPY ./Dockerfile /\n\nEXPOSE      8080\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"dataverse\"]\n"
}