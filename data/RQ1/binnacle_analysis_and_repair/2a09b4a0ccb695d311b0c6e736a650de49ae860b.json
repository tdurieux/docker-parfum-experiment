{
  "startTime": 1674250953013,
  "endTime": 1674250953125,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 8,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM usgs/centos:latest AS pycurl-build\n\n# install conda dependencies\nRUN yum install -y \\\n        bzip2 \\\n        gcc \\\n        libcurl-devel \\\n        && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# install conda\nENV PATH /conda/bin:$PATH\nRUN echo 'export PATH=/conda/bin:$PATH' > /etc/profile.d/conda.sh && \\\n    curl -f https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh \\\n        -o ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /conda && \\\n    rm ~/miniconda.sh\n\n# install algorithms and dependencies via conda\nRUN conda config --set ssl_verify $SSL_CERT_FILE && \\\n    conda config --add channels conda-forge && \\\n    conda install --yes jupyter obspy 'icu=58.*' && \\\n    conda clean -i -l -t -y && \\\n    # build pycurl with SFTP support\n        export PIP_CERT=$SSL_CERT_FILE && \\\n        export PYCURL_SSL_LIBRARY=nss && \\\n        pip install --no-cache-dir pycurl\n\n\nFROM usgs/centos:latest\nLABEL maintainer=\"Jeremy Fee <jmfee@usgs.gov>\"\n\n# use conda install from build container\nENV PATH /conda/bin:$PATH\nCOPY --from=pycurl-build /conda /conda\nCOPY --from=pycurl-build /etc/profile.d/conda.sh /etc/profile.d/conda.sh\n\n# copy library (ignores set in .dockerignore)\nCOPY . /geomag-algorithms\n\nRUN pip install --no-cache-dir /geomag-algorithms && \\\n    useradd \\\n        -c 'Docker image user' \\\n        -m \\\n        -r \\\n        -s /sbin/nologin \\\n         geomag_user && \\\n    mkdir -p /home/geomag_user/notebooks && \\\n    chown -R geomag_user:geomag_user /home/geomag_user\n\nUSER geomag_user\n\nWORKDIR /home/geomag_user\nEXPOSE 80\n# entrypoint needs double quotes\nENTRYPOINT [ \"/geomag-algorithms/docker-entrypoint.sh\" ]\n"
}