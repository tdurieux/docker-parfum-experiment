{
  "startTime": 1674239730829,
  "endTime": 1674239731075,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 5,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 73,
        "columnStart": 5,
        "columnEnd": 25
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM balenalib/%%BALENA_MACHINE_NAME%%-node:8-run\n\n# Install Systemd\nENV container docker\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tsystemd-sysv \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# We never want these to run in a container\n# Feel free to edit the list but this is the one we used\nRUN systemctl mask \\\n    dev-hugepages.mount \\\n    sys-fs-fuse-connections.mount \\\n    sys-kernel-config.mount \\\n\n    display-manager.service \\\n    getty@.service \\\n    systemd-logind.service \\\n    systemd-remount-fs.service \\\n\n    getty.target \\\n    graphical.target\n\nCOPY systemd/entry.sh /usr/bin/entry.sh\nCOPY systemd/balena.service /etc/systemd/system/balena.service\n\nRUN systemctl enable /etc/systemd/system/balena.service\n\nSTOPSIGNAL 37\nENTRYPOINT [\"/usr/bin/entry.sh\"]\nENV INITSYSTEM on\n# Finish setup systemd\n\n# Move to app dir\nRUN mkdir -p /usr/src/app/ && rm -rf /usr/src/app/\nWORKDIR /usr/src/app\nCOPY ./app/package.json ./\n\n# Add Mopidy sources and install apt deps\nRUN apt-get update && apt-get install -yq --no-install-recommends wget \\\n  && wget -q -O - https://apt.mopidy.com/mopidy.gpg | sudo apt-key add - \\\n  && wget -q -O /etc/apt/sources.list.d/mopidy.list https://apt.mopidy.com/jessie.list \\\n  && apt-get update && apt-get install -yq --no-install-recommends \\\n    git \\\n    build-essential \\\n    python-dev \\\n    python-pip \\\n    python-wheel \\\n    libxml2-dev \\\n    libz-dev \\\n    libxslt1-dev \\\n    alsa-utils \\\n    autoconf \\\n    automake \\\n    libtool \\\n    libdaemon-dev \\\n    libasound2-dev \\\n    libpopt-dev \\\n    libconfig-dev \\\n    gstreamer1.0-alsa \\\n    gstreamer1.0-plugins-bad \\\n    gstreamer1.0-plugins-good \\\n    gstreamer1.0-plugins-ugly \\\n    gstreamer1.0-tools \\\n    gstreamer1.0-libav \\\n    mopidy \\\n  && JOBS=MAX npm install --unsafe-perm --production && npm cache clean --force && rm -rf /tmp/* \\\n  && pip install --no-cache-dir --upgrade setuptools \\\n  && pip install --no-cache-dir packaging pyparsing youtube-dl \\\n  && pip install --no-cache-dir \\\n      mopidy-gmusic \\\n      Mopidy-YouTube \\\n      mopidy-musicbox-webclient \\\n      Mopidy-Local-SQLite \\\n  && apt-get purge -y \\\n    build-essential \\\n    python-dev \\\n    python-pip \\\n    git \\\n    curl \\\n    libxml2-dev \\\n    libxslt1-dev \\\n    autoconf \\\n    automake \\\n    libtool \\\n    libdaemon-dev \\\n    libasound2-dev \\\n    libpopt-dev \\\n    libconfig-dev \\\n    libz-dev \\\n  && apt-get autoremove -y \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Configure Mopidy\nCOPY ./Dockerbin/mopidy.conf /etc/mopidy/mopidy.conf\n\n# Configure DAC\nCOPY ./Dockerbin/asound.conf /etc/asound.conf\n\n# Move app to filesystem\nCOPY ./app ./\n\n# Disable mopidy service - we will manually start it later\nRUN systemctl disable mopidy\n\n# Start app\nCMD [\"bash\", \"/usr/src/app/start.sh\"]\n"
}