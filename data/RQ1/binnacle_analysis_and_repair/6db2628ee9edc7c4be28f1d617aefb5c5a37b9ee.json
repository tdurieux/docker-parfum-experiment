{
  "startTime": 1674246248344,
  "endTime": 1674246248377,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM frolvlad/alpine-oraclejdk8:slim\nMAINTAINER Kevin DAVIN  <https://github.com/davinkevin/Podcast-Server/issues>\n\n#Installation of native dependencies :\nRUN apk add --no-cache --update ffmpeg\nRUN apk add --no-cache --update rtmpdump\n\n# Configuration specific for docker container\nENV podcastserver.backup.location \"/opt/podcast-server/backup/\"\nENV podcastserver.externaltools.rtmpdump \"/usr/bin/rtmpdump\"\nENV podcastserver.externaltools.ffmpeg \"/usr/bin/ffmpeg\"\nENV podcastserver.rootfolder \"/opt/podcast-server/podcasts/\"\nENV logging.path \"/opt/podcast-server/podcast-server.log\"\nENV spring.datasource.url \"jdbc:h2:/opt/podcast-server/db;TRACE_LEVEL_FILE=0;MVCC=TRUE\"\n\n# Exposed port for Web Part and Crash Shell\nEXPOSE 8080\n\n# Shared volume, containing podcast and logs\nVOLUME /tmp\nVOLUME /opt/podcast-server\n\nWORKDIR /opt/podcast-server\nADD Podcast-Server.jar /opt/podcast-server/app.jar\nRUN sh -c 'touch /opt/podcast-server/app.jar'\nENTRYPOINT [\"java\",\"-Djava.security.egd=file:/dev/./urandom\",\"-jar\",\"/opt/podcast-server/app.jar\"]\n\n# RUN with docker like that :\n# $ docker run -it -p 8080:8080 davinkevin/podcast-server:v1.0.0\n\n# To configure it with external application.(properties|yaml), you can mount the file like this :\n#\n# $ docker run -it -v /path/to/application.yml:/opt/podcast-server/application.yml -p 8080:8080 davinkevin/podcast-server:1.0.0\n#\n# /!\\ You can't override values defined as ENV in this Dockerfile through the application.yml. If you still want to, you have\n# to use the `-e` flag of docker : -e podcastserver.backup.location='/opt/podcast-server/backup/'\n"
}