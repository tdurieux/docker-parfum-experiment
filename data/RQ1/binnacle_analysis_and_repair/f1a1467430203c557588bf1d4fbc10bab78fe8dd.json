{
  "startTime": 1674241151492,
  "endTime": 1674241151607,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:boron\n\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\nCOPY package.json /usr/src/app/\nRUN npm install && npm cache clean --force;\n\nCOPY . /usr/src/app\n\nEXPOSE 8000\nEXPOSE 8000/udp\nEXPOSE 8080\nEXPOSE 8081\n\nCMD [\"node\", \"index.js\"]\n\n# This is for swarm mode load balancing, since this thing doesn't work fast\n# enough on a single xeon core with over 150 viewers.\n\n# Set up 4 workers on one quad core machine:\n\n# docker build -t dregu/visio .\n# docker swarm init\n# docker network create --driver overlay --subnet 10.0.9.0/24 visionet\n# docker service create --replicas 4 --name visio --network visionet --publish 8081:8081 dregu/visio\n\n# ws://127.0.0.1:8081/ should be balanced between the 4 workers.\n# Now just duplicate the video stream to all the workers.\n# Check raspi.sh for examples...\n"
}