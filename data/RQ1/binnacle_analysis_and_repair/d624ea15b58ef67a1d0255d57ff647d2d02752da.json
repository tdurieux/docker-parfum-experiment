{
  "startTime": 1674236934692,
  "endTime": 1674236934877,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This will build the currently checked out version\n#\n# we use an intermediate image to build this image. it will make the resulting\n# image a bit smaller.\n#\n# you can build the image with:\n#\n#   docker build . -t contracts\n#\n# The resulting image can be used to deploy contracts with something like the\n# following command:\n#\n# docker run --net=host  --rm -it contracts test --file addresses.json\n#\n\nFROM ubuntu:18.04 as builder\n# python needs LANG\nENV LANG C.UTF-8\nRUN apt-get -y update && \\\n    apt-get -y dist-upgrade && \\\n    apt-get -y install --no-install-recommends libssl-dev curl python3 python3-distutils libpq5 ca-certificates \\\n               pkg-config libsecp256k1-dev python3-dev python3-venv git build-essential libpq-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    curl -f -L -o /usr/bin/solc https://github.com/ethereum/solidity/releases/download/v0.4.25/solc-static-linux && \\\n    chmod +x /usr/bin/solc\n\n# cache /opt/contracts with requirements installed\nRUN python3 -m venv /opt/contracts\nWORKDIR /contracts\nENV PATH \"/opt/contracts/bin:${PATH}\"\nCOPY ./constraints.txt /contracts/constraints.txt\nRUN pip install --no-cache-dir -c constraints.txt pip wheel setuptools\nCOPY ./requirements.txt /contracts/requirements.txt\n\n# remove development dependencies from the end of the file and install requierements\nRUN sed -i -e '/development dependencies/q' requirements.txt && \\\n    pip install --no-cache-dir -c constraints.txt -r requirements.txt\n\nCOPY . /contracts\nRUN pip install --no-cache-dir -c constraints.txt setuptools_scm\nRUN make install-non-editable\nRUN python -c 'import pkg_resources; print(pkg_resources.get_distribution(\"trustlines-contracts-deploy\").version)' >/opt/contracts/VERSION\n\n\nFROM ubuntu:18.04 as runner\nENV LANG C.UTF-8\nENV PATH \"/opt/contracts/bin:${PATH}\"\nRUN apt-get -y update && \\\n    apt-get -y install  --no-install-recommends libssl1.1 python3 python3-distutils libsecp256k1-0 && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    ln -s /opt/contracts/bin/tl-deploy /usr/local/bin/\n\nFROM runner\nCOPY --from=builder /opt/contracts /opt/contracts\nWORKDIR /opt/contracts\nENTRYPOINT [\"tl-deploy\"]\nCMD [\"test\"]\n"
}