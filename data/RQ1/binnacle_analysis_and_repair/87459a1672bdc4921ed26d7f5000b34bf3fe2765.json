{
  "startTime": 1674248787150,
  "endTime": 1674248787257,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.10\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  gcc make libc6-dev git curl ca-certificates && rm -rf /var/lib/apt/lists/*;\n# Below we're cross-compiling musl for i686 using the system compiler on an\n# x86_64 system. This is an awkward thing to be doing and so we have to jump\n# through a couple hoops to get musl to be happy. In particular:\n#\n# * We specifically pass -m32 in CFLAGS and override CC when running ./configure,\n#   since otherwise the script will fail to find a compiler.\n# * We manually unset CROSS_COMPILE when running make; otherwise the makefile\n#   will call the non-existent binary 'i686-ar'.\nRUN curl -f https://www.musl-libc.org/releases/musl-1.1.15.tar.gz | \\\n    tar xzf - && \\\n    cd musl-1.1.15 && \\\n    CC=gcc CFLAGS=-m32 ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/musl-i686 --disable-shared --target=i686 && \\\n    make CROSS_COMPILE= install -j4 && \\\n    cd .. && \\\n    rm -rf musl-1.1.15\nENV PATH=$PATH:/musl-i686/bin:/rust/bin \\\n    CC_i686_unknown_linux_musl=musl-gcc\n"
}