{
  "startTime": 1674242969404,
  "endTime": 1674242969510,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 38
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.5-slim\n\n# Ensure that Python outputs everything that's printed inside\n# the application rather than buffering it.\nENV PYTHONUNBUFFERED 1\n\nRUN mkdir /code\nWORKDIR /code\n\n# Setup the locales in the Dockerfile\nRUN set -x \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends locales -y \\\n    && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\n\n# Install dependencies\nRUN set -x \\\n    && apt-get install \\\n            wget \\\n            bzip2 \\\n            gcc \\\n            libpq-dev \\\n            libjpeg-dev \\\n            libffi-dev \\\n            libxml2-dev \\\n            libxslt1-dev \\\n            binutils \\\n            libproj-dev \\\n            gdal-bin \\\n            nodejs \\\n            git-core \\\n            --no-install-recommends -y \\\n    && apt-get autoremove -y \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Build Python virtualenv\nCOPY ./requirements /code/requirements\nRUN set -ex \\\n    && pip install --no-cache-dir -U virtualenv \\\n    && virtualenv /venv \\\n    && LIBRARY_PATH=/lib:/usr/lib /bin/sh -c \"/venv/bin/pip install -r /code/requirements/dev.txt\"\n\nCOPY . /code/\n\nCMD [\"/code/compose/django/runserver.sh\"]\n"
}