{
  "startTime": 1674245904266,
  "endTime": 1674245904461,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\nLABEL maintainer Lockheed Martin Red Team\n\n# Copyright 2017 Lockheed Martin Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n###########################################################\n# WARNING: Docker support is currently experimental and\n# subject to breaking changes at any time. If you deploy\n# a docker container, it should be considered ONLY if any\n# of the following apply:\n#\n# 1. You're just giving DART a spin\n# 2. Environments where you will NOT need to update DART\n# 3. You know what you're doing and are okay with figuring\n#    some things out on your own. :)\n#\n# A note on proxies: a proxy-friendly Dockerfile will be\n# released in the near future. This dockerfile will currently\n# only build when you do not need to specify a proxy to reach\n# the internet.\n#\n# Build this image (on an internet-connected machine) with:\n# docker build -t dart:latest .\n#\n# Run this image with:\n# docker run -d -p8000:8000 dart\n###########################################################\n\nENV REFRESHED_AT 2017-05-25\n\nRUN mkdir -p /var/log/dart\n\n# System preparation\nRUN apk update | tee -a /var/log/dart/install.log\nRUN apk add --no-cache python2 | tee -a /var/log/dart/install.log\nRUN apk add --no-cache py-django | tee -a /var/log/dart/install.log\nRUN apk add --no-cache py2-pip | tee -a /var/log/dart/install.log\nRUN pip install --no-cache-dir --upgrade pip | tee -a /var/log/dart/install.log\nRUN python --version | tee -a /var/log/dart/install.log\nRUN pip --version | tee -a /var/log/dart/install.log\nRUN django-admin --version | tee -a /var/log/dart/install.log\n\n# Prep for the compilation of lxml\nRUN apk add --no-cache gcc libc-dev python-dev libxml2-dev libxslt-dev | tee -a /var/log/dart/install.log\n\n# Add the dart files\nADD . /opt/dart/\nWORKDIR /opt/dart\n\n# Requirements installation\n# 3.6.0 is hard coded for a pre-built Windows wheel,\n# here we need to build it so we can grab the latest\nRUN echo \"Removing version pinning for lxml in requirements.txt\" >> /var/log/dart/install.log\nRUN sed -i s/lxml==3.6.0/lxml/ requirements.txt\nRUN echo \"Removed version pinning for lxml in requirements.txt\" >> /var/log/dart/install.log\nRUN pip install --no-cache-dir -r requirements.txt | tee -a /var/log/dart/install.log\n\n# Uninstall unneeded build tools and only install required packages\nRUN apk del gcc libc-dev python-dev libxml2-dev libxslt-dev | tee -a /var/log/dart/install.log\nRUN apk add --no-cache libxslt | tee -a /var/log/dart/install.log\n\n# Database creation / updates\nRUN python manage.py makemigrations | tee -a /var/log/dart/install.log\nRUN python manage.py migrate | tee -a /var/log/dart/install.log\n\n# Load all files in missions/fixtures as fixtures\nRUN ls missions/fixtures/ | xargs -I FIXTURE python manage.py loaddata FIXTURE | tee -a /var/log/dart/install.log\n\n#TODO: Move db.sqlite3, uploaded data, zips into ./data\nVOLUME /opt/dart/data/\nVOLUME /opt/dart/missions/migrations/\nVOLUME /var/log/dart/\n\nCMD python manage.py runserver 0.0.0.0:8000\n\nEXPOSE 8000\n"
}