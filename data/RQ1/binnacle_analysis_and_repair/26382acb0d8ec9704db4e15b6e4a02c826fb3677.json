{
  "startTime": 1674234906560,
  "endTime": 1674234906809,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 9,
        "columnEnd": 187
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 9,
        "columnEnd": 187
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 9,
        "columnEnd": 187
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\n# comment this section out if you live outside firewall\nRUN sudo echo \"deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted\" > /etc/apt/sources.list\nRUN sudo echo \"deb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted\" >> /etc/apt/sources.list\nRUN sudo echo \"deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe\" >> /etc/apt/sources.list\nRUN sudo echo \"deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted\" >> /etc/apt/sources.list\nRUN sudo echo \"deb http://mirrors.aliyun.com/ubuntu/ trusty universe\" >> /etc/apt/sources.list\nRUN sudo echo \"deb-src http://mirrors.aliyun.com/ubuntu/ trusty universe\" >> /etc/apt/sources.list\nRUN sudo echo \"deb http://mirrors.aliyun.com/ubuntu/ trusty multiverse\" >> /etc/apt/sources.list\nRUN sudo echo \"deb-src http://mirrors.aliyun.com/ubuntu/ trusty multiverse\" >> /etc/apt/sources.list\nRUN sudo echo \"deb http://mirrors.aliyun.com/ubuntu/ trusty-updates multiverse\" >> /etc/apt/sources.list\nRUN sudo echo \"deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates multiverse\" >> /etc/apt/sources.list\nRUN sudo echo \"deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse\" >> /etc/apt/sources.list\nRUN sudo echo \"deb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse\" >> /etc/apt/sources.list\n# end F@ck GFW section\n\nRUN sudo echo \"deb http://ppa.launchpad.net/kirillshkrogalev/ffmpeg-next/ubuntu trusty main\" >> /etc/apt/sources.list\n\nRUN echo \"Updating dependencies...\"\nRUN apt-get update && sudo apt-get -y --no-install-recommends --force-yes install deluged deluge-webui postgresql postgresql-contrib python-pip postgresql-client python-dev libyaml-dev python-psycopg2 ffmpeg nodejs python-imaging && rm -rf /var/lib/apt/lists/*;\nRUN echo \"Installing deluge, postgresql, etc..\"\nRUN apt-get\n# avoide invoke-rc.d: policy-rc.d denied execution of start\nRUN echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d\n\n\nRUN echo \"Setting up postgresql user and database...\"\n# Adjust PostgreSQL configuration so that remote connections to the\n# database are possible.\nRUN echo \"host all  all    0.0.0.0/0  md5\" >> /etc/postgresql/9.3/main/pg_hba.conf\n\n# And add ``listen_addresses`` to ``/etc/postgresql/9.3/main/postgresql.conf``\nRUN echo \"listen_addresses='*'\" >> /etc/postgresql/9.3/main/postgresql.conf\n\n# Expose the PostgreSQL port\nEXPOSE 5432\n\n# http://askubuntu.com/questions/371832/how-can-run-sudo-commands-inside-another-user-or-grant-a-user-the-same-privileg\nRUN usermod -a -G sudo postgres\nUSER postgres\nRUN /etc/init.d/postgresql start && psql -U postgres -d postgres -c \"alter user postgres with password '123456';\"\nRUN /etc/init.d/postgresql start && createdb -O postgres albireo\n\n\nUSER root\nRUN useradd -p albireo -m albireo\n\nUSER albireo\nWORKDIR /home/albireo\n#\"Setting up deluge user...\"\nRUN mkdir .config\nRUN mkdir .config/deluge\nRUN touch .config/deluge/auth\nRUN echo \":deluge:10\" >> ~/.config/deluge/auth\n\nADD . /home/albireo/\n\n#\"Installing python dependencies...\"\nUSER root\nRUN pip install --no-cache-dir -r requirements.txt\nRUN chmod -R 777 /home/albireo\n\n\nUSER albireo\nRUN echo \"Setting up config file...\"\nRUN echo \"Initialing database...\"\nUSER root\n\nEXPOSE 5000\n\n# set up locale\nRUN locale-gen \"en_US.UTF-8\"\nENV LC_ALL en_US.UTF-8\n\n# Add VOLUMEs to allow backup of config, logs and databases\nVOLUME  [\"/etc/postgresql\", \"/var/log/postgresql\", \"/var/lib/postgresql\"]\n\nCMD [\"bash\", \"-c\", \"/etc/init.d/postgresql start && python /albireo/server.py\"]\n# /etc/init.d/postgresql start && python tools.py --db-init && python tools.py --user-add admin 1234 && python tools.py --user-promote admin 3\n# docker volume create --name postgres\n# docker run -it -v \"`pwd`:/albireo\" -v postgres:/var/lib/postgresql -p 5000:5000 albireo bash\n"
}