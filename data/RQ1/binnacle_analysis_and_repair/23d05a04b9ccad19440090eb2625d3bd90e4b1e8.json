{
  "startTime": 1674252096125,
  "endTime": 1674252096599,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 2,
        "columnEnd": 57
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 118,
        "lineEnd": 119,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 120,
        "lineEnd": 121,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 2,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 2,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 as base\nUSER root\n\n## Setting default environment variables\nENV WEB_ROOT=/web_root\n# Root project folder\nENV ARCHES_ROOT=${WEB_ROOT}/arches\nENV WHEELS=/wheels\nENV PYTHONUNBUFFERED=1\n\nFROM base as wheelbuilder\n\nWORKDIR ${WHEELS}\n\n# Install pip requirements files\nCOPY ./arches/install/requirements.txt ${WHEELS}/requirements.txt\nCOPY ./arches/install/requirements_dev.txt ${WHEELS}/requirements_dev.txt\n\n# Install packages required to build the python libs, then remove them\nRUN set -ex \\\n    && BUILD_DEPS=\" \\\n        build-essential \\\n        libpcre3-dev \\\n        libxml2-dev \\\n        libjson0-dev \\\n        libproj-dev \\\n        libgdal1-dev \\\n        python-dev \\\n        python-software-properties \\\n        libpq-dev \\\n        zlib1g-dev \\\n        clang \\\n        make \\\n        pkg-config \\\n        xsltproc \\\n        docbook-xsl \\\n        mime-support \\\n        docbook-mathml \\\n        curl \\\n        python-setuptools \\\n        dos2unix \\\n        libgeos-3.5.0 \\\n        nodejs \\\n        nodejs-legacy \\\n        npm \\\n        libldap2-dev \\\n        libsasl2-dev \\\n    \" \\\n    && apt-get update && apt-get install -y --no-install-recommends $BUILD_DEPS \\\n    && curl -f -O https://bootstrap.pypa.io/get-pip.py \\\n    && python get-pip.py \\\n    && rm -rf /var/lib/apt/lists/* get-pip.py \\\n    && pip install --no-cache-dir -U pip setuptools \\\n    && pip wheel --no-cache-dir -b /tmp requests \\\n    && pip wheel --no-cache-dir -b /tmp -r ${WHEELS}/requirements.txt \\\n    && pip wheel --no-cache-dir -b /tmp -r ${WHEELS}/requirements_dev.txt \\\n    && pip wheel --no-cache-dir -b /tmp 'gunicorn==19.7.1' \\\n    && pip wheel --no-cache-dir -b /tmp django-auth-ldap\n\n# Add Docker-related files\nCOPY docker/entrypoint.sh ${WHEELS}/entrypoint.sh\nRUN chmod -R 700 ${WHEELS} &&\\\n  dos2unix ${WHEELS}/*.sh\n\nFROM base\n\n# Get the pre-built python wheels from the build environment\nRUN mkdir ${WEB_ROOT}\n\nCOPY --from=wheelbuilder ${WHEELS} /wheels\n\n# Install packages required to run Arches\n# Note that the ubuntu/debian package for libgdal1-dev pulls in libgdal1i, which is built\n# with everything enabled, and so, it has a huge amount of dependancies (everything that GDAL\n# support, directly and indirectly pulling in mysql-common, odbc, jp2, perl! ... )\n# a minimised build of GDAL could remove several hundred MB from the container layer.\nRUN set -ex \\\n    && RUN_DEPS=\" \\\n        mime-support \\\n        curl \\\n        python-setuptools \\\n        libgdal1-dev \\\n        libgeos-3.5.0 \\\n        nodejs \\\n        nodejs-legacy \\\n        npm \\\n    \" \\\n    && apt-get update && apt-get install -y --no-install-recommends $RUN_DEPS \\\n    && curl -f -sL https://deb.nodesource.com/setup_6.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && curl -f -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n    && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends yarn \\\n    && curl -f -O https://bootstrap.pypa.io/get-pip.py \\\n    && python get-pip.py \\\n    && rm -rf /var/lib/apt/lists/* get-pip.py\n\n## Install Postgresql client\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list && \\\n  curl -f https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \\\n  apt-get update -y && \\\n  apt-get install --no-install-recommends -y postgresql-client-9.6 && rm -rf /var/lib/apt/lists/*;\n\n## Install virtualenv\nWORKDIR ${WEB_ROOT}\n\n# Install the Arches application\n# FIXME: ADD from github repository instead?\nCOPY . ${ARCHES_ROOT}\n\nRUN mv ${WHEELS}/entrypoint.sh entrypoint.sh\n\nRUN pip install --no-cache-dir virtualenv==15.1.0 \\\n    && virtualenv ENV \\\n    && . ENV/bin/activate \\\n    && pip install --no-cache-dir -U pip setuptools \\\n    && pip install --no-cache-dir requests \\\n    && pip install --no-cache-dir -r ${WHEELS}/requirements.txt \\\n                   -f ${WHEELS} \\\n    && pip install --no-cache-dir -r ${WHEELS}/requirements_dev.txt \\\n                   -f ${WHEELS} \\\n    && rm -rf ${WHEELS} \\\n    && rm -rf /root/.cache/pip/*\n\n# From here, run commands from ARCHES_ROOT\nWORKDIR ${ARCHES_ROOT}\n\nRUN . ../ENV/bin/activate \\\n    && pip install --no-cache-dir -e . --no-binary :all:\n\n# Install Yarn components\nCOPY ./package.json ${ARCHES_ROOT}/package.json\nRUN yarn install && yarn cache clean;\n\nCOPY docker/gunicorn_config.py ${ARCHES_ROOT}/gunicorn_config.py\nCOPY docker/settings_local.py ${ARCHES_ROOT}/arches/settings_local.py\n\n# Set entrypoint\nENTRYPOINT [\"../entrypoint.sh\"]\nCMD [\"run_arches\"]\n\n# Expose port 8000\nEXPOSE 8000\n\n# Set default workdir\nWORKDIR ${ARCHES_ROOT}\n"
}