{
  "startTime": 1674243644598,
  "endTime": 1674243644909,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 12,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial\nLABEL maintainer=\"uberbrady, hinchk\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php\nRUN apt-get update && apt-get install --no-install-recommends -y \\\napache2 \\\napache2-bin \\\nlibapache2-mod-php7.1 \\\nphp7.1-curl \\\nphp7.1-ldap \\\nphp7.1-mysql \\\nphp7.1-mcrypt \\\nphp7.1-gd \\\nphp7.1-xml \\\nphp7.1-mbstring \\\nphp7.1-zip \\\nphp7.1-bcmath \\\npatch \\\ncurl \\\nvim \\\ngit \\\nmysql-client \\\nsupervisor \\\n&& apt-get clean \\\n&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN phpenmod mcrypt\nRUN phpenmod gd\nRUN phpenmod bcmath\n\nRUN sed -i 's/variables_order = .*/variables_order = \"EGPCS\"/' /etc/php/7.1/apache2/php.ini\nRUN sed -i 's/variables_order = .*/variables_order = \"EGPCS\"/' /etc/php/7.1/cli/php.ini\n\nRUN useradd -m --uid 1000 --gid 50 docker\n\nRUN echo export APACHE_RUN_USER=docker >> /etc/apache2/envvars\nRUN echo export APACHE_RUN_GROUP=staff >> /etc/apache2/envvars\n\nCOPY docker/000-default.conf /etc/apache2/sites-enabled/000-default.conf\n\n#SSL\nRUN mkdir -p /var/lib/snipeit/ssl\nCOPY docker/001-default-ssl.conf /etc/apache2/sites-enabled/001-default-ssl.conf\n#COPY docker/001-default-ssl.conf /etc/apache2/sites-available/001-default-ssl.conf\n\nRUN a2enmod ssl\n#RUN a2ensite 001-default-ssl.conf\n\nCOPY . /var/www/html\n\nRUN a2enmod rewrite\n\n############ INITIAL APPLICATION SETUP #####################\n\nWORKDIR /var/www/html\n\n#Append to bootstrap file (less brittle than 'patch')\n# RUN sed -i 's/return $app;/$env=\"production\";\\nreturn $app;/' bootstrap/start.php\n\n#copy all configuration files\n# COPY docker/*.php /var/www/html/app/config/production/\nCOPY docker/docker.env /var/www/html/.env\n\nRUN chown -R docker /var/www/html\n\nRUN \\\n\trm -r \"/var/www/html/storage/private_uploads\" && ln -fs \"/var/lib/snipeit/data/private_uploads\" \"/var/www/html/storage/private_uploads\" \\\n      && rm -rf \"/var/www/html/public/uploads\" && ln -fs \"/var/lib/snipeit/data/uploads\" \"/var/www/html/public/uploads\" \\\n      && rm -r \"/var/www/html/storage/app/backups\" && ln -fs \"/var/lib/snipeit/dumps\" \"/var/www/html/storage/app/backups\" \\\n      && mkdir \"/var/lib/snipeit/keys\" && ln -fs \"/var/lib/snipeit/keys/oauth-private.key\" \"/var/www/html/storage/oauth-private.key\" \\\n      && ln -fs \"/var/lib/snipeit/keys/oauth-public.key\" \"/var/www/html/storage/oauth-public.key\" \\\n      && chown docker \"/var/lib/snipeit/keys/\" \\\n      && chmod +x /var/www/html/artisan \\\n      && echo \"Finished setting up application in /var/www/html\"\n\n############## DEPENDENCIES via COMPOSER ###################\n\n#global install of composer\nRUN cd /tmp; curl -f -sS https://getcomposer.org/installer | php; mv /tmp/composer.phar /usr/local/bin/composer\n\n# Get dependencies\nUSER docker\nRUN cd /var/www/html;composer install && rm -rf /home/docker/.composer/cache\nUSER root\n\n############### APPLICATION INSTALL/INIT #################\n\n#RUN php artisan app:install\n# too interactive! Try something else\n\n#COPY docker/app_install.exp /tmp/app_install.exp\n#RUN chmod +x /tmp/app_install.exp\n#RUN /tmp/app_install.exp\n\n############### DATA VOLUME #################\n\nVOLUME [\"/var/lib/snipeit\"]\n\n##### START SERVER\n\nCOPY docker/startup.sh docker/supervisord.conf /\nCOPY docker/supervisor-exit-event-listener /usr/bin/supervisor-exit-event-listener\nRUN chmod +x /startup.sh /usr/bin/supervisor-exit-event-listener\n\nCMD [\"/startup.sh\"]\n\nEXPOSE 80\nEXPOSE 443\n"
}