{
  "startTime": 1674234703493,
  "endTime": 1674234703742,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 156
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 210
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 5,
        "columnEnd": 143
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 5,
        "columnEnd": 209
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 156
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Based on https://hub.docker.com/r/jboss/wildfly/ and https://github.com/jboss-dockerfiles/wildfly/blob/9.0.2.Final/Dockerfile\n\nFROM jboss/wildfly:9.0.2.Final\nMAINTAINER Geoffrey Booth <geoffrey.booth@disney.com>\n\nUSER root\nENV TERM xterm\n\n\n#\n# Install OpenText Media Management dependencies\n#\n# - ImageMagick, per http://webapp.opentext.com/piroot/medmgt/v160200/medmgt-igd/en/html/aid-34.htm\n# - PostgresQL, just the client libraries and not the server, so we get the psql command used in entrypoint.sh; note that the 9.4 below must match the version in the postgres Dockerfile\n# - X Virtual Framebuffer, per http://webapp.opentext.com/piroot/medmgt/v160200/medmgt-igd/en/html/x-virtual.htm\n# - MediaInfo, per https://knowledge.opentext.com/knowledge/piroot/medmgt/v160000/medmgt-igd/en/html/jsframe.htm?instl-media-info and http://stackoverflow.com/a/27320898/223225\n# - Exiftool, to work with image EXIF headers; http://xmodulo.com/view-or-edit-pdf-and-image-metadata-from-command-line-on-linux.html\n# - Screen, to create persistent terminal sessions that can be attached or detached from; https://www.gnu.org/software/screen/\nRUN yum clean all \\\n\t&& yum --enablerepo extras install -y epel-release rpmforge-release \\\n\t&& curl -f --retry 999 --retry-max-time 0 -C - --show-error --location https://rpms.famillecollet.com/enterprise/remi-release-7.rpm --output remi-release-7.rpm \\\n\t&& rpm --verbose --hash --upgrade remi-release-7*.rpm \\\n\t&& rm remi-release-7.rpm \\\n\t&& yum --enablerepo=remi install -y ImageMagick7 \\\n\t&& curl -f --retry 999 --retry-max-time 0 -C - --show-error --location https://download.postgresql.org/pub/repos/yum/9.4/redhat/rhel-7-x86_64/pgdg-centos94-9.4-3.noarch.rpm --output pgdg-centos94-9.4-3.noarch.rpm \\\n\t&& rpm --verbose --hash --upgrade pgdg-centos94-9.4-3.noarch.rpm \\\n\t&& rm pgdg-centos94-9.4-3.noarch.rpm \\\n\t# iputils causes `cap_set_file` error, https://github.com/docker/docker/issues/6980; but we donâ€™t need it\n\t&& yum remove -y iputils \\\n\t&& yum update -y \\\n\t&& yum install -y xorg-x11-server-Xvfb mediainfo postgresql94 perl-Image-ExifTool screen \\\n\t&& yum clean all && rm -rf /var/cache/yum\n\n# Copy patched CentOS `/etc/init.d/functions` file into this image, as $TEAMS_HOME/bin/mediamanagement-process-manager and indexer-process-manager are expecting it\nCOPY functions.sh /etc/init.d/functions\n\n\n#\n# Copy install files, or installed files, for OpenText Media Management\n# See https://knowledge.opentext.com/knowledge/piroot/medmgt/v160000/medmgt-igd/en/html/jsframe.htm?aid-32\n#\n\n# Copy in the installer config file\nCOPY mediamanagement_config.txt /opt/\n\n# Based on http://stackoverflow.com/a/26156895/223225 and http://jonathan.bergknoff.com/journal/building-good-docker-images\nARG DOCKER_MODE\nARG OBJECTS_ROOT_URL\nENV INSTALLATION_FILES_SNAPSHOT 2017-04-12-20-55\nRUN if [ \"$DOCKER_MODE\" = 'install-on-start' ]; then \\\n\t\techo 'Copying OpenText Media Management installation files into the image...' \\\n\t\t&& mkdir /opt/opentext-media-management-installer \\\n\t\t&& curl -f --retry 999 --retry-max-time 0 -C - --show-error --location $OBJECTS_ROOT_URL/opentext-media-management-16.2/mediamgmt_16.2_linux.iso \\\n\t\t\t| bsdtar --extract --preserve-permissions --file - --directory /opt/opentext-media-management-installer/; \\\n\telse \\\n\t\techo 'Copying OpenText Media Management post-installation application files into the image...' \\\n\t\t&& rm /opt/mediamanagement_config.txt \\\n\t\t&& curl -f --retry 999 --retry-max-time 0 -C - --show-error --location $OBJECTS_ROOT_URL/opentext-media-management-16.2-post-install/opentext-media-management-installed-files-$INSTALLATION_FILES_SNAPSHOT.tar.gz \\\n\t\t\t| tar --extract --ungzip --directory /; \\\n\tfi\n\n# Based on https://github.com/docker-library/wordpress/blob/master/apache/Dockerfile\nCOPY entrypoint.sh /\nCOPY install.sh /docker/\nCOPY patch.sh /docker/\nCOPY create-installed-files-archive.sh /docker/\nCOPY create-test-data-archive.sh /docker/\nCOPY configure.sh /docker/\nCOPY deploy.sh /docker/\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nEXPOSE 11090\n"
}