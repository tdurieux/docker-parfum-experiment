{
  "startTime": 1674641677225,
  "endTime": 1674641677544,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "# Name:         Dockerfile\n# Description:  build the mercuryiss/kali docker image\n# Date:         2018-01-09\n# Author:       Alexi Chiotis - Mercury ISS\n\nFROM kalilinux/kali-linux-docker\n\n# HACK: prepend AARNet mirror so as to circumvent apt-get 404s\nRUN sed -i \"s/https\\.kali\\.org/mirror\\.aarnet\\.edu\\.au\\/pub\\/kali/g\" /etc/apt/sources.list\n\n# update the archive keyring\n# https://unix.stackexchange.com/questions/421985/invalid-signature-when-trying-to-apt-get-update-on-kali\nRUN apt-get update && apt-get install --no-install-recommends -y gnupg curl && rm -rf /var/lib/apt/lists/*;\n#RUN wget -q -O - https://archive.kali.org/archive-key.asc  | apt-key add\nRUN curl -f https://archive.kali.org/archive-key.asc | apt-key add\n\n# get faster mirrors into apt/sources.list\n#RUN apt-get update && apt-get install -y netselect-apt\n#RUN cp /etc/apt/sources.list /etc/apt/sources.list.bak\n#RUN netselect-apt\n#RUN cp sources.list /etc/apt/sources.list\n\n# default install is bare, install some tools\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    arachni \\\n    beef-xss \\\n    cutycapt \\\n    dirbuster \\\n    exploitdb \\\n    fierce \\\n    firefox-esr \\\n    git \\\n    gpp-decrypt \\\n    hydra \\\n    john \\\n    locate \\\n    man \\\n    metasploit-framework \\\n    nbtscan \\\n    netselect-apt \\\n    nikto \\\n    nmap \\\n    python-pip \\\n    responder \\\n    skipfish \\\n    sparta \\\n    sqlitebrowser \\\n    sqlmap \\\n    unicornscan \\\n    vim \\\n    virtualenv \\\n    websploit \\\n    whois \\\n    wordlists \\\n    wpscan \\\n    zenmap && rm -rf /var/lib/apt/lists/*;\n\n# install those packages that have interactive installation method\nWORKDIR /tmp\n# set up powershell-empire\nRUN apt-get install --no-install-recommends -y multiarch-support && rm -rf /var/lib/apt/lists/*;\nRUN wget https://http.us.debian.org/debian/pool/main/o/openssl/libssl1.0.0_1.0.1t-1+deb8u7_amd64.deb\nRUN dpkg -i libssl1.0.0_1.0.1t-1+deb8u7_amd64.deb\nWORKDIR /usr/share\nRUN git clone https://github.com/EmpireProject/Empire empire\nWORKDIR empire/setup\nRUN printf \"Y\\n\\n\" | ./install.sh\nWORKDIR /usr/bin\nRUN echo 'cd /usr/share/empire/ && /usr/share/empire/empire' > empire && chmod +x empire\n\n# use our custom .bashrc, used for different colour prompt string\nCOPY bashrc /root/.bashrc\n# TODO append localhost entry to container /etc/hosts for sudo\nCOPY hosts /etc/hosts\n# Set local timezone\nRUN cp /usr/share/zoneinfo/Australia/Sydney /etc/localtime\n\n# accept --build-arg arguments\nARG USERNAME\nARG UID\nARG GID\n\n# copy these host environment variables into the container environment\nENV USERNAME=$USERNAME\nENV UID=$UID\nENV GID=$GID\nENV COLUMNS=$COLUMNS\nENV LINES=$LINES\n\n# add pentest user within kali and run as non-privileged, in sudo group\n# note that if you use --net to start container, the username passed should be\n# available in the host's /etc/passwd\n# http://wiki.ros.org/docker/Tutorials/GUI\nRUN useradd -m $USERNAME && \\\n    echo \"$USERNAME:$USERNAME\" | chpasswd && \\\n    usermod --shell /bin/bash $USERNAME && \\\n    usermod -aG sudo $USERNAME && \\\n    echo \"$USERNAME ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers.d/$USERNAME && \\\n    chmod 0440 /etc/sudoers.d/$USERNAME && \\\n    usermod  --uid $UID $USERNAME && \\\n    groupmod --gid $GID $USERNAME\n\nUSER $USERNAME\nENV HOME /home/$USERNAME\nWORKDIR $HOME\n\nRUN ln -s /usr/share/wordlists/\nRUN ln -s /var/www/html/ www\nRUN ln -s /data\nRUN ln -s /scripts\nRUN ln -s /installers\n\nCOPY bashrc .bashrc\n# https://raw.githubusercontent.com/makefu/dnsmap/master/wordlist_TLAs.txt\nCOPY dnsmap.txt wordlists/\n\n"
}