{
  "startTime": 1674248563186,
  "endTime": 1674248563454,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tbuild-essential git \\\n\t\twget ca-certificates \\\n\t\tlibssl-dev gperf uuid-dev \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN set -xe \\\n    && wget -O install_cmake.sh https://cmake.org/files/v3.11/cmake-3.11.1-Linux-x86_64.sh \\\n    && chmod +x install_cmake.sh \\\n    && ./install_cmake.sh --skip-license \\\n    && rm install_cmake.sh\n\nRUN set -xe \\\n    && git clone https://github.com/madler/zlib.git \\\n    && cd zlib \\\n    && git reset --hard v1.2.11 \\\n    && mkdir build \\\n    && cd build \\\n    && cmake -DCMAKE_RELEASE_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON .. \\\n    && cmake --build . --target install \\\n    && cd / && rm -rf zlib\n\nRUN set -xe \\\n    && git clone https://github.com/openssl/openssl.git \\\n    && cd openssl \\\n    && git reset --hard OpenSSL_1_1_0h \\\n    && ./config -fPIC \\\n    && make \\\n    && make install_sw \\\n    && cd / && rm -rf openssl\n\nRUN set -xe \\\n    && wget -O icu.tar.gz https://download.icu-project.org/files/icu4c/61.1/icu4c-61_1-src.tgz \\\n    && tar xzvf icu.tar.gz \\\n    && cd icu/source \\\n    && CXXFLAGS=-fPIC CFLAGS=-fPIC ./runConfigureICU Linux/gcc --enable-static \\\n    && make install \\\n    && cd / && rm icu.tar.gz && rm -rf icu\n\nRUN set -xe \\\n    && git clone https://github.com/tdlib/td.git \\\n    && cd td \\\n    && git reset --hard v1.3.0 \\\n    && sed -i '0,/if (NOT OPENSSL_FOUND)/s//set(CMAKE_FIND_LIBRARY_SUFFIXES \".a\")\\n&/' CMakeLists.txt \\\n    && mkdir build \\\n    && cd build \\\n    && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DZLIB_ROOT=/usr/local/lib -DOPENSSL_ROOT_DIR=/usr/local/lib -DOPENSSL_USE_STATIC_LIBS=TRUE .. \\\n    && cmake --build . --target install \\\n    && cd / && rm -rf td"
}