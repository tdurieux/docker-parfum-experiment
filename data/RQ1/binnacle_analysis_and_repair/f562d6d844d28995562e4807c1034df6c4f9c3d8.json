{
  "startTime": 1674247878251,
  "endTime": 1674247878845,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 0,
        "columnEnd": 11
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 0,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 23,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 22,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 23,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 22,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#代码发布系统\n#和coding结合，内部关联git下载代码， 然后移动带发布目录， 发布目录和外部目录相关联\nFROM ubuntu:12.04\n#RUN sed -i \"s/archive\\.ubuntu\\.com/mirrors\\.163\\.com/g\" /etc/apt/sources.list\nRUN apt-get update && \\\n    apt-get -yq --no-install-recommends install \\\n        curl \\\n        apache2 \\\n        libapache2-mod-php5 \\\n        php5-mysql \\\n        php5-gd \\\n        php5-curl \\\n        php-pear \\\n        php5-memcache \\\n        make \\\n        wget \\\n        php-apc && \\\n\n    rm -rf /var/lib/apt/lists/*\n#安装php-taint\nRUN pecl install taint\nRUN echo \"extension=taint.so\\ntaint.enable=On\" > /etc/php5/conf.d/taint.ini\nRUN sed -i \"s/variables_order.*/variables_order = \\\"EGPCS\\\"/g\" /etc/php5/apache2/php.ini\n#虚拟目录设置， 发布接口放在虚拟目录中\nRUN echo \"Alias /publish_api /publish_api \\n\\\n   <Directory /publish_api> \\n\\\n    Options Indexes FollowSymLinks MultiViews\\n\\\n    AllowOverride None\\n\\\n    DirectoryIndex index.php\\n\\\n    Order allow,deny\\n\\\n    allow from all\\n\\\n   </Directory>\\n\\\n\" > /etc/apache2/conf.d/publish_api.conf\nADD publish_api /publish_api\n\n#gearman 队列\nRUN apt-get update && apt-get -yq --no-install-recommends install libboost-all-dev gperf libevent1-dev libcloog-ppl0 && \\\nwget https://launchpad.net/gearmand/1.2/1.1.8/+download/gearmand-1.1.8.tar.gz && \\\ntar zxvf gearmand-1.1.8.tar.gz && \\\ncd gearmand-1.1.8/ && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\nmake && \\\nmake install && \\\npecl install gearman && rm gearmand-1.1.8.tar.gz && rm -rf /var/lib/apt/lists/*;\nRUN echo \"extension=gearman.so\" > /etc/php5/conf.d/gearman.ini\n\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n#安装phpunit\nRUN composer global require 'phpunit/phpunit=4.5.*'\nRUN ln -s /root/.composer/vendor/bin/phpunit  /usr/local/bin/phpunit\n\n#rewrite\nRUN sed -i \"s/AllowOverride None/AllowOverride All/g\" /etc/apache2/sites-available/default\nRUN ln -s /etc/apache2/mods-available/rewrite.load /etc/apache2/mods-enabled/rewrite.load\n\nADD run.sh /run.sh\nADD test.sh /test.sh\nRUN chmod 755 /*.sh\n\n# Configure /app folder with sample app\nRUN mkdir -p /app && rm -fr /var/www && ln -s /app /var/www\nRUN mkdir /publish_codedir\nVOLUME [\"/app\",\"/publish_codedir\"]\n\n#代码仓库\nRUN apt-get update && apt-get install --no-install-recommends -yq ca-certificates git-core ssh && rm -rf /var/lib/apt/lists/*;\nENV HOME /root\nADD ssh/ /root/.ssh/\nRUN chmod 600 /root/.ssh/*\nRUN ssh-keyscan -p 22 coding.net > /root/.ssh/known_hosts\n#在容器内自己git clone\n#RUN git clone git@coding.net:luofei614/test.git /app\n#解决svn不能提交中文文件的问题\nRUN locale-gen zh_CN.UTF-8\n\n\n\nEXPOSE 80\nWORKDIR /app\nCMD [\"/run.sh\"]\n"
}