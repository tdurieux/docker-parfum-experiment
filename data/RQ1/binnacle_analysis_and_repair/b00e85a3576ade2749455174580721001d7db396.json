{
  "startTime": 1674242826338,
  "endTime": 1674242826713,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.2-fpm-alpine3.7\n\nMAINTAINER Dmitri Pisarev <dimaip@gmail.com>\n\nARG PHP_REDIS_VERSION=\"3.1.6\"\nARG PHP_YAML_VERSION=\"2.0.2\"\nARG PHP_XDEBUG_VERSION=\"2.6.0beta1\"\nARG S6_VERSION=\"1.21.2.2\"\n\nENV FLOW_REWRITEURLS 1\n\nENV COMPOSER_VERSION 1.6.2\nENV COMPOSER_HOME /composer\nENV PATH /composer/vendor/bin:$PATH\nENV COMPOSER_ALLOW_SUPERUSER 1\n\n# Set default values for env vars used in init scripts, override them if needed\nENV DB_DATABASE db\nENV DB_HOST db\nENV DB_USER admin\nENV DB_PASS pass\nENV VERSION master\n\n# Basic build-time metadata as defined at http://label-schema.org\nLABEL org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n\torg.label-schema.license=\"MIT\" \\\n\torg.label-schema.name=\"Neos Alpine Docker Image\" \\\n\torg.label-schema.url=\"https://github.com/psmb/docker-neos-alpine\" \\\n\torg.label-schema.vcs-url=\"https://github.com/psmb/docker-neos-alpine\" \\\n\torg.label-schema.vcs-type=\"Git\"\n\nRUN set -x \\\n\t&& apk update \\\n\t&& apk add tar rsync curl sed bash yaml python py-pip py-setuptools groff less mysql-client git nginx optipng freetype libjpeg-turbo-utils icu-dev openssh pwgen sudo s6 \\\n\t&& pip install --no-cache-dir awscli \\\n\t&& apk del py-pip py-setuptools \\\n\t&& apk add --virtual .phpize-deps $PHPIZE_DEPS libtool freetype-dev libpng-dev libjpeg-turbo-dev yaml-dev \\\n\t&& docker-php-ext-configure gd \\\n\t\t--with-gd \\\n\t\t--with-freetype-dir=/usr/include/ \\\n\t\t--with-png-dir=/usr/include/ \\\n\t\t--with-jpeg-dir=/usr/include/ \\\n\t&& docker-php-ext-install \\\n\t\tgd \\\n\t\tpdo \\\n\t\tpdo_mysql \\\n\t\tmbstring \\\n\t\topcache \\\n\t\tintl \\\n\t\texif \\\n\t\tjson \\\n\t\ttokenizer \\\n\t&& pecl install redis-${PHP_REDIS_VERSION} yaml-${PHP_YAML_VERSION} xdebug-${PHP_XDEBUG_VERSION} \\\n\t&& docker-php-ext-enable xdebug \\\n\t&& docker-php-ext-enable redis \\\n\t&& docker-php-ext-enable yaml \\\n\t&& apk del .phpize-deps \\\n\t&& curl -f -o /tmp/composer-setup.php https://getcomposer.org/installer \\\n\t&& php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION} && rm -rf /tmp/composer-setup.php \\\n\t&& curl -f -s https://beard.famelo.com/ > /usr/local/bin/beard \\\n\t&& chmod +x /usr/local/bin/beard \\\n\t&& git config --global user.email \"server@server.com\" \\\n\t&& git config --global user.name \"Server\" \\\n\t&& rm -rf /var/cache/apk/*\n\n# Copy configuration\nCOPY root /\n\n# Download s6\nADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_VERSION}/s6-overlay-amd64.tar.gz /tmp/\n\nRUN tar xzf /tmp/s6-overlay-amd64.tar.gz -C / && rm /tmp/s6-overlay-amd64.tar.gz \\\n\t&& echo \"xdebug.remote_enable=0\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n\t&& echo \"xdebug.remote_connect_back=1\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n\t&& echo \"xdebug.max_nesting_level=512\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n\t&& echo \"xdebug.idekey=\\\"PHPSTORM\\\"\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n\t&& echo \"xdebug.remote_host=172.17.0.1\" >> $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \\\n\t&& deluser www-data \\\n\t&& delgroup cdrw \\\n\t&& addgroup -g 80 www-data \\\n\t&& adduser -u 80 -G www-data -s /bin/bash -D www-data -h /data \\\n\t&& rm -Rf /home/www-data \\\n\t&& sed -i -e \"s#listen = 9000#listen = /var/run/php-fpm.sock#\" /usr/local/etc/php-fpm.d/zz-docker.conf \\\n\t&& echo \"clear_env = no\" >> /usr/local/etc/php-fpm.d/zz-docker.conf \\\n\t&& echo \"listen.owner = www-data\" >> /usr/local/etc/php-fpm.d/zz-docker.conf \\\n\t&& echo \"listen.group = www-data\" >> /usr/local/etc/php-fpm.d/zz-docker.conf \\\n\t&& echo \"listen.mode = 0660\" >> /usr/local/etc/php-fpm.d/zz-docker.conf \\\n\t&& chown 80:80 -R /var/lib/nginx \\\n\t&& chmod +x /github-keys.sh \\\n\t&& sed -i -r 's/.?UseDNS\\syes/UseDNS no/' /etc/ssh/sshd_config \\\n\t&& sed -i -r 's/.?PasswordAuthentication.+/PasswordAuthentication no/' /etc/ssh/sshd_config \\\n\t&& sed -i -r 's/.?ChallengeResponseAuthentication.+/ChallengeResponseAuthentication no/' /etc/ssh/sshd_config \\\n\t&& sed -i -r 's/.?PermitRootLogin.+/PermitRootLogin no/' /etc/ssh/sshd_config \\\n\t&& sed -i '/secure_path/d' /etc/sudoers \\\n\t&& echo 'www-data ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/www \\\n\t&& /bin/bash -c \"source /init-php-conf.sh\"\n\n# Expose ports\nEXPOSE 80 22\n\n# Define working directory\nWORKDIR /data\n\n# Define entrypoint and command\nENTRYPOINT [\"/init\"]\n"
}