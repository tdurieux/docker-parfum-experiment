{
  "startTime": 1674249718683,
  "endTime": 1674249718906,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM buildpack-deps:xenial\n\nRUN apt-get update \\\n    && apt-get upgrade -y --no-install-recommends \\\n    && apt-get install -y --no-install-recommends \\\n        apt-utils \\\n        gettext \\\n        gnupg2 \\\n        jq \\\n        locales \\\n        nano \\\n        nginx \\\n        postgresql-client \\\n        python-dev \\\n        pv \\\n        vim-tiny \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN locale-gen en_US.UTF-8\nENV LANG=en_US.UTF-8\nENV LANGUAGE=en_US:en\nENV LC_ALL=en_US.UTF-8\n\nENV DOCKERIZE_VERSION=0.4.0\nRUN wget -nv -O - \"https://github.com/jwilder/dockerize/releases/download/v${DOCKERIZE_VERSION}/dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz\" | tar -xz -C /usr/local/bin/ -f -\n\nENV NODE_VERSION=4.4.2\nRUN wget -nv -O - \"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz\" | tar -Jx -C /opt/ -f -\nRUN ln -s \"/opt/node-v${NODE_VERSION}-linux-x64/bin/node\" /usr/local/bin/\nRUN ln -s \"/opt/node-v${NODE_VERSION}-linux-x64/bin/npm\" /usr/local/bin/\n\nENV PYTHON_PIP_VERSION=9.0.1\nRUN wget -nv -O - https://bootstrap.pypa.io/get-pip.py | python - \"pip==${PYTHON_PIP_VERSION}\"\nENV PIP_DISABLE_PIP_VERSION_CHECK=on\nENV PIP_SRC=/opt\n\nENV TINI_VERSION=0.14.0\nRUN wget -nv -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static\"\nRUN chmod +x /usr/local/bin/tini\n\nWORKDIR /opt/git-secret/\n\nENV GIT_SECRET_VERSION=0.2.1\nRUN git clone https://github.com/sobolevn/git-secret.git /opt/git-secret/ \\\n    && git checkout \"v$GIT_SECRET_VERSION\" \\\n    && make build \\\n    && PREFIX=/usr/local make install\n\nWORKDIR /opt/django-icekit/project_template/\n\nCOPY project_template/package.json /opt/django-icekit/project_template/\nRUN npm install && rm -rf /root/.npm && npm cache clean --force;\nRUN md5sum package.json > package.json.md5\nENV PATH=/opt/django-icekit/project_template/node_modules/.bin:$PATH\n\nCOPY project_template/bower.json /opt/django-icekit/project_template/\nRUN bower install --allow-root && rm -rf /root/.cache/bower\nRUN md5sum bower.json > bower.json.md5\n\nWORKDIR /opt/django-icekit/\n\nCOPY README.rst requirements.txt setup.py /opt/django-icekit/\nRUN bash -c 'pip install --no-cache-dir -r <(grep -v setuptools requirements.txt)'  # Unpin setuptools dependencies. See: https://github.com/pypa/pip/issues/4264\nRUN md5sum requirements.txt > requirements.txt.md5\n\nENV DOCKER_COMMIT=0a214841ace30f8ff67cd1c3a9c2214b62eb4619\nRUN cd /usr/local/bin \\\n    && wget -N -nv \"https://raw.githubusercontent.com/ixc/docker/${DOCKER_COMMIT}/bin/transfer.sh\" \\\n    && chmod +x *.sh\n\nENV CRONLOCK_HOST=redis\nENV DOCKER=1\nENV ELASTICSEARCH_ADDRESS=elasticsearch:9200\nENV ICEKIT_DIR=/opt/django-icekit/icekit\nENV ICEKIT_PROJECT_DIR=/opt/django-icekit/project_template\nENV PATH=/opt/django-icekit/icekit/bin:$PATH\nENV PGHOST=postgres\nENV PGUSER=postgres\nENV PYTHONDONTWRITEBYTECODE=1\nENV PYTHONHASHSEED=random\nENV PYTHONWARNINGS=ignore\nENV REDIS_ADDRESS=redis:6379\nENV SUPERVISORD_CONFIG_INCLUDE=supervisord-django.conf\nENV WAITLOCK_ENABLE=1\n\nVOLUME /root\n\nENTRYPOINT [\"tini\", \"--\", \"entrypoint.sh\"]\nCMD [\"bash.sh\"]\n\nCOPY . /opt/django-icekit/\n\nRUN manage.py collectstatic --noinput --verbosity=0\nRUN manage.py compress --verbosity=0\n"
}