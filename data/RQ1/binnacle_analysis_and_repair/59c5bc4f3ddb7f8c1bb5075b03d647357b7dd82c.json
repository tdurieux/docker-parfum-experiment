{
  "startTime": 1674252705990,
  "endTime": 1674252706301,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\nMAINTAINER djungelorm <djungelorm@users.noreply.github.com>\n\nARG bazel_version=0.18.0\nARG ksp_version\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    curl ca-certificates gnupg git && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install Bazel\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    pkg-config zip g++ zlib1g-dev unzip python && \\\n    echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | \\\n      tee /etc/apt/sources.list.d/bazel.list && \\\n    curl -f https://bazel.build/bazel-release.pub.gpg | apt-key add - && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends openjdk-8-jdk && \\\n    apt-get install -y --no-install-recommends bazel=${bazel_version} && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install Mono\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 \\\n      --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF && \\\n    echo \"deb https://download.mono-project.com/repo/ubuntu stable-bionic main\" | \\\n      tee /etc/apt/sources.list.d/mono-official-stable.list && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y mono-devel gendarme && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Set up KSP libs\nWORKDIR /usr/local/lib/ksp-${ksp_version}\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y wget && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    wget https://s3.amazonaws.com/krpc/lib/ksp-${ksp_version}.tar.gz && \\\n    tar -xf ksp-${ksp_version}.tar.gz && \\\n    ln -s /usr/local/lib/ksp-${ksp_version} /usr/local/lib/ksp && \\\n    rm /usr/local/lib/ksp-${ksp_version}/ksp-${ksp_version}.tar.gz\n\n# Install kRPC build dependencies\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    python-setuptools python-virtualenv \\\n    python-dev autoconf libtool luarocks texlive-latex-base \\\n    texlive-latex-recommended texlive-fonts-recommended texlive-latex-extra \\\n    libxml2-dev libxslt1-dev librsvg2-bin && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install kRPC test dependencies\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    virtualenv automake python-pip \\\n    libenchant1c2a socat cmake && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install gosu\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    sudo gosu && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Configure Bazel\nCOPY bazelrc /etc/bazel.bazelrc\nRUN chmod 0644 /etc/bazel.bazelrc\n\n# Set up user and home dir\nRUN user_id=1000 && \\\n    addgroup -q --gid $user_id build && \\\n    adduser -q --system --uid $user_id --home /build --disabled-password --ingroup build build\nUSER build\nWORKDIR /build\n\n# Cache Bazel workspace dependencies and external build artifacts\nCOPY krpc.tar /build/krpc.tar\nRUN mkdir krpc && \\\n    cd krpc && \\\n    tar -xf ../krpc.tar && \\\n    rm ../krpc.tar && \\\n    bazel fetch //... && \\\n    bazel build \\\n      @com_google_protobuf//:protobuf \\\n      @cpp_googletest//:gtest \\\n      @cpp_googletest//:gmock && \\\n    cd .. && \\\n    rm -rf krpc\n\n# Set up entry point\nUSER root\nRUN deluser build\nWORKDIR /\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\nRUN chmod +x /usr/local/bin/entrypoint.sh\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n"
}