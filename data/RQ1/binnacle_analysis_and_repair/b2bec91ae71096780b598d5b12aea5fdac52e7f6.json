{
  "startTime": 1674235758119,
  "endTime": 1674235758261,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 25,
        "columnEnd": 286
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 25,
        "columnEnd": 286
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 84
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:xenial\n\nLABEL maintainer=\"Eugene Ilin <jenyay.ilin@gmail.com>\"\n\nRUN apt-get -y update && apt-get -y --no-install-recommends install python python3-pip python3-dev libssl-dev dpkg-dev build-essential libjpeg-dev libtiff-dev libsdl2-dev libgstreamer-plugins-base0.10-dev libnotify-dev freeglut3 freeglut3-dev libsm-dev libgtk-3-dev ibus-gtk3 xvfb wget fuse libhunspell-dev git && rm -rf /var/lib/apt/lists/*;\n\n# RUN apt-get -y install libwebkit2gtk-4.0 libwebkit2gtk-4.0-dev\nRUN apt-get -y --no-install-recommends install libwebkitgtk-3.0 libwebkitgtk-3.0-dev && rm -rf /var/lib/apt/lists/*;\nRUN python3 -m pip install wheel requests\n\nENV LC_ALL=C.UTF-8 LANG=C.UTF-8 HOME=/home/user BUILD=/home/user/build\nENV PATH=$PATH:$HOME/.local/bin\n\nRUN mkdir -p $HOME\n\nRUN groupadd -r user && useradd -r -g user -d $HOME -s /sbin/nologin -c \"Docker image user\" user\nRUN chown -R user:user $HOME && chmod -R 777 $HOME\n\nCOPY build.sh /\n\nUSER user\nWORKDIR $HOME\nRUN mkdir -p $BUILD\n\nENTRYPOINT [\"/bin/bash\", \"/build.sh\"]\n"
}