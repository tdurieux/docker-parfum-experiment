{
  "startTime": 1674641750978,
  "endTime": 1674641751044,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker image file that describes an Ubuntu16.04 image with PowerShell installed from Microsoft APT Repo\nARG fromTag=16.04\nARG imageRepo=ubuntu\n\nFROM ${imageRepo}:${fromTag} AS installer-env\n\nARG PS_VERSION=6.1.0\nARG PS_PACKAGE=powershell_${PS_VERSION}-1.ubuntu.16.04_amd64.deb\nARG PS_PACKAGE_URL=https://github.com/PowerShell/PowerShell/releases/download/v${PS_VERSION}/${PS_PACKAGE}\n\nRUN echo ${PS_PACKAGE_URL}\n# Download the Linux package and save it\nADD ${PS_PACKAGE_URL} /tmp/powershell.deb\n\n# Define ENVs for Localization/Globalization\nENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false \\\n    LC_ALL=en_US.UTF-8 \\\n    LANG=en_US.UTF-8 \\\n    # set a fixed location for the Module analysis cache\n    PSModuleAnalysisCachePath=/var/cache/microsoft/powershell/PSModuleAnalysisCache/ModuleAnalysisCache\n\n# Install dependencies and clean up\nRUN apt-get update \\\n    && apt install --no-install-recommends -y /tmp/powershell.deb \\\n    && apt-get install --no-install-recommends -y \\\n    # less is required for help in powershell\n        less \\\n    # requied to setup the locale\n        locales \\\n    # required for SSL\n        ca-certificates \\\n        gss-ntlmssp \\\n    && apt-get dist-upgrade -y \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && locale-gen $LANG && update-locale \\\n    # remove powershell package\n    && rm /tmp/powershell.deb \\\n    # intialize powershell module cache\n    && pwsh \\\n        -NoLogo \\\n        -NoProfile \\\n        -Command \" \\\n          \\$ErrorActionPreference = 'Stop' ; \\\n          \\$ProgressPreference = 'SilentlyContinue' ; \\\n          while(!(Test-Path -Path \\$env:PSModuleAnalysisCachePath)) {  \\\n            Write-Host \"'Waiting for $env:PSModuleAnalysisCachePath'\" ; \\\n            Start-Sleep -Seconds 6 ; \\\n          }\"\n\n# Define args needed only for the labels\nARG VCS_REF=\"none\"\nARG IMAGE_NAME=mcr.microsoft.com/powershell:ubuntu16.04\n\nLABEL maintainer=\"PowerShell Team <powershellteam@hotmail.com>\" \\\n      readme.md=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      description=\"This Dockerfile will install the latest release of PowerShell.\" \\\n      org.label-schema.usage=\"https://github.com/PowerShell/PowerShell/tree/master/docker#run-the-docker-image-you-built\" \\\n      org.label-schema.url=\"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md\" \\\n      org.label-schema.vcs-url=\"https://github.com/PowerShell/PowerShell-Docker\" \\\n      org.label-schema.name=\"powershell\" \\\n      org.label-schema.vendor=\"PowerShell\" \\\n      org.label-schema.version=${PS_VERSION} \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.vcs-ref=${VCS_REF} \\\n      org.label-schema.docker.cmd=\"docker run ${IMAGE_NAME} pwsh -c '$psversiontable'\" \\\n      org.label-schema.docker.cmd.devel=\"docker run ${IMAGE_NAME}\" \\\n      org.label-schema.docker.cmd.test=\"docker run ${IMAGE_NAME} pwsh -c Invoke-Pester\" \\\n      org.label-schema.docker.cmd.help=\"docker run ${IMAGE_NAME} pwsh -c Get-Help\"\n\n# Use PowerShell as the default shell\n# Use array to avoid Docker prepending /bin/sh -c\nCMD [ \"pwsh\" ]\n"
}