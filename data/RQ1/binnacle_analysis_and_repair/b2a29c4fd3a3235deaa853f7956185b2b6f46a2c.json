{
  "startTime": 1674251079711,
  "endTime": 1674251079991,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 67
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 67
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 67
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 67
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 70
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 70
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 70
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 71
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##\n# osgeo/proj.4\n\nFROM ppc64le/ubuntu:xenial\n\nMAINTAINER Howard Butler <howard@hobu.co>\n\n\n# Setup build env\nRUN mkdir /build\nRUN apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 16126D3A3E5C1192    \\\n    && apt-get update \\\n    && apt-get install -y --fix-missing --no-install-recommends \\\n            software-properties-common build-essential ca-certificates \\\n            git make cmake wget unzip libtool automake python-pip \\\n            libpython-dev libjpeg-dev zlib1g-dev \\\n            python-dev python-pip g++ doxygen dvipng \\\n            texlive-latex-base texlive-latex-extra graphviz \\\n            python-matplotlib python-setuptools imagemagick \\\n    && mkdir /vdatum \\\n    && cd /vdatum \\\n    && wget https://download.osgeo.org/proj/vdatum/usa_geoid2012.zip && unzip -j -u usa_geoid2012.zip -d /usr/share/proj \\\n    && wget https://download.osgeo.org/proj/vdatum/usa_geoid2009.zip && unzip -j -u usa_geoid2009.zip -d /usr/share/proj \\\n    && wget https://download.osgeo.org/proj/vdatum/usa_geoid2003.zip && unzip -j -u usa_geoid2003.zip -d /usr/share/proj \\\n    && wget https://download.osgeo.org/proj/vdatum/usa_geoid1999.zip && unzip -j -u usa_geoid1999.zip -d /usr/share/proj \\\n    && wget https://download.osgeo.org/proj/vdatum/vertcon/vertconc.gtx && mv vertconc.gtx /usr/share/proj \\\n    && wget https://download.osgeo.org/proj/vdatum/vertcon/vertcone.gtx && mv vertcone.gtx /usr/share/proj \\\n    && wget https://download.osgeo.org/proj/vdatum/vertcon/vertconw.gtx && mv vertconw.gtx /usr/share/proj \\\n    && wget https://download.osgeo.org/proj/vdatum/egm96_15/egm96_15.gtx && mv egm96_15.gtx /usr/share/proj \\\n    && wget https://download.osgeo.org/proj/vdatum/egm08_25/egm08_25.gtx && mv egm08_25.gtx /usr/share/proj \\\n    && rm -rf /vdatum \\\n    && cd / \\\n    && pip install --no-cache-dir Sphinx breathe \\\n            sphinx_bootstrap_theme awscli sphinxcontrib-bibtex \\\n            sphinx_rtd_theme \\\n    && git clone https://github.com/OSGeo/proj.4.git \\\n    && cd proj.4 \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n    && make \\\n    && make install \\\n    && cd /proj.4/docs \\\n    && make html \\\n    && rm -rf /proj.4 \\\n    && apt-get remove --purge -y \\\n            build-essential git make cmake wget unzip libtool \\\n            automake libpython-dev libjpeg-dev zlib1g-dev \\\n            python-dev g++ doxygen \\\n    && apt-get autoremove -y \\\n    && rm -rf /var/lib/apt/lists/*\n"
}