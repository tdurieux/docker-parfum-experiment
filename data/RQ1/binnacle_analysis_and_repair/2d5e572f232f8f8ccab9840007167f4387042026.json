{
  "startTime": 1674250651144,
  "endTime": 1674250651468,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedDockerfile": "FROM jayyi/angelix:0.0\n\nMAINTAINER Jooyong Yi <jooyong.m.lee@gmail.com>\n\n######################\n# Dependencies\n######################\nRUN apt-get -y update\nRUN apt-get -y --no-install-recommends install git make wget unzip m4 gcc curl indent software-properties-common maven && rm -rf /var/lib/apt/lists/*;\n## RUN apt-add-repository -y ppa:webupd8team/java && apt-get -y update\n## RUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections\n## RUN apt-get -y install oracle-java8-installer\n## RUN unset JAVA_TOOL_OPTIONS\n\n\n#################\n# Install ocaml\n#################\nRUN wget https://raw.github.com/ocaml/opam/master/shell/opam_installer.sh -O - | sh -s /usr/local/bin\nRUN opam init -y --comp=3.12.1\nRUN eval `opam config env`\nRUN opam install -y ocamlfind\nWORKDIR /root/.opam/3.12.1/lib/ocaml\nRUN ln -s libcamlstr.a libstr.a\n\n####################\n# Install parallel\n####################\nWORKDIR /\nRUN wget https://ftp.gnu.org/gnu/parallel/parallel-20161122.tar.bz2\nRUN bzip2 -dc parallel-20161122.tar.bz2 | tar xvf -\nWORKDIR /parallel-20161122\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\nRUN rm -f parallel-20161122.tar.bz2 && rm -rf parallel-20161122\n\n######################\n# Download\n######################\nWORKDIR /\nRUN git clone https://github.com/jyi/ITSP.git\n\n######################\n# Environment\n######################\nENV ITSP_DIR /ITSP\nENV ITSP_EXP_DIR /ITSP-experiments\nENV CIL=\"${ITSP_DIR}/genprog-source-v3.0/cil-1.3.7\"\nENV PATH=\"/root/.opam/3.12.1/bin:${PATH}:${CIL}/bin:${ITSP_DIR}/genprog-source-v3.0/src:${ITSP_DIR}/prophet-gpl/src:${ITSP_DIR}/prophet-gpl/tools\"\nENV SIMILARITY_JAR=${ITSP_DIR}/java-string-similarity/target/java-string-similarity-0.20-SNAPSHOT.jar\nENV PROPHET_FEATURE_PARA=${ITSP_DIR}/prophet-gpl/crawler/para-all.out\nENV PROPHET_TOOLS_DIR=${ITSP_DIR}/prophet-gpl/tools\nENV PS1=\"\\n\\w\\n\\W > \"\nENV PROMPT_COMMAND=\n\n\n######################\n# Install GenProg\n######################\nWORKDIR ${ITSP_DIR}/genprog-source-v3.0\nRUN tar zxvf cil-1.3.7.tar.gz && rm cil-1.3.7.tar.gz\nWORKDIR ${ITSP_DIR}/genprog-source-v3.0/cil-1.3.7\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make cillib\nWORKDIR ${ITSP_DIR}/genprog-source-v3.0/src\nRUN make\n\n####################################\n# Install java-string-similarity\n####################################\nWORKDIR ${ITSP_DIR}/java-string-similarity\nRUN mvn package\n\n######################\n# Install Prophet\n######################\nWORKDIR /\nRUN wget https://releases.llvm.org/3.6.1/clang+llvm-3.6.1-x86_64-linux-gnu-ubuntu-14.04.tar.xz\nRUN tar xf clang+llvm-3.6.1-x86_64-linux-gnu-ubuntu-14.04.tar.xz && rm clang+llvm-3.6.1-x86_64-linux-gnu-ubuntu-14.04.tar.xz\nRUN rm -f clang+llvm-3.6.1-x86_64-linux-gnu-ubuntu-14.04.tar.xz\n\nWORKDIR /clang+llvm-3.6.1-x86_64-linux-gnu\nRUN cp bin/* /usr/local/bin/\nRUN cp -r include/* /usr/local/include/\nRUN cp -r lib/* /usr/local/lib/\n\nWORKDIR ${ITSP_DIR}/prophet-gpl\nRUN apt-get -y --no-install-recommends install autotools-dev automake libtool zlib1g-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-add-repository -y ppa:pmiller-opensource/ppa && apt-get -y update\nRUN apt-get install --no-install-recommends -y libexplain-dev && rm -rf /var/lib/apt/lists/*;\nRUN aclocal && autoconf && autoreconf --install && automake\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make clean && make\n\n######################\n# Clean up\n######################\nWORKDIR /\nRUN rm -rf clang+llvm-3.6.1-x86_64-linux-gnu\nRUN rm -rf parallel-20161122\nRUN rm -f parallel-20161122.tar.bz2\n\n######################\n# Experiment Setup\n######################\nWORKDIR /\nRUN mkdir -p ${ITSP_EXP_DIR}\n\nRUN echo \"source /angelix/activate\" >> /root/.bashrc\nRUN echo \"source ${ITSP_DIR}/activate.sh\" >> /root/.bashrc\nRUN echo \"export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8\" >> /root/.bashrc\n\nWORKDIR ${ITSP_DIR}\nRUN cp -r ${ITSP_DIR}/dataset ${ITSP_EXP_DIR}/dataset-base\nRUN cp -r ${ITSP_DIR}/dataset ${ITSP_EXP_DIR}/dataset-inc-repair\n\nWORKDIR /\n\n"
}