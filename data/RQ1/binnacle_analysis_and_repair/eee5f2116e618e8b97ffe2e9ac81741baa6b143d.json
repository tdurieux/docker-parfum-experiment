{
  "startTime": 1674248662467,
  "endTime": 1674248662559,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2015-2019 Tigera, Inc. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# NOTE: This Dockerfile should be kept in-sync with the one in calico/node.\n# This ensures that testing of Felix in this repository is done in the same\n# userspace environment as it will be deployed in calico/node.\nFROM calico/bpftool:v5.0-amd64 as bpftool\n\nFROM debian:9.8-slim\nLABEL maintainer \"Shaun Crampton <shaun@tigera.io>\"\n\n# Install a backported version of iptables to ensure we have version 1.6.2\n# Similarly for iproute2, we want a more recent version for BPF support.\nRUN printf \"deb http://deb.debian.org/debian stretch-backports main\\n\" > /etc/apt/sources.list.d/backports.list \\\n    && apt-get update \\\n    && apt-get -t stretch-backports --no-install-recommends install -y iptables iproute2 && rm -rf /var/lib/apt/lists/*;\n\n# Install remaining runtime deps required for felix from the global repository\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ipset \\\n    iputils-arping \\\n    iputils-ping \\\n    iputils-tracepath \\\n\n    net-tools \\\n    conntrack \\\n    runit \\\n\n    kmod \\\n\n\n    netbase \\\n\n    procps \\\n    ca-certificates \\\n\n    wget && rm -rf /var/lib/apt/lists/*;\n\nADD felix.cfg /etc/calico/felix.cfg\nADD calico-felix-wrapper /usr/bin\n\n# Put our binary in /code rather than directly in /usr/bin.  This allows the downstream builds\n# to more easily extract the Felix build artefacts from the container.\nADD bin/calico-felix-amd64 /code/calico-felix\nRUN ln -s /code/calico-felix /usr/bin\nCOPY --from=bpftool /bpftool /usr/bin\nWORKDIR /code\n\n# Since our binary isn't designed to run as PID 1, run it via the tini init daemon.\nENV TINI_VERSION v0.18.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-static-amd64 /sbin/tini\nRUN chmod +x /sbin/tini\nENTRYPOINT [\"/sbin/tini\", \"--\"]\n\n# Run felix (via the wrapper script) by default\nCMD [\"/usr/bin/calico-felix-wrapper\"]\n"
}