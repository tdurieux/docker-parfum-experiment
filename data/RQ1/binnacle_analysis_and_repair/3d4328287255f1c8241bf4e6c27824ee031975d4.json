{
  "startTime": 1674246167589,
  "endTime": 1674246167629,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# BUILD IMAGE\nFROM node:8.11.4\nRUN curl -f https://install.meteor.com/ | sh\nCOPY meteor /opt/core/meteor\nWORKDIR /opt/core/meteor\n# Temporary change the NODE_ENV env variable, so that all libraries are installed:\nENV NODE_ENV_TMP $NODE_ENV\nENV NODE_ENV anythingButProduction\nRUN meteor npm install\n# Restore the NODE_ENV variable:\nENV NODE_ENV $NODE_ENV_TMP\nRUN --mount=type=cache,target=/opt/core/meteor/.meteor/local NODE_OPTIONS=\"--max-old-space-size=8192\" METEOR_DEBUG_BUILD=1 meteor build --allow-superuser --directory /opt/\nWORKDIR /opt/bundle/programs/server/\nRUN npm install && npm cache clean --force;\n\n# DEPLOY IMAGE\nFROM node:8.11.4-slim\nCOPY --from=0 /opt/bundle /opt/core\nWORKDIR /opt/core/\nCMD [\"node\", \"main.js\"]\n"
}