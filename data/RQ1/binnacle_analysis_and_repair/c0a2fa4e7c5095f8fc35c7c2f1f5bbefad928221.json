{
  "startTime": 1674252429972,
  "endTime": 1674252430087,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 13,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# specify the node base image with your desired version node:<version>\nFROM node:8.10.0\n\nMAINTAINER hisasann\n\n# https://qiita.com/rh_taro/items/40373a30ead444ae9ca7\nRUN echo \"deb http://deb.debian.org/debian jessie main\" > /etc/apt/sources.list \\\n && echo \"deb http://security.debian.org jessie/updates main\" >> /etc/apt/sources.list\n\n# install dependency package\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n    apt-transport-https \\\n    libssl-dev \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n# install yarn\n# https://yarnpkg.com/en/docs/install#linux-tab\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y \\\n    yarn \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install app dependencies\nCOPY package.json /src/package.json\nCOPY yarn.lock /src/yarn.lock\nRUN cd /src; yarn install && yarn cache clean;\n\n# Bundle app source\nADD ./src /src/src/\n\n# Copy files\nCOPY .babelrc /src/.babelrc\nCOPY .eslintrc.js /src/.eslintrc.js\nCOPY .prettierrc.js /src/.prettierrc.js\nCOPY jest.config.js /src/jest.config.js\nCOPY nuxt.config.ts /src/nuxt.config.ts\nCOPY tsconfig.json /src/tsconfig.json\nCOPY tools/run-test.sh /src/run-test.sh\n\n# Run test\nRUN chmod 755 /src/run-test.sh\n\nEXPOSE 4000\n\nWORKDIR /src\n\n# RUNTIME 時の環境変数を Nuxt.js に渡すにはここに書くしか方法はない\nENV RUNTIME_ENV=docker\nENV BUILD_ENV=docker\n\nRUN env\n\nCMD [\"/bin/sh\", \"-c\", \"npm run build:docker && npm run start\"]\n"
}