{
  "startTime": 1674239797582,
  "endTime": 1674239798014,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 146
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2019 Red Hat, Inc.\n# This program and the accompanying materials are made\n# available under the terms of the Eclipse Public License 2.0\n# which is available at https://www.eclipse.org/legal/epl-2.0/\n#\n# SPDX-License-Identifier: EPL-2.0\n#\n# Contributors:\n#   Red Hat, Inc. - initial API and implementation\n\nFROM ${BUILD_ORGANIZATION}/${BUILD_PREFIX}-theia-endpoint-runtime:${BUILD_TAG} as endpoint\nFROM node:10.16-stretch-slim\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tca-certificates \\\n\t\tcurl \\\n\t\tbash \\\n\t\tnetbase \\\n\t\twget \\\n\t&&\tset -ex; \\\n        if ! command -v gpg > /dev/null; then \\\n        \t\tapt-get install -y --no-install-recommends \\\n        \t\t\tgnupg \\\n        \t\t\tdirmngr \\\n        \t\t; \\\n        \t\trm -rf /var/lib/apt/lists/*; \\\n        fi \\\n\n    # procps is very common in build systems, and is a reasonably small package\n\n    &&  apt-get install -y --no-install-recommends \\\n        \t\tbzr \\\n        \t\tgit \\\n        \t\tmercurial \\\n        \t\topenssh-client \\\n        \t\tsubversion \\\n        \t\t\\\n        \t\tprocps \\\n\n    # Install .NET CLI dependencies\n\n    &&  apt-get install -y --no-install-recommends \\\n                make \\\n                g++ \\\n                libc6 \\\n                libgcc1 \\\n                libgssapi-krb5-2 \\\n                libicu57 \\\n                liblttng-ust0 \\\n                libssl1.0.2 \\\n                libstdc++6 \\\n                zlib1g \\\n    &&  rm -rf /var/lib/apt/lists/* \\\n\n    # Install typescript@2.9.2 and node-gyp\n\n    &&  yarn global add typescript@2.9.2 node-gyp\n\nENV HOME=/home/theia\nCOPY --from=endpoint /home/theia /home/theia\nCOPY --from=endpoint /projects /projects\nCOPY --from=endpoint /etc/passwd  /etc/passwd\nCOPY --from=endpoint /etc/group   /etc/group\nCOPY --from=endpoint /entrypoint.sh /entrypoint.sh\n\nRUN find /home/theia/ -name \"binding.gyp\" |  xargs -i sh -c 'cd $(dirname {}) && node-gyp rebuild' \\\n    && sed -i 's/SIGHUP SIGTERM SIGINT/HUP TERM INT/g' /entrypoint.sh\n\n# Install .NET Core SDK\nENV DOTNET_SDK_VERSION 2.2.105\n\nRUN curl -f -SL --output dotnet.tar.gz https://dotnetcli.azureedge.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz \\\n    && dotnet_sha512='b7ad26b344995de91848adec56bda5dfe5fef0b83abaa3e4376dc790cf9786e945b625de1ae4cecaf5c5bef86284652886ed87696581553aeda89ee2e2e99517' \\\n    && echo \"$dotnet_sha512 dotnet.tar.gz\" | sha512sum -c - \\\n    && mkdir -p /usr/share/dotnet \\\n    && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \\\n    && rm dotnet.tar.gz \\\n    && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet \\\n    && mkdir ${HOME}/.dotnet && chmod -R 777 ${HOME}/.dotnet \\\n    && mkdir /usr/share/dotnet/sdk/NuGetFallbackFolder && chmod 777 /usr/share/dotnet/sdk/NuGetFallbackFolder \\\n    && mkdir ${HOME}/.nuget && chmod -R 777 ${HOME}/.nuget \\\n    && mkdir ${HOME}/.templateengine && chmod -R 777 ${HOME}/.templateengine \\\n    && chmod -R 777 ${HOME}\n\n# Configure web servers to bind to port 80 when present\nENV ASPNETCORE_URLS=http://+:80 \\\n    # Enable detection of running in a container\n    DOTNET_RUNNING_IN_CONTAINER=true \\\n    # Enable correct mode for dotnet watch (only mode supported in a container)\n    DOTNET_USE_POLLING_FILE_WATCHER=true \\\n    # Skip extraction of XML docs - generally not useful within an image/container - helps performance\n    NUGET_XMLDOC_MODE=skip\n\n# Trigger first run experience by running arbitrary cmd to populate local package cache\nRUN dotnet --version\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}