{
  "startTime": 1674240877195,
  "endTime": 1674240877454,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 29,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 26,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 65,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 22,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 26,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 65,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 22,
        "columnEnd": 109
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedDockerfile": "FROM ros:dashing\n\nLABEL maintainer=\"VÃ­ctor Mayoral Vilches v.mayoralv@gmail.com\"\n\nENV TERM xterm\nENV ROS_DISTRO dashing\nENV ROS_WS=/opt/ros2_moveit2_ws\nWORKDIR $ROS_WS\n\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\nRUN \\\n       apt-get update -qq && apt-get install --no-install-recommends -qq -y \\\n         wget \\\n         clang clang-format-3.9 clang-tidy clang-tools \\\n      && rm -rf /var/lib/apt/lists/*\n\n# mixins are configuration files used to compile ROS 2 easily\nRUN apt-get update -qq && apt-get install --no-install-recommends -y python3-colcon-mixin git && rm -rf /var/lib/apt/lists/*;\nRUN colcon mixin add default https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml\nRUN colcon mixin update default\n\nRUN apt install --no-install-recommends -y \\\n  libasio-dev \\\n  libtinyxml2-dev \\\n  liblog4cxx-dev \\\n  less \\\n  tmux \\\n  vim && rm -rf /var/lib/apt/lists/*;\n\n# colcon-santizer-reports for analyzing ROS 2\n#   a plugin for colcon test that parses sanitizer issues\n#   from stdout/stderr, deduplicates the issues, and outputs them to a CSV.\nRUN git clone https://github.com/colcon/colcon-sanitizer-reports.git\nRUN cd colcon-sanitizer-reports && python3 setup.py install\n\nRUN apt install --no-install-recommends -y ccache && rm -rf /var/lib/apt/lists/*;\n# increase cache size\nRUN ccache -M 10G\nENV CC=/usr/lib/ccache/gcc\nENV CXX=/usr/lib/ccache/g++\n\n# Download moveit source, so that we can get necessary dependencies\nRUN mkdir -p $ROS_WS/src \\\n    && wget https://raw.githubusercontent.com/AcutronicRobotics/moveit2/master/moveit2.repos \\\n    && vcs import src < moveit2.repos \\\n    && cd src && git clone https://github.com/AcutronicRobotics/moveit2\n    # wstool init --shallow . https://raw.githubusercontent.com/ros-planning/moveit2/master/moveit.rosinstall\n\n# TODO remove once https://github.com/ros2/geometry2/issues/116 is fixed\nRUN mv $ROS_WS/src/geometry2/tf2_kdl $ROS_WS/src/\nRUN rm -rf $ROS_WS/src/geometry2\n# Apparently actions don't get installed right away, same with other deps\nRUN apt-get update && apt-get install --no-install-recommends -y ros-dashing-rclcpp-action \\\n      libboost-date-time-dev \\\n      libboost-system-dev \\\n      libboost-thread-dev \\\n      libboost-filesystem-dev \\\n      ros-dashing-libcurl-vendor \\\n      ros-dashing-resource-retriever \\\n      libassimp-dev \\\n      libqhull-dev \\\n      ros-dashing-yaml-cpp-vendor \\\n      libboost-iostreams-dev \\\n      libfcl-dev && rm -rf /var/lib/apt/lists/*;\n\n# Download all MoveIt 2 dependencies\nRUN \\\n    apt-get -qq update && \\\n    rosdep update -q && \\\n    rosdep install -q -y --from-paths . --ignore-src --rosdistro ${ROS_DISTRO} --as-root=apt:false || true && \\\n    # Clear apt-cache to reduce image size\n    rm -rf /var/lib/apt/lists/*\n\n##########################################################\n#       ASan\n##########################################################\n\n# Fetch some additional dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y libompl-dev python-vcstool python3-colcon-common-extensions libasan5 && rm -rf /var/lib/apt/lists/*;\n\n# Build code\n# RUN /bin/bash -c \"source /opt/ros/dashing/setup.bash && colcon build\"\n# Connected with https://github.com/AcutronicRobotics/moveit2/issues/112, we use --merge-install instead\nRUN /bin/bash -c \"source /opt/ros/dashing/setup.bash \\\n                    && colcon build --build-base=build-asan --install-base=install-asan\\\n                    --cmake-args -DOSRF_TESTING_TOOLS_CPP_DISABLE_MEMORY_TOOLS=ON \\\n                                 -DINSTALL_EXAMPLES=OFF -DSECURITY=ON --no-warn-unused-cli \\\n                                 -DCMAKE_BUILD_TYPE=Debug \\\n                    --mixin asan-gcc --merge-install \\\n                    --packages-up-to moveit_core\"\n\n# # Launch tests\n# RUN colcon test --build-base=build-asan --install-base=install-asan \\\n#     --event-handlers sanitizer_report+ --packages-up-to test_communication\n\n##########################################################\n#       TSan\n##########################################################\n# TODO\n\nCMD [\"bash\"]"
}