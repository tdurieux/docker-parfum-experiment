{
  "startTime": 1674242136854,
  "endTime": 1674242136989,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 11,
        "lineEnd": 20,
        "columnStart": 0,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:alpine \n\n# curl version \nENV CURL_VERSION 7.50.1 \n# Build curl from scratch as a static binary \nRUN apk add --update --no-cache openssl openssl-dev ca-certificates \nRUN apk add --update --no-cache --virtual curldeps g++ make perl && \\  \nwget https://curl.haxx.se/download/curl-$CURL_VERSION.tar.bz2 && \\  \ntar xjvf curl-$CURL_VERSION.tar.bz2 && \\  \nrm curl-$CURL_VERSION.tar.bz2 && \\  \ncd curl-$CURL_VERSION && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\\--prefix=/usr \\\n\\--with-ssl \\\n\\--enable-ipv6 \\\n\\--enable-unix-sockets \\\n\\--without-libidn \\\n\\--disable-shared \\\n\\--enable-static \\\n\\--disable-ldap \\\n\\--with-pic && \\\nmake && \\\nrm src/curl && \\\nmake LDFLAGS=-all-static && \\\nmake install && \\\ncd .. && \\\nrm -r curl-$CURL_VERSION && \\\nrm -r /var/cache/apk && \\\nrm -r /usr/share/man && \\\napk del curldeps\n\n# install git, sed \nRUN apk add --update --no-cache git sed \n# install godoc \nRUN go get -u -v golang.org/x/tools/cmd/godoc \n\n# entrypoint \nENTRYPOINT [\"/usr/bin/curl\"] \n\n"
}