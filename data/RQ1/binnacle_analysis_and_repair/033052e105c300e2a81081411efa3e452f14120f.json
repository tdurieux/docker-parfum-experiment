{
  "startTime": 1674251102928,
  "endTime": 1674251103169,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 15,
        "columnEnd": 160
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 15,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 28,
        "columnStart": 8,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 28,
        "columnStart": 8,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 28,
        "columnStart": 8,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 28,
        "columnStart": 8,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "# initialize from the image\n\nFROM python:3.7.3\n\nARG TOOLCHAIN_FLAVOR=linux\nENV TOOLCHAIN_FLAVOR=$TOOLCHAIN_FLAVOR\n\n# install build tools and dependencies\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential wget git libsodium-dev graphviz \\\n    valgrind check libssl-dev libusb-1.0-0-dev libudev-dev zlib1g-dev \\\n    libsdl2-dev libsdl2-image-dev && rm -rf /var/lib/apt/lists/*;\n\n# install clang-format 6 from backports\nRUN echo \"deb http://deb.debian.org/debian stretch-backports main\" > /etc/apt/sources.list.d/backports.list\nRUN apt-get update && apt-get install --no-install-recommends -t stretch-backports -y clang-format-6.0 && rm -rf /var/lib/apt/lists/*;\nRUN ln -s clang-format-6.0 /usr/bin/clang-format\n\n# TODO are all apt packages actually needed?\n\n# install dependencies from toolchain source build\n\nRUN if [ \"$TOOLCHAIN_FLAVOR\" = \"src\" ]; then \\\n        apt-get install --no-install-recommends -y autoconf autogen bison dejagnu \\\n                           flex flip gawk git gperf gzip nsis \\\n                           openssh-client p7zip-full perl python-dev \\\n                           libisl-dev tcl tofrodos zip \\\n                           texinfo texlive texlive-extra-utils; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n# download toolchain\n\nENV TOOLCHAIN_SHORTVER=8-2018q4\nENV TOOLCHAIN_LONGVER=gcc-arm-none-eabi-8-2018-q4-major\nENV TOOLCHAIN_URL=https://developer.arm.com/-/media/Files/downloads/gnu-rm/$TOOLCHAIN_SHORTVER/$TOOLCHAIN_LONGVER-$TOOLCHAIN_FLAVOR.tar.bz2\nENV TOOLCHAIN_HASH_linux=fb31fbdfe08406ece43eef5df623c0b2deb8b53e405e2c878300f7a1f303ee52\nENV TOOLCHAIN_HASH_src=bc228325dbbfaf643f2ee5d19e01d8b1873fcb9c31781b5e1355d40a68704ce7\n\n# extract toolchain\n\nRUN cd /opt && wget $TOOLCHAIN_URL\n\nRUN cd /opt && echo \"$TOOLCHAIN_HASH_linux  $TOOLCHAIN_LONGVER-linux.tar.bz2\\n$TOOLCHAIN_HASH_src  $TOOLCHAIN_LONGVER-src.tar.bz2\" | sha256sum -c --ignore-missing\n\nRUN cd /opt && tar xfj $TOOLCHAIN_LONGVER-$TOOLCHAIN_FLAVOR.tar.bz2 && rm $TOOLCHAIN_LONGVER-$TOOLCHAIN_FLAVOR.tar.bz2\n\n# build toolchain (if required)\n\nRUN if [ \"$TOOLCHAIN_FLAVOR\" = \"src\" ]; then \\\n        pushd /opt/$TOOLCHAIN_LONGVER ; \\\n        ./install-sources.sh --skip_steps=mingw32 ; \\\n        ./build-prerequisites.sh --skip_steps=mingw32 ; \\\n        ./build-toolchain.sh --skip_steps=mingw32,manual ; \\\n        popd ; \\\n    fi\n\n# download protobuf\n\nENV PROTOBUF_VERSION=3.4.0\nENV PROTOBUF_HASH=e4b51de1b75813e62d6ecdde582efa798586e09b5beaebfb866ae7c9eaadace4\nRUN wget \"https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protoc-${PROTOBUF_VERSION}-linux-x86_64.zip\"\nRUN echo \"${PROTOBUF_HASH}  protoc-${PROTOBUF_VERSION}-linux-x86_64.zip\" | sha256sum -c\n\n# setup toolchain\n\nENV PATH=/opt/$TOOLCHAIN_LONGVER/bin:$PATH\n\nENV LC_ALL=C.UTF-8 LANG=C.UTF-8\n\n# use zipfile module to extract files world-readable\nENV PYTHON=python\n\nRUN $PYTHON -m zipfile -e \"protoc-${PROTOBUF_VERSION}-linux-x86_64.zip\" /usr/local && chmod 755 /usr/local/bin/protoc\n\nENV WORKON_HOME=/tmp/.venvs\n\n# download monero tests binary\n\nENV TREZOR_MONERO_TESTS_SHA256SUM=140a16b3d6105b5e8e88a93b451e9600a36ed23928ea3cf2f975f9c83f36dab7\nENV TREZOR_MONERO_TESTS_URL=\"https://github.com/ph4r05/monero/releases/download/v0.14.1.0-tests-u14.04-01/trezor_tests\"\nENV TREZOR_MONERO_TESTS_PATH=\"/opt/trezor_monero_tests\"\n\nRUN wget \"$TREZOR_MONERO_TESTS_URL\" -O \"$TREZOR_MONERO_TESTS_PATH\" \\\n    && chmod +x \"$TREZOR_MONERO_TESTS_PATH\"\nRUN echo \"${TREZOR_MONERO_TESTS_SHA256SUM}  ${TREZOR_MONERO_TESTS_PATH}\" | sha256sum -c\n\n# install python dependencies\n\nRUN pip install --no-cache-dir pipenv\n\nRUN $PYTHON --version\nRUN pip --version\nRUN pipenv --version\n"
}