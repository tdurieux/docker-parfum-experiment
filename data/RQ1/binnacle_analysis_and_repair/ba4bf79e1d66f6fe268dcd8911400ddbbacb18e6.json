{
  "startTime": 1674641716250,
  "endTime": 1674641716546,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# 运行时基础镜像\nFROM microsoft/dotnet:2.1-aspnetcore-runtime AS base\nWORKDIR /app\n\n# 复制sources.list\nCOPY sources.list .\n\n# 安装Consul\nENV CONSUL_VERSION=1.4.2\nENV HASHICORP_RELEASES=https://releases.hashicorp.com\nRUN set -eux && \\\n    rm -rf /etc/localtime && \\\n    ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \\\n    mv /etc/apt/sources.list /etc/apt/sources.list.bak && \\\n    mv /app/sources.list /etc/apt/ && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y wget unzip iproute iproute-doc && \\\n    mkdir -p /tmp/build && \\\n    cd /tmp/build && \\\n    apkArch=\"$(lscpu | grep 'Architecture' | sed -e 's/^Architecture:[[:space:]]*//')\" && \\\n    case \"${apkArch}\" in \\\n        aarch64) consulArch='arm64' ;; \\\n        armhf) consulArch='arm' ;; \\\n        x86) consulArch='386' ;; \\\n        x86_64) consulArch='amd64' ;; \\\n        *) echo >&2 \"error: unsupported architecture: ${apkArch} (see ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/)\" && exit 1 ;; \\\n    esac && \\\n    wget ${HASHICORP_RELEASES}/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_${consulArch}.zip && \\\n    mkdir /app/consul && \\\n    unzip -d /app/consul consul_${CONSUL_VERSION}_linux_${consulArch}.zip && \\\n    ln -s /app/consul/consul /usr/local/bin/consul && \\\n    cd /tmp && \\\n    rm -rf /tmp/build && \\\n    mkdir -p /app/consul/data && \\\n    mkdir -p /app/consul/config && \\\n    chown 777 /app/consul/data && \\\n    consul version && rm -rf /var/lib/apt/lists/*;\n\n# 编译项目基础镜像\nFROM microsoft/dotnet:2.1-sdk AS build\nWORKDIR /src\n\n# 复制项目主文件，还原项目依赖项\n#COPY Swift/Swift.csproj Swift/\n#COPY Swift.Core/Swift.Core.csproj Swift.Core/\n#COPY Swift.Management/Swift.Management.csproj Swift.Management/\n\n# 复制所有项目源文件，然后发布项目\nCOPY . .\nRUN dotnet restore Swift/Swift.csproj\nRUN dotnet restore Swift.Management/Swift.Management.csproj\n\nFROM build AS publish\n\nWORKDIR /src/Swift\n#RUN dotnet build --configuration Release\nRUN dotnet publish -c Release -o /app/swift\n\nWORKDIR /src/Swift.Management\nRUN dotnet publish -c Release -o /app/management\n\n# 复制发布的项目文件到运行时目录，然后生成镜像\nFROM base AS final\nWORKDIR /app\nCOPY --from=publish /app/swift ./swift\nCOPY --from=publish /app/management ./management\n\n# 开放端口\nEXPOSE 8300 8301 8301/udp 8302 8302/udp 9631 9632\n\n# 启动时执行的命令\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]"
}