{
  "startTime": 1674245425672,
  "endTime": 1674245425803,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 92,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM b.gcr.io/airflow-gcp/airflow-base:1.8.0.rc.100\n\n# A few problems with compiling Java from source:\n#  1. Oracle.  Licensing prevents us from redistributing the official JDK.\n#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets\n#       really hairy.\n\n#RUN apt-get update && apt-get install -y --no-install-recommends \\\n#\t\tbzip2 \\\n#\t\tunzip \\\n#\t\txz-utils \\\n#\t&& rm -rf /var/lib/apt/lists/*\n#\n#RUN echo 'deb http://httpredir.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list\n#\n## Default to UTF-8 file.encoding\n#ENV LANG C.UTF-8\n#\n## add a simple script that can auto-detect the appropriate JAVA_HOME value\n## based on whether the JDK or only the JRE is installed\n#RUN { \\\n#\t\techo '#!/bin/sh'; \\\n#\t\techo 'set -e'; \\\n#\t\techo; \\\n#\t\techo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"'; \\\n#\t} > /usr/local/bin/docker-java-home \\\n#\t&& chmod +x /usr/local/bin/docker-java-home\n#\n#ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64\n#\n#ENV JAVA_VERSION 8u121\n#ENV JAVA_DEBIAN_VERSION 8u121-b13-1~bpo8+1\n#\n#\n## see https://bugs.debian.org/775775\n## and https://github.com/docker-library/java/issues/19#issuecomment-70546872\n#ENV CA_CERTIFICATES_JAVA_VERSION 20140324\n#\n#RUN set -x \\\n#\t&& apt-get update \\\n#\t&& apt-get install -y \\\n#        openjdk-8-jre=\"$JAVA_DEBIAN_VERSION\" \\\n#        openjdk-8-jdk-headless=\"$JAVA_DEBIAN_VERSION\"\n#\n#RUN set -x \\\n#\t&& apt-get install -y \\\n#\t\topenjdk-8-jdk=\"$JAVA_DEBIAN_VERSION\" \\\n#\t\tca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\" \\\n#\t&& rm -rf /var/lib/apt/lists/* \\\n#\t&& [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]\n#\n## see CA_CERTIFICATES_JAVA_VERSION notes above\n#RUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\n\nRUN pip uninstall airflow -y\nRUN git fetch -vp && git checkout 8e7a5583610be370dd26d50df0b7b98d90dbd396   && python setup.py install\nRUN pip install --no-cache-dir flask_bcrypt\nRUN pip install --no-cache-dir flask_oauthlib\n\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tbzip2 \\\n\t\tunzip \\\n\t\txz-utils \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN echo 'deb http://deb.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list\n\n# Default to UTF-8 file.encoding\nENV LANG C.UTF-8\n\n# add a simple script that can auto-detect the appropriate JAVA_HOME value\n# based on whether the JDK or only the JRE is installed\nRUN { \\\n\t\techo '#!/bin/sh'; \\\n\t\techo 'set -e'; \\\n\t\techo; \\\n\t\techo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"'; \\\n\t} > /usr/local/bin/docker-java-home \\\n\t&& chmod +x /usr/local/bin/docker-java-home\n\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64\n\nENV JAVA_VERSION 8u121\nENV JAVA_DEBIAN_VERSION 8u121-b13-1~bpo8+1\n\n# see https://bugs.debian.org/775775\n# and https://github.com/docker-library/java/issues/19#issuecomment-70546872\nENV CA_CERTIFICATES_JAVA_VERSION 20161107~bpo8+1\n\nRUN set -x \\\n\t&& apt-get update \\\n\t&& apt-get install --no-install-recommends -y \\\n\t\topenjdk-8-jdk=\"$JAVA_DEBIAN_VERSION\" \\\n\t\tca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\" \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]\n\n# see CA_CERTIFICATES_JAVA_VERSION notes above\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\n"
}