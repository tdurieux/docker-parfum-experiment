{
  "startTime": 1674252099613,
  "endTime": 1674252099837,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 2,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 108
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 38,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 2,
        "columnEnd": 107
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 60
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 43
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 2,
        "columnEnd": 80
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 43
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 2,
        "columnEnd": 107
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 2,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM \tcentos:centos7\n\nLABEL   summary=\"Waldur Mastermind REST API Image\" \\\n        vendor=\"OpenNode\" \\\n        license=\"MIT\" \\\n        maintainer=\"Victor Mireyev <victor@opennodecloud.com>\" \\\n        description=\"Waldur Cloud Brokerage Platform\" \\\n        url=\"https://waldur.com\"\n\n# Add tini\nENV TINI_VERSION v0.16.1\nRUN cd /tmp && \\\n  gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 && \\\n  gpg --batch --fingerprint 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 | grep -q \"Key fingerprint = 6380 DC42 8747 F6C3 93FE  ACA5 9A84 159D 7001 A4E5\" && \\\n  curl -f -sSL https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini.asc -o tini.asc && \\\n  curl -f -sSL https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini -o /usr/local/bin/tini && \\\n  gpg --batch --verify tini.asc /usr/local/bin/tini && \\\n  chmod +x /usr/local/bin/tini && \\\n  rm tini.asc\n\n# Add gosu\nENV GOSU_VERSION=1.10 \\\n    GOSU_GPG_KEY=B42F6819007F00F88E364FD4036A9C25BF357DD4\nRUN cd /tmp && \\\n  gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys $GOSU_GPG_KEY && \\\n  gpg --batch --fingerprint $GOSU_GPG_KEY | grep -q \"Key fingerprint = B42F 6819 007F 00F8 8E36  4FD4 036A 9C25 BF35 7DD4\" && \\\n  curl -f -sSL https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64.asc -o gosu.asc && \\\n  curl -f -sSL https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64 -o /usr/local/bin/gosu && \\\n  gpg --batch --verify gosu.asc /usr/local/bin/gosu && \\\n  chmod +x /usr/local/bin/gosu && \\\n  rm gosu.asc\n\n# Install build dependencies for Waldur MasterMind from RPM repositories\nRUN yum --assumeyes install \\\n    centos-release-openstack-pike \\\n    epel-release \\\n    https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm \\\nRUN yum --assumeyes update && yum clean all && rm -rf /var/cache/yum\nRUN yum --assumeyes install --setopt=tsflags=nodocs \\\n  gcc \\\n  libffi-devel \\\n  libjpeg-devel \\\n  libxml2-devel \\\n  libxslt-devel \\\n  libyaml-devel \\\n  openldap-devel \\\n  openssl-devel \\\n  postgresql-devel \\\n  python-devel \\\n  python-pip \\\n  xmlsec1 \\\n  xmlsec1-openssl \\\n  zlib-devel \\\n  crudini \\\n  jq \\\n  python2-httpie \\\n  logrotate \\\n  mailcap \\\n  openssl \\\n  uwsgi-plugin-python2 \\\n  gettext && rm -rf /var/cache/yum\n\nRUN mkdir -p /usr/src/waldur && rm -rf /usr/src/waldur\n\nCOPY . /usr/src/waldur/\nRUN cd /usr/src/waldur && bash docker_build.sh\n\nCOPY docker/rootfs /\n\nENTRYPOINT [\"/app-entrypoint.sh\"]\nCMD [\"/bin/bash\"]\n"
}