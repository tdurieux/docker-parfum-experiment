{
  "startTime": 1674240373213,
  "endTime": 1674240373354,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 16,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 4
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 4
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "################### Dockerfile for Xerces-C version 3.2.2 #####################\n#\n# Xerces is Apache's collection of software libraries for parsing, validating, serializing and manipulating XML.\n#\n# To build this image, from the directory containing this Dockerfile\n# (assuming that the file is named Dockerfile):\n# docker build -t <image_name> .\n#\n# To simply run the resultant image, and provide a bash shell:\n# docker run -it <image_name> /bin/bash\n#\n################################################################################\n\n# Base Image\nFROM s390x/ubuntu:16.04\n\n# The author\nMAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)\n\nENV LANG='en_US.UTF-8'\nENV LANGUAGE='en_US.UTF-8'\nENV SOURCE_DIR=/tmp/source\nWORKDIR $SOURCE_DIR\n\n# Install the required package\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    automake \\\n    g++ \\\n    git-core \\\n    libtool \\\n    make \\\n    locales \\\n\ttar \\\n\n# Download and build Xerces-C\n && locale-gen en_US en_US.UTF-8 \\\n && dpkg-reconfigure --frontend=noninteractive locales \\\n && update-locale LANG=$LANG \\\n && update-locale LANG=$LANGUAGE \\\n && git clone git://github.com/apache/xerces-c.git \\\n && cd xerces-c && git checkout Xerces-C_3_2_2 \\\n && ./reconf && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n && make && make install \\\n\n# Clean up cache data and remove dependencies that are not required\n && apt-get remove -y \\\n    automake \\\n    g++ \\\n    git-core \\\n    libtool \\\n    make \\\n    locales \\\n && apt-get autoremove -y \\\n && apt autoremove -y \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# This dockerfile does not have a CMD statement as the image is intended to be\n# used as a base for building an application. If desired it may also be run as\n# a container e.g. as shown in the header comment above.\n\n# End of Dockerfile\n"
}