{
  "startTime": 1674240829405,
  "endTime": 1674240829519,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 116
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 140
      }
    }
  ],
  "repairedDockerfile": "# Original: FROM openhorizon/aarch64-tx2-cudabase\n\n# this is an experimental docker file that should eventually support TX2's onboard camera\nFROM cudabase\n\n# Install package dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y git pkg-config wget && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y libgtk2.0-dev pkg-config build-essential cmake libcanberra-gtk-module libcanberra-gtk3-module && rm -rf /var/lib/apt/lists/*;\n# RUN apt-get install -y libgstreamer-plugins-base1.0-0 libgstreamer1.0 libgstreamer-plugins-good1.0-0 libgstreamer-plugins-good1.0-dev\n\n#Install OpenCV. The first commented line is an older version\n# RUN apt-get install -y libopencv-dev\nWORKDIR /\nRUN git clone https://github.com/AlexanderRobles21/OpenCVTX2\nWORKDIR /OpenCVTX2\nRUN sed -i '72i -D WITH_LIBV4L=ON \\\\' buildOpenCV.sh\nRUN sh buildOpenCV.sh\nWORKDIR /root/opencv/build\nRUN make\nRUN sudo make install\n\n# Install Darknet and Yolo\nWORKDIR /\nRUN git clone https://github.com/pjreddie/darknet.git\nWORKDIR /darknet\nCOPY Makefile /darknet/\nENV PATH $PATH:/usr/local/cuda-9.0/bin\nRUN make -j4\nRUN wget  https://pjreddie.com/media/files/yolov3.weights\n# this to get tiny-yolov3\nRUN wget https://pjreddie.com/media/files/yolov3-tiny.weights\n"
}