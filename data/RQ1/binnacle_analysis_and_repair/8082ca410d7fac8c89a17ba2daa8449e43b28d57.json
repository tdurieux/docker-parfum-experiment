{
  "startTime": 1674245899615,
  "endTime": 1674245899784,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 66,
        "lineEnd": 70,
        "columnStart": 11,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 45,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 52,
        "columnStart": 30,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 45,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 52,
        "columnStart": 30,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Supported Debian base images\n#   - stretch\n#   - jessie\nARG MERCURY_DEPEND_TAG=stretch\nARG MERCURY_DEV_PREFIX=/usr/local/mercury\nARG MERCURY_DEV_TARGET=/var/tmp/mercury\n\n# first stage, base image\nFROM debian:${MERCURY_DEPEND_TAG} AS base\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    apt-utils \\\n    gcc \\\n    libc-dev \\\n    make \\\n    pkg-config && rm -rf /var/lib/apt/lists/*;\n\nFROM base AS bootstrap\n\nARG MERCURY_BOOTSTRAP=y\nARG MERCURY_DL=http://dl.mercurylang.org/deb/\nARG MERCURY_DEV_DEFAULT_GRADE=asm_fast.gc\nARG MERCURY_DEV_LIBGRADES=${MERCURY_DEV_DEFAULT_GRADE}\nARG MERCURY_DEV_PARALLEL=-j3\n# When using a source tarball, the source needs to be the top level directory,\n# e.g. `mercury-srcdist-rotd-2017-10-19'\nARG MERCURY_DEV_SOURCE=.\n# inherited variables\nARG MERCURY_DEV_PREFIX\nARG MERCURY_DEV_TARGET\n\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE y\n\n# install packaged compiler for bootstrapping\n# first install curl and lsb-realse so we can add the public key for downloading\n# Mercury packages.\n# Then add the remote repository and install all packages required for building\n# the Mercury compiler from source.\nRUN ( echo 'debconf debconf/frontend select Noninteractive' \\\n        | debconf-set-selections ) && \\\n    apt-get update && apt-get install --no-install-recommends -y \\\n        bison \\\n        flex \\\n        $([ \"$MERCURY_BOOTSTRAP\" != \"y\" ] || \\\n            echo autoconf automake curl gnupg2 lsb-release) && \\\n    [ \"${MERCURY_BOOTSTRAP}\" != \"y\" ] || \\\n        ( ( curl -fsSL https://paul.bone.id.au/paul.asc | apt-key add - ) && \\\n            printf \"%s $MERCURY_DL $(lsb_release -cs) main\\n\" \"deb\" \"deb-src\" \\\n                > /etc/apt/sources.list.d/mercury.list && \\\n            apt-get update && apt-get install --no-install-recommends -y \\\n                mercury-rotd-recommended) && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR $MERCURY_DEV_TARGET\nCOPY ${MERCURY_DEV_SOURCE} .\n\n# Checking for configure enables using\n#   - `docker build http://uri.to.bootstrapped.tar.gz',\n#   - `docker build https://github.com/:user:/mercury.git'\n#   - `docker build .'\n#\n# Bootcheck fails currently: ( MAKE_DIR=`pwd`/scripts PATH=$PATH:`pwd`/scripts tools/bootcheck $MERCURY_DEV_PARALLEL ) \\\nRUN ( ([ -f ./configure ] || ./prepare.sh) \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n            --enable-libgrades=$MERCURY_DEV_LIBGRADES \\\n            --with-default-grade=$MERCURY_DEFAULT_GRADE \\\n            --prefix=$MERCURY_DEV_PREFIX \\\n            --disable-symlinks \\\n        && make PARALLEL=$MERCURY_DEV_PARALLEL install \\\n        && rm -fR ${MERCURY_BOOTSTRAP_TARGET} \\\n        && rm -fR $MERCURY_DEV_TARGET)\n\nFROM base AS compiler\nARG MERCURY_DEV_PREFIX\nARG MERCURY_DEV_TARGET\nWORKDIR $MERCURY_DEV_TARGET\nCOPY --from=bootstrap $MERCURY_DEV_PREFIX $MERCURY_DEV_PREFIX\nENV PATH ${MERCURY_DEV_PREFIX}/bin:$PATH\n\nENTRYPOINT [\"mmc\"]\n"
}