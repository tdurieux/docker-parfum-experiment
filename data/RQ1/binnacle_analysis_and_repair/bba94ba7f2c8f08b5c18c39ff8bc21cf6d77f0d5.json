{
  "startTime": 1674234865643,
  "endTime": 1674234865843,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 30,
        "columnStart": 14,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 25,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 25,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# JR Cms .NET ! Open source .net cross platform cms.\n# Version : 3.2\n# Author : jarrysix(jarrysix@gmail.com)\n# Date : 2018-12-22 08:02\n\n# About setting inotify params see below:\n# https://github.com/mono/mono/issues/12535\n\n# 引入基础镜像\nFROM mono:slim\n# 设置开发者\nMAINTAINER jarrysix\n# 设置标签\nLABEL Vendor=\"jarrysix\"\nLABEL License=\"GPLv2\"\nLABEL Version=3.2\n\n# 设置最大缓存数量\nENV MONO_ASPNET_WEBCONFIG_CACHESIZE 4096\n\nWORKDIR /cms\nRUN apt-get update -y && apt-get install --no-install-recommends -y --fix-missing wget unzip mono-fastcgi-server4 \\\n\t\t\t\tgcc libpcre3-dev libssl-dev zlib1g.dev make && \\\n\techo \"2.Install nginx\" && \\\n\twget -O - \"https://nginx.org/download/nginx-1.17.0.tar.gz\" | tar xzf - && \\\n\tcd nginx* && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/nginx \\\n\t\t\t\t--with-http_stub_status_module \\\n\t\t\t\t--with-http_ssl_module \\\n\t\t\t\t--with-http_flv_module --with-http_mp4_module \\\n\t\t\t\t--with-http_gzip_static_module \\\n\t\t\t\t--with-http_realip_module \\\n\t\t\t\t&& make install && cd .. && rm -rf nginx-* && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"3. Install cms program\" \\\n\t&& wget -O cms.zip https://s.to2.net/jrcms_latest?date=20190520 \\\n\t&& unzip cms.zip && rm -f cms.zip \\\n\t&& mkdir -p /var/cms && cp -r templates plugins oem /var/cms \\\n\t&& rm -rf *server \\\n\t&& echo \"4. Clean\" \\\n\t&& apt-get remove -y gcc wget unzip libpcre3-dev libssl-dev zlib1g.dev make \\\n\t&& apt-get autoremove -y \\\n\t&& echo \"5. Setting Envirment\" \\\n\t&& echo \"fs.inotify.max_user_instances = 1638400\\nfs.inotify.max_user_watches = 1638400\" > /etc/sysctl.conf\n\n# 复制本地文件到docker\nCOPY docker-boot.sh /\nCOPY nginx.conf /usr/local/nginx/conf\n\n# 创建一个本地主机或其他容器的挂载点。\nVOLUME [\"/cms/config\",\"/cms/templates\",\"/cms/plugins\",\\\n\t\"/cms/oem\",\"/cms/uploads\",\"/cms/data\"]\n\n# 暴露端口\nEXPOSE 80\n\n# 传递给启动命令的参数\nCMD [\"sh\",\"/docker-boot.sh\"]\n\n\n# # Quick Start\n# # ```\n# # docker run --rm -it -p 8080:80 jarry6/jrcms\n# # ```\n# # open http://localhost:8080 in your brower.\n\n# # Advance\n# ```\n# docker run --rm -p 8080:80 \\\n# \t--volume=$(pwd)/config:/cms/config \\\n#       --volume=$(pwd)/oem:/cms/oem \\\n# \t--volume=$(pwd)/templates:/cms/templates \\\n# \t--volume=$(pwd)/plugins:/cms/plugins \\\n# \t--volume=$(pwd)/uploads:/cms/uploads \\\n# \t--volume=$(pwd)/data:/cms/data \\\n# \tjarry6/jrcms\n# ```\n\n"
}