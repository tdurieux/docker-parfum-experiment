{
  "startTime": 1674252738269,
  "endTime": 1674252738468,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG alpine=3.8\nARG go=1.11.0\nARG grpc\nARG grpc_java\n\nFROM golang:$go-alpine$alpine AS build\n\n# TIL docker arg variables need to be redefined in each build stage\nARG grpc\nARG grpc_java\n\nRUN set -ex && apk --update --no-cache add \\\n    bash \\\n    make \\\n    cmake \\\n    autoconf \\\n    automake \\\n    curl \\\n    tar \\\n    libtool \\\n    g++ \\\n    git \\\n    openjdk8-jre \\\n    libstdc++ \\\n    ca-certificates \\\n    nss\n\nWORKDIR /tmp\nCOPY all/install-protobuf.sh /tmp\nRUN chmod +x /tmp/install-protobuf.sh\nRUN /tmp/install-protobuf.sh ${grpc} ${grpc_java}\nRUN git clone https://github.com/googleapis/googleapis\n\nRUN curl -f -sSL https://github.com/uber/prototool/releases/download/v1.3.0/prototool-$(uname -s)-$(uname -m) \\\n    -o /usr/local/bin/prototool && \\\n    chmod +x /usr/local/bin/prototool\n\n# Go get go-related bins\nRUN go get -u google.golang.org/grpc\n\nRUN go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway\nRUN go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger\nRUN go get -u github.com/golang/protobuf/protoc-gen-go\n\nRUN go get -u github.com/gogo/protobuf/protoc-gen-gogo\nRUN go get -u github.com/gogo/protobuf/protoc-gen-gogofast\n\nRUN go get -u github.com/ckaznocha/protoc-gen-lint\nRUN go get -u github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc\n\n# Add grpc-web support\n\nRUN curl -f -sSL https://github.com/grpc/grpc-web/releases/download/1.0.4/protoc-gen-grpc-web-1.0.4-linux-x86_64 \\\n    -o /tmp/grpc_web_plugin && \\\n    chmod +x /tmp/grpc_web_plugin\n\nFROM alpine:3.9 AS protoc-all\n\nRUN set -ex && apk --update --no-cache add \\\n    bash \\\n    libstdc++ \\\n    libc6-compat \\\n    ca-certificates \\\n    nodejs \\\n    nodejs-npm\n\n# Add TypeScript support\n\nRUN npm i -g ts-protoc-gen@0.10.0 && npm cache clean --force;\n\nCOPY --from=build /tmp/grpc/bins/opt/grpc_* /usr/local/bin/\nCOPY --from=build /tmp/grpc/bins/opt/protobuf/protoc /usr/local/bin/\nCOPY --from=build /tmp/grpc/libs/opt/ /usr/local/lib/\nCOPY --from=build /tmp/grpc-java/compiler/build/exe/java_plugin/protoc-gen-grpc-java /usr/local/bin/\nCOPY --from=build /tmp/googleapis/google/ /opt/include/google\nCOPY --from=build /usr/local/include/google/ /opt/include/google\nCOPY --from=build /usr/local/bin/prototool /usr/local/bin/prototool\nCOPY --from=build /go/bin/* /usr/local/bin/\nCOPY --from=build /tmp/grpc_web_plugin /usr/local/bin/grpc_web_plugin\n\nCOPY --from=build /go/src/github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options/ /opt/include/protoc-gen-swagger/options/\n\nADD all/entrypoint.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/entrypoint.sh\n\nWORKDIR /defs\nENTRYPOINT [ \"entrypoint.sh\" ]\n\n# protoc\nFROM protoc-all AS protoc\nENTRYPOINT [ \"protoc\", \"-I/opt/include\" ]\n\n# prototool\nFROM protoc-all AS prototool\nENTRYPOINT [ \"prototool\" ]\n\n# grpc-cli\nFROM protoc-all as grpc-cli\n\nADD ./cli/entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\nWORKDIR /run\nENTRYPOINT [ \"/entrypoint.sh\" ]\n\n# gen-grpc-gateway\nFROM protoc-all AS gen-grpc-gateway\n\nCOPY gwy/templates /templates\nCOPY gwy/generate_gateway.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/generate_gateway.sh\n\nWORKDIR /defs\nENTRYPOINT [ \"generate_gateway.sh\" ]\n"
}