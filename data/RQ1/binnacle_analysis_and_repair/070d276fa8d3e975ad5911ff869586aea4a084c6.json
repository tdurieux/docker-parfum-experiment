{
  "startTime": 1674239860622,
  "endTime": 1674239860767,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.0-devel-ubuntu16.04\n\nENV USERNAME simtrack\nENV WORKSPACE /home/$USERNAME/my-ws/\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN apt-get update && apt-get install --no-install-recommends -q -y \\\n    dirmngr \\\n    gnupg2 \\\n    lsb-release \\\n    sudo \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116\n\nRUN echo \"deb http://packages.ros.org/ros/ubuntu `lsb_release -sc` main\" > /etc/apt/sources.list.d/ros-latest.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python-rosdep \\\n    python-rosinstall \\\n    python-vcstools \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ros-kinetic-desktop-full \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN rosdep init \\\n    && rosdep update\n\nRUN useradd -ms /bin/bash $USERNAME\n\nRUN echo \"${USERNAME} ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\nUSER $USERNAME\n\nRUN mkdir -p $WORKSPACE/src/simtrack\n\n# docker does not yet support environment-var expansion in command options\nCOPY --chown=simtrack . $WORKSPACE/src/simtrack\n\nWORKDIR $WORKSPACE\n\nRUN source /opt/ros/kinetic/setup.sh && \\\n    if [ ! -f /etc/ros/rosdep/sources.list.d/20-default.list ]; then sudo rosdep init; fi && \\\n    rosdep update && \\\n    sudo apt-get update && \\\n    rosdep install --from-paths src --ignore-src -y -r && \\\n    sudo rm -rf /var/lib/apt/lists/*\n\n"
}