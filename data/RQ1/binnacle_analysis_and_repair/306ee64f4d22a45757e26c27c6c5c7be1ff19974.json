{
  "startTime": 1674243299958,
  "endTime": 1674243300346,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest\n\nMAINTAINER petr.ruzicka@gmail.com\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN set -x \\\n    && apt-get update \\\n    && apt-get install -y -qq --no-install-recommends \\\n         build-essential \\\n         ca-certificates \\\n         cmake \\\n         curl \\\n         exiftran \\\n         imagemagick \\\n         jpegoptim \\\n         libcpanel-json-xs-perl \\\n         libimage-exiftool-perl \\\n         libjpeg-dev \\\n         liblcms2-utils \\\n         libpng-dev \\\n         libtiff-dev \\\n         opencv-data \\\n         p7zip \\\n         perl \\\n         pngcrush \\\n         python3-dev \\\n         python3-numpy \\\n         unzip \\\n         zip \\\n    && curl -f -s https://codeload.github.com/opencv/opencv/zip/master > /master.zip \\\n    && unzip -q /master.zip \\\n    && mkdir /opencv-master/cmake_binary \\\n    && cd /opencv*/cmake_binary \\\n    && cmake \\\n         -D ENABLE_PRECOMPILED_HEADERS=OFF \\\n         -D CMAKE_INSTALL_PREFIX=/usr/ \\\n         -D CMAKE_BUILD_TYPE=MINSIZEREL \\\n         -D BUILD_DOCS=OFF \\\n         -D BUILD_TESTS=OFF \\\n         -D BUILD_PERF_TESTS=OFF \\\n         -D WITH_OPENCL=OFF \\\n         -D WITH_V4L=OFF \\\n         -D BUILD_WITH_DEBUG_INFO=OFF \\\n         -D BUILD_opencv_apps=OFF \\\n         -D WITH_IPP=OFF \\\n         -D BUILD_opencv_video=OFF \\\n         -D BUILD_opencv_videoio=OFF \\\n         -D BUILD_opencv_calib3d=OFF \\\n         -D BUILD_opencv_highgui=OFF \\\n         -D BUILD_opencv_calib3d=OFF \\\n         -D BUILD_opencv_ts=OFF \\\n         .. \\\n    && make install -j $(nproc) \\\n    && mv /usr/share/OpenCV /usr/share/opencv \\\n    && curl -f -s https://codeload.github.com/wavexx/facedetect/zip/master > /master.zip \\\n    && unzip -q -p /master.zip facedetect-master/facedetect > /usr/bin/facedetect \\\n    && chmod +x /usr/bin/facedetect \\\n    && apt-get purge -y -qq \\\n         build-essential \\\n         ca-certificates \\\n         cmake \\\n         curl \\\n         libjpeg-dev \\\n         libpng-dev \\\n         libtiff-dev \\\n         python3-dev \\\n         unzip \\\n    && apt-get autoremove -y -qq \\\n    && apt-get clean -y -qq all \\\n    && rm -rf /opencv* /master.zip /var/lib/apt/lists/* /usr/share/doc /usr/share/locale /usr/share/man\n\nVOLUME /mnt\n\nWORKDIR /mnt\n\nENTRYPOINT [\"sitelen-mute\"]\n"
}