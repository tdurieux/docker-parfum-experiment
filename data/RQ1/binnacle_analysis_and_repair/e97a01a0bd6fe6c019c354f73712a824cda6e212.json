{
  "startTime": 1674236800754,
  "endTime": 1674236800798,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build stage image\n# Pulls all dependencies including dev and builds\n# server runtime\nFROM node:carbon as build\n\nRUN mkdir /app\nWORKDIR /app\nCOPY package.json /app/package.json\nCOPY package-lock.json /app/package-lock.json\nCOPY Gruntfile.js /app/Gruntfile.js\nCOPY tsconfig.json /app/tsconfig.json\nCOPY ./src /app/src\nWORKDIR /app\nRUN npm install && npm run build && npm cache clean --force;\n\n# Vendor stage image\n# Pull only runtime dependencies\nFROM node:carbon as vendor\nRUN mkdir /app\nWORKDIR  /app\nCOPY package.json /app/package.json\nCOPY package-lock.json /app/package-lock.json\nRUN npm install --production && npm cache clean --force;\n\n# Minimal runtime image with runtime only\n# dependencies\nFROM gcr.io/distroless/nodejs\n\n# Copy production /app directory from vendor stage\nCOPY --from=vendor /app /app\n# Copy results of build from build stage\nCOPY --from=build /app/lib /app/lib\nEXPOSE 3000\nCMD [ \"/app/node_modules/.bin/micro\", \"/app/lib/index.js\" ]"
}