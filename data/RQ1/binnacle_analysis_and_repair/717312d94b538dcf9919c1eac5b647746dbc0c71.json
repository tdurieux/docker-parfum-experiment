{
  "startTime": 1674236528607,
  "endTime": 1674236528772,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 2,
        "columnEnd": 19
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 2,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 2,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest\nMAINTAINER Ryan Kurte <ryankurte@gmail.com>\nLABEL Description=\"Docker image for building arm-embedded projects\"\n\n# General dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  git \\\n  subversion \\\n  curl \\\n  cmake \\\n  make \\\n  automake \\\n  autoconf \\\n  python-setuptools \\\n  ninja-build \\\n  python-dev \\\n  libtool \\\n  unzip \\\n  libffi-dev \\\n  libssl-dev \\\n  libusb-1.0.0 \\\n  libusb-1.0.0-dev \\\n  software-properties-common \\\n  python-software-properties \\\n  gawk \\\n  genromfs \\\n  ccache \\\n  clang \\\n  build-essential \\\n  python3 \\\n  python3-dev \\\n  python3-pip \\\n  libprotobuf-dev \\\n  protobuf-compiler \\\n  libprotobuf-c-dev \\\n  protobuf-c-compiler \\\n  python-protobuf && rm -rf /var/lib/apt/lists/*;\n\n# arm-none-eabi custom ppa\nRUN add-apt-repository ppa:team-gcc-arm-embedded/ppa && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y gcc-arm-embedded && rm -rf /var/lib/apt/lists/*;\n\n# Yotta\nRUN easy_install pip && \\\n  pip install --no-cache-dir yotta && \\\n  mkdir -p /usr/local/lib/yotta_modules \\\n  chown $USER /usr/local/lib/yotta_modules \\\n  chmod 755 /usr/local/lib/yotta_modules\n\n# Pyserial for serial programming\nRUN pip install --no-cache-dir pyserial\n\n# STLink util\nRUN git clone https://github.com/texane/stlink.git && \\\n  cd stlink && mkdir build && cd build && \\\n  cmake .. && make && make install\n\n# Cleanup\nRUN apt-get clean && \\\n  rm -rf /var/lib/apt\n\n"
}