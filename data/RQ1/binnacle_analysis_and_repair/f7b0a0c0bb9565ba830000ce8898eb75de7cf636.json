{
  "startTime": 1674249963745,
  "endTime": 1674249963794,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# base image\nFROM pelias/baseimage\n\n# grab all of the valhalla software from ppa\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y software-properties-common python-software-properties && \\\n    add-apt-repository -y ppa:kevinkreiser/prime-server && \\\n    add-apt-repository -y ppa:valhalla-routing/valhalla && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y valhalla-bin && \\\n    rm -rf /var/lib/apt/lists/*;\n\n# change working dir\nRUN mkdir -p /code/valhalla\nWORKDIR /code/valhalla\n\n# generate config\nRUN valhalla_build_config \\\n  --mjolnir-tile-dir '/data/valhalla' \\\n  --mjolnir-tile-extract '/data/valhalla.tar' \\\n  --mjolnir-timezone '/data/valhalla/timezones.sqlite' \\\n  --mjolnir-admin '/data/valhalla/admins.sqlite' > valhalla.json\n\n# build script\nRUN echo 'valhalla_build_tiles -c valhalla.json /data/openstreetmap/*.osm.pbf; valhalla_export_edges --config valhalla.json > /data/polylines/pbf_extract.polyline;' > ./docker_build.sh\n"
}