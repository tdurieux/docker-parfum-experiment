{
  "startTime": 1674252689512,
  "endTime": 1674252689666,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\nLABEL maintainer=\"ops-dev@lists.openswitch.net\"\n\nENV DIST stretch\n\nRUN apt-get -qq update && apt-get -qq upgrade -y \\\n && apt-get -qq install -y --no-install-recommends \\\n    build-essential \\\n    cowbuilder \\\n    curl \\\n    debian-archive-keyring \\\n    debootstrap \\\n    dh-autoreconf \\\n    dh-systemd \\\n    fakechroot \\\n    fakeroot \\\n    git-buildpackage \\\n    gosu \\\n    lsb-release \\\n    python-apt \\\n    python-jinja2 \\\n    python-lxml \\\n    python-pip \\\n    python-requests \\\n    sudo \\\n    vim \\\n    wget \\\n && apt-get -qq autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Pyang not available as Debian package\nRUN pip2 install --no-cache-dir pyang requests-file \\\n && ln -s /usr/local/bin/pyang /usr/bin\n\n# Get OPX and other Debian GPG keys\nRUN gpg --batch --import /usr/share/keyrings/debian-archive-keyring.gpg \\\n && gpg --batch --keyserver hkp://keyserver.ubuntu.com:80 --recv-key AD5073F1 \\\n && gpg --batch --export AD5073F1 >/etc/apt/trusted.gpg.d/opx-archive-keyring.gpg\n\n# Add OPX package sources\nRUN mkdir -p /etc/apt/sources.list.d/ \\\n && echo \"deb http://deb.openswitch.net/$DIST unstable main opx opx-non-free\" >>/etc/apt/sources.list.d/opx.list \\\n && echo \"deb-src http://deb.openswitch.net/$DIST unstable opx\" >>/etc/apt/sources.list.d/opx.list \\\n && apt-get -qq update\n\n# Set up for the user we will create at runtime\nRUN mkdir -p /home/opx && chmod -R 777 /home/opx \\\n && echo 'opx ALL=(ALL) NOPASSWD:ALL' >>/etc/sudoers \\\n && echo '%opx ALL=(ALL) NOPASSWD:ALL' >>/etc/sudoers \\\n && echo 'Defaults env_keep += \"OPX_RELEASE DIST ARCH\"' >>/etc/sudoers\n\nCOPY assets/profile /etc/profile.d/opx.sh\nCOPY assets/entrypoint.sh /\nCOPY assets/hook.d /var/cache/pbuilder/hook.d\nCOPY assets/pbuilder_create.sh /\nCOPY assets/pbuilderrc /etc/pbuilderrc\nCOPY scripts /opt/opx-build/scripts\n\nVOLUME /mnt\nWORKDIR /mnt\n\n# vim: syn=dockerfile\n"
}