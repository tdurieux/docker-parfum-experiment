{
  "startTime": 1674239685701,
  "endTime": 1674239685833,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 154
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 154
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 154
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 178
      }
    }
  ],
  "repairedDockerfile": "###############################################################################################\n# Purpose:  Provide a Flask+nginx+uwsgi container on Ubuntu 16.04 via ports 80 and 443\n#\n# Forked from Thatcher Peskens <thatcher@dotcloud.com>\n#    github - https://github.com/atupal/dockerfile.flask-uwsgi-nginx\n#\n# Build:\n# sudo docker build -t flaskwebpage .\n#\n# Run HTTP:\n# sudo docker run -d -p 80:80 --restart=always -t --name flaskwebpage flaskwebpage\n#\n# Setup HTTPS Automatically with domain name (-d), cert name (-n) and email (-e).  DOMAIN ONLY:\n# sudo docker run -d -p 80:80 -p 443:443 --restart=always -t --name flaskwebpage flaskwebpage \"-d example.com,www.example.com -n example.com -e my@email.com\"\n#\n# Run for HTTPS but set up HTTPS certs later:\n# sudo docker run -d -p 80:80 -p 443:443 --restart=always -t --name flaskwebpage flaskwebpage\n#\n#    Setup HTTPS after starting the container as HTTP:\n#        - Run: /home/flask/conf/setup-https.py -d [domain_list_csv] -n [certname] -e [email_address]\n###############################################################################################\n\nfrom ubuntu:16.04\n\n# Add all local code to the docker container and\nadd . /home/flask/\n\n#Change the HTTPS config scripts to executable\nrun chmod +x /home/flask/conf/setup-https.py\n\n#Add latest nginx repo and install base programs\nrun apt-get update\nrun apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nrun add-apt-repository -y ppa:nginx/stable\nrun apt-get install --no-install-recommends -y build-essential nano nginx net-tools python3 python3-dev python3-setuptools python3-software-properties python3-pip supervisor wget && rm -rf /var/lib/apt/lists/*;\nrun pip3 install --no-cache-dir --upgrade pip\n\n# Install uwsgi and flask via the requirements.txt file\nrun pip3 install --no-cache-dir -r /home/flask/conf/requirements.txt\n\n\n#Update all the things\nrun apt-get update && apt-get -y upgrade\n\n# Config all the things, inititally for HTTP, not HTTPS\nrun rm /etc/nginx/sites-enabled/default\nrun ln -s /home/flask/conf/nginx-http.conf /etc/nginx/sites-enabled/\nrun ln -s /home/flask/conf/supervisor.conf /etc/supervisor/conf.d/\n\n#Get Letsencrypt certbot so you can have it if you want HTTPS\nrun wget -O /home/flask/conf/certbot-auto https://dl.eff.org/certbot-auto\nrun chmod a+x /home/flask/conf/certbot-auto\n\n# Expose both ports in case you want to start using HTTPS\nexpose 80 443\nENTRYPOINT [\"/home/flask/start.sh\"]\n"
}