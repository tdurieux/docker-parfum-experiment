{
  "startTime": 1674242630741,
  "endTime": 1674242630902,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM shadowrobot/build-tools:xenial-kinetic\n\nLABEL Description=\"This ROS Kinetic image contains build tools and the required mongoncxx and pyassimp libraries.\" Vendor=\"Shadow Robot\" Version=\"1.0\"\n\nENV PROJECTS_WS=/home/user/mongo_ws\nRUN echo \"Updating sources\" && \\\n    apt-get update && \\\n    echo \"Creating mongo_ws workspace\" && \\\n    mkdir -p $PROJECTS_WS/src && \\\n    cd $PROJECTS_WS/src && \\\n    \n    echo \"Downloading warehouse source\" && \\\n    wstool init && \\\n    wstool set -yu warehouse_ros_mongo --git https://github.com/shadow-robot/warehouse_ros_mongo.git -v B_working_jade_devel && \\\n    wstool set -yu warehouse_ros --git https://github.com/ros-planning/warehouse_ros.git -v kinetic-devel && \\\n    \n    echo \"Installing mongocxx driver for the warehouse\" && \\\n    git clone -b 26compat https://github.com/mongodb/mongo-cxx-driver.git && \\\n    apt-get -qq --no-install-recommends install -y scons mongodb && \\\n    cd mongo-cxx-driver && \\\n    scons --use-system-boost --prefix=/usr/local/ --full --disable-warnings-as-errors && \\\n\n    echo \"Changing folders owner\" && \\\n    chown -R user:user $PROJECTS_WS && \\\n\n    echo \"Building the workspace\" && \\\n    cd $PROJECTS_WS && \\\n    gosu $MY_USERNAME bash -c \"source /opt/ros/kinetic/setup.bash && catkin_make\" && \\\n    echo \"source /home/user/mongo_ws/devel/setup.bash\" >> /home/user/.bashrc && \\\n\n    echo \"Fixing pyassimp issue\" && \\\n    cd /tmp/ && \\\n    git clone https://github.com/assimp/assimp.git && \\\n    cd assimp && \\\n    cmake CMakeLists.txt -G 'Unix Makefiles' && \\\n    make && \\\n    make install && \\\n    cd port/PyAssimp/ && \\\n    python setup.py install && \\\n\n    echo \"Removing cache\" && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\nCMD [\"/usr/bin/terminator\"]\n"
}