{
  "startTime": 1674238963694,
  "endTime": 1674238963990,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2017 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM debian:stretch\n\n# Includes everything needed to build and test github.com/kubernetes/kubernetes\n# and github.com/kubernetes/test-infra with bazel and run bazel as the host UID\n\nARG BAZEL_VERSION\n\nWORKDIR \"/workspace\"\nRUN mkdir -p \"/workspace\"\n\n# TODO(bentheelder): we should probably have these pip deps in bazel,\n# remove these from the container if kettle is fixed.\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    git \\\n    python \\\n    python-pip \\\n    rpm \\\n    unzip \\\n    wget \\\n    zip \\\n    zlib1g-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    python -m pip install --upgrade pip setuptools wheel && \\\n    pip install --no-cache-dir pylint pyyaml\n\nSHELL [\"/bin/bash\", \"-c\"]\n\n# install bazel as some non-root user\nRUN useradd -ms /bin/bash install-user\nCOPY ./install-bazel.sh /\nRUN chmod +rx /install-bazel.sh && \\\n    cd /home/install-user && \\\n    su install-user /install-bazel.sh\n# make sure bazel is in $PATH\nENV PATH=\"/home/install-user/bin:${PATH}\"\n\n# It turns out git and bazel pkg_tar and a bunch of other things fail if we\n# don't have a /etc/passwd with the user in it, so let's solve that.\n# We're making a fake world-writable one *inside* the container so that the\n# entrypoint can write an entry to it with the user matching the host user\n# this means we don't need to run the container as root! :-)\n# We care about not running as root because it means build files are owned by\n# the host users, not root (and logs, etc).\n# More about this in entrypoint.sh\nRUN touch /etc/passwd && chmod a+rw /etc/passwd\n\nCOPY ./entrypoint.sh /\nRUN chmod +rx /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}