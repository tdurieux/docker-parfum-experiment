{
  "startTime": 1674241116627,
  "endTime": 1674241116933,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 32,
        "columnStart": 5,
        "columnEnd": 3
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 32,
        "columnStart": 5,
        "columnEnd": 3
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2019 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# This is a Dockerfile for running and building Kubernetes dashboard\n# It installs all deps in the container and adds the dashboard source\n# This way it abstracts all required build tools away and lets the user\n# run gulp tasks on the code with only docker installed\n\n# golang is based on debian:jessie\n# Specify version to clarify which version we use.\nFROM golang:1.12\n\n# Install Node.js. Go is already installed.\n# A small tweak, apt-get update is already run by the nodejs setup script,\n# so there's no need to run it again.\nRUN curl -f -sL https://deb.nodesource.com/setup_11.x | bash - \\\n  && apt-get install -y --no-install-recommends \\\n\topenjdk-8-jre \\\n\tnodejs \\\n\tpatch \\\n\tchromium \\\n\tbc \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& apt-get clean\n\n# Install dependencies. This will take a while.\nRUN npm install -g npm@latest gulp && npm cache clean --force;\n\n# Set environment variable for JavaScript tests.\nENV CHROME_BIN=/usr/bin/chromium\n\n# Set environment variable for terminal\nENV TERM=xterm\n\n# Add ${GOPATH}/bin into ${PATH}\nENV PATH=${GOPATH}/bin:${PATH}\n\n# For testing, etc., to know if this environment is on container.\nENV K8S_DASHBOARD_CONTAINER=TRUE\n\n# Suppress angular analytics dialog\nENV NG_CLI_ANALYTICS=false\n\n# Download a statically linked docker client,\n# so the container is able to build images on the host.\nRUN curl -f -sSL https://download.docker.com/linux/static/stable/x86_64/docker-18.06.1-ce.tgz > /tmp/docker.tgz && \\\n\tcd /tmp/ && \\\n\ttar xzvf docker.tgz && \\\n\trm docker.tgz && \\\n\tmv /tmp/docker/docker /usr/bin/docker && \\\n\trm -rf /tmp/docker/ && \\\n\tchmod +x /usr/bin/docker\n\n# Install golangci for ckecking or fixing go format.\n# `npm ci` installs golangci, but this installation is needed\n# for running `npm run check` singlely, like\n# `aio/develop/run-npm-on-container.sh run check`.\nRUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.17.1\n\n# Install delve for debuging go files.\nRUN go get github.com/go-delve/delve/cmd/dlv\n\n# Volume for source code\nVOLUME [\"/go/src/github.com/kubernetes/dashboard\"]\n\n# Mount point for kubeconfig\nRUN mkdir -p /root/.kube\n\n# Current directory is always dashboard source directory.\nWORKDIR /go/src/github.com/kubernetes/dashboard\n\n# Expose port for frontend, backend and remote debuging\nEXPOSE 8080 9090 2345\n\n# Run npm command in container.\nCMD ./aio/develop/npm-command.sh\n"
}