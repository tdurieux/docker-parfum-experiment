{
  "startTime": 1674248783511,
  "endTime": 1674248784548,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 7,
        "columnEnd": 133
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 201,
        "lineEnd": 201,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 239,
        "lineEnd": 239,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 337,
        "lineEnd": 337,
        "columnStart": 7,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 338,
        "lineEnd": 338,
        "columnStart": 7,
        "columnEnd": 113
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 207,
        "lineEnd": 207,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 189,
        "lineEnd": 189,
        "columnStart": 1,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 237,
        "lineEnd": 237,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 294,
        "lineEnd": 294,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 308,
        "lineEnd": 311,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 320,
        "lineEnd": 320,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 336,
        "lineEnd": 336,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 341,
        "lineEnd": 341,
        "columnStart": 7,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 360,
        "lineEnd": 361,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 372,
        "lineEnd": 372,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 384,
        "lineEnd": 384,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 189,
        "lineEnd": 189,
        "columnStart": 1,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 237,
        "lineEnd": 237,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 308,
        "lineEnd": 311,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 320,
        "lineEnd": 320,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 336,
        "lineEnd": 336,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 360,
        "lineEnd": 361,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 372,
        "lineEnd": 372,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 384,
        "lineEnd": 384,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 189,
        "lineEnd": 189,
        "columnStart": 1,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 237,
        "lineEnd": 237,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 294,
        "lineEnd": 294,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 308,
        "lineEnd": 311,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 320,
        "lineEnd": 320,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 336,
        "lineEnd": 336,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 341,
        "lineEnd": 341,
        "columnStart": 7,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 360,
        "lineEnd": 361,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 372,
        "lineEnd": 372,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 151,
        "lineEnd": 151,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 186,
        "lineEnd": 186,
        "columnStart": 1,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 231,
        "lineEnd": 231,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 299,
        "lineEnd": 302,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 311,
        "lineEnd": 311,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 323,
        "lineEnd": 323,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 347,
        "lineEnd": 348,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 359,
        "lineEnd": 359,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 371,
        "lineEnd": 371,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedDockerfile": "#\n#--------------------------------------------------------------------------\n# Image Setup\n#--------------------------------------------------------------------------\n#\n# To edit the 'php-fpm' base Image, visit its repository on Github\n#    https://github.com/Laradock/php-fpm\n#\n# To change its version, see the available Tags on the Docker Hub:\n#    https://hub.docker.com/r/laradock/php-fpm/tags/\n#\n# Note: Base Image name format {image-tag}-{php-version}\n#\n\nARG PHP_VERSION=${PHP_VERSION}\n\nFROM laradock/php-fpm:2.2-${PHP_VERSION}\n\nLABEL maintainer=\"Mahmoud Zalt <mahmoud@zalt.me>\"\n\n#\n#--------------------------------------------------------------------------\n# Mandatory Software's Installation\n#--------------------------------------------------------------------------\n#\n# Mandatory Software's such as (\"mcrypt\", \"pdo_mysql\", \"libssl-dev\", ....)\n# are installed on the base image 'laradock/php-fpm' image. If you want\n# to add more Software's or remove existing one, you need to edit the\n# base image (https://github.com/Laradock/php-fpm).\n#\n\n#\n#--------------------------------------------------------------------------\n# Optional Software's Installation\n#--------------------------------------------------------------------------\n#\n# Optional Software's will only be installed if you set them to `true`\n# in the `docker-compose.yml` before the build.\n# Example:\n#   - INSTALL_ZIP_ARCHIVE=true\n#\n\n###########################################################################\n# SOAP:\n###########################################################################\n\nARG INSTALL_SOAP=false\n\nRUN if [ ${INSTALL_SOAP} = true ]; then \\\n    apt-get update -yqq && \\\n    apt-get -y --no-install-recommends install libxml2-dev php-soap && \\\n    docker-php-ext-install soap \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# pgsql\n###########################################################################\n\nARG INSTALL_PGSQL=false\n\nRUN if [ ${INSTALL_PGSQL} = true ]; then \\\n    # Install the pgsql extension\n    docker-php-ext-install pgsql \\\n;fi\n\n###########################################################################\n# pgsql client\n###########################################################################\n\nARG INSTALL_PG_CLIENT=false\n\nRUN if [ ${INSTALL_PG_CLIENT} = true ]; then \\\n    mkdir -p /usr/share/man/man1 && \\\n    mkdir -p /usr/share/man/man7 && \\\n    # Install the pgsql client\n    apt-get install --no-install-recommends -y postgresql-client \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# xDebug:\n###########################################################################\n\nARG INSTALL_XDEBUG=false\n\nRUN if [ ${INSTALL_XDEBUG} = true ]; then \\\n    # Install the xdebug extension\n    pecl install xdebug && \\\n    docker-php-ext-enable xdebug \\\n;fi\n\n# Copy xdebug configuration for remote debugging\nCOPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\n\n###########################################################################\n# Blackfire:\n###########################################################################\n\nARG INSTALL_BLACKFIRE=false\n\nRUN if [ ${INSTALL_XDEBUG} = false -a ${INSTALL_BLACKFIRE} = true ]; then \\\n    version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") \\\n    && curl -f -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \\\n    && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \\\n    && mv /tmp/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so \\\n    && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > $PHP_INI_DIR/conf.d/blackfire.ini \\\n; rm /tmp/blackfire-probe.tar.gzfi\n\n###########################################################################\n# PHP REDIS EXTENSION\n###########################################################################\n\nARG INSTALL_PHPREDIS=false\n\nRUN if [ ${INSTALL_PHPREDIS} = true ]; then \\\n    # Install Php Redis Extension\n    printf \"\\n\" | pecl install -o -f redis \\\n    &&  rm -rf /tmp/pear \\\n    &&  docker-php-ext-enable redis \\\n;fi\n\n###########################################################################\n# Swoole EXTENSION\n###########################################################################\n\nARG INSTALL_SWOOLE=false\n\nRUN if [ ${INSTALL_SWOOLE} = true ]; then \\\n    # Install Php Swoole Extension\n    pecl install swoole \\\n    &&  docker-php-ext-enable swoole \\\n;fi\n\n###########################################################################\n# MongoDB:\n###########################################################################\n\nARG INSTALL_MONGO=false\n\nRUN if [ ${INSTALL_MONGO} = true ]; then \\\n    # Install the mongodb extension\n    pecl install mongodb && \\\n    docker-php-ext-enable mongodb \\\n;fi\n\n###########################################################################\n# AMQP:\n###########################################################################\n\nARG INSTALL_AMQP=false\n\nRUN if [ ${INSTALL_AMQP} = true ]; then \\\n    apt-get install --no-install-recommends librabbitmq-dev -y && \\\n    # Install the amqp extension\n    pecl install amqp && \\\n    docker-php-ext-enable amqp \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# ZipArchive:\n###########################################################################\n\nARG INSTALL_ZIP_ARCHIVE=false\n\nRUN if [ ${INSTALL_ZIP_ARCHIVE} = true ]; then \\\n    # Install the zip extension\n    docker-php-ext-install zip \\\n;fi\n\n###########################################################################\n# bcmath:\n###########################################################################\n\nARG INSTALL_BCMATH=false\n\nRUN if [ ${INSTALL_BCMATH} = true ]; then \\\n    # Install the bcmath extension\n    docker-php-ext-install bcmath \\\n;fi\n\n###########################################################################\n# GMP (GNU Multiple Precision):\n###########################################################################\n\nARG INSTALL_GMP=false\n\nRUN if [ ${INSTALL_GMP} = true ]; then \\\n\tapt-get install --no-install-recommends -y libgmp-dev && \\\n    docker-php-ext-install gmp \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# PHP Memcached:\n###########################################################################\n\nARG INSTALL_MEMCACHED=false\n\nRUN if [ ${INSTALL_MEMCACHED} = true ]; then \\\n    curl -f -L -o /tmp/memcached.tar.gz \"https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz\" \\\n    && mkdir -p memcached \\\n    && tar -C memcached -zxvf /tmp/memcached.tar.gz --strip 1 \\\n    && ( cd memcached \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        && make -j$(nproc) \\\n        && make install) \\\n\n    && rm -r memcached \\\n    && rm /tmp/memcached.tar.gz \\\n    && docker-php-ext-enable memcached \\\n; fi\n\n###########################################################################\n# Exif:\n###########################################################################\n\nARG INSTALL_EXIF=false\n\nRUN if [ ${INSTALL_EXIF} = true ]; then \\\n    # Enable Exif PHP extentions requirements\n    docker-php-ext-install exif \\\n;fi\n\n###########################################################################\n# PHP Aerospike:\n###########################################################################\n\nUSER root\n\nARG INSTALL_AEROSPIKE=false\n\nRUN if [ ${INSTALL_AEROSPIKE} = true ]; then \\\n    apt-get -y --no-install-recommends install sudo wget && \\\n    # Install the php aerospike extension\n    curl -f -L -o /tmp/aerospike-client-php.tar.gz ${AEROSPIKE_PHP_REPOSITORY} \\\n    && mkdir -p aerospike-client-php \\\n    && tar -C aerospike-client-php -zxvf /tmp/aerospike-client-php.tar.gz --strip 1 \\\n    && ( \\\n        cd aerospike-client-php/src \\\n        && phpize \\\n        && ./build.sh \\\n        && make install \\\n    ) \\\n    && rm /tmp/aerospike-client-php.tar.gz \\\n    && docker-php-ext-enable aerospike \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# Opcache:\n###########################################################################\n\nARG INSTALL_OPCACHE=false\n\nRUN if [ ${INSTALL_OPCACHE} = true ]; then \\\n    docker-php-ext-install opcache \\\n;fi\n\n# Copy opcache configration\nCOPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini\n\n###########################################################################\n# Mysqli Modifications:\n###########################################################################\n\nARG INSTALL_MYSQLI=false\n\nRUN if [ ${INSTALL_MYSQLI} = true ]; then \\\n    docker-php-ext-install mysqli \\\n;fi\n\n###########################################################################\n# Tokenizer Modifications:\n###########################################################################\n\nARG INSTALL_TOKENIZER=false\n\nRUN if [ ${INSTALL_TOKENIZER} = true ]; then \\\n    docker-php-ext-install tokenizer \\\n;fi\n\n###########################################################################\n# Human Language and Character Encoding Support:\n###########################################################################\n\nARG INSTALL_INTL=false\n\nRUN if [ ${INSTALL_INTL} = true ]; then \\\n    apt-get update -yqq && \\\n    apt-get install --no-install-recommends -y zlib1g-dev libicu-dev g++ && \\\n    docker-php-ext-configure intl && \\\n    docker-php-ext-install intl \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# GHOSTSCRIPT:\n###########################################################################\n\nARG INSTALL_GHOSTSCRIPT=false\n\nRUN if [ ${INSTALL_GHOSTSCRIPT} = true ]; then \\\n    apt-get install --no-install-recommends -y \\\n    poppler-utils \\\n    ghostscript \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# LDAP:\n###########################################################################\n\nARG INSTALL_LDAP=false\n\nRUN if [ ${INSTALL_LDAP} = true ]; then \\\n    apt-get install --no-install-recommends -y libldap2-dev && \\\n    docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ && \\\n    docker-php-ext-install ldap \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# SQL SERVER:\n###########################################################################\n\nARG INSTALL_MSSQL=false\n\nRUN set -eux;if [ ${INSTALL_MSSQL} = true ]; then \\\n    apt-get install --no-install-recommends -y apt-transport-https gnupg \\\n    && curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \\\n    && curl -f https://packages.microsoft.com/config/debian/8/prod.list > /etc/apt/sources.list.d/mssql-release.list \\\n    && apt-get update -yqq \\\n    # Install Dependencies\n    && ACCEPT_EULA=Y apt-get --no-install-recommends install -y unixodbc unixodbc-dev libgss3 odbcinst msodbcsql locales \\\n    && echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n    && locale-gen \\\n    # Install pdo_sqlsrv and sqlsrv from PECL. Replace pdo_sqlsrv-4.1.8preview with preferred version.\n    && pecl install pdo_sqlsrv-4.1.8preview sqlsrv-4.1.8preview \\\n    && docker-php-ext-enable pdo_sqlsrv sqlsrv \\\n    && php -m | grep -q 'pdo_sqlsrv' \\\n    && php -m | grep -q 'sqlsrv' \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# Image optimizers:\n###########################################################################\n\nUSER root\n\nARG INSTALL_IMAGE_OPTIMIZERS=false\n\nRUN if [ ${INSTALL_IMAGE_OPTIMIZERS} = true ]; then \\\n    apt-get install --no-install-recommends -y --force-yes jpegoptim optipng pngquant gifsicle \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# ImageMagick:\n###########################################################################\n\nUSER root\n\nARG INSTALL_IMAGEMAGICK=false\n\nRUN if [ ${INSTALL_IMAGEMAGICK} = true ]; then \\\n    apt-get install --no-install-recommends -y libmagickwand-dev imagemagick && \\\n    pecl install imagick && \\\n    docker-php-ext-enable imagick \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###########################################################################\n# IMAP:\n###########################################################################\n\nARG INSTALL_IMAP=false\n\nRUN if [ ${INSTALL_IMAP} = true ]; then \\\n    apt-get install --no-install-recommends -y libc-client-dev libkrb5-dev && \\\n    rm -r /var/lib/apt/lists/* && \\\n    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \\\n    docker-php-ext-install imap \\\n; fi\n\n###########################################################################\n# Check PHP version:\n###########################################################################\n\nARG PHP_VERSION=${PHP_VERSION}\n\nRUN php -v | head -n 1 | grep -q \"PHP ${PHP_VERSION}.\"\n\n#\n#--------------------------------------------------------------------------\n# Final Touch\n#--------------------------------------------------------------------------\n#\n\nCOPY ./laravel.ini /usr/local/etc/php/conf.d\nCOPY ./xlaravel.pool.conf /usr/local/etc/php-fpm.d/\n\nUSER root\n\n# Clean up\nRUN apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    rm /var/log/lastlog /var/log/faillog\n\nRUN usermod -u 1000 www-data\n\nWORKDIR /var/www\n\nCMD [\"php-fpm\"]\n\nEXPOSE 9000\n"
}