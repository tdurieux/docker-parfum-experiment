{
  "startTime": 1674241294319,
  "endTime": 1674241294670,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.2-fpm-alpine as magento2_php\n\n# Install Magento requirements\nRUN \\\n    apk add --no-cache \\\n        autoconf \\\n        automake \\\n        freetype-dev \\\n        g++ \\\n        git \\\n        icu-dev \\\n        icu-libs \\\n        libjpeg-turbo-dev \\\n        libmcrypt-dev \\\n        libpng-dev \\\n        libxml2-dev \\\n        libxml2-utils \\\n        libxslt-dev \\\n        libwebp-dev \\\n        make \\\n        openssh-client \\\n        patch \\\n        perl \\\n        shadow \\\n        ssmtp \\\n        yarn && \\\n    apk add --no-cache --virtual .build-deps $PHPIZE_DEPS && \\\n    docker-php-ext-configure bcmath && \\\n    docker-php-ext-configure gd \\\n        --with-freetype-dir=/usr/include/ \\\n        --with-jpeg-dir=/usr/include/ \\\n        --with-png-dir=/usr/include/ \\\n        --with-webp-dir=/usr/include/ && \\\n    docker-php-ext-install -j$(nproc) \\\n        bcmath \\\n        intl \\\n        gd \\\n        opcache \\\n        pdo_mysql \\\n        soap \\\n        xsl \\\n        zip && \\\n    yes \"\" | pecl install apcu redis && \\\n    docker-php-ext-enable apcu redis && \\\n    perl -pi -e \"s/mailhub=mail/mailhub=maildev/\" /etc/ssmtp/ssmtp.conf && \\\n    perl -pi -e \"s|;pm.status_path = /status|pm.status_path = /php_fpm_status|g\" /usr/local/etc/php-fpm.d/www.conf && \\\n    yarn global add grunt-cli && \\\n    apk del .build-deps\n\n## Install Composer globally\nENV COMPOSER_ALLOW_SUPERUSER 1\nRUN \\\n    curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \\\n    composer global require \"hirak/prestissimo\" --no-suggest --optimize-autoloader --classmap-authoritative\nENV PATH \"${PATH}:/root/.composer/vendor/bin\"\n\n# Install netz98/n98-magerun2\nRUN \\\n    curl -f -sS https://files.magerun.net/n98-magerun2.phar --output /usr/local/bin/magerun2 && \\\n    chmod +x /usr/local/bin/magerun2\n\n# Automatically start the SSH agent when a new session is created\nRUN echo 'eval $(ssh-agent) && ssh-add' >> /home/www-data/.profile\n\n# Assign a new UID/GID to avoid using a generated value\nRUN \\\n    usermod -u 1000 www-data && \\\n    groupmod -g 1000 www-data\n\n# Install custom entrypoint\nCOPY entrypoint.sh /usr/local/bin/docker-custom-entrypoint\nRUN chmod 777 /usr/local/bin/docker-custom-entrypoint\nCMD [\"php-fpm\"]\nENTRYPOINT [\"docker-custom-entrypoint\"]\n\n# ======================================================================================================================\nFROM magento2_php as magento2_php_blackfire\nRUN \\\n    curl -f -sS https://packages.blackfire.io/binaries/blackfire-php/1.23.1/blackfire-php-alpine_amd64-php-72.so \\\n        --output $(php -r \"echo ini_get('extension_dir');\")/blackfire.so && \\\n    docker-php-ext-enable blackfire\n# ======================================================================================================================\n\n# ======================================================================================================================\nFROM magento2_php as magento2_php_xdebug\nRUN \\\n    apk add --no-cache --virtual .build-deps $PHPIZE_DEPS && \\\n    yes \"\" | pecl install xdebug && \\\n    docker-php-ext-enable xdebug\n# ======================================================================================================================\n"
}