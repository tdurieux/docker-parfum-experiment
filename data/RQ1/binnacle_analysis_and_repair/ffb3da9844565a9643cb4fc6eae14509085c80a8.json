{
  "startTime": 1674249525310,
  "endTime": 1674249525905,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 128,
        "lineEnd": 129,
        "columnStart": 1,
        "columnEnd": 2
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 9,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2019 Red Hat, Inc.\n# This program and the accompanying materials are made\n# available under the terms of the Eclipse Public License 2.0\n# which is available at https://www.eclipse.org/legal/epl-2.0/\n#\n# SPDX-License-Identifier: EPL-2.0\n#\n# Contributors:\n#   Red Hat, Inc. - initial API and implementation\n\nFROM ${BUILD_ORGANIZATION}/${BUILD_PREFIX}-theia-endpoint-runtime:${BUILD_TAG}\n\n# ensure local python is preferred over distribution python\nENV PATH /usr/local/bin:$PATH\n\n# http://bugs.python.org/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG C.UTF-8\n\n# install ca-certificates so that HTTPS works consistently\n# other runtime dependencies for Python are installed later\nRUN apk add --no-cache ca-certificates\n\nENV GPG_KEY 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\nENV PYTHON_VERSION 3.7.3\n\nRUN set -ex \\\n\t&& apk add --update --no-cache --virtual .fetch-deps \\\n\t\tgnupg \\\n\t\ttar \\\n\t\txz \\\n\t\\\n\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n\t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n\t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n\t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \\\n\t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n\t&& mkdir -p /usr/src/python \\\n\t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n\t&& rm python.tar.xz \\\n\t\\\n\t&& apk add --update --no-cache --virtual .build-deps  \\\n\t\tbzip2-dev \\\n\t\tcoreutils \\\n\t\tdpkg-dev dpkg \\\n\t\texpat-dev \\\n\t\tfindutils \\\n\t\tgcc \\\n\t\tgdbm-dev \\\n\t\tlibc-dev \\\n\t\tlibffi-dev \\\n\t\tlibnsl-dev \\\n\t\tlibtirpc-dev \\\n\t\tlinux-headers \\\n\t\tmake \\\n\t\tncurses-dev \\\n\t\topenssl-dev \\\n\t\tpax-utils \\\n\t\treadline-dev \\\n\t\tsqlite-dev \\\n\t\ttcl-dev \\\n\t\ttk \\\n\t\ttk-dev \\\n\t\tutil-linux-dev \\\n\t\txz-dev \\\n\t\tzlib-dev \\\n# add build deps before removing fetch deps in case there's overlap\n\t&& apk del .fetch-deps \\\n\t\\\n\t&& cd /usr/src/python \\\n\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& ./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--enable-loadable-sqlite-extensions \\\n\t\t--enable-shared \\\n\t\t--with-system-expat \\\n\t\t--with-system-ffi \\\n\t\t--without-ensurepip \\\n\t&& make -j \"$(nproc)\" \\\n# set thread stack size to 1MB so we don't segfault before we hit sys.getrecursionlimit()\n# https://github.com/alpinelinux/aports/commit/2026e1259422d4e0cf92391ca2d3844356c649d0\n\t\tEXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\" \\\n\t&& make install \\\n\t\\\n\t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';' \\\n\t\t| tr ',' '\\n' \\\n\t\t| sort -u \\\n\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t\t| xargs -rt apk add --no-cache --virtual .python-rundeps \\\n\t&& apk add --no-cache --virtual .python-rundeps \\\n\t\tctags \\\n\t&& find /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' + \\\n\t&& rm -rf /usr/src/python \\\n\t\\\n\t&& python3 --version\n\n# make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n\t&& ln -s idle3 idle \\\n\t&& ln -s pydoc3 pydoc \\\n\t&& ln -s python3 python \\\n\t&& ln -s python3-config python-config\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 19.0.3\n\nRUN set -ex; \\\n\n\twget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \\\n\n\tpython get-pip.py \\\n\t\t--disable-pip-version-check \\\n\t\t--no-cache-dir \\\n\t\t\"pip==$PYTHON_PIP_VERSION\" \\\n\t; \\\n\tpip --version \\\n\t; \\\n\tsudo pip install --upgrade pip && \\\n    sudo pip install --no-cache-dir virtualenv && \\\n    sudo pip install --no-cache-dir --upgrade setuptools \\\n\t; \\\n\tpip install --no-cache-dir pylint python-language-server[all] \\\n\t; \\\n\tfind /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' +; \\\n\trm -f get-pip.py \\\n\t; \\\n\tapk del .build-deps\n"
}