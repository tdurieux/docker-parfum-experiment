{
  "startTime": 1674246374071,
  "endTime": 1674246374186,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Ubuntu Node.js Dockerfile\n# https://gist.github.com/RinatMullayanov/89687a102e696b1d4cab#file-dockerfile-L17\n# https://nodejs.org/en/docs/guides/nodejs-docker-webapp/\n#\n\n# Pull base image.\nFROM node:carbon\n\n# Defines environment variables\nENV SERVER_PORT 7890\nENV PRJ_DIR /home/SorryPress\n\n# 复制项目文件\nCOPY . $PRJ_DIR\n\n# 使用国内中科大镜像源加快apt速度\nCOPY ./sources.list /etc/apt/sources.list\n\n# 安装ffmpeg相关\nRUN apt-get update && apt-get install --no-install-recommends -y locales locales-all ttf-wqy-microhei ffmpeg && rm -rf /var/lib/apt/lists/*;\n\n# Binds to port\nEXPOSE $SERVER_PORT\n\n# Define working directory.\nWORKDIR $PRJ_DIR\n\n# Install app dependencies\nRUN npm i -g pm2 npm-run-all && npm cache clean --force;\nRUN npm run all:install\n\n# Defines your runtime(define default command)\n# These commands unlike RUN (they are carried out in the construction of the container) are run when the container\nCMD npm start && pm2 log 0\n"
}