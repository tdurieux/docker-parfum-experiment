{
  "startTime": 1674248667298,
  "endTime": 1674248667821,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 22,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2017 The Go Authors. All rights reserved.\n# Use of this source code is governed by a BSD-style\n# license that can be found in the LICENSE file.\n\nFROM debian:stretch AS nacl\n\nRUN apt-get update && apt-get install -y --no-install-recommends curl bzip2 ca-certificates && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -s https://storage.googleapis.com/nativeclient-mirror/nacl/nacl_sdk/trunk.544461/naclsdk_linux.tar.bz2 | tar -xj -C /tmp --strip-components=2 pepper_67/tools/sel_ldr_x86_64\n\nFROM debian:stretch AS build\nLABEL maintainer=\"golang-dev@googlegroups.com\"\n\nENV BUILD_DEPS 'curl git gcc patch libc6-dev ca-certificates'\nRUN apt-get update && apt-get install -y ${BUILD_DEPS} --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nENV GOPATH /go\nENV PATH /usr/local/go/bin:$GOPATH/bin:$PATH\nENV GOROOT_BOOTSTRAP /usr/local/gobootstrap\nARG GO_VERSION=go1.12.6\nENV GO_VERSION ${GO_VERSION}\n\n# Fake time\nCOPY enable-fake-time.patch /usr/local/playground/\n# Fake file system\nCOPY fake_fs.lst /usr/local/playground/\n\n# Get the Go binary.\nRUN curl -f -sSL https://dl.google.com/go/$GO_VERSION.linux-amd64.tar.gz -o /tmp/go.tar.gz\nRUN curl -f -sSL https://dl.google.com/go/$GO_VERSION.linux-amd64.tar.gz.sha256 -o /tmp/go.tar.gz.sha256\nRUN echo \"$(cat /tmp/go.tar.gz.sha256)  /tmp/go.tar.gz\" | sha256sum -c -\nRUN tar -C /usr/local/ -vxzf /tmp/go.tar.gz && rm /tmp/go.tar.gz\n# Make a copy for GOROOT_BOOTSTRAP, because we rebuild the toolchain and make.bash removes bin/go as its first step.\nRUN cp -R /usr/local/go $GOROOT_BOOTSTRAP\n# Apply the fake time and fake filesystem patches.\nRUN patch /usr/local/go/src/runtime/rt0_nacl_amd64p32.s /usr/local/playground/enable-fake-time.patch\nRUN cd /usr/local/go && go run misc/nacl/mkzip.go -p syscall /usr/local/playground/fake_fs.lst src/syscall/fstest_nacl.go\n# Re-build the Go toolchain.\nRUN cd /usr/local/go/src && GOOS=nacl GOARCH=amd64p32 ./make.bash --no-clean\n\nRUN mkdir /gocache\nENV GOCACHE /gocache\nENV GO111MODULE on\n\nCOPY go.mod /go/src/playground/go.mod\nCOPY go.sum /go/src/playground/go.sum\nWORKDIR /go/src/playground\n\n# Pre-build some packages to speed final install later.\nRUN go install cloud.google.com/go/compute/metadata\nRUN go install cloud.google.com/go/datastore\nRUN go install github.com/bradfitz/gomemcache/memcache\nRUN go install golang.org/x/tools/godoc/static\nRUN go install golang.org/x/tools/imports\nRUN go install github.com/rogpeppe/go-internal/modfile\nRUN go install github.com/rogpeppe/go-internal/txtar\n\n# Add and compile playground daemon\nCOPY . /go/src/playground/\nWORKDIR /go/src/playground\nRUN go install\n\nFROM debian:stretch\n\nRUN apt-get update && apt-get install -y git ca-certificates --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=build /usr/local/go /usr/local/go\nCOPY --from=nacl /tmp/sel_ldr_x86_64 /usr/local/bin\n\nENV GOPATH /go\nENV PATH /usr/local/go/bin:$GOPATH/bin:$PATH\n\n# Add and compile tour packages\nRUN GOOS=nacl GOARCH=amd64p32 go get \\\n    golang.org/x/tour/pic \\\n    golang.org/x/tour/reader \\\n    golang.org/x/tour/tree \\\n    golang.org/x/tour/wc \\\n    golang.org/x/talks/content/2016/applicative/google && \\\n    rm -rf $GOPATH/src/golang.org/x/tour/.git && \\\n    rm -rf $GOPATH/src/golang.org/x/talks/.git\n\n# Add tour packages under their old import paths (so old snippets still work)\nRUN mkdir -p $GOPATH/src/code.google.com/p/go-tour && \\\n    cp -R $GOPATH/src/golang.org/x/tour/* $GOPATH/src/code.google.com/p/go-tour/ && \\\n    sed -i 's_// import_// public import_' $(find $GOPATH/src/code.google.com/p/go-tour/ -name *.go) && \\\n    go install \\\n    code.google.com/p/go-tour/pic \\\n    code.google.com/p/go-tour/reader \\\n    code.google.com/p/go-tour/tree \\\n    code.google.com/p/go-tour/wc\n\nRUN mkdir /app\n\nCOPY --from=build /go/bin/playground /app\nCOPY edit.html /app\nCOPY static /app/static\nWORKDIR /app\n\n# Run tests\nRUN /app/playground test\n\n# Whether we allow third-party imports via proxy.golang.org:\nENV ALLOW_PLAY_MODULE_DOWNLOADS true\n\nEXPOSE 8080\nENTRYPOINT [\"/app/playground\"]\n"
}