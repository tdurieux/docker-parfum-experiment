{
  "startTime": 1674242250489,
  "endTime": 1674242250790,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 1,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 17,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nLABEL maintainer=\"Michael Mayer <michael@liquidbytes.net>\"\n\nARG BUILD_TAG\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Configure apt-get\nRUN echo 'Acquire::Retries \"10\";' > /etc/apt/apt.conf.d/80retry\nRUN echo 'APT::Install-Recommends \"false\";' > /etc/apt/apt.conf.d/80recommends\nRUN echo 'APT::Install-Suggests \"false\";' > /etc/apt/apt.conf.d/80suggests\nRUN echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/80forceyes\nRUN echo 'APT::Get::Fix-Missing \"true\";' > /etc/apt/apt.conf.d/80fixmissin\n\n# Install dev / build dependencies\nRUN apt-get update && apt-get upgrade && \\\n    apt-get install -y --no-install-recommends \\\n    build-essential \\\n    curl \\\n    chrpath \\\n    libssl-dev \\\n    libxft-dev \\\n    libfreetype6 \\\n    libfreetype6-dev \\\n    libfontconfig1 \\\n    libfontconfig1-dev \\\n    libhdf5-serial-dev \\\n    libpng-dev \\\n    libzmq3-dev \\\n    pkg-config \\\n    software-properties-common \\\n    rsync \\\n    unzip \\\n    zip \\\n    g++ \\\n    gcc \\\n    libc6-dev \\\n    gpg-agent \\\n    apt-utils \\\n    make \\\n    nano \\\n    wget \\\n    git \\\n    mysql-client \\\n    libgtk-3-bin \\\n    tzdata \\\n    gconf-service \\\n    chromium-browser \\\n    firefox \\\n    libheif-examples \\\n    exiftool && rm -rf /var/lib/apt/lists/*;\n\n# Install RAW to JPEG converter\nRUN add-apt-repository ppa:pmjdebruijn/darktable-release && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends darktable && \\\n    apt-get upgrade && \\\n    apt-get dist-upgrade && rm -rf /var/lib/apt/lists/*;\n\n# Install TensorFlow C library\nRUN curl -f -L \\\n   \"https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-1.13.1.tar.gz\" | \\\n   tar -C \"/usr/local\" -xz\nRUN ldconfig\n\n# Show TensorFlow debug log\nENV TF_CPP_MIN_LOG_LEVEL 0\n\n# Install NodeJS\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends nodejs && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install and configure NodeJS Package Manager (npm)\nENV NODE_ENV production\nRUN npm install --unsafe-perm=true --allow-root -g npm testcafe chromedriver && npm cache clean --force;\nRUN npm config set cache ~/.cache/npm\n\n# Install Go\nENV GOLANG_VERSION 1.12.6\nRUN set -eux; \\\n\n\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz\"; \\\n\twget -O go.tgz \"$url\"; \\\n\techo \"dbcf71a3c1ea53b8d54ef1b48c85a39a6c9a935d01fc8291ff2b92028e59913c  *go.tgz\" | sha256sum -c -; \\\n\ttar -C /usr/local -xzf go.tgz; \\\n\trm go.tgz; \\\n\texport PATH=\"/usr/local/go/bin:$PATH\"; \\\n\tgo version\n\n# Configure Go environment\nENV GOPATH /go\nENV GOBIN $GOPATH/bin\nENV PATH $GOBIN:/usr/local/go/bin:$PATH\nENV GO111MODULE on\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\n\n# Download TensorFlow model and test files\nRUN rm -rf /tmp/* && mkdir -p /tmp/photoprism\nRUN wget \"https://dl.photoprism.org/tensorflow/nasnet.zip?${BUILD_TAG}\" -O /tmp/photoprism/nasnet.zip\nRUN wget \"https://dl.photoprism.org/fixtures/testdata.zip?${BUILD_TAG}\" -O /tmp/photoprism/testdata.zip\n\n# Install goimports and richgo (colorizes \"go test\" output)\nRUN env GO111MODULE=off /usr/local/go/bin/go get -u golang.org/x/tools/cmd/goimports\nRUN env GO111MODULE=off /usr/local/go/bin/go get -u github.com/kyoh86/richgo\nRUN echo \"alias go=richgo\" > /root/.bash_aliases\n\n# Configure broadwayd (HTML5 display server)\n# Command: broadwayd -p 8080 -a 0.0.0.0 :5\nENV GDK_BACKEND broadway\nENV BROADWAY_DISPLAY :5\n\n# Set up project directory\nWORKDIR \"/go/src/github.com/photoprism/photoprism\"\n\n# Expose HTTP port plus 4000 for TiDB, 8080 for broadwayd and 9515 for chromedriver\nEXPOSE 80 2342 4000 8080 9515\n\n# Keep container running (services can be started manually using a terminal)\nCMD tail -f /dev/null\n"
}