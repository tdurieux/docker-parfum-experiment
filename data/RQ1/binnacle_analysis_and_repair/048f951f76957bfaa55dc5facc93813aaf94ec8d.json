{
  "startTime": 1674239269421,
  "endTime": 1674239269498,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM openjdk:8u102-jdk\nFROM maven:3.3.9-jdk-8\n\nMAINTAINER \"Marco Molteni <javaee.ch>\"\n\n# set the path JAVA_HOME for maven\nRUN export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64\n\n# install git from debian repositories\nRUN apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\n# set the path of the working dir\nCOPY . /usr/src/myapp\nWORKDIR /usr/src/myapp\n\n# install node.js\nRUN curl -f -sL https://deb.nodesource.com/setup_6.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# install tomcat\n#RUN wget http://www.us.apache.org/dist/tomcat/tomcat-8/v8.5.5/bin/apache-tomcat-8.5.5.tar.gz\n#RUN tar xzf ./apache-tomcat-8.5.5.tar.gz\n\n# clone the repository with the code\nRUN git clone git://github.com/marco76/SpringAngular2TypeScript.git\n\n# install npm modules\nWORKDIR /usr/src/myapp/SpringAngular2TypeScript/\nRUN mvn generate-resources package\n\nRUN yes | cp -rf /usr/src/myapp/SpringAngular2TypeScript/server/target/server-0.1.4-SNAPSHOT.war /usr/src/myapp\n\nCMD [\"java\", \"-jar\", \"/usr/src/myapp/server-0.1.4-SNAPSHOT.war\"]\n# tomcat manual config\n#RUN yes | cp -rf /usr/src/myapp/SpringAngular2TypeScript/webClient/target/client-0.1-SNAPSHOT.war /usr/src/myapp/apache-tomcat-8.5.5/webapps/ROOT.war\n#WORKDIR /usr/src/myapp/apache-tomcat-8.5.5/bin\n#RUN catalina.sh start &\n\n####\n# build with:\n# docker build -t angular2-java-hello-world .\n# run with:\n# docker run --rm -it -p 8080:8080  angular2-java-hello-world java -jar /usr/src/myapp/server-0.1.3-SNAPSHOT.war"
}