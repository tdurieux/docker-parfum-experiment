{
  "startTime": 1674248690799,
  "endTime": 1674248690947,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 2,
        "columnEnd": 21
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM  alpine:3.9\nLABEL maintainer=\"James Turk <james@openstates.org>\"\n\nENV PYTHONIOENCODING 'utf-8'\nENV LANG 'en_US.UTF-8'\nENV PUPA_ENV /opt/openstates/venv-pupa/\n\nADD . /opt/openstates/openstates\n\nRUN apk add --no-cache --virtual .build-dependencies \\\n    wget \\\n    build-base \\\n    autoconf \\\n    automake \\\n    libtool && \\\n  apk add --no-cache \\\n    git \\\n    curl \\\n    unzip \\\n    gcc \\\n    glib \\\n    glib-dev \\\n    libressl-dev \\\n    libffi-dev \\\n    freetds-dev \\\n    python3 \\\n    python3-dev \\\n    py-virtualenv \\\n    libxml2-dev \\\n    libxslt-dev \\\n    yaml-dev \\\n    poppler-utils \\\n    postgresql-dev \\\n    postgresql-client \\\n    mariadb \\\n    mariadb-dev \\\n    mariadb-client && \\\n  apk add --no-cache \\\n    --repository http://dl-cdn.alpinelinux.org/alpine/edge/main \\\n    libcrypto1.1 && \\\n  apk add --no-cache \\\n    --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing \\\n    gdal-dev \\\n    geos-dev && \\\n  pip3 install --no-cache-dir awscli && \\\n  cd /tmp && \\\n    wget \"https://github.com/brianb/mdbtools/archive/0.7.1.zip\" && \\\n    unzip 0.7.1.zip && rm 0.7.1.zip && \\\n    cd mdbtools-0.7.1 && \\\n    autoreconf -i -f && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-man && make && make install && \\\n    cd /tmp && \\\n    rm -rf mdbtools-0.7.1 && \\\n  virtualenv -p $(which python3) /opt/openstates/venv-pupa/ && \\\n    /opt/openstates/venv-pupa/bin/pip install -e git+https://github.com/opencivicdata/python-opencivicdata-django.git#egg=opencivicdata && \\\n    /opt/openstates/venv-pupa/bin/pip install -e git+https://github.com/opencivicdata/pupa.git#egg=pupa && \\\n    /opt/openstates/venv-pupa/bin/pip install -r /opt/openstates/openstates/requirements.txt && \\\n  apk del .build-dependencies\n\nWORKDIR /opt/openstates/openstates/\nENTRYPOINT [\"/opt/openstates/openstates/pupa-scrape.sh\"]\n"
}