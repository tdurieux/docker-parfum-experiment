{
  "startTime": 1674243979165,
  "endTime": 1674243979424,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 15,
        "columnStart": 18,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\n\nRUN apk update && apk add --no-cache \\\n  bash \\\n  python3 \\\n\tpython3-dev \\\n\tgcc \\\n\tbuild-base \\\n\tlinux-headers \\\n\tpcre-dev \\\n\tnodejs \\\n\tmusl-dev \\\n\tlibxml2-dev \\\n\tlibxslt-dev \\\n\tcurl \\\n\tsupervisor && \\\n\tpython3 -m ensurepip && \\\n    rm -r /usr/lib/python*/ensurepip && \\\n    pip3 install --no-cache-dir --upgrade pip setuptools && \\\n    rm -r /root/.cache && \\\n    pip3 install --no-cache-dir --upgrade pip setuptools && \\\n    rm -r /root/.cache\n\n# install uwsgi and create react app before any further changes, since these take a while\nRUN pip3 install --no-cache-dir uwsgi\n\nENV APP_SERVICE_ROOT_DIR=/home/base/\nENV DJANGO_PROJECT_NAME=sampledjangoproject\n\n#  npx create-react-app $APP_SERVICE_ROOT_DIR/frontend\n# copy requirements.txt file in the directory containing this\n# Dockerfile (on host machine) to $APP_SERVICE_ROOT_DIR/ in the container's file system\n# and install its contents\nCOPY requirements.txt $APP_SERVICE_ROOT_DIR/\n# and then run pip install BEFORE adding the rest of your code\n# this will prevent Docker's caching mechanism from re-installing (all your)\n# dependencies when you make small changes to you requirements.txt file\nRUN pip3 install --no-cache-dir -r $APP_SERVICE_ROOT_DIR/requirements.txt\n\nWORKDIR $APP_SERVICE_ROOT_DIR/\n# copy all files in the directory containing this Dockerfile (on host machine)\n# to $APP_SERVICE_ROOT_DIR/ in the container's file system\n\nCOPY . $APP_SERVICE_ROOT_DIR/\n\n# the `startproject` command below is to check that the\n# default django page show up on first run, confirming it works\n# Normally, you would copy your django project folder\n#into $APP_SERVICE_ROOT_DIR/ (in container)\n#RUN django-admin.py startproject djangoprojectname .\n# uncomment the copy command above^ if\n# you don't already have a django project ready\n\nRUN DJANGO_ENV=development python3 $APP_SERVICE_ROOT_DIR/backend/manage.py migrate\n# start uwsgi\nENTRYPOINT uwsgi --master --ini $APP_SERVICE_ROOT_DIR/uwsgi.ini\n"
}