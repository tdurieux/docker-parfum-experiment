{
  "startTime": 1674244521710,
  "endTime": 1674244521998,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\n\nMAINTAINER niuyuxian <\"ncc0706@gmail.com\">\n\nENV LANGUAGE=C.UTF-8 LC_ALL=C.UTF-8 LANG=C.UTF-8\n\nRUN echo \"@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n\t&& apk update && apk upgrade \\\n\t&& apk add --no-cache tini python3 libstdc++ openblas freetype wget ca-certificates \\\n\t&& python3 -m ensurepip && rm -r /usr/lib/python*/ensurepip \\\n\t&& pip3 install --no-cache-dir --upgrade pip setuptools \\\n\t&& apk add --no-cache --virtual .build-deps@testing python3-dev make cmake clang clang-dev g++ linux-headers libtbb@testing libtbb-dev@testing openblas-dev freetype-dev \\\n\t&& export CC=/usr/bin/clang CXX=/usr/bin/clang++ \\\n\t&& ln -s /usr/include/locale.h /usr/include/xlocale.h \\\n\t&& mkdir -p /opt/tmp && cd /opt/tmp \\\n\t&& pip3 download -d /opt/tmp numpy \\\n\t&& unzip -q numpy*.zip \\\n\t&& cd numpy* && echo \"Building numpy...\" \\\n\t&& echo -e \"[ALL]\\nlibrary_dirs = /usr/lib\\ninclude_dirs = /usr/include\\n[atlas]\\natlas_libs = openblas\\nlibraries = openblas\\n[openblas]\\nlibraries = openblas\\nlibrary_dirs = /usr/lib\\ninclude_dirs = /usr/include\\n\" > site.cfg \\\n\t&& python3 setup.py build -j 4 install & > /dev/null && echo \"Successfully installed numpy\" \\\n\t&& cd /opt/tmp \\\n\t&& echo \"Downloading opencv\" && wget --quiet https://github.com/opencv/opencv/archive/3.4.0.zip \\\n\t&& unzip -q 3.4.0.zip \\\n\t&& cd opencv* \\\n\t&& mkdir build && cd build && echo \"Building opencv...\" \\\n\t&& cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n\t\t-D CMAKE_INSTALL_PREFIX=/usr \\\n\t\t-D INSTALL_C_EXAMPLES=OFF \\\n\t\t-D INSTALL_PYTHON_EXAMPLES=OFF \\\n\t\t-D WITH_FFMPEG=NO \\\n\t\t-D WITH_IPP=NO \\\n\t\t-D WITH_OPENEXR=NO \\\n\t\t-D WITH_WEBP=NO \\\n\t\t-D WITH_TIFF=NO \\\n\t\t-D WITH_JASPER=NO \\\n\t\t-D BUILD_EXAMPLES=OFF \\\n\t\t-D BUILD_PERF_TESTS=NO \\\n\t\t-D BUILD_TESTS=NO .. & > /dev/null \\\n\t&& make & > /dev/null && make install & > /dev/null && echo \"Successfully installed opencv\" \\\n\t&& pip3 install --no-cache-dir --upgrade matplotlib jupyter ipywidgets \\\n\t&& jupyter nbextension enable --py widgetsnbextension \\\n\t&& echo \"c.NotebookApp.token = ''\" > /root/.jupyter/jupyter_notebook_config.py \\\n\t&& cd /opt && rm -r /opt/tmp && mkdir -p /opt/notebook \\\n\t&& unset CC CXX \\\n\t&& apk del .build-deps \\\n\t&& rm -r /root/.cache \\\n\t&& find /usr/lib/python3.6/ -type d -name tests -depth -exec rm -rf {} \\; \\\n\t&& find /usr/lib/python3.6/ -type d -name test -depth -exec rm -rf {} \\; \\\n\t&& find /usr/lib/python3.6/ -name __pycache__ -depth -exec rm -rf {} \\;\n\nEXPOSE 8888\nWORKDIR /opt/notebook\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [\"jupyter\", \"notebook\", \"--ip=0.0.0.0\", \"--port=8888\", \"--no-browser\", \"--allow-root\"]"
}