{
  "startTime": 1674241402106,
  "endTime": 1674241402193,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## docker-coreos-build-kernel-module\n\n### A docker image for building CoreOS kernel modules\n\nFROM ubuntu:14.04\nMAINTAINER Ian Blenke <ian@blenke.com>\n\nRUN apt-get update -y\nRUN DEBIAN_FRONTEND=noninteractive gcc-4.7 g++-4.7 wget git make dpkg-dev\n\nRUN update-alternatives --remove gcc /usr/bin/gcc-4.8 && \\\n    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.7 60 --slave /usr/bin/g++ g++ /usr/bin/g++-4.7 && \\\n    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 40 --slave /usr/bin/g++ g++ /usr/bin/g++-4.8 && \\\n    update-alternatives --config gcc\n\nRUN mkdir -p /usr/src/kernels && rm -rf /usr/src/kernels\n\nWORKDIR /usr/src/kernels\n\nRUN git clone https://github.com/coreos/linux.git\n\nENV COREOS_VERSION $(uname -r | sed -e 's/+$//')\n\nWORKDIR /usr/src/kernels/linux\n\nRUN git checkout remotes/origin/coreos/v$COREOS_VERSION\n\nRUN zcat /proc/config.gz > .config\n\nRUN make modules_prepare\n\nRUN sed -i -e \"s/$COREOS_VERSION/$(uname -r)/\" include/generated/utsrelease.h\n\nWORKDIR /usr/src\n\n# From here you would pull down your kernel source and build it relative to the linux kernel source tree prepared in /usr/src/kernels/linux\n\nCMD /bin/bash -li\n"
}