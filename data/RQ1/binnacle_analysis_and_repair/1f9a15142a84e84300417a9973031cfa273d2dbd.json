{
  "startTime": 1674243222031,
  "endTime": 1674243222337,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 14,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for building Ansible image for Alpine 3, with as few additional software as possible.\n#\n# @see https://github.com/gliderlabs/docker-alpine/blob/master/docs/usage.md\n#\n# Version  1.0\n#\n\n\n# pull base image\nFROM alpine:3.8\n\nMAINTAINER William Yeh <william.pjyeh@gmail.com>\n\n\nRUN echo \"===> Installing sudo to emulate normal OS behavior...\"  && \\\n    apk --update add sudo                                         && \\\n    \\\n    \\\n    echo \"===> Adding Python runtime...\"  && \\\n    apk --update add python py-pip openssl ca-certificates    && \\\n    apk --update add --virtual build-dependencies \\\n                python-dev libffi-dev openssl-dev build-base && \\\n    pip install --no-cache-dir --upgrade pip pycrypto cffi && \\\n\n\n    echo \"===> Installing Ansible...\" && \\\n    pip install --no-cache-dir ansible && \\\n\n\n    echo \"===> Removing package list...\" && \\\n    apk del build-dependencies && \\\n    rm -rf /var/cache/apk/* && \\\n\n\n    echo \"===> Adding hosts for convenience...\" && \\\n    mkdir -p /etc/ansible && \\\n    echo 'localhost' > /etc/ansible/hosts\n\n\nCOPY ansible-playbook-wrapper /usr/local/bin/\n\n \\\nRUN echo \"===> Updating TLS certificates...\" && \\\n              apk --update --no-cache add openssl ca-certificatesONBUILD\n\n\nONBUILD  WORKDIR  /tmp\nONBUILD  COPY  .  /tmp\nONBUILD  RUN  \\\n              echo \"===> Diagnosis: host information...\"  && \\\n              ansible -c local -m setup all\n\n\n\n# default command: display Ansible version\nCMD [ \"ansible-playbook\", \"--version\" ]\n"
}