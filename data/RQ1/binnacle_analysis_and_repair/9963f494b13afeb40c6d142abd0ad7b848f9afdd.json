{
  "startTime": 1674240413667,
  "endTime": 1674240413772,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 \nARG BUILD_DIR=/build \n\n# Basic packages needed to download dependencies and unpack them. \nRUN apt-get update && apt-get install --no-install-recommends -y \\\nbzip2 \\\nperl \\\ntar \\\nwget \\\nxz-utils \\\n&& rm -rf /var/lib/apt/lists/*\n\n# Install packages necessary for compilation. \nRUN apt-get update && apt-get install --no-install-recommends -y \\\nautoconf \\\nautomake \\\ngit \\\nbash \\\nbuild-essential \\\ncmake \\\ncurl \\\ngawk \\\nlibtool \\\nlsb-release \\\npkg-config \\\nsudo \\\ntar \\\ntexi2html \\\nyasm \\\nxutils-dev \\\nmusl \\\nmusl-tools \\\n&& rm -rf /var/lib/apt/lists/*\n\n# Copy the build scripts. \nCOPY build.sh download.pl env.source fetchurl $BUILD_DIR/ \n\n# Build all dependencies \nRUN cd $BUILD_DIR && ./build.sh -j6 \n\n# Setup rust \nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable \\  \n&& /root/.cargo/bin/rustup target add x86_64-unknown-linux-musl \n\n# OpenSSL compilation variables (for rust) \nENV OPENSSL_DIR=$BUILD_DIR/target \\  \nOPENSSL_INCLUDE_DIR=$BUILD_DIR/target/include/ \\  \nDEP_OPENSSL_INCLUDE=$BUILD_DIR/target/include/ \\  \nOPENSSL_LIB_DIR=$BUILD_DIR/target/lib/ \\  \nOPENSSL_STATIC=1 \n# FFmpeg compilation variables (for rust) \nENV FFMPEG_DIR=$BUILD_DIR/target \n\n# Cleanup stuff \nRUN rm -rf $BUILD_DIR/dep \nRUN rm -rf $BUILD_DIR/bin \nRUN rm -rf $BUILD_DIR/dl \n\n# Copy the kawa build script \nCOPY build-kawa.sh $BUILD_DIR/ \n\nCMD cd $BUILD_DIR; /bin/bash \n\n"
}