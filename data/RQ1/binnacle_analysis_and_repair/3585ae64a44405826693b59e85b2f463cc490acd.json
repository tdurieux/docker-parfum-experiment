{
  "startTime": 1674250608774,
  "endTime": 1674250609040,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 23,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 122,
        "lineEnd": 123,
        "columnStart": 1,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 56,
        "columnStart": 8,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER Fernando Andreotti <fernando.andreotti@eng.ox.ac.uk>\n\n# Versions used for some packages\nARG CONDA_VERSION=4.3.1\nARG CONDA_ENV\nARG TENSORFLOW_VERSION=1.0*\nARG KERAS_VERSION=2.0.2\nARG PYTHON_VERSION=3.5\n\nENTRYPOINT [\"/bin/bash\", \"-c\" ]\n\nUSER root\n\n# Install some dependencies\nENV DEBIAN_FRONTEND noninteractive\nENV CONDA_ENV_PATH /opt/miniconda\nENV MYCONDA_ENV \"deeplearn\"\nENV CONDA_ACTIVATE \"source $CONDA_ENV_PATH/bin/activate $MYCONDA_ENV\"\n\nRUN apt-get update --fix-missing -qq \\\n     && apt-get install --no-install-recommends -y \\\n\t\tautoconf \\\n\t\tautomake \\  \n\t\tbc \\\n\t\tbuild-essential \\\n\t\tbzip2 \\\n\t\tcmake \\\n\t\tcurl \\\n\t\tg++ \\\n\t\tgfortran \\\n\t\tgit \\\n\t\tlanguage-pack-en \\\n\t\tlibatlas-dev \\\n\t\tlibatlas3gf-base \\\n\t\tlibcurl4-openssl-dev \\ \n\t\tlibffi-dev \\\n\t\tlibfreetype6-dev \\\n\t\tlibglib2.0-0 \\   \n\t\tlibhdf5-dev \\\n\t\tliblcms2-dev \\\n\t\tlibopenblas-dev \\\t\t\n\t\tlibssl-dev \\\n\t\tlibtiff5-dev \\\n\t\tlibtool \\\n\t\tlibwebp-dev \\\n\t\tlibzmq3-dev \\\n\t\tmake \\\n\t\tnano \\\n\t\tpkg-config \\\n\t\tsoftware-properties-common \\\n\t\tunzip \\\n\t\twget \\\n\t\tzlib1g-dev \\\n\t\tqt5-default \\\n\t\tlibvtk6-dev \\\n\t\tzlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install miniconda to /opt/miniconda\nRUN curl -f -LO http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh\nRUN /bin/bash Miniconda-latest-Linux-x86_64.sh -p $CONDA_ENV_PATH -b\nRUN rm Miniconda-latest-Linux-x86_64.sh\nENV PATH=$CONDA_ENV_PATH/bin:${PATH}\nRUN conda update --quiet --yes conda\n\nENV PATH ${CONDA_ENV_PATH}/bin:$PATH\n\n# Creating Anaconda environment\nRUN conda create -y --name $MYCONDA_ENV python=${PYTHON_VERSION}\n\n# Install Python 3 packages\n\nRUN conda install -c conda-forge -y -n $MYCONDA_ENV\\\n     'beautifulsoup4=4.5*' \\\n    'hdf5=1.8.17' \\\n    'h5py=2.7*' \\\n    'ipython=5.1*' \\\t\n    'ipykernel=4.5*' \\\n    'ipywidgets=5.2*' \\\n    'jupyter=1.0*' \\\n    'lxml=3.8*' \\\n    'matplotlib=2.0*' \\\n    'notebook=4.3*' \\\n    'numpy=1.12*' \\\n    'pandas=0.20*' \\\n    'pillow=4.2*' \\\n    'pip=9.0*' \\\n    'python=3.5*' \\\n    'rpy2=2.8*'  \\\n    'scipy=0.19*' \\\n    'scikit-learn=0.19*' \\\n    'scikit-image=0.13*' \\\n    'setuptools=36.3*' \\\n    'six=1.10*' \\\n    'sphinx=1.5*' \\\n    'spyder=3.1*'  && \\\n    conda clean -tipsy\n\n# Some R dependencies\nRUN conda install -c conda-forge -n $MYCONDA_ENV r-r.utils r-lme4 r-nlme\n\n# Install TensorFlow\nRUN conda install -c conda-forge -n $MYCONDA_ENV tensorflow=${TENSORFLOW_VERSION}\n\n\n# Install Keras\nENV KERAS_BACKEND=tensorflow\nRUN conda install -c conda-forge -n $MYCONDA_ENV keras=${KERAS_VERSION}\n\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\nRUN conda info --envs\nRUN sed -i 's/theano/tensorflow/g' ${CONDA_ENV_PATH}/envs/${MYCONDA_ENV}/etc/conda/activate.d/keras_activate.sh # make tensorflow default\n\n# Visualization tools\nRUN conda install -c conda-forge -y -n $MYCONDA_ENV \\\n\tgraphviz=2.38.0 \\\n\tpydotplus=2.0.2\n\n\n\nRUN $CONDA_ACTIVATE && pip install --no-cache-dir --upgrade pip && \\\n\tpip install --no-cache-dir git+git://github.com/stared/keras-sequential-ascii.git \\\n\tpydot3\n\n####################\n## Running tests ###\n####################\n\nENV HOME /sharedfolder\nWORKDIR /sharedfolder\n\n# Add a notebook profile.\nRUN mkdir -p -m 700 /sharedfolder/.jupyter/ && \\\n\techo \"c.NotebookApp.ip = '*'\" >> /sharedfolder/.jupyter/jupyter_notebook_config.py \\\n\techo \"c.NotebookApp.port = 8888\" >> /sharedfolder/.jupyter/jupyter_notebook_config.py \\\n\techo \"c.NotebookApp.open_browser = False\" >> /sharedfolder/.jupyter/jupyter_notebook_config.py \\\n\techo \"c.MultiKernelManager.default_kernel_name = 'python3'\" >> /sharedfolder/.jupyter/jupyter_notebook_config.py \\\n\techo \"c.NotebookApp.allow_root = True\" >> /sharedfolder/.jupyter/jupyter_notebook_config.py \\\n\techo \"c.NotebookApp.password_required = False\" >> /sharedfolder/.jupyter/jupyter_notebook_config.py \\\n\techo \"c.NotebookApp.token = ''\" >> /sharedfolder/.jupyter/jupyter_notebook_config.py\n\n\n# Expose Ports for TensorBoard (6006), Ipython (8888)\nEXPOSE 6006 8888\n\nCMD [\"source activate deeplearn && /bin/bash\"]\n"
}