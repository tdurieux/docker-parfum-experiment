{
  "startTime": 1674250837051,
  "endTime": 1674250837684,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM phusion/baseimage:0.9.19\n\nARG CONTENTOS_STATIC_BUILD=ON\nENV CONTENTOS_STATIC_BUILD ${CONTENTOS_STATIC_BUILD}\n\nENV LANG=en_US.UTF-8\n\nRUN \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        autoconf \\\n        automake \\\n        autotools-dev \\\n        bsdmainutils \\\n        build-essential \\\n        cmake \\\n        doxygen \\\n        git \\\n        libboost-all-dev \\\n        libreadline-dev \\\n        libssl-dev \\\n        libtool \\\n        ncurses-dev \\\n        pbzip2 \\\n        pkg-config \\\n        python3 \\\n        python3-dev \\\n        python3-jinja2 \\\n        python3-pip \\\n        nginx \\\n        fcgiwrap \\\n        awscli \\\n        jq \\\n        wget \\\n        gdb \\\n    && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    pip3 install --no-cache-dir gcovr\n\nADD . /usr/local/src/contentos\n\nRUN \\\n    cd /usr/local/src/contentos && \\\n    mkdir build && \\\n    cd build && \\\n    cmake \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DBUILD_CONTENTOS_TESTNET=ON \\\n        -DLOW_MEMORY_NODE=OFF \\\n        -DCLEAR_VOTES=ON \\\n        -DSKIP_BY_TX_ID=ON \\\n        .. && \\\n    make -j$(nproc) test_fixed_string && \\\n    ./programs/util/test_fixed_string && \\\n    cd /usr/local/src/contentos && \\\n    doxygen && \\\n#    programs/build_helpers/check_reflect.py && \\\n#    programs/build_helpers/get_config_check.sh && \\\n    rm -rf /usr/local/src/contentos/build\n\nRUN \\\n    cd /usr/local/src/contentos && \\\n    mkdir build && \\\n    cd build && \\\n    cmake \\\n        -DCMAKE_BUILD_TYPE=Debug \\\n        -DENABLE_COVERAGE_TESTING=ON \\\n        -DBUILD_CONTENTOS_TESTNET=ON \\\n        -DLOW_MEMORY_NODE=OFF \\\n        -DCLEAR_VOTES=ON \\\n        -DSKIP_BY_TX_ID=ON \\\n        -DCHAINBASE_CHECK_LOCKING=OFF \\\n        .. && \\\n    mkdir -p /var/cobertura && \\\n    gcovr --object-directory=\"../\" --root=../ --xml-pretty --gcov-exclude=\".*tests.*\" --gcov-exclude=\".*fc.*\" --gcov-exclude=\".*app*\" --gcov-exclude=\".*net*\" --gcov-exclude=\".*plugins*\" --gcov-exclude=\".*schema*\" --gcov-exclude=\".*time*\" --gcov-exclude=\".*utilities*\" --gcov-exclude=\".*wallet*\" --gcov-exclude=\".*programs*\" --output=\"/var/cobertura/coverage.xml\" && \\\n    cd /usr/local/src/contentos && \\\n    rm -rf /usr/local/src/contentos/build\n\nRUN \\\n    cd /usr/local/src/contentos && \\\n    mkdir build && \\\n    cd build && \\\n    cmake \\\n        -DCMAKE_INSTALL_PREFIX=/usr/local/contentosd-default \\\n        -DCMAKE_BUILD_TYPE=Release \\\n#        -DLOW_MEMORY_NODE=ON \\\n#        -DCLEAR_VOTES=ON \\\n#        -DSKIP_BY_TX_ID=OFF \\\n        -DBUILD_CONTENTOS_TESTNET=OFF \\\n        -DCONTENTOS_STATIC_BUILD=${CONTENTOS_STATIC_BUILD} \\\n        .. \\\n    && \\\n    make -j$(nproc) && \\\n    make install && \\\n    cd .. && \\\n    ( /usr/local/contentosd-default/bin/contentosd --version \\\n      | grep -o '[0-9]*\\.[0-9]*\\.[0-9]*' \\\n      && echo '_' \\\n      && git rev-parse --short HEAD ) \\\n      | sed -e ':a' -e 'N' -e '$!ba' -e 's/\\n//g' \\\n      > /etc/contentosdversion && \\\n    cat /etc/contentosdversion && \\\n    rm -rfv build && \\\n    mkdir build && \\\n    cd build && \\\n    cmake \\\n        -DCMAKE_INSTALL_PREFIX=/usr/local/contentosd-full \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DLOW_MEMORY_NODE=OFF \\\n        -DCLEAR_VOTES=OFF \\\n        -DSKIP_BY_TX_ID=ON \\\n        -DBUILD_CONTENTOS_TESTNET=OFF \\\n        -DCONTENTOS_STATIC_BUILD=${CONTENTOS_STATIC_BUILD} \\\n        .. \\\n    && \\\n    make -j$(nproc) && \\\n    make install && \\\n    rm -rf /usr/local/src/contentos\n\nRUN \\\n    apt-get remove -y \\\n        automake \\\n        autotools-dev \\\n        bsdmainutils \\\n        build-essential \\\n        cmake \\\n        doxygen \\\n        dpkg-dev \\\n        git \\\n        libboost-all-dev \\\n        libc6-dev \\\n        libexpat1-dev \\\n        libgcc-5-dev \\\n        libhwloc-dev \\\n        libibverbs-dev \\\n        libicu-dev \\\n        libltdl-dev \\\n        libncurses5-dev \\\n        libnuma-dev \\\n        libopenmpi-dev \\\n        libpython-dev \\\n        libpython2.7-dev \\\n        libreadline-dev \\\n        libreadline6-dev \\\n        libssl-dev \\\n        libstdc++-5-dev \\\n        libtinfo-dev \\\n        libtool \\\n        linux-libc-dev \\\n        m4 \\\n        make \\\n        manpages \\\n        manpages-dev \\\n        mpi-default-dev \\\n        python-dev \\\n        python2.7-dev \\\n        python3-dev \\\n    && \\\n    apt-get autoremove -y && \\\n    rm -rf \\\n        /var/lib/apt/lists/* \\\n        /tmp/* \\\n        /var/tmp/* \\\n        /var/cache/* \\\n        /usr/include \\\n        /usr/local/include\n\nRUN useradd -s /bin/bash -m -d /var/lib/contentosd contentosd\n\nRUN mkdir /var/cache/contentosd && \\\n    chown contentosd:contentosd -R /var/cache/contentosd\n\nENV HOME /var/lib/contentosd\nRUN chown contentosd:contentosd -R /var/lib/contentosd\n\nVOLUME [\"/var/lib/contentosd\"]\n\n# rpc service:\nEXPOSE 8090\n# p2p service:\nEXPOSE 2001\n\n# add seednodes from documentation to image\nADD doc/seednodes.txt /etc/contentosd/seednodes.txt\n\n# the following adds lots of logging info to stdout\nADD contrib/config-for-docker.ini /etc/contentosd/config.ini\nADD contrib/fullnode.config.ini /etc/contentosd/fullnode.config.ini\nADD contrib/config-for-broadcaster.ini /etc/contentosd/config-for-broadcaster.ini\nADD contrib/config-for-ahnode.ini /etc/contentosd/config-for-ahnode.ini\n\n# add normal startup script that starts via sv\nADD contrib/contentosd.run /usr/local/bin/contentos-sv-run.sh\nRUN chmod +x /usr/local/bin/contentos-sv-run.sh\n\n# add nginx templates\nADD contrib/contentosd.nginx.conf /etc/nginx/contentosd.nginx.conf\nADD contrib/healthcheck.conf.template /etc/nginx/healthcheck.conf.template\n\n# add PaaS startup script and service script\nADD contrib/startpaascontentosd.sh /usr/local/bin/startpaascontentosd.sh\nADD contrib/paas-sv-run.sh /usr/local/bin/paas-sv-run.sh\nADD contrib/sync-sv-run.sh /usr/local/bin/sync-sv-run.sh\nADD contrib/healthcheck.sh /usr/local/bin/healthcheck.sh\nRUN chmod +x /usr/local/bin/startpaascontentosd.sh\nRUN chmod +x /usr/local/bin/paas-sv-run.sh\nRUN chmod +x /usr/local/bin/sync-sv-run.sh\nRUN chmod +x /usr/local/bin/healthcheck.sh\n\n# new entrypoint for all instances\n# this enables exitting of the container when the writer node dies\n# for PaaS mode (elasticbeanstalk, etc)\n# AWS EB Docker requires a non-daemonized entrypoint\nADD contrib/contentosdentrypoint.sh /usr/local/bin/contentosdentrypoint.sh\nRUN chmod +x /usr/local/bin/contentosdentrypoint.sh\nCMD /usr/local/bin/contentosdentrypoint.sh\n"
}