{
  "startTime": 1674248406798,
  "endTime": 1674248406956,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 0,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 0,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie \n\nRUN set -x && \\  \nUSR='usr' && \\  \nPYVERS='3.5.2' && \\  \napt-get update && \\\n# This is basically the list from \n# https://github.com/yyuu/pyenv/wiki/Common-build-problems \napt-get install --no-install-recommends -y make build-essential libssl-dev zlib1g-dev libbz2-dev \\\nlibreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev \\\nlibncursesw5-dev xz-utils git sudo && \\\n\n# Create non-root user  \nuseradd -m -s /bin/bash -G sudo,users ${USR} && \\\npasswd -d ${USR} && \\\n\n# Install pyenv and pyenv-virtualenv  \ngit clone https://github.com/yyuu/pyenv.git /home/${USR}/.pyenv && \\\ngit clone https://github.com/yyuu/pyenv-virtualenv.git \\  \n/home/${USR}/.pyenv/plugins/pyenv-virtualenv && \\\n\n# Build python with pyenv  \n/home/${USR}/.pyenv/plugins/python-build/bin/python-build \\  \n-v ${PYVERS} /home/${USR}/.pyenv/versions/${PYVERS} && \\\n\n# Create a file of the pyenv init commands  \necho 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> pyenvinit && \\\necho 'export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> pyenvinit && \\\necho 'eval \"$(pyenv init -)\"' >> pyenvinit && \\\necho 'eval \"$(pyenv virtualenv-init -)\"' >> pyenvinit && \\\n\n# Configure bash and zsh (in case it is installed later) for pyenv  \ncat pyenvinit >> /home/${USR}/.bashrc && \\\ncat pyenvinit >> /home/${USR}/.zshenv && \\\nrm pyenvinit && \\\n\n# Set the user's global version to the python we just built  \necho \"$PYVERS\" > /home/${USR}/.pyenv/version && \\\n\n# Correct the owner and group of all the files root created for the user  \nchown -R ${USR} /home/${USR} && \\\nchgrp -R ${USR} /home/${USR} && \\\n\n# Remove build tools to save a bunch of space  \napt-get autoremove -y build-essential llvm && rm -rf /var/lib/apt/lists/*;\n\n\nWORKDIR /home/usr \n\nUSER usr \n\nENTRYPOINT [\"/bin/bash\"] \n\n"
}