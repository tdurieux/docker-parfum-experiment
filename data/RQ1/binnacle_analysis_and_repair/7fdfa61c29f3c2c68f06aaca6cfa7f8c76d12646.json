{
  "startTime": 1674246296547,
  "endTime": 1674246296954,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 190,
        "columnEnd": 248
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 33,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 60,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 20,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 286,
        "columnEnd": 321
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# References:\n# https://docs.docker.com/engine/reference/builder/\n\nFROM ubuntu:artful\n\n#############\n#  apt-get  #\n#############\n# Install openssh-server and set up server keys first to minimize the chance to invalidate\n# the cache and regenerate server keys.\nRUN apt-get update && apt-get install --no-install-recommends -y openssh-server && rm -rf /var/lib/apt/lists/*\n\n# Install other apt-packages.\n# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#run\n# software-properties-common is required for add-apt-repository.\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  zip unzip curl wget screen emacs git zsh rsyslog \\\n  python python-pip gcc clang openjdk-8-jdk rustc \\\n  apt-transport-https ca-certificates curl software-properties-common lsb-release \\\n  libzmq3-dev \\\n  && rm -rf /var/lib/apt/lists/*\n\n# https://github.com/golang/go/wiki/Ubuntu\nRUN add-apt-repository ppa:gophers/archive && apt update && apt-get install --no-install-recommends golang-1.9-go -y && rm -rf /var/lib/apt/lists/*\n\n# Install Python ML libraries.\n# Note: Use scikit-learn, not sklearn.\nRUN pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -U numpy scipy matplotlib pandas scikit-learn jupyter tensorflow\n\n# Install docker-ce for ubuntu\n# https://docs.docker.com/engine/installation/linux/ubuntu/\n# As of 2017-12, we need to use edge channel to install Docker in ubuntu:artful.\nRUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - &&\\\n  add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) edge\" &&\\\n  apt-get update && apt-get install --no-install-recommends -y docker-ce && rm -rf /var/lib/apt/lists/*\n\n# Install gcloud (https://cloud.google.com/sdk/downloads#apt-get)\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" && echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && apt-get update && apt-get install --no-install-recommends -y google-cloud-sdk && rm -rf /var/lib/apt/lists/*\n\n# https://docs.docker.com/engine/reference/builder/#arg\n# Do not move this to the head of Dockerfile because\n# the definition of ARG causes cache-miss in following RUN commands\n# regardless of whether they refer an arg or not.\nARG user=yunabe\n\n# The guidline recommends us to execute commands in non-root.\n# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#user\n#\n# You should not change the owner of the home dir or set USER before COPY operations\n# because COPY ignores USER (https://github.com/docker/docker/issues/6119).\nRUN groupadd -r developer && useradd -r -g developer $user\nRUN chsh -s /bin/zsh $user\nRUN mkdir -p /home/$user\nWORKDIR /home/$user\n\n# Allow the user to run docker.\n# See https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface\nRUN gpasswd -a $user docker\n\n# Set up .ssh keys\nCOPY _ssh .ssh\nRUN chmod 700 .ssh\n\n# Copy dot files in local_config then remove local_config/README.md.\nCOPY local_config/* ./\nRUN rm README.md\nCOPY Cask ./.emacs.d/Cask\n\n# Finally, change the owner of the home dir and set USER.\nRUN chown -R $user:developer /home/$user\nUSER $user\n\n# Set up public dot files as $user.\nRUN git clone git@github.com:yunabe/linux-user-config.git config && ./config/setup.sh\nRUN curl -fsSL https://raw.githubusercontent.com/cask/cask/master/go | python\nRUN cd .emacs.d && $HOME/.cask/bin/cask install\n\n# Misc as the user\nRUN mkdir -p src && cd src && git clone git@github.com:yunabe/codelab.git && git clone git@github.com:yunabe/lgo-binder\nRUN mkdir -p local/gocode/src/github.com/yunabe && cd local/gocode/src/github.com/yunabe &&\\\n  git clone git@github.com:yunabe/gae-codelab.git &&\\\n  git clone git@github.com:yunabe/lgo &&\\\n  git clone git@github.com:yunabe/easycsv\nRUN go get -u golang.org/x/tools/cmd/gorename github.com/nsf/gocode github.com/nfnt/resize github.com/yunabe/lgo/cmd/lgo &&\\\n  go get -d github.com/yunabe/lgo/cmd/lgo-internal\n\nUSER root\n# Add additional setup as root with minimum cache invalidation.\n\n# Apply root_config.patch to rewrite root configurations.\nCOPY root_config.patch /root_config.patch\nRUN cd / && patch -p0 < /root_config.patch && rm -f /root_config.patch\n\n# Run services as root and sleep.\n# - ssh: ssh server\n# - rsyslog: Record /var/log/auth.log from sshd.\nCMD service ssh start && service rsyslog start && service docker start && sleep infinity\n"
}