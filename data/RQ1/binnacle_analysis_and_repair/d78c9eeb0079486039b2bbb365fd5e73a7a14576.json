{
  "startTime": 1674235294973,
  "endTime": 1674235295039,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM elixir:1.3-slim\n\n# ENV MIX_ENV prod\n\nRUN addgroup --gid 60000 cogbot && \\\n    adduser --home /home/cogbot --uid 60000 --gid 60000 --gecos cogbot \\\n        --shell /bin/bash --disabled-password cogbot\n\n# Create directories and upload cog source\nWORKDIR /home/cogbot/cog\n# Really, we only need the cog directory to be owned by cogbot,\n# because (by default) that's where we write log files. None of the\n# actual scripts or library files need to be owned by cogbot.\nRUN chown -R cogbot /home/cogbot/cog\n\nRUN apt-get update && \\\n    apt-get -yqq --no-install-recommends install build-essential git libexpat1-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    mix do local.hex --force, local.rebar --force\n\nCOPY mix.exs mix.lock /home/cogbot/cog/\nCOPY config/ /home/cogbot/cog/config/\n\nRUN mix do deps.get --no-archives-check, deps.compile\n\nCOPY . /home/cogbot/cog\n\nRUN mix compile --no-deps-check --no-archives-check\n\n# This should be in place in the build environment already\nCOPY cogctl-for-docker-build /usr/local/bin/cogctl\n\nUSER cogbot\n# TODO: For some reason, Hex needs to be present in the cogbot\n# user's home directory for Cog to run (specifically, for it to apply\n# the database migrations at startup). It complains of not being able\n# to build gen_stage, *even though it's already been built!*\nRUN mix local.hex --force\n"
}