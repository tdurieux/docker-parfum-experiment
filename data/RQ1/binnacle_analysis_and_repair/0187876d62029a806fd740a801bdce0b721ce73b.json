{
  "startTime": 1674242318884,
  "endTime": 1674242319191,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# You may want to change the uhp user id inside the container if\n# you're going to mount an external log directory.  The internal uid\n# needs write permissions to the external volume.\n#\n# E.g. to save uhp logs to /var/log/uhp on the host OS, run docker with ...\n#\n# \t-v /var/log/uhp:/opt/uhp/log\n#\n# ... and make sure /var/log/uhp is writable by the uhp uid inside the container.\nARG FOG_UID=903\n\n# Install packages\nRUN apt-get update && apt-get install --no-install-recommends -y git supervisor python3 authbind && rm -rf /var/lib/apt/lists/*;\n\n# What ports should we listen on, and what templates should we run?\nARG LISTENERS=generic-listener:80\n\n# Create the uhp user\nRUN useradd -u ${FOG_UID} -s /bin/false uhp\n\n# Add our honeypot and a supervisord file to start it\nWORKDIR /opt/uhp/\nCOPY uhp.py /opt/uhp/\nCOPY hpfeeds.py /opt/uhp/\nCOPY configs/*.json /opt/uhp/\nCOPY supervisor-template.conf /opt/uhp/\nRUN mkdir -p /opt/uhp/log && \\\n\tchown $FOG_UID /opt/uhp/log && \\\n\techo '0.0.0.0/0:1,1023' > /etc/authbind/byuid/$FOG_UID && \\\n\tfor spec in $LISTENERS; do\\\n\t\tconfig=$(echo $spec | cut -f 1 -d :);\\\n\t\tport=$(echo $spec | cut -f 2 -d :);\\\n\t\tsed -e \"s/PORT/$port/g;s/CONFIG/$config/g\" supervisor-template.conf >> /etc/supervisor/conf.d/uhp.conf;\\\n\tdone\n\nENV PATH=\"/opt/uhp:${PATH}\"\nCMD [\"/usr/bin/supervisord\", \"-n\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n\n# How to build the container:\n#\n# docker build -t uhp --build-arg \"LISTENERS=<config:port> ... [configN:portN]\"\n#\n# E.g.\n# docker build -t uhp --build-arg \"LISTENERS=smtp.json:25 http-log-headers.json:80\" .\n#\n# How to run the container:\n#\n# docker network create --subnet 192.168.2.0/24 honey\n# docker run --rm --name uhp --network honey --ip 192.168.2.5 --link broker uhp\n#\n# To log outside the container:\n#\n# mkdir /var/log/uhp\n# chown 903 /var/log/uhp\n# docker run --rm --name uhp --network honey --ip 192.168.2.5 \\\n#       -v /var/log/uhp:/opt/uhp/log --link broker uhp\n#\n# To run one instance of the uhp instead of letting supervisor manage\n# the daemons:\n#\n# docker run --rm --name uhp --network honey --ip 192.168.2.5 \\\n#       -v /var/log/uhp:/opt/uhp/log uhp \\\n#       uhp.py -f /opt/uhp/log/uhp.json generic-listener.json 8081\n#\n# Use authbind to bind to ports lower than 1024:\n#\n# docker run --rm --name uhp --network honey --ip 192.168.2.5 \\\n#        -v /var/log/uhp:/opt/uhp/log uhp \\\n#       authbind --deep uhp.py -f /opt/uhp/log/uhp.json \\\n#       generic-listener.json 80\n"
}