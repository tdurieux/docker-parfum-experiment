{
  "startTime": 1674244626422,
  "endTime": 1674244626435,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM uetchy/ml:base\n\nRUN pip install --no-cache-dir tensorflow-gpu tensorboard\n\n# RUN apt-get install openjdk-8-jdk -y && \\\n#   echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" >> /etc/apt/sources.list.d/bazel.list && \\\n#   curl https://bazel.build/bazel-release.pub.gpg | apt-key add - && \\\n#   apt-get update && \\\n#   apt-get install bazel -y\n# see https://gist.github.com/PatWie/0c915d5be59a518f934392219ca65c3d\n# and https://github.com/tensorflow/tensorflow/blob/master/configure.py\n# and https://github.com/tensorflow/tensorflow/blob/master/tools/bazel.rc\n# for noninteractive tf build\n# RUN git clone --depth 1 -b r1.7 https://github.com/tensorflow/tensorflow.git /usr/src/tensorflow && \\\n#   cd /usr/src/tensorflow && \\\n#   PYTHON_BIN_PATH=$(which python) \\\n#   PYTHON_LIB_PATH=\"$($PYTHON_BIN_PATH -c 'import site; print(site.getsitepackages()[0])')\" \\\n#   CUDA_TOOLKIT_PATH=/usr/local/cuda \\\n#   CUDNN_INSTALL_PATH=/usr \\\n#   TF_NEED_GCP=0 \\\n#   TF_NEED_CUDA=1 \\\n#   TF_CUDA_VERSION=\"$($CUDA_TOOLKIT_PATH/bin/nvcc --version | sed -n 's/^.*release \\(.*\\),.*/\\1/p')\" \\\n#   TF_CUDA_COMPUTE_CAPABILITIES=6.1,5.2,3.5 \\\n#   TF_NEED_HDFS=0 \\\n#   TF_NEED_OPENCL=0 \\\n#   TF_NEED_JEMALLOC=1 \\\n#   TF_ENABLE_XLA=0 \\\n#   TF_NEED_VERBS=0 \\\n#   TF_CUDA_CLANG=0 \\\n#   TF_CUDNN_VERSION=\"$(sed -n 's/^#define CUDNN_MAJOR\\s*\\(.*\\).*/\\1/p' $CUDNN_INSTALL_PATH/include/cudnn.h)\" \\\n#   TF_NEED_MKL=0 \\\n#   TF_DOWNLOAD_MKL=0 \\\n#   TF_NEED_MPI=0 \\\n#   TF_NEED_OPENCL_SYCL=0 \\\n#   TF_NEED_S3=0 \\\n#   TF_NEED_KAFKA=0 \\\n#   TF_NEED_TENSORRT=0 \\\n#   TF_NEED_GDR=0 \\\n#   TF_SET_ANDROID_WORKSPACE=0 \\\n#   GCC_HOST_COMPILER_PATH=$(which gcc) \\\n#   CC_OPT_FLAGS=\"-march=native\" ./configure && \\\n#   bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package && \\\n#   bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg && \\\n#   pip install /tmp/tensorflow_pkg/tensorflow-1.7.0-cp36-cp36m-linux_x86_64.whl\n# cannot use GPUs within build process, you can also do GPU test manually:\n# python -c 'import tensorflow as tf;sess = tf.Session(config=tf.ConfigProto(log_device_placement=True))'\n\nCOPY runner.sh /workspace/runner.sh\nENTRYPOINT [\"/workspace/runner.sh\"]\n"
}