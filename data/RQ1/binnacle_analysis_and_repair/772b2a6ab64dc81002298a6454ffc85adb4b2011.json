{
  "startTime": 1674245106801,
  "endTime": 1674245106889,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 43,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile with Alpine Linux as the container OS\n#\n# This is intended for prodution and network/storage sensitive environments,\n# and saves 700+MB per instance. For example, in CI/CD alpine downloads,\n# installs and boots much faster than Ubuntu.  Alpine is not great for\n# development or experimentation and is missing many helpful debugging tools\n# (which you can manually install via \"docker exec ...\")\n#\n\n# start with alpine and node\nFROM node:8-alpine\n\n# coreutils provides stdbuf; --update nodejs required to get npm\nRUN apk add --no-cache --virtual .build-dependencies -q --update \\\n    nodejs nodejs-npm postgresql-client maven curl wget git openjdk8 coreutils python bash nss perl\n\n# optional: uncomment if instead you want to get from git...\n#RUN git clone https://github.com/tracyhenry/kyrix > git-clone.out\n\n# copying kyrix source, then working in /root\nRUN mkdir -p /kyrix/compiler /kyrix/back-end /kyrix/front-end\nADD ./front-end /kyrix/front-end/\n\n# setup Kyrix compiler\nADD ./compiler /kyrix/compiler/\nWORKDIR /kyrix/compiler\nRUN rm -fr /kyrix/compiler/node_modules && npm install && npm cache clean --force;\n# workaround.  Note that alpine's sh requires different escapification vs ubuntu\nRUN sed -i 's/\\(.\\+equest\\)/\\/\\/\\1/g' node_modules/d3/build/d3.node.js\n\n# setup backend server - uncomment >/dev/null for debugging\nADD ./back-end /kyrix/back-end/\nWORKDIR /kyrix/back-end\nRUN mvn -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn compile | tee mvn-compile.out >/dev/null 2>&1\nRUN mvn -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn exec:java -Dexec.mainClass=\"main.Main\" -Dexec.args=\"--immediate-shutdown\"\n\nADD ./docker-scripts /kyrix/docker-scripts/\nCOPY docker-scripts/wait-for-postgres docker-scripts/start-kyrix.sh /\nRUN chmod 755 /wait-for-postgres /start-kyrix.sh\n\nEXPOSE 8000\n\n# https://stackoverflow.com/questions/31870222/how-can-i-keep-a-container-running-on-kubernetes\nENTRYPOINT exec /bin/sh -c \"trap : TERM INT; (while true; do sleep 10000; done) & wait\"\n\n# override in kubernetes yaml with something like this\n# ENTRYPOINT sh -c 'sleep 5; PGHOST=${PGHOST} POSTGRES_PASSWORD=${PGPASS} USER_PASSWORD=${KYRIX_PASSWORD} /wait-for-postgres ${PGHOST}:5432 -t 60 -- /start-kyrix.sh'\n\n"
}