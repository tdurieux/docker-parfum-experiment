{
  "startTime": 1674238551922,
  "endTime": 1674238552122,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 50,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 50,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# *******************************************************************************\n# * Copyright 2018 Intel Corporation\n# *\n# * Licensed under the Apache License, Version 2.0 (the \"License\");\n# * you may not use this file except in compliance with the License.\n# * You may obtain a copy of the License at\n# *\n# *     http://www.apache.org/licenses/LICENSE-2.0\n# *\n# * Unless required by applicable law or agreed to in writing, software\n# * distributed under the License is distributed on an \"AS IS\" BASIS,\n# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# * See the License for the specific language governing permissions and\n# * limitations under the License.\n# ********************************************************************************\n\n# Environment to build and run unit tests for ngraph-mxnet on gpu\n# with capabilities for python 2.7 and python 3\n# Author: Lam Nguyen\n\nFROM nvidia/cuda:9.1-cudnn7-devel\n\n# try to get around issue with badsig\nRUN rm /etc/apt/sources.list.d/cuda.list\n\n# removing nvidia-ml.list file to avoid apt-get update error\n# \"The method driver /usr/lib/apt/methods/https could not be found.\"\nRUN rm /etc/apt/sources.list.d/nvidia-ml.list\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y curl apt-transport-https ca-certificates && \\\n    apt-get clean autoclean && \\\n    apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\nRUN curl -f https://developer.download.nvidia.com/compute/cuda/repos/GPGKEY | apt-key add -\n\nENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/cuda/include:${PATH}\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64\n\n#Install MxNet Dependencies:\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential git \\\n        bzip2 wget coreutils libjasper1 libjpeg8 libpng12-0 \\\n        libsox-dev libgtest-dev cpio pandoc curl libtcmalloc-minimal4 \\\n        libssl-dev libffi-dev \\\n        libopencv-dev curl gcc libatlas-base-dev \\\n        python python-pip python-dev \\\n        python3 python3-pip python3-dev \\\n        python-opencv graphviz python-scipy \\\n        python-sklearn libopenblas-dev clang-3.9 \\\n        pciutils \\\n        clang-format-3.9 virtualenv cmake \\\n        sudo && \\\n        apt-get clean autoclean && \\\n        apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade pip\n\nRUN pip install --no-cache-dir numpy\n\n# We include psutil\nRUN pip install --no-cache-dir psutil\n\n# We include pytest\nRUN pip install --no-cache-dir --upgrade pytest\n\n# We include pytest-xdist to speed up the testing\nRUN pip install --no-cache-dir pytest-xdist\n\n# Copy in the run-as-user.sh script\n# This will allow the builds, which are done in a mounted directory, to\n# be run as the user who runs \"docker run\".  This then allows the mounted\n# directory to be properly deleted by the user later (e.g. by jenkins).\nWORKDIR /home\nADD scripts/run-as-user.sh /home/run-as-user.sh\nENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/lib\n\n"
}