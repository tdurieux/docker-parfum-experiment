{
  "startTime": 1674251178715,
  "endTime": 1674251178839,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.5.1\nMAINTAINER Jose Angel Parre√±o <joseangel.parreno@vizzuality.com>\n\nENV NAME climate-watch\n\n# Set application environment\n\n# args from command execution\nARG RAILS_ENV\nENV RAILS_ENV $RAILS_ENV\n\nARG CW_FILES_PREFIX\nENV CW_FILES_PREFIX $CW_FILES_PREFIX\n\nENV RACK_ENV $RAILS_ENV\nENV NODE_ENV $RAILS_ENV\n\nENV ESP_API https://data.emissionspathways.org/api/v1\nENV CW_API /api/v1\nENV GFW_API https://production-api.globalforestwatch.org\nENV S3_BUCKET_NAME wri-sites\n\nENV GOOGLE_ANALYTICS_ID UA-1981881-51\n\nARG FEATURE_AGRICULTURE\nENV FEATURE_AGRICULTURE $FEATURE_AGRICULTURE\n\nARG USER_REPORT_KEY\nENV USER_REPORT_KEY $USER_REPORT_KEY\n\n# Install dependencies\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        postgresql-client \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && curl -f -sL https://deb.nodesource.com/setup_8.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs build-essential patch zlib1g-dev liblzma-dev libicu-dev \\\n    && npm install -g yarn && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nRUN gem install bundler --no-ri --no-rdoc\n\n# Create app directory\nRUN mkdir -p /usr/src/$NAME && rm -rf /usr/src/\nWORKDIR /usr/src/$NAME\n# VOLUME /usr/src/$NAME\n\n# Install and run scheduling\n#RUN gem install whenever\n#RUN whenever --load-file config/schedule.rb\n#RUN whenever --update-crontab\n\n# Install app dependencies\nCOPY Gemfile Gemfile.lock ./\n\nRUN cd /usr/src/$NAME && bundle install --without development test --jobs 4 --deployment\n\n# Env variables\nARG secretKey\nENV SECRET_KEY_BASE $secretKey\n\nARG APPSIGNAL_PUSH_API_KEY\nENV APPSIGNAL_PUSH_API_KEY $APPSIGNAL_PUSH_API_KEY\n\nARG USER_SURVEY_SPREADSHEET_URL\nENV USER_SURVEY_SPREADSHEET_URL $USER_SURVEY_SPREADSHEET_URL\n\n# Bundle app source\nCOPY . ./\n\nEXPOSE 3000\n\n# Rails assets compile\nRUN bundle exec rake assets:precompile\n\n# Start app\nENTRYPOINT [\"./entrypoint.sh\"]\n"
}