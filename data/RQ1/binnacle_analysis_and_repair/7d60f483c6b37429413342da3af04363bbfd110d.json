{
  "startTime": 1674236019890,
  "endTime": 1674236021059,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 17,
        "columnEnd": 85
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 84,
        "columnEnd": 121
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 64,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 2,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial\nMAINTAINER Michael Smith <Michael.smith.erdc@gmail.com>\n\n#Setup user\nARG UID\nARG GID\nARG MRSID_DOWNLOAD_URL\nRUN addgroup --gid $GID msgroup\nRUN adduser --no-create-home --disabled-login msuser  --gecos \"\" --uid $UID --gid $GID\n\nENV LIBKML_DOWNLOAD=install-libkml-r864-64bit.tar.gz\nENV FILEGDBAPI_DOWNLOAD=FileGDB_API_1_2-64.tar.gz\nENV MRSID_DIR=MrSID_DSDK-9.5.4.4703-rhel6.x86-64.gcc482\nENV MRSID_DOWNLOAD=MrSID_DSDK-9.5.4.4703-rhel6.x86-64.gcc482.tar.gz\n\n# Setup build env\nRUN mkdir /build\nRUN apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 16126D3A3E5C1192    \\\n  && apt-get update && apt-get install -y --fix-missing --no-install-recommends software-properties-common \\\n  && add-apt-repository ppa:ubuntugis/ubuntugis-unstable -y    \\\n  && apt-get update && apt-get install -y --fix-missing --no-install-recommends gcc-4.9 g++-4.9  build-essential ca-certificates curl wget git make cmake python-dev \\\n      python-software-properties software-properties-common  libc6-dev openssh-client libpng12-dev libjpeg-dev libgif-dev liblzma-dev libgeos-dev \\\n      libproj-dev libxml2-dev libexpat-dev libxerces-c-dev libnetcdf-dev netcdf-bin libpoppler-dev libspatialite-dev swig  \\\n      libhdf5-serial-dev libpodofo-dev poppler-utils libfreexl-dev libwebp-dev libepsilon-dev libpcre3-dev gfortran libarpack2-dev \\\n      libpq-dev libflann-dev libhdf5-serial-dev libhdf5-dev libjsoncpp-dev clang-3.8  libhdf4-alt-dev libsqlite3-dev    \\\n      libltdl-dev libcurl4-openssl-dev ninja python-pip libpng-dev python-dev libprotobuf-c-dev protobuf-c-compiler\\\n      libboost-filesystem1.58-dev libboost-iostreams1.58-dev libboost-program-options1.58-dev  libboost-system1.58-dev libboost-thread1.58-dev libogdi3.2-dev time \\\n  && apt-get remove --purge -y $BUILD_PACKAGES  && rm -rf /var/lib/apt/lists/*\n\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 20 && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 20\n\nRUN wget --no-verbose https://s3.amazonaws.com/etc-data.koordinates.com/gdal-travisci/${LIBKML_DOWNLOAD} -O /build/${LIBKML_DOWNLOAD} && \\\n tar -C /build -xzf /build/${LIBKML_DOWNLOAD} && \\\n cp -r /build/install-libkml/include/* /usr/local/include && \\\n cp -r /build/install-libkml/lib/* /usr/local/lib \\\n && rm -Rf /build/install-libkml\n\nRUN curl -L ${$MRSID_DOWNLOAD_URL}/${MRSID_DOWNLOAD} -o /build/${MRSID_DOWNLOAD} && \\\n  tar -C /build -xzf /build/${MRSID_DOWNLOAD} && \\\n  cp -r /build/${MRSID_DIR}/Raster_DSDK/include/* /usr/local/include && \\\n  cp -r /build/${MRSID_DIR}/Raster_DSDK/lib/* /usr/local/lib \\\n  && rm -Rf /build/${MRSID_DIR}\n\nRUN wget --no-verbose https://s3.amazonaws.com/etc-data.koordinates.com/gdal-travisci/${FILEGDBAPI_DOWNLOAD} -O /build/${FILEGDBAPI_DOWNLOAD} && \\\n tar -C /build -xzf /build/${FILEGDBAPI_DOWNLOAD} && \\\n cp -r /build/FileGDB_API/include/* /usr/local/include && \\\n cp -r /build/FileGDB_API/lib/* /usr/local/lib \\\n && rm -Rf /build/FileGDB_API\n\nRUN cd /build && curl -f -LO https://github.com/uclouvain/openjpeg/archive/v2.3.0.tar.gz && \\\n  tar -zxf /build/v2.3.0.tar.gz && \\\n  cd /build/openjpeg-2.3.0 && \\\n  mkdir -v build && cd build && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr .. && \\\n  make -j && make install && \\\n  rm -Rf /build/openjpeg* && rm /build/v2.3.0.tar.gz\n\nRUN wget https://bootstrap.pypa.io/get-pip.py -O get-pip.py && python get-pip.py && pip install --no-cache-dir --upgrade pip wheel numpy\n\nARG GDAL_VERSION\nRUN cd /build && \\\n    git clone https://github.com/OSGeo/gdal.git && \\\n    cd /build/gdal && \\\n    git checkout ${GDAL_VERSION} && \\\n    cd /build/gdal/gdal && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n        --with-png=internal \\\n        --with-jpeg=internal \\\n        --with-libz=internal \\\n        --with-libtiff=internal \\\n        --with-geotiff=internal \\\n        --with-gif=internal \\\n        --with-libjson-c=internal \\\n        --with-poppler \\\n        --with-spatialite \\\n        --with-python \\\n        --with-liblzma \\\n        --with-openjpeg \\\n        --with-ogdi \\\n        --with-webp \\\n        --with-pg \\\n        --with-mrsid=/usr/local \\\n        --with-libkml \\\n        --with-filegdb \\\n        --with-hdf5=/usr/lib/x86_64-linux-gnu/hdf5/serial \\\n        --with-openjpeg && \\\n    make && \\\n    make install && \\\n    cd swig/python && python setup.py build && python setup.py install && \\\n    ldconfig && \\\n    rm -Rf /build/gdal\n\nRUN apt-get update && apt-get install -y --fix-missing --no-install-recommends build-essential ca-certificates curl wget  \\\n    subversion git libaio1 make cmake python-numpy python-dev python-software-properties software-properties-common libv8-dev libc6-dev libfreetype6-dev \\\n    libcairo2-dev libpq-dev libharfbuzz-dev libfribidi-dev flex bison libfcgi-dev libxml2 libxml2-dev bzip2 apache2 apache2-utils apache2-dev \\\n    libaprutil1-dev libapr1-dev libpng12-dev  libjpeg-dev libcurl4-gnutls-dev libpcre3-dev libpixman-1-dev libgeos-dev libsqlite3-dev libdb-dev libtiff-dev sudo \\\n  && rm -rf /var/lib/apt/lists/partial/* /tmp/* /var/tmp/*\nRUN echo \"msuser ALL=NOPASSWD: ALL\" >> /etc/sudoers\n\nARG MAPSERVER_VERSION\nRUN cd /build && \\\n    git clone https://github.com/mapserver/mapserver.git mapserver && \\\n    cd /build/mapserver && \\\n    git checkout ${MAPSERVER_VERSION} \\\n    && mkdir /build/mapserver/build \\\n    && cd /build/mapserver/build \\\n    && cmake  \\\n      -DCMAKE_BUILD_TYPE=Release \\\n      -DHARFBUZZ_INCLUDE_DIR=/usr/include/harfbuzz \\\n      -DWITH_CLIENT_WFS=ON \\\n      -DWITH_CLIENT_WMS=ON \\\n      -DWITH_CURL=ON \\\n      -DWITH_GDAL=ON \\\n      -DWITH_GIF=ON \\\n      -DWITH_ICONV=ON \\\n      -DWITH_KML=ON \\\n      -DWITH_LIBXML2=ON \\\n      -DWITH_OGR=ON \\\n      -DWITH_POINT_Z_M=ON \\\n      -DWITH_PROJ=ON \\\n      -DWITH_SOS=ON  \\\n      -DWITH_THREAD_SAFETY=ON \\\n      -DWITH_WCS=ON \\\n      -DWITH_WFS=ON \\\n      -DWITH_WMS=ON \\\n      -DWITH_FCGI=ON \\\n      -DWITH_FRIBIDI=ON \\\n      -DWITH_CAIRO=ON \\\n      -DWITH_HARFBUZZ=ON \\\n      -DWITH_POSTGIS=on \\\n      -DWITH_V8=OFF \\\n      ..  \\\n    && make  \\\n    && make install \\\n    && ldconfig \\\n    && rm -Rf /build/mapserver\n\n# Install Mapcache itself\nARG MAPCACHE_VERSION\nRUN cd /build  \\\n    && mkdir -p /msconfig/mapcache \\\n    && git clone https://github.com/mapserver/mapcache/ \\\n    && cd /build/mapcache  \\\n    && git checkout ${MAPCACHE_VERSION} \\\n    && mkdir /build/mapcache/build \\\n    && cd /build/mapcache/build \\\n    && cmake ../ \\\n    -DWITH_FCGI=0 -DWITH_APACHE=1 -DWITH_PCRE=1 \\\n    -DWITH_TIFF=1 -DWITH_BERKELEY_DB=1 -DWITH_MEMCACHE=1 \\\n    -DCMAKE_PREFIX_PATH=\"/etc/apache2\" && \\\n    make && \\\n    make install\n\n#RUN mkdir /vdatum \\\n#    && cd /vdatum \\\n#    && wget http://download.osgeo.org/proj/vdatum/usa_geoid2012.zip && unzip -j -u usa_geoid2012.zip -d /usr/share/proj \\\n#    && wget http://download.osgeo.org/proj/vdatum/usa_geoid2009.zip && unzip -j -u usa_geoid2009.zip -d /usr/share/proj \\\n#    && wget http://download.osgeo.org/proj/vdatum/usa_geoid2003.zip && unzip -j -u usa_geoid2003.zip -d /usr/share/proj \\\n#    && wget http://download.osgeo.org/proj/vdatum/usa_geoid1999.zip && unzip -j -u usa_geoid1999.zip -d /usr/share/proj \\\n#    && wget http://download.osgeo.org/proj/vdatum/vertcon/vertconc.gtx && mv vertconc.gtx /usr/share/proj \\\n#    && wget http://download.osgeo.org/proj/vdatum/vertcon/vertcone.gtx && mv vertcone.gtx /usr/share/proj \\\n#    && wget http://download.osgeo.org/proj/vdatum/vertcon/vertconw.gtx && mv vertconw.gtx /usr/share/proj \\\n#    && wget http://download.osgeo.org/proj/vdatum/egm96_15/egm96_15.gtx && mv egm96_15.gtx /usr/share/proj \\\n#    && wget http://download.osgeo.org/proj/vdatum/egm08_25/egm08_25.gtx && mv egm08_25.gtx /usr/share/proj \\\n#    && rm -rf /vdatum\n\n# Force buit libraries dependencies\nRUN ldconfig\n\n# Apache configuration for mapcache  \nRUN echo \"LoadModule mapcache_module    /usr/lib/apache2/modules/mod_mapcache.so\" >  /etc/apache2/mods-available/mapcache.load   \nRUN echo '<IfModule mapcache_module> \\n\\  \n   <Directory /msconfig/mapcache> \\n\\\n      Require all granted \\n\\\n   </Directory> \\n\\\n   MapCacheAlias /mapcache \"/msconfig/mapcache/mapcache.xml\" \\n\\\n</IfModule> \\n'\\\n> /etc/apache2/mods-available/mapcache.conf\n\n# Enable these Apache modules\nRUN  a2enmod actions cgi alias headers mapcache\n\nRUN chmod o+x /usr/local/bin/mapserv\nRUN ln -s /usr/local/bin/mapserv /usr/lib/cgi-bin/mapserv\nRUN chmod 755 /usr/lib/cgi-bin\n\nENV HOST_IP `ifconfig | grep inet | grep Mask:255.255.255.0 | cut -d ' ' -f 12 | cut -d ':' -f 2`\n\nCMD sudo service apache2 start && bash\n\nUSER msuser"
}