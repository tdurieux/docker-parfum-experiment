{
  "startTime": 1674250623751,
  "endTime": 1674250624052,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 7,
        "columnEnd": 91
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 86
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# upstream https://github.com/mesosphere/marathon-lb\nFROM debian:stretch\n\nMAINTAINER 若虚 <slpcat@qq.com>\n\n# Container variables\nENV \\ \n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\ \n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n\n# Set timezone and locales\nRUN \\\n    echo \"${TIMEZONE}\" > /etc/timezone \\\n    && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n    && apt-get update -q \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq apt-utils dialog locales \\\n    && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n    && update-locale LANG=$LANG \\\n    && locale-gen $LANG \\\n    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales && rm -rf /var/lib/apt/lists/*;\n\n# Install required packages\nRUN \\\n    apt-get dist-upgrade -y\n\n# runtime dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        inetutils-syslogd \\\n        iptables \\\n        libcurl3 \\\n        liblua5.3-0 \\\n        libssl1.0.2 \\\n        openssl \\\n        procps \\\n        python3 \\\n        runit \\\n        gnupg-agent \\\n        libdpkg-perl \\\n\tsocat \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV TINI_VERSION=v0.13.2 \\\n    TINI_GPG_KEY=595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7\n\nRUN set -x \\\n    && apt-get update && apt-get install -y --no-install-recommends dirmngr gpg wget \\\n        && rm -rf /var/lib/apt/lists/* \\\n    && wget -O tini \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini-amd64\" \\\n    && wget -O tini.asc \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini-amd64.asc\" \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && gpg --batch --keyserver hkps://hkps.ha.pool.sks-keyservers.net --recv-keys \"$TINI_GPG_KEY\" \\\n    && gpg --batch --verify tini.asc tini \\\n    && rm -rf \"$GNUPGHOME\" tini.asc \\\n    && mv tini /usr/bin/tini \\\n    && chmod +x /usr/bin/tini \\\n    && tini -- true \\\n    && apt-get purge -y --auto-remove dirmngr gpg wget\n\n\nENV HAPROXY_MAJOR=1.7 \\\n    HAPROXY_VERSION=1.7.9 \\\n    HAPROXY_MD5=a2bbbdd45ffe18d99cdcf26aa992f92d\n\nCOPY requirements.txt /marathon-lb/\nCOPY pip.conf /etc/pip.conf\n\n# Build HAProxy\n# Install Python dependencies\n# Install Python packages with --upgrade so we get new packages even if a system\n# package is already installed. Combine with --force-reinstall to ensure we get\n# a local package even if the system package is up-to-date as the system package\n# will probably be uninstalled with the build dependencies.\nRUN set -x \\\n    && buildDeps=' \\\n        gcc \\\n        libcurl4-openssl-dev \\\n        libffi-dev \\\n        liblua5.3-dev \\\n        libpcre3-dev \\\n        libssl-dev \\\n        make \\\n        python3-dev \\\n        python3-pip \\\n        python3-setuptools \\\n        wget \\\n        zlib1g-dev \\\n    ' \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends $buildDeps \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && wget -O haproxy.tar.gz \"https://www.haproxy.org/download/$HAPROXY_MAJOR/src/haproxy-$HAPROXY_VERSION.tar.gz\" \\\n    && echo \"$HAPROXY_MD5  haproxy.tar.gz\" | md5sum -c \\\n    && mkdir -p /usr/src/haproxy \\\n    && tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1 \\\n    && rm haproxy.tar.gz \\\n    && make -C /usr/src/haproxy \\\n        TARGET=linux2628 \\\n        ARCH=x86_64 \\\n        USE_LUA=1 \\\n        LUA_INC=/usr/include/lua5.3/ \\\n        USE_OPENSSL=1 \\\n        USE_PCRE_JIT=1 \\\n        USE_PCRE=1 \\\n        USE_REGPARM=1 \\\n        USE_STATIC_PCRE=1 \\\n        USE_ZLIB=1 \\\n        all \\\n        install-bin \\\n    && rm -rf /usr/src/haproxy \\\n    && pip3 install --no-cache-dir --no-cache --upgrade --force-reinstall -r /marathon-lb/requirements.txt \\\n    && apt-get purge -y --auto-remove $buildDeps\n\nCOPY  . /marathon-lb\n\nWORKDIR /marathon-lb\n\nENTRYPOINT [ \"tini\", \"-g\", \"--\", \"/marathon-lb/run\" ]\nCMD [ \"sse\", \"--health-check\", \"--group\", \"external\" ]\n\nEXPOSE 80 443 9090 9091\n"
}