{
  "startTime": 1674252343768,
  "endTime": 1674252344154,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 18,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 19,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 19,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 19,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 19,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 19,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 19,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 19,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 19,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 19,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 353
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 5,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 353
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 5,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 353
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 5,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 375
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "from ubuntu\n\nEXPOSE 8080\n#add ppa for newer compiler\nRUN apt-get update; apt-get install --no-install-recommends -y software-properties-common python-software-properties; rm -rf /var/lib/apt/lists/*; add-apt-repository -y ppa:ubuntu-toolchain-r/test; apt-get update -o Dir::Etc::sourcelist=\"sources.list.d/ubuntu-toolchain-r-test-$(lsb_release -c -s).list\" -o Dir::Etc::sourceparts=\"-\" -o APT::Get::List-Cleanup=\"0\"\n\n#grab all of the dependencies\nRUN apt-get install --no-install-recommends -y autoconf automake libtool make gcc-4.9 g++-4.9 libboost1.54-dev libboost-program-options1.54-dev libboost-filesystem1.54-dev libboost-system1.54-dev libboost-thread1.54-dev protobuf-compiler libprotobuf-dev lua5.2 liblua5.2-dev git firefox libsqlite3-dev libspatialite-dev libgeos-dev libgeos++-dev libcurl4-openssl-dev git wget && rm -rf /var/lib/apt/lists/*;\n\n#use newer compiler\nRUN update-alternatives  --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 90; update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 90\n\n\nWORKDIR /opt\n\nRUN git clone --depth=1 --recurse-submodules --single-branch --branch=master https://github.com/zeromq/libzmq.git\nWORKDIR /opt/libzmq\nRUN ./autogen.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-libsodium --without-documentation; make install\nWORKDIR /opt\n\n#grab prime_server API:\nRUN git clone --depth=1 --recurse-submodules --single-branch --branch=master https://github.com/kevinkreiser/prime_server.git\nWORKDIR /opt/prime_server\nRUN ./autogen.sh; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; make install\nWORKDIR /opt\n\n#grab midgard\nRUN  git clone --recurse-submodules https://github.com/valhalla/midgard\nWORKDIR /opt/midgard\nRUN ./autogen.sh; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE; make ; make install;\nWORKDIR /opt\n\n#grab baldr\nRUN  git clone --recurse-submodules https://github.com/valhalla/baldr\nWORKDIR /opt/baldr\nRUN ./autogen.sh; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE; make ; make install;\nWORKDIR /opt\n\n#grab sif\nRUN  git clone --recurse-submodules https://github.com/valhalla/sif\nWORKDIR /opt/sif\nRUN ./autogen.sh; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE; make ; make install;\nWORKDIR /opt\n\n#grab skadi\nRUN  git clone --recurse-submodules https://github.com/valhalla/skadi\nWORKDIR /opt/skadi\nRUN ./autogen.sh; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE; make ; make install;\nWORKDIR /opt\n\n#grab mjolnir\nRUN  git clone --recurse-submodules https://github.com/valhalla/mjolnir\nWORKDIR /opt/mjolnir\nRUN ./autogen.sh; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE; make ; make install;\nWORKDIR /opt\n\n#grab loki\nRUN  git clone --recurse-submodules https://github.com/valhalla/loki\nWORKDIR /opt/loki\nRUN ./autogen.sh; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE; make ; make install;\nWORKDIR /opt\n\n\n#grab yaml-cpp\nRUN git clone https://github.com/jbeder/yaml-cpp.git\nRUN mkdir yaml-cpp/build\n\nRUN apt-get install --no-install-recommends -y cmake && rm -rf /var/lib/apt/lists/*;\nWORKDIR /opt/yaml-cpp/build\nRUN cmake ../ ; make; make install\nWORKDIR /opt\n\n#grab odin\n\nRUN  git clone https://github.com/valhalla/odin.git\nWORKDIR /opt/odin\nRUN  scripts/dependencies.sh ; ./scripts/install.sh\nWORKDIR /opt\n\n#grab thor\nRUN  git clone --recurse-submodules https://github.com/valhalla/thor.git\nWORKDIR /opt/thor\nRUN ./autogen.sh; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE; make ; make install;\nWORKDIR /opt\n\n#grab tyr\nRUN  git clone --recurse-submodules https://github.com/valhalla/tyr.git\nWORKDIR /opt/tyr\nRUN ./autogen.sh; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE; make ; make install;\nWORKDIR /opt\n\n#grab tools\n\nRUN  git clone --recurse-submodules https://github.com/valhalla/tools.git\nWORKDIR /opt/tools\nRUN ./autogen.sh; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CPPFLAGS=-DBOOST_SPIRIT_THREADSAFE; make ; make install;\nWORKDIR /opt\n\nADD scripts /opt/scripts\n#Run the server\nCMD chmod 777 /opt/scripts/*\nWORKDIR /opt/tyr\n\nEXPOSE 8002\nEXPOSE 8080\n\nCMD LD_LIBRARY_PATH=/usr/lib:/usr/local/lib /opt/tools/tyr_simple_service /data/valhalla/valhalla.json\n#CMD LD_LIBRARY_PATH=/usr/lib:/usr/local/lib tyr/tyr_simple_service tyr/conf/valhalla.json\n\n\n\n\n\n#\n#\n#\n"
}