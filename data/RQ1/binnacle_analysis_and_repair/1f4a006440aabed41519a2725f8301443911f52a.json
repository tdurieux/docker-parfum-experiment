{
  "startTime": 1674238997198,
  "endTime": 1674238997337,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedDockerfile": "############################################################\n# Dockerfile to build Nginx Amplify Agent with N+ container\n# Based on Ubuntu 16.04\n############################################################\n\n# Set the base image to Ubuntu\nFROM ubuntu:16.04\n\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections \\\n    && apt-get update\n\nRUN apt-get install --no-install-recommends -y --fix-missing tar curl nano wget dialog net-tools build-essential apt-transport-https jq \\\n    python python-dev python-distribute software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:certbot/certbot\nRUN apt-get update && apt-get install --no-install-recommends -y certbot && rm -rf /var/lib/apt/lists/*;\n\n# Download certificate and key from the customer portal (https://cs.nginx.com)\n# and copy to the build context\nADD docker/test-vanilla/nginx-repo.crt /etc/ssl/nginx/\nADD docker/test-vanilla/nginx-repo.key /etc/ssl/nginx/\n\nRUN wget --no-check-certificate https://bootstrap.pypa.io/ez_setup.py -O - | python \\\n    && easy_install pip \\\n    && easy_install supervisor\n\nADD docker/test-vanilla/requirements /etc/naas/requirements\n\n# Install agent requirements:\nRUN pip install --no-cache-dir -r /etc/naas/requirements\n\n# Install test requirements\nRUN pip install --no-cache-dir \\\n    pytest \\\n    pytest-xdist \\\n    pyhamcrest \\\n    requests_mock\n\nENV AMPLIFY_ENVIRONMENT testing\nENV PYTHONPATH /amplify\nENV CTR_TEST true\n\n# Copy the application folder inside the container\nADD . /amplify\n# Set the default directory where CMD will execute\nWORKDIR /amplify\n\nCMD bash\n"
}