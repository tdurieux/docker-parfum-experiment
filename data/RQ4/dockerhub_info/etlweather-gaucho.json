{
  "user": "etlweather",
  "name": "gaucho",
  "namespace": "etlweather",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "A CLI tool to manage Rancher services.",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 5,
  "pull_count": 208357,
  "last_updated": "2019-02-02T19:54:55.335678Z",
  "date_registered": "2016-07-06T01:13:41.063444Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "etlweather",
  "has_starred": false,
  "full_description": "# Not maintained\n\nThis tool was very useful when I was using Rancher 1.x - but I have since moved to Rancher 2 with Kubernetes and I no longer use this.\n\nFeel free to use this tool, fork the project and improve it.\n\nIf someone would like to take ownership of it, please let me know (open an issue). A few people forked the project and improved upon it already.\n\n\nGaucho\n===========================================\n\nGaucho is simply some Python scripts to access the\n[Rancher](https://github.com/rancher/rancher)'s API to perform tasks which\nI need to have executed through my deployment workflow.\n\nAt this point, it does not contain much but it might grow as I get more\nrequirements.\n\nContributions are welcome if you want to use it and add to it.\n\n## Usage\n\nGaucho can be run directly on a command line provided you have Python installed\nas well as the dependencies listed below.\n\nIt can also be run as a Docker container:\n\n```\ndocker run --rm -it etlweather/gaucho query 1s245\n```\n\n### Rancher Host, Access Key and Secret\n\nGaucho needs to know the Rancher host and must be given an access key and access\nsecret to be able to interact with the Rancher's API. This can be done through\nenvironment variables:\n\n   - `CATTLE_ACCESS_KEY`\n   - `CATTLE_SECRET_KEY`\n   - `CATTLE_URL`\n\n#### SSL Validation\n\nIf you want to turn off SSL validation because you are using a self-signed certificate\nor a private CA-signed certificate, you can pass the environment variable:\n\n    - `SSL_VERIFY=false`\n\nYou can also mount the SSL certificate chain into the container, and pass the path to the\ncertificate as an environment variable:\n\n   - `-v /path/to/ca_chain.crt:/root/ca.crt`\n   - `-e SSL_VERIFY=/root/ca.crt`\n\n#### Rancher Agent Container\n\nIf you run Gaucho in a container on Rancher, rather than set the environment\nvariables manually, use the following labels to have Rancher automatically do it\nfor you.\n\n```\nio.rancher.container.create_agent=true\nio.rancher.container.agent.role=environment\n```\n\nSee [Service Accounts in Rancher](http://docs.rancher.com/rancher/latest/en/rancher-services/service-accounts/)\nfor more information on this feature.\n\n## Supported API\n\n### query\n\n```\nUsage: ./services.py query [<service_id>]\n\nRetrieves the service information.\n\n    If you don't specify an ID, data for all services will be retrieved.\n\nOptions:\n\n   --service_id  The ID of the service to read (optional)\n```\n\n### id_of\n\nRetrieves the ID of a service given its name.\n\n```\n $ ./services.py id_of cassandra\n1s130\n $\n```\n\n### id_of_env\n\n```\nUsage: ./gaucho id_of_env <environment_name>\n\nRetrieves the ID of a environment given its name.\n\nRequired Arguments:\n\n  environment_name   The name of the environment\n```\n\n### start_service\n\n```\nUsage: ./gaucho start_service <service_id>\n\nStarts the containers of a given service, typically a Start Once service.\n\nRequired Arguments:\n\n  service_id   The ID of the service to start the containers of.\n```\n\n### stop_service\n\n```\nUsage: ./gaucho stop_service <service_id>\n\nStop the containers of a given service.\n\nRequired Arguments:\n\n  service_id   The ID of the service to stop the containers of.\n```\n\n### restart_service\n\n```\nUsage: ./gaucho restart_service <service_id>\n\nRestart the containers of a given service.\n\nRequired Arguments:\n\n  service_id   The ID of the service to restart the containers of.\n```\n\n### upgrade\n\n```\nUsage: ./services.py upgrade <service_id> [<start_first>] [<complete_previous>] [<imageUuid>] [<auto_complete>] [<batch_size>] [<interval_millis>] [<replace_env_name>] [<replace_env_value>]\n\nUpgrades a service\n\n    Performs a service upgrade, keeping the same configuration, but\n    otherwise pulling new image as needed and starting new containers,\n    dropping the old ones.\n\nRequired Arguments:\n\n  service_id   The ID of the service to upgrade.\n\nOptions:\n\n   --start_first        Whether or not to start the new instance first before\n                        stopping the old one.\n   --complete_previous  If set and the service was previously upgraded but the\n                        upgrade wasn't completed, it will be first marked as\n                        Finished and then the upgrade will occur.\n   --imageUuid          If set the config will be overwritten to use new\n                        image. Don't forget Rancher Formatting\n                        'docker:<Imagename>:tag'\n   --auto_complete      Set this to automatically 'finish upgrade' once\n                        upgrade is complete\n   --batch_size\n   --interval_millis\n   --replace_env_name   The name of an environment variable to be changed in\n                        the launch config (requires replace_env_value).\n   --replace_env_value  The value of the environment variable to be replaced\n                        (requires replace_env_name).\n   --timeout            How many seconds to wait until an upgrade fails\n```\n\n### rollback\n\n```\nUsage: ./services.py rollback <service_id>\n\nRolls back service\n\n    Performs a service rollback\n\nRequired Arguments:\n\n  service_id   The ID of the service to roll back.\n\nOptions:\n\n   --timeout            How many seconds to wait until an upgrade fails\n```\n\n### execute command\n\n```\nUsage: ./gaucho execute <service_id> <command>\n\nRuns the given *command* on the first container found for the given *service id*.\n\nRequired Arguments:\n\n  service_id   The ID of the service to perform the command on.\n  command      shell command to execute\n```\n\n### activate command\n\n```\nUsage: ./gaucho activate <service_id>\n\nActivate the given *service id*.\n\nRequired Arguments:\n\n  service_id   The ID of the service to perform the command on.\n\nOptions:\n\n   --timeout            How many seconds to wait until get back prompt on activation\n```\n\n### deactivate command\n\n```\nUsage: ./gaucho deactivate <service_id>\n\nDeactivate the given *service id*.\n\nRequired Arguments:\n\n  service_id   The ID of the service to perform the command on.\n\nOptions:\n\n   --timeout            How many seconds to wait until get back prompt on deactivation\n```\n\n### remove command\n\n```\nUsage: ./gaucho remove <service_id>\n\nRemove the given *service id*.\n\nRequired Arguments:\n\n  service_id   The ID of the service to perform the command on.\n\nOptions:\n\n   --timeout            How many seconds to wait until get back prompt on remove\n```\n\n### deactivate environment command\n\n```\nUsage: ./gaucho deactivate_env <environment_id>\n\nDeactivate the given *environment id*.\n\nRequired Arguments:\n\n  environment_id   The ID of the environment to perform the command on.\n\nOptions:\n\n   --timeout            How many seconds to wait until get back prompt on deactivation\n```\n\n### remove environment command\n\n```\nUsage: ./gaucho remove_env <environment_id>\n\nRemove the given *environment id*.\n\nRequired Arguments:\n\n  environment_id   The ID of the environment to perform the command on.\n\nOptions:\n\n   --timeout            How many seconds to wait until get back prompt on remove\n```\n\n### Get service's state\n\n```\nUsage: ./gaucho state <service_id>\n\nPrint state of the given *service id*.\n\nRequired Arguments:\n\n  service_id   The ID of the service to check.\n```\n\n\n## Dependencies\n\n - requests==2.18.4 \n - baker==1.3 \n - websocket-client==0.44.0\n\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}