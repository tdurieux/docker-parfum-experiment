{
  "user": "riobus",
  "name": "proxy",
  "namespace": "riobus",
  "repository_type": null,
  "status": 1,
  "status_description": "active",
  "description": "API REST http://rest.riob.us ",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 495,
  "last_updated": "2016-04-09T23:44:48.138937Z",
  "date_registered": "2016-03-10T03:28:02.361509Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "riobus",
  "has_starred": false,
  "full_description": "RioBus\n======\n\n[![Build Status](https://snap-ci.com/RioBus/proxy/branch/dev/build_image)](https://snap-ci.com/RioBus/proxy/branch/dev)\n\nO RioBus é um sistema colaborativo de monitoramento de ônibus em tempo real, que utiliza a API aberta de dados de\nmobilidade urbana fornecida pela parceria entre a Prefeitura do Rio de Janeiro e a FETRANSPOR.\nSeu objetivo principal é ajudar o cidadão, seja ele morador ou visitante, do Rio de Janeiro a se deslocar pela cidade.\n\n\nArquitetura\n-----------\n\nA aplicação do servidor do RioBus foi desenvolvida em Node.js junto ao ExpressJS, que é\numa solução bastante madura de framework para construir uma RESTful API.\n\nA organização da lógica da aplicação segue um design bem modular, que deixa o código desacoplado e organizado, \nfacilitando a manutenção e a adição de novas funcionalidades.\n\n\nInstalação\n----------\n\nInstale o Node.js\n\nWindows e Linux:\n> http://nodebr.com/instalando-node-js-atraves-do-gerenciador-de-pacotes/\n\nMac OS X:\n> https://nodejs.org/download/\n\nFaça o download do projeto em sua máquina:\n> $ git clone https://github.com/RioBus/proxy.git\n\nEntre na raiz do projeto e instale as dependências do Node.js:\n> $ npm install\n\nExecute a aplicação:\n> $ npm start\n\nOs dados dos ônibus são salvos no banco de dados NoSQL [MongoDB](https://www.mongodb.org/). Certifique-se de que ele \nesteja ligado antes de executar a aplicação. As configurações de conexão devem ser definidas no módulo ```config```, \nem ```Config.database```.\n\nComandos NPM\n------------\n\nnpm test\n> Invoca o Mocha e roda as rotinas de testes unitários configurados em test/\n\nnpm start\n> Roda a aplicação\n\n```OBS.: Para a aplicação funcionar, ela precisa estar em um projeto cujos módulos Node.js estejam instalados.```\n\nCompatibilidade\n---------------\n\n* Node.js >= 4.0",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.v1+prettyjws"
  ],
  "content_types": [
    "image"
  ]
}