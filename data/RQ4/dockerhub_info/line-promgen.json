{
  "user": "line",
  "name": "promgen",
  "namespace": "line",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Promgen docker image",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 3,
  "pull_count": 244331,
  "last_updated": "2022-12-15T07:42:36.990906Z",
  "date_registered": "2017-10-17T06:07:16.862135Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "line",
  "has_starred": false,
  "full_description": "# What is Promgen?\n\nPromgen is a configuration file generator for [Prometheus](https://prometheus.io). Promgen is a web application written with [Django](https://docs.djangoproject.com/en/1.10/) and can help you do the following jobs.\n\n- Create and manage Prometheus configuration files\n- Configure alert rules and notification options\n\nSee the [Promgen introduction slides](https://www.slideshare.net/tokuhirom/promgen-prometheus-managemnet-tool-simpleclientjava-hacks-prometheus-casual) for the original history of Promgen.\n\nSee https://line.github.io/promgen/ for additional documentation.\n\n## Promgen screenshots\n\n![screenshot](docs/images/screenshot.png)\n\n## Contributing\n\nBelow are the steps to get started with Promgen.\n\nPlease see [CONTRIBUTING.md](https://github.com/line/promgen/blob/master/CONTRIBUTING.md) for contributing to Promgen.\n\nIf you believe you have discovered a vulnerability or have an issue related to security, please DO NOT open a public issue. Instead, send us a mail to dl_oss_dev@linecorp.com.\n\n### 1. Initialize Promgen\n\nInitialize Promgen using Docker.\n\n```bash\n# Create promgen setting directory.\nmkdir -p ~/.config/promgen\nchmod 777 ~/.config/promgen\n\n# Initialize required settings with Docker container\n# This will prompt you for connection settings for your database and Redis broker\n# using the standard DSN syntax.\n# Database example: mysql://username:password@hostname/databasename\n# Broker example: redis://localhost:6379/0\ndocker run --rm -it -v ~/.config/promgen:/etc/promgen/ line/promgen bootstrap\n\n# Apply database updates\ndocker run --rm -v ~/.config/promgen:/etc/promgen/ line/promgen migrate\n\n# You can then check your configuration to ensure everything correct\ndocker run --rm -v ~/.config/promgen:/etc/promgen/ line/promgen check\n\n# Create initial login user. This is the same as the default django-admin command\n# https://docs.djangoproject.com/en/1.10/ref/django-admin/#django-admin-createsuperuser\ndocker run --rm -it -v ~/.config/promgen:/etc/promgen/ line/promgen createsuperuser\n```\n\nYou can then use your favorite configuration management system to deploy to each worker.\n\n> Note: Promgen aims to use the [XDG](https://specifications.freedesktop.org/basedir-spec/latest/ar01s03.html) specs and follows suggestions made by the [12-Factor App](https://12factor.net/).\n\n### 2. Configure Prometheus\n\nConfigure Prometheus to load the target file from Prometheus and configure AlertManager to send notifications back to Promgen.\n\nSee the example settings files for proper configuration of Prometheus and AlertManager.\n\n- [Example settings file](promgen/tests/examples/promgen.yml)\n- [Example Prometheus file](docker/prometheus.yml)\n- [Example AlertManager file](docker/alertmanager.yml)\n\n### 3. Run Promgen\n\nRun Promgen using the following command.\n\n```bash\n# Run Promgen web worker. This is typically balanced behind an NGINX instance\ndocker run --rm -p 8000:8000 -v ~/.config/promgen:/etc/promgen/ line/promgen\n\n# Run Promgen celery worker. Make sure to run it on the same machine as your Prometheus server to manage the config settings\ndocker run --rm -v ~/.config/promgen:/etc/promgen/ -v /etc/prometheus:/etc/prometheus line/promgen worker\n\n# Or if using docker-compose you can spin up a complete test environment\ndocker-compose up -d\n# Create initial user\ndocker-compose run web createsuperuser\n```\n\n## The MIT License\n\nCopyright (c) 2017 LINE Corporation\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}