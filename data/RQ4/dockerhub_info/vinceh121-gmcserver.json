{
  "user": "vinceh121",
  "name": "gmcserver",
  "namespace": "vinceh121",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Lightweight server to log, analyze and proxy data measured by internet connected Geiger counters",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 24,
  "last_updated": "2021-07-01T21:20:30.561705Z",
  "date_registered": "2021-06-23T22:50:45.682892Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "vinceh121",
  "has_starred": false,
  "full_description": "# GMCServer\n[![GitHub](https://img.shields.io/github/license/vinceh121/gmcserver?color=green&style=for-the-badge)](https://github.com/vinceh121/gmcserver/blob/master/LICENSE)\n[![GitHub Workflow Status](https://img.shields.io/github/workflow/status/vinceh121/gmcserver/Java%20CI%20with%20Maven?label=Backend%20build&style=for-the-badge)](https://github.com/vinceh121/gmcserver/actions?query=workflow%3A%22Java+CI+with+Maven%22)\n[![GitHub Workflow Status](https://img.shields.io/github/workflow/status/vinceh121/gmcserver/Web%20Build?label=Frontend%20build&style=for-the-badge)](https://github.com/vinceh121/gmcserver/actions?query=workflow%3A%22Web+Build%22)\n![GitHub repo size](https://img.shields.io/github/repo-size/vinceh121/gmcserver?color=yellowgreen&style=for-the-badge)\n[![LGTM Grade](https://img.shields.io/lgtm/grade/java/github/vinceh121/gmcserver?style=for-the-badge)](https://lgtm.com/projects/g/vinceh121/gmcserver/)\n[![LGTM Grade](https://img.shields.io/lgtm/grade/javascript/github/vinceh121/gmcserver?style=for-the-badge)](https://lgtm.com/projects/g/vinceh121/gmcserver/)\n[![Most used swear](https://img.shields.io/badge/dynamic/json?color=yellow&label=Most%20used%20swear&query=%24.mostUsed.word&url=https%3A%2F%2Fswear.vinceh121.me%2Fcount.json%3Furi%3Dhttps%3A%2F%2Fgithub.com%2Fvinceh121%2Fgmcserver&style=for-the-badge)](https://github.com/vinceh121/git-swears)\n\nGMCServer is a lightweight service that allows logging, analysis, visualization and proxying of data recorded by [GMC Geiger counters](https://www.amazon.com/GQ-Radiation-Detector-Recorder-equipment/dp/B00ROHGWIQ), [Radmon counters](https://radmon.org) and [Safecast counters](https://safecast.org/devices/bgeigie-nano/)\n<br> Some of the features implemented so far:\n - User accounts\n - Device logging\n - Timeline visualization\n - Device World map\n - Simple statistical analysis (min, max, average, standard deviation)\n - Proxy to other platforms\n\nA demo/main instance is available at **https://gmc.vinceh121.me**\n\n![Map view](https://i.vinceh121.me/Azh698yB.png)\n![Timeline view](https://i.vinceh121.me/BV7wt5Dm.png)\n![Calendar view](https://i.vinceh121.me/H1mENyIi.png)\n\n## Motivation\nOn top of not being self-hostable and closed-source, gmcmap.com lacks some features relating to data analysis, visualization, API access, and overall security. This project aims to create a compatible, open-source and self-hostable alternative to gmcmap.com implementing those missing features and security fixes.\nGMCServer can also *proxy* records, that is, report measurements itself to other platforms such as gmcmap.com and radmon.org simultaneously upon receiving a record from your counter.\n\n## Setting up device\n### GQ Electronics' GMC\nYou should first set up WiFi on your GMC device. In the `Server` settings, you should set the following values:\n - `Website` : to the hostname of the server where GMCServer is running (`gmc.vinceh121.me` for the main instance)\n - `URL` : to `log2.asp`\n - `User ID` : to the \"GMC ID\" of your account, visible next to your username when logged in on your user page. This ID is supposed to stay secret.\n - `Counter ID` : to the \"GMC ID\" of your device, visible next to the device's name when logged in on its page. This ID is supposed to stay secret.\n\nOnce those settings set, pressing the Test Connection button should show \"Successful\" after a second.\n\n\n## Installing\n\n### On Debian/Ubuntu\n - Install Java (`apt install default-jre`)\n - Install [MongoDB](https://docs.mongodb.com/manual/tutorial/install-mongodb-on-debian/)\n - Download the deb file from GitHub actions \"Make debian\" and install it with dpkg:\n```sh\nunzip gmcserver-debian-master-abcdef012345.zip\ndpkg -i work/gmcserver/gmcserver_0.0.0-1_amd64.deb\n```\n\n### Building from source\nThe following dependencies are required to build:\n - make\n - maven\n - pnpm\n\n```sh\ngit clone https://github.com/vinceh121/gmcserver\ncd gmcserver\nmake\nsudo make install\n```\nThis will build all compenents of GMCServer (backend, frontend, emails), if you need to only build one specific component, cd to its folder and run make in it.\n### Configuring web server\nGMCServer can act on its own as a web server, you just need to set the `web.enabled` setting to true in `config.properties`\n\nHowever, it may be more \"proper\" to use a separate web server/reverse proxy such as Apache or Nginx:\n - [Nginx example config](https://github.com/vinceh121/gmcserver/blob/master/nginx.example.conf)\n - TODO: Apache example config\n\n## Licensing\nUnless otherwise noted, files in this repository are licensed under the GNU AGPL V3 license.\n\nIcon is by Lorc under the CC BY 3.0 license from game-icons.net\n\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}