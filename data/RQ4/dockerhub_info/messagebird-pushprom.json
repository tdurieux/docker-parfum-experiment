{
  "user": "messagebird",
  "name": "pushprom",
  "namespace": "messagebird",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 700324,
  "last_updated": "2022-02-25T14:53:03.511618Z",
  "date_registered": "2016-10-25T12:00:36.028546Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "messagebird",
  "has_starred": false,
  "full_description": "\n# Pushprom\n\nPushprom is a proxy (HTTP/UDP) to the [Prometheus](https://prometheus.io/) Go client.\n\nPrometheus doesn't offer a PHP client and PHP clients are hard to implement because they would need to keep track of state and PHP setups generally don't encourage that. That's why we built Pushprom.\n\n## Installing\n\nExecute the following command:\n\n```bash\nmake release\n```\n\nOr, alternatively, to build a Docker container:\n\n```bash\nmake container\n```\n\n## Usage\n\nRunning Pushprom is as easy as executing `pushprom` on the command line.\n\n```\n$ pushprom\n2016/08/25 10:43:32 http.go:36: exposing metrics on http://0.0.0.0::9091/metrics\n2016/08/25 10:43:32 udp.go:10: listening for stats UDP on port :9090\n2016/08/25 10:43:32 http.go:39: listening for stats on http://0.0.0.0:9091\n```\n\nUse the `-h` flag to get help information.\n\n```\n$ pushprom -h\nUsage of bin/pushprom:\n  -debug\n        Log debugging messages.\n  -http-listen-address string\n        The address to listen on for http stat and telemetry requests. (default \":9091\")\n  -udp-listen-address string\n        The address to listen on for udp stats requests. (default \":9090\")\n```\n\nPushprom accepts HTTP and UDP requests. The payloads are in JSON. Here is a full example:\n\n```json\n{\n      \"type\": \"gauge\",\n      \"name\": \"trees\",\n      \"help\": \"the amount of trees in the forest.\",\n      \"method\": \"add\",\n      \"value\": 3002,\n      \"labels\": {\n            \"species\": \"araucaria angustifolia\",\n            \"job\": \"tree-counter-bot\"\n      }\n}\n```\n\nWhen Pushprom receives this payload (from now on called Delta) it tries to register the metric with type **Gauge** named **trees** and then apply the operation **add** with value **3002** on it.\n\n## Protocol support\n\nYou can use HTTP requests and UDP packages to push deltas to Pushprom.\n\n### HTTP\n\nWhen using HTTP you should do a `POST /`.\n\nExample:\n\n```bash\ncurl -H \"Content-type: application/json\" -X POST -d '{\"type\": \"counter\", \"name\": \"gophers\", \"help\": \"little burrowing rodents\", \"method\": \"inc\"}' http://127.0.0.1:9091/\n```\n\n### UDP\n\n*You move fast and break things.*\n\nExample:\n\n```bash\necho \"{\\\"type\\\": \\\"counter\\\", \\\"name\\\": \\\"gophers\\\", \\\"help\\\": \\\"little burrowing rodents\\\", \\\"method\\\": \\\"inc\\\"}\" | nc -u -w1 127.0.0.1 9090\n```\n\n## Caveats\n\nIn the Prometheus Go client you can not register a metric with the same **name** and different **help** or **labels**. For example: you register a metric with name `gophers` and with help `little rodents` and a little later you think \"but they are also burrowing animals!\". When you change the help string and push the same metric it won't work: you need to reboot Pushprom.\n\n## Clients\n\nWe currently offer two flavors of PHP clients for Pushprom:\n* [PHP](https://github.com/messagebird/pushprom-php-client)\n* [Yii 2](https://github.com/messagebird/pushprom-yii2-client)\n\n## Alternatives\n\n### Pushgateway\n\n[Pushgateway](https://github.com/prometheus/pushgateway) is a metrics cache for Prometheus. It's explicitly not an aggregator, which is the most distinct difference with Pushprom.\n\n# Tests\n\n```bash\nmake test\n```\n\n## License\n\nPushprom is licensed under [The BSD 2-Clause License](http://opensource.org/licenses/BSD-2-Clause). Copyright (c) 2016, MessageBird",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}