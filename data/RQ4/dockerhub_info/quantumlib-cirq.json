{
  "user": "quantumlib",
  "name": "cirq",
  "namespace": "quantumlib",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "A framework for creating, editing, and invoking Noisy Intermediate Scale Quantum (NISQ) circuits.",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 2,
  "pull_count": 306,
  "last_updated": "2019-04-03T18:01:21.643569Z",
  "date_registered": "2018-12-24T16:18:34.787323Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "quantumlib",
  "has_starred": false,
  "full_description": ".. image:: https://raw.githubusercontent.com/quantumlib/Cirq/master/docs/Cirq_logo_color.png\n  :target: https://github.com/quantumlib/cirq\n  :alt: Cirq\n  :width: 500px\n\nCirq is a Python library for writing, manipulating, and optimizing quantum\ncircuits and running them against quantum computers and simulators.\n\n.. image:: https://travis-ci.com/quantumlib/Cirq.svg?token=7FwHBHqoxBzvgH51kThw&branch=master\n  :target: https://travis-ci.com/quantumlib/Cirq\n  :alt: Build Status\n\n.. image:: https://badge.fury.io/py/cirq.svg\n    :target: https://badge.fury.io/py/cirq\n\n.. image:: https://readthedocs.org/projects/cirq/badge/?version=master\n    :target: https://cirq.readthedocs.io/en/master/?badge=master\n    :alt: Documentation Status\n\nInstallation\n------------\n\nFollow these\n`instructions <https://cirq.readthedocs.io/en/latest/install.html>`__.\n\nHello Qubit\n-----------\n\nA simple example to get you up and running:\n\n.. code-block:: python\n\n  import cirq\n\n  # Pick a qubit.\n  qubit = cirq.GridQubit(0, 0)\n\n  # Create a circuit\n  circuit = cirq.Circuit.from_ops(\n      cirq.X(qubit)**0.5,  # Square root of NOT.\n      cirq.measure(qubit, key='m')  # Measurement.\n  )\n  print(\"Circuit:\")\n  print(circuit)\n\n  # Simulate the circuit several times.\n  simulator = cirq.Simulator()\n  result = simulator.run(circuit, repetitions=20)\n  print(\"Results:\")\n  print(result)\n\nExample output:\n\n.. code-block:: bash\n\n  Circuit:\n  (0, 0): ───X^0.5───M('m')───\n  Results:\n  m=11000111111011001000\n\n\nDocumentation\n-------------\n\nSee\n`here <https://cirq.readthedocs.io/en/latest/>`__\nor jump into the\n`tutorial <https://cirq.readthedocs.io/en/latest/tutorial.html>`__.\n\nContributing\n------------\n\nWe welcome contributions. Please follow these\n`guidelines <https://github.com/quantumlib/cirq/blob/master/CONTRIBUTING.md>`__.\n\nWe use\n`Github issues <https://github.com/quantumlib/Cirq/issues>`__\nfor tracking requests and bugs. Please post questions to the\n`Quantum Computing Stack Exchange <https://quantumcomputing.stackexchange.com/>`__ with a 'cirq' tag.\n\nSee Also\n--------\n\nFor those interested in using quantum computers to solve problems in\nchemistry and materials science, we encourage exploring\n`OpenFermion <https://github.com/quantumlib/openfermion>`__ and\nits sister library for compiling quantum simulation algorithms in Cirq,\n`OpenFermion-Cirq <https://github.com/quantumlib/openfermion-cirq>`__.\n\nAlpha Disclaimer\n----------------\n\n**Cirq is currently in alpha.**\nWe are still making breaking changes.\nWe *will* break your code when we make new releases.\nWe recommend that you target a specific version of Cirq, and periodically bump to the latest release.\nThat way you have control over when a breaking change affects you.\n\nCirq is not an official Google product. Copyright 2018 The Cirq Developers\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}