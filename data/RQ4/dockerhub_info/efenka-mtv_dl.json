{
  "user": "efenka",
  "name": "mtv_dl",
  "namespace": "efenka",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 163,
  "last_updated": "2021-03-08T19:29:59.661378Z",
  "date_registered": "2020-03-12T08:06:54.386906Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "efenka",
  "has_starred": false,
  "full_description": "MediathekView Downloader\r\n========================\r\n\r\nA command line tool to download videos from public broadcasting services in Germany. It's name is a reference to the `MediathekView project <https://github.com/mediathekview/MediathekView>`_, because they are doing the actual work to provide a database of available shows and download sources (this is just a small helper script). Unfortunately, their client requires Java and its not so easy to automate downloads. This tools aims to make it easier to download your favorite shows to your local or network storage using a cronjob.\r\n\r\n\r\nFeatures\r\n--------\r\n\r\n- No GUI or web interface. Less then 1000 lines of code. Only python dependencies.\r\n- Powerful filter system for lists and download selection.\r\n- Download .mp4, .flv and .m3u8 (HLS) media inclusive subtitles.\r\n- Keep track of downloaded files and don't download them again.\r\n- Template naming of the downloaded files.\r\n\r\n\r\nUsage examples\r\n--------------\r\n\r\n\r\nSearching for shows\r\n~~~~~~~~~~~~~~~~~~~\r\n\r\n.. code::\r\n\r\n  $ mtv_dl list topic='extra 3' duration+20m age-1w\r\n  +----------+---------+------------------------+---------+------+---------------------------+----------+---------+--------+---------------------+\r\n  | hash     | channel | title                  | topic   | size | start                     | duration | age     | region | downloaded          |\r\n  +----------+---------+------------------------+---------+------+---------------------------+----------+---------+--------+---------------------+\r\n  | 49ea2aa7 | ARD     | Extra 3 vom 10.08.2017 | extra 3 | 646  | 2017-08-10T22:45:00+02:00 | 43m      | 14h 15m |        | None                |\r\n  +----------+---------+------------------------+---------+------+---------------------------+----------+---------+--------+---------------------+\r\n\r\n\r\nDownload all shows matching the filter\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n.. code::\r\n\r\n  $ mtv_dl download topic='extra 3' duration+20m age-1w\r\n\r\n\r\nDownload all shows matching any filter a text file\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n.. code::\r\n\r\n  $ cat shows.txt\r\n  channel=ARD topic='extra 3' title!=spezial duration+20m\r\n  channel=ZDF topic='Die Anstalt' duration+45m\r\n  channel=ZDF topic=heute-show duration+20m\r\n\r\n.. code::\r\n\r\n  $ mtv_dl download --dir=/media --high --target='{dir}/{channel}/[{topic} {date}] {title}{ext}' --sets=shows.txt\r\n\r\n\r\nUse a config file to apply useful defaults for all commands\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nThis is my cronjob default.\r\n\r\n.. code::\r\n\r\n  $ cat  ~/.mtv_dl.yml\r\n  high: true\r\n  dir: /media\r\n  target: '{dir}/{channel}/[{topic} {date}] {title}{ext}'\r\n\r\n.. code::\r\n\r\n  $ crontab -l\r\n  0 *\t* * * mtv_dl download --logfile=~/download.log --sets=~/shows.txt\r\n\r\n\r\nGet show details in JSON format\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n.. code::\r\n\r\n  $ mtv_dl dump hash=49ea2aa7\r\n  [\r\n      {\r\n          \"age\": \"17:15:00\",\r\n          \"channel\": \"ARD\",\r\n          \"description\": \"[...]\",\r\n          \"duration\": \"0:43:00\",\r\n          \"hash\": \"49ea2aa7\",\r\n          \"new\": false,\r\n          \"region\": \"\",\r\n          \"size\": 646,\r\n          \"start\": \"2017-08-10T22:45:00+02:00\",\r\n          \"title\": \"Extra 3 vom 10.08.2017\",\r\n          \"topic\": \"extra 3\",\r\n          \"url_http\": \"[...]\",\r\n          \"url_http_hd\": \"[...]\",\r\n          \"url_http_small\": \"[...]\",\r\n          \"url_subtitles\": \"\",\r\n          \"website\": \"[...]\"\r\n      }\r\n  ]\r\n\r\nInstallation\r\n------------\r\n\r\nRequirements:\r\n\r\n- python3.6 or later\r\n- everything in requirements.txt\r\n\r\nThe easiest way is to install using pip:\r\n\r\n.. code:: shell\r\n\r\n  $ python3 -m pip install mtv-dl\r\n\r\nSupport\r\n-------\r\n\r\nThis project is free and open source (MIT licensed). It's not very actively maintained but also not neglected. It's just here in case it's useful for somebody. \r\n\r\nFÃ¼r \"Issues\": Ich komme aus Dresden und spreche auch Deutsch.\r\n\r\nThis project is supported by:\r\n\r\n- .. image:: .Browserstack-logo.svg\r\n     :target: https://www.browserstack.com/\r\n     :width: 20% \r\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}