{
  "user": "liangliangyy",
  "name": "djangoblog",
  "namespace": "liangliangyy",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "https://github.com/liangliangyy/DjangoBlog",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 381,
  "last_updated": "2022-11-16T03:37:14.128009Z",
  "date_registered": "2022-03-31T04:33:39.551912Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "liangliangyy",
  "has_starred": false,
  "full_description": "# DjangoBlog\n\n🌍\n*[English](/docs/README-en.md) ∙ [简体中文](README.md)*\n\n基于`python3.8`和`Django4.0`的博客。   \n\n[![Django CI](https://github.com/liangliangyy/DjangoBlog/actions/workflows/django.yml/badge.svg)](https://github.com/liangliangyy/DjangoBlog/actions/workflows/django.yml) [![CodeQL](https://github.com/liangliangyy/DjangoBlog/actions/workflows/codeql-analysis.yml/badge.svg)](https://github.com/liangliangyy/DjangoBlog/actions/workflows/codeql-analysis.yml) [![codecov](https://codecov.io/gh/liangliangyy/DjangoBlog/branch/master/graph/badge.svg)](https://codecov.io/gh/liangliangyy/DjangoBlog)  [![license](https://img.shields.io/github/license/liangliangyy/djangoblog.svg)]()  \n\n## 主要功能：\n- 文章，页面，分类目录，标签的添加，删除，编辑等。文章、评论及页面支持`Markdown`，支持代码高亮。\n- 支持文章全文搜索。\n- 完整的评论功能，包括发表回复评论，以及评论的邮件提醒，支持`Markdown`。\n- 侧边栏功能，最新文章，最多阅读，标签云等。\n- 支持Oauth登陆，现已有Google,GitHub,facebook,微博,QQ登录。\n- 支持`Redis`缓存，支持缓存自动刷新。\n- 简单的SEO功能，新建文章等会自动通知Google和百度。\n- 集成了简单的图床功能。\n- 集成`django-compressor`，自动压缩`css`，`js`。\n- 网站异常邮件提醒，若有未捕捉到的异常会自动发送提醒邮件。\n- 集成了微信公众号功能，现在可以使用微信公众号来管理你的vps了。\n\n\n## 安装\nmysql客户端从`pymysql`修改成了`mysqlclient`，具体请参考 [pypi](https://pypi.org/project/mysqlclient/) 查看安装前的准备。\n\n使用pip安装： `pip install -Ur requirements.txt`\n\n如果你没有pip，使用如下方式安装：\n- OS X / Linux 电脑，终端下执行: \n\n    ```\n    curl http://peak.telecommunity.com/dist/ez_setup.py | python\n    curl https://bootstrap.pypa.io/get-pip.py | python\n    ```\n\n- Windows电脑：\n\n    下载 http://peak.telecommunity.com/dist/ez_setup.py 和 https://raw.github.com/pypa/pip/master/contrib/get-pip.py 这两个文件，双击运行。 \n\n\n## 运行\n\n 修改`djangoblog/setting.py` 修改数据库配置，如下所示：\n\n```python\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'djangoblog',\n        'USER': 'root',\n        'PASSWORD': 'password',\n        'HOST': 'host',\n        'PORT': 3306,\n    }\n}\n```\n\n### 创建数据库\nmysql数据库中执行:\n```sql\nCREATE DATABASE `djangoblog` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci */;\n```\n\n然后终端下执行:\n```bash\npython manage.py makemigrations\npython manage.py migrate\n```\n\n### 创建超级用户\n\n 终端下执行:\n```bash\npython manage.py createsuperuser\n```\n\n### 创建测试数据\n终端下执行:\n```bash\npython manage.py create_testdata\n```\n\n### 收集静态文件\n终端下执行:  \n```bash\npython manage.py collectstatic --noinput\npython manage.py compress --force\n```\n\n### 开始运行：\n执行： `python manage.py runserver`\n\n\n浏览器打开: http://127.0.0.1:8000/  就可以看到效果了。  \n\n## 服务器部署\n\n本地安装部署请参考 [DjangoBlog部署教程](https://www.lylinux.net/article/2019/8/5/58.html)\n有详细的部署介绍.    \n\n本项目已经支持使用docker来部署，如果你有docker环境那么可以使用docker来部署，具体请参考:[docker部署](/docs/docker.md)\n\n\n\n## 更多配置:\n[更多配置介绍](/docs/config.md)  \n[集成elasticsearch](/docs/es.md)\n\n## 问题相关\n\n有任何问题欢迎提Issue,或者将问题描述发送至我邮箱 `liangliangyy#gmail.com`.我会尽快解答.推荐提交Issue方式.  \n\n---\n ## 致大家🙋‍♀️🙋‍♂️\n 如果本项目帮助到了你，请在[这里](https://github.com/liangliangyy/DjangoBlog/issues/214)留下你的网址，让更多的人看到。\n您的回复将会是我继续更新维护下去的动力。 \n\n\n## 捐赠\n如果您觉得本项目对您有所帮助，欢迎您请我喝杯咖啡，您的支持是我最大的动力，您可以扫描下方二维码为我付款，谢谢。\n### 支付宝：\n<div>    \n<img src=\"https://resource.lylinux.net/image/2017/12/16/IMG_0207.jpg\" width=\"150\" height=\"150\" />\n</div>  \n\n### 微信：\n<div>    \n<img src=\"https://resource.lylinux.net/image/2017/12/16/IMG_0206.jpg\" width=\"150\" height=\"150\" />\n</div>\n\n---\n\n感谢jetbrains\n<div>    \n<a href=\"https://www.jetbrains.com/?from=DjangoBlog\"><img src=\"https://resource.lylinux.net/image/2020/07/01/logo.png\" width=\"150\" height=\"150\"></a>\n</div>\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.list.v2+json",
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}