{
  "user": "asapach",
  "name": "peerflix-server",
  "namespace": "asapach",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Streaming torrent client for node.js with web ui.",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 18,
  "pull_count": 48624,
  "last_updated": "2018-12-15T00:23:24.477606Z",
  "date_registered": "2015-04-06T10:54:18.278801Z",
  "collaborator_count": 1,
  "affiliation": null,
  "hub_user": "asapach",
  "has_starred": false,
  "full_description": "peerflix-server\n===============\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][travis-image]][travis-url]\n\n<img src=\"https://cdn.jsdelivr.net/gh/asapach/peerflix-server@master/app/images/logo.svg\" alt=\"logo\" height=\"256\">\n\nStreaming torrent client for node.js with web ui.\n\n![screen capture](https://cdn.jsdelivr.net/gh/asapach/peerflix-server@master/capture.gif)\n\nBased on [torrent-stream](https://github.com/mafintosh/torrent-stream), inspired by [peerflix](https://github.com/mafintosh/peerflix).\n\n## Usage\n\n1. `npm install -g peerflix-server`\n1. `peerflix-server`\n1. Open your browser at [http://localhost:9000/](http://localhost:9000/)\n1. Enjoy!\n\n## Configuration\n\nYou can configure the application using `~/.config/peerflix-server/config.json` file (doesn't exist by default).\nThe [options](https://github.com/mafintosh/torrent-stream#full-api) are passed to all torrent-stream instances.\nHere's an example that overrides the defaults:\n\n```json\n{\n  \"connections\": 50,\n  \"tmp\": \"/mnt/torrents\"\n}\n```\n\nYou can also change the default port by setting `PORT` environment variable:\n\n```sh\nPORT=1234 peerflix-server\n\n# or on windows\nSET PORT=1234\npeerflix-server\n```\n\nThe application stores its current state (list of torrents) in `~/.config/peerflix-server/torrents.json`\n\n## Daemon\n\nIf you want to run peerflix-server as a daemon, you can do it using [forever](https://github.com/foreverjs/forever):\n\n```sh\nnpm install -g forever\n```\n\n```sh\nforever start $(which peerflix-server)\n```\n\nYou might also want to enable logging -- see the [docs](https://github.com/foreverjs/forever#command-line-usage).\n\n## FAQ\n\n[How do I add password protection?](https://github.com/asapach/peerflix-server/wiki/How-to-put-a-password-on-peerflix-server)\n\n## Development\n\nSee [Development.md](Development.md)\n\n## REST API\n\nSee [REST.md](REST.md)\n\n## Docker\n\nSee [Docker.md](Docker.md)\n\n[npm-image]: https://img.shields.io/npm/v/peerflix-server.svg?style=flat\n[npm-url]: https://npmjs.org/package/peerflix-server\n[node-version-image]: https://img.shields.io/node/v/peerflix-server.svg?style=flat\n[node-version-url]: http://nodejs.org/download/\n[travis-image]: https://img.shields.io/travis/asapach/peerflix-server.svg?style=flat\n[travis-url]: https://travis-ci.org/asapach/peerflix-server\n[downloads-image]: https://img.shields.io/npm/dm/peerflix-server.svg?style=flat\n[downloads-url]: https://npmjs.org/package/peerflix-server\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}