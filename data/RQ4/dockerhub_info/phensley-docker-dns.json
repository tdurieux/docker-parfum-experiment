{
  "user": "phensley",
  "name": "docker-dns",
  "namespace": "phensley",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Self-contained automatic DNS",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 54,
  "pull_count": 1048630,
  "last_updated": "2021-05-15T09:38:30.639669Z",
  "date_registered": "2014-10-08T21:19:02.185767Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "phensley",
  "has_starred": false,
  "full_description": "docker-dns\n----------\n\nAutomatic container DNS for [Docker][docker] in a single Python file.\n\nNote that [docker-dns-rest][dns-rest] expands on this, adding a REST API to add and remove domain names dynamically, allowing multiple domain names to be associated with containers, either by name or container ID.  It also includes support for wildcards.\n\n[docker]: http://github.com/docker/docker \"Docker\"\n[dns-rest]: http://github.com/phensley/docker-dns-rest \"docker-dns-rest\"\n\nUsage\n-----\n\nRun some containers:\n\n    % docker run -d --name foo ubuntu bash -c \"sleep 600\"\n\nStart up dockerdns:\n\n    % docker run -d --name dns -v /var/run/docker.sock:/docker.sock phensley/docker-dns \\\n        --domain example.com\n\nIf your Docker instance uses TLS:\n\n    % docker run --name dns -e DOCKER_HOST=https://<host>:<port> --rm phensley/docker-dns --domain example.com\n\nStart more containers:\n\n    % docker run -d --name bar ubuntu bash -c \"sleep 600\"\n\nCheck dockerdns logs:\n\n    % docker logs dns\n    2014-10-08T20:45:37.349161 [dockerdns] table.add dns.example.com -> 172.17.0.3\n    2014-10-08T20:45:37.351574 [dockerdns] table.add foo.example.com -> 172.17.0.2\n    2014-10-08T20:45:37.351574 [dockerdns] table.add bar.example.com -> 172.17.0.4\n\nQuery for the containers by hostname:\n\n    % host foo.example.com 172.17.0.3\n    Using domain server:\n    Name: 172.17.0.3\n    Address: 172.17.0.3#53\n    Aliases:\n\n    foo.example.com has address 172.17.0.2\n\nQuery by IP address:\n\n    % host 172.17.0.2 172.17.0.3\n    Using domain server:\n    Name: 172.17.0.3\n    Address: 172.17.0.3#53\n    Aliases:\n\n    2.0.17.172.in-addr.arpa domain name pointer bar.example.com.\n    2.0.17.172.in-addr.arpa domain name pointer 5046e96685a2.example.com.\n\nUse dns container as a resolver inside a container:\n\n    % docker run -it --dns $(docker inspect -f '{{.NetworkSettings.IPAddress}}' dns) \\\n        --dns-search example.com ubuntu bash\n        \n>ðŸ’¡ Tipï¼šAs we don't add `-d` option, we will login this docker container. And the following steps are done in this docker container. \n\n    root@95840788bf08:/# cat /etc/resolv.conf\n    nameserver 172.17.0.3\n    search example.com\n\n    root@95840788bf08:/# ping foo\n    PING foo.example.com (172.17.0.2) 56(84) bytes of data.\n    64 bytes from 172.17.0.2: icmp_seq=1 ttl=64 time=0.112 ms\n    64 bytes from 172.17.0.2: icmp_seq=2 ttl=64 time=0.112 ms\n\nNames not rooted in `example.com` will be resolved recursively using Google's resolver `8.8.8.8` by default:\n\n    root@95840788bf08:/# ping github.com\n    PING github.com (192.30.252.128) 56(84) bytes of data.\n    64 bytes from 192.30.252.128: icmp_seq=1 ttl=61 time=21.3 ms\n\nTo disable recursive resolution, use the `--no-recursion` flag:\n\n    % docker run --name dns -v /var/run/docker.sock:/docker.sock phensley/docker-dns \\\n        --domain example.com --no-recursion\n\nNow names not rooted in `example.com` will fail to resolve:\n\n    % docker run -it --dns $(docker inspect -f '{{.NetworkSettings.IPAddress}}' dns) \\\n        --dns-search example.com ubuntu bash\n    root@4d15342387b0:/# ping github.com\n    ping: unknown host github.com\n\nPointing a subdomain to some IP\n\n    % docker run --name dns -v /var/run/docker.sock:/docker.sock phensley/dock$\n        --domain example.com --record localhost:127.0.0.1\n\n    # This will cause localhost.example.com to resolve to 127.0.0.1\n\nPointing all subdomains to some IP\n\n    % docker run --name dns -v /var/run/docker.sock:/docker.sock phensley/doc$\n        --domain example.com --record *:172.18.0.4\n\n    # This makes everything not explicitly set as a subdomain to resolve to 172.18.0.4.\n    # Useful when your reverse proxy is there.\n\nLicense\n-------\n\n    Copyright (c) 2014 Patrick Hensley\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}