{
  "user": "yeeco",
  "name": "yeeroot",
  "namespace": "yeeco",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Prebuilt docker images for https://github.com/yeeco/yeeroot",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 867,
  "last_updated": "2020-11-04T07:07:45.20772Z",
  "date_registered": "2019-07-30T10:00:43.75466Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "yeeco",
  "has_starred": false,
  "full_description": "# yeeroot\n\n[![standard-readme compliant](https://img.shields.io/badge/readme%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/RichardLitt/standard-readme)\n\n> Official implementation of the YeeCo Root Chain (Layer 1)\n\nYeeCo is a permissionless, secure, high performance and scalable public blockchain platform powered by full sharding technology on PoW consensus.\n\nüì£ YeeCo Mainnet launched! (2020-08-10)\n\n## Latest release\n\n - [v1.3.0](https://github.com/yeeco/yeeroot/releases/tag/v1.3.0)\n    ‚ö†Ô∏è mandatory release (2020-11-04)\n - [v1.2.0](https://github.com/yeeco/yeeroot/releases/tag/v1.2.0) \n    ‚ö†Ô∏è mandatory release (2020-10-23)\n - [v1.1.1](https://github.com/yeeco/yeeroot/releases/tag/v1.1.1) \n    ‚ö†Ô∏è Hard fork release (2020-10-01)\n\n## Table of Contents\n\n- [Description](#description)\n- [Install](#install)\n- [Usage](#usage)\n- [Roadmap](#roadmap)\n- [Contributing](#contributing)\n- [License](#license)\n\n## Description\n\nYeeco takes advantage of the 4 key mechanisms as follows:\n\n1. PoW (permissionless and secure)\n2. Full sharding (high performance and scalable)\n3. Multi-mining (resist 1% attack)\n4. CRFG (conditional reward finality gadget, introduce absolute finality on PoW to support lock-free cross shard transactions)\n\n![](https://raw.githubusercontent.com/yeeco/wiki/master/assets/images/yeeco-mechanisms.jpg)\n\n## Install\n\n### Requirements\n1. Rust\n    ```sh\n    curl https://sh.rustup.rs -sSf | sh\n    ```\n1. Openssl\n1. Rust nightly\n    ```sh\n    rustup toolchain add nightly\n    ```\n1. rust nightly wasm\n    ```sh\n    rustup target add wasm32-unknown-unknown\n    rustup target add wasm32-unknown-unknown --toolchain nightly\n    ```\n1. wasm-gc\n    ```sh\n    cargo install wasm-gc\n    ```\n1. Rust components: clippy rls docs src rustfmt\n    ```sh\n    rustup component list # list all the components installed\n    rustup component add <name> # install component\n    ```\n\n### Building\n```sh\n$ cd <project_base_dir>/runtime/wasm\n$ sh build.sh\n$ cd <project_base_dir>\n$ cargo build\n```\n\n## Usage\n\n### Start\n\n1. Start bootnodes router.\n    ```sh\n    $ ./yee bootnodes-router --dev-params\n    ```\n    Bootnodes router provides the bootnodes for each shard.\n    \n    You can try getting the bootnodes by the following RPC: \n    ```sh\n    $ curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"bootnodes\",\"params\":[],\"id\":1}' localhost:50001 -H 'Content-Type: application/json'\n    ```\n\n1. Start the nodes of the 4 shards\n    ```sh\n    $ ./yee --dev --dev-params --shard-num=0 --base-path=/tmp/yee/shard_0\n    $ ./yee --dev --dev-params --shard-num=1 --base-path=/tmp/yee/shard_1\n    $ ./yee --dev --dev-params --shard-num=2 --base-path=/tmp/yee/shard_2\n    $ ./yee --dev --dev-params --shard-num=3 --base-path=/tmp/yee/shard_3\n    ```\n    Since we start the node without `--mine`, it will not mine new blocks.\n\n\n1. Start switch\n    ```sh\n    $ ./yee switch --dev-params --mine\n    ```\n    Switch provides proxy rpc of all the 4 shards.\n    You can get the balance of a certain address of any shard by the following RPC: \n    ```sh\n    $ curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"state_getBalance\",\"params\":[\"tyee15c2cc2uj34w5jkfzxe4dndpnngprxe4nytaj9axmzf63ur4f8awq806lv6\"],\"id\":1}' localhost:10033 -H 'Content-Type: application/json'\n    ```\n    \n    Switch can also work as a multi-miner. Since we start the switch with `--mine`, it will mine on the 4 shards.\n\n#### Accounts\n\nTest accounts: \n    \n```\nAddress                                                            Shard num    Private key\ntyee1jfakj2rvqym79lmxcmjkraep6tn296deyspd9mkh467u4xgqt3cqkv6lyl    0            0xa8666e483fd6c26dbb6deeec5afae765561ecc94df432f02920fc5d9cd4ae206ead577e5bc11215d4735cee89218e22f2d950a2a4667745ea1b5ea8b26bba5d6\ntyee15zphhp8wmtupkf3j8uz5y6eeamkmknfgs6rj0hsyt6m8ntpvndvsmz3h3w    1            0x40e17c894e03256ea7cb671d79bcc88276c3fd6e6a05e9c0a9546c228d1f4955d8f18e85255020c97764251977b77f3b9e18f4d6de7b62522ab29a49cede669f\ntyee14t6jxhs885azsd9v4t75cre9t4crv6a89q2vg8472u3tvwm3f94qgr9w77    2            0x708084bc9da56d9d1b201f50830269887ff2ef74e619c6af6ba7cf506068326f7cc9c4d646c531e83507928114ff9ef66350c62dfda3a7c5d2f0d9e0c37e7750\ntyee12n2pjuwa5hukpnxjt49q5fal7m5h2ddtxxlju0yepzxty2e2fads5g57yd    3            0xa079ef650520662d08f270c4bc088f0c61abd0224f58243f6d1e6827c3ab234a7a1a0a3b89bbb02f2b10e357fd2a5ddb5050bc528c875a6990874f9dc6496772\n```\n    \n### Revert\nyou can revert the chain to certain number by `revert`\n```bash\n$ ./yee revert --shard-num=0 --base-path=/tmp/yee/shard_0 --target=\"{\\\"0\\\":1024, \\\"1\\\": 1024, \\\"2\\\": 1024, \\\"3\\\": 1024}\"\n```\n\n## Roadmap\n1. **[Done]** PoC-1: Tetris consensus demo (2019-02)\n\n     [tetris_demo](https://github.com/yeeco/tetris_demo)\n2. **[Done]** PoC-2: Transfer feature based on Tetris (2019-05)\n\n     [gyee](https://github.com/yeeco/gyee)\n1. **[Done]** PoC-3: PoW consensus, static sharding (2019-07)\n    \n    [Release notes](https://github.com/yeeco/wiki/blob/master/docs/release-notes/poc3-release-notes.md)\n1. **[Done]** PoC-4: Multi-mining, cross-shard transactions (2019-09)\n\n    [Release notes](https://github.com/yeeco/wiki/blob/master/docs/release-notes/poc4-release-notes.md)\n1. **[Done]** PoC-5: Dynamic sharding (2019-11)\n\n    [Release notes](https://github.com/yeeco/wiki/blob/master/docs/release-notes/poc5-release-notes.md)\n1. **[Done]** PoC-6: Cross chain (interoperate with branch chain) (2019-12)\n\n    [Release notes](https://github.com/yeeco/wiki/blob/master/docs/release-notes/poc6-release-notes.md)\n1. **[Done]** PoC-7: Smart contract (on branch chain) (2020-02-14)\n\n    [Release notes](https://github.com/yeeco/wiki/blob/master/docs/release-notes/poc7-release-notes.md)\n\n1. **[Done]** Testnet (2020-03)\n\n    [Release notes](https://github.com/yeeco/wiki/blob/master/docs/release-notes/testnet-release-notes.md)\n    \n1. **[Done]** Mainnet (2020-Q3)\n\n    [Release notes](https://github.com/yeeco/wiki/blob/master/docs/release-notes/mainnet-release-notes.md)\n\n## Contributing\n\nFeel free to dive in! [Open an issue](./issues/new).\n\n### Contributors\n\n\n## License\n\n[GPL](LICENSE)",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}