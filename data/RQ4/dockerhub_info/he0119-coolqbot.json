{
  "user": "he0119",
  "name": "coolqbot",
  "namespace": "he0119",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "基于 NoneBot2 的聊天机器人",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 2786,
  "last_updated": "2023-01-05T12:01:27.40527Z",
  "date_registered": "2018-08-15T02:50:26.998721Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "he0119",
  "has_starred": false,
  "full_description": "# 聊天机器人\n[![Build Status](https://dev.azure.com/he0119/CoolQBot/_apis/build/status/he0119.CoolQBot?branchName=master)](https://dev.azure.com/he0119/CoolQBot/_build/latest?definitionId=5&branchName=master)\n\n该机器人利用了\n[酷Q](https://cqp.cc/)\n、\n[CoolQ HTTP API 插件](https://github.com/richardchien/coolq-http-api)\n以及\n[CQHttp Python SDK with Asynchronous I/O](https://github.com/richardchien/python-aiocqhttp)\n来实现消息接收和发送的功能。\n\n这只是一个随便写写的机器人，主要工作就是按照一定的规则进行复读 ~~(模仿人类)~~，其他功能都是增加可玩性的。\n\n## 运行\n1. 新建一个 `coolq` 文件夹，并在 `/coolq/bot/` 文件夹下复制并重命名 `bot.conf.example` 为 `bot.conf` 填入对应配置。\n\n2. 提供了 `Docker Image`，使用以下命令即可运行。\n```shell\nsudo docker pull he0119/coolqbot:latest && \\\nsudo docker run -d --restart always --name coolqbot\n  -v $(pwd)/coolq:/home/user/coolq \\  # 将宿主目录挂载到容器内用于持久化酷 Q 的程序文件\n  -p 9000:9000 \\  # noVNC 端口，用于从浏览器控制酷 Q\n  -e COOLQ_ACCOUNT=2062765419 \\ # 要登录的 QQ 账号，可选但建议填\n  -e VNC_PASSWD=12345687 \\ # noVNC 的密码（官方说不能超过 8 个字符，但实测可以超过）\n  he0119/coolqbot:latest\n# docker run -ti --rm --name coolqbot-test \\\n#   -e COOLQ_URL=http://dlsec.cqp.me/cqp-tuling \\ #专业版\n```\n3. 所有配置数据都在 `/coolq/bot/` 下。",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json",
    "application/vnd.docker.distribution.manifest.v1+prettyjws",
    "application/vnd.docker.distribution.manifest.list.v2+json"
  ],
  "content_types": [
    "image"
  ]
}