{
  "user": "fador",
  "name": "mineserver",
  "namespace": "fador",
  "repository_type": null,
  "status": 1,
  "status_description": "active",
  "description": "Custom Minecraft server software written in C++",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 2,
  "pull_count": 104,
  "last_updated": "2016-03-13T14:43:37.901365Z",
  "date_registered": "2016-03-13T14:36:34.549986Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "fador",
  "has_starred": false,
  "full_description": "# Mineserver\n*by Fador & Nredor and others*\n\nCustom Minecraft server software written in C++.\n\nYou can find the core team from #mineserver @ irc.freenode.net Also mail to developers@mineserver.be will reach us.\n\n    Copyright (c) 2010-2016, The Mineserver Project\n\n**NOTICE:** Server still lacks features compared to original minecraft server.\n\n\n**Supported platforms**\n\n * Linux (CMake)\n * Windows (VS2013 project included, CMake not tested)\n \nServer has also been tested to build on Mac OS X and FreeBSD/PCBSD but we do not officially support those.\n\nWe are trying to minimize memory and CPU usage compared to original Java server.\n\n*Important:* The language is C++11, so you will need a reasonably modern\nC++ compiler. MS Visual C++ 12 and GCC 4.8 should be sufficient. The build system requires [cmake](http://www.cmake.org/).\n\n\n### Supported Minecraft version\n\n * Working with 1.8.9 client (protocol 47)\n\n### Features\n\n * Plugins (chatcommands, filelog, nether, passivemobs, etc..)\n * NBT parsing/saving\n * Lightmap generation\n * Config file\n * Normal mining/item spawning/item pickups\n * Basic physics for gravel and sand\n * Physics for water (currently revising this)\n * Flatland and terrain map generation (Also biomegen!)\n * Working chests, furnaces & signs\n * User validation from minecraft.net\n * Protocol Encryption\n\n### Configuration Notes\n\nAn example `config.cfg` file is located in the `files` subdirectory.\n\nThe config file sets three path names and one file name which are relevant to the server; with their example values they are:\n\n    system.path.data    = \"files\";\n    system.path.plugins = \"plugins\";\n    system.path.home    = \".\";\n    system.pid_file     = \"mineserver.pid\";\n\nThese paths may be either absolute or relative. The server requires a set of configuration files which are located in the `files` subdirectory\nof the distribution. \n\nThe plugin binaries must be manually placed in the appropriate location for the server to find them.\n\n\n### Bug Tracker / To Do / Roadmap\n\nWe use GitHub issue tracker and milestones.\nPlease check the wiki pages for details about the project status and development plans.\nCheck the [fork network](https://github.com/fador/mineserver/network) for the latest development status.\n\n### Compiling\n\nMineserver requires the following libraries:\n\n * [zlib 1.2.5](http://www.zlib.org)\n * [libevent 2.0.x](http://libevent.org/)\n * [libnoise 1.0](http://libnoise.sourceforge.net/)\n * [openssl/libssl](http://www.openssl.org/)\n * [pthread](http://en.wikipedia.org/wiki/POSIX_Threads)\n\n * Installing on Debian and Ubuntu:\n\n    `sudo apt-get install libssl libssl-dev libevent-2.0 libevent-dev zlib1g zlib1g-dev libnoise-dev`\n\n * Installing on CentOS and RHEL\n\n    `# Install EPEL (Extra Packages for Enterprise Linux)`\n    `sudo su -c 'rpm -Uvh http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-4.noarch.rpm'`\n    `sudo yum install git libevent libevent-devel zlib zlib-devel libnoise-dev`\n\n * Installing on FreeBSD / PCBSD\n\n    `sudo pkg_add -r libevent`\n\n * Installing on Mac OS X\n    * Install libevent using your favourite tool, e.g., homebrew, fink or macports.\n    * Installing libnoise can be painful. Howerver, there is a homebrew formular\n      on [krono's homebrew fork](http://github.com/krono/homebrew).\n\n    So for homebrew do\n\n    `brew install libevent libnoise`\n\n\n**Compiling using Linux (cmake & make & g++):**\n\n * Download and extract source or use `git clone git://github.com/fador/mineserver.git`\n * Go to mineserver directory\n * Run `cmake .`\n * Run `make all`\n * Run server with `cd bin && ./mineserver`\n\n**Compiling using FreeBSD / PCBSD (cmake & gmake & g++):**\n\n * Download and extract source or use `git clone git://github.com/fador/mineserver.git`\n * Go to mineserver directory\n * Run `cmake .`\n * Run `gmake all`\n * Run server with `cd bin && ./mineserver`\n\n**Compiling using Windows (VS2013): (Might be outdated)**\n\n * Download and compile [zlib](http://www.zlib.org) or use [pre-built binaries](http://www.winimage.com/zLibDll/index.html)\n * Add zlib libraries to project (zlibstat.lib or zlibwapi.lib which requires also zlibwapi.dll in the same dir with the executable)\n * Download and compile [libevent 2.0.x](http://monkey.org/~provos/libevent/)\n * Download [libnoise 1.0](http://libnoise.sourceforge.net/) and add header/library files to project\n * Add libevent library to project (libevent2.lib)\n * Build\n * Run mineserver.exe\n \n * [Build Pack](http://mineserver.be/downloads/mineserver-VS2013_build_pack.zip) also available for easy compiling\n\n An example using commandline compiler available at http://www.microsoft.com/express/Windows/ Please change the ZLIB_INC_DIR, LIBEVENT_INC_DIR, ZLIB_LIB_DIR and LIBEVENT_LIB_DIR to those you keep the includes/libs.\n\n    call \"%VS120COMNTOOLS%vsvars32.bat\"\n    cl /I\"ZLIB_INC_DIR;LIBEVENT_INC_DIR\" /W3 /WX- /O2 /D ZLIB_WINAPI /D WIN32 /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /EHsc *.cpp zlibwapi.lib libevent2.lib Ws2_32.lib /link /OUT:mineserver.exe /LIBPATH:\"ZLIB_LIB_DIR;LIBEVENT_LIB_DIR\"\n\n\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.v1+prettyjws"
  ],
  "content_types": [
    "image"
  ]
}