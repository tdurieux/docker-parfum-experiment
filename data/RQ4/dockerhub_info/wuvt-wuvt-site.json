{
  "user": "wuvt",
  "name": "wuvt-site",
  "namespace": "wuvt",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Website including a CMS, playlist information, and donation management tools.",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 315,
  "last_updated": "2021-07-06T03:56:56.355856Z",
  "date_registered": "2018-10-14T00:43:35.850983Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "wuvt",
  "has_starred": false,
  "full_description": "## wuvt-site\nThis is the next-generation website for [WUVT-FM](https://www.wuvt.vt.edu), \nVirginia Tech's student radio station.\n\nIt includes both a basic content management and simple donation system. It also\nintegrates with Trackman to provide live track information and playlists.\n\n### Deployment\nThese instructions are for Linux; instructions for other platforms may vary.\n\nFirst, clone the repo, create an empty config, and build the appropriate Docker\nimage for your environment. We provide Dockerfile.dev which is configured to\nuse SQLite and runs Redis directly in the image, and Dockerfile, which is\nrecommended for production deployments as it does not run any of the required\nservices inside the container itself.\n\nFor Dockerfile.dev:\n```\ngit clone https://github.com/wuvt/wuvt-site.git\ncd wuvt-site\ndocker build -t wuvt-site -f Dockerfile.dev .\n```\n\nNow, go ahead and copy config/config_example.json to config/config.json and\nconfigure as necessary. The most important thing is to set a random value for\n`SECRET_KEY`. You can generate a random value using the following command:\n```\nxxd -l 28 -p /dev/urandom\n```\n\nFinally, run it:\n```\ndocker run --rm -v $PWD/config:/data/config -e APP_CONFIG_PATH=/data/config/config.json -p 9070:8080 wuvt-site:latest\n```\n\nYou can now access the site at <http://localhost:9070/>. An admin user account\nwill be created for you; the password is automatically generated and displayed\nwhen you launch the container.\n\n### Non-Docker Deployment\nFirst, install redis. For example, on Debian or Ubuntu:\n\n```\napt-get install redis\n```\n\nYou'll also want to get uWSGI. You need at least version 2.0.9. For example:\n\n```\napt-get install uwsgi uwsgi-core uwsgi-plugin-python\n```\n\nNow, build the SSE offload plugin. For example, on Debian:\n\n```\napt-get install uuid-dev libcap-dev libpcre3-dev\nuwsgi --build-plugin https://github.com/wuvt/uwsgi-sse-offload\nsudo cp sse_offload_plugin.so /usr/lib/uwsgi/plugins/\n```\n\nMake sure the redis daemon is running; on Debian, this will happen\nautomatically.\n\nIt is recommended that you use a virtualenv for this so that you can better\nseparate dependencies:\n\n```\nmkdir -p ~/.local/share/virtualenv\nvirtualenv ~/.local/share/virtualenv/wuvt-site\nsource ~/.local/share/virtualenv/wuvt-site/bin/activate\n```\n\nNow, within this virtualenv, install the dependencies:\n\n```\npip install -r requirements.txt\n```\n\nNext, clone the repo:\n\n```\ngit clone https://github.com/wuvt/wuvt-site.git\ncd wuvt-site\n```\n\nCreate a blank file, wuvt/config.py; you can override any of the default\nconfiguration options here if you so desire. You'll definitely need to set a\nvalue for `SECRET_KEY`. Next, you will need to render images, create the\ndatabase, and add some sample content to the site:\n\n```\nexport FLASK_APP=$PWD/wuvt/__init__.py\nflask render_images && flask initdb && flask sampledata\n```\n\nFinally, start uWSGI:\n\n```\nuwsgi --ini uwsgi.ini:dev\n```\n\nYou can now access the site at http://localhost:9070/\n\n### License\n\nBesides the exceptions noted below, the entirety of this software is available\nunder the GNU Affero General Public License:\n\n```\nCopyright 2012-2018 James Schwinabart, Calvin Winkowski, Matt Hazinski.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n```\n\nThe following files are JavaScript libraries, freely available under the MIT\nlicense as noted in their headers:\n* wuvt/static/js/jquery.js\n* wuvt/static/js/jquery.dataTables.min.js\n* wuvt/static/js/moment.min.js\n\nThe following font file was designed by Humberto Gregorio and is in the public\ndomain:\n* wuvt/static/fonts/sohoma_extrabold.woff\n\nOther included fonts (in wuvt/static/fonts) are not covered under this license.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}