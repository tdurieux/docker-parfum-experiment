{
  "user": "mdhiggins",
  "name": "sonarr-sma",
  "namespace": "mdhiggins",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "sonarr with sickbeard_mp4_automator",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 22,
  "pull_count": 6237003,
  "last_updated": "2023-01-06T05:15:30.224677Z",
  "date_registered": "2018-07-13T20:18:26.403787Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "mdhiggins",
  "has_starred": false,
  "full_description": "# Official SMA container based on linuxserver/sonarr\n\nDocker container for Sonarr that includes all FFMPEG and python requirements to run SMA with Sonarr.\n\n## Version Tags\n\n|Tag|Description|\n|---|---|\n|latest|Stable release from Sonarr with precompiled FFMPEG binaries|\n|build|Stable release from Sonarr with FFMPEG compiled from jrottenberg/ffmpeg|\n|preview|Preview release from Sonarr with precompiled FFMPEG binaries|\n\n## Usage\n\n### Recent update\nAs of 3/9/2020 the containers were overhauled and the location of the script was changed from `/usr/local/bin/sma/sickbeard_mp4_automator` to `/usr/local/sma`. The autoProcess mount point has been modified as well to be more docker friendly in a `/usr/local/sma/config` directory. Please review and update accordingly.\n\n### docker-compose\n~~~\nservices:\n  sonarr:\n    image: mdhiggins/sonarr-sma\n    container_name: sonarr\n    volumes:\n      - /opt/appdata/sonarr:/config\n      - /opt/appdata/sma:/usr/local/sma/config\n      - /mnt/storage/tv:/tv\n      - /mnt/storage/downloads:/downloads\n    ports:\n      - 8989:8989\n    restart: always\n    environment:\n      - PUID=${PUID}\n      - PGID=${PGID}\n~~~\n\n### autoProcess.ini\n- Mount autoProcess.ini containing directory to `/usr/local/sma/config` using volumes\n - Consider making this writable as new options will be auto written to the config as they are added\n- Sonarr configuration options are read from `config.xml` inside the container and injected at runtime into `autoProcess.ini`\n - ffmpeg\n - ffprobe\n - host (read from environment variable or set to 127.0.0.1)\n - web_root\n - port\n - ssl\n\n### FFMPEG Binaries\n- `/usr/local/bin/ffmpeg`\n- `/usr/local/bin/ffprobe`\n\n## Configuring Sonarr\n\n###  Enable completed download handling\n- Settings > Download Client > Completed Download Handling > Enable: Yes\n\n### Add Custom Script\n- Settings > Connect > + Add > Custom Script\n\n|Parameter|Value|\n|---|---|\n|On Grab| No|\n|On Download| Yes|\n|On Upgrade| Yes|\n|On Rename| No|\n|Path|`/usr/local/sma/postSonarr.sh`|\n\n## Logs\n\nLocated at `/usr/local/sma/config/sma.log` inside the container and your mounted config folder\n\n## Environment Variables\n|Variable|Description|\n|---|---|\n|PUID|User ID|\n|PGID|Group ID|\n|HOST|Local IP address for callback requests, default `127.0.0.1`|\n|SMA_PATH|`/usr/local/sma`|\n|SMA_UPDATE|Default `false`. Set `true` to pull git update of SMA on restart|\n\n## Special Considerations\nUsing the `build` tag leverages mulit-stage docker builds to generate FFMPEG compiled using [jrottenberg/ffmpeg's](https://hub.docker.com/r/jrottenberg/ffmpeg) containers. This allows flexibility with building FFMPEG using special options such as VAAPI or NVENC. Building locally allows `ARG` values to be set to change the underlying parent container tags as below\n\n|ARG|Default|Description|\n|---|---|---|\n|ffmpeg_tag|latest|Set tag to correspond to jrottenberg/ffmpeg:tag|\n|sonarr_tag|latest|Set tag to correspond to linuxserver/sonarr:tag|\n\n### VAAPI docker-compose sample\n~~~\nservices:\n  sonarr:\n    container_name: sonarr\n    build:\n      context: https://github.com/mdhiggins/sonarr-sma.git#build\n      args:\n        - ffmpeg_tag=4.2-vaapi\n~~~\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json",
    "application/vnd.docker.distribution.manifest.list.v2+json"
  ],
  "content_types": [
    "image"
  ]
}