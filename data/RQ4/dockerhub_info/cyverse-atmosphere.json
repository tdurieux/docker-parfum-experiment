{
  "user": "cyverse",
  "name": "atmosphere",
  "namespace": "cyverse",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Where cloud lives.",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 1023,
  "last_updated": "2021-07-26T20:31:24.700447Z",
  "date_registered": "2019-06-04T22:56:57.468438Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "cyverse",
  "has_starred": false,
  "full_description": "# atmosphere :cloud:\n\n[![Build Status](https://travis-ci.org/cyverse/atmosphere.svg?branch=master)](https://travis-ci.org/cyverse/atmosphere)\n[![Coverage](https://coveralls.io/repos/github/cyverse/atmosphere/badge.svg?branch=master)](https://coveralls.io/github/cyverse/atmosphere?branch=master)\n[![Code Health](https://landscape.io/github/cyverse/atmosphere/master/landscape.svg?style=flat)](https://landscape.io/github/cyverse/atmosphere/master)\n\nAtmosphere addresses the growing needs for highly configurable and customized computational resources to support research efforts in plant sciences. Atmosphere is an integrative, private, self-service cloud computing platform designed to provide easy access to preconfigured, frequently used analysis routines, relevant algorithms, and data sets in an available-on-demand environment designed to accommodate computationally and data-intensive bioinformatics tasks.\n\n## Installation\n\nInstall the required python packages\n```\npip install -r requirements.txt\n```\n\nA separate environment is provided for developers\n```\npip install -r dev_requirements.txt\n```\n\nThe `*requirements.txt` files are generated using\n[pip-tools](https://github.com/jazzband/pip-tools). See\n[REQUIREMENTS.md](REQUIREMENTS.md) for instructions on using pip-tools and\nupgrading packages in Atmosphere.\n\n## Some Features\n\n+ A powerful web client for management and administration of virtual machines\n+ A fully RESTful API service for integrating with existing infrastructure components\n+ Virtual machine images preconfigured for computational science and iPlant's infrastructure\n\n## Running scripts\n\nThere are several utility scripts in `./scripts`. To run these:\n```\ncd <path to atmosphere>\nexport DJANGO_SETTINGS_MODULE='atmosphere.settings'\nexport PYTHONPATH=\"$PWD:$PYTHONPATH\"\npython scripts/<name of script>\n```\n\n## Contributing\n\nSee [HACKING.md](./HACKING.md).\n\n### Coding Style\nWe rely on a tool to format the codebase. If you install from\n`dev_requirements.txt`, the `yapf` binary will be in your environment.\n\n```\nyapf --in-place --parallel   -- $(git ls-files | grep '\\.py$')\n```\n\n\nWhen master is pulled, it's helpful to know if a `pip install` or a `manage.py\nmigrate` is necessary. To get other helpful warnings:\n```bash\nln -s $(pwd)/contrib/post-merge.hook $(pwd)/.git/hooks/post-merge\n```\n\n### Coding Conventions\n\n#### Import ordering\nImports should be grouped into the sections below and in sorted order.\n\n1. Standard libraries\n2. Third-party libraries\n3. External project libraries\n4. Local libraries\n\n## License\n\nSee LICENSE.txt for license information\n\n## Lead\n\n+ **Edwin Skidmore <edwin@cyverse.org>**\n\n## Authors\n\nThe following individuals who have help/helped make :cloud: great appear in alphabetic order, by surname.\n\n+ **Evan Briones <cloud-alum@cyverse.org>**\n+ **Tharon Carlson <tharon@cyverse.org>**\n+ **Joseph Garcia <cloud-alum@cyverse.org>**\n+ **Steven Gregory <cloud-alum@cyverse.org>**\n+ **Jason Hansen <cloud-alum@cyverse.org>**\n+ **Christopher James LaRose <cloud-alum@cyverse.org>**\n+ **Amit Juneja <cloud-alum@cyverse.org>**\n+ **Andrew Lenards <lenards@cyverse.org>**\n+ **Monica Lent <cloud-alum@cyverse.org>**\n+ **Chris Martin <cmart@cyverse.org>**\n+ **Calvin Mclean <calvinmclean@cyverse.org>**\n+ **Andre Mercer <cloud-alum@cyverse.org>**\n+ **Connor Osborn <connor@cyverse.org>**\n+ **J. Matt Peterson <cloud-alum@cyverse.org>**\n+ **Julian Pistorius <julianp@cyverse.org>**\n\nWhere the cloud lives!\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}