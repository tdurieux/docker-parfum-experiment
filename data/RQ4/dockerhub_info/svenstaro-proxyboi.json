{
  "user": "svenstaro",
  "name": "proxyboi",
  "namespace": "svenstaro",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "A super simple reverse proxy with TLS support",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 13548,
  "last_updated": "2022-08-15T05:16:48.255597Z",
  "date_registered": "2019-09-05T08:10:38.947277Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "svenstaro",
  "has_starred": false,
  "full_description": "# proxyboi\n\n<a href=\"https://repology.org/project/proxyboi/versions\"><img align=\"right\" src=\"https://repology.org/badge/vertical-allrepos/proxyboi.svg\" alt=\"Packaging status\"></a>\n\n[![CI](https://github.com/svenstaro/proxyboi/workflows/Build/badge.svg)](https://github.com/svenstaro/proxyboi/actions)\n[![Docker Cloud Build Status](https://img.shields.io/docker/cloud/build/svenstaro/proxyboi)](https://cloud.docker.com/repository/docker/svenstaro/proxyboi/)\n[![Crates.io](https://img.shields.io/crates/v/proxyboi.svg)](https://crates.io/crates/proxyboi)\n[![license](http://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/svenstaro/proxyboi/blob/master/LICENSE)\n[![Stars](https://img.shields.io/github/stars/svenstaro/proxyboi.svg)](https://github.com/svenstaro/proxyboi/stargazers)\n[![Downloads](https://img.shields.io/github/downloads/svenstaro/proxyboi/total.svg)](https://github.com/svenstaro/proxyboi/releases)\n[![Lines of Code](https://tokei.rs/b1/github/svenstaro/proxyboi)](https://github.com/svenstaro/proxyboi)\n\n**A super simple reverse proxy with TLS support**\n\n## How to run\n\nIn order to listen for proxy requests on all local interfaces on port 8080 and proxy them to a service running at example.com, do:\n\n    proxyboi -l 0.0.0.0:8080 http://example.com\n\nYou can also feed your TLS certificates into it:\n\n    proxyboi -l 0.0.0.0:8080 --cert mycert.pem --key mykey.key http://example.com\n\nYou can see a detailed (and pretty!) verbose log using `-v`:\n\n    proxyboi -l 0.0.0.0:8080 http://example.com -v\n\n![Pretty log](pretty_log.png)\n\n## Usage\n\n    proxyboi 0.5.0\n    Sven-Hendrik Haase <svenstaro@gmail.com>\n    A super simple reverse proxy with TLS support\n\n    USAGE:\n        proxyboi [FLAGS] [OPTIONS] <upstream>\n\n    ARGS:\n        <upstream>    Upstream server to proxy to (eg. http://localhost:8080)\n\n    FLAGS:\n        -h, --help        Prints help information\n        -k, --insecure    Allow connections against upstream proxies with invalid TLS certificates\n        -q, --quiet       Be quiet (log nothing)\n        -v, --verbose     Be verbose (log data of incoming and outgoing requests)\n        -V, --version     Prints version information\n\n    OPTIONS:\n        -l, --listen <listen>                          Socket to listen on [default: 0.0.0.0:8080]\n            --response-header <response-headers>...\n                Additional response headers to send to requesting client\n\n            --timeout <timeout>\n                Connection timeout against upstream in seconds (including DNS name resolution)\n                [default: 5]\n\n            --cert <tls-cert>                          TLS cert to use\n            --key <tls-key>                            TLS key to use\n            --upstream-header <upstream-headers>...    Additional headers to send to upstream server\n\n## Releasing\n\nThis is mostly a note for me on how to release this thing:\n\n- Make sure `CHANGELOG.md` is up to date.\n- `cargo release --dry-run <version>`\n- `cargo release <version>`\n- Releases will automatically be deployed by Github Actions.\n- Docker images will automatically be built by Docker Hub.\n- Update Arch package.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}