{
  "user": "rsksmart",
  "name": "rskj",
  "namespace": "rsksmart",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 1144,
  "last_updated": "2023-01-05T14:34:03.256933Z",
  "date_registered": "2022-06-16T14:31:00.645265Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "rsksmart",
  "has_starred": false,
  "full_description": "# Using this image\n\nThe easiest way to get started is running\n\n```\ndocker run -p 5050:5050 rsksmart/rskj:IRIS-3.3.0\n```\n\nThis will start a *MainNet* node. If you want to run a instead a *TestNet* node,\n\n```\ndocker run -p 50505:50505 rsksmart/rskj:IRIS-3.3.0 --testnet\n```\n\nor even a *RegTest* node, for doing regression tests against it\n\n```\ndocker run rsksmart/rskj:IRIS-3.3.0 --regtest\n```\n\nKeep in mind that RSK's blockchain is stored locally in the container. If you want to save it to a permanent storage, you can use a volume mount while starting the container:\n\n```\ndocker run -p 5050:5050 -v /path/to/my/storage:/var/lib/rsk/.rsk rsksmart/rskj:IRIS-3.3.0\n```\n\nIn order to interact with the node's JSON-RPC endpoint, you'll need to expose it to the host:\n\n```\ndocker run -p 5050:5050 -p 127.0.0.1:4444:4444 rsksmart/rskj:IRIS-3.3.0\n```\n\nThen, you could, for example, query the current block number with\n\n```\ncurl -H \"Content-type: application/json\" -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"id\":1}' http://127.0.0.1:4444/\n```\n\nFinally, you can provide a custom configuration to the node with\n\n```\ndocker run -p 5050:5050 -v /path/to/my/custom/node.conf:/etc/rsk/node.conf rsksmart/rskj:IRIS-3.3.0\n```",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}