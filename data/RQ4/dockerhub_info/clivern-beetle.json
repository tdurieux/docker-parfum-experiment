{
  "user": "clivern",
  "name": "beetle",
  "namespace": "clivern",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 2317,
  "last_updated": "2021-07-17T13:08:55.01505Z",
  "date_registered": "2020-02-03T21:40:12.164715Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "clivern",
  "has_starred": false,
  "full_description": "<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/clivern/Beetle/main/assets/img/gopher.png?v=1.0.2\" width=\"180\" />\n    <h3 align=\"center\">Beetle</h3>\n    <p align=\"center\">Kubernetes multi-cluster deployment automation service</p>\n    <p align=\"center\">\n        <a href=\"https://github.com/Clivern/Beetle/actions\"><img src=\"https://github.com/Clivern/Beetle/workflows/Build/badge.svg\"></a>\n        <a href=\"https://github.com/Clivern/Beetle/actions\"><img src=\"https://github.com/Clivern/Beetle/workflows/Release/badge.svg\"></a>\n        <a href=\"https://github.com/Clivern/Beetle/releases\"><img src=\"https://img.shields.io/badge/Version-v1.0.2-red.svg\"></a>\n        <a href=\"https://goreportcard.com/report/github.com/Clivern/Beetle\"><img src=\"https://goreportcard.com/badge/github.com/clivern/Beetle?v=1.0.2\"></a>\n        <a href=\"https://godoc.org/github.com/clivern/beetle\"><img src=\"https://godoc.org/github.com/clivern/beetle?status.svg\"></a>\n        <a href=\"https://hub.docker.com/r/clivern/beetle\"><img src=\"https://img.shields.io/badge/Docker-Latest-orange\"></a>\n        <a href=\"https://github.com/Clivern/Beetle/blob/main/LICENSE\"><img src=\"https://img.shields.io/badge/LICENSE-MIT-orange.svg\"></a>\n    </p>\n</p>\n<br/>\n<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/Clivern/Beetle/main/assets/img/chart.png?v=1.0.2\" width=\"100%\" />\n</p>\n\n<h4 align=\"center\">\n    <a href=\"https://www.youtube.com/watch?v=54qQIYTZiAw\" target=\"_blank\">:unicorn: Check out the demo!</a>\n</h4>\n<br/>\n\nApplication deployment and management should be automated, auditable, and easy to understand and that's what beetle tries to achieve in a simple manner. Beetle automates the deployment and rollback of your applications in a multi-cluster, multi-namespaces kubernetes environments. Easy to integrate with through API endpoints & webhooks to fit a variety of workflows.\n\n\n## Documentation\n\n## Deployment\n\n### On a Linux Server\n\nDownload [the latest beetle binary.](https://github.com/Clivern/Beetle/releases)\n\n```zsh\n$ curl -sL https://github.com/Clivern/Beetle/releases/download/vx.x.x/beetle_x.x.x_OS.tar.gz | tar xz\n```\n\nCreate your config file as explained on [development part](#development) and run beetle with systemd or anything else you prefer.\n\n```zsh\n$ ./beetle serve -c /custom/path/config.prod.yml\n```\n\n\n## Development\n\nBeetle uses Go Modules to manage dependencies. First Create a prod config file.\n\n```zsh\n$ git clone https://github.com/Clivern/Beetle.git\n$ cp config.dist.yml config.prod.yml\n```\n\nThen add your default configs. You probably wondering how the following configs even work! let's pick one and explain.\n\nThe item mode: `${BEETLE_APP_MODE:-dev}` means that the mode is dev unless environment variable `BEETLE_APP_MODE` is defined. so you can always override the value by defining the environment variable `export BEETLE_APP_MODE=prod`. and same for others\n\n```yaml\n# App configs\napp:\n    # Env mode (dev or prod)\n    mode: ${BEETLE_APP_MODE:-dev}\n    # HTTP port\n    port: ${BEETLE_API_PORT:-8080}\n    # App URL\n    domain: ${BEETLE_APP_DOMAIN:-http://127.0.0.1:8080}\n    # TLS configs\n    tls:\n        status: ${BEETLE_API_TLS_STATUS:-off}\n        pemPath: ${BEETLE_API_TLS_PEMPATH:-cert/server.pem}\n        keyPath: ${BEETLE_API_TLS_KEYPATH:-cert/server.key}\n\n    # Message Broker Configs\n    broker:\n        # Broker driver (native)\n        driver: ${BEETLE_BROKER_DRIVER:-native}\n        # Native driver configs\n        native:\n            # Queue max capacity\n            capacity: ${BEETLE_BROKER_NATIVE_CAPACITY:-5000}\n            # Number of concurrent workers\n            workers: ${BEETLE_BROKER_NATIVE_WORKERS:-4}\n\n    # API Configs\n    api:\n        key: ${BEETLE_API_KEY:- }\n\n    # Runtime, Requests/Response and Beetle Metrics\n    metrics:\n        prometheus:\n            # Route for the metrics endpoint\n            endpoint: ${BEETLE_METRICS_PROM_ENDPOINT:-/metrics}\n\n    # Application Database\n    database:\n        # Database driver (sqlite3, mysql)\n        driver: ${BEETLE_DATABASE_DRIVER:-sqlite3}\n        # Database Host\n        host: ${BEETLE_DATABASE_MYSQL_HOST:-localhost}\n        # Database Port\n        port: ${BEETLE_DATABASE_MYSQL_PORT:-3306}\n        # Database Name\n        name: ${BEETLE_DATABASE_MYSQL_DATABASE:-beetle.db}\n        # Database Username\n        username: ${BEETLE_DATABASE_MYSQL_USERNAME:-root}\n        # Database Password\n        password: ${BEETLE_DATABASE_MYSQL_PASSWORD:-root}\n\n    # Kubernetes Clusters\n    clusters:\n        -\n            name: ${BEETLE_KUBE_CLUSTER_01_NAME:-production}\n            inCluster: ${BEETLE_KUBE_CLUSTER_01_IN_CLUSTER:-false}\n            kubeconfig: ${BEETLE_KUBE_CLUSTER_01_CONFIG_FILE:-/app/configs/production-cluster-kubeconfig.yaml}\n        -\n            name: ${BEETLE_KUBE_CLUSTER_02_NAME:-staging}\n            inCluster: ${BEETLE_KUBE_CLUSTER_02_IN_CLUSTER:-false}\n            kubeconfig: ${BEETLE_KUBE_CLUSTER_02_CONFIG_FILE:-/app/configs/staging-cluster-kubeconfig.yaml}\n\n    # HTTP Webhook\n    webhook:\n        url: ${BEETLE_WEBHOOK_URL:- }\n        retry: ${BEETLE_WEBHOOK_RETRY:-3}\n        apiKey: ${BEETLE_WEBHOOK_API_KEY:- }\n\n# Log configs\nlog:\n    # Log level, it can be debug, info, warn, error, panic, fatal\n    level: ${BEETLE_LOG_LEVEL:-info}\n    # output can be stdout or abs path to log file /var/logs/beetle.log\n    output: ${BEETLE_LOG_OUTPUT:-stdout}\n    # Format can be json\n    format: ${BEETLE_LOG_FORMAT:-json}\n```\n\nAnd then run the application.\n\n```zsh\n$ go build beetle.go\n$ ./beetle serve -c /custom/path/config.prod.yml\n\n// OR\n\n$ make run\n\n// OR\n\n$ go run beetle.go serve -c /custom/path/config.prod.yml\n```\n\n\n## API Documentation\n\nGo to https://editor.swagger.io/ and import this file https://raw.githubusercontent.com/Clivern/Beetle/main/swagger.yaml.\n\n\n## Versioning\n\nFor transparency into our release cycle and in striving to maintain backward compatibility, Beetle is maintained under the [Semantic Versioning guidelines](https://semver.org/) and release process is predictable and business-friendly.\n\nSee the [Releases section of our GitHub project](https://github.com/clivern/beetle/releases) for changelogs for each release version of Beetle. It contains summaries of the most noteworthy changes made in each release.\n\n\n## Bug tracker\n\nIf you have any suggestions, bug reports, or annoyances please report them to our issue tracker at https://github.com/clivern/beetle/issues\n\n\n## Security Issues\n\nIf you discover a security vulnerability within Beetle, please send an email to [hello@clivern.com](mailto:hello@clivern.com)\n\n\n## Contributing\n\nWe are an open source, community-driven project so please feel free to join us. see the [contributing guidelines](CONTRIBUTING.md) for more details.\n\n\n## License\n\nÂ© 2020, clivern. Released under [MIT License](https://opensource.org/licenses/mit-license.php).\n\n**Beetle** is authored and maintained by [@clivern](http://github.com/clivern).\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}