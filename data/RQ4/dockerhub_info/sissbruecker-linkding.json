{
  "user": "sissbruecker",
  "name": "linkding",
  "namespace": "sissbruecker",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Self-hosted bookmark service",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 24,
  "pull_count": 2366166,
  "last_updated": "2022-10-05T08:12:40.037209Z",
  "date_registered": "2019-07-03T06:35:50.397268Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "sissbruecker",
  "has_starred": false,
  "full_description": "<div align=\"center\">\n    <br>\n    <a href=\"https://github.com/sissbruecker/linkding\">\n        <img src=\"https://raw.githubusercontent.com/sissbruecker/linkding/master/docs/header.svg\" height=\"50\">\n    </a>\n    <br>\n</div>\n\n##  Introduction\n\nlinkding is a simple bookmark service that you can host yourself.\nIt's designed be to be minimal, fast, and easy to set up using Docker.\n\nThe name comes from:\n- *link* which is often used as a synonym for URLs and bookmarks in common language\n- *Ding* which is German for thing\n- ...so basically something for managing your links\n\n**Feature Overview:**\n- Tags for organizing bookmarks\n- Search by text or tags\n- Bulk editing\n- Bookmark archive\n- Dark mode\n- Automatically creates snapshots of bookmarked websites on [the Internet Archive Wayback Machine](https://archive.org/web/)\n- Automatically provides titles and descriptions of bookmarked websites\n- Import and export bookmarks in Netscape HTML format\n- Extensions for [Firefox](https://addons.mozilla.org/de/firefox/addon/linkding-extension/) and [Chrome](https://chrome.google.com/webstore/detail/linkding-extension/beakmhbijpdhipnjhnclmhgjlddhidpe), and a bookmarklet that should work in most browsers\n- REST API for developing 3rd party apps\n- Admin panel for user self-service and raw data access\n- Easy to set up using Docker, uses SQLite as database\n\n## Installation\n\nlinkding is designed to be run with container solutions like [Docker](https://docs.docker.com/get-started/).  The Docker image is compatible with ARM platforms, so it can be run on a Raspberry Pi.\n\n###  Using Docker\n\nTo install linkding using Docker you can just run the [latest image](https://hub.docker.com/repository/docker/sissbruecker/linkding) from Docker Hub:\n```shell\ndocker run --name linkding -p 9090:9090 -d sissbruecker/linkding:latest\n```\nBy default, the application runs on port `9090`, you can map it to a different host port by modifying the port mapping in the command above. If everything completed successfully, the application should now be running and can be accessed at http://localhost:9090, provided you did not change the port mapping.\n\nNote that the command above will store the linkding SQLite database in the container, which means that deleting the container, for example when upgrading the installation, will also remove the database. For hosting an actual installation you usually want to store the database on the host system, rather than in the container. To do so, run the following command, and replace the `{host-data-folder}` placeholder with an absolute path to a folder on your host system where you want to store the linkding database:\n```shell\ndocker run --name linkding -p 9090:9090 -v {host-data-folder}:/etc/linkding/data -d sissbruecker/linkding:latest\n```\n\nTo upgrade the installation to a new version, remove the existing container, pull the latest version of the linkding Docker image, and then start a new container using the same command that you used above. There is a [shell script](https://github.com/sissbruecker/linkding/blob/master/install-linkding.sh) available to automate these steps. The script can be configured using environment variables, or you can just modify it.\n\nTo complete the setup, you still have to [create an initial user](#user-setup), so that you can access your installation.\n\n###  Using Docker Compose\n\nTo install linkding using [Docker Compose](https://docs.docker.com/compose/), you can use the [`docker-compose.yml`](https://github.com/sissbruecker/linkding/blob/master/docker-compose.yml) file. Copy the [`.env.sample`](https://github.com/sissbruecker/linkding/blob/master/.env.sample) file to `.env`, configure the parameters, and then run:\n```shell\ndocker-compose up -d\n```\n\nTo complete the setup, you still have to [create an initial user](#user-setup), so that you can access your installation.\n\n### User setup\n\nFor security reasons, the linkding Docker image does not provide an initial user, so you have to create one after setting up an installation. To do so, replace the credentials in the following command and run it:\n\n**Docker**\n```shell\ndocker exec -it linkding python manage.py createsuperuser --username=joe --email=joe@example.com\n```\n\n**Docker Compose**\n```shell\ndocker-compose exec linkding python manage.py createsuperuser --username=joe --email=joe@example.com\n```\n\nThe command will prompt you for a secure password. After the command has completed you can start using the application by logging into the UI with your credentials.",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.list.v2+json"
  ],
  "content_types": [
    "image"
  ]
}