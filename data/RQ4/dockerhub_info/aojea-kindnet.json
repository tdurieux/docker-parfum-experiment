{
  "user": "aojea",
  "name": "kindnet",
  "namespace": "aojea",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 9147,
  "last_updated": "2020-12-19T22:25:03.220167Z",
  "date_registered": "2019-03-02T11:39:54.723345Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "aojea",
  "has_starred": false,
  "full_description": "# Simple CNI plugin with IPv4, IPv6 and DualStack support\n\n[![CircleCI](https://circleci.com/gh/aojea/kindnet.svg?style=svg)](https://circleci.com/gh/aojea/kindnet)\n\nThe main goal of the project is to have a simple CNI plugin for Kubernetes with\nIPv4 and IPv6 support that provides the [Cluster\nNetworking](https://kubernetes.io/docs/concepts/cluster-administration/networking/)\n\nThe idea was born because of the lack of IPv6 support in current CNI plugins\nand because there are no automatic alternatives to create a multinode kubernetes\ncluster with IPv6.\n\nThe plugin only works on \"simple\" network environments, when all the cluster nodes\nbelong to the same subnet.\n\nKindnet evolved adding new features, as an embedded ipmasq agent and nowadays, \nis the default CNI plugin for [KIND](https://github.com/kubernetes-sigs/kind)\n\nAll the stable code was moved to the KIND project in-tree.\nThis repo is kept only for new features development and for experimenting\nusing it on \"real\" clusters.\n\n\n## Kindnet components\n\nIt uses the following [standard CNI\nplugins](https://github.com/containernetworking/plugins)\n\n* `ptp`: creates a veth pair and adds the host and the container to it.\n* `host-local`: maintains a local database of allocated IPs. It uses the\n  `ipRanges` capability to provide dynamic configuration for the Pods subnets.\n* `portmap`: An iptables-based portmapping plugin. Maps ports from the host's\n  address space to the container.\n\nAnd a daemon named `kindnetd` with the following features:\n\n* `CNI config`: configures the CNI plugin dropping the file `/etc/cni/net.d/10-kindnet.conflist`\n* `routing`: install routes on the to the POD subnets in the other nodes\n* `ip-masq`: non masquerade traffic that is directed to PODs \n\n## Installation\n\nKindnet can be installed on your cluster using the manifest [install-kindnet.yaml](install-kindnet.yaml)\n\n`kubectl create -f\nhttps://raw.githubusercontent.com/aojea/kindnet/master/install-kindnet.yaml`\n\n\nKindnet installation manifest has an init container that drop the CNI binaries in the folder `/opt/cni/bin/`, however, you can install them directly supressing the init container in the manifest and\nfollowing the next steps:\n\n```sh\nexport ARCH=\"amd64\"\nexport CNI_VERSION=\"v0.8.5\"\nexport CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"\nexport CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"\ncurl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"\nmkdir -p /opt/cni/bin\ntar -C /opt/cni/bin -xzf /tmp/cni.tgz\nrm -rf /tmp/cni.tgz\n```\n\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}