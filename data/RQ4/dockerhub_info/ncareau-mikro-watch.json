{
  "user": "ncareau",
  "name": "mikro-watch",
  "namespace": "ncareau",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Get and push data from Mikrotik Accounting to influxdb. ",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 81326,
  "last_updated": "2021-10-24T06:16:09.88871Z",
  "date_registered": "2019-06-23T06:28:31.610414Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "ncareau",
  "has_starred": false,
  "full_description": "# Mikro-Watch\n\n [![Sonarcloud Status](https://sonarcloud.io/api/project_badges/measure?project=ncareau_mikro-watch&metric=alert_status)](https://sonarcloud.io/dashboard?id=ncareau_mikro-watch) ![PHP Composer](https://github.com/ncareau/Mikro-Watch/workflows/PHP%20Composer/badge.svg?branch=master) [![Docker Pulls](https://img.shields.io/docker/pulls/ncareau/mikro-watch)](https://hub.docker.com/r/ncareau/mikro-watch)\n\nPHP process to capture and relay or display the mikrotik Accounting data.\n\nMikro-Watch will : \n\n- Fetch the data from the mikrotik router.\n- Process each bidirectional transfer to get metrics for each internal IP (within specified range)\n- Push or display data. \n\nCurrently push to inflxudb directly, but plans are to output data for telegraf ingestion or display in a simple webpage.\n\n![Grafana Example](https://github.com/ncareau/mikro-watch/raw/master/demo/panel.PNG)\n\n## Requirements\n    \n- PHP 5.6 or later\n- Composer\n\n\n- or Docker\n\n## Configuration and running\n\nFirst, make sure your router is configured to accept request to the account page by going to `IP -> Accounting -> Web Access`\n\nIn `Address`, enter a single/range of authorized IP that can access the accounting page. Ex ( `192.168.0.50/32` for single ip, `192.168.0.0/24` for the whole /24 subnet)\n\n### Docker\n\n```bash\ndocker run -d --name mikro-watch \\\n    -e MIKROTIK_IP=10.0.0.1 \\\n    -e NETWORK_RANGE=10.0.0.1-10.0.0.255 \\\n    -e INFLUXDB_HOST=10.0.0.1 \\\n    -e INFLUXDB_USER=user \\\n    -e INFLUXDB_PASS=***pass*** \\\n    -e INFLUXDB_DATABASE=influxdb \\\n    -e DNS_REVERSE_LOOKUP=false \\\n    -e DNS_REVERSE_LOOKUP_TRIM_SUFFIX=false \\\n    ncareau/mikro-watch\n```\n\n### Docker compose\n\n```yaml\nversion: '3'\nservices:\n\n    mikro-watch:\n        image: ncareau/mikro-watch\n        container_name: mikro-watch\n        environment:\n            - MIKROTIK_IP=10.0.0.1\n            - NETWORK_RANGE=10.0.0.1-10.0.0.255\n            - INFLUXDB_HOST=10.0.0.1\n            - INFLUXDB_USER=user\n            - INFLUXDB_PASS=***pass***\n            - INFLUXDB_DATABASE=influxdb\n            - DNS_REVERSE_LOOKUP=false\n            - DNS_REVERSE_LOOKUP_TRIM_SUFFIX=false\n        restart : unless-stopped \n```\n \n### Manual\n\nCopy the `.env` file to `.env.local` and change the information with your current network.\n\n- `php mikro-watch influxdb` will push once to influxdb\n- `php mikro-watch daemon` will start a daemon pushing to influxdb each 10 sec. \n  - `--timeout 5` or `-t 5` to change the timeout between calls in seconds. \n- `php mikro-watch json` will output the accounting result as json.  \n\nInstructions to install this application as a systemd service are located in the `mikrowatch.service` file.\n\n### Environment Variables\n\n| Variable | Description |\n| --- | --- |\n| `MIKROTIK_IP` | IP of your mikrotik router |\n| `MIKROTIK_PROTO` | Default: `https` |\n| `MIKROTIK_SSL_VERIFY` | if using `https`, verify for valid ssl certificate |\n| `MIKROTIK_PORT` | Use if your Mikrotik listens on a port other than 80 for http or 443. Must include `:` For example `:8081` |\n| `NETWORK_RANGE` | Range of your network to filter ips. |\n| `INFLUXDB_HOST` | Influxdb host |\n| `INFLUXDB_USER` | Influxdb username |\n| `INFLUXDB_PASS` | Influxdb password |\n| `INFLUXDB_DATABASE` | Influxdb database |\n| `DNS_REVERSE_LOOKUP` | Enable reverse lookup |\n| `DNS_REVERSE_LOOKUP_TRIM_SUFFIX` | Remove domain suffix from domain name (hostname only) |\n\n\n## Note & Troubleshooting\n\nWhen FastTrack is enabled, some packet will not be accounted for. To disable this (This will result in more CPU usage on your router) disable the fasttrack rule in `IP -> Firewall -> Filter Rules`. \n\nCalling the accounting webpage resets the counter. This means that if multiple processes or users call the mikrotik api, only a subset of the data will be captured.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.list.v2+json",
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}