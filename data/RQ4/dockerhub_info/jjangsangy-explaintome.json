{
  "user": "jjangsangy",
  "name": "explaintome",
  "namespace": "jjangsangy",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Automatic Web Article Summarizer",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 612,
  "last_updated": "2018-09-13T22:42:39.25859Z",
  "date_registered": "2016-08-16T07:37:36.190676Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "jjangsangy",
  "has_starred": false,
  "full_description": "# ExplainToMe\n\n[![travis](https://travis-ci.org/jjangsangy/ExplainToMe.svg?branch=master)](https://travis-ci.org/jjangsangy/ExplainToMe)\n[![licence](https://img.shields.io/pypi/l/coverage.svg)](https://github.com/jjangsangy/ExplainToMe/blob/master/LICENSE)\n[![Quay](https://quay.io/repository/jjangsangy/explaintome/status)](https://quay.io/repository/jjangsangy/explaintome)\n\n## Automatic Web Article Summarizer\n\n![Front](https://github.com/jjangsangy/ExplainToMe/raw/master/static/front.jpg)\n\n[![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy)\n\n# What is it?\n\n`ExplainToMe` is a automatic text summarizer, that utilizes\n[TextRank](http://web.eecs.umich.edu/~mihalcea/papers/mihalcea.emnlp04.pdf),\na graph based algorithm to scans through the contents of a website to\nextract a concise machine generated summary. The methodology is similar\nto the way search engines return the most relevant web pages from a\nusers search query.\n\n# Support\n\nHereâ€™s a list of Python platforms that are officially supported.\n\n* Python 2.7\n* Python 3.4\n* Python 3.5\n* pypy 2.5.0 -> 2.7.9\n\n> We are working on Python 3.6\n\n# Quickstart\n\n# Install\n\n## Clone Repository\n\n```bash\n$ git clone https://github.com/jjangsangy/ExplainToMe.git\n```\n\n## Create a virtualenv\n\n```bash\n$ virtualenv -p python venv\n```\n\n## Source Virtualenv\n\n```bash\n$ source venv/bin/activate\n```\n\n## Install Python Dependencies\n\n```bash\n$ pip install --upgrade pip setuptools wheel\n$ pip install -r requirements.txt\n```\n\n## Run Server\n\n```bash\n$ python manage.py runserver\nRunning on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n```\n\nNow go to your browser and point it towards `http://127.0.0.1:5000`\n\n# Docker\n\nRunning ExplainToMe via the [official Docker image](https://hub.docker.com/r/jjangsangy/explaintome/)\nis an easy way to start a server if you don't want to install python.\n\nWe assume here you have already installed Docker for your system.\n\nIf you are getting started on OS X, the [Docker toolbox](https://docs.docker.com/engine/installation/mac/)\nis the first thing to checkout.\n\n```bash\n$ docker run -it -p 5000:5000 jjangsangy/ExplainToMe:latest\n```\n\nOnce the server is running, navigate to either localhost:5000 (on Linux) or\nhostname:5000 (on Mac OS X), where hostname is the IP addresses\nof your virtual machine, obtained using\n\n```bash\n$ docker-machine ip my-vm-name\n```\n\nNow access your docker machine ip at port `docker-machine-ip:5000`\n\n# Kitematic\n\nYou might also want to try [Kitematic](https://kitematic.com/) on OS X which provides a GUI for running Docker images.\nRunning ExplainToMe through Kitematic is easy, just search for the\n`jjangsangy/ExplainToMe` image, start it, and you should see it running\n\n![kitematic](https://github.com/jjangsangy/ExplainToMe/raw/master/static/kitematic.jpg)\n\n\n# Things to look forward to:\n\n-   Summaries of documents in other languages than English!\n\n# ExplainToMe API\n\nCheck out our [Swagger API Documentation](https://swaggerhub.com/api/jjangsangy/ExplainToMe)\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}