{
  "user": "gabrielmagno",
  "name": "nano-dlna",
  "namespace": "gabrielmagno",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 20,
  "last_updated": "2021-01-16T16:33:36.23719Z",
  "date_registered": "2020-11-14T15:59:30.872294Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "gabrielmagno",
  "has_starred": false,
  "full_description": "nano-dlna\n=========\n\n[![Build Status](https://travis-ci.org/gabrielmagno/nano-dlna.svg?branch=master)](https://travis-ci.org/gabrielmagno/nano-dlna)\n[![PyPI](https://img.shields.io/pypi/v/nanodlna.svg)](https://pypi.python.org/pypi/nanodlna)\n[![License](https://img.shields.io/github/license/gabrielmagno/nano-dlna.svg)](https://github.com/gabrielmagno/nano-dlna/blob/master/LICENSE)\n\nA minimal UPnP/DLNA media streamer.\n\nnano-dlna is a command line tool that allows you to play a local video file in your TV (or any other DLNA compatible device).\n\n\nFeatures\n--------\n- Searching available DLNA devices in the local network\n- Streaming audio\n- Streaming video, with subtitle support\n\n\nUsage\n-----\n\n### List\n\nScan compatible devices and list the available ones:\n\n    nanodlna list\n\nIf your device is not being listed, you might need to increase the search timeout:\n\n    nanodlna -t 20 list\n\n\n### Play\n\nPlay a video, automatically loading the subtitles if available, selecting a random device:\n\n    nanodlna play That.Movie.mkv\n\nPlay a video, specifying the device through query (scan devices before playing):\n\n    nanodlna play That.Movie.mkv -q \"osmc\"\n\nPlay a video, specifying the device through its exact location (no scan, faster):\n\n    nanodlna play That.Movie.mkv -d \"http://192.168.1.13:1082/\"\n\n\n\nInstallation\n------------\n\nnano-dlna can be installed as a regular python module by running:\n\n    $ [sudo] pip install nanodlna\n\n\nTechnical Details\n-----------------\n\nnano-dlna is basically a one-file DLNA MediaServer and a self DLNA MediaController.\n\nHow does `list` work?\n\n1. Issue an SSDP M-Search broadcast message in the network\n2. Capture the responses and register the devices\n3. Filter only devices that provide [UPnP's AVTransport service](http://www.upnp.org/specs/av/UPnP-av-AVTransport-v3-Service-20101231.pdf)\n\n\nHow does `play` work?\n\n1. Setup an HTTP server to provide the media files to be streamed (including subtitles)\n2. Send a `SetAVTransportURI` message to the device, specifying the HTTP URLs of the media files\n3. Send a `Play` message to the device\n\n\nTODO\n----\n- [ ] Documentation\n- [ ] CLI interface to send controller actions (play, pause, stop, etc) to the MediaRenderer\n- [ ] CLI progress bar visualization\n- [ ] Playlist\n\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}