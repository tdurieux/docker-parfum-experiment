{
  "user": "errbit",
  "name": "errbit",
  "namespace": "errbit",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "The open source error catcher that's Airbrake API compliant",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 9,
  "pull_count": 2855115,
  "last_updated": "2022-10-14T20:38:14.420937Z",
  "date_registered": "2016-07-04T06:13:54.845076Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "errbit",
  "has_starred": false,
  "full_description": "# Errbit [![TravisCI][travis-img-url]][travis-ci-url] [![Code Climate][codeclimate-img-url]][codeclimate-url] [![Coveralls][coveralls-img-url]][coveralls-url] [![Deploy](https://www.herokucdn.com/deploy/button.svg)][heroku-deploy-url]\n\n[travis-img-url]: https://travis-ci.org/errbit/errbit.svg?branch=master\n[travis-ci-url]: http://travis-ci.org/errbit/errbit\n[codeclimate-img-url]: https://codeclimate.com/github/errbit/errbit.png\n[codeclimate-url]: https://codeclimate.com/github/errbit/errbit\n[coveralls-img-url]: https://coveralls.io/repos/github/errbit/errbit/badge.png?branch=master\n[coveralls-url]: https://coveralls.io/github/errbit/errbit?branch=master\n[heroku-deploy-url]:https://heroku.com/deploy?template=https://github.com/errbit/errbit/tree/master\n\n### The open source, self-hosted error catcher\n\nErrbit is a tool for collecting and managing errors from other applications.\nIt is [Airbrake](http://airbrake.io) API compliant, so if you are already using\nAirbrake, you can just point the `airbrake` gem to your Errbit server.\n\n<table>\n  <tr>\n    <td align=\"center\">\n      <a href=\"https://errbit.com/images/apps.png\" target=\"_blank\" title=\"Apps\">\n        <img src=\"https://errbit.com/images/apps_thumb.png\" alt=\"Apps\">\n      </a>\n      <br />\n      <em>Apps</em>\n    </td>\n    <td align=\"center\">\n      <a href=\"https://errbit.com/images/app_errors.png\" target=\"_blank\" title=\"Errors\">\n        <img src=\"https://errbit.com/images/app_errors_thumb.png\" alt=\"Errors\">\n      </a>\n      <br />\n      <em>Errors</em>\n    </td>\n    <td align=\"center\">\n      <a href=\"https://errbit.com/images/error_summary.png\" target=\"_blank\" title=\"Error Summary\">\n        <img src=\"https://errbit.com/images/error_summary_thumb.png\" alt=\"Error Summary\">\n      </a>\n      <br />\n      <em>Error Summary</em>\n    </td>\n    <td align=\"center\">\n      <a href=\"https://errbit.com/images/error_backtrace.png\" target=\"_blank\" title=\"Error Backtraces\">\n        <img src=\"https://errbit.com/images/error_backtrace_thumb.png\" alt=\"Error Backtraces\">\n      </a>\n      <br />\n      <em>Error Backtraces</em>\n    </td>\n  </tr>\n</table>\n\nMailing List\n------------\n\nJoin the Google Group at https://groups.google.com/group/errbit to receive\nupdates and notifications.\n\n# Requirements\n\nThe list of requirements to install Errbit are:\n\n* Ruby >= 2.5.x\n* MongoDB >= 4.0.x\n\nInstallation\n------------\n\n*Note*: This app is intended for people with experience deploying and maintaining\nRails applications.\n\n* [Install MongoDB](https://www.mongodb.org/downloads)\n* `git clone https://github.com/errbit/errbit.git`\n* `bundle install`\n* `bundle exec rake errbit:bootstrap`\n* `bundle exec rails server`\n\nConfiguration\n-------------\nErrbit configuration is done entirely through environment variables. See\n[configuration](docs/configuration.md)\n\nDeployment\n----------\nSee [notes on deployment](docs/deployment.md)\n\nNotice Grouping\n---------------\nThe way Errbit arranges notices into error groups is configurable. By default,\nErrbit uses the notice's error class, error message, complete backtrace,\ncomponent (or controller), action and environment name to generate a unique\nfingerprint for every notice. Notices with identical fingerprints appear in the\nUI as different occurences of the same error and notices with differing\nfingerprints are displayed as separate errors.\n\nChanging the fingerprinter (under the \"Config\" menu) applies to all apps and\nthe change affects only notices that arrive after the change. If you want to\nrefingerprint old notices, you can run `rake errbit:notice_refingerprint`.\n\nSince version 0.7.0, the notice grouping can be separately configured for each\napp (under the \"edit\" menu).\n\nManaging apps\n---------------------\nAn Errbit app is a place to collect error notifications from your external\napplication deployments.\n\nSee [apps](docs/apps.md)\n\nAuthentication\n--------------\n### Configuring GitHub authentication:\n* Set `GITHUB_AUTHENTICATION=true`\n* Register your instance of Errbit at https://github.com/settings/applications/new\n\nIf you host Errbit at errbit.example.com, you would fill in:\n\n<dl>\n<dt>URL\n<dd>http://errbit.example.com\n<dt>Callback URL\n<dd>http://errbit.example.com/users/auth/github/callback\n</dl>\n\n* After you have registered your app, set `GITHUB_CLIENT_ID` and `GITHUB_SECRET`\n  with your app's Client ID and Secret key.\n\nWhen you start your application, you should see the option to **Sign in with\nGitHub** on the Login page. You will also be able to link your GitHub profile\nto your user account on your **Edit profile** page.\n\nIf you have signed in with GitHub, or linked your GitHub profile, and you're\nworking with an App that has a GitHub repo configured, then you will be able to\ncreate issues on GitHub. If you use another issue tracker, see [Issue\nTrackers](#issue-trackers).\n\nYou can change the OAuth scope Errbit requests from GitHub by setting\n`GITHUB_ACCESS_SCOPE`. The default ['repo'] is very permissive, but there are a\nfew others that could make sense for your needs:\n\n<dl>\n<dt>GITHUB_ACCESS_SCOPE=\"['repo']\"</dt>\n<dd>Allow creating issues for public and private repos</dd>\n<dt>GITHUB_ACCESS_SCOPE=\"['public_repo']\"</dt>\n<dd>Allow creating issues for public repos only</dd>\n<dt>GITHUB_ACCESS_SCOPE=\"[]\"</dt>\n<dd>No permissions at all, but allows errbit login through github</dd>\n</dl>\n\n* `GITHUB_ORG_ID` is an optional environment variable you can set to your own\n  github organization id. If set, only users of the specified GitHub\n  organization can log in to Errbit through GitHub. Errbit will provision\n  accounts for new users.\n\n### Configuring Google authentication:\n* Set GOOGLE_AUTHENTICATION=true\n* Register your instance of Errbit at https://console.developers.google.com/apis/api/plus/overview\n\nIf you host Errbit at errbit.example.com, you would fill in:\n\n<dl>\n<dt>URL\n<dd>http://errbit.example.com\n<dt>Callback URL\n<dd>http://errbit.example.com/users/auth/google_oauth2/callback\n</dl>\n\n* After you have registered your app, set `GOOGLE_CLIENT_ID` and `GOOGLE_SECRET`\n  with your app's Client ID and Secret key.\n\nWhen you start your application, you should see the option to **Sign in with\nGoogle** on the Login page. You will also be able to link your Google profile\nto your user account on your **Edit profile** page.\n\n### Configuring LDAP authentication:\n\n* Set `ERRBIT_USER_HAS_USERNAME=true`\n* Follow the [devise_ldap_authenticatable setup instructions](https://github.com/cschiewek/devise_ldap_authenticatable).\n* Set ```config.ldap_create_user = true``` in ```config/initializers/devise.rb```, this enables creating the users from LDAP, otherwhise login will not work.\n* Create a new initializer (e.g. ```config/initializers/devise_ldap.rb```) and add the following code to enable ldap authentication in the User-model:\n\n```ruby\nErrbit::Config.devise_modules << :ldap_authenticatable\n```\n\n* If you are authenticating by `username`, you will need to set the user's email manually\nbefore authentication. You must add the following lines to `app/models/user.rb`:\n\n```ruby\n  def ldap_before_save\n    name = Devise::LDAP::Adapter.get_ldap_param(self.username, \"givenName\")\n    surname = Devise::LDAP::Adapter.get_ldap_param(self.username, \"sn\")\n    mail = Devise::LDAP::Adapter.get_ldap_param(self.username, \"mail\")\n\n    self.name = (name + surname).join ' '\n    self.email = mail.first\n  end\n```\n\n* Now login with your user from LDAP, this will create a user in the database\n* Open a rails console and set the admin flag for your user:\n\n```ruby\nuser = User.first\nuser.admin = true\nuser.save!\n```\n\n## Upgrading\n\nWhen upgrading Errbit, please run:\n\n```bash\ngit pull origin master # assuming origin is the github.com/errbit/errbit repo\nbundle install\nrake db:migrate\nrake db:mongoid:remove_undefined_indexes\nrake db:mongoid:create_indexes\nrake assets:precompile\n```\n\nThis will ensure that your application stays up to date with any schema changes.\n\nThere are additional steps if you are [upgrading from a version prior to v0.4.0](docs/upgrading.md).\n\n## User information in error reports\n\nErrbit can now display information about the user who experienced an error.\nThis gives you the ability to ask the user for more information,\nand let them know when you've fixed the bug.\n\nThe Airbrake gem will look for ```current_user``` or ```current_member```. By default it will only send the ```id``` of the user, to specify other attributes you can set ```config.user_attributes```. See [the Airbrake wiki for more information](https://github.com/airbrake/airbrake/wiki/Sending-current-user-information).\n\nIf user information is received with an error report,\nit will be displayed under the *User Details* tab:\n\n![User details tab](https://errbit.com/images/error_user_information.png)\n\nThis tab will be hidden if no user information is available.\n\nJavascript error notifications\n--------------------------------------\nYou can log javascript errors that occur in your application by including the\n[airbrake-js](https://github.com/airbrake/airbrake-js) javascript library.\n\nInstall airbrake-js according to the docs at and set your project and host as\nsoon as you want to start reporting errors. Then follow along with the\ndocumentation at https://github.com/airbrake/airbrake-js/blob/master/README.md\n\n```javascript\nvar airbrake = new airbrakeJs.Client({\n  projectId: 'ERRBIT API KEY',\n  projectKey: 'ERRBIT API KEY (again)',\n  reporter: 'xhr',\n  remoteConfig: false,\n  host: 'https://myerrbit.com'\n});\n```\n\nPlugins and Integrations\n------------------------\nYou can extend Errbit by adding Ruby gems and plugins which are typically gems.\nIt's nice to keep track of which gems are core Errbit dependencies and which\ngems are your own dependencies. If you want to add gems to your own Errbit,\nplace them in a new file called `UserGemfile` and Errbit will treat that file\nas an additional Gemfile. If you want to use a file with a different name, you\ncan pass the name of that file in an environment variable named `USER_GEMFILE`.\nIf you want to use errbit_jira_plugin, just add it to UserGemfile:\n\n```bash\necho \"gem 'errbit_jira_plugin'\" > UserGemfile\nbundle install\n```\n\nIssue Trackers\n--------------\nEach issue tracker integration is implemented as a gem that depends on\n[errbit_plugin](https://github.com/errbit/errbit_plugin). The only officially\nsupported issue tracker plugin is\n[errbit_github_plugin](https://github.com/errbit/errbit_github_plugin).\n\nIf you want to implement your own issue tracker plugin, read the README.md file\nat [errbit_plugin](https://github.com/errbit/errbit_plugin).\n\nWhat if Errbit has an error?\n----------------------------\n\nErrbit will log it's own errors to an internal app named **Self.Errbit**.  The\n**Self.Errbit** app is automatically created when the first error happens.\n\nIf your Errbit instance has logged an error, we would appreciate a bug report\non GitHub Issues. You can post this manually at\n[https://github.com/errbit/errbit/issues](https://github.com/errbit/errbit/issues),\nor you can set up the GitHub Issues tracker for your **Self.Errbit** app:\n\n  * Go to the **Self.Errbit** app's edit page. If that app does not exist yet,\n    go to the apps page and click **Add a new App** to create it. (You can also\n    create it by running `rake airbrake:test`.)\n  * In the **Issue Tracker** section, click **GitHub Issues**.\n  * Fill in the **Account/Repository** field with **errbit/errbit**.\n  * Fill in the **Username** field with your github username.\n  * If you are logged in on [GitHub](https://github.com), you can find your\n    **API Token** on this page:\n    [https://github.com/account/admin](https://github.com/account/admin).\n  * Save the settings by clicking **Update App** (or **Add App**)\n  * You can now easily post bug reports to GitHub Issues by clicking the\n    **Create Issue** button on a **Self.Errbit** error.\n\nGetting Help\n------------\n\nIf you need help, try asking your question on StackOverflow using the\ntag errbit:\nhttps://stackoverflow.com/questions/tagged/errbit\n\nUse Errbit with applications written in other languages\n-------------------------------------------------------\n\nIn theory, any Airbrake-compatible error catcher for other languages should work with Errbit.\nSolutions known to work are listed below:\n\n| Language | Project |\n|----------|---------|\n| PHP (&gt;= 5.3) | [wasilak/errbit-php](https://github.com/wasilak/errbit-php) |\n| OOP PHP (&gt;= 5.3) | [emgiezet/errbitPHP](https://github.com/emgiezet/errbitPHP) |\n| Python | [mkorenkov/errbit.py](https://github.com/mkorenkov/errbit.py) , [pulseenergy/airbrakepy](https://github.com/pulseenergy/airbrakepy) |\n\nPeople using Errbit\n-------------------\n\nSee our wiki page for a [list of people and companies around the world who use\nErrbit](https://github.com/errbit/errbit/wiki/People-using-Errbit). You may\n[edit this\npage](https://github.com/errbit/errbit/wiki/People-using-Errbit/_edit), and add\nyour name and country to the list if you are using Errbit.\n\n\nSpecial Thanks\n--------------\n\n* [Michael Parenteau](http://michaelparenteau.com) - For rocking the Errbit design and providing a great user experience.\n* [Nick Recobra (@oruen)](https://github.com/oruen) - Nick is Errbit's first core contributor. He's been working hard at making Errbit more awesome.\n* [Nathan Broadbent (@ndbroadbent)](https://github.com/ndbroadbent) - Maintaining Errbit and contributing many features\n* [Vasiliy Ermolovich (@nashby)](https://github.com/nashby) - Contributing and helping to resolve issues and pull requests\n* [Marcin Ciunelis (@martinciu)](https://github.com/martinciu) - Helping to improve Errbit's architecture\n* [Cyril Mougel (@shingara)](https://github.com/shingara) - Maintaining Errbit and contributing many features\n* [Relevance](http://thinkrelevance.com) - For giving me Open-source Fridays to work on Errbit and all my awesome co-workers for giving feedback and inspiration.\n* [Thoughtbot](http://thoughtbot.com) - For being great open-source advocates and setting the bar with [Airbrake](http://airbrake.io).\n\nSee the [contributors graph](https://github.com/errbit/errbit/graphs/contributors) for more details.\n\nContributing to Errbit\n------------\n\nSee the [contribution guidelines](CONTRIBUTING.md)\n\nRunning tests\n-------------\n\nCheck the [.travis.yml](.travis.yml) file to see how tests are run\n\nCopyright\n---------\n\nCopyright (c) 2010-2015 Errbit Team\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}