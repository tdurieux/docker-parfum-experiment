{
  "user": "tiledesk",
  "name": "tiledesk-server",
  "namespace": "tiledesk",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Tiledesk is the full-stack Open Source Live Chat platform with built-in Chatbots|written in Node.js",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 5,
  "pull_count": 11509,
  "last_updated": "2023-01-05T17:50:21.0917Z",
  "date_registered": "2019-03-26T16:25:18.881949Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "tiledesk",
  "has_starred": false,
  "full_description": "[![npm version](https://badge.fury.io/js/%40tiledesk%2Ftiledesk-server.svg)](https://badge.fury.io/js/%40tiledesk%2Ftiledesk-server)\n\n[![CircleCI](https://circleci.com/gh/Tiledesk/tiledesk-server.svg?style=svg)](https://circleci.com/gh/Tiledesk/tiledesk-server)\n\n# Quick Reference\n\n* Maintained by: [Tiledesk](https://github.com/Tiledesk)\n* Where to get help: [Tiledesk Community Forum](https://tiledesk.discourse.group/) | [Tiledesk Community Discord Server](https://discord.gg/nERZEZ7SmG)\n* Documentation: [Tiledesk Deployment Code Starting](https://github.com/Tiledesk/tiledesk-deployment) |[Tiledesk Developer Hub](https://developer.tiledesk.com)\n\n# Tiledesk Introduction\n\nTiledesk-server is the server engine of Tiledesk. Tiledesk is the **full-stack Open Source Live Chat platform** with **built-in Chatbots** written in Node.js and Express. \nBuild your own automated customer support with a **multi-channel platform for Web, Android and iOS**. Tiledesk supports also **WhatsApp for Business, FB Messenger, Telegram** and many more channels...\n\nTiledesk has been designed to be open source since the beginning. We actively worked on Tiledesk to create a totally new, first class customer service platform based on instant messaging.\n\n<img src=\"https://tiledesk.com/wp-content/uploads/2022/07/tiledesk-github-banner.png\" alt=\"tiledesk open source live chat with built-in chatbots\">\n\nWhat is Tiledesk today? It became the **open source ‚Äúconversational app development‚Äù platform** that everyone needs üòå\n\nYou can use Tiledesk to increase sales for your website or for post-sales customer service. Every conversation can be automated using our first class native chatbot technology. You can also **connect your own applications using our APIs or Webhooks**. Moreover you can deploy entire visual applications inside a conversation. And your applications can converse with your chatbots or your end-users! We know this is cool üòé\n\nTiledesk is multichannel in a totally new way. You can write your chatbot scripts with images, buttons and other cool elements that your channels support. But you will configureyour chatbot replies only once. They will run on every channel, auto-adapting the responses to the target channel whatever it is, Whatsapp, Facebook Messenger, Telegram etc.\n\nMore info on [Tiledesk website](https://www.tiledesk.com)\n\n# Installation Prerequisites\n\n* [Nodejs](https://www.npmjs.com/) and npm installed \n* [MongoDb](https://www.mongodb.com) installed\n\n# Run Tiledesk with Docker Compose\n\nDo you want to install all the Tiledesk components on your server with just one click?\nUse [Docker Compose Tiledesk installation guide](https://github.com/Tiledesk/tiledesk-deployment/blob/master/docker-compose/README.md)\n\n# Running Tiledesk Server\n\n## Run locally with npm\n\nSteps to run with npm:\n\n```\nnpm install -g @tiledesk/tiledesk-server mongodb-runner\nmongodb-runner start\ncurl https://raw.githubusercontent.com/Tiledesk/tiledesk-server/master/.env.sample --output .env\nnano .env #configure .env file properly\ntiledesk-server  \n```\n\nIf you want to load .env file from another path: `DOTENV_PATH=/MY/ABSOLUTE/PATH/.env tiledesk-server`\n\nNote: If installation with -g fails due to permission problems (npm ERR! code 'EACCES'), please refer to this [link](https://docs.npmjs.com/getting-started/fixing-npm-permissions).\n\n\n## Using Docker\n\n\n### Configure .env file \n```\ncurl https://raw.githubusercontent.com/Tiledesk/tiledesk-server/master/.env.sample --output .env\nnano .env #configure .env file properly\n```\n\n### Running\nIf you want to run tiledesk and mongo with docker run :\n\n```\ndocker run --name tiledesk-mongo -d mongo\ndocker run -p 3000:3000 --env DATABASE_URI=\"mongodb://mongo/tiledesk-server\" --env-file .env --link tiledesk-mongo:mongo tiledesk/tiledesk-server\n```\n\nOtherwise if you want to run tiledesk only with docker run :\n\n```\ndocker run -p 3000:3000 --env DATABASE_URI=\"mongodb://YOUR_MONGO_INSTALLATION_ENDPOINT/tiledesk-server\" --env-file .env tiledesk/tiledesk-server\n```\n\n## Install from source code\n\n* Clone this repo\n* Install dependencies with `npm install`\n* Configure the tiledesk .env file. You can see an example in the file .env.sample under the root folder. Rename it from .env.sample to .env and configure it properly. \n* Run the app with the command `npm start` or with `nodemon` if you want monitoring and auto reload. Install nodemon with `npm install -g nodemon`\n\n\n## Deploy on Heroku\n\nDeploy with button:\n\n[![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy?template=https://github.com/Tiledesk/tiledesk-server)\n\n\n# REST API\n\nSee the Tiledesk REST API [here](https://developer.tiledesk.com/apis/rest-api/introduction)\n\n# Upgrading \nTo see how to upgrade tiledesk-server see [here](./docs/upgrading.md) \n\n# Testing\nRun unit test with `npm test` and integration test with `npm run test:int` \n\n\n\n\n\n\n\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}