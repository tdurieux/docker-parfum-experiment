{
  "user": "yelp",
  "name": "docker-custodian",
  "namespace": "yelp",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Keep docker hosts tidy",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 6,
  "pull_count": 178914372,
  "last_updated": "2022-07-01T02:27:27.568601Z",
  "date_registered": "2015-09-29T17:20:15.452628Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "yelp",
  "has_starred": false,
  "full_description": "Docker Custodian\n================\n\n.. image:: https://travis-ci.org/Yelp/docker-custodian.svg\n    :target: https://travis-ci.org/Yelp/docker-custodian\n\nKeep docker hosts tidy.\n\n\n.. contents::\n    :backlinks: none\n\nInstall\n-------\n\nThere are three installation options\n\nContainer\n~~~~~~~~~\n\n.. code::\n\n    docker pull yelp/docker-custodian\n    docker run -ti \\\n        -v /var/run/docker.sock:/var/run/docker.sock \\\n        yelp/docker-custodian dcgc --help\n\nDebian/Ubuntu package\n~~~~~~~~~~~~~~~~~~~~~\n\nFirst build the package (requires `dh-virtualenv`)\n\n.. code:: sh\n\n    dpkg-buildpackage -us -uc\n\nThen install it\n\n.. code:: sh\n\n    dpkg -i ../docker-custodian_*.deb\n\n\nSource\n~~~~~~\n\n.. code:: sh\n\n    pip install git+https://github.com/Yelp/docker-custodian.git#egg=docker_custodian\n\n\ndcgc\n----\n\nRemove old docker containers and docker images.\n\n``dcgc`` will remove stopped containers and unused images that are older than\n\"max age\".  Running containers, and images which are used by a container are\nnever removed.\n\nMaximum age can be specificied with any format supported by\n`pytimeparse <https://github.com/wroberts/pytimeparse>`_.\n\nExample:\n\n.. code:: sh\n\n    dcgc --max-container-age 3days --max-image-age 30days\n\n\nPrevent images from being removed\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``dcgc`` supports an image exclude list. If you have images that you'd like\nto keep around forever you can use the exclude list to prevent them from\nbeing removed.\n\n::\n\n    --exclude-image\n        Never remove images with this tag. May be specified more than once.\n\n    --exclude-image-file\n        Path to a file which contains a list of images to exclude, one\n        image tag per line.\n\nYou also can use basic pattern matching to exclude images with generic tags.\n\n.. code::\n\n    user/repositoryA:*\n    user/repositoryB:?.?\n    user/repositoryC-*:tag\n\n\nPrevent containers and associated images from being removed\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``dcgc`` also supports a container exclude list based on labels.  If there are\nstopped containers that you'd like to keep, then you can check the labels to\nprevent them from being removed.\n\n::\n\n    --exclude-container-label\n        Never remove containers that have the label key=value. =value can be\n        omitted and in that case only the key is checked. May be specified\n        more than once.\n\nYou also can use basic pattern matching to exclude generic labels.\n\n.. code::\n\n    foo*\n    com.docker.compose.project=test*\n    com.docker*=*bar*\n\n\ndcstop\n------\n\nStop containers that have been running for too long.\n\n``dcstop`` will ``docker stop`` containers where the container name starts\nwith `--prefix` and it has been running for longer than `--max-run-time`.\n\n\nExample:\n\n.. code:: sh\n\n    dcstop --max-run-time 2days --prefix \"projectprefix_\"\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.v1+prettyjws",
    "application/vnd.docker.distribution.manifest.list.v2+json"
  ],
  "content_types": [
    "image"
  ]
}