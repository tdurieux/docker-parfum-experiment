{
  "user": "jantman",
  "name": "awslimitchecker",
  "namespace": "jantman",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "A script and python module to check your AWS service limits and usage via boto.",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 3,
  "pull_count": 635914,
  "last_updated": "2021-08-04T15:23:21.289454Z",
  "date_registered": "2019-08-26T18:25:14.529697Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "jantman",
  "has_starred": false,
  "full_description": "awslimitchecker\n===============\n\n.. image:: https://img.shields.io/pypi/v/awslimitchecker.svg\n   :target: https://pypi.python.org/pypi/awslimitchecker\n   :alt: PyPi package version\n\n.. image:: http://jantman-personal-public.s3-website-us-east-1.amazonaws.com/pypi-stats/awslimitchecker/per-month.svg\n   :target: http://jantman-personal-public.s3-website-us-east-1.amazonaws.com/pypi-stats/awslimitchecker/index.html\n   :alt: PyPi downloads\n\n.. image:: https://img.shields.io/github/forks/jantman/awslimitchecker.svg\n   :alt: GitHub Forks\n   :target: https://github.com/jantman/awslimitchecker/network\n\n.. image:: https://img.shields.io/github/issues/jantman/awslimitchecker.svg\n   :alt: GitHub Open Issues\n   :target: https://github.com/jantman/awslimitchecker/issues\n\n.. image:: http://www.repostatus.org/badges/1.1.0/active.svg\n   :alt: Project Status: Active - The project has reached a stable, usable state and is being actively developed.\n   :target: http://www.repostatus.org/#active\n\n.. image:: http://badges.gitter.im/jantman/awslimitchecker.png\n   :alt: gitter.im chat\n   :target: https://gitter.im/awslimitchecker/Lobby\n\n.. image:: https://img.shields.io/conda/v/conda-forge/awslimitchecker\n   :alt: Conda\n   :target: https://anaconda.org/conda-forge/awslimitchecker\n\nMaster:\n\n.. image:: https://api.travis-ci.com/jantman/awslimitchecker.svg?branch=master\n   :target: http://travis-ci.com/jantman/awslimitchecker\n   :alt: travis-ci for master branch\n\n.. image:: https://codecov.io/github/jantman/awslimitchecker/coverage.svg?branch=master\n   :target: https://codecov.io/github/jantman/awslimitchecker?branch=master\n   :alt: coverage report for master branch\n\n.. image:: https://readthedocs.org/projects/awslimitchecker/badge/?version=latest\n   :target: https://readthedocs.org/projects/awslimitchecker/?badge=latest\n   :alt: sphinx documentation for latest release\n\nDevelop:\n\n.. image:: https://api.travis-ci.com/jantman/awslimitchecker.svg?branch=develop\n   :target: http://travis-ci.com/jantman/awslimitchecker\n   :alt: travis-ci for develop branch\n\n.. image:: https://codecov.io/github/jantman/awslimitchecker/coverage.svg?branch=develop\n   :target: https://codecov.io/github/jantman/awslimitchecker?branch=develop\n   :alt: coverage report for develop branch\n\n.. image:: https://readthedocs.org/projects/awslimitchecker/badge/?version=develop\n   :target: https://readthedocs.org/projects/awslimitchecker/?badge=develop\n   :alt: sphinx documentation for develop branch\n\nA script and python module to check your AWS service limits and usage, and warn when usage approaches limits.\n\nUsers building out scalable services in Amazon AWS often run into AWS' `service limits <http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html>`_ -\noften at the least convenient time (i.e. mid-deploy or when autoscaling fails). Amazon's `Trusted Advisor <https://aws.amazon.com/premiumsupport/trustedadvisor/>`_\ncan help this, but even the version that comes with Business and Enterprise support only monitors a small subset of AWS limits\nand only alerts *weekly*. The new Service Quotas service can also help with this, but relies on CloudWatch alarms per-limit to notify\nyou when you approach your limits; this cannot easily scale to the hundreds of current service limits. awslimitchecker provides a command line\nscript and reusable Python package that queries your current usage of AWS resources and compares it to limits (hard-coded AWS defaults that you\ncan override, API-based limits where available, Service Quotas data where available, or data from Trusted Advisor where available), notifying\nyou when you are approaching or at your limits.\n\nFull project documentation for the latest release is available at `http://awslimitchecker.readthedocs.io/en/latest/ <http://awslimitchecker.readthedocs.io/en/latest/>`_.\n\nStatus\n------\n\nawslimitchecker is mature software, with approximately 13,000 downloads per month and in daily use at numerous organizations.\n\nDevelopment status is being tracked on a board at waffle.io: https://waffle.io/jantman/awslimitchecker\n\nWhat It Does\n------------\n\n- Check current AWS resource usage against AWS Service Limits\n- Show and inspect current usage\n- Override default Service Limits (for accounts with increased limits)\n- Compare current usage to limits; return information about limits that\n  exceed thresholds, and (CLI wrapper) exit non-0 if thresholds are exceeded\n- Define custom thresholds per-limit\n- where possible, pull current limits from Trusted Advisor API\n- where possible, pull current limits from each service's API (for services that provide this information)\n- where possible, pull current limits from the Service Quotas service\n- Supports explicitly setting the AWS region\n- Supports using `STS <http://docs.aws.amazon.com/STS/latest/APIReference/Welcome.html>`_ to assume roles in other accounts, including using ``external_id``.\n- Optionally refresh Trusted Advisor \"Service Limits\" check before polling\n  Trusted Advisor data, and optionally wait for the refresh to complete (up to\n  an optional maximum time limit). See\n  `Getting Started - Trusted Advisor <http://awslimitchecker.readthedocs.io/en/latest/getting_started.html#trusted-advisor>`_\n  for more information.\n- Optionally send current usage and limit metrics to a metrics store, such as Datadog.\n- Optionally send warning/critical alerts to notification providers, such as PagerDuty.\n\nRequirements\n------------\n\n**Either Docker in order to run via the** `docker image <http://awslimitchecker.readthedocs.io/en/latest/docker.html>`__, **or:**\n\n* Python 3.5 or newer.\n* Python `VirtualEnv <http://www.virtualenv.org/>`_ and ``pip`` (recommended installation method; your OS/distribution should have packages for these)\n* `boto3 <http://boto3.readthedocs.org/>`_ >= 1.4.6 and its dependency `botocore <https://botocore.readthedocs.io/en/latest/>`_ >= 1.6.0.\n\nAlternatively, awslimitchecker may be installed through `conda <https://docs.conda.io/en/latest/>`_ with ``conda install -c conda-forge awslimitchecker``. This will automatically install the required dependencies as well.\n\nInstallation and Usage\n-----------------------\n\nSee `Getting Started <http://awslimitchecker.readthedocs.io/en/latest/getting_started.html>`_.\n\nCredentials\n-----------\n\nSee `Credentials <http://awslimitchecker.readthedocs.io/en/latest/getting_started.html#credentials>`_.\n\nGetting Help and Asking Questions\n----------------------------------\n\nSee `Getting Help <http://awslimitchecker.readthedocs.io/en/latest/getting_help.html>`_.\n\nFor paid support and development options, please see the\n`Enterprise Support Agreements and Contract Development <http://awslimitchecker.readthedocs.io/en/latest/getting_help.html#enterprise-support-agreements-and-contract-development>`_\nsection of the documentation.\n\nThere is also a `gitter.im chat channel <https://gitter.im/awslimitchecker/Lobby>`_ for support and discussion.\n\nChangelog\n---------\n\nSee `Changelog <http://awslimitchecker.readthedocs.io/en/latest/changes.html>`_.\n\nContributions\n-------------\n\nPull requests are most definitely welcome. Please cut them against the **develop** branch. For more information, see\nthe `development documentation <http://awslimitchecker.readthedocs.org/en/latest/development.html#pull-requests>`_. I'm\nalso happy to accept contributions in the form of bug reports, feature requests, testing, etc.\n\nLicense\n-------\n\nawslimitchecker is licensed under the `GNU Affero General Public License, version 3 or later <http://www.gnu.org/licenses/agpl.html>`_.\nThis shouldn't be much of a concern to most people; see `Development / AGPL <http://awslimitchecker.readthedocs.io/en/latest/development.html#agpl-license>`_ for more information.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}