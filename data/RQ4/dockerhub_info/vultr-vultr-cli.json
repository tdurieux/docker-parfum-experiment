{
  "user": "vultr",
  "name": "vultr-cli",
  "namespace": "vultr",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "The Vultr Command Line Interface",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 3,
  "pull_count": 1398,
  "last_updated": "2022-10-04T20:15:30.194824Z",
  "date_registered": "2020-07-20T19:47:27.096126Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "vultr",
  "has_starred": false,
  "full_description": "# vultr-cli\n\nThe Vultr Command Line Interface\n\n```sh\nvultr-cli is a command line interface for the Vultr API\n\nUsage:\n  vultr-cli [command]\n\nAvailable Commands:\n  account        Retrieve information about your account\n  api-key        retrieve information about the current API key\n  apps           Display all available applications\n  backups        display all available backups\n  bare-metal     bare-metal is used to access bare metal server commands\n  block-storage  block storage commands\n  dns            dns is used to access dns commands\n  firewall       firewall is used to access firewall commands\n  help           Help about any command\n  iso            iso is used to access iso commands\n  load-balancer  load balancer commands\n  network        network interacts with network actions\n  object-storage object storage commands\n  os             grab all available operating systems\n  plans          get information about Vultr plans\n  regions        get regions\n  reserved-ip    reserved-ip lets you interact with reserved-ip\n  script         startup script commands\n  instance       commands to interact with instances on vultr\n  snapshot       snapshot commands\n  ssh-key        ssh-key commands\n  user           user commands\n  version        Display current version of Vultr-cli\n\nFlags:\n      --config string   config file (default is $HOME/.vultr-cli.yaml)\n  -h, --help            help for vultr-cli\n  -t, --toggle          Help message for toggle\n\nUse \"vultr-cli [command] --help\" for more information about a command.\n```\n\n## Installation\n\nThere are three ways to install `vultr-cli`:\n1. Download a release from GitHub\n2. From source\n3. Package Manager\n  - Arch Linux\n  - Brew\n  - Snap (Coming soon)\n  - Chocolatey (Coming soon)\n4. [Docker Hub](https://hub.docker.com/repository/docker/vultr/vultr-cli)\n  \n### GitHub Release\nIf you are to visit the `vultr-cli` [releases](https://github.com/vultr/vultr-cli/releases) page. You can download a compiled version of `vultr-cli` for you Linux/MacOS/Windows in 64bit.\n\n### Building from source \n\nYou will need Go installed on your machine in order to work with the source (and make if you decide to pull the repo down).\n\n`go get -u github.com/vultr/vultr-cli`\n\nAnother way to build from source is to \n\n```\ngit clone git@github.com:vultr/vultr-cli.git or git clone https://github.com/vultr/vultr-cli.git\ncd vultr-cli\nmake build_(pass name of os + arch)\n```\n\nThe available make build options are\n- make builds/vultr-cli_darwin_amd64\n- make builds/vultr-cli_darwin_arm64 \n- make builds/vultr-cli_linux_386\n- make builds/builds/vultr-cli_linux_amd64  \n- make builds/builds/vultr-cli_linux_arm64  \n- make builds/vultr-cli_windows_386.exe\n- make builds/vultr-cli_windows_amd64.exe\n\nNote that the latter method will install the `vultr-cli` executable in `builds/vultr-cli_(name of os + arch)`.\n\n### Installing on Arch Linux\n\n```sh\npacman -S vultr-cli\n```\n\n### Installing via Brew\n\nYou will need to tap for formula\n``` sh\nbrew tap vultr/vultr-cli\n```\n\nThen install the formula\n\n```sh \nbrew install vultr-cli\n```\n\n## Using Vultr-cli\n\n### Authentication\n\nIn order to use `vultr-cli` you will need to export your [Vultr API KEY](https://my.vultr.com/settings/#settingsapi) \n\n`export VULTR_API_KEY=your_api_key`\n\n### Examples\n\n`vultr-cli` can interact with all of your Vultr resources. Here are some basic examples to get you started:\n\n##### List all available servers\n`vultr-cli server list`\n\n##### Create a server\n`vultr-cli server create --region <region-id> --plan <plan-id> --os <os-id> --hostname <hostname>` \n\n##### Create a DNS Domain\n`vultr-cli dns domain create --domain <domain-name> --ip <ip-address>`\n\n\n##### Utilizing the config flag\nThe config flag can be used to specify the vultr-cli.yaml file path when it's outside the default location. If the file has the `api-key` defined, the CLI will use the vultr-cli.yaml config, otherwise it will default to reading the environment variable for the api key.\n\n`vultr-cli instance list --config /Users/myuser/vultr-cli.yaml`\n\n### Example vultr-cli.yaml config file\n\nCurrently the only available field that you can use with a config file is `api-key`. Your yaml file will have a single entry which would be:\n\n`api-key: MYKEY`\n\n## Contributing\nFeel free to send pull requests our way! Please see the [contributing guidelines](CONTRIBUTING.md).\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}