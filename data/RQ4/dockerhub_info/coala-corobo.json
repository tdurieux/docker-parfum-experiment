{
  "user": "coala",
  "name": "corobo",
  "namespace": "coala",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "coala gitter bot",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 5431,
  "last_updated": "2019-05-25T13:55:50.240391Z",
  "date_registered": "2017-06-12T09:39:44.025945Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "coala",
  "has_starred": false,
  "full_description": "# corobo\n\n[![Codecov branch](https://img.shields.io/codecov/c/github/coala/corobo/master.svg)](https://codecov.io/gh/coala/corobo)\n[![Semaphore branch](https://semaphoreci.com/api/v1/coala/corobo/branches/master/badge.svg)](https://semaphoreci.com/coala/corobo)\n[![Gitter Room](https://img.shields.io/badge/gitter-join%20chat%20%E2%86%92-brightgreen.svg)](https://gitter.im/coala/corobo)\n\n## About\n\n`corobo` is a Python based chatbot that could be connected to many messaging\nplatforms including Slack, HipChat, Telegram, IRC, XMPP, Tox, Campfire, Gitter,\nSkype. Check all the backends available\n[here](http://errbot.io/en/latest/features.html#multiple-server-backends)\n\nThis repository is mainly a collection of plugins that are written for\n[errbot](http://errbot.io). Errbot is a Python based chatbot framework.\n\nAs described on Errbot website:\n> Errbot is a chatbot, a daemon that connects to your favorite chat service\n  and brings your tools into the conversation.\n\nIt handles sending messages to correct rooms/person, receiving messages,\ncalling your command routines on matching commands, etc. These command routines\nare added by writing plugins, which are collected and loaded by Errbot when it\nis ran.\n\n## Features\n\nRead more about what `corobo` could do for you\n[here](https://github.com/coala/corobo/blob/master/docs/corobo.rst).\n\n## Environment Variables\n\n1. `BOT_ROOT` - absolute path of the project root.\n2. `BOT_PREFIX` - prefix to use for issuing bot commands.\n3. `BOT_ADMINS` - Space separated list of admins of the errbot instance.\n4. `ROOMS` - Space separated list of rooms to join on startup. e.g.\n   `ROOMS=\"coala/coala coala/coala/corobo\"`\n5. `BACKEND` - Backend to use.\n   Default is Text, or Gitter when `BOT_TOKEN` is set.\n5. `BOT_TOKEN` - Token used to connect to the backends - Mandatory for\n   backends except Text.\n6. `GH_TOKEN` - GitHub personal access token to create issues, invite people to\n   org, assign and unassign issues, etc. - Mandatory for LabHub to work for\n   GitHub.\n7. `GL_TOKEN` - GitLab personal access token to create, assign, unassign\n   issues, etc. - Mandatory for LabHub to work for GitLab.\n8. `GH_ORG_NAME` - Name of github organization - Mandatory for LabHub GitHub\n9. `GL_ORG_NAME` - Name of gitlab organization - Mandatory for LabHub GitLab\n10. `WA_TOKEN` - wolframalpha APP_ID to access wolfram API.\n11. `IGNORE_USERNAMES` - space separated list of usernames to ignore messages\n    from.\n\n## Environment Variables for answers microservice\n\n1. `ANSWER_END` - Endpoint of `answers` microservice(in `answers/` directory). It is exposed at port\n   `8000`.\n\n## Setup without docker\n\n1. Install the dependencies\n   `pip install -r requirements.txt`\n2. Set environment variables mentioned above if required\n   `export COBOT_TOKEN=...`, or edit config.py\n3. Run `errbot`\n\n## Setup with docker\n\n1. Grab the image `docker pull meetmangukiya/corobo`\n2. Run the image :D:\n    ```\n    docker run --rm -e COBOT_TOKEN=\"this-is-chatbot-token\" \\\n                    -e COBOT_PREFIX=\"gitmate\" \\\n                    -e BOT_ADMINS=\"sils meetmangukiya\" \\\n                    -e BACKEND=\"Slack\" \\\n                    -e GH_TOKEN=\"this-is-the-bots-github-token\" \\\n                    -e GL_TOKEN=\"this-is-the-bots-gitlab-token\" \\\n                    -e GH_ORG_NAME=\"gitmate\" \\\n                    -e GL_ORG_NAME=\"gitmate\" \\\n                    meetmangukiya/corobo\n    ```\n\n## Under Brewing\n\nThere are a few plugins that may be coala specific. But we are working on making\nit more configurable and adaptable for other orgs.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}