{
  "user": "codeception",
  "name": "codeception",
  "namespace": "codeception",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Official Codeception Docker Image",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 31,
  "pull_count": 1784951,
  "last_updated": "2022-12-28T14:10:51.131289Z",
  "date_registered": "2016-05-25T22:51:22.809878Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "codeception",
  "has_starred": false,
  "full_description": "# Codeception\n\n[![Latest Stable](https://poser.pugx.org/Codeception/Codeception/version.png)](https://packagist.org/packages/Codeception/Codeception)\n[![Total Downloads](https://poser.pugx.org/codeception/codeception/downloads.png)](https://packagist.org/packages/codeception/codeception)\n[![Build status](https://github.com/Codeception/Codeception/workflows/build/badge.svg)](https://github.com/Codeception/Codeception/actions?query=workflow%3Abuild)\n\n**Modern PHP Testing for everyone**\n\nCodeception is a modern full-stack testing framework for PHP.\nInspired by BDD, it provides an absolutely new way of writing acceptance, functional and even unit tests.\n\n#### Contributions\n\nAt Codeception we are glad to receive contributions from the community. If you want to send additions or fixes to the code or the documentation please check the [Contributing guide](https://github.com/Codeception/Codeception/blob/5.0/CONTRIBUTING.md).\n\n### At a Glance\n\nDescribe what you test and how you test it. Use PHP to write descriptions faster.\n\nRun tests and see what actions were taken and what results were seen.\n\n#### Sample test\n\n``` php\n$I->amOnPage('/');\n$I->click('Pages');\n$I->click('New');\n$I->see('New Page');\n$I->submitForm('form#new_page', ['title' => 'Movie Review']);\n$I->see('page created'); // notice generated\n$I->see('Movie Review','h1'); // head of page of is our title\n$I->seeInCurrentUrl('pages/movie-review'); // slug is generated\n$I->seeInDatabase('pages', ['title' => 'Movie Review']); // data is stored in database\n```\n\nFor unit testing you can stay on classic PHPUnit tests, as Codeception can run them too.\n\n## Getting Started\n\nInitialize configuration files and default directory structure by running\n\n```sh\ndocker container run --rm -v $(pwd):/project/ --user $(id -u):$(id -g) codeception/codeception:latest bootstrap\n```\n\nThen generate your first test file\n```sh\ndocker container run --rm -v $(pwd):/project/  --user $(id -u):$(id -g) codeception/codeception:latest generate:cest Func\ntional First\n```\n\nAdd some actions to `tests/Functional/FirstCest.php` and run your tests:\n```sh\ndocker container run --rm -v $(pwd):/project/  --user $(id -u):$(id -g) codeception/codeception:latest run\n```\n\n## Documentation\n\n[View Documentation](https://codeception.com/docs/Introduction)\n\n## License\nMIT\n\n(c) [Codeception Team](https://codeception.com/credits)\n2011-2022\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json",
    "application/vnd.docker.distribution.manifest.v1+prettyjws"
  ],
  "content_types": [
    "image"
  ]
}