{
  "user": "openrca",
  "name": "orca",
  "namespace": "openrca",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Root Cause Analysis for Kubernetes",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 1558,
  "last_updated": "2021-11-01T15:06:32.597199Z",
  "date_registered": "2019-11-03T13:48:28.834773Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "openrca",
  "has_starred": false,
  "full_description": "# OpenRCA\n\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/3912/badge)](https://bestpractices.coreinfrastructure.org/projects/3912)\n[![Build Status](https://travis-ci.org/openrca/orca.svg?branch=master)](https://travis-ci.org/openrca/orca)\n[![License](https://img.shields.io/github/license/openrca/orca)](https://github.com/openrca/orca)\n[![Gitter](https://img.shields.io/gitter/room/openrca/community)](https://gitter.im/openrca/community)\n\n<h2 align=\"center\">\n    <img src=\"docs/images/orca-logo.svg\" alt=\"OpenRCA\" height=\"200px\">\n    <br>\n    Root Cause Analysis for Kubernetes\n</h2>\n\nOpenRCA attempts to facilitate root cause inference of issues emerging in Kubernetes clusters. By\nconstructing a real-time cluster topology graph enriched with telemetry data obtained from\nintegrated telemetry sources (Prometheus, Elasticsearch, Falco, Istio, and others), provides\noperators with a powerful analytical toolkit for dealing with daily application failures,\nbottlenecks, and misconfigurations. Moreover, it comes with algorithms that leverage the collected\ngraph data to pinpoint sources of complex cluster defects.\n\n## Objectives\n\n- Real-time cluster topology visualization\n- Integration hub for telemetry data (Prometheus, Elasticsearch,\n  Falco, Istio, and others)\n- Post-mortem analysis\n- Automated root cause inference\n- Diagnostics framework for common applications (databases, load\n  balancers, message queues)\n- Site reliability engineering and chaos testing\n\n## Installation\n\nInstall using Helm chart:\n\n```bash\n$ helm install ./helm/orca --namespace rca --name orca\n```\n\n> Use a 2.x version of Helm. Helm 3 is not supported.\n\n## Usage\n\n### Dashboard\n\nPort-forward the dashboard for access via the web browser:\n\n```bash\n$ kubectl -n rca port-forward svc/orca-ui 8080\n```\n\nThe dashboard should be available at http://localhost:8080.\n\n## Contact\n\nReach project contributors via these channels:\n\n-   [Gitter chat room](https://gitter.im/openrca/community)\n-   [Github issues](https://github.com/openrca/orca/issues)\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}