{
  "user": "pryorda",
  "name": "vmware_exporter",
  "namespace": "pryorda",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "VMWare VCenter Exporter for Prometheus.",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 9,
  "pull_count": 3576651,
  "last_updated": "2022-10-11T16:58:02.496449Z",
  "date_registered": "2018-06-25T20:00:32.771152Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "pryorda",
  "has_starred": false,
  "full_description": "# vmware_exporter\n\nVMware vCenter Exporter for Prometheus.\n\nGet VMware vCenter information:\n- Basic VM and Host metrics\n- Current number of active snapshots\n- Datastore size and other stuff\n- Snapshot Unix timestamp creation date\n\n## Badges\n![Docker Stars](https://img.shields.io/docker/stars/pryorda/vmware_exporter.svg)\n![Docker Pulls](https://img.shields.io/docker/pulls/pryorda/vmware_exporter.svg)\n![Docker Automated](https://img.shields.io/docker/automated/pryorda/vmware_exporter.svg)\n\n[![Travis Build Status](https://travis-ci.org/pryorda/vmware_exporter.svg?branch=master)](https://travis-ci.org/pryorda/vmware_exporter)\n![Docker Build](https://img.shields.io/docker/build/pryorda/vmware_exporter.svg)\n[![Join the chat at https://gitter.im/vmware_exporter/community](https://badges.gitter.im/vmware_exporter/community.svg)](https://gitter.im/vmware_exporter/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n## Usage\n\n*Requires Python >= 3.6*\n\n- Install with `$ python setup.py install` or via pip `$ pip install vmware_exporter`. The docker command below is preferred.\n- Create `config.yml` based on the configuration section. Some variables can be passed as environment variables\n- Run `$ vmware_exporter -c /path/to/your/config`\n- Go to http://localhost:9272/metrics?vsphere_host=vcenter.company.com to see metrics\n\nAlternatively, if you don't wish to install the package, run it using `$ vmware_exporter/vmware_exporter.py` or use the following docker command:\n\n```\ndocker run -it --rm  -p 9272:9272 -e VSPHERE_USER=${VSPHERE_USERNAME} -e VSPHERE_PASSWORD=${VSPHERE_PASSWORD} -e VSPHERE_HOST=${VSPHERE_HOST} -e VSPHERE_IGNORE_SSL=True -e VSPHERE_SPECS_SIZE=2000 --name vmware_exporter pryorda/vmware_exporter\n```\n\nWhen using containers combined with `--env-file` flag, please use capital letters to set bolleans, for example:\n\n```\n$ podman run -it --rm -p 9272:9272 --name vmware_exporter --env-file config.env pryorda/vmware_exporter\n$ cat config.env\nVSPHERE_USER=administrator@vsphere.my.domain.com\nVSPHERE_PASSWORD=Secure-Pass\nVSPHERE_HOST=192.168.0.1\nVSPHERE_IGNORE_SSL=TRUE\nVSPHERE_SPECS_SIZE=2000\n```\n\n\n### Configuration and limiting data collection\n\nOnly provide a configuration file if enviroment variables are not used. If you do plan to use a configuration file, be sure to override the container entrypoint or add -c config.yml to the command arguments.\n\nIf you want to limit the scope of the metrics gathered, you can update the subsystem under `collect_only` in the config section, e.g. under `default`, or by using the environment variables:\n\n    collect_only:\n        vms: False\n        vmguests: True\n        datastores: True\n        hosts: True\n        snapshots: True\n\nThis would only connect datastores and hosts.\n\nYou can have multiple sections for different hosts and the configuration would look like:\n```\ndefault:\n    vsphere_host: \"vcenter\"\n    vsphere_user: \"user\"\n    vsphere_password: \"password\"\n    ignore_ssl: False\n    specs_size: 5000\n    fetch_custom_attributes: True\n    fetch_tags: True\n    fetch_alarms: True\n    collect_only:\n        vms: True\n        vmguests: True\n        datastores: True\n        hosts: True\n        snapshots: True\n\nesx:\n    vsphere_host: vc.example2.com\n    vsphere_user: 'root'\n    vsphere_password: 'password'\n    ignore_ssl: True\n    specs_size: 5000\n    fetch_custom_attributes: True\n    fetch_tags: True\n    fetch_alarms: True\n    collect_only:\n        vms: False\n        vmguests: True\n        datastores: False\n        hosts: True\n        snapshots: True\n\nlimited:\n    vsphere_host: slowvc.example.com\n    vsphere_user: 'administrator@vsphere.local'\n    vsphere_password: 'password'\n    ignore_ssl: True\n    specs_size: 5000\n    fetch_custom_attributes: True\n    fetch_tags: True\n    fetch_alarms: False\n    collect_only:\n        vms: False\n        vmguests: False\n        datastores: True\n        hosts: False\n        snapshots: False\n\n```\nSwitching sections can be done by adding ?section=limited to the URL.\n\n#### Environment Variables\n| Variable                      \t| Precedence             | Defaults | Description                                      \t\t\t\t|\n| --------------------------------------| ---------------------- | -------- | --------------------------------------------------------------------------|\n| `VSPHERE_HOST`               \t\t| config, env, get_param | n/a      | vsphere server to connect to   \t\t\t\t\t\t|\n| `VSPHERE_USER`               \t\t| config, env            | n/a      | User for connecting to vsphere \t\t\t\t\t\t|\n| `VSPHERE_PASSWORD`           \t\t| config, env            | n/a      | Password for connecting to vsphere \t\t\t\t\t|\n| `VSPHERE_SPECS_SIZE`         \t\t| config, env            | 5000     | Size of specs list for query stats function \t\t\t\t|\n| `VSPHERE_IGNORE_SSL`         \t\t| config, env            | False    | Ignore the ssl cert on the connection to vsphere host \t\t\t|\n| `VSPHERE_FETCH_CUSTOM_ATTRIBUTES`    \t| config, env            | False    | Set to true to collect objects custom attributes as metric labels \t|\n| `VSPHERE_FETCH_TAGS`    \t\t| config, env            | False    | Set to true to collect objects tags as metric labels \t\t\t|\n| `VSPHERE_FETCH_ALARMS`       \t\t| config, env            | False    | Fetch objects triggered alarms, and in case of hosts hdw alarms as well \t|\n| `VSPHERE_COLLECT_HOSTS`      \t\t| config, env            | True     | Set to false to disable collection of host metrics \t\t\t|\n| `VSPHERE_COLLECT_DATASTORES` \t\t| config, env            | True     | Set to false to disable collection of datastore metrics \t\t\t|\n| `VSPHERE_COLLECT_VMS`        \t\t| config, env            | True     | Set to false to disable collection of virtual machine metrics \t\t|\n| `VSPHERE_COLLECT_VMGUESTS`   \t\t| config, env            | True     | Set to false to disable collection of virtual machine guest metrics \t|\n| `VSPHERE_COLLECT_SNAPSHOTS`  \t\t| config, env            | True     | Set to false to disable collection of snapshot metrics \t\t\t|\n\nYou can create new sections as well, with very similiar variables. For example, to create a `limited` section you can set:\n\n| Variable                      \t\t| Precedence             | Defaults | Description                                      \t\t\t\t|\n| ----------------------------------------------| ---------------------- | -------- | --------------------------------------------------------------------------|\n| `VSPHERE_LIMITED_HOST`               \t\t| config, env, get_param | n/a      | vsphere server to connect to   \t\t\t\t\t\t|\n| `VSPHERE_LIMITED_USER`               \t\t| config, env            | n/a      | User for connecting to vsphere \t\t\t\t\t\t|\n| `VSPHERE_LIMITED_PASSWORD`           \t\t| config, env            | n/a      | Password for connecting to vsphere \t\t\t\t\t|\n| `VSPHERE_LIMITED_SPECS_SIZE`         \t\t| config, env            | 5000     | Size of specs list for query stats function \t\t\t\t|\n| `VSPHERE_LIMITED_IGNORE_SSL`         \t\t| config, env            | False    | Ignore the ssl cert on the connection to vsphere host \t\t\t|\n| `VSPHERE_LIMITED_FETCH_CUSTOM_ATTRIBUTES`   \t| config, env            | False    | Set to true to collect objects custom attributes as metric labels \t|\n| `VSPHERE_LIMITED_FETCH_TAGS`    \t\t| config, env            | False    | Set to true to collect objects tags as metric labels \t\t\t|\n| `VSPHERE_LIMITED_FETCH_ALARMS`       \t\t| config, env            | False    | Fetch objects triggered alarms, and in case of hosts hdw alarms as well\t|\n| `VSPHERE_LIMITED_COLLECT_HOSTS`      \t\t| config, env            | True     | Set to false to disable collection of host metrics \t\t\t|\n| `VSPHERE_LIMITED_COLLECT_DATASTORES` \t\t| config, env            | True     | Set to false to disable collection of datastore metrics \t\t\t|\n| `VSPHERE_LIMITED_COLLECT_VMS`        \t\t| config, env            | True     | Set to false to disable collection of virtual machine metrics \t\t|\n| `VSPHERE_LIMITED_COLLECT_VMGUESTS`   \t\t| config, env            | True     | Set to false to disable collection of virtual machine guest metrics \t|\n| `VSPHERE_LIMITED_COLLECT_SNAPSHOTS`  \t\t| config, env            | True     | Set to false to disable collection of snapshot metrics \t\t\t|\n\nYou need to set at least `VSPHERE_SECTIONNAME_USER` for the section to be detected.\n\n### Prometheus configuration\n\nYou can use the following parameters in the Prometheus configuration file. The `params` section is used to manage multiple login/passwords.\n\n```\n  - job_name: 'vmware_vcenter'\n    metrics_path: '/metrics'\n    static_configs:\n      - targets:\n        - 'vcenter.company.com'\n    relabel_configs:\n      - source_labels: [__address__]\n        target_label: __param_target\n      - source_labels: [__param_target]\n        target_label: instance\n      - target_label: __address__\n        replacement: localhost:9272\n\n  - job_name: 'vmware_esx'\n    metrics_path: '/metrics'\n    file_sd_configs:\n      - files:\n        - /etc/prometheus/esx.yml\n    params:\n      section: [esx]\n    relabel_configs:\n      - source_labels: [__address__]\n        target_label: __param_target\n      - source_labels: [__param_target]\n        target_label: instance\n      - target_label: __address__\n        replacement: localhost:9272\n\n# Example of Multiple vCenter usage per #23\n\n- job_name: vmware_export\n    metrics_path: /metrics\n    static_configs:\n    - targets:\n      - vcenter01\n      - vcenter02\n      - vcenter03\n    relabel_configs:\n    - source_labels: [__address__]\n      target_label: __param_target\n    - source_labels: [__param_target]\n      target_label: instance\n    - target_label: __address__\n      replacement: exporter_ip:9272\n```\n\n## Current Status\n\n- vCenter and vSphere 6.0/6.5 have been tested.\n- VM information, Snapshot, Host and Datastore basic information is exported, i.e:\n```\n# HELP vmware_snapshots VMware current number of existing snapshots\n# TYPE vmware_snapshot_count gauge\nvmware_snapshot_timestamp_seconds{vm_name=\"My Super Virtual Machine\"} 2.0\n# HELP vmware_snapshot_timestamp_seconds VMware Snapshot creation time in seconds\n# TYPE vmware_snapshot_timestamp_seconds gauge\nvmware_snapshot_age{vm_name=\"My Super Virtual Machine\",vm_snapshot_name=\"Very old snaphot\"} 1478146956.96092\nvmware_snapshot_age{vm_name=\"My Super Virtual Machine\",vm_snapshot_name=\"Old snapshot\"} 1478470046.975632\n\n# HELP vmware_datastore_capacity_size VMware Datastore capacity in bytes\n# TYPE vmware_datastore_capacity_size gauge\nvmware_datastore_capacity_size{ds_name=\"ESX1-LOCAL\"} 67377299456.0\n# HELP vmware_datastore_freespace_size VMware Datastore freespace in bytes\n# TYPE vmware_datastore_freespace_size gauge\nvmware_datastore_freespace_size{ds_name=\"ESX1-LOCAL\"} 66349694976.0\n# HELP vmware_datastore_uncommited_size VMware Datastore uncommitted in bytes\n# TYPE vmware_datastore_uncommited_size gauge\nvmware_datastore_uncommited_size{ds_name=\"ESX1-LOCAL\"} 0.0\n# HELP vmware_datastore_provisoned_size VMware Datastore provisoned in bytes\n# TYPE vmware_datastore_provisoned_size gauge\nvmware_datastore_provisoned_size{ds_name=\"ESX1-LOCAL\"} 1027604480.0\n# HELP vmware_datastore_hosts VMware Hosts number using this datastore\n# TYPE vmware_datastore_hosts gauge\nvmware_datastore_hosts{ds_name=\"ESX1-LOCAL\"} 1.0\n# HELP vmware_datastore_vms VMware Virtual Machines number using this datastore\n# TYPE vmware_datastore_vms gauge\nvmware_datastore_vms{ds_name=\"ESX1-LOCAL\"} 0.0\n\n# HELP vmware_host_power_state VMware Host Power state (On / Off)\n# TYPE vmware_host_power_state gauge\nvmware_host_power_state{host_name=\"esx1.company.com\"} 1.0\n# HELP vmware_host_cpu_usage VMware Host CPU usage in MHz\n# TYPE vmware_host_cpu_usage gauge\nvmware_host_cpu_usage{host_name=\"esx1.company.com\"} 2959.0\n# HELP vmware_host_cpu_max VMware Host CPU max availability in MHz\n# TYPE vmware_host_cpu_max gauge\nvmware_host_cpu_max{host_name=\"esx1.company.com\"} 28728.0\n# HELP vmware_host_memory_usage VMware Host Memory usage in Mbytes\n# TYPE vmware_host_memory_usage gauge\nvmware_host_memory_usage{host_name=\"esx1.company.com\"} 107164.0\n# HELP vmware_host_memory_max VMware Host Memory Max availability in Mbytes\n# TYPE vmware_host_memory_max gauge\nvmware_host_memory_max{host_name=\"esx1.company.com\"} 131059.01953125\n```\n\n## References\n\nThe VMware exporter uses theses libraries:\n- [pyVmomi](https://github.com/vmware/pyvmomi) for VMware connection\n- Prometheus [client_python](https://github.com/prometheus/client_python) for Prometheus supervision\n- [Twisted](http://twistedmatrix.com/trac/) for HTTP server\n\nThe initial code is mainly inspired by:\n- https://www.robustperception.io/writing-a-jenkins-exporter-in-python/\n- https://github.com/vmware/pyvmomi-community-samples\n- https://github.com/jbidinger/pyvmomi-tools\n\nForked from https://github.com/rverchere/vmware_exporter. I removed the fork so that I could do searching and everything.\n\n## Maintainer\n\nDaniel Pryor [pryorda](https://github.com/pryorda)\n\n## License\n\nSee LICENSE file\n\n[![Known Vulnerabilities](https://snyk.io/test/github/rmontenegroo/vmware_exporter/badge.svg?targetFile=requirements.txt)](https://snyk.io/test/github/rmontenegroo/vmware_exporter?targetFile=requirements.txt)\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}