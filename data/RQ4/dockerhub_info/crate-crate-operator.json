{
  "user": "crate",
  "name": "crate-operator",
  "namespace": "crate",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "CrateDB Kubernetes Operator",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 878,
  "last_updated": "2022-12-15T15:15:29.294088Z",
  "date_registered": "2020-11-11T08:39:28.405374Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "crate",
  "has_starred": false,
  "full_description": "| Continuous Integration | Docs |\n|---|---|\n| [![Continuous Integration](https://github.com/crate/crate-operator/workflows/CI/badge.svg)](https://github.com/crate/crate-operator) | [![Documentation](https://img.shields.io/badge/docs-latest-brightgreen.svg)](https://crate-operator.readthedocs.io/en/latest/) |\n\n---\n\n# ‚öôÔ∏è CrateDB Kubernetes Operator\n\nThe **CrateDB Kubernetes Operator** provides convenient way to run [CrateDB](https://github.com/crate/crate) clusters inside [Kubernetes](https://kubernetes.io/). It is built on top of the [Kopf: Kubernetes Operators Framework](https://github.com/nolar/kopf).\n\n## ü§π Usage\n\nA minimal custom resource for a 3 node CrateDB cluster may look like this:\n\n`dev-cluster.yaml`:\n\n```yaml\napiVersion: cloud.crate.io/v1\nkind: CrateDB\nmetadata:\n  name: my-cluster\n  namespace: dev\nspec:\n  cluster:\n    imageRegistry: crate\n    name: crate-dev\n    version: 4.3.1\n  nodes:\n    data:\n    - name: default\n      replicas: 3\n      resources:\n        cpus: 4\n        disk:\n          count: 1\n          size: 128GiB\n          storageClass: default\n        heapRatio: 0.5\n        memory: 4Gi\n```\n\n```console\n$ kubectl --namespace dev create -f dev-cluster.yaml\n...\n\n$ kubectl --namespace dev get cratedbs\nNAMESPACE   NAME         AGE\ndev         my-cluster   36s\n```\n\n## üéâ Features\n\n-   \"all equal nodes\" cluster setup\n-   \"master + data nodes\" cluster setup\n-   safe scaling of clusters\n-   safe rolling version upgrades for clusters\n-   SSL for HTTP and PG connections via Let's Encrypt certificate\n-   custom node settings\n-   custom cluster settings\n-   custom storage classes\n-   region/zone awareness for AWS and Azure\n\n## üíΩ Installation\n\nTo be able to deploy the custom resource `CrateDB` to a Kubernetes cluster, the API needs to be extended with a Custom Resource Definition (CRD). The CRD for `CrateDB` can be found in the `deploy/` folder and can be applied (assuming sufficient privileges).\n\n```console\n$ git clone git@github.com:crate/crate-operator.git\n...\n$ cd crate-operator\n```\n\n```console\n$ kubectl apply -f deploy/crd.yaml\ncustomresourcedefinition.apiextensions.k8s.io/cratedbs.cloud.crate.io created\n```\n\nOnce the CRD is installed, the operator itself can be deployed using a `Deployment` in the `crate-operator` namespace.\n\n```console\n$ kubectl create namespace crate-operator\n...\n$ kubectl create -f deploy/rbac.yaml\n...\n$ kubectl create -f deploy/deployment.yaml\n...\n```\n\nPlease refer to the [configuration documentation](https://github.com/crate/crate-operator/tree/master/docs/source/configuration.rst) for further details.\n\n## üíª Development\n\nPlease refer to the [Working on the operator](https://github.com/crate/crate-operator/tree/master/docs/source/development.rst) section of the documentation.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}