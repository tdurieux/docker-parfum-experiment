{
  "user": "tylergibbs2",
  "name": "tsundoku",
  "namespace": "tylergibbs2",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Automated anime downloading.",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 633,
  "last_updated": "2022-12-26T21:21:11.028897Z",
  "date_registered": "2020-12-02T04:32:19.315719Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "tylergibbs2",
  "has_starred": false,
  "full_description": "# Tsundoku (積ん読)\n\n[![License: MPL 2.0](https://img.shields.io/badge/License-MPL%202.0-blue.svg)](https://opensource.org/licenses/MPL-2.0)\n[![Discord Invite](https://img.shields.io/discord/801396820772257802)](https://discord.gg/thxN858gXm)\n\nTsundoku is an all-in-one utility to download, rename, and move anime from RSS feeds.\nAnime is able to be matched from any source with an RSS feed. Out of the box, Tsundoku has a parser for SubsPlease installed.\n\n[Chat on Discord](https://discord.gg/thxN858gXm)\n\n## Key Features\n\n* Parse various RSS feeds for the latest anime\n* Rename and move downloaded files automatically\n* Search Nyaa for existing releases and batches\n* Import third-party RSS parsers to search other feeds\n* Send updates to Discord or Slack with webhooks\n* View airing status of shows\n* Full-fledged backend RESTful API for easy integration ([docs](https://tsundoku.moe/docs))\n\n## Requirements\n\n* Python 3.7+\n* [Deluge WebAPI Plugin](https://github.com/idlesign/deluge-webapi) OR [qBittorrent](https://www.qbittorrent.org/) with WebUI enabled\n\n## Installation\n\n```sh\n$ git clone https://github.com/tylergibbs2/Tsundoku\n$ cd Tsundoku\n$ python -m venv .venv\n# WINDOWS: .venv\\Scripts\\activate.bat\n# LINUX:   source .venv/bin/activate\n$ pip install -r requirements.txt\n$ python -m tsundoku --create-user   # Creates a user for logging in\n```\n\n## Updating\n\n```sh\n$ git pull\n# WINDOWS: .venv\\Scripts\\activate.bat\n# LINUX:   source .venv/bin/activate\n$ pip install -r requirements.txt\n```\n\n## Usage\n\n```sh\n# WINDOWS: .venv\\Scripts\\activate.bat\n# LINUX:   source .venv/bin/activate\n$ python -m tsundoku\n```\n\n## Installation (Docker)\n\n1. Copy the `docker-compose.yml` file from the repository.\n2. Copy any parsers that you want and put them in a new folder.\n3. Replace the file paths.\n4. Run `docker-compose up -d`.\n\nI will not be providing an example on how to start the container using\n`docker run`.\n\nYou will then need to perform the following commands:\n```sh\ndocker container exec -it tsundoku python -m tsundoku --create-user\n```\n\nWhen pointing to directories within Tsundoku, make sure that you begin\nyour target directory with `/target/...`.\n\nFor the sake of example, here is my personal entry for Tsundoku in `docker-compose.yml`:\n```yml\nversion: \"3.8\"\nservices:\n  tsundoku:\n    image: tylergibbs2/tsundoku\n    container_name: tsundoku\n    environment:\n      - PUID=1000\n      - PGID=1000\n    volumes:\n      - /opt/appdata/tsundoku/data:/app/data\n      - /opt/appdata/tsundoku/parsers:/app/parsers\n      - /mediadrives/Downloaded:/downloaded\n      - /mediadrives/Anime:/target\n    ports:\n      - \"6439:6439\"\n    restart: always\n```\n\n`/opt/appdata/tsundoku/parsers` is the folder where I manually placed all the parsers I use.\n\n`/mediadrives/Downloaded` is the absolute path where Tsundoku will look for completed torrents.\n\n`/mediadrives/Anime` is the absolute path where Tsundoku will move completed torrents.\n\n\nAnd [here](https://i.imgur.com/BkNz7P4.png) is an example of what it looks like when adding a show using Docker.\n\n\n## Parsers\n\nPlease see the [example parser](https://github.com/tylergibbs2/Tsundoku/blob/master/parsers/_example.py) for writing custom parsers.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}