{
  "user": "meyer1994",
  "name": "ipgit",
  "namespace": "meyer1994",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Inter Planetary Git ",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 197,
  "last_updated": "2021-07-22T12:09:50.30655Z",
  "date_registered": "2020-09-04T04:46:21.426362Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "meyer1994",
  "has_starred": false,
  "full_description": "# Inter Planetary GIT\n\n[![build](https://github.com/meyer1994/ipgit/actions/workflows/build.yml/badge.svg)](https://github.com/meyer1994/ipgit/actions/workflows/build.yml)\n[![standard-readme compliant](https://img.shields.io/badge/readme%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/RichardLitt/standard-readme)\n\nBecause it is possible!\n\n## Table of Contents\n\n- [About](#about)\n- [Install](#install)\n- [Usage](#usage)\n- [Thanks](#thanks)\n\n## About\n\nI think web 3.0 future is promising. I like the idea of a distributed web. As a\nconsequence, I like IPFS. It is such a cool concept. However, in my opinion,\nmost people do not use it because it is hard to do so. Go? Running a Docker\ncontainer in my machine? What? Can't I just use it as a simple tool or service?\n\n**Yes, you can.**\n\nThis is why I created this, extremely simple and limited, web application. It\nis just an endpoint. A git remote, for the tech savy. You can configure with\none bash command and just use it. See the (small) example below:\n\n```sh\n$ git remote add ipfs http://ipgit.herokuapp.com/\n$ git push ipfs\nremote: Resolving deltas: 100% (53/53), done.\nremote: IPFS hash:\nremote: QmU8wwg65D2MpbumSKPTWUhydmAin5jmXbwNhxUWzyeXs1\n```\n\nIt works the other way around as well. If you want, you can use it to clone git\nrepositories that are stored in IPFS.\n\n```sh\n$ git clone https://ipgit.herokuapp.com/QmZUnAU4Vn7DvDHEnJ1dz2uV2dimf79HNXdffgY9MbQGWP\nCloning into 'QmZUnAU4Vn7DvDHEnJ1dz2uV2dimf79HNXdffgY9MbQGWP'...\n$ ls QmZUnAU4Vn7DvDHEnJ1dz2uV2dimf79HNXdffgY9MbQGWP/\nDockerfile  Makefile  app.py  git.py  heroku.yml  post-update  requirements.txt  sender.py\n```\n\nThat is it! No installation, no requirements. Just plain old git.\n\nYour files will be pinned by default. However, because heroku shuts down the\nafter some inactivity time, it is not guarantee that your files will be there\nwhen you need them. You should try pinning them into some file pinning service\nto avoid loosing it.\n\n## Install\n\nThis project uses [fastapi][1] and [uvicorn][2] for server interactions.\n[IPFS][3] needs to be running on the local machine for the server to start.\nAnd, obviously, you will need [git][4] installed.\n\n```sh\n$ pip install -r requirements.txt\n```\n\n## Usage\n\nTo run a local version of this project, just execute:\n\n```sh\n$ ipfs daemon --init\n$ uvicor app:app --reload\n$ make local  # optional\n```\n\n`make local` adds a `local` remote on `http://localhost:8000` for development.\nWhen developing, you can simply test your modification by calling\n`git push local`.\n\n## Thanks\n\nThis project would not have been possible without the code in the following\nrepositories. They helped me understand a lot about git http backend.\n\n- [git_http_backend.py][5]\n- [grack][6]\n\n\n[1]: https://fastapi.tiangolo.com/\n[2]: https://uvicorn.org/\n[3]: https://ipfs.io/\n[4]: https://git-scm.com/\n\n[5]: https://github.com/dvdotsenko/git_http_backend.py\n[6]: https://github.com/schacon/grack\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}