{
  "user": "fnndsc",
  "name": "pman",
  "namespace": "fnndsc",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "ChRIS compute resource job dispatcher",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 197236,
  "last_updated": "2022-12-30T06:23:15.980704Z",
  "date_registered": "2017-02-02T19:30:15.257402Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "fnndsc",
  "has_starred": false,
  "full_description": "# ![ChRIS logo](https://github.com/FNNDSC/ChRIS_ultron_backEnd/blob/master/docs/assets/logo_chris.png) pman\n\n[![Version](https://img.shields.io/docker/v/fnndsc/pman?sort=semver)](https://hub.docker.com/r/fnndsc/pman)\n[![MIT License](https://img.shields.io/github/license/fnndsc/pman)](LICENSE)\n[![ci](https://github.com/FNNDSC/pman/actions/workflows/ci.yml/badge.svg)](https://github.com/FNNDSC/pman/actions/workflows/ci.yml)\n\n_pman_, which once stood for **p**rocess **man**ager,\nis a [Flask](https://flask-restful.readthedocs.io/) application\nproviding an API for creating jobs with various schedulers e.g.\nKubernetes, Docker Swarm, and SLURM.\nIt basically translates its own JSON interface to requests for\nthe various supported backends.\n\n_pman_ is tightly-coupled to\n[_pfcon_](https://github.com/FNNDSC/pfcon). _pman_ and _pfcon_\nare typially deployed as a pair, providing the _pfcon_ service.\n\n## Development\n\nThis section describes how to set up a local instance of *pman* working against swarm.\n\n### Using Docker Compose\n\nThe easiest way to run a code hot-reloading server for\ndevelopment is using docker-compose.\n\n```shell\ndocker swarm init --advertise-addr 127.0.0.1\ndocker compose up -d\n```\n\n### Using Docker Swarm\n\nTo run a full test using `docker stack deploy`,\nrun the test harness `test_swarm.sh`.\n\n```shell\n./test_swarm.sh\n```\n\n## Configuration\n\n_pman_ is configured by environment variables.\nRefer to the source code in [pman/config.py](pman/config.py)\nfor exactly how it works.\n\n| Environment Variable | Description                                           |\n|----------------------|-------------------------------------------------------|\n| `SECRET_KEY`         | [Flask secret key][flask docs]                        |\n| `CONTAINER_ENV`      | one of: \"swarm\", \"kubernetes\", \"cromwell\"             |\n| `STORAGE_TYPE`       | one of: \"host\", \"nfs\"                                 |\n| `STOREBASE`          | where job data is stored, [see below](#STOREBASE)     |\n| `NFS_SERVER`         | NFS server address, required when `STORAGE_TYPE=nfs`  |\n| `JOB_LOGS_TAIL`      | (int) maximum size of job logs                        |\n| `REMOVE_JOBS`        | If set to \"no\" then pman will not delete jobs (debug) |\n\n[flask docs]: https://flask.palletsprojects.com/en/2.1.x/config/#SECRET_KEY\n\n### `STOREBASE`\n\n- If `STORAGE_TYPE=host`, then `STOREBASE` represents the path on the\ncontainer host.\n- If `STORAGE_TYPE=nfs`, then `STOREBASE` should be an exported NFS share\n\n### Kubernetes-Specific Options\n\nApplicable when `CONTAINER_ENV=kubernetes`\n\n| Environment Variable           | Description                                     |\n|--------------------------------|-------------------------------------------------|\n| `JOB_NAMESPACE`                | Kubernetes namespace for created jobs           |\n| `SECURITYCONTEXT_RUN_AS_USER`  | Job container UID (NFS permissions workaround)  |\n| `SECURITYCONTEXT_RUN_AS_GROUP` | Job container GID  (NFS permissions workaround) |\n\n### SLURM-Specific Options\n\nApplicable when `CONTAINER_ENV=cromwell`\n\n| Environment Variable | Description                                          |\n|----------------------|------------------------------------------------------|\n| `CROMWELL_URL`       | Cromwell URL                                         |\n| `TIMELIMIT_MINUTES`  | SLURM job time limit                                 |\n\nFor how it works, see https://github.com/FNNDSC/pman/wiki/Cromwell\n\n## Limitations\n\nThe system administrator is expected to have an existing solution for having\na \"shared volume\" visible on the same path to every node in the cluster\n(which is typically how NFS is used). The path on each host to this share\nshould be provided as the value for `STOREBASE`.\n\nCurrently, only HostPath and NFS volumes are supported.\n_pfcon_ and _pman_ do not support (using nor creating) other kinds of PVCs.\n\n## TODO\n\n- [ ] Example for how to interact with _pman_ directly (w/o _pfcon_)\n- [ ] Dev environment and testing for Kubernetes and SLURM.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.list.v2+json",
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}