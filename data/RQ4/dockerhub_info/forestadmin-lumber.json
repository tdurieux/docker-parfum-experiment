{
  "user": "forestadmin",
  "name": "lumber",
  "namespace": "forestadmin",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Create your backend application in minutes",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 2,
  "pull_count": 130883,
  "last_updated": "2021-07-19T15:24:49.064347Z",
  "date_registered": "2019-05-09T09:24:32.408591Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "forestadmin",
  "has_starred": false,
  "full_description": "# Lumber\n[![npm package](https://badge.fury.io/js/lumber-cli.svg)](https://badge.fury.io/js/lumber-cli)\n[![Build Status](https://github.com/ForestAdmin/lumber/workflows/Build,%20Test%20and%20Deploy/badge.svg?branch=master)](https://github.com/ForestAdmin/lumber/actions)\n[![Test Coverage](https://api.codeclimate.com/v1/badges/eecf0efe8bd429975ae0/test_coverage)](https://codeclimate.com/github/ForestAdmin/lumber/test_coverage)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n\n<p align=\"center\">\n  <img src=\"https://github.com/ForestAdmin/lumber/blob/master/assets/logo-forestadmin.png?raw=true\" alt=\"Forest Admin logo\">\n</p>\n\n> ‚ö†Ô∏è Lumber is now deprecated. Please use [Forest CLI](https://github.com/ForestAdmin/toolbelt) instead. ‚ö†Ô∏è\n\nLumber is the CLI tool used to install [Forest Admin](https://www.forestadmin.com), the Admin Panel framework.\nForest Admin has been designed with scalability in mind to fit requirements from small projects to mature companies.\n\n- [Getting started](#getting-started)\n- [How it works](#how-it-works)\n- [Documentation](#documentation)\n- [Features](#features)\n- [Commands](#commands)\n- [See it in action](https://app.forestadmin.com/23065?livedemo)\n- [Who Uses Forest Admin](#who-uses-forest-admin)\n- [Contribute](#contribute)\n- [Community](#community)\n\n## Getting started\n\nGet your admin panel running in minutes by installing Forest Admin:\n[https://app.forestadmin.com/signup](https://app.forestadmin.com/signup)\n\n## How it works\n\n<p align=\"center\" style=\"margin: 60px 0\">\n  <img width=\"100%\" src=\"https://forest-assets.s3.amazonaws.com/Github+README+assets/howitworks.png\" alt=\"Howitworks\">\n</p>\n\nForest Admin consists of two components:\n- The Admin Frontend is the user interface where you'll manage your data and configuration.\n- The Admin Backend API hosted on your servers where you can find and extend your data models and all the business logic (routes, actions, ‚Ä¶) related to your admin panel.\n\n## Documentation\n[https://docs.forestadmin.com/documentation/](https://docs.forestadmin.com/documentation/)\n\n## Features\n\n### CRUD\n\nAll of your CRUD operations are natively supported. The API automatically\nsupports your data models' validation and allows you to easily extend or\noverride any API routes' with your very own custom logic.\n\n<img src=\"https://forest-assets.s3.amazonaws.com/Github+README+assets/crud.jpeg\" alt=\"CRUD\">\n\n### Search & Filters\n\nForest Admin has a built-in search allowing you to run basic queries to\nretrieve your application's data. Set advanced filters based on fields and\nrelationships to handle complex search use cases.\n\n<img src=\"https://forest-assets.s3.amazonaws.com/Github+README+assets/search+filters.jpeg\" alt=\"Search and Filters\">\n\n### Sorting & Pagination\n\nSorting and pagination features are natively handled by the Admin API. We're\ncontinuously optimizing how queries are run in order to display results faster\nand reduce the load of your servers.\n\n<img src=\"https://forest-assets.s3.amazonaws.com/Github+README+assets/sorting+pagination.jpeg\" alt=\"Sorting and Pagination\">\n\n### Custom action\n\nA custom action is a button which allows you to trigger an API call to execute\na custom logic. With virtually no limitations, you can extend the way you\nmanipulate data and trigger actions (e.g. refund a customer, apply a coupon,\nban a user, etc.)\n\n<img src=\"https://forest-assets.s3.amazonaws.com/Github+README+assets/custom+actions.jpeg\" alt=\"Sorting and Pagination\">\n\n### Export\n\nSometimes you need to export your data to a good old fashioned CSV. Yes, we\nknow this can come in handy sometimes :-)\n\n<img src=\"https://forest-assets.s3.amazonaws.com/Github+README+assets/exports.jpeg\" alt=\"Export\">\n\n### Segments\n\nGet in app access to a subset of your application data by doing a basic search\nor typing an SQL query or implementing an API route.\n\n<img src=\"https://forest-assets.s3.amazonaws.com/Github+README+assets/segments.jpeg\" alt=\"Segments\">\n\n### Dashboards\n\nForest Admin is able to tap into your actual data to chart out your metrics\nusing a simple UI panel, a SQL query or a custom API call.\n\n<img src=\"https://forest-assets.s3.amazonaws.com/Github+README+assets/dashboards.jpeg\" alt=\"Dashboard\">\n\n### WYSIWYG\n\nThe WYSIWYG interface saves you a tremendous amount of frontend development\ntime using drag'n'drop as well as advanced widgets to build customizable views.\n\n<img src=\"https://forest-assets.s3.amazonaws.com/Github+README+assets/wysiwyg.jpeg\" alt=\"WYSIWYG\">\n\n### Custom HTML/JS/CSS\n\nCode your own views using JS, HTML, and CSS to display your application data in\na more appropriate way (e.g. Kanban, Map, Calendar, Gallery, etc.).\n\n<img src=\"https://forest-assets.s3.amazonaws.com/Github+README+assets/smart+views.jpeg\" alt=\"Custom views\">\n\n### Team-based permissions\n\nWithout any lines of code, manage directly from the UI who has access or can\nact on which data using a team-based permission system.\n\n<img src=\"https://forest-assets.s3.amazonaws.com/Github+README+assets/teams.jpeg\" alt=\"Team based permissions\">\n\n### Third-party integrations\n\nLeverage data from third-party services by reconciling it with your\napplication‚Äôs data and providing it directly to your Admin Panel. All your\nactions can be performed at the same place, bringing additional intelligence to\nyour Admin Panel and ensuring consistency.\n\n<img src=\"https://forest-assets.s3.amazonaws.com/Github+README+assets/integrations.jpeg\" alt=\"Third-party integrations\">\n\n### Notes & Comments\n\nAssign your teammates to specific tasks, leave a note or simply comment a\nrecord, thereby simplifying collaboration all across your organization.\n\n<img src=\"https://forest-assets.s3.amazonaws.com/Github+README+assets/notes+comments.jpeg\" alt=\"Notes and Comments\">\n\n### Activity logs\n\nMonitor each action executed and follow the trail of modification on any data\nwith an extensive activity log system.\n\n<img src=\"https://forest-assets.s3.amazonaws.com/Github+README+assets/activity+logs.jpeg\" alt=\"Activity logs\">\n\n## Commands\n\n`$ lumber [command]`\n\n- `generate <appName>`      generate a backend application with an ORM/ODM configured.\n- `login`                   log into Forest Admin API.\n- `logout`                  log out from Forest Admin API.\n- `help [cmd]`              display help for [cmd]\n\n## Who Uses Forest Admin\n- [Apartmentlist](https://www.apartmentlist.com)\n- [Carbon Health](https://carbonhealth.com)\n- [Ebanx](https://www.ebanx.com)\n- [First circle](https://www.firstcircle.ph)\n- [Forest Admin](https://www.forestadmin.com) of course :-)\n- [Heetch](https://www.heetch.com)\n- [Lunchr](https://www.lunchr.co)\n- [Pillow](https://www.pillow.com)\n- [Qonto](https://www.qonto.com)\n- [Raspberry PI](https://www.raspberrypi.org/)\n- [Shadow](https://shadow.tech)\n- And hundreds more‚Ä¶\n\n## Contribute\n\nTo publish the docker image:\n```sh\ndocker build -t forestadmin/lumber .\ndocker login\ndocker push forestadmin/lumber\n```\n\n## Community\n\nüëá Join our Developers community for support and more\n\n[![Discourse developers community](https://img.shields.io/discourse/posts?label=discourse&server=https%3A%2F%2Fcommunity.forestadmin.com)](https://community.forestadmin.com)\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}