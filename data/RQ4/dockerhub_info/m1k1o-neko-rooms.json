{
  "user": "m1k1o",
  "name": "neko-rooms",
  "namespace": "m1k1o",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Virtual browser rooms management in Docker.",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 340929,
  "last_updated": "2022-12-15T07:50:50.470344Z",
  "date_registered": "2021-03-12T10:49:19.346487Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "m1k1o",
  "has_starred": false,
  "full_description": "# neko-rooms\n\n<p align=\"center\">\n  <img src=\"https://img.shields.io/github/v/release/m1k1o/neko-rooms\" alt=\"release\">\n  <img src=\"https://img.shields.io/github/license/m1k1o/neko-rooms\" alt=\"license\">\n  <img src=\"https://img.shields.io/docker/pulls/m1k1o/neko-rooms\" alt=\"pulls\">\n  <img src=\"https://img.shields.io/github/issues/m1k1o/neko-rooms\" alt=\"issues\">\n  <a href=\"https://discord.gg/3U6hWpC\" ><img src=\"https://discordapp.com/api/guilds/665851821906067466/widget.png\" alt=\"Chat on discord\"></a>\n</p>\n\nSimple room management system for [n.eko](https://github.com/m1k1o/neko). Self hosted rabb.it alternative.\n\n<div align=\"center\">\n  <img src=\"https://github.com/m1k1o/neko-rooms/raw/master/docs/rooms.png\" alt=\"rooms\">\n  <img src=\"https://github.com/m1k1o/neko-rooms/raw/master/docs/new_room.png\" alt=\"new room\">\n  <img src=\"https://github.com/m1k1o/neko-rooms/raw/master/docs/neko.gif\" alt=\"n.eko\">\n</div>\n\n## Zero-knowledge installation\n\nIf you don't have any clue about docker and stuff but only want to have fun with friends in a shared browser, we got you covered!\n\n- Rent a VPS with public IP and OS Ubuntu.\n- Get a domain name pointing to your IP (you can even get some for free).\n- Run install script and follow instructions.\n\n```bash\ncurl https://raw.githubusercontent.com/m1k1o/neko-rooms/master/install | sudo bash\n```\n\n## How to start\n\nYou need to have installed `Docker` and `docker-compose`. You need to have custom domain pointing to your server's IP.\n\nYou can watch installation video provided by *Dr R1ck*:\n\nhttps://www.youtube.com/watch?v=cCmnw-pq0gA\n\n### Installation guide\n\nYou only need `.env.example`, `docker-compose.yml` and `traefik/`.\n\n#### Do I need to use traefik?\n\n- Traefik needs to be used to forward traffic to the rooms. You can put nginx in front of it, but not replace it.\n- Your domain name specified for traefik must match domain name, that your proxy connects to. In docker-compose it is service name.\n- See example configuration for [nginx](docs/nginx).\n\nYou can use `docker-compose.http.yml` that will expose this service to `8080` or any port. Authentication is optional.\n\n### Step 1\n\nCopy `.env.example` to `.env` and customize.\n\n```bash\ncp .env.example .env\n```\n\n### Step 2\n\nCreate `usersfile` with your users:\n\n```bash\ntouch traefik/usersfile\n```\n\nAnd add as many users as you like:\n\n```bash\necho $(htpasswd -nb user password) >> traefik/usersfile\n```\n\n### Step 3 (HTTPs only)\n\nCreate `acme.json`\n\n```bash\ntouch traefik/acme.json\nchmod 600 traefik/acme.json\n```\n\nUpdate your email in `traefik/traefik.yml`.\n\n### Download images / update\n\nYou need to pull all your images, that you want to use with neko-room. Otherwise you might get this error: `Error response from daemon: No such image:` (see issue #1).\n\n```sh\ndocker pull m1k1o/neko:latest\ndocker pull m1k1o/neko:chromium\n# etc...\n```\n\nIf you want to update neko image, you need to pull new image and recreate all rooms, that use old image. To update neko rooms, simpy run:\n\n```sh\ndocker-compose pull\ndocker-compose up -d\n```\n\n### Roadmap:\n - [x] add GUI\n - [x] add HTTPS support\n - [x] add authentication provider for traefik\n - [x] allow specifying custom ENV variables\n - [x] allow mounting direcotries for persistent data\n - [ ] add upgrade button\n - [ ] auto pull images, that do not exist\n - [ ] add bearer token to for API\n - [ ] add docker ssh / tcp support\n - [ ] add docker swarm support\n - [ ] add k8s support\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.list.v2+json"
  ],
  "content_types": [
    "image"
  ]
}