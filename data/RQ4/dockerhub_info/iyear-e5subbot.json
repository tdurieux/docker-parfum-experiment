{
  "user": "iyear",
  "name": "e5subbot",
  "namespace": "iyear",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 2,
  "pull_count": 3423,
  "last_updated": "2021-12-30T15:22:43.721214Z",
  "date_registered": "2020-04-08T05:13:14.012546Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "iyear",
  "has_starred": false,
  "full_description": "# E5SubBot\n\n![](https://img.shields.io/github/go-mod/go-version/iyear/E5SubBot?style=flat-square)\n![](https://img.shields.io/badge/license-GPL-lightgrey.svg?style=flat-square)\n![](https://img.shields.io/github/v/release/iyear/E5SubBot?color=green&style=flat-square)\n\nEnglish | [简体中文](https://github.com/iyear/E5SubBot/blob/master/README_zhCN.md)\n\nA Simple Telebot for E5 Renewal\n\n`Golang` + `MySQL`\n\nDEMO: https://t.me/E5Sub_bot (all new functions will be tested in DEMO)\n\nCommunication: [Telegram Group](https://t.me/e5subbot)\n\n## Preview\n<center class=\"half\">\n    <img src=\"https://raw.githubusercontent.com/iyear/E5SubBot/master/pics/bind.JPG\" width=\"200\"/><img src=\"https://raw.githubusercontent.com/iyear/E5SubBot/master/pics/my.JPG\" width=\"200\"/><img src=\"https://raw.githubusercontent.com/iyear/E5SubBot/master/pics/task.JPG\" width=\"200\"/>\n</center>\n\n## Feature\n\n- Automatically Renew E5 Subscription(Customizable Frequency)\n- Manageable Simple Account System\n- Available Task Execution Feedback\n- Convenient Authorization\n\n\n## Principle\n\nE5 subscription is a subscription for developers, as long as the related API is called, it may be renewed\n\nCalling [Outlook ReadMail API](https://docs.microsoft.com/en-us/graph/api/user-list-messages?view=graph-rest-1.0&tabs=http) to renew, does not guarantee the renewal effect.\n\n## Usage\n\n1. Type `/bind` in the robot dialog\n2. Click the link sent by the robot and register the Microsoft application, log in with the E5 master account or the same domain account, and obtain `client_secret`. **Click to go back to Quick Start**, get `client_id`\n3. Copy `client_secret` and `client_id` and reply to bot in the format of `client_id(space)client_secret`\n(Pay attention to spaces)\n4. Click on the authorization link sent by the robot and log in with the `E5` master account or the same domain account\n5. After authorization, it will jump to `http://localhost/e5sub……` (will prompt webpage error, just copy the link)\n6. Copy the link, and reply `link(space)alias (used to manage accounts)` in the robot dialog\nFor example: `http://localhost/e5sub/?code=abcd MyE5`, wait for the robot to bind and then complete\n\n## Deploy Your Own Bot \n\nBot creation tutorial : [Microsoft](https://docs.microsoft.com/en-us/azure/bot-service/bot-service-channel-connect-telegram?view=azure-bot-service-4.0)\n\n### Docker Deployment\nThanks to [@kzw200015](https://github.com/kzw200015) for providing help in `Dockerfile` and `Docker`\n\nIf it fails to start for the first time, use `docker-compose restart` to restart\n```bash\nmkdir ./e5bot && wget --no-check-certificate -O ./e5bot/config.yml https://raw.githubusercontent.com/iyear/E5SubBot/master/config.yml.example\nvi ./e5bot/config.yml\nwget --no-check-certificate https://raw.githubusercontent.com/iyear/E5SubBot/master/docker-compose.yml\ndocker-compose up -d\n```\n### Binary Deployment\n\nDownload the binary files of the corresponding system on the [Releases](https://github.com/iyear/E5SubBot/releases) page and upload it to the server\n\nWindows: Start `E5SubBot.exe` in `cmd`\n\nLinux: \n\n```bash\nscreen -S e5sub\nchmod 773 E5SubBot\n./E5SubBot\n(Ctrl A+D)\n```\n### Compile\n\nDownload the source code and install the GO environment\n\n```shell\ngo build\n```\n\n## Configuration\n\nCreate `config.yml` in the same directory, encoded as `UTF-8`\n\nConfiguration Template:\n\n```yaml\nbot_token: YOUR_BOT_TOKEN\nsocks5: 127.0.0.1:1080\nnotice: \"first line \\n second line\"\nadmin: 66666,77777,88888\nerrlimit: 5\ncron: \"1 */3 * * *\"\nbindmax: 3\nmysql:\n  host: 127.0.0.1\n  port: 3306\n  user: e5sub\n  password: e5sub\n  database: e5sub\n```\n\n`bindmax`, `notice`, `admin`, `errlimit` can be hot updated, just update `config.yml` to save.\n|  Configuration   | Explanation|\n|  ----  | ----  |\n| bot_token  | Change to your own `BotToken` |\n| socks5  | `Socks5` proxy,if you do not need ,you should delete it. For example: `127.0.0.1:1080` |\n|notice|Announcement. Merged into `/help`|\n|admin|The administrator's `tgid`, go to https://t.me/userinfobot to get it, separated by `,`; Administrator permissions: manually call the task, get the total feedback of the task|\n|errlimit|The maximum number of errors for a single account, automatically unbind the single account and send a notification when it is full, without limiting the number of errors, change the value to a negative number `(-1)`; all errors will be cleared after the bot restarts|\n|cron|API call frequency, using `cron` expression|\n|bindmax|Maximum number of bindable|\n|mysql|Mysql configuration, please create database in advance|\n\n### Command\n```\n/my View bound account information\n/bind Bind new account\n/unbind Unbind account\n/export Export account information (JSON format)\n/help help\n/task Manually execute a task (Bot Administrator)\n/log Get the most recent log file (Bot Administrator)\n```\n## Others\n> Feedback time is not as expected\n\nChange the server time zone, use `/task` to manually perform a task to refresh time.\n\n> ERROR:Can't create more than max_prepared_stmt_count statements (current value: 16382).\n\nFailure to close `db` leads to triggering `mysql` concurrency limit, please update to `v0.1.9`.\n\n> Long running crash\n\nSuspected memory leak. Not yet resolved, please run the daemon or restart Bot regularly.\n\n> Unable to create application via bot\n\nhttps://t.me/e5subbot/5201\n\n## Third-Party\n- [Telebot](https://gopkg.in/tucnak/telebot)\n- [Mysql_driver](https://github.com/go-sql-driver/mysql)\n- [Gjson](https://github.com/tidwall/gjson)\n- [Cron](https://github.com/robfig/cron/)\n- [Viper](https://github.com/spf13/viper)\n- [Goreleaser](https://https://github.com/goreleaser/goreleaser)\n\n## Contributing\n- Provide documentation in other languages\n- Provide help for code operation\n- Suggests user interaction\n- ……\n## More Functions\nIf you still want to support new features, please use FeatHub to vote. We will consider the voting results and other factors to determine the development priority.  \n\n[![Feature Requests](https://cloud.githubusercontent.com/assets/390379/10127973/045b3a96-6560-11e5-9b20-31a2032956b2.png)](http://feathub.com/NervJS/taro)  \n\n[![Feature Requests](https://feathub.com/iyear/E5SubBot?format=svg)](https://feathub.com/iyear/E5SubBot)  \n\n## License\n\nGPLv3 \n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.list.v2+json"
  ],
  "content_types": [
    "image"
  ]
}