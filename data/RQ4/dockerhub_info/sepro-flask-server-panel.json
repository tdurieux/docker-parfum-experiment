{
  "user": "sepro",
  "name": "flask-server-panel",
  "namespace": "sepro",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Server Panel made with flask and reactjs",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 81,
  "last_updated": "2018-10-01T14:41:47.226505Z",
  "date_registered": "2017-06-15T14:55:48.312722Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "sepro",
  "has_starred": false,
  "full_description": "[![Build Status](https://travis-ci.com/sepro/Flask-Server-Panel.svg?branch=master)](https://travis-ci.com/sepro/Flask-Server-Panel) [![codecov.io](https://codecov.io/github/sepro/Flask-Server-Panel/coverage.svg?precision=1)](https://codecov.io/github/sepro/Flask-Server-Panel/)\n\n# Flask-Server-Panel and API\n\nServer panel based on flask to show stats for a small private server. \nDesigned specifically with a [Raspberry Pi](https://www.raspberrypi.org/) \nrunning [Pi-Hole](https://pi-hole.net/) in mind.\n\nThe API that is queried by the front-end is located at <your_url>/api/. \nFor details check out the [API documentation](./docs/api.md).\n\n\nThe back-end is based on Python [Flask](http://flask.pocoo.org/) with a \nfront-end using [React.js](https://facebook.github.io/react/) and \n[Bootstrap](http://getbootstrap.com/)\n\n![Flask-Server-Panel](./docs/server_panel.png \"Server Panel\")\n\n*Note: The Raspberry Pi logo changes color along with the temperature. \nGreen is good, red means you have to invest in a new case with better \ncooling.*\n\n## Getting started\n\nInstallation instruction for deployment on a linux system. \n\nClone the repository\n\n    git clone https://github.com/sepro/Flask-Server-Panel.git Flask-Server-Panel\n    \nSet up a virtual environment\n    \n    cd Flask-Server-Panel\n    virtualenv --python=python3 venv\n    \nActivate the environment and install packages\n\n    source venv/bin/activate\n    pip install -r requirements.txt\n    \nConfigure Flask-Server-Panel\n\n    vim config.py\n\nRun tests and run app\n\n    python tests.py\n    \n    python run.py\n\n## Deploy (on x86_64, not rPi!) using Docker\n\nIn case you would like to test the panel, a docker container is available. Do note that you will get stats from within the container and not the host system. However, for trying out the app this is the quickest way to get things running.\n\n    docker pull sepro/flask-server-panel\n    docker run -p 80:80 -d sepro/flask-server-panel\n    \nThis exposes gunicorn running in the container on port 80 to port 80 on the host system. \n\n## Developing the front-end\nInstall all packages through npm \n\n    npm install\n\nBuild ./serverpanel/static/js/bundle.js using webpack\n\n    webpack -p\n\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}