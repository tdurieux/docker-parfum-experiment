{
  "user": "devosoft",
  "name": "empirical",
  "namespace": "devosoft",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "A library of tools for scientific software development.",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 4209,
  "last_updated": "2023-01-01T01:35:15.892256Z",
  "date_registered": "2020-07-10T22:40:23.722477Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "devosoft",
  "has_starred": false,
  "full_description": "![Empirical Logo](/doc/EmpiricalBanner.png)\n\nEmpirical is a library of tools for developing efficient, reliable, and accessible scientific\nsoftware.  The provided code is header-only and encapsulated into the emp namespace, so it\nis simple to incorporate into existing projects.\n\n[![CI](https://github.com/devosoft/Empirical/workflows/CI/badge.svg)](https://github.com/devosoft/Empirical/actions?query=workflow%3ACI+branch%3Amaster) [![Documentation Status](https://readthedocs.org/projects/empirical/badge/?version=latest)](https://empirical.readthedocs.io/en/latest/?badge=latest) [![DOI](https://zenodo.org/badge/24824563.svg)](https://zenodo.org/badge/latestdoi/24824563) [![codecov](https://codecov.io/gh/devosoft/Empirical/branch/master/graph/badge.svg)](https://codecov.io/gh/devosoft/Empirical)\n[![DockerHub](https://img.shields.io/badge/DockerHub-Hosted-blue)](https://hub.docker.com/r/devosoft/empirical)\n\n\nSee our [Built With Empirical Gallery](https://empirical.readthedocs.io/en/latest/BuiltWithEmpiricalGallery) for examples of web tools built with Empirical.\n\nSee our [Quick Start Guides](https://empirical.readthedocs.io/en/latest/QuickStartGuides) to start using the library.\n\nStarting out on a new project that will use Empirical?\nTake a look at the [cookiecutter Empirical project template](https://github.com/devosoft/cookiecutter-empirical-project) for automarically setting up a directory structure with all the files you need to get started -- step-by-step instructions included!\n\nTools in Empirical include:\n* Web-enabled elements to facilitate compiling to JavaScript and with a full web interfaces,\n  using Mozilla's Emscripten compiler (from C++ to high-efficiency JavaScript).\n* Debug tools to facilitate audited memory management; these tools are turned off outside of\n  debug mode allowing the full speed of raw pointers and normal standard library components.\n* A wide range of Helper tools to streamline common scientific computing tasks such as\n  configuration, data management, mathematical manipulations, etc.\n  All of these are designed to be  easy-to-use and efficient.\n* A powerful set of evolution tools for building Artificial Life or Evolutionary Computation\n  software.\n* A signal-action system that allows for efficient customization of tools, and flexible\n  software that can easily facilitate plug-in functionality.\n\nSee https://empirical.readthedocs.io/en/latest for more detailed documentation\non the available source files.\n\n# Directory Structure\n\n| Folder       | Description\n| ------------ | ----\n| apps/        | mini projects using Empirical with broad utility\n| doc/         | Documentation files (including for auto generation of docs)\n| examples/    | Example code for many of the above tools (sub-directory structure parallels source/)\n| Planning/    | Scattered notes about future development (most notes found in GitHub issue tracker)\n| source/      | Header files that make up the Empirical library (see below for details)\n| tests/       | Unit tests\n| third-party/ | Non-empirical dependencies\n\n\n# Sub-folders in source/ directory\n\n| Sub-Folder  | Description\n| ----------- | ----\n| base/       | Debug tools used throughout Empirical for fast and efficient memory management\n| config/     | Tools to build a simple configuration system (including compile-time optimizations)\n| control/    | Signialing tools allowing for fast and dynamic interaction across components\n| data/       | Tools for easy data management and output\n| geometry/   | Geometry and physics-based tools for implementing simple virtual worlds\n| hardware/   | Implementation of basic virtual hardware that is easy to configure\n| meta/       | Helpful tools for template meta-programming\n| scholar/    | Tools for tracking authors, citations, and bibliographies\n| tools/      | Many basic tools that are generally useful for scientific software\n| web/        | Tools for building web interfaces\n| Evolve/        | Specialized tools for building Artificial Life or Evolutionary Computation projects\n| in_progress/ | Tools that are being worked on, but not at all ready for public consumption\n\n\n# Development Status\n\nEmpirical is under heavy development.  As such, many source files have at least one of the\nfollowing statuses:\n\n| Status | Meaning\n| ------ | -------\n| DESIGN | Notes are in place, but no (or minimal) working code\n| EXPLORATORY | Some functionality may work, but needs re-engineering to get right\n| ALPHA | Some basic functionality works, but more features still need to be added and tested\n| BETA | Basic functionality is all in place, but needs more thorough testing.\n| RELEASE | Well-tested functionality and used in multiple projects, at least by authors\n| STABLE | Used by many non-authors in assorted projects without fixes for extended period\n| ABANDONED | May have worked, or may not; no longer being developed\n| BROKEN | Once worked (at least BETA level), but now needs to be repaired (not abandoned!)\n| CLEANUP | At least BETA, but needs code cleanup, fixing of warnings, etc\n| DEPRECATED | Functionality has been replaced and should shift to replacement.\n| EXTERNAL | Part of another project (cited above); not developed as part of Empirical\n\n\n# Levelization\n\nThe structure of Empirical is levelized to facilitate development and testing.  This means\nthat all directories are on a level where dependencies are either internal to that directory\nor on lower levels.  Likewise, within a directory, files have a level and depend only on other\nfiles at lower levels.\n\n| Level | Folders\n| ----  | ----\n| 0 |  base/\n| 1 |  meta/\n| 2 |  tools/\n| 3 |  config/  control/  data/  games/  geometry/  hardware/  scholar/\n| 4 |  Evolve/ (data, control)  web/ (config, control)\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}