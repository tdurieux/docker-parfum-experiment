{
  "user": "pajinek",
  "name": "docker-spacewalk",
  "namespace": "pajinek",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Spacewalk in Docker (without systemd)",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 4,
  "pull_count": 4775,
  "last_updated": "2019-04-25T16:58:27.551397Z",
  "date_registered": "2016-11-07T14:10:10.202829Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "pajinek",
  "has_starred": false,
  "full_description": "# Spacewalk\n\n* Official documentation: https://fedorahosted.org/spacewalk/\n* Docker image: https://hub.docker.com/r/pajinek/docker-spacewalk/\n\n## How to run in Docker\n\nAt first you need installed postgresql. Easy way to use Docker image for creating database:\n(PostreSQL has to have installed postgresql-pltcl)\n\n```\ndocker run -d --name spacewalk-postgresql.docker -h spacewalk-postgresql.docker \\\n        -e POSTGRES_PASSWORD=password postgres:9.4\ndocker exec spacewalk-postgresql.docker /bin/bash -c \\\n        \"apt update && apt install postgresql-pltcl-9.4 -y\"\ndocker restart spacewalk-postgresql.docker\n```\n\nNow you can run installation of Spacewalk following command:\n\n```\ndocker run -it --link spacewalk-postgresql.docker:postgresql-host \\\n         -e POSTGRES_PASSWORD=password pajinek/docker-spacewalk:nightly\n```\nAvailable versions:\n\n * Spacewalk Nightly PostgreSQL - `spacewalk:nightly`\n * Spacewalk 2.7 PostgreSQL - `spacewalk:2.7`  or `spacewalk:latest`\n * Spacewalk 2.6 PostgreSQL - `spacewalk:2.6`\n * Spacewalk 2.5 PostgreSQL - `spacewalk:2.5`\n\n## How to run by Ansible\n\nThe way how to install Spacewalk nightly that takes 3 minute.\n\nAt first step you have to create file \"config/hosts.ini\" with list of hostname, where Spacewalk will be installed by Ansible. Only plain text format in hosts.ini:\n\n```\n[spacewalk]\nspacewalk.example.com\n\n[proxy]\nproxy.s1.example.com host=spacewalk.example.com\nproxy.s2.example.com host=spacewalk.example.com\n\n[client]\nclient1.s1.example.com host=proxy.s1.example.com\nclient2.s1.example.com host=proxy.s1.example.com\nserver1.s2.example.com host=proxy.s2.example.com\nserver2.s2.example.com host=proxy.s2.example.com\n```\n\nInstallation is realized in LXC container by Docker's images and due to it is needed to have installed Docker service on host(s) or you can run following script which prepares enviroment:\n\n```\nansible-playbook -i config/hosts.ini spacewalk.yaml -tags \"prepare\"\n```\n\nIf system is prepared, run this Ansible script that will install one instance Docker with postgresql and one with Spacewalk latest version.\n\n```\nansible-playbook -i config/hosts.ini spacewalk.yaml\n```\n\nIf you want to install old version or nightly version, you can define image for installation following form\n\n```\nansible-playbook -i config/hosts.ini spacewalk.yaml -e \"docker_image=pajinek/docker-spacewalk:2.6\"\n```\n\n```\nansible-playbook -i config/hosts.ini spacewalk.yaml -e \"docker_image=pajinek/docker-spacewalk:nightly\"\n```\n\n\nAfter installation is completed, go to fill data for first login by webui.\nIf you login to Spacewalk create needed channels and distribution mapping for your systems.\nIn file `group_vars/all` change following variables by filled data for authentization.\n\n```\nspacewalk_user: \"admin\"\nspacewalk_pass: \"passadmin\"\n```\n\nAnd now you can configure proxy and register clients to spacewalk through\nthese proxies.\n\n\n```\nansible-playbook -i config/hosts.ini proxy.yaml\nansible-playbook -i config/hosts.ini client.yaml\n```\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}