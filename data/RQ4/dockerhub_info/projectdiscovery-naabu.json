{
  "user": "projectdiscovery",
  "name": "naabu",
  "namespace": "projectdiscovery",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "A port scanner written in go",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 7758,
  "last_updated": "2022-10-25T22:18:16.347595Z",
  "date_registered": "2020-01-21T12:35:08.582214Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "projectdiscovery",
  "has_starred": false,
  "full_description": "<h1 align=\"left\">\n  <img src=\"https://github.com/projectdiscovery/naabu/raw/master/static/naabu-logo.png\" alt=\"naabu\" width=\"170px\"></a>\n  <br>\n</h1>\n\n\n[![License](https://img.shields.io/badge/license-GPL%2F3.0-brightgreen)](https://choosealicense.com/licenses/gpl-3.0/)\n[![Go Report Card](https://goreportcard.com/badge/github.com/projectdiscovery/naabu)](https://goreportcard.com/report/github.com/projectdiscovery/naabu)\n[![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)](https://github.com/projectdiscovery/nabbu/issues)\n\nnaabu is a port scanning tool written in Go that allows you to enumerate valid ports for hosts in a fast and reliable manner. It is a really simple tool that does fast SYN scans on the host/list of hosts and lists all ports that return a reply. \n\nYou can use the official dockerhub image at [naabu](https://hub.docker.com/r/projectdiscovery/naabu). Simply run - \n\n```bash\n> docker pull projectdiscovery/naabu\n```\n\nThe above command will pull the latest tagged release from the dockerhub repository.\n\n- After building the container using either way, run the following - \n```bash\ndocker run -it projectdiscovery/naabu\n```\n\n> The above command is the same as running `-h`\n\nFor example, this runs the tool against hackerone.com and output the results to your host file system:\n```bash\ndocker run -it projectdiscovery/naabu -host hackerone.com > hackerone.com.txt\n```\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.list.v2+json"
  ],
  "content_types": [
    "image"
  ]
}