{
  "user": "llc1123",
  "name": "trojan-rust",
  "namespace": "llc1123",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 1336,
  "last_updated": "2021-06-28T16:38:21.363518Z",
  "date_registered": "2021-05-19T08:33:10.652339Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "llc1123",
  "has_starred": false,
  "full_description": "# Trojan-rust\n\n[![LICENSE](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/llc1123/trojan-rust/blob/master/LICENSE)\n[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fllc1123%2Ftrojan-rust.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2Fllc1123%2Ftrojan-rust?ref=badge_shield)\n[![CI](https://img.shields.io/github/workflow/status/llc1123/trojan-rust/nightly)](https://github.com/llc1123/trojan-rust/actions)\n![release version](https://img.shields.io/github/v/release/llc1123/trojan-rust)\n![release downloads](https://img.shields.io/github/downloads/llc1123/trojan-rust/total)\n[![docker pulls](https://img.shields.io/docker/pulls/llc1123/trojan-rust)](https://hub.docker.com/r/llc1123/trojan-rust)\n[![docker image size](https://img.shields.io/docker/image-size/llc1123/trojan-rust/latest)](https://hub.docker.com/r/llc1123/trojan-rust)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/llc1123/trojan-rust/pulls)\n\nYet another [trojan-gfw](https://trojan-gfw.github.io/trojan/) implementation in Rust.\n\n## Features\n- Server mode only (for now).\n- Supports Redis auth & flow stat.\n- Uses OpenSSL as crypto backend.\n- Uses tokio as async runtime.\n\n## How trojan handles connections\n\n- Not a TLS connection or TLS handshake failed: Connection Reset.\n- SNI mismatch: Redirect to fallback\n- Expected TLS but not a trojan request: Redirect to fallback.\n- Trojan request but password incorrect: Redirect to fallback.\n- Trojan request and password correct: Work as a proxy tunnel.\n\n## How the fallback server (usually) works\n\n- Not HTTP Request: 400 Bad Request\n- HTTP Request: \n  - GET: 404 Not Found\n  - Other: 405 Methon Not Allowed\n\n_This is like most cdn endpoints' behavior if you don't have a correct resource path._\n\n## Build\n```\ncargo build --release\n```\n\n## Usage\n```\nUSAGE:\n    trojan-rust [OPTIONS]\n\nFLAGS:\n    -h, --help       Prints help information\n    -V, --version    Prints version information\n\nOPTIONS:\n    -c, --config <config>          [default: config.toml]\n        --log-level <log-level>    [env: LOGLEVEL=] [default: info]\n```\n\n## Docker Image\n```\ndocker run -p 443:443 llc1123/trojan-rust example.toml\n```\n\n## Config\n\nexample.toml\n\n```toml\n# mode = \"server\" # optional\n\n## uses default values if not present\n# [trojan]\n# password = [] # optional\n## uses built-in if not present\n# fallback = \"baidu.com:80\" # optional\n\n[tls]\n# listen = \"0.0.0.0:443\" # optional\n# tcp_nodelay = false # optional\nsni = \"example.com\" # required\ncert = \"fullchain.pem\" # required\nkey = \"privkey.pem\" # required\n\n## doesn't use redis if not present\n# [redis]\n# server = \"127.0.0.1:6379\" # optional\n```\n\n## Redis Auth\nAdd a user:\n```\nHSET [sha224(password)] download 0 upload 0\n```\nTrojan-rust checks if the hash exists in redis on each connection. If true, the user is authenticated and the flow will be recorded.\n\nTrojan-rust DOES NOT offer a method adding or removing a user. Please do it by yourself.\n\n## TODO\n\n- [ ] Client mode\n- [ ] TPROXY mode\n- [ ] Benchmarks\n\n## Contributing\nPRs welcome\n\n## License\nTrojan-rust is [MIT licensed](https://github.com/llc1123/trojan-rust/blob/master/LICENSE).\n\n[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fllc1123%2Ftrojan-rust.svg?type=large)](https://app.fossa.com/projects/git%2Bgithub.com%2Fllc1123%2Ftrojan-rust?ref=badge_large)",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.list.v2+json"
  ],
  "content_types": [
    "image"
  ]
}