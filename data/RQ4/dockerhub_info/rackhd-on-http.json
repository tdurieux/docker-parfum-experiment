{
  "user": "rackhd",
  "name": "on-http",
  "namespace": "rackhd",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Provides HTTP server for RackHD.",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 1426984,
  "last_updated": "2018-07-12T18:38:47.172542Z",
  "date_registered": "2016-02-04T00:58:15.700024Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "rackhd",
  "has_starred": false,
  "full_description": "# on-http [![Build Status](https://travis-ci.org/RackHD/on-http.svg?branch=master)](https://travis-ci.org/RackHD/on-http) [![Code Climate](https://codeclimate.com/github/RackHD/on-http/badges/gpa.svg)](https://codeclimate.com/github/RackHD/on-http) [![Coverage Status](https://coveralls.io/repos/RackHD/on-http/badge.svg?branch=master&service=github)](https://coveralls.io/github/RackHD/on-http?branch=master)\n\n__`on-http` is the HTTP server for RackHD__\n\n_Copyright 2015-2016, EMC, Inc._\n\n## Installation\n\n    rm -rf node_modules\n    npm install\n    npm run apidoc\n    npm run taskdoc\n\n## Running\n\nNote: requires MongoDB and RabbitMQ to be running to start correctly.\n\n    sudo node index.js\n\n * http://127.0.0.1/ui -- RackHD Web UI\n * http://127.0.0.1/docs -- RackHD Docs\n * http://127.0.0.1/taskdoc -- RackHD Task Annotation\n\n## API References\n\n * http://rackhd.readthedocs.io/en/latest/rackhd/index.html\n * https://bintray.com/rackhd/docs/apidoc#files\n\nThe readthedocs shows API usage for 2.0 by default. Using `api/current/` will\nuse the 2.0 API by default. Functional differences between the 1.1 API and the 2.0\nAPI are listed in readthedocs, however, the 1.1 API is officially deprecated.\n\n## Config\n\nThe `fileService` requires a \"fileService\" key which holds keys mapping backend\nstrings to their individual config values; it requires at least \"defaultBackend\"\n to be among the backend keys. More strings may be added and mapped to\ninjector strings in the `fileSevice.injectorMap` attribute.\n\n## Debugging/Profiling\n\nTo run in debug mode to debug routes and middleware:\n\n    sudo DEBUG=express:* node --debug index.js\n\nIf you're using Node v4 or greater you can use `node-inspector` to debug and profile from a GUI.\n\n    npm install node-inspector -g\n    node-inspector --preload=false &\n    sudo DEBUG=express:* node --debug-brk index.js\n\nNote: do not use the `node-debug` command it doesn't work as well.\n\n## CI/Testing\n\nTo run tests from a developer console:\n\n    npm test\n\nTo run tests and get coverage for CI:\n\n    # verify hint/style\n    ./node_modules/.bin/jshint -c .jshintrc --reporter=checkstyle lib index.js > checkstyle-result.xml || true\n    ./node_modules/.bin/istanbul cover -x \"**/spec/**\" _mocha -- $(find spec -name '*-spec.js') -R xunit-file --require spec/helper.js\n    ./node_modules/.bin/istanbul report cobertura\n    # if you want HTML reports locally\n    ./node_modules/.bin/istanbul report html\n\n## Client Libraries\n\nInstructions for how to generate client libraries (python, java, go) can be seen on the readthedocs\n* http://rackhd.readthedocs.io/en/latest/rackhd/rackhd_api.html?highlight=swagger#rackhd-client-libraries\n\n## Building\n\nUnversioned packages are built automatically from travis-ci and uploaded to bintray.com. Using\nthis repository is detailed in [the docs](http://rackhd.readthedocs.org/en/latest/rackhd/ubuntu_package_installation.html).\n\nBuild scripts are placed in the `extra/` directory. \n\n  * `.travis.yml` will call the appropriate scripts in `extra/` to build an unversioned package.\n  * `extra/make-sysdeps.sh` can be used to install system level packages in a Ubuntu system.\n  * `extra/make-cicd.sh` will perform all the necessary build steps to generate a version package.\n\nIf you want to build your own versioned packages, you can use the Vagrantfile provided in `extra/`.  Simply perform `vagrant up` and it will run all the necessary steps.\n\nThe resulting .deb packages will end up in `deb/`.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}