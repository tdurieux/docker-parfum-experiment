{
  "user": "okigan",
  "name": "awscurl",
  "namespace": "okigan",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 127137,
  "last_updated": "2021-12-05T08:20:53.392542Z",
  "date_registered": "2020-10-22T07:03:54.963064Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "okigan",
  "has_starred": false,
  "full_description": "# awscurl [![Donate](https://img.shields.io/badge/donate-github-orange.svg?style=flat-square)](https://github.com/sponsors/okigan) [![Donate](https://img.shields.io/badge/donate-paypal-orange.svg?style=flat-square)](https://www.paypal.com/donate/?business=UDN4FL55J34QC&amount=25) [![Donate](https://img.shields.io/badge/donate-buy_me_a_coffee-orange.svg?style=flat-square)](https://www.buymeacoffee.com/okigan) \n\n[![PyPI](https://img.shields.io/pypi/v/awscurl.svg)](https://pypi.python.org/pypi/awscurl)\n[![Build Status](https://travis-ci.org/okigan/awscurl.svg?branch=master)](https://travis-ci.org/okigan/awscurl)\n[![Docker Hub](https://img.shields.io/docker/pulls/okigan/awscurl.svg)](https://hub.docker.com/r/okigan/awscurl)\n\n\n\n![CI badge](https://github.com/okigan/awscurl/workflows/CI/badge.svg?branch=master)\n\n\n\nCurl like tool with AWS Signature Version 4 request signing.\n\n## Features\n  * performes requests to AWS services with requests signing using curl interface\n  * supports IAM profile credentials\n\n\n## Overview\nRequests to AWS API must be signed (see [Signing AWS API Requests](http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html))\nautomates the process of signing and allows to make requests to AWS as simple as standard curl command.\n\n\n## Installation\n  ```sh\n  $ pip install awscurl\n  ```\n  \n#### Installation from source (bleeding edge)\n  ```sh\n  $ pip install git+https://github.com/okigan/awscurl\n  ```\n\n#### Installation via Homebrew for MacOS\n  ```sh\n  $ brew install awscurl\n  ```\n\n#### Running via Docker\n  ```sh\n  $ docker pull okigan/awscurl\n\n  $ docker run --rm -it okigan/awscurl --access_key ACCESS_KEY  --secret_key SECRET_KEY --service s3 s3://...\n\n  # or allow access to local credentials as following\n  $ docker run --rm -it -v \"$HOME/.aws:/root/.aws\" okigan/awscurl --service s3 s3://...\n  ```\n  In order to shorten the length of docker commands, you can add the following alias:\n\n  ```\n  $ alias awscurl='docker run --rm -ti -v \"$HOME/.aws:/root/.aws\" -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY -e AWS_SECURITY_TOKEN -e AWS_PROFILE okigan/awscurl'\n  ```\n  This will allow you to run the awscurl from within a Docker container as if it was installed on the host system:\n  ```\n  $ awscurl\n  ```\n\n## Examples\n* Call S3:\n List bucket content\n  ```sh\n  $ awscurl --service s3 https://awscurl-sample-bucket.s3.amazonaws.com | tidy -xml -iq\n  <?xml version=\"1.0\" encoding=\"utf-8\"?>\n  <ListBucketResult xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">\n    <Name>awscurl-sample-bucket</Name>\n    <Prefix></Prefix>\n    <Marker></Marker>\n    <MaxKeys>1000</MaxKeys>\n    <IsTruncated>false</IsTruncated>\n    <Contents>\n      <Key>awscurl-sample-file.txt</Key>\n      <LastModified>2017-07-25T21:27:38.000Z</LastModified>\n      <ETag>\"d41d8cd98f00b204e9800998ecf8427e\"</ETag>\n      <Size>0</Size>\n      <StorageClass>STANDARD</StorageClass>\n    </Contents>\n  </ListBucketResult>\n  ```\n\n* Call EC2:\n  ```sh\n  $ awscurl --service ec2 'https://ec2.amazonaws.com?Action=DescribeRegions&Version=2013-10-15' | tidy -xml -iq \n  <?xml version=\"1.0\" encoding=\"utf-8\"?>\n  <DescribeRegionsResponse xmlns=\"http://ec2.amazonaws.com/doc/2013-10-15/\">\n\n    <requestId>96511ccd-2d6d-4d63-ad9b-6be6f2c9874d</requestId>\n    <regionInfo>\n      <item>\n        <regionName>eu-north-1</regionName>\n        <regionEndpoint>ec2.eu-north-1.amazonaws.com</regionEndpoint>\n      </item>\n      <item>\n        <regionName>ap-south-1</regionName>\n        <regionEndpoint>ec2.ap-south-1.amazonaws.com</regionEndpoint>\n      </item>\n    </regionInfo>\n  </DescribeRegionsResponse>\n  ```\n\n* Call API Gateway:\n  ```sh\n  $ awscurl --service execute-api -X POST -d @request.json \\\n    https://<prefix>.execute-api.us-east-1.amazonaws.com/<resource>\n  ```\n\n## Options\n```\nusage: awscurl [-h] [-v] [-i] [-X REQUEST] [-d DATA] [-H HEADER]\n                  [--region REGION] [--service SERVICE]\n                  [--profile AWS_PROFILE]\n                  [--access_key ACCESS_KEY] [--secret_key SECRET_KEY]\n                  [--security_token SECURITY_TOKEN]\n                  uri\n\nCurl AWS request signing If an arg is specified in more than one place, then\ncommand-line values override environment variables which override defaults.\n\npositional arguments:\n  uri\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --verbose         verbose flag (default: False)\n  -i, --include         include headers in response (default: False)\n  -X REQUEST, --request REQUEST\n                        Specify request command to use (default: GET)\n  -d DATA, --data DATA  HTTP POST data (default: )\n  -H HEADER, --header HEADER\n                        HTTP POST data (default: None)\n  --region REGION       AWS region (default: us-east-1)\n  --profile PROFILE     [env var: AWS_PROFILE] (default: default)\n  --service SERVICE     AWS service (default: execute-api)\n  --access_key ACCESS_KEY\n                        [env var: AWS_ACCESS_KEY_ID] (default: None)\n  --secret_key SECRET_KEY\n                        [env var: AWS_SECRET_ACCESS_KEY] (default: None)\n  --security_token SECURITY_TOKEN\n                        [env var: AWS_SECURITY_TOKEN] (default: None)\n\n```\n\nIf you do not specify the `--access_key` or `--secret_key`\n(or environment variables), `awscurl` will attempt to use\nthe credentials you set in `~/.aws/credentials`. If you\ndo not specify a `--profile` or `AWS_PROFILE`, `awscurl`\nuses `default`.\n\n\n## Who uses awscurl\n  * [AWS Documentation](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-how-to-call-websocket-api-connections.html)\n  * [Onica blog](https://onica.com/blog/how-to/how-to-kibana-default-index-pattern/)\n  * QnA on [StackOverflow](https://stackoverflow.com/search?q=awscurl)\n  * QnA on [DevOps StackExchange](https://devops.stackexchange.com/search?q=awscurl)\n  * Examples on [Golfbert](https://golfbert.com/api/samples)\n\n## Related projects\n  * awscurl in Go:\n    * https://github.com/allthings/awscurl\n    * https://github.com/legal90/awscurl\n  * awscurl in Lisp: https://github.com/aw/picolisp-awscurl\n  * awscurl on DockerHub: https://hub.docker.com/r/okigan/awscurl\n  * [aws-signature-proxy](https://github.com/sverch/aws-signature-proxy) and related [blog post](https://shaunverch.com/butter/open-source/2019/09/27/butter-days-6.html)\n  * [aws-sigv4-proxy](https://github.com/awslabs/aws-sigv4-proxy) on awslabs\n\n## Last but not least\n  * [Sponsor awscurl](https://github.com/sponsors/okigan)\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}