{
  "user": "blacklabelops",
  "name": "logrotate",
  "namespace": "blacklabelops",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Rotates Logfiles for Docker and Docker Containers! Attach, Compress, Rotate!",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 48,
  "pull_count": 49772837,
  "last_updated": "2019-02-18T01:00:49.025442Z",
  "date_registered": "2015-08-14T11:37:18.958171Z",
  "collaborator_count": 2,
  "affiliation": null,
  "hub_user": "blacklabelops",
  "has_starred": false,
  "full_description": "# Dockerized Logrotate\n\n[![Open Issues](https://img.shields.io/github/issues/blacklabelops/logrotate.svg)](https://github.com/blacklabelops/logrotate/issues) [![Stars on GitHub](https://img.shields.io/github/stars/blacklabelops/logrotate.svg)](https://github.com/blacklabelops/logrotate/stargazers)\n[![Docker Stars](https://img.shields.io/docker/stars/blacklabelops/logrotate.svg)](https://hub.docker.com/r/blacklabelops/logrotate/) [![Docker Pulls](https://img.shields.io/docker/pulls/blacklabelops/logrotate.svg)](https://hub.docker.com/r/blacklabelops/logrotate/) [![](https://badge.imagelayers.io/blacklabelops/logrotate:latest.svg)](https://imagelayers.io/?images=blacklabelops/logrotate:latest 'Get your own badge on imagelayers.io')\n\nThis container can crawl for logfiles and rotate them. It is a side-car container\nfor containers that write logfiles and need a log rotation mechanism. Just hook up some containers and define your\nbackup volumes.\n\n## Supported tags and respective Dockerfile links\n\n| Distribution | Version      | Tag          | Dockerfile |\n|--------------|--------------|--------------|------------|\n| Logrotate Alpine | latest, 1.2 | latest, 1.2 | [Dockerfile](https://github.com/blacklabelops/logrotate/blob/master/Dockerfile) |\n\n## Make It Short\n\nIn short, this container can rotate all your Docker logfiles just by typing:\n\n~~~~\n$ docker run -d \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers \\\n  -v /var/log/docker:/var/log/docker \\\n  -e \"LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker\" \\\n  blacklabelops/logrotate\n~~~~\n\n> This will rotate all your Docker logfiles on a daily basis up to 5 times.\n\nYou want to do it hourly? Just type:\n\n~~~~\n$ docker run -d \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers \\\n  -v /var/log/docker:/var/log/docker \\\n  -e \"LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker\" \\\n  -e \"LOGROTATE_INTERVAL=hourly\" \\\n  blacklabelops/logrotate\n~~~~\n\n> This will put logrotate on an hourly schedule.\n\n## How To Attach to Logs\n\nIn order to attach the side-car container to your logs you have to hook your log file folders inside volumes. Afterwards\nspecify the folders logrotate should crawl for log files. The container attaches by default to any file ending with **.log** inside the specified folders.\n\nEnvironment variable for specifying log folders: `LOGS_DIRECTORIES`. Each directory must be separated by a whitespace character.\n\nExample:\n\n~~~~\nLOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker\n~~~~\n\nExample Logrotating all Docker logfiles:\n\n~~~~\n$ docker run -d \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers \\\n  -v /var/log/docker:/var/log/docker \\\n  -e \"LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker\" \\\n  blacklabelops/logrotate\n~~~~\n\n> This will logrotate any logfile(s) under /var/lib/docker/containers, /var/log/docker (or subdirectories of them).\n\n## Customize Log File Ending\n\nYou can define the file endings fluentd will attach to. The container will by default crawl for\nfiles ending with **.log**. This can be overriden and extended to any amount of file endings.\n\nExample:\n\n~~~~\n$ docker run -d \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers \\\n  -v /var/log/docker:/var/log/docker \\\n  -e \"LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker\" \\\n  -e \"LOG_FILE_ENDINGS=json xml\" \\\n  blacklabelops/logrotate\n~~~~\n\n> Crawls for file endings .json and .xml.\n\n## Set the Log interval\n\nLogrotate can rotate logfile according to the following intervals:\n\n* `hourly`\n* `daily`\n* `weekly`\n* `monthly`\n* `yearly`\n\nYou can override the default setting with the environment variable `LOGROTATE_INTERVAL`.\n\nExample:\n\n~~~~\n$ docker run -d \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers \\\n  -v /var/log/docker:/var/log/docker \\\n  -e \"LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker\" \\\n  -e \"LOGROTATE_INTERVAL=hourly\" \\\n  blacklabelops/logrotate\n~~~~\n\n> This will logrotate logfile(s) on hourly basis.\n\n## Set the Number of Rotations\n\nThe default number of rotations is five. Further rotations will delete old logfiles. You\ncan override the default setting with the environment variable `LOGROTATE_COPIES`.\n\nExample:\n\n~~~~\n$ docker run -d \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers \\\n  -v /var/log/docker:/var/log/docker \\\n  -e \"LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker\" \\\n  -e \"LOGROTATE_COPIES=10\" \\\n  blacklabelops/logrotate\n~~~~\n\n> Will create 10 daily logs before deleting old logs.\n\n## Set Maximum File size\n\nLogrotate can do additional rotates, when the logfile exceeds a certain file size. You can specifiy file size rotation\nwith the environment variable `LOGROTATE_SIZE`.\n\nValid example values:\n\n* `100k`: Will rotate when log file exceeds 100 kilobytes.\n* `100M`: Will rotate when log file exceeds 100 Megabytes.\n* `100G`: Will rotate when log file exceeds 100 Gigabytes.\n\n~~~~\n$ docker run -d \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers \\\n  -v /var/log/docker:/var/log/docker \\\n  -e \"LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker\" \\\n  -e \"LOGROTATE_SIZE=10M\" \\\n  blacklabelops/logrotate\n~~~~\n\n> This will logrotate when logfile(s) reaches 10M+.\n\n## Set Log File compression\n\nThe default logrotate setting is `nocompress`. In order to enable logfile compression\nyou can set the environment variable `LOGROTATE_COMPRESSION` to `compress`.\n\nExample:\n\n~~~~\n$ docker run -d \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers \\\n  -v /var/log/docker:/var/log/docker \\\n  -e \"LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker\" \\\n  -e \"LOGROTATE_COMPRESSION=compress\" \\\n  blacklabelops/logrotate\n~~~~\n\n> This will compress the logrotated logs.\n\n## Set the Output directory\n\nBy default, logrotate will rotate logs in their respective directories. You can\nspecify a directory for keeping old logfiles with the environment variable `LOGROTATE_OLDDIR`. You can specify a full or relative path.\n\nExample:\n\n~~~~\n$ docker run -d \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers \\\n  -v /var/log/docker:/var/log/docker \\\n  -v $(pwd)/logs:/logs/ \\\n  -e \"LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker\" \\\n  -e \"LOGROTATE_OLDDIR=/logs\" \\\n  blacklabelops/logrotate\n~~~~\n\n> Will move old logfiles in the local directory logs/.\n\n## Set the Cron Schedule\n\nYou can set the cron schedule independently of the logrotate interval. You can override\nthe default schedule with the enviroment variable `LOGROTATE_CRONSCHEDULE`.\n\nExample:\n\n~~~~\n$ docker run -d \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers \\\n  -v /var/log/docker:/var/log/docker \\\n  -e \"LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker\" \\\n  -e \"LOGROTATE_INTERVAL=hourly\" \\\n  -e \"LOGROTATE_CRONSCHEDULE=* * * * * *\" \\\n  blacklabelops/logrotate\n~~~~\n\n> This will logrotate on go-cron schedule \\* \\* \\* \\* \\* \\* (every second).\n\n## Log and View the Logrotate Output\n\nYou can specify a logfile for the periodical logrotate execution. The file\nis specified using the environment variable `LOGROTATE_LOGFILE`. Must be a full path!\n\nExample:\n\n~~~~\n$ docker run -d \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers \\\n  -v /var/log/docker:/var/log/docker \\\n  -v $(pwd)/logs:/logs \\\n  -e \"LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker\" \\\n  -e \"LOGROTATE_INTERVAL=hourly\" \\\n  -e \"LOGROTATE_CRONSCHEDULE=* * * * * *\" \\\n  -e \"LOGROTATE_LOGFILE=/logs/logrotatecron.log\" \\\n  blacklabelops/logrotate\n~~~~\n\n> You will be able to see logrotate output every minute in file logs/logrotatecron.log.\n\n## Logrotate Commandline Parameters\n\nYou can define the logrotate commandline parameters with the environment variable LOGROTATE_PARAMETERS.\n\n*v*: Verbose\n\n*d*: Debug, Logrotate will be emulated but never executed!\n\n*f*: Force\n\nExample for a typical testrun:\n\n~~~~\n$ docker run -d \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers \\\n  -v /var/log/docker:/var/log/docker \\\n  -v $(pwd)/logs:/logs \\\n  -e \"LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker\" \\\n  -e \"LOGROTATE_PARAMETERS=vdf\" \\\n  -e \"LOG_FILE=/logs/cron.log\" \\\n  blacklabelops/logrotate\n~~~~\n\n> Will run logrotate with: /usr/bin/logrotate -dvf\n\n## Logrotate Status File\n\nLogrotate must remember when files have been rotated when using time intervals, e.g. 'daily'. The status file will be written by default to the container volume but you can specify a custom location with the environment variable LOGROTATE_STATUSFILE.\n\nExample:\n\n~~~~\n$ docker run -d \\\n  -e \"LOGROTATE_INTERVAL=hourly\" \\\n  -e \"LOGROTATE_CRONSCHEDULE=0 * * * * *\" \\\n  -e \"LOGROTATE_STATUSFILE=/logrotate-status/logrotate.status\" \\\n  -e \"ALL_LOGS_DIRECTORIES=/var/log\" \\\n  -e \"LOGROTATE_PARAMETERS=vf\" \\\n  blacklabelops/logrotate\n~~~~\n\n> Writes the latest status file each logrotation. Reads status files at each start.\n\n## Log and View the Cron Output\n\nYou can specify a separate logfile for cron. The file\nis specified using the environment variable `LOG_FILE`. Must be a full path!\n\nExample:\n\n~~~~\n$ docker run -d \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers \\\n  -v /var/log/docker:/var/log/docker \\\n  -v $(pwd)/logs:/logs \\\n  -e \"LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker\" \\\n  -e \"LOGROTATE_INTERVAL=hourly\" \\\n  -e \"LOGROTATE_CRONSCHEDULE=* * * * * *\" \\\n  -e \"LOG_FILE=/logs/cron.log\" \\\n  blacklabelops/logrotate\n~~~~\n\n> You will be able to see cron output every minute in file logs/cron.log.\n\n## Setting a Date Extension\n\nWith Logrotate it is possible to split files and name them by the date they were generated when used with `LOGROTATE_DATEFORMAT`. By setting `LOGROTATE_DATEFORMAT` you will enable the Logrotate `dateext` option.\n\nThe default Logrotate format is `-%Y%m%d`, to enable the defaults `LOGROTATE_DATEFORMAT` should be set to this.\n\nExample:\n\n~~~~\n$ docker run -d \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers \\\n  -v /var/log/docker:/var/log/docker \\\n  -e \"LOGROTATE_INTERVAL=daily\" \\\n  -e \"LOGROTATE_CRONSCHEDULE=0 * * * * *\" \\\n  -e \"LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker\" \\\n  -e \"LOGROTATE_DATEFORMAT=-%Y%m%d\" \\\n  blacklabelops/logrotate\n~~~~\n\n> This will set logrotate to split files and name them by date format -%Y%m%d.\n\n## Disable Auto Update\n\nWith Logrotate by default it auto update its logrotate configuration file to ensure it only captures all the intended log file in the `LOGS_DIRECTORIES` (before it rotates the log files). It is possible to disable auto update when used with `LOGROTATE_AUTOUPDATE`. By setting `LOGROTATE_AUTOUPDATE` (to not equal true) you will disable the auto update of Logrotate.\n\nThe default `LOGROTATE_AUTOUPDATE` is `true`, to disable the defaults `LOGROTATE_AUTOUPDATE` should be set not equal `true`.\n\nExample:\n\n~~~~\ndocker run -d \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers \\\n  -v /var/log/docker:/var/log/docker \\\n  -e \"LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker\" \\\n  -e \"LOGROTATE_AUTOUPDATE=false\" \\\n  blacklabelops/logrotate\n~~~~\n\n> This will disable logrotate configuration file update (when logrotate action is triggering).\n\n# Set Time Zone\n\nWith Logrotate by default it logrotate logs in `UTC` time zone. It is possible to set time zone when used with `TZ`. By setting `TZ` (to a valid time zone) it will logrotate logs in the specified time zone.\n\nThe default `TZ` is `\"\"`, to set to different time zone. E.g `Australia/Melbourne`.\n\nExample:\n\n~~~~\ndocker run -d \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers \\\n  -v /var/log/docker:/var/log/docker \\\n  -e \"LOGS_DIRECTORIES=/var/lib/docker/containers /var/log/docker\" \\\n  -e \"TZ=Australia/Melbourne\" \\\n  blacklabelops/logrotate\n~~~~\n\n> This will logrotate in Australia/Melbourne time zone.\n\n## Used in Kubernetes\n\nWhen we run container in Kubernetes, we can use the logrotate container to rotate the logs. As we create\n\nan DaemonSet in cluster ,we can deploy an logrotate container in every nodes of the cluster.\n\n```sh\n# kubectl create -f logrotate_ds.yaml\ndaemonset \"logrotate\" created\n```\n\n## Support\n\nLeave a message and ask questions on Hipchat: [blacklabelops/hipchat](http://support.blacklabelops.com)\n\n## References\n\n* [Logrotate](http://www.linuxcommand.org/man_pages/logrotate8.html)\n* [Docker Homepage](https://www.docker.com/)\n* [Docker Userguide](https://docs.docker.com/userguide/)\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json",
    "application/vnd.docker.distribution.manifest.v1+prettyjws"
  ],
  "content_types": [
    "image"
  ]
}