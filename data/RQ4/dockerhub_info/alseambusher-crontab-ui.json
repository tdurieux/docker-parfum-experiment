{
  "user": "alseambusher",
  "name": "crontab-ui",
  "namespace": "alseambusher",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "https://github.com/alseambusher/crontab-ui",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 31,
  "pull_count": 3221376,
  "last_updated": "2022-04-04T00:41:19.051285Z",
  "date_registered": "2017-06-02T20:32:56.619755Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "alseambusher",
  "has_starred": false,
  "full_description": "Crontab UI\n==========\n\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=U8328Q7VFZMTS)\n[![npm](https://img.shields.io/npm/v/crontab-ui.svg?style=flat-square)](https://lifepluslinux.blogspot.com/2015/06/crontab-ui-easy-and-safe-way-to-manage.html)\n[![npm](https://img.shields.io/npm/dt/crontab-ui.svg?style=flat-square)](https://lifepluslinux.blogspot.com/2015/06/crontab-ui-easy-and-safe-way-to-manage.html)\n[![npm](https://img.shields.io/npm/dm/crontab-ui.svg?style=flat-square)](https://lifepluslinux.blogspot.com/2015/06/crontab-ui-easy-and-safe-way-to-manage.html)\n[![npm](https://img.shields.io/docker/pulls/alseambusher/crontab-ui.svg?style=flat-square)](https://lifepluslinux.blogspot.com/2015/06/crontab-ui-easy-and-safe-way-to-manage.html)\n[![npm](https://img.shields.io/npm/l/crontab-ui.svg?style=flat-square)](https://lifepluslinux.blogspot.com/2015/06/crontab-ui-easy-and-safe-way-to-manage.html)\n\nEditing the plain text crontab is error prone for managing jobs, e.g., adding jobs, deleting jobs, or pausing jobs. A small mistake can easily bring down all the jobs and might cost you a lot of time. With Crontab UI, it is very easy to manage crontab. Here are the key features of Crontab UI.\n\n![flow](https://github.com/alseambusher/crontab-ui/raw/gh-pages/screenshots/flow.gif)\n\n1. Easy setup. You can even import from existing crontab.\n2. Safe adding, deleting or pausing jobs. Easy to maintain hundreds of jobs.\n3. Backup your crontabs.\n4. Export crontab and deploy on other machines without much hassle.\n5. Error log support.\n6. Mailing and hooks support.\n\nRead [this](https://lifepluslinux.blogspot.com/2015/06/crontab-ui-easy-and-safe-way-to-manage.html) to see more details.\n\n## Setup\n\nGet latest `node` from [here](https://nodejs.org/en/download/current/). Then,\n\n    npm install -g crontab-ui\n    crontab-ui\n\nIf you need to set/use an alternative host, port OR base url, you may do so by setting an environment variable before starting the process:\n\n    HOST=0.0.0.0 PORT=9000 BASE_URL=/alse crontab-ui\n\nBy default, db, backups and logs are stored in the installation directory. It is **recommended** that it be overriden using env variable `CRON_DB_PATH`. This is particularly helpful in case you **update** crontab-ui.\n\n    CRON_DB_PATH=/path/to/folder crontab-ui\n    \nIf you need to apply basic HTTP authentication, you can set user name and password through environment variables:\n\n    BASIC_AUTH_USER=user BASIC_AUTH_PWD=SecretPassword\n    \nAlso, you may have to **set permissions** for your `node_modules` folder. Refer [this](https://docs.npmjs.com/getting-started/fixing-npm-permissions).\n\nIf you need to use SSL, you can pass the private key and certificate through environment variables:\n\n    SSL_CERT=/path/to/ssl_certificate SSL_KEY=/path/to/ssl_private_key\n\nMake sure node has the correct **permissions** to read the certificate and the key.\n\nIf you need to autosave your changes to crontab directly:\n\n    crontab-ui --autosave\n\n### List of ennvironment variables supported\n- HOST\n- PORT\n- BASE_URL\n- CRON_DB_PATH\n- CRON_PATH\n- BASIC_AUTH_USER, BASIC_AUTH_PWD\n- SSL_CERT, SSL_KEY \n- ENABLE_AUTOSAVE\n\n\n## Docker\nYou can use crontab-ui with docker. You can use the prebuilt images in the [dockerhub](https://hub.docker.com/r/alseambusher/crontab-ui/tags)\n```bash\ndocker run -d -p 8000:8000 alseambusher/crontab-ui\n```\n\nYou can also build it yourself if you want to customize, like this:\n```bash\ngit clone https://github.com/alseambusher/crontab-ui.git\ncd crontab-ui\ndocker build -t alseambusher/crontab-ui .\ndocker run -d -p 8000:8000 alseambusher/crontab-ui\n```\n\nIf you want to use it with authentication, You can pass `BASIC_AUTH_USER` and `BASIC_AUTH_PWD` as env variables\n```bash\ndocker run -e BASIC_AUTH_USER=user -e BASIC_AUTH_PWD=SecretPassword -d -p 8000:8000 alseambusher/crontab-ui \n```\n\nYou can also mount a folder to store the db and logs.\n```bash\nmkdir -p crontabs/logs\ndocker run --mount type=bind,source=\"$(pwd)\"/crontabs/,target=/crontab-ui/crontabs/ -d -p 8000:8000 alseambusher/crontab-ui\n```\n\n    \n## Resources\n\n* [Full usage details](https://lifepluslinux.blogspot.com/2015/06/crontab-ui-easy-and-safe-way-to-manage.html)\n* [Issues](https://github.com/alseambusher/crontab-ui/blob/master/README/issues.md)\n* [Setup Mailing after execution](https://lifepluslinux.blogspot.com/2017/03/introducing-mailing-in-crontab-ui.html)\n* [Integration with nginx and authentication](https://github.com/alseambusher/crontab-ui/blob/master/README/nginx.md)\n* [Setup on Raspberry pi](https://lifepluslinux.blogspot.com/2017/03/setting-up-crontab-ui-on-raspberry-pi.html)\n\n### Adding, deleting, pausing and resuming jobs.\n\nOnce setup Crontab UI provides you with a web interface using which you can manage all the jobs without much hassle.\n\n![basic](https://github.com/alseambusher/crontab-ui/raw/gh-pages/screenshots/main.png)\n\n### Import from existing crontab\n\nImport from existing crontab file automatically.\n![import](https://github.com/alseambusher/crontab-ui/raw/gh-pages/screenshots/import.gif)\n\n### Backup and restore crontab\n\nKeep backups of your crontab in case you mess up.\n![backup](https://github.com/alseambusher/crontab-ui/raw/gh-pages/screenshots/backup.png)\n\n### Export and import crontab on multiple instances of Crontab UI.\n\nIf you want to run the same jobs on multiple machines simply export from one instance and import the same on the other. No SSH, No copy paste!\n\n![export](https://github.com/alseambusher/crontab-ui/raw/gh-pages/screenshots/import_db.png)\n\nBut make sure to take a backup before importing.\n\n### Separate error log support for every job\n![logs](https://github.com/alseambusher/crontab-ui/raw/gh-pages/screenshots/log.gif)\n\n### Donate\nLike the project? [Buy me a coffee](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=U8328Q7VFZMTS)!\n\n### Contribute\nFork Crontab UI and contribute to it. Pull requests are encouraged.\n\n### License\n[MIT](LICENSE.md)\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}