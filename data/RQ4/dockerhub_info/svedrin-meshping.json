{
  "user": "svedrin",
  "name": "meshping",
  "namespace": "svedrin",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Pings a number of targets at once. Deploy at strategic points in your network to detect weak links.",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 4746543,
  "last_updated": "2022-12-05T15:12:23.805358Z",
  "date_registered": "2018-05-11T13:50:55.459227Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "svedrin",
  "has_starred": false,
  "full_description": "# meshping\n\nPing daemon that pings a number of targets at once, collecting their response times in histograms. Meant to be deployed at strategic points in your network in order to detect weak links.\n\n# Features\n\n* Meshping instances can be [peered](https://github.com/Svedrin/meshping#wide-distribution-peering) with one another and will then ping the same targets.\n* Scrapeable by [Prometheus](prometheus.io).\n* Targets can be added and removed on-the-fly, without restarting or reloading anything.\n* CLI tool to interact with the daemon.\n* IPv6 supported.\n\n# Deployment\n\nDeploying meshping is easiest using [`docker-compose`](https://docs.docker.com/compose/), with the\n[docker-compose.yaml](https://github.com/Svedrin/meshping/blob/master/examples/docker-compose.yaml) file from the repo.\nThis will deploy meshping, along with a [Watchtower](https://hub.docker.com/r/containrrr/watchtower) instance that keeps\nMeshping up-to-date. It can be deployed as-is by adding a Stack through Portainer, or using `docker-compose`:\n\n    mkdir meshping\n    cd meshping\n    wget https://github.com/Svedrin/meshping/raw/master/examples/docker-compose.yml\n    docker-compose up --detach\n\nMeshping should now be reachable at `http://<your-ip>:9922`.\n\n# GitHub Repo\n\nhttps://github.com/Svedrin/meshping\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.list.v2+json",
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}