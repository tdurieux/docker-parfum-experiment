{
  "user": "gmusicproxy",
  "name": "gmusicproxy",
  "namespace": "gmusicproxy",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Official Builds for GMusicProxy",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 24945,
  "last_updated": "2020-06-27T15:22:04.662946Z",
  "date_registered": "2020-04-26T19:26:47.183405Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "gmusicproxy",
  "has_starred": false,
  "full_description": "# [GMusic Proxy](https://gmusicproxy.github.io)\n\nOfficial Docker Builds for the GMusicProxy application. \n\nWe recently added an Alpine build, which is significantly smaller. Look for tags with a ```-alpine``` suffix\n\n## Usage Examples\n\n```\ndocker pull gmusicproxy/gmusicproxy:tagname\ndocker run -p 9999:9999 -v /local/path/foroauth_storage:/root/.local/share/gmusicapi gmusicproxy/gmusicproxy:tagname\n```\nAs a daemon:\n```\ndocker run -d -p 9999:9999 -v /local/path/foroauth_storage:/root/.local/share/gmusicapi gmusicproxy/gmusicproxy:tagname\n```\nViewing output: \n```\n# get the Container ID (aa0011223344, in this example):\ndocker ps\nCONTAINER ID        IMAGE                           COMMAND                  CREATED             STATUS              PORTS                  NAMES\naa0011223344        gmusicproxy/gmusicproxy:2.2.0   \"GMusicProxy -H 10.1â€¦\"   5 seconds ago       Up 3 seconds        0.0.0.0:80->9999/tcp   peaceful_jenning\n# view the logs\ndocker logs aa0011223344\n```\nRunning on a different port, note the ```-T``` argument:\n```\ndocker run -d -p 80:9999 -v /local/path/foroauth_storage:/root/.local/share/gmusicapi gmusicproxy/gmusicproxy:tagname  -H $HOST -T 80\n```\n\n### OAuth Initialization\nOAuth is the default login mechanism and you may need to run interactively to authenticate:\n```\ndocker run -it -p 9999:9999 -v /local/path/foroauth_storage:/root/.local/share/gmusicapi gmusicproxy/gmusicproxy:tagname\n```\nYou'll be prompted to authorize the application with a link. Copy and paste, or click and follow the instructions. Paste the response in the terminal and the software should continue. You can ```ctrl+c``` to quit if you wish to restart as a daemon/background process.\n\n\n```\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}