{
  "user": "aimxhaisse",
  "name": "gorobot",
  "namespace": "aimxhaisse",
  "repository_type": null,
  "status": 1,
  "status_description": "active",
  "description": "",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 2,
  "pull_count": 188,
  "last_updated": "2015-11-14T11:55:07.794327Z",
  "date_registered": "2014-02-02T14:46:47Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "aimxhaisse",
  "has_starred": false,
  "full_description": "GoRobot\n===\n\nYet Another IRC robot.\n\n## Features:\n\n  * Multiple servers, multiple channels, conversations, flood control\n  * Administration via a specific set of IRC channels\n  * JSON configuration\n  * Module to handle shell scripts, through a tiny API\n\nDocker\n------\n\n    # Build\n    docker build -t aimxhaisse/gorobot .\n\n    # Run in foreground\n    docker run -i -t -rm aimxhaisse/gorobot\n\n    # Run in background\n    docker run -d aimxhaisse/gorobot\n\n    # Mounts scripts directory for dev\n    docker run -i -t -rm \\\n    \t   -v $(pwd)/root/ /home/gorobot/gorobot/root/ \\\n    \t   aimxhaisse/gorobot\n    \t   \nExtending with Docker\n---------------------\n\n    FROM aimxhaisse/gorobot\n    ADD . ./root\n    ...\n\n## Commands\n\n### How it works\n\nCommands can be added in folders scripts/{admin,public,private}.\n\n  * Private commands are executed when talking in private with the bot.\n  * Public commands are executed on all channels.\n  * Admin commands are executed on master channels (see grobot.json).\n\n### Available commands\n\nPrivate: !spoon\n\nPublic: !chat !non !pokemon !roulette !viewquote !ninja !fax !pwet !boby !matrix !oui !template !statquote ...\n\nAdmin: !addquote !join !kick !part\n\n### How to add new commands\n\nYou can add new commands in whatever language you want. Current ones are\nin PHP or Lua (with some helpers to do the dirty job). Commands are executed\nlike this:\n\n```sh\n./bin/scripts/xxx/yyy.cmd <port> <server> <channel> <user> <param1> <param2> <...>\n```\n\nExample, \"UserA\" invokes \"!hejsan 42\" on the channel #toto42 of freenode:\n\n```sh\n./bin/scripts/xxx/yyy.cmd 2345 freenode #toto42 UserA 42\n```\n\nThe port is a local port opened by the module \"scripts\", it accepts raw IRC commands in the following way:\n\n```sh\n<server> <priority> RAW_COMMAND\n```\n\nServer is the server where the command has to be executed, priority is\na number (1, 2 or 3) indicating the priority of the command. This\npriority is meaningful on servers having flood control (you may want\nto kick someone before printing 42 lines).\n\nExample of a bash command:\n\n```sh\n#!/usr/bin/env bash\n\nport=$1\nserv=$2\nchan=$3\nuser=$4\n\necho \"$serv 1 PRIVMSG $user :th3r3 1s n0 sp0on...\" | nc localhost $po\n```\n\nOnce the command is created, don't forget to chmod it (+x).\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.v1+prettyjws"
  ],
  "content_types": [
    "image"
  ]
}