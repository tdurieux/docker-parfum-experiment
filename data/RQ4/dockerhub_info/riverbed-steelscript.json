{
  "user": "riverbed",
  "name": "steelscript",
  "namespace": "riverbed",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "SteelScript for Python SDK - includes all of the core SteelScript packages in one simple container.",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 2,
  "pull_count": 485,
  "last_updated": "2019-06-17T21:07:23.336325Z",
  "date_registered": "2017-06-15T15:48:04.746049Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "riverbed",
  "has_starred": false,
  "full_description": "## Tags and Dockerfile links\n\n- `<version>`, `latest` - [Dockerfile](https://github.com/riverbed/steelscript/blob/master/Dockerfile)\n    Base version that includes core SteelScript packages and a workspace with example files.\n\n- `slim` - [Dockerfile-slim](https://github.com/riverbed/steelscript/blob/master/Dockerfile-slim)\n    Smaller version of `latest`, using stripped version based off of Python `3.7-slim`\n\n- `notebook` - [Dockerfile-notebook](https://github.com/riverbed/steelscript/blob/master/Dockerfile-notebook)\n    Includes jupyter notebook server, built on top of `latest`. \n\n## Running Notebooks\n\n### Base SteelScript\n\nSimplest way to get started, just run:\n\n    $ docker run -it riverbed/steelscript\n\nThis will pull the latest version and drop you into a bash shell inside a SteelScript workspace.  Run the examples or start your own interactive Python session from here.\n\n### SteelScript with Notebooks\n\nFor a more powerful start, use the `notebook` tag to get a built-in Jupyter notebook server running:\n\n    $ docker run -p 9999:8888 --name=notebook -d riverbed/steelscript:notebook\n\nThis runs the container with the built in port 8888 exposed on the local machine at localhost:9999.  It also gives it a default name which helps for later commands, and runs it in daemon mode so it will continue in the background.\n\nNow check the logs to get our key:\n\n    $ docker logs notebook\n    [I 19:07:25.116 NotebookApp] Writing notebook server cookie secret to /root/.local/share/jupyter/runtime/notebook_cookie_secret\n    [I 19:07:25.260 NotebookApp] Serving notebooks from local directory: /root/steelscript-workspace\n    [I 19:07:25.260 NotebookApp] 0 active kernels\n    [I 19:07:25.260 NotebookApp] The Jupyter Notebook is running at:\n    [I 19:07:25.261 NotebookApp] http://0.0.0.0:8888/?token=5f210c5819326f5ff3d8cd8459c97b1a49acc5e6d62c4855\n    [I 19:07:25.261 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).\n    [C 19:07:25.261 NotebookApp]\n\n    Copy/paste this URL into your browser when you connect for the first time,\n    to login with a token:\n        http://0.0.0.0:8888/?token=5f210c5819326f5ff3d8cd8459c97b1a49acc5e6d62c4855\n \nGrab the string after `token=` in that output then navigate to localhost:9999 and you will have access to the locally running notebook server!\n\n## License\n\nThis SteelScript image is licensed under the following license terms:\n\nCopyright (c) 2019 Riverbed Technology, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n********************************************************************************\n\nThis SteelScript image requires the download and usage of certain Riverbed\nSteelScript packages and third party software from third party websites.  All\nsuch third party software is licensed by the applicable third party licensors\nunder the terms and conditions (including, without limitation, warranty and\nliability disclaimers) offered by such third party licensors. You acknowledge\nthat you are responsible for obtaining and complying with any licenses\nnecessary to operate any such third party software.  Riverbed Technology, Inc.\ndisclaims all representations, warranties and liability relating to such third\nparty software.\n\nPlease visit the links below for more information about licensing for the\nrequired Riverbed SteelScript packages:\n\nSteelScript - https://github.com/riverbed/steelscript/blob/master/LICENSE\n\nSteelScript.NetProfiler -\nhttps://github.com/riverbed/steelscript-netprofiler/blob/master/LICENSE\n\nSteelScript.NetShark -\nhttps://github.com/riverbed/steelscript-netshark/blob/master/LICENSE\n\nSteelScript.AppResponse -\nhttps://github.com/riverbed/steelscript-appresponse/blob/master/LICENSE\n\nSteelScript.Wireshark -\nhttps://github.com/riverbed/steelscript-wireshark/blob/master/LICENSE\n\nSteelScript.CmdLine -\nhttps://github.com/riverbed/steelscript-cmdline/blob/master/LICENSE\n\nSteelScript.SCC -\nhttps://github.com/riverbed/steelscript-scc/blob/master/LICENSE\n\nSteelScript.SteelHead -\nhttps://github.com/riverbed/steelscript-steelhead/blob/master/LICENSE\n\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}