{
  "user": "owasp",
  "name": "nettacker",
  "namespace": "owasp",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Automated Penetration Testing Framework",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 2,
  "pull_count": 122,
  "last_updated": "2023-01-05T23:36:13.152104Z",
  "date_registered": "2021-03-17T16:11:57.440453Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "owaspprojdir",
  "has_starred": false,
  "full_description": "OWASP Nettacker\n=========\n[![Build Status](https://github.com/OWASP/Nettacker/workflows/CI/badge.svg?branch=master)](https://github.com/OWASP/Nettacker/actions/workflows/CI.yml)\n[![Apache License](https://img.shields.io/badge/License-Apache%20v2-green.svg)](https://github.com/OWASP/Nettacker/blob/master/LICENSE)\n[![Twitter](https://img.shields.io/badge/Twitter-@iotscan-blue.svg)](https://twitter.com/iotscan)\n![GitHub contributors](https://img.shields.io/github/contributors/OWASP/Nettacker)\n[![repo size ](https://img.shields.io/github/repo-size/OWASP/Nettacker)](https://github.com/OWASP/Nettacker)\n\n\n<img src=\"https://raw.githubusercontent.com/zdresearch/OWASP-Nettacker/master/web/static/img/owasp-nettacker.png\" width=\"200\"><img src=\"https://raw.githubusercontent.com/zdresearch/OWASP-Nettacker/master/web/static/img/owasp.png\" width=\"500\">\n\n\n**DISCLAIMER**\n\n* ***THIS SOFTWARE WAS CREATED FOR AUTOMATED PENETRATION TESTING AND INFORMATION GATHERING. CONTRIBUTORS WILL NOT BE RESPONSIBLE FOR ANY ILLEGAL USAGE.***\n\n![2018-01-19_0-45-07](https://user-images.githubusercontent.com/7676267/35123376-283d5a3e-fcb7-11e7-9b1c-92b78ed4fecc.gif)\n\nOWASP Nettacker project is created to automate information gathering, vulnerability scanning and eventually generating a report for networks, including services, bugs, vulnerabilities, misconfigurations, and other information. This software **will** utilize TCP SYN, ACK, ICMP, and many other protocols in order to detect and bypass Firewall/IDS/IPS devices. By leveraging a unique method in OWASP Nettacker for discovering protected services and devices such as SCADA. It would make a competitive edge compared to other scanner making it one of the bests.\n\n\n* OWASP Page: https://owasp.org/www-project-nettacker/\n* Wiki: https://github.com/OWASP/Nettacker/wiki\n* Installation: https://github.com/OWASP/Nettacker/wiki/Installation\n* Usage: https://github.com/OWASP/Nettacker/wiki/Usage\n* GitHub: https://github.com/OWASP/Nettacker\n* Slack: #project-nettacker on https://owasp.slack.com\n* Mailing List: https://groups.google.com/forum/#!forum/owasp-nettacker\n* Docker Image: https://hub.docker.com/r/owasp/nettacker\n* How to use the Dockerfile: https://github.com/OWASP/Nettacker/wiki/Installation#docker\n* OpenHub: https://www.openhub.net/p/OWASP-Nettacker\n* **Donate**: https://owasp.org/donate/?reponame=www-project-nettacker&title=OWASP+Nettacker\n\n____________\nQuick Setup & Run\n============\n```bash\n$ docker-compose up -d && docker exec -it nettacker_nettacker_1 /bin/bash\n# python nettacker.py -i owasp.org -s -m port_scan\n```\n* Results are accessible from your (https://localhost:5000) or https://nettacker-api.z3r0d4y.com:5000/ (pointed to your localhost)\n* The local database is `.data/nettacker.db` (sqlite).\n* Default results path is `.data/results`\n* `docker-compose` will share your nettacker folder, so you will not lose any data after `docker-compose down`\n* To see the API key in you can run `docker logs nettacker_nettacker_1`.\n* More details and setup without docker https://github.com/OWASP/Nettacker/wiki/Installation\n_____________\nThanks to our awesome contributors\n============\n![Awesome Contributors](https://contrib.rocks/image?repo=OWASP/Nettacker)\n_____________\n\n## ***IoT Scanner***\n*\tPython Multi Thread & Multi Process Network Information Gathering Vulnerability Scanner\n*\tService and Device Detection ( SCADA, Restricted Areas, Routers, HTTP Servers, Logins and Authentications, None-Indexed HTTP, Paradox System, Cameras, Firewalls, UTM, WebMails, VPN, RDP, SSH, FTP, TELNET Services, Proxy Servers and Many Devices like Juniper, Cisco, Switches and many more… ) \n*\tAsset Discovery & Network Service Analysis\n*\tServices Brute Force Testing\n*\tServices Vulnerability Testing\n*\tHTTP/HTTPS Crawling, Fuzzing, Information Gathering and … \n*\tHTML, JSON, CSV and Text Outputs\n* API & WebUI\n*\tThis project is at the moment in research and development phase \n* Thanks to Google Summer of Code Initiative and all the students who contributed to this project during their summer breaks: \n\n\n<img src=\"https://betanews.com/wp-content/uploads/2016/03/vertical-GSoC-logo.jpg\" width=\"200\"></img>\n\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}