{
  "user": "sentrypeer",
  "name": "sentrypeer",
  "namespace": "sentrypeer",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "SentryPeer is a VoIP (SIP) honeypot  to collect a list of bad actor IP addresses and phone numbers.",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 98,
  "last_updated": "2022-09-01T19:38:08.869052Z",
  "date_registered": "2021-12-24T00:19:50.547786Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "sentrypeer",
  "has_starred": false,
  "full_description": "## SentryPeer<sup>&reg;</sup>\n\n<img alt=\"SentryPeer Logo\" src=\"https://raw.githubusercontent.com/SentryPeer/SentryPeer/main/web-gui-theme/src/assets/logo.svg\" width=\"100\" height=\"100\"> \n\nA distributed list of bad actor IP addresses and phone numbers collected via a SIP Honeypot.\n\n[![Stability: Active](https://masterminds.github.io/stability/active.svg)](https://masterminds.github.io/stability/active.html)\n[![GitHub release (latest SemVer)](https://img.shields.io/github/v/release/sentrypeer/sentrypeer?sort=semver)](https://github.com/SentryPeer/SentryPeer/releases)\n[![Docker Hub](https://img.shields.io/badge/docker-hub-brightgreen.svg)](https://hub.docker.com/r/sentrypeer/sentrypeer)\n[![Copr build status](https://copr.fedorainfracloud.org/coprs/ghenry/SentryPeer/package/sentrypeer/status_image/last_build.png)](https://copr.fedorainfracloud.org/coprs/ghenry/SentryPeer/package/sentrypeer/)\n[![Coverity Scan Build Status](https://scan.coverity.com/projects/23969/badge.svg)](https://scan.coverity.com/projects/sentrypeer-sentrypeer)\n[![Build and Test](https://github.com/SentryPeer/SentryPeer/actions/workflows/main.yml/badge.svg)](https://github.com/SentryPeer/SentryPeer/actions/workflows/main.yml)\n[![CodeQL](https://github.com/SentryPeer/SentryPeer/actions/workflows/codeql-analysis.yml/badge.svg)](https://github.com/SentryPeer/SentryPeer/actions/workflows/codeql-analysis.yml)\n[![Clang Static Analysis](https://github.com/SentryPeer/SentryPeer/actions/workflows/clang-analyzer.yml/badge.svg)](https://github.com/SentryPeer/SentryPeer/actions/workflows/clang-analyzer.yml)\n[![Language grade: C](https://img.shields.io/lgtm/grade/cpp/g/SentryPeer/SentryPeer.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/SentryPeer/SentryPeer/context:cpp)\n[![Total alerts](https://img.shields.io/lgtm/alerts/g/SentryPeer/SentryPeer.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/SentryPeer/SentryPeer/alerts/)\n[![Language grade: JavaScript](https://img.shields.io/lgtm/grade/javascript/g/SentryPeer/SentryPeer.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/SentryPeer/SentryPeer/context:javascript)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/5374/badge)](https://bestpractices.coreinfrastructure.org/projects/5374)\n\n### Introduction\n\nSentryPeer is a fraud detection tool. It lets bad actors try to make phone calls and saves the IP address they came from and \nnumber they tried to call. Those details can then be used to raise notifications at the service providers network and the next \ntime a user/customer tries to call a collected number, you can act anyway you see fit.\n\nFor example:\n\nLet's say you are running your own VoIP PBX on site. What SentryPeer will allow you to do in this context, \nis dip into the list of phone numbers (using the RESTful API) when your users are making outbound calls. If you get a hit, \nyou'll get a heads-up that potentially a device within your network is trying to call known probing phone numbers that \nhave either been:\n\n1. Numbers collected by SentryPeer nodes you are running yourself\n2. Numbers seen by other SentryPeer nodes which have been replicated to your node via the peer to peer network\n\nThis would allow you to generate a notification from your monitoring systems before you rack \nup any expensive calls or something worse happens.\n\nWhat would lead to this scenario?\n\n1. Potential voicemail fraud. This can happen if you allow calling an\n   inbound number (your DID/DDI) to get to your voicemail system, then\n   prompt for a PIN. This PIN is weak and the voicemail system allows you\n   to press '*' to call back the Caller ID that left a voicemail. The\n   attacker has left a voicemail, and they then guess your PIN and call it\n   back. The CLI is a known number that SentryPeer has seen. You can alert on it.\n2. A device has been hijacked and/or a softphone or similar is using\n   the credentials they stole off the phone's GUI and is trying to\n   register to your system and make calls to a number seen by SentryPeer.\n3. An innocent user is calling a phishing number or known expensive\n   number etc. that SentryPeer has seen before.\n\nTraditionally this data is shipped to a central place, so you don't own the data you've collected. This project is all about Peer to Peer sharing of that data. The user owning the data and various Service Provider / Network Provider related feeds of the data is the key bit for me. I'm sick of all the services out there that keep it and sell it. If you've collected it, you should have the choice to keep it and/or opt in to share it with other SentryPeer community members via p2p methods.\n\n### Talks\n\n- TADSummit 2021 - https://blog.tadsummit.com/2021/11/17/sentrypeer/\n- CommCon 2021 - https://2021.commcon.xyz/talks/sentrypeer-a-distributed-peer-to-peer-list-of-bad-ip-addresses-and-phone-numbers-collected-via-a-sip-honeypot\n- ClueCon Weekly 2022 - https://youtu.be/DFxGHJI_0Wg\n- UKNOF49 2022 ([presentation slides](https://indico.uknof.org.uk/event/59/contributions/801/attachments/1033/1520/UKNOF-49-2022-SentryPeer.pdf)) - https://indico.uknof.org.uk/event/59/contributions/801/\n\n\n### Adoption\n\n* [Kali Linux](https://pkg.kali.org/pkg/sentrypeer)\n* Deutsche Telekom [T-Pot - The All In One Honeypot Platform](https://github.com/telekom-security/tpotce) [v22](https://github.com/telekom-security/tpotce/releases/tag/22.04.0) onwards \n\n![Matrix](https://img.shields.io/matrix/sentrypeer:matrix.org?label=matrix&logo=matrix)\n[![slack](https://img.shields.io/badge/join-us%20on%20slack-gray.svg?longCache=true&logo=slack&colorB=brightgreen)](https://join.slack.com/t/sentrypeer/shared_invite/zt-zxsmfdo7-iE0odNT2XyKLP9pt0lgbcw)\n[![SentryPeer on Twitter](https://img.shields.io/badge/follow-twitter-blue)](https://twitter.com/SentryPeer)\n\n### Design\n\nI started this because I wanted to do [C network programming](https://github.com/codeplea/Hands-On-Network-Programming-with-C) as all the projects I use daily are in C like [PostgreSQL](https://www.postgresql.org/), [OpenLDAP](https://www.openldap.org/), [FreeSWITCH](https://freeswitch.com/), [OpenSIPS](https://opensips.org/),\n[Asterisk](https://www.asterisk.org/) etc. See\n[Episode 414: Jens Gustedt on Modern C](https://www.se-radio.net/2020/06/episode-414-jens-gustedt-on-modern-c/) for why [C](https://en.wikipedia.org/wiki/C_(programming_language)) is a good choice.  For those interested, see my full podcast show list (https://www.se-radio.net/team/gavin-henry/) for [Software Engineering Radio](https://www.se-radio.net/)\n\n### Screenshots\n\nHere's a mockup of the web UI which is subject to change.\n\n[![SentryPeer Web GUI mock up](./screenshots/SentryPeer-Web-GUI-screenshot.png)](./screenshots/SentryPeer-Web-GUI-screenshot.png)\n\n### Goals\n\n- [x] All code [Free/Libre and Open Source Software](https://www.gnu.org/philosophy/floss-and-foss.en.html)\n- [x] FAST\n- [x] User _owns their_ data\n- [x] User can submit their own data if they want to (you need to enable p2p mode - `-p`) \n- [x] User gets other users' data **ONLY IF** they opt in to submit their data to the pool\n- [x] Embedded Distributed Hash Table (DHT) node using [OpenDHT](https://github.com/savoirfairelinux/opendht/wiki/Running-a-node-in-your-program) (`-p` cli option)\n- [x] Peer to Peer **sharing** of collected bad_actors using [OpenDHT](https://github.com/savoirfairelinux/opendht) (default on)\n- [x] Peer to Peer data replication to **receive** collected bad_actors using [OpenDHT](https://github.com/savoirfairelinux/opendht) (default on)\n- [x] Set your own DHT bootstrap node (`-b` cli option)\n- [x] Multithreaded\n- [x] UDP transport\n- [x] TCP transport\n- [ ] TLS transport\n- [x] [JSON logging](#json-log-format) to a file\n- [x] SIP mode can be disabled. This allows you to run SentryPeer in API mode or DHT mode only etc. i.e.\n  not as a honeypot, but as a node in the SentryPeer community or to just serve replicated data\n- [x] SIP responsive mode can be enabled to collect data - cli / env flag   \n- [x] **Local** data copy for **fast access** - cli / env db location flag\n- [x] **Local** API for **fast access** - cli / env flag\n- [x] **Local** Web GUI for **fast access** - cli / env flag\n- [x] Query API for IP addresses of bad actors\n- [ ] Query API for IPSET of bad actors\n- [x] Query API for a particular IP address of a bad actor\n- [x] Query API for attempted phone numbers called by bad actors\n- [x] Query API for an attempted phone number called by a bad actor\n- [x] [Fail2Ban](https://www.fail2ban.org/wiki/index.php/Main_Page) support via `syslog` as per [feature request](https://github.com/SentryPeer/SentryPeer/issues/6)\n- [x] Local [sqlite](https://www.sqlite.org/index.html) database - feature / cli flag\n- [ ] Analytics - opt in\n- [ ] SDKs/libs for external access - [CGRateS](https://github.com/cgrates/cgrates) to start with or our own firewall with nftables\n- [x] Small binary size for IoT usage\n- [x] Cross-platform\n- [ ] Firewall options to use distributed data in real time - [DHT](https://en.wikipedia.org/wiki/Distributed_hash_table)?\n- [x] Container on [Docker Hub for latest build](https://hub.docker.com/r/sentrypeer/sentrypeer)\n- [ ] BGP agent to peer with for blackholing collected IP addresses (similar to [Team Cymru Bogon Router Server Project](https://team-cymru.com/community-services/bogon-reference/bogon-reference-bgp/))\n- [ ] SIP agent to return 404 or default destination for SIP redirects\n\n### Docker\n\n    sudo docker run -d -p 5060:5060/udp -p 8082:8082 -p 4222:4222/udp sentrypeer/sentrypeer:latest\n\nThen you can check at `http://localhost:8082/ip-addresses` and `http://localhost:8082/health-check` to see if it's running.\n\n#### Environment Variables\n\n    ENV SENTRYPEER_DB_FILE=/my/location/sentrypeer.db\n    ENV SENTRYPEER_API=1\n    ENV SENTRYPEER_WEB_GUI=1\n    ENV SENTRYPEER_SIP_RESPONSIVE=1\n    ENV SENTRYPEER_SIP_DISABLE=1\n    ENV SENTRYPEER_SYSLOG=1\n    ENV SENTRYPEER_PEER_TO_PEER=1\n    ENV SENTRYPEER_BOOTSTRAP_NODE=mybootstrapnode.com\n    ENV SENTRYPEER_JSON_LOG=1\n    ENV SENTRYPEER_JSON_LOG_FILE=/my/location/sentrypeer_json.log\n    ENV SENTRYPEER_VERBOSE=1\n    ENV SENTRYPEER_DEBUG=1\n\nEither set these in the Dockerfile or in your `Dockerfile.env` file or docker run command.\n\n### Running SentryPeer\n\nOnce built, you can run like so to start in **debug mode**, **respond** to SIP probes, enable the **RESTful API**, enable\nthe Web GUI SPA and enable syslog logging ([use a package](https://github.com/SentryPeer/SentryPeer/releases) if you want [systemd](https://www.freedesktop.org/wiki/Software/systemd/)):\n\n    ./sentrypeer -drawps\n    SentryPeer node id: e5ac3a88-3d52-4e84-b70c-b2ce83992d02\n    Starting sentrypeer...\n    API mode enabled, starting http daemon...\n    Web GUI mode enabled...\n    SIP mode enabled...\n    Peer to Peer DHT mode enabled...\n    Starting peer to peer DHT mode using OpenDHT-C lib version '2.4.0'...\n    Configuring local address...\n    Creating sockets...\n    Binding sockets to local address...\n    Listening for incoming UDP connections...\n    SIP responsive mode enabled. Will reply to SIP probes...\n    Listening for incoming TCP connections...\n    Peer to peer DHT mode started.\n    DHT InfoHash for key 'bad_actors' is: 14d30143330e2e0e922ed4028a60ff96a59800ad\n    Bootstrapping the DHT\n    Waiting 5 seconds for bootstrapping to bootstrap.sentrypeer.org...\n    Listening for changes to the bad_actors DHT key\n\n\nwhen you get a probe request, you can see something like the following in the terminal:\n\n```bash\nReceived (411 bytes): OPTIONS sip:100@XXX.XXX.XXX.XXX SIP/2.0\nVia: SIP/2.0/UDP 91.223.3.152:5173;branch=z9hG4bK-515761064;rport\nContent-Length: 0\nFrom: \"sipvicious\"<sip:100@1.1.1.1>;tag=6434396633623535313363340131363131333837383137\nAccept: application/sdp\nUser-Agent: friendly-scanner\nTo: \"sipvicious\"<sip:100@1.1.1.1>\nContact: sip:100@91.223.3.152:5173\nCSeq: 1 OPTIONS\nCall-ID: 679894155883566215079442\nMax-Forwards: 70\n\n\nread_packet_buf size is: 1024: \nread_packet_buf length is: 468: \nbytes_received size is: 411: \n\nBad Actor is:\nEvent Timestamp: 2021-11-23 20:13:36.427515810\nEvent UUID: fac3fa20-8c2c-445b-8661-50a70fa9e873\nSIP Message: OPTIONS sip:100@XXX.XXX.XXX.XXX SIP/2.0\nVia: SIP/2.0/UDP 91.223.3.152:5173;branch=z9hG4bK-515761064;rport\nFrom: \"sipvicious\" <sip:100@1.1.1.1>;tag=6434396633623535313363340131363131333837383137\nTo: \"sipvicious\" <sip:100@1.1.1.1>\nCall-ID: 679894155883566215079442\nCSeq: 1 OPTIONS\nContact: <sip:100@91.223.3.152:5173>\nAccept: application/sdp\nUser-agent: friendly-scanner\nMax-forwards: 70\nContent-Length: 0\n\n\nSource IP: 193.107.216.27\nCalled Number: 100\nSIP Method: OPTIONS\nTransport Type: UDP\nUser Agent: friendly-scanner\nCollected Method: responsive\nCreated by Node Id: fac3fa20-8c2c-445b-8661-50a70fa9e873\nSentryPeer db file location is: sentrypeer.db\nDestination IP address of UDP packet is: xx.xx.xx.xx\n```\n\nYou can see the data in the sqlite3 database called `sentrypeer.db` using [sqlitebrowser](https://sqlitebrowser.org/) or sqlite3 command line tool.\n\nHere's a screenshot of the database opened using [sqlitebrowser](https://sqlitebrowser.org/) (it's big, so I'll just link to the image):\n\n[sqlitebrowser exploring the sentrypeer.db](./screenshots/SentryPeer-sqlitebrowser.png)\n\n### RESTful API \n\nThe RESTful API is almost complete and the web UI is coming soon. Please click the Watch button to be notified when they are ready and hit Like to follow the development :-)\n\n#### Endpoint /health-check\n\nQuery the API to see if it's alive:\n\n```bash\ncurl -v -H \"Content-Type: application/json\" http://localhost:8082/health-check\n\n* Connected to localhost (127.0.0.1) port 8082 (#0)\n> GET /health-check HTTP/1.1\n> Host: localhost:8082\n> User-Agent: curl/7.79.1\n> Accept: */*\n> Content-Type: application/json\n> \n* Mark bundle as not supporting multiuse\n< HTTP/1.1 200 OK\n< Date: Mon, 24 Apr 2022 11:16:25 GMT\n< Content-Type: application/json\n< Access-Control-Allow-Origin: *\n< X-Powered-By: SentryPeer\n< X-SentryPeer-Version: 1.4.0\n< Content-Length: 81\n< \n{\n  \"status\": \"OK\",\n  \"message\": \"Hello from SentryPeer!\",\n  \"version\": \"1.0.0\"\n}\n```\n\n#### Endpoint /ip-addresses\n\nList all the IP addresses that have been seen by SentryPeer:\n\n```bash\ncurl -v -H \"Content-Type: application/json\" http://localhost:8082/ip-addresses\n\n* Connected to localhost (127.0.0.1) port 8082 (#0)\n> GET /ip-addresses HTTP/1.1\n> Host: localhost:8082\n> User-Agent: curl/7.79.1\n> Accept: */*\n> Content-Type: application/json\n> \n* Mark bundle as not supporting multiuse\n< HTTP/1.1 200 OK\n< Date: Mon, 24 Jan 2022 11:17:05 GMT\n< Content-Type: application/json\n< Access-Control-Allow-Origin: *\n< X-Powered-By: SentryPeer\n< X-SentryPeer-Version: 1.0.0\n< Content-Length: 50175\n< \n{\n  \"ip_addresses_total\": 396,\n  \"ip_addresses\": [\n    {\n      \"ip_address\": \"193.107.216.27\",\n      \"seen_last\": \"2022-01-11 13:30:48.703603359\",\n      \"seen_count\":\t\"1263\"\n    },\n    {\n      \"ip_address\": \"193.46.255.152\"\n      \"seen_last\": \"2022-01-11 13:28:27.348926406\",\n      \"seen_count\": \"3220\"      \n    }\n    ...\n  ]\n}\n```\n\n#### Endpoint /ip-address/{ip-address}\n\nQuery a single IP address:\n\n```bash\ncurl -v -H \"Content-Type: application/json\" http://localhost:8082/ip-address/8.8.8.8\n\n* Connected to localhost (127.0.0.1) port 8082 (#0)\n> GET /ip-addresses/8.8.8.8 HTTP/1.1\n> Host: localhost:8082\n> User-Agent: curl/7.79.1\n> Accept: */*\n> Content-Type: application/json\n> \n* Mark bundle as not supporting multiuse\n< HTTP/1.1 404 Not Found\n< Date: Mon, 24 Jan 2022 11:17:57 GMT\n< Content-Type: application/json\n< Access-Control-Allow-Origin: *\n< X-Powered-By: SentryPeer\n< X-SentryPeer-Version: 1.0.0\n< Content-Length: 33\n< \n* Connection #0 to host localhost left intact\n{\n  \"message\": \"No bad actor found\"\n}\n```\n\n#### Endpoint /numbers/{phone-number}\n\nQuery a phone number a bad actor tried to call with optional `+` prefix:\n\n```bash\ncurl -v -H \"Content-Type: application/json\" http://localhost:8082/numbers/8784946812410967\n\n* Connected to localhost (127.0.0.1) port 8082 (#0)\n> GET /numbers/8784946812410967 HTTP/1.1\n> Host: localhost:8082\n> User-Agent: curl/7.79.1\n> Accept: */*\n> Content-Type: application/json\n> \n* Mark bundle as not supporting multiuse\n< HTTP/1.1 200 OK\n< Date: Mon, 24 Jan 2022 11:19:53 GMT\n< Content-Type: application/json\n< Access-Control-Allow-Origin: *\n< X-Powered-By: SentryPeer\n< X-SentryPeer-Version: 1.0.0\n< Content-Length: 46\n< \n{\n  \"phone_number_found\": \"8784946812410967\"\n}\n```\n\n### Syslog and Fail2ban\n\nWith `sentrypeer -s`, you parse syslog and use Fail2Ban to block the IP address of the bad actor:\n\n```syslog\nNov 30 21:32:16 localhost.localdomain sentrypeer[303741]: Source IP: 144.21.55.36, Method: OPTIONS, Agent: sipsak 0.9.7\n```\n\n### JSON Log Format \n\nWith `sentrypeer -j`, you can produce a JSON log file of the bad actor's IP address and the phone number they tried to call \nplus other metadata (set a custom log file location with `-l`):\n\n```json\n{\n   \"app_name\":\"sentrypeer\",\n   \"app_version\":\"v1.4.0\",\n   \"event_timestamp\":\"2022-02-22 11:19:15.848934346\",\n   \"event_uuid\":\"4503cc92-26cb-4b3e-bb33-69a83fa09321\",\n   \"created_by_node_id\":\"4503cc92-26cb-4b3e-bb33-69a83fa09321\",\n   \"collected_method\":\"responsive\",\n   \"transport_type\":\"UDP\",\n   \"source_ip\":\"45.134.144.128\",\n   \"destination_ip\":\"XX.XX.XX.XX\",\n   \"called_number\":\"0046812118532\",\n   \"sip_method\":\"OPTIONS\",\n   \"sip_user_agent\":\"friendly-scanner\",\n   \"sip_message\":\"full SIP message\"\n}\n```\n\n### Command Line Options\n\n```bash\n./sentrypeer -h\nUsage: sentrypeer [-h] [-V] [-w] [-j] [-p] [-b bootstrap.example.com] [-f fullpath for sentrypeer.db] [-l fullpath for sentrypeer_json.log] [-r] [-R] [-a] [-s] [-v] [-d]\n\nOptions:\n  -h,      Print this help\n  -V,      Print version\n  -f,      Set 'sentrypeer.db' location or use SENTRYPEER_DB_FILE env\n  -j,      Enable json logging or use SENTRYPEER_JSON_LOG env\n  -p,      Enable Peer to Peer mode or use SENTRYPEER_PEER_TO_PEER env\n  -b,      Set Peer to Peer bootstrap node or use SENTRYPEER_BOOTSTRAP_NODE env\n  -a,      Enable RESTful API mode or use SENTRYPEER_API env\n  -w,      Enable Web GUI mode or use SENTRYPEER_WEB_GUI env\n  -r,      Enable SIP responsive mode or use SENTRYPEER_SIP_RESPONSIVE env\n  -R,      Disable SIP mode completely or use SENTRYPEER_SIP_DISABLE env\n  -l,      Set 'sentrypeer_json.log' location or use SENTRYPEER_JSON_LOG_FILE env\n  -s,      Enable syslog logging or use SENTRYPEER_SYSLOG env\n  -v,      Enable verbose logging or use SENTRYPEER_VERBOSE env\n  -d,      Enable debug mode or use SENTRYPEER_DEBUG env\n\nReport bugs to https://github.com/SentryPeer/SentryPeer/issues\n\nSee https://sentrypeer.org for more information.\n```\n\n### IPv6 Multicast Address\n\nThe project has an IANA IPv6 multicast address for the purpose of sending messages between SentryPeer peers.\n\n    Addresses: FF0X:0:0:0:0:0:0:172\n    Description: SentryPeer\n    Contact: Gavin Henry <ghenry at sentrypeer.org>\n    Registration Date: 2022-01-26\n\nPlease see http://www.iana.org/assignments/ipv6-multicast-addresses\n\nThe assigned variable-scope address -- which can also be listed as \"FF0X::172\" for short -- the \"X\" denotes any possible scope.\n\n### License\n \nGreat reading - [How to choose a license for your own work](https://www.gnu.org/licenses/license-recommendations.en.html)\n\nThis work is dual-licensed under GPL 2.0 and GPL 3.0.\n\n`SPDX-License-Identifier: GPL-2.0-only OR GPL-3.0-only`\n\n### Contributing\n\nSee [CONTRIBUTING](./CONTRIBUTING.md)\n\n### Project Website\n\nhttps://sentrypeer.org\n\n### Trademark\n\n[**SENTRYPEER** is a registered trademark](https://trademarks.ipo.gov.uk/ipo-tmcase/page/Results/1/UK00003700947) of Gavin Henry\n\n### Questions, Bug reports, Feature Requests\n\nNew issues can be raised at:\n\nhttps://github.com/SentryPeer/SentryPeer/issues\n\nIt's okay to raise an issue to ask a question.\n\n### Special Thanks\n\nSpecial thanks to:\n\n  - [David Miller](http://davidmiller.io/) for the design of the SentryPeer [Web GUI theme](./web-gui-theme) and [logo](./web-gui-theme/src/assets/logo.svg). Very kind of you!\n  - [@garymiller](https://github.com/garyemiller) for the feature request of syslog and Fail2ban as per [ Fail2ban Integration via syslog #6](https://github.com/SentryPeer/SentryPeer/issues/6) \n  - [@joejag](https://github.com/joejag) for the [Pull Request](https://github.com/SentryPeer/SentryPeer/pull/19) for the start of [Terraform recipes to launch SentryPeer on different cloud providers #12](https://github.com/SentryPeer/SentryPeer/issues/12)\n\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}