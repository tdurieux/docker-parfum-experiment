{
  "user": "tsuru",
  "name": "bs",
  "namespace": "tsuru",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Big siblings watch their siblings and report to the big tsuru parent.",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 3,
  "pull_count": 5108554,
  "last_updated": "2021-02-03T19:03:31.1461Z",
  "date_registered": "2015-08-05T19:16:37.554145Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "tsuru",
  "has_starred": false,
  "full_description": "# bs\n\n[![Build Status](https://drone.io/github.com/tsuru/bs/status.png?branch=master)](https://drone.io/github.com/tsuru/bs/latest)\n[![Build Status](https://travis-ci.org/tsuru/bs.png?branch=master)](https://travis-ci.org/tsuru/bs)\n\nbs (or big sibling) is a tsuru component, responsible for reporting\ninformation on application containers, this information include application\nlogs, metrics and unit status.\n\nbs runs inside a dedicated container on each Docker node and collects\ninformation about all its sibling containers running on the same Docker node.\n\nIt also creates a syslog server, which is responsible for receiving all logs\nfrom sibling containers. bs will then send these log entries to tsuru API and is\nalso capable of forwarding log entries to multiple remote syslog endpoints.\n\nThe sections below describe in details all the features of bs. The\n[configuration](https://github.com/tsuru/tsuru/blob/master/docs/reference/config.rst#dockerbsimage)\nreference contains more information on settings that control the way bs behaves.\n\n## Status Reporting\n\nbs communicates with the Docker API to collect information about containers,\nand report them to the tsuru API. The bs \"component\" responsible for that is\nthe status reporter (or simply reporter).\n\nThe status reporter can connect to the Docker API through TCP or Unix Socket.\nIt's recommended to use Unix socket, so application containers can't talk to\nthe Docker API. In order to do that, the `docker:bs:socket` configuration\nentry must be defined to the path of Docker socket in the Docker node. If this\nsetting is not defined, bs will use the TCP endpoint.\n\nAfter collecting the data in the Docker API, the reporter will send it to the\ntsuru API, and may take a last action before exiting: it can detect and kill\nzombie containers, i.e. application containers that are running, but are not\nknown by tsuru. It doesn't mess with any container not managed by tsuru.\n\n## Logging\n\nbs is also a syslog server, that listens to logs from containers and multiplexes\nthem among other syslog servers and the tsuru API.\n\nWhenever starting an application container, tsuru will configure Docker to send\nthe logs of the containers to bs using the\n[syslog logging driver](https://docs.docker.com/reference/run/#logging-driver-syslog),\nhaving bs as the destination daemon.\n\nWhen receiving the logs, bs will forward them to the tsuru API, so users can\ncheck their logs using the command ``tsuru app-log``. It can also forward the\nlogs to other syslog servers, using the ``docker:bs:syslog-forward-addresses``\nconfig entry. For more detail, check the\n[bs configuration reference](https://github.com/tsuru/tsuru/blob/master/docs/reference/config.rst#dockerbsimage).\n\n## Metrics\n\nbs also collect metrics from containers and send them to a metric database backend.\nSupported backends are `statsd` and `logstash`.\n\nThe collected metrics are:\n\n* cpu_max\n* mem_max\n* mem_pct_max\n\nThe metric backend is configured by setting some enviroment variables in the *bs* container.\nFor more details check the [bs enviroment variables](https://github.com/tsuru/bs#environment-variables). \n\n## Environment Variables\n\nIt's possible to set environment variables in started bs containers. This can be\ndone using the `tsuru-admin bs-env-set` command.\n\nSome variables can be used to configure how the default bs application will\nbehave. A custom bs image can also make use of set variables to change their\nbehavior.\n\n### STATUS_INTERVAL\n\n`STATUS_INTERVAL` is the interval in seconds between status collecting and\nreporting from bs to the tsuru API. The default value is 60 seconds.\n\n### SYSLOG_FORWARD_ADDRESSES\n\n`SYSLOG_FORWARD_ADDRESSES` is a comma separated list of SysLog endpoints to\nwhich bs will forward the logs from Docker containers. Log entries will be\nrewritten to properly identify the application and process responsible for the\nentry. The default value is an empty string, which means that bs will not\nforward logs to any syslog server, only to tsuru API.\n\n### SYSLOG_TIMEZONE\n\n`SYSLOG_TIMEZONE` which timezone to use when forwarding log to SysLog servers.\nThe timezone format must be a location existing in the [IANA Time Zone\ndatabase](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n\n### METRICS_INTERVAL\n\n`METRICS_INTERVAL` is the interval in seconds between metrics collecting and\nreporting from bs to the metric backend. The default value is 60 seconds.\n\n### METRICS_BACKEND\n\n`METRICS_BACKEND` is the metric backend. Supported backends are `logstash` and `statsd`.\n\n### METRICS_LOGSTASH_CLIENT\n\n`METRICS_LOGSTASH_CLIENT` is the client name used to identify who is sending the metric.\nThe default value is `tsuru`.\n\n### METRICS_LOGSTASH_PORT\n\n`METRICS_LOGSTASH_PORT` is the `Logstash` port. The default value is `1984`.\n\n### METRICS_LOGSTASH_HOST\n\n`METRICS_LOGSTASH_HOST` is the `Logstash` host. The default value is `localhost`.\n\n### METRICS_ELASTICSEARCH_HOST\n\n`METRICS_ELASTICSEARCH_HOST` is the `Elastisearch` host. This environ is used by\n[tsuru-dashboard](https://github.com/tsuru/tsuru-dashboard) to show graphics with the metrics data.\n\n### METRICS_STATSD_PREFIX\n\n`METRICS_STATSD_PREFIX` is the prefix for the `Statsd` key. The key is composed by\n`{prefix}tsuru.{appname}.{hostname}`. The default value is an empty string `\"\"`.\n\n### METRICS_STATSD_PORT\n\n`METRICS_STATSD_PORT` is the `Statsd` port. The default value is `8125`.\n\n### METRICS_STATSD_HOST\n\n`METRICS_STATSD_HOST` is the `Statsd` host. The default value is `localhost`.\n\n### BS_DEBUG\n\n`BS_DEBUG` is a boolean value used to determine whether debug logs will be\nprinted. The default value is `false`.",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json",
    "application/vnd.docker.distribution.manifest.v1+prettyjws"
  ],
  "content_types": [
    "image"
  ]
}