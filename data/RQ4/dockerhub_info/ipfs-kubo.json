{
  "user": "ipfs",
  "name": "kubo",
  "namespace": "ipfs",
  "repository_type": null,
  "status": 1,
  "status_description": "active",
  "description": "Go implementation of IPFS, the InterPlanetary FileSystem",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 8,
  "pull_count": 399517,
  "last_updated": "2023-01-05T13:24:46.877175Z",
  "date_registered": "2022-07-06T17:41:27.898834Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "ipfs",
  "has_starred": false,
  "full_description": "# kubo\n\n![kubo, an IPFS node in Go](https://ipfs.io/ipfs/bafykbzacecaesuqmivkauix25v6i6xxxsvsrtxknhgb5zak3xxsg2nb4dhs2u/ipfs.go.png)\n\n[![](https://img.shields.io/badge/made%20by-Protocol%20Labs-blue.svg?style=flat-square&cacheSeconds=3600)](https://protocol.ai)\n[![GoDoc](https://img.shields.io/badge/godoc-reference-5272B4.svg?style=flat-square&cacheSeconds=3600)](https://godoc.org/github.com/ipfs/kubo)\n[![CircleCI](https://img.shields.io/circleci/build/github/ipfs/kubo?style=flat-square&cacheSeconds=3600)](https://circleci.com/gh/ipfs/kubo)\n\n## What is Kubo?\n\nKubo (go-ipfs) the earliest and most widely used implementation of IPFS.\n\nIt includes:\n- an IPFS daemon server\n- extensive [command line tooling](https://docs.ipfs.tech/reference/kubo/cli/)\n- an [HTTP Gateway](https://docs.ipfs.tech/reference/http/gateway/) (`/ipfs/`, `/ipns/`) for serving content to HTTP browsers\n- an [HTTP RPC API](https://docs.ipfs.tech/reference/kubo/rpc/) (`/api/v0`) for controlling the daemon node\n\n## Documentation\n\n- [README](https://github.com/ipfs/kubo#readme)\n- [Run IPFS inside Docker](https://docs.ipfs.tech/how-to/run-ipfs-inside-docker/)\n  - [Set up](https://docs.ipfs.tech/how-to/run-ipfs-inside-docker/#set-up) \n  - [Customizing your node by mounting scripts in the `/container-init.d` directory in the container](https://docs.ipfs.tech/how-to/run-ipfs-inside-docker/#customizing-your-node)",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.list.v2+json"
  ],
  "content_types": [
    "image"
  ]
}