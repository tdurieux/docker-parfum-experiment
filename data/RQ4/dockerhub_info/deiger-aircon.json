{
  "user": "deiger",
  "name": "aircon",
  "namespace": "deiger",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Server to control HiSense Air Conditioners",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 30547,
  "last_updated": "2022-01-31T19:43:27.528536Z",
  "date_registered": "2021-01-08T13:32:16.902821Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "deiger",
  "has_starred": false,
  "full_description": "# HiSense Air Conditioners\n\nThis program implements the Ayla Networks LAN API to interact with HiSense WiFi Air Conditioner module, models AEH-W4B1 and AEH-W4E1, as well as Fujitsu FGLair.\n\nAs discussed [here](../../issues/1), the program doesn't seem to fit the AEH-W4A1 module, which relies on entirely different protocol (implemented by the apps [Hi-Smart Life](https://play.google.com/store/apps/details?id=com.qd.android.livehome), [AirConnect](https://play.google.com/store/apps/details?id=com.oem.android.airconnect), [Smart Cool](https://play.google.com/store/apps/details?id=com.oem.android.livehome), [AC WIFI](https://play.google.com/store/apps/details?id=com.oem.android.ecold) and [טורנדו WiFi](https://play.google.com/store/apps/details?id=com.oem.android.tornadowifi)). Please let me know if you have a different experience, or tried it with other modules.\n\nThe module is installed in A/Cs and humidifiers that are either manufactured or only branded by many other companies. These include Beko, Westinghouse, Winia, Tornado, York and more.\n\n**This program is not affiliated with Ayla Networks, HiSense, Fujitsu, any of their subsidiaries, or any of their resellers.**\n\n## Prerequisites\n\n1. Air Conditioner with HiSense AEH-W4B1 or AEH-W4E1 installed, or a Fujitsu FGLair.\n1. Have Python 3.7 or above installed. If using Raspberry Pi, either upgrade to Raspbian Buster, or manually install it in Raspbian Stretch.\n1. Configure the A/Cs with the dedicated app. Links to each app are available in the table below. Log into the app, associate each A/C and connect it to the network, as described in the app documentation.\n1. Once everything has been configured, the A/Cs can be blocked from connecting to the internet, as it will no longer be needed. Set them static IP addresses in the router, and write them down.\n   * Note: _To avoid the need for manual changes later, make sure the app is aware of the new IP addresses before disconnecting the A/Cs from the internet._\n1. Find the code for your app, from the list below:\n\n   | Code       | App Name            | App link\n   |------------|---------------------|---------|\n   | beko-eu    | Beko?               | |\n   | haxxair    | HAXXAIR WIFI REMOTE | [![](https://lh3.googleusercontent.com/-9FX7-sYlE2xDwG9uymjPejV-P8nI_hQ9zN7QDu6OgyYILbjdg5o38nQTvAmFTPyiw=s50-rw)](https://play.google.com/store/apps/details?id=com.aylanetworks.accontrol.haxxair) |\n   | denali-us  | Denali Aire         | [![](https://lh3.googleusercontent.com/8NYl3eNN7M_cXmvo4ywj9al5794Ci_dzGYxYZopHd96Z4yr1M12e8xzk9mkz5cMELQ=s50-rw)](https://play.google.com/store/apps/details?id=com.smart.internationalus.denaliaire) |\n   | fglair-eu  | FGLair              | [![](https://lh3.googleusercontent.com/LcrpWfFdRi3GriCV3MqPhkKsxV-IkwFHxZHHDugC__iaO1HE-7UyKuQj-bEWyggo8DFP=s50-rw)](https://play.google.com/store/apps/details?id=com.fujitsu.fglair) |\n   | field-us   | HiSmart Air         | [![](https://lh3.googleusercontent.com/9p4SUOklfccVzJdrbhHZW8MlmioF-YgfLWOQBtad2N_A5AWtcyNv7X-M3QT1e2Fdam00=s50-rw)](https://play.google.com/store/apps/details?id=com.aylanetworks.accontrol.hisense) |\n   | hisense-eu | HiSmart Life        | [![](https://lh3.googleusercontent.com/AbCPfEScNDwgsKozku6jmItFPVq9WJCl30jZKlSDFDAtlAiC3WRZZ4MlWEEWR8ZxKA=s50-rw)](https://play.google.com/store/apps/details?id=com.hisense.hismartinternationalforandroid) |\n   | hisense-us | HiSmart Home        | [![](https://lh3.googleusercontent.com/Qs9UJVhczWYk-ij7UiRWoCDi2pYIoOUYuU5pBwOKQSD_07KHyAnLGg-myF7U9a387w=s50-rw)](https://play.google.com/store/apps/details?id=com.hisense.hismartinternationalus) |\n   | hismart-eu | Smart-Living        | [![](https://lh3.googleusercontent.com/k9p0RMiW_xax5FIU5tpwSZav1In7tu6szGQopRWhSyRd2dIr0_L0IWHPVLSHxbrWrA=s50-rw)](https://play.google.com/store/apps/details?id=com.smart.international2) |\n   | hismart-us | AI-Home             | [![](https://lh3.googleusercontent.com/eUJicIOk50rP391IFs0Xw6306adghQuiQtaLgUkxImuP6bAdHvQjS1gbIKY75Bd2mkA=s50-rw)](https://play.google.com/store/apps/details?id=com.smart.internationalus) |\n   | huihe-us   | SunHome             | [![](https://lh3.googleusercontent.com/3tI6Nbx4ZlphD_b5O7bW3XcMEKnFkViOKMS9-cL9K9OQVyGJRjRmKu67JU8_t_w93iZs=s50-rw)](https://play.google.com/store/apps/details?id=com.sunvalley.sunhome) |\n   | mid-eu     | WiFi AC             | [![](https://lh3.googleusercontent.com/LWmnlcSnT2hYmdwB2vq5SoBuaawkS8eu0F6n9Tytowrftp7kflmUXRAt_uWg7C0Fgspn=s50-rw)](https://play.google.com/store/apps/details?id=com.accontrol.mid.europe.hisense) |\n   | mid-us     | Smiling Air         | [![](https://lh3.googleusercontent.com/op7-cqkm6N3JinyViCONKKgIVeMWI4BGO4TP3atRheGKG_vzsufh1PmEa-v9b8OAEPI=s50-rw)](https://play.google.com/store/apps/details?id=com.accontrol.mid.america.hisense) |\n   | oem-eu     | Hi-Smart AC         | [![](https://lh3.googleusercontent.com/-HdiS1L18OjviXxGY68fvuBO3I4J1XGEEPOIc0f8p268f0ZJYkADHVvOgzH2wttsBwnk=s50-rw)](https://play.google.com/store/apps/details?id=com.accontrol.europe.hisense) |\n   | oem-us     | Hisense?            | |\n   | tornado-us | &#x2067;טורנדו WIFI גרסה 2&#x2069; | [![](https://lh3.googleusercontent.com/M9kU7oYeZTU8hVLChdJQL4giJacgUT2yFw-pqNk8JR4kbqbvl9x8dT88BC0admZrrQ=s50-rw)](https://play.google.com/store/apps/details?id=com.accontrol.tornado.america.hisense) |\n   | winia-us   | 위니아 에어컨 홈스마트        | [![](https://lh3.googleusercontent.com/IGIkHlnLbFxTFGOk_aql3sVGgL9DLOtc3Ti_oDhQLUT8_-8PGmXjVBcQnmgqWxitB_U=s50-rw)](https://play.google.com/store/apps/details?id=com.accontrol.winia.america.hisense) |\n   | wwh-us     | Westinghouse?       | |\n   | york-us    | YORK Smart          | [![](https://lh3.googleusercontent.com/udf-qe7lXPJ5d7pi96WC8ex20-DuzAvAfyYX1i9B0zyvKjj0TLqoWwZmju-M5y0dQwE=s50-rw)](https://play.google.com/store/apps/details?id=com.accontrol.york.america.hisense) |\n\n## Run the A/C control server as a HomeAssistant add-on.\n\nIf using [HomeAssistant], this is the preferred method.\n\n1. In the HomeAssistant UI, enter **Supervisor → Add-on Store**.\n1. Click **⋮ menu → Repositories**.\n1. Add `https://github.com/deiger/AirCon` to the list.\n1. Choose **HiSense Air Conditioner** and install it.\n1. Update the configuration as detailed within the add-on.\n1. Start the add-on. Do not forget to enable **Start on boot** and **Watchdog**.\n\n## Run the A/C control server in docker\n\nUse this method if not using HomeAssistant, or if you prefer to set it up outside of HomeAssistant.\n\n1. Download the [`docker-compose.yaml`](docker-compose.yaml) and [`options.json`](options.json). Update all the relevant fields in `options.json`:\n   - For every app (multiple apps are supported), set `username` and `password` to your app login credentials, and `code` to the app code from the list above.\n     These will be used to discover you A/Cs and get their LAN keys, if there are no config files in the config directory (`/opt/hisense`).\n   - Set `mqtt_host` to the [MQTT] broker server, use `localhost` if running on the same host.\n     Leave blank if not using [MQTT].\n   - Set `mqtt_user` and `mqtt_pass` to the MQTT credentials. Leave null (or drop) if no authentication is used.\n   - Set `port` to the port to be used by the web server.\n   - Set `log_level` to your desired verbosity level.\n\n1. Run:\n   ```bash\n   docker-compose up -d\n   ```\n1. Check the logs and verify that everything is in shape:\n   ```bash\n   journalctl CONTAINER_NAME=hisense_ac\n   ```\n\n1. Profit!  \n   The A/Cs should now be auto-discovered by [HomeAssistant] or [openHAB]\n   (using the [HomeAssistant MQTT Components Binding](https://www.openhab.org/addons/bindings/mqtt.homeassistant/)).\n   [SmartThings] requires manual setup, using the [groovy file](devicetypes/deiger/hisense-air-conditioner.src/hisense-air-conditioner.groovy), see below.\n\n## Run the A/C control server manually\n\nUse this method if the docker setup above does not work for you.\n\n1. Download and install aircon module:\n   ```bash\n   python3.7 setup.py install\n   ```\n\n1. Run discovery command to fetch the LAN keys that will allow connecting to the A/C. Pass it your login credentials, as well as the code for your app from the list below:\n\n   For example:\n   ```bash\n   python3.7 -m aircon discovery tornado-us foo@example.com my_pass\n   ```\n   The CLI will generate a config file for each A/C, that needs to be passed to the A/C\n   control server below. You can select the A/C that the config is generated for by\n   setting the `--device` flag to the device name you configured in the app.\n\n* Note: _To update the server from head, run `git pull` on the repository and\n  run setup. You may also need to re-run discovery._\n\n1. Test out that you can run the server, e.g.:\n   ```bash\n   python3.7 -m aircon run --port 8888 --config config.json --mqtt_host localhost\n   ```\n   Parameters:\n   - `--port` or `-p` - Port for the web server.\n   - `--config` - The config file with the credentials to connect to the A/C.\n   - `--mqtt_host` - The MQTT broker hostname or IP address. Must be set to enable MQTT.\n   - `--mqtt_port` - The MQTT broker port. Default is 1883.\n   - `--mqtt_client_id` - The MQTT client ID. If not set, a random client ID will be generated.\n   - `--mqtt_user` - &lt;user:password&gt; for the MQTT channel. If not set, no authentication is used.\n   - `--mqtt_topic` - The MQTT root topic. Default is &quot;hisense_ac&quot;. The server will listen on topics\n     &lt;{mqtt_topic}/{property_name}/command&gt; and publish to &lt;{mqtt_topic}/{property_name}/status&gt;.\n   - `--log_level` - The minimal log level to send to syslog. Default is WARNING.\n1. Access e.g. using curl:\n   ```bash\n   curl -ik 'http://localhost:8888/hisense/status'\n   curl -ik 'http://localhost:8888/hisense/command?property=t_power&value=ON'\n   ```\n\n### Multiple Air Conditioners\nIn order to use with multiple Air Conditioners, simply add multiple --config params.\nMQTT topic will contain your topic defined by flag --mqtt_topic (hisense_ac by default) and device MAC address (for uniqueness).\n\n### Run as a service\nAssuming your username is \"pi\"\n\n1. Create a dedicated directory for the script files, and move the files to it.\n   Pass the ownership to root. e.g.:\n   ```bash\n   sudo mkdir /opt/hisense\n   sudo mv config*.json /opt/hisense\n   sudo chown pi:pi /opt/hisense/*\n   ```\n1. Create a service configuration file (as root), e.g. `/lib/systemd/system/hisense.service`:\n   ```INI\n   [Unit]\n   Description=Hisense A/C server\n   After=network.target\n\n   [Service]\n   ExecStart=/usr/bin/python3.7 -m aircon run --port 8888 --config config.json --mqtt_host localhost\n   WorkingDirectory=/opt/hisense\n   StandardOutput=inherit\n   StandardError=inherit\n   Restart=always\n   User=pi\n\n   [Install]\n   WantedBy=multi-user.target\n   ```\n1. Link to it from `/etc/systemd/system/`:\n   ```bash\n   sudo ln -s /lib/systemd/system/hisense.service /etc/systemd/system/multi-user.target.wants/hisense.service\n   ```\n1. Enable and start the new service:\n   ```bash\n   sudo systemctl enable hisense.service\n   sudo systemctl start hisense.service\n   ```\n1. If you use [MQTT](http://en.wikipedia.org/wiki/Mqtt) for [HomeAssistant] or\n   [openHAB](https://www.openhab.org/), the broker should now provide the updated status of the A/C, and accepts commands.\n\n## Available Properties\n\nListed here are the properties available through the API for standard A/Cs\n(FGLair and humidifers have different properties):\n\n| Property         | Read Only | Values                                 | Comment                                                                  |\n|------------------|-----------|----------------------------------------|--------------------------------------------------------------------------|\n| f_electricity    | x         | Integer                                |                                                                          |\n| f_e_arkgrille    | x         | 0, 1                                   | Alarm from cabinet grille protection                                     |\n| f_e_incoiltemp   | x         | 0, 1                                   | Indoor coil temperature sensor in fault                                  |\n| f_e_incom        | x         | 0, 1                                   | Indoor and outdoor communication in fault                                |\n| f_e_indisplay    | x         | 0, 1                                   | Communication faulty between indoor control panel and display panel      |\n| f_e_ineeprom     | x         | 0, 1                                   | Error in EEPROM of indoor control panel                                  |\n| f_e_inele        | x         | 0, 1                                   | Communication faulty between indoor control panel and indoor power panel |\n| f_e_infanmotor   | x         | 0, 1                                   | Indoor fan motor operation abnormal                                      |\n| f_e_inhumidity   | x         | 0, 1                                   | Indoor humidity sensor in fault                                          |\n| f_e_inkeys       | x         | 0, 1                                   | Communication faulty between indoor control panel and keyboard plate     |\n| f_e_inlow        | x         | 0, 1                                   |                                                                          |\n| f_e_intemp       | x         | 0, 1                                   | Indoor temperature sensor in fault                                       |\n| f_e_invzero      | x         | 0, 1                                   | Fault found from indoor voltage crossing zero detection                  |\n| f_e_outcoiltemp  | x         | 0, 1                                   | The temperature sensor in outdoor coil faulty                            |\n| f_e_outeeprom    | x         | 0, 1                                   | Outdoor EEPROM error                                                     |\n| f_e_outgastemp   | x         | 0, 1                                   | Exhaust temperature sensor faulty                                        |\n| f_e_outmachine2  | x         | 0, 1                                   |                                                                          |\n| f_e_outmachine   | x         | 0, 1                                   |                                                                          |\n| f_e_outtemp      | x         | 0, 1                                   | Outdoor ambient temperature sensor faulty                                |\n| f_e_outtemplow   | x         | 0, 1                                   |                                                                          |\n| f_e_push         | x         | 0, 1                                   | Communication faulty between WiFi control panel and indoor control panel |\n| f_filterclean    | x         | 0, 1                                   | Does the filter require cleaning                                         |\n| f_humidity       | x         | Integer                                | Relative humidity percent                                                |\n| f_power_display  | x         | 0, 1                                   |                                                                          |\n| f_temp_in        | x         | Decimal                                | Environment temperature in Fahrenheit                                    |\n| f_voltage        | x         | Integer                                |                                                                          |\n| t_backlight      |           | ON, OFF                                | Turn the display on/off                                                  |\n| t_device_info    |           | 0, 1                                   |                                                                          |\n| t_display_power  |           | 0, 1                                   |                                                                          |\n| t_eco            |           | OFF, ON                                | Economy mode                                                             |\n| t_fan_leftright  |           | OFF, ON                                | Horizontal air flow                                                      |\n| t_fan_mute       |           | OFF, ON                                | Quite mode                                                               |\n| t_fan_power      |           | OFF, ON                                | Vertical air flow                                                        |\n| t_fan_speed      |           | AUTO, LOWER, LOW, MEDIUM, HIGH, HIGHER | Fan Speed                                                                |\n| t_ftkt_start     |           | Integer                                |                                                                          |\n| t_power          |           | OFF, ON                                | Power                                                                    |\n| t_run_mode       |           | OFF, ON                                | Double frequency                                                         |\n| t_setmulti_value |           | Integer                                |                                                                          |\n| t_sleep          |           | STOP, ONE, TWO, THREE, FOUR            | Sleep mode                                                               |\n| t_temp           |           | Integer                                | Temperature in Fahrenheit                                                |\n| t_temptype       |           | CELSIUS, FAHRENHEIT                    | Displayed temperature unit                                               |\n| t_temp_eight     |           | OFF, ON                                | Eight heat mode                                                          |\n| t_temp_heatcold  |           | OFF, ON                                | Fast cool heat                                                           |\n| t_work_mode      |           | FAN, HEAT, COOL, DRY, AUTO             | Work mode                                                                |\n\n## SmartThings and HomeAssistant support\nYou will need a groovy script to enable SmartThings integration with the Air Conditioner, through the control server above.\nIt currently implements the main functionality (turn on/off, AC mode, fan speed, dimmer etc.).\n\nThe groovy file is available [here](devicetypes/deiger/hisense-air-conditioner.src/hisense-air-conditioner.groovy), for download and installation through the [Groovy IDE](https://graph.api.smartthings.com). As I'm continuously improving this script, it would be more efficient to use the IDE's github integration, in order to stay up-to-date.\n\nHomeAsststant is now fully supported through [MQTT Discovery]. Properly configured devices are auto-configured and populated in the Lovelace dashboard.\n\n## Code Contributions\nPull requests are always welcome.\n\nPlease use [YAPF] with the style config defined here to style your code.\nSingle quotes are used throughout the code-base. Unfortunately YAPF still doesn't support mandating this (support exists in the [fixers branch](https://github.com/google/yapf/tree/fixers)), so please be mindful.\n\n[HomeAssistant]: https://www.home-assistant.io/\n[MQTT Discovery]: https://www.home-assistant.io/docs/mqtt/discovery/\n[openHAB]: https://www.openhab.org/\n[SmartThings]: https://www.smartthings.com/\n[MQTT]: http://en.wikipedia.org/wiki/Mqtt\n[YAPF]: https://github.com/google/yapf\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.list.v2+json",
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}