{
  "user": "nlnetlabs",
  "name": "routinator",
  "namespace": "nlnetlabs",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "RPKI relying party software.",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 7,
  "pull_count": 2154387,
  "last_updated": "2023-01-04T15:26:52.66686Z",
  "date_registered": "2018-11-22T09:16:50.02951Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "nlnetlabs",
  "has_starred": false,
  "full_description": "# Routinator\n\n<img align=\"right\" src=\"https://www.nlnetlabs.nl/static/logos/Routinator/Routinator_Avatar_Realistic.svg\" height=\"150\">\n\n[![CI](https://github.com/NLnetLabs/routinator/workflows/ci/badge.svg)](https://github.com/NLnetLabs/routinator/actions?query=workflow%3Aci)\n[![Packaging](https://github.com/NLnetLabs/routinator/actions/workflows/pkg.yml/badge.svg)](https://nlnetlabs.nl/packages/)\n[![Docker Pulls](https://img.shields.io/docker/pulls/nlnetlabs/routinator?color=brightgreen)](https://hub.docker.com/r/nlnetlabs/routinator)\n\n[![crates.io](https://img.shields.io/crates/v/routinator.svg?color=brightgreen)](https://crates.io/crates/routinator)\n[![Documentation Status](https://readthedocs.org/projects/routinator/badge/?version=stable)](https://routinator.docs.nlnetlabs.nl/en/stable/)\n[![Discord](https://img.shields.io/discord/818584154278199396?label=Discord&logo=discord)](https://discord.gg/8dvKB5Ykhy)\n[![Spotify](https://img.shields.io/badge/Spotify-∞-brightgreen.svg)](https://open.spotify.com/user/alex.band/playlist/1DkYwN4e4tq73LGAeUykA1?si=AXNn9GkpQ4a-q5skG1yiYQ)\n[![Twitter](https://img.shields.io/twitter/follow/routinator3000.svg?label=Follow&style=social)](https://twitter.com/routinator3000)\n\nRoutinator 3000 is free, open-source RPKI Relying Party software. The project\nis written in Rust, a programming language designed for performance and\nmemory safety.\n\n### Lightweight and portable\n\nRoutinator has minimal system requirements and it can run on almost any\nhardware and platform, with packages available for most. You can also easily\nrun with Docker or Cargo, the Rust package manager.\n\n### Full-featured and secure\n\nRoutinator runs as a service that periodically downloads and verifies RPKI\ndata. The built-in HTTPS server offers a user interface, API endpoints for\nvarious file formats, as well as logging, status and Prometheus metrics.\n\n### Flexible RPKI-to-Router (RTR) support\n\nRoutinator has a built-in RTR server to let routers fetch verified RPKI data.\nYou can also run RTR as a separate daemon using our RPKI data proxy\n[RTRTR](https://www.nlnetlabs.nl/projects/rpki/rtrtr/), letting you\ncentralise validation and securely distribute processed data to various\nlocations.\n\n### Open-source with professional support services\n\nNLnet Labs offers [professional support and consultancy\nservices](https://www.nlnetlabs.nl/services/contracts/) with a service-level\nagreement. Community support is available on\n[Discord](https://discord.gg/8dvKB5Ykhy),\n[Twitter](https://twitter.com/routinator3000/) and our [mailing\nlist](https://lists.nlnetlabs.nl/mailman/listinfo/rpki). Routinator is\nliberally licensed under the [BSD 3-Clause\nlicense](https://github.com/NLnetLabs/routinator/blob/main/LICENSE).\n\n## Launch Smoothly\n\nGetting started with Routinator is really easy by installing a binary package\nfor either Debian and Ubuntu or for Red Hat Enterprise Linux (RHEL) and\ncompatible systems such as Rocky Linux. Alternatively, you can run with\nDocker or build from the source code using Cargo, Rust’s build system and\npackage manager.\n\nPlease refer to the comprehensive\n[documentation](https://routinator.docs.nlnetlabs.nl/) to learn what works\nbest for you.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json",
    "application/vnd.docker.distribution.manifest.list.v2+json"
  ],
  "content_types": [
    "image"
  ]
}