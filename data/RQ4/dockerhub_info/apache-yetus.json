{
  "user": "apache",
  "name": "yetus",
  "namespace": "apache",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Convenience images for Apache Yetus : OS, plugin dependencies, and Apache Yetus binaries installed",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 3,
  "pull_count": 62396,
  "last_updated": "2022-11-24T03:26:20.133262Z",
  "date_registered": "2019-04-04T20:39:40.766813Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "apache",
  "has_starred": false,
  "full_description": "<!---\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n-->\n\n# Apache Yetus\n\nApache Yetus is a collection of libraries and tools that enable\ncontribution and release process for software projects.\n\n## Components\n\nHere is a list of the major components:\n\n* [Website source](asf-site-src/)\nHolds our documentation, which is presented via [our website](https://yetus.apache.org/).\n\n* [Precommit](precommit/)\nPrecommit provides robust tools to deal with contributions, including applying patches from a variety of project sources and evaluating them against project norms via a system of plugins. See the [precommit overview](asf-site-src/source/documentation/in-progress/precommit-architecture.html.md) to get started working with precommit.\n\n* [Audience Annotations](audience-annotations-component/)\nAudience Annotations allows projects to use Java Annotations to delineate public and non-public parts of their APIs. It also provides doclets to generate javadocs filtered by the intended audience. Currently builds with Maven 3.2.0+.\n\n* [Shelldocs](shelldocs/)\nShelldocs processes comments on Bash functions for annotations similar to Javadoc. It also includes built-in audience scoping functionality similar to the doclet from Audience Annotations.\n\n* [Release Doc Maker](releasedocmaker/)\nRelease Doc Maker analyzes Jira and Git information to produce Markdown formatted release notes.\n\n* [yetus-maven-plugin](yetus-maven-plugin/)\nBuilds a maven plugin that provides some small utilities for some uncommon maven requirements (such as symlinks) in addition to being mavenized versions of some of the Apache Yetus functionality.\n\n## Building Quickstart\n\nFor full instructions on how to build releases and the website, see the [guide to contributing](asf-site-src/source/contribute.html.md) for requirements and instructions.\n\n```bash\n# Launch a Docker container that has all of the project's dependencies\n# and a working build environment\n./start-build-env.sh\n\n# Build the binary tarball, located in yetus-dist/target/artifacts:\nmvn clean install\n\n# Build the binary and source tarballs and sign the content:\nmvn clean install -Papache-release\n\n# Same, but if outside the container and need to let the system know\n# that the OS uses 'gpg2' instead of 'gpg':\nmvn clean install -Papache-release -Pgpg2\n\n# Build the binary and source tarballs, but skip signing them:\nmvn clean install -Papache-release -Dgpg.sign=skip\n\n# Build the website (requires a mvn install first)\nmvn site site:stage\n```\n\nAfter executing one or more of the Apache Maven commands, artifacts will be in `yetus-dist/target/artifacts` or ready for a `mvn deploy`.\n\n## Container Quickstart\n\nThe project makes available two convenience container images on <https://hub.docker.com> for both tagged releases and for the main branch.  It is highly recommended that casual users use a tagged release so as to not be surprised by incompatible changes that are still rolling through the main branch.\n\n### apache/yetus-base\n\nThis image contains all of the tools that Apache Yetus supports. It is intended to be used when the Apache Yetus binaries are running outside of the container to speed up building the actual testing container.\n\n### apache/yetus\n\nThis image contains all of apache/yetus-base plus a built and installed version of Apache Yetus.  The binaries are in `/usr/bin` and therefore part of the default path.  This image is ideal for CI systems that take a container image as the operating environment or for interactive use.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}