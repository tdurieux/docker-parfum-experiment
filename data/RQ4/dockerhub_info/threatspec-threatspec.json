{
  "user": "threatspec",
  "name": "threatspec",
  "namespace": "threatspec",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 253,
  "last_updated": "2021-03-22T00:23:14.786365Z",
  "date_registered": "2020-12-29T22:40:36.436993Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "threatspec",
  "has_starred": false,
  "full_description": "# threatspec_docker \n\nThis is the official docker container for [threatspec](https://github.com/threatspec/threatspec).\n\n\n## Build\n\nThere are two ways to build this docker image:\n\n1. From Source\n2. From Pypi Images\n\n### Building from Source \n\n```bash\ndocker build --build-arg PIP=\"false\" --build-arg BRANCH=\"master\" -t threatspec .\n```\n\n- `PIP=\"false\"` will flag the Dockerfile to clone a repo. This value is `true` by default\n- `BRANCH=\"master\"` will fetch a specific branch after cloning the repo\n\n### Building from Pypi \n\n```bash\ndocker build -t threatspec .\n```\n\n## Usage\n\nThe easiest way to use this Docker container is to treat it as another function. Add the following alias to you `.bashrc` (or `.zshrc`, or whatever else environment you are running)\n\n### Linux/Mac (Bash/ZSH)\n\n```bash\nalias threatspec=\"docker run --rm -v $(pwd):/workingdir -w /workingdir threatspec/threatspec\"\n```\n\nYou can replace `threatspec/threatspec` with your own tag for local builds\n\n\n### Windows (TBD)",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}