{
  "user": "otiai10",
  "name": "gosseract",
  "namespace": "otiai10",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "A runtime for Golang OCR package",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 1318,
  "last_updated": "2022-12-23T04:19:53.386519Z",
  "date_registered": "2017-11-04T04:53:44.329719Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "otiai10",
  "has_starred": false,
  "full_description": "# gosseract OCR\n<!-- [![Build Status](https://travis-ci.org/otiai10/gosseract.svg?branch=master)](https://travis-ci.org/otiai10/gosseract) -->\n[![Runtime Test](https://github.com/otiai10/gosseract/workflows/Runtime%20Test/badge.svg)](https://github.com/otiai10/gosseract/actions?query=workflow%3A%22Runtime+Test%22)\n[![codecov](https://codecov.io/gh/otiai10/gosseract/branch/master/graph/badge.svg)](https://codecov.io/gh/otiai10/gosseract)\n[![Go Report Card](https://goreportcard.com/badge/github.com/otiai10/gosseract)](https://goreportcard.com/report/github.com/otiai10/gosseract)\n[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://github.com/otiai10/gosseract/blob/master/LICENSE)\n[![Go Reference](https://pkg.go.dev/badge/github.com/otiai10/gosseract/v2.svg)](https://pkg.go.dev/github.com/otiai10/gosseract/v2)\n\nGolang OCR package, by using Tesseract C++ library.\n\n# OCR Server\n\nDo you just want OCR server, or see the working example of this package? Yes, there is already-made server application, which is seriously easy to deploy!\n\nðŸ‘‰ https://github.com/otiai10/ocrserver\n\n# Example\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/otiai10/gosseract/v2\"\n)\n\nfunc main() {\n\tclient := gosseract.NewClient()\n\tdefer client.Close()\n\tclient.SetImage(\"path/to/image.png\")\n\ttext, _ := client.Text()\n\tfmt.Println(text)\n\t// Hello, World!\n}\n```\n\n# Install\n\n1. [tesseract-ocr](https://github.com/tesseract-ocr/tesseract/wiki), including library and headers\n2. `go get -t github.com/otiai10/gosseract`\n\nCheck [Dockerfile](https://github.com/otiai10/gosseract/blob/master/Dockerfile) for more detail of installation, or you can just try by `docker run -it --rm otiai10/gosseract`.\n\n# Test\n\nIn case you have [tesseract-ocr](https://github.com/tesseract-ocr/tesseract/wiki) on your local, you can just hit\n\n```\n% go test .\n```\n\nOtherwise, if you **DON'T** want to install tesseract-ocr on your local, kick `./test/runtime` which is using Docker and Vagrant to test the source code on some runtimes.\n\n```\n% ./test/runtime --driver docker\n% ./test/runtime --driver vagrant\n```\n\nCheck [./test/runtimes](https://github.com/otiai10/gosseract/tree/master/test/runtimes) for more information about runtime tests.\n\n# Issues\n\n- [https://github.com/otiai10/gosseract/issues](https://github.com/otiai10/gosseract/issues?utf8=%E2%9C%93&q=is%3Aissue)\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}