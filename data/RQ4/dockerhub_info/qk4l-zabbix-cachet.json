{
  "user": "qk4l",
  "name": "zabbix-cachet",
  "namespace": "qk4l",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Python script for Zabbix to Cachet integration",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 239364,
  "last_updated": "2021-07-06T18:50:47.361163Z",
  "date_registered": "2016-10-14T19:25:37.429419Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "qk4l",
  "has_starred": false,
  "full_description": "# Zabbix-Cachet\nThis is python script which provide synchronisation between [Zabbix IT Services](https://www.zabbix.com/documentation/3.0/manual/it_services)\nand [Cachet](https://cachethq.io/)\n\n# Description\n\nThe idea of Zabbix-Cachet is providing the easiest way to export Zabbix terms to Cachet.\nWith this script you can maintain Cachet though Zabbix.\n\nZabbix-Cachet reads pre-configured [Zabbix IT Services](https://www.zabbix.com/documentation/3.0/manual/it_services) and automatically creates Cachet components.\nAfter that Zabbix-Cachet periodically checks Zabbix triggers (that linked to you IT Services) and manipulate with Cachet incidents and Component statuses based on triggers.\n\nZabbix-Cachet communicate with Zabbix and Cachet via API interface.\nTo make it works you need a zabbix user with sufficient permissions to read triggers,\nitems of services that is exported to Cachet and Cachet`s API key.\n\n\n# Features\n* Automatically creates Cachet Components and Components group\n* Automatically creates Cachet Incidents and update them with [acknowledgement messages](https://www.zabbix.com/documentation/3.0/manual/acknowledges)\n* Allow to specify root IT service where Zabbix-Cachet will work\n\n# Example\n## Zabbix IT Services.\n* _Cachet_ - `root_service` for zabbix-cachet script.\n* _Bitbucket_, _Network Connectivity_ - parent services. They will be _Components Groups_ in Cachet.\n* _GIT https_, _GIT ssh_ - Components in Cachet. Do not forget to set Zabbix trigger to this group.\n\n![Zabbix IT Services](https://cloud.githubusercontent.com/assets/8394059/14297272/0b79bc1a-fb8f-11e5-820f-5460cc735cda.png)\n\n## Cachet\n![Cachet Components](https://cloud.githubusercontent.com/assets/8394059/14298058/c5c8b806-fb93-11e5-83f6-ff32aeb5fb4d.png)\n\n# Requirements\nHere are version that was successfully tested:\n* Cachet 2.2, 2.3, 2.4, 2.5\n* Zabbix 2.2, 2.4, 3.0, 3.2, 4.0, 4.2, 5.2\n* python 2.7+\n\n# Installation\n\n# Docker Installation\n1. Create `/etc/zabbix-cachet.yml` file based `config-example.yml`.\n2. Run Docker container\n    ```\n    docker run --name zabbix-cachet -v /etc/zabbix-cachet.yml:/config.yml qk4l/zabbix-cachet\n    ```\n3. Drink a cup of tea (optional)\n\n## Git\n1. Clone this repository\n2. Rename `config-example.yml` to `config.yml` and fill a file with your settings.\n3. Install python libs from `requirements.txt`\n4. Launch `zabbix-cachet.py`\n\n## Apt\n1. Add official Zabbix-Cachet [PPA](https://launchpad.net/~reg-tem4uk/+archive/ubuntu/zabbix-cachet):\n    ```bash\n    add-apt-repository ppa:reg-tem4uk/zabbix-cachet\n    apt-get update\n    ```\n2. Install the package: `apt-get install zabbix-cachet`\n3. Configure it: `nano /etc/zabbix-cachet.yml`\n4. Restart it: `systemctl enable zabbix-cachet && systemctl restart zabbix-cachet`\n\n# Configuration\n\nSettings are storing in `config.yml` file which should be placed in script's working directory.\nIf you want to use another path for `config.yml` use `CONFIG_FILE` environment variable.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}