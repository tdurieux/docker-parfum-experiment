{
  "user": "lieuwex",
  "name": "whapp-irc",
  "namespace": "lieuwex",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 1337,
  "last_updated": "2020-10-07T16:06:59.577263Z",
  "date_registered": "2018-05-03T16:22:56.469745Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "lieuwex",
  "has_starred": false,
  "full_description": "# Depreciation\nwhapp-irc is not supported anymore, and probably never will be anymore by me.\nFeel free to fork.\n\nhttps://git.theta.eu.org/eta/whatsxmpp or https://github.com/eeeeeta/sms-irc or https://github.com/tulir/mautrix-whatsapp/ are all alternatives.\n\n# whapp-irc\n_a simple whatsapp web <-> irc gateway_\n\n[take a look at the quick and cool setting up guide](https://github.com/lieuwex/whapp-irc/wiki/Setting-up)\n\n## information\n- private chats;\n- group chats, with op for admins;\n- kicking, inviting, and stuff;\n- LIST, WHO (with online/offline state);\n- joining chats;\n- converts names to irc safe names as much as possible;\n- receiving files, hosts it as using a HTTP file server;\n- receiving locations, will send a Google Maps link to the location;\n- receiving reply messages;\n- generating QR code;\n- saves login state to disk;\n- replay using `whapp-irc/replay` capability;\n- IRCv3 `server-time` support;\n- no configuration needed;\n- probably some stuff I forgot.\n\n## configuration\n### irc client\nTo use whapp-irc optimally you should set the following client capabilities:\n- `server-time` (this will show the time when the message was sent in whatsapp\n\tin your IRC client, instead of when the bridge received it);\n- `whapp-irc/replay` (this will replay all the messages the bridge missed, for\n\texample: when the bridge is turned off. The bridges stores the timestamp of\n\tthe last message for every chat on disk and will send all newer messages to\n\tthe client).\n\n### environment variables\nAll configuration is done using environment variables.\nQuick and simple.\n- `HOST`: the IP/domain used to generate the URLs to media files;\n- `FILE_SERVER_PORT`: the port used for the file httpserver, if not 80 it will\n\tbe appended to the URLs;\n- `IRC_SERVER_PORT`: the port to listen on for IRC connections;\n- `LOG_LEVEL`: `normal` (default) or `verbose`, if verbose it will log all\n\tcommunication between whapp-irc and the chromium instance;\n- `MAP_PROVIDER`: The map provider to use for location messages: can be one of\n\t`googlemaps` (default) or `openstreetmap`.\n\n## docker\nIt's recommend to use the docker image.\nIt's also the only supported version, since this way we have a consistent,\npredictable and reproducible version.\n\nTo run:\n```\ndocker run -d \\\n\t--name whapp-irc \\\n\t-v PATH_TO_DIR_FOR_DATA_HERE:/root \\\n\t-p 6667:6060 \\\n\t-p 3000:3000 \\\n\t-e \"HOST=IP_ADDRESS_OR_DOMAIN_HERE\" \\\n\tlieuwex/whapp-irc\n```\n\n## local build\nif you want to build whapp-irc locally (no guaranty it works with your chromium\nversion and what not), make sure you have go, dep, and chromium.\nThen, clone the repo in your `$GOPATH` and run: `./make.bash`.\n\n## support\n`#whapp-irc` on freenode, you can mention lieuwex if nobody responds.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}