{
  "user": "marcelofmatos",
  "name": "phpnetmap",
  "namespace": "marcelofmatos",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Custom image to run PHPNetMap. Software for network device monitoring with SNMP v(1/2c/3) protocol",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 784,
  "last_updated": "2018-11-21T13:59:25.760407Z",
  "date_registered": "2016-02-01T21:12:09.023952Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "marcelofmatos",
  "has_starred": false,
  "full_description": "# PHPNetMap\n\n[README.pt-BR](https://github.com/marcelofmatos/phpnetmap/blob/master/README.pt-BR.md)\n\nPHP Software for network device monitoring with\nSNMP v(1/2c/3) protocol. Tested with 3Com/HP, ProCurve, Dell and Extreme devices.\nSome other models with SNMP support work properly.\nFramework [yii](http://www.yiiframework.com/) with\n[Bootstrap](http://www.yiiframework.com/extension/bootstrap)\n[Colorpicker](http://www.yiiframework.com/extension/colorpicker) and\n[CAdvancedArBehavior](http://www.yiiframework.com/extension/cadvancedarbehavior).\nUsing JavaScript [D3](http://d3js.org/) library  to the map.\n\n\n## How It works\n\nThe PHPNetMap shows connected hosts based on the [FIB](https://en.wikipedia.org/wiki/Forwarding_information_base)\nor table CAM switches, and [ARP](https://en.wikipedia.org/wiki/Address_Resolution_Protocol) table \ndevices. You can perform searches within these tables in various\ndevices with the Search form. With the map view you can check the connections \nbetween hosts and each host there is a screen indicating the  port status with \ntheir respective connected host. You can see the operating status port and \nstatus of the [Spanning Tree Protocol](https://en.wikipedia.org/wiki/Spanning_Tree_Protocol) \non switches with dot1dStpPortState OID. Using an SNMP community with read/write \npermission you can change the ifAdminStatus or set ifAlias\n\n\n# PHPNetMap and Docker\n\n[![](https://images.microbadger.com/badges/image/marcelofmatos/phpnetmap.svg)](https://microbadger.com/images/marcelofmatos/phpnetmap \"Get your own image badge on microbadger.com\")\n\nI created a Docker image with all the configuration ready for use PHPNetMap,\navailable in [Docker Hub](https://hub.docker.com/r/marcelofmatos/phpnetmap/).\nWith the docker-compose.yml in the project root you can download the image and run\nsystem only with the command `docker-compose up` within the directory\nproject. Note server settings to run in production mode (Password in ADMIN_PASSWORD \nenvironment variable, for example). Change the docker-compose.yml as necessary.\n\n## Installing Docker\n```\ncurl -ssl https://get.docker.com/ | sh\n```\n\nCreate and run a single container\n```\ndocker run -p 80:80 --name=server1 marcelofmatos/phpnetmap\n```\n\nOpen a web browser and access http://<server_ip> or http://localhost if 'docker run' executed in your local machine\nThe HTTP user is 'admin' and password is string set in ADMIN_PASSWORD environment variable.\n\nIf you wish run container in other port:\n```\ndocker run -p 8081:80 --name=server1 marcelofmatos/phpnetmap\n```\nAnd open http://localhost:8081\n\nTo manage container:\n```\ndocker start server1\ndocker stop server1\n```\n\nSet HTTP user and password:\n```\ndocker run -p 80:80 --name=server1 -e ADMIN_USER=admin -e ADMIN_PASSWORD=pnm marcelofmatos/phpnetmap\n```\nIf ADMIN_USER is not set, 'admin' is default value.\nIf ADMIN_PASSWORD is not set, a random value is set and printed on log container.\n\nTo show log container\n```\ndocker logs server1\n```\n\nSee more in https://docs.docker.com/engine/getstarted/\n\n\n## Using with docker-compose\n\nUse these comands to install docker-compose\n```\napt-get install python-pip\npip install docker-compose\n```\n\nTo run configuration in [docker-compose.yml](https://github.com/marcelofmatos/phpnetmap/blob/master/docker-compose.yml):\n```\ndocker-compose up\n```\n\nTo run especific YML file, like [docker-compose-multiple-servers.yml](https://github.com/marcelofmatos/phpnetmap/blob/master/docker-compose-multiple-servers.yml):\n```\ndocker-compose -f docker-compose-multiple-servers.yml up\n```\n\n\n# Server\n\nThe software was tested on Debian and Ubuntu Server with the following \ninstalled packages:\n\n* apache2\n* libapache2-mod-php5\n* php5-snmp\n* php5-sqlite\n* php-apc\n* snmpd\n* sqlite3\n\nThe login is set in .htaccess and .htpasswd so apache must be configured to \nread the instructions\n\n\n# Screenshots\n\n## Main page\n![Home Screenshot](https://raw.githubusercontent.com/marcelofmatos/phpnetmap/master/images/screenshot_home.png)\n\n## Host and network map\n![Host Screenshot](https://raw.githubusercontent.com/marcelofmatos/phpnetmap/master/images/screenshot_host.png)\n\n## Traffic ports\n![Traffic Screenshot](https://raw.githubusercontent.com/marcelofmatos/phpnetmap/master/images/screenshot_traffic.png)\n\n\n# References\n* http://www.yiiframework.com/\n* http://d3js.org/\n* https://docs.docker.com/engine/getstarted/\n* https://docs.docker.com/engine/installation/\n* https://docs.docker.com/compose/compose-file/\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}