{
  "user": "jmaupetit",
  "name": "md2pdf",
  "namespace": "jmaupetit",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Convert Markdown files to PDF with styles",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 2,
  "pull_count": 1804,
  "last_updated": "2020-02-18T09:33:30.634669Z",
  "date_registered": "2017-07-26T14:29:05.694878Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "jmaupetit",
  "has_starred": false,
  "full_description": "![md2pdf logo](https://github.com/jmaupetit/md2pdf/raw/master/assets/md2pdf-logo.png)\n\nConvert Markdown files to PDF with styles.\n\n[![Build Status](https://travis-ci.org/jmaupetit/md2pdf.svg?branch=master)](https://travis-ci.org/jmaupetit/md2pdf)\n[![Coverage Status](https://coveralls.io/repos/github/jmaupetit/md2pdf/badge.svg?branch=master)](https://coveralls.io/github/jmaupetit/md2pdf?branch=master)\n\n\n## Installation\n\nThe easiest way to go is to use pip:\n\n```bash\n$ pip install md2pdf\n```\n\n## Usage\n\n### As a CLI\n\n```\nUsage:\n    md2pdf [options] INPUT.MD OUTPUT.PDF\n\nOptions:\n    --css=STYLE.CSS\n```\n\nFor example, try to generate the project documentation with:\n\n```bash\n$ md2pdf README.md README.pdf\n```\n\nOptionally, you may load an external style (restricted to CSS2):\n\n```bash\n$ md2pdf --css tests/resources/input.css README.md README.pdf\n```\n\n### As a library\n\nYou can use `md2pdf` in your python code, like:\n\n```python\nfrom md2pdf.core import md2pdf\n\nmd2pdf(pdf_file_path,\n       md_content=None,\n       md_file_path=None,\n       css_file_path=None,\n       base_url=None)\n```\n\nFunction arguments:\n\n* `pdf_file_path`: output PDF file path\n* `md_content`: input markdown raw string content\n* `md_file_path`: input markdown file path\n* `css_file_path`: input styles path (CSS)\n* `base_url`: absolute base path for markdown linked content (as images)\n\n### With Docker\n\nInstall [Docker](https://www.docker.com/)\n\nPull the image:\n\n```bash\n$ docker pull jmaupetit/md2pdf\n```\n\nNow run your image:\n\n```bash\n$ docker run --rm -v $PWD:/app jmaupetit/md2pdf --css styles.css INPUT.MD OUTPUT.PDF\n```\n\n## Troubleshooting on MacOSX\n\nEnsure, Weasyprint is fully functional before using md2pdf. You will find\ninstallation instructions in the project documentation:\n[https://weasyprint.readthedocs.io/en/latest/install.html](https://weasyprint.readthedocs.io/en/latest/install.html#macos)\n\nIn a few words, here are the few steps you will need to follow:\n\n* Install XQuartz from:\n  [https://xquartz.macosforge.org](https://xquartz.macosforge.org)\n* Install all dependencies at once with\n  [homebrew](http://mxcl.github.io/homebrew/) and go grab a coffee (this may\n  take a while):\n\n```bash\n$ brew install cairo pango gdk-pixbuf libxml2 libxslt libffi\n```\n\n## Misc\n\n### Using custom fonts in styles\n\nWeasyPrint does not support the `@font-face` property yet (see [project issue\n28](https://github.com/Kozea/WeasyPrint/issues/28)). If you use want to use\ncustom fonts, you should use system fonts and define them with the `font-family`\nCSS property, like:\n\n```\nfont-family: 'Neutraface Condensed';\n```\n\nNote that you should only define **one single** custom font, not a substitution\nlist.\n\n## Contributing\n\n### Hacking\n\nClone this project first:\n\n```bash\n$ git clone git@github.com:jmaupetit/md2pdf.git\n```\n\nInstall it with its dependencies (ideally in a virtual environment):\n\n```bash\n$ cd md2pdf\n$ python -m venv venv\n$ source venv/bin/activate\n(venv) $ pip install -r requirements-dev.txt\n(venv) $ python setup.py develop\n```\n\n### Running the test suite\n\nTo run the test suite with your active python version (virtual environment):\n\n```bash\n(venv) $ pytest\n```\n\nLint the code via:\n\n```bash\n(venv) $ flake8\n```\n\n### Release a new version\n\nUpload a new release to PyPI:\n\n```\n$ python setup.py sdist bdist_wheel\n$ twine upload dist/* --username 'johndoe' --password 'secret'\n```\n\n## License\n\n`md2pdf` is released under the MIT License. See the bundled LICENSE file for\ndetails.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}