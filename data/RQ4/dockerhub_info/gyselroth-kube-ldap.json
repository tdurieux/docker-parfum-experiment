{
  "user": "gyselroth",
  "name": "kube-ldap",
  "namespace": "gyselroth",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "A Webhook Token Authentication plugin for kubernetes to use LDAP as authentication source",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 207532,
  "last_updated": "2019-07-16T07:48:24.973146Z",
  "date_registered": "2018-03-26T13:07:34.394057Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "gyselroth",
  "has_starred": false,
  "full_description": "# kube-ldap\n[![Build Status](https://travis-ci.org/gyselroth/kube-ldap.svg)](https://travis-ci.org/gyselroth/kube-ldap)\n [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nA [Webhook Token Authentication](https://kubernetes.io/docs/admin/authentication/#webhook-token-authentication) plugin for kubernetes,  written in javascript, to use LDAP as authentication source.\n\n## Description\nThe kube-ldap webhook token authentication plugin can be used to integrate username/password authentication via LDAP for your kubernetes cluster.\nIt exposes two API endpoints:\n* /auth\n * HTTP basic authenticated requests to this endpoint result in a JSON Web Token, signed by the webhook, including the username, uid and group memberships of the authenticated user.\n * The issued token can be used for authenticating to kubernetes.\n* /token\n  * Is called by kubernetes (see [TokenReview](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.9/#tokenreview-v1-authentication)) to verify the token used for authentication.\n  * Verifies the integrity of the JWT (using the signature) and returns a TokenReview response containing the username, uid and group memberships of the authenticated user.\n\n**See also Github repository:** https://github.com/gyselroth/kube-ldap",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}