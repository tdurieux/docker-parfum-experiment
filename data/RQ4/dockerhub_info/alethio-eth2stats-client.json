{
  "user": "alethio",
  "name": "eth2stats-client",
  "namespace": "alethio",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 325004,
  "last_updated": "2020-11-03T23:24:19.783263Z",
  "date_registered": "2020-01-09T15:11:58.462806Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "alethio",
  "has_starred": false,
  "full_description": "# Ethereum 2.0 Network Stats and Monitoring - CLI Client\n\n> This is an intial POC release of the eth2stats network monitoring suite\n> \n> It supports Prysm, Lighthouse, Teku, Nimbus and v1 of standardized api (Lodestar).\n> Once the standard lands the client will be refactored to support just that.\n\n## Supported clients and protocols:\n\n| Client        | Supported | Protocols | Supported features                                   |\n|---------------|-----------|-----------|------------------------------------------------------|\n| Prysm         | ✅        | GRPC      | Version, head, sync stats, memory, attestation count |\n| Lighthouse (v1)   | ✅        | HTTP      | Version, head, sync stats, memory                    |\n| Teku          | ✅        | HTTP      | Version, head, sync stats, memory                    |\n| Lodestar (v1) | ✅        | HTTP      | Version, head, sync stats, memory, attestation count |\n| Nimbus        | ✅        | HTTP      | Version, head, sync stats, memory                    |\n| Trinity       |          |           |                                                      |\n\n  \n## Current live deployments:\n\n- [eth2stats.io/](https://eth2stats.io/) - Classic testnets:\n  - [Medalla](https://eth2stats.io/medalla-testnet)\n  - [Onyx](https://eth2stats.io/onyx-testnet)\n  - [Altona](https://eth2stats.io/altona-testnet)\n  - [Witti](https://eth2stats.io/witti-testnet)\n  - And previously Schelesi and Sapphire testnets.\n- [atttacknet.eth2.wtf](https://atttacknet.eth2.wtf)\n- [zinken.eth2.wtf](https://atttacknet.eth2.wtf)\n\n\n## Getting Started\n\nThe following section uses Docker to run. If you want to build from source go [here](#building-from-source).\n\nThe most important variable to change is **`--eth2stats.node-name`** which will define what name your node has on [eth2stats](https://eth2stats.io).\n\n\n### Joining a Testnet\n\nThe first thing you should do is get a beacon node running and connected to your Eth2 network of choice.\n\nThe dashboard for the given testnet has a \"Add your node\" button. The client information is not always accurate however.\nSee below for options per client.\n\n```shell script\ndocker run -d --name eth2stats --restart always --network=\"host\" \\\n      -v ~/eth2stats/data:/data \\\n      alethio/eth2stats-client:latest \\\n      run --v \\\n      --eth2stats.node-name=\"YourPrysmNode\" \\\n      --data.folder=\"/data\" \\\n      --eth2stats.addr=\"grpc.sapphire.eth2stats.io:443\" --eth2stats.tls=true \\\n      --beacon.type=\"changeme\" --beacon.addr=\"changeme\" --beacon.metrics-addr=\"changeme\" # insert client-specific options here\n```\n\n### Client options\n\n| Client version            | `--beacon.type`        | `--beacon.addr`           | `--beacon.metrics-addr`                   |\n|---------------------------|------------------------|---------------------------|-------------------------------------------|\n| Lighthouse v0.3.x         | `v1`  (standard API)   | `http://localhost:5052`   | `http://127.0.0.1:5054/metrics` (changed) |\n| Lighthouse v0.2.x         | `lighthouse`           | `http://localhost:5052`   | `http://127.0.0.1:5052/metrics`           |\n| Lodestar                  | `v1`  (standard API)   | `http://localhost:9596`   | `http://127.0.0.1:8008/metrics`           |\n| Nimbus                    | `nimbus`               | `http://localhost:9190`   | `http://127.0.0.1:8008/metrics`           |\n| Prysm                     | `prysm`                | `localhost:4000` (GRPC!)  | `http://127.0.0.1:8080/metrics`           |\n| Teku                      | `teku`                 | `http://localhost:5051`   | `http://127.0.0.1:8008/metrics`           |\n\nThe metrics are only required if you want to see your beacon node client's memory usage on eth2stats.\n\n\n### Securing your gRPC connection to the Beacon Chain\n\nIf your Beacon node uses a TLS connection for its GRPC endpoint you need to provide a valid certificate to `eth2stats-client` via the `--beacon.tls-cert` flag:\n\n```shell script\ndocker run -d --name eth2stats --restart always --network=\"host\" \\\n      -v ~/eth2stats/data:/data \\\n      ... # omitted for brevity\n      --beacon.type=\"prysm\" --beacon.addr=\"localhost:4000\" --beacon.tls-cert \"/data/cert.pem\"\n```\n\nHave a look at Prysm's documentation to learn [how to start their Beacon Chain with enabled TLS](https://docs.prylabs.network/docs/prysm-usage/secure-grpc) and how to [generate and use self-signed certificates](https://docs.prylabs.network/docs/prysm-usage/secure-grpc#generating-self-signed-tls-certificates).\n\n### Metrics\n\nIf you want to see your beacon node client's memory usage as well, make sure you have metrics enabled and add this cli argument,\n pointing at the right host, e.g. `--beacon.metrics-addr=\"http://127.0.0.1:8080/metrics\"`.\n\nDefault metrics endpoints of supported clients:\n- Lighthouse: `127.0.0.1:5054/metrics` (using `--metrics --metrics-address=127.0.0.1 --metrics-port=5054`)\n- Teku: `127.0.0.1:8008/metrics` (using `--metrics-enabled=true` in Teku options)\n- Prysm: `127.0.0.1:8080/metrics`, monitoring enabled by default.\n- Nimbus: `127.0.0.1:8008/metrics` (using `--metrics --metrics-port=8008`)\n- Lodestar: `127.0.0.1:8008/metrics` (configure with `\"metrics\": { \"enabled\": true, \"serverPort\": 8008}` in config JSON)\n\nThe `process_resident_memory_bytes` gauge is extracted from the Prometheus metrics endpoint.\n\n\n## Building from source\n\n### Prerequisites\n\n- a working Golang environment (tested with go v1.14)\n    - requires go modules (>=go v1.11)\n\n### Step-by-step\n\n**Clone the repo**\n```shell script\ngit clone https://github.com/Alethio/eth2stats-client.git\ncd eth2stats-client\n```\n\n**Build the executable**\n\nWe are using go modules, so it will automatically download the dependencies\n```shell script\nmake build\n```\n\n**Run**\n\nThe `eth2stats-client` can run with `run` and flags as described per client.\n\nExample for Lighthouse:\n```shell script\n./eth2stats-client run \\\n                   --eth2stats.node-name=\"YourNode\" \\\n                   --eth2stats.addr=\"grpc.example.eth2stats.io:443\" --eth2stats.tls=true \\\n                   --beacon.type=\"lighthouse\" --beacon.addr=\"http://localhost:5052\"\n```\n\nNote that since Prysm uses GRPC, the addr flag does not start with `http://`, unlike the others.\nSo it would be like `--beacon.addr=\"localhost:4000\"`.\n\nFor the other clients, it is similar as lighthouse, except you replace the name.\n\nClient names are `prysm`, `lighthouse`, `teku`, `nimbus`, `lodestar`. And `v1` for standard API option, which clients are all planning to adopt.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json",
    "application/vnd.docker.distribution.manifest.list.v2+json"
  ],
  "content_types": [
    "image"
  ]
}