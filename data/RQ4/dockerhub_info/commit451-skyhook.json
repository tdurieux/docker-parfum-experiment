{
  "user": "commit451",
  "name": "skyhook",
  "namespace": "commit451",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Parses webhooks and forwards them in the proper format to Discord.",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 269816,
  "last_updated": "2022-07-07T02:05:57.062475Z",
  "date_registered": "2020-06-18T17:22:32.381407Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "commit451",
  "has_starred": false,
  "full_description": "# skyhook\nParses webhooks and forwards them in the proper format to Discord.\n\n[![Build Status](https://travis-ci.org/Commit451/skyhook.svg?branch=master)](https://travis-ci.org/Commit451/skyhook) [![Discord](https://discordapp.com/api/guilds/303595820345851905/widget.png)](https://discord.gg/js7wD7p)\n\n## Setup\nYou can use the [site](https://skyhookapi.com/) to create the right webhook link. If you want to manually do it, here are the steps:\n1. Create a webhook in Discord (Server Settings -> Webhooks -> Create Webhook)\n2. Copy the webhook url\n3. Turn the Discord webhook url into a skyhook webhook url like so:\n```\nReplace discordapp.com in url with skyhookapi.com\nhttps://discordapp.com/api/webhooks/firstPartOfWebhook/secondPartOfWebhook\n->\nhttps://skyhookapi.com/api/webhooks/firstPartOfWebhook/secondPartOfWebhook\n```\n4. Add the provider you want to the end of the url:\n```\nhttps://skyhookapi.com/api/webhooks/firstPartOfWebhook/secondPartOfWebhook/providerGoesHere\n```\n## Supported Providers\n- [AppVeyor](https://www.appveyor.com/docs/notifications/#webhook-payload-default) - `/appveyor`\n- [Bintray](https://bintray.com/docs/api/#_webhooks) - `/bintray`\n- [BitBucket](https://confluence.atlassian.com/bitbucket/manage-webhooks-735643732.html) - `/bitbucket`\n- [BitBucket Server](https://confluence.atlassian.com/bitbucketserver/event-payload-938025882.html) - `/bitbucketserver`\n- [CircleCI](https://circleci.com/docs/1.0/configuration/#notify) - `/circleci`\n- [Codacy](https://support.codacy.com/hc/en-us/articles/207280359-WebHook-Notifications) - `/codacy`\n- [Dockerhub](https://docs.docker.com/docker-hub/webhooks) - `/dockerhub`\n- [GitLab](https://gitlab.com/help/user/project/integrations/webhooks) - `/gitlab`\n- [Heroku](https://devcenter.heroku.com/articles/deploy-hooks#http-post-hook) - `/heroku`\n- [Instana](https://www.instana.com/docs/ecosystem/webhook/) - `/instana`\n- [Jenkins](https://plugins.jenkins.io/notification) - `/jenkins` (requires the [notification plugin](https://wiki.jenkins.io/display/JENKINS/Notification+Plugin))\n- [Jira](https://developer.atlassian.com/server/jira/platform/webhooks/) - `/jira`\n- [NewRelic](https://docs.newrelic.com/docs/alerts/new-relic-alerts/managing-notification-channels/customize-your-webhook-payload) - `/newrelic`\n- [Patreon](https://www.patreon.com/platform/documentation/webhooks) - `/patreon`\n- [Pingdom](https://www.pingdom.com/resources/webhooks) - `/pingdom`\n- [Rollbar](https://docs.rollbar.com/docs/webhooks) - `/rollbar`\n- [Travis](https://docs.travis-ci.com/user/notifications/#Webhooks-Delivery-Format) - `/travis`\n- [Trello](https://developers.trello.com/apis/webhooks) - `/trello`\n- [Unity Cloud](https://build-api.cloud.unity3d.com/docs/1.0.0/index.html#operation-webhooks-intro) - `/unity`\n- [Uptime Robot](https://blog.uptimerobot.com/web-hook-alert-contacts-new-feature/) - `/uptimerobot`\n- [VSTS](https://docs.microsoft.com/en-us/vsts/service-hooks/events#) - `/vsts`\n\nIf you want support for a new provider, just create a pull request and add it!  \nAlternatively, a new provider can also be requested by creating an [issue](https://github.com/Commit451/skyhook/issues).\n\n## Contributing\nIf you wish to contribute, follow our [contributing guide](CONTRIBUTING.md).\n\n### Creating a Provider\nIf you want to create a new provider please follow the examples shown at our small [documentation](docs/CreateNewProvider.md).\n\n## Testing Locally\nTo build:\n```\nnpm build\n```\nTo run server (after building):\n```\nnpm start\n```\nTo run tests:\n```\nnpm test\n```\n\nThrough Docker:\n```\ndocker run -it --rm -p 8080:8080 commit451/skyhook\n```\n\n## Deploying\n- [Docker](docs/docker)\n- [Google Cloud](docs/gcloud)\n\n## Thanks\nSpecial thanks to all our amazing contributors. skyhookapi.com is hosted for free for you, so if you feel so inclined, [buy a coffee!](https://ko-fi.com/jawnnypoo)\n\n## License\nskyhook is available under the MIT license. See the LICENSE file for more info.\n\n\\ ゜o゜)ノ\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}