{
  "user": "cheminfo",
  "name": "rest-on-couch",
  "namespace": "cheminfo",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Docker image for rest-on-couch services",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 3604,
  "last_updated": "2021-06-23T09:11:43.075987Z",
  "date_registered": "2016-10-06T09:05:18.643483Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "cheminfo",
  "has_starred": false,
  "full_description": "# rest-on-couch\n\n[![NPM version][npm-image]][npm-url]\n[![build status][ci-image]][ci-url]\n[![npm download][download-image]][download-url]\n[![Known Vulnerabilities][snyk-image]][snyk-url]\n\nInterface to CouchDB that allows the control of permissions on the documents.\n\n## REST API\n\n[API documentation](API.md)\n\n## Configuration\n\nThe configuration is being read on load from many sources, in the following order (ascending priority):\n\n1. Default configuration. Some configuration elements have default values. They are defined in the [source code](./src/config/default.js)\n2. Main configuration file (`config.js` or `config.json` in ROC's home directory)\n3. Database configuration file (`config.js` in database's subdirectory)\n4. Environment variable (uppercase snake-case with `REST_ON_COUCH_` prefix)\n5. Custom config file passed with `--config` in the CLI\n\n### Main options\n\n#### url\n\nType: string  \nDefault: `'http://localhost:5984'`  \nURL of the CouchDB server.\n\n#### username\n\nType: string  \nDefault: `undefined`  \nUsername for CouchDB connection.\n\n#### password\n\nType: string  \nDefault: `undefined`  \nPassword for CouchDB connection.\n\n#### logLevel\n\nType: string  \nDefault: `'WARN'`  \nLevel of the logs stored in the database. Possible values are FATAL (1), ERROR (2), WARN (3), INFO (4), DEBUG (5) and TRACE (6).\nLogs are only inserted if the current level is equal or higher to the log's level.\n\n#### authRenewal\n\nType: number  \nDefault: `570`  \nTime in seconds that the application waits before revalidating the session with CouchDB.\nThis number should be smaller than the session's cookie life.\n\n### Server options\n\n#### port\n\nType: number  \nDefault: `3000`  \nPort used by the rest-on-couch server.\n\n#### auth\n\nType: object  \nDefault: `{couchdb:{}}`  \nObject describing the authentication strategies that are available and providing options to them.\n\n#### proxy\n\nType: boolean  \nDefault: `true`  \nSet to `true` if your application is behind a proxy and needs to trust `X-Forwarded-` headers.\n\n#### proxyPrefix\n\nType: string  \nDefault: `'/'`  \nIf the proxy is not at the root level of the URL, set this value to the corresponding prefix.\n\n#### allowedOrigins\n\nType: array\\<string>  \nDefault: `[]`  \nIf cross-origin calls need to be done, set the list of trusted origins here.\n\n#### sessionDomain\n\nType: string  \nDefault: `undefined`  \nDomain of the session cookie.\n\n#### sessionKey\n\nType: string\nDefault: `'roc:sess'`\nKey of the session cookie.\n\n#### sessionPath\n\nType: string\nDefault: `'/'`\nPath of the session cookie.\n\n#### sessionSecure\n\nType: boolean  \nDefault: `false`  \nSet to `true` if the cookie should only be valid on secure URLs.\n\n#### sessionSameSite\n\nType: string\nDefault: `'lax'`\nValue of the [\"SameSite\"](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite) cookie option. Set to `'strict'`, `'lax'`, or `'none'`.\n\n#### debugrest\n\nType: boolean  \nDefault: `false`  \nIf set to `true`, a stack trace will be print to the body of the response when an error occurs.  \nDo not use this in production!\n\n### Zenodo options\n\n#### zenodo\n\nType: boolean  \nDefault: `false`\nIf set to `true`, enables the Zenodo API.\n\n#### zenodoName\n\nType: string  \nName of this application/database. This will be used in the keywords for each\nentry that is created. For example, if `zenodoName` is `'db123'`, entries will\ncontain the keyword `'from:db123'`.  \nThis option is mandatory if `zenodo` is `true`.\n\n#### zenodoToken\n\nType: string  \nAPI token for Zenodo.  \nThis option is mandatory if `zenodo` is `true`.\n\n#### zenodoSandboxToken\n\nType: string  \nAPI token for Zenodo's sandbox.\n\n#### zenodoVisualizationUrl\n\nType: string  \nURL prefix for entry visualization. If set, the Zenodo entry ID will be appended\nto this, optionally with a `?sandbox=1` query string. A link will be added at the\nend of the entry's description.\n\n#### zenodoReadme\n\nType: string  \nDefault contents of the `_README.md` that is published in the Zenodo entry.\n\n#### zenodoAttachments\n\nType: function  \nFunction that is called with each ROC entry's contents and must return a list of\nattachments to add to the Zenodo entry. It can also return an object if a single\nattachment is to be added\n\n```js\nfunction zenodoAttachments(content) {\n  if (content.general && content.general.molfile) {\n    return {\n      filename: 'molfile.mol',\n      contentType: 'chemical/x-mdl-molfile',\n      data: content.general.molfile,\n    };\n  } else {\n    return [];\n  }\n}\n```\n\n## Setup environment with Docker (for running tests)\n\n```bash\ndocker pull couchdb\ndocker create -p 5984:5984 --name couchdb couchdb\ndocker start couchdb\ndocker ps # check that the container is running\n```\n\nAlternatively: `docker-compose up --file docker-compose.dev.yml -d`\n\nGo to http://localhost:5984/_utils/#setup\n\n- Single node\n- username: admin, password: admin\n- bind address: 0.0.0.0\n- Execute the bash script `/setupDatabase.sh`\n- Execute the tests: `npm t`\n\n## Automatic importation\n\n`rest-on-couch` is able to watch folders and to automatically import data in the database.\n\nA specific userguide is available [here](import.md).\n\n## License\n\n[MIT](./LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/rest-on-couch.svg\n[npm-url]: https://www.npmjs.com/package/rest-on-couch\n[ci-image]: https://github.com/mljs/matrix/workflows/Node.js%20CI/badge.svg?branch=master\n[ci-url]: https://github.com/mljs/matrix/actions?query=workflow%3A%22Node.js+CI%22\n[download-image]: https://img.shields.io/npm/dm/rest-on-couch.svg\n[download-url]: https://www.npmjs.com/package/rest-on-couch\n[snyk-image]: https://snyk.io/test/github/cheminfo/rest-on-couch/badge.svg\n[snyk-url]: https://snyk.io/test/github/cheminfo/rest-on-couch\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}