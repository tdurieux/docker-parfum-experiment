{
  "user": "gnuradio",
  "name": "cgran",
  "namespace": "gnuradio",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "CGRAN application container",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 95,
  "last_updated": "2019-02-07T02:24:45.994606Z",
  "date_registered": "2018-02-14T21:22:03.090727Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "gnuradio",
  "has_starred": false,
  "full_description": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/gnuradio/cgran/master/ootlist/static/ootlist/images/cgran_logo_v2.png\" width=\"250\"/>\n</p>\n\n#### This is the Django web app for CGRAN.org\n\n#### The information in the main table is automatically generated by parsing gr-recipes and gr-etcetera (PyBOMBS recipes).\n\n### To Install\n* clone this repo\n* install docker-ce with https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce\n* install docker-compose with https://docs.docker.com/compose/install/#prerequisites\n* allow running docker as non-root with https://docs.docker.com/install/linux/linux-postinstall/#manage-docker-as-a-non-root-user\n* rename settings_secret.py.template to settings_secret.py and change the value of the secret key to something else (anything else)\n\n### To launch app\n\n`docker-compose up --build --no-deps`\n\nor\n\n`docker-compose up`\n\n### Current TODO list\n\n* make the parsing script automatically run once a day, at like 3am\n\n### Notepad to self\n\n* For shell accessing- `docker exec -ti nginx bash` or `docker exec -ti web bash` \n* `docker ps` lists docker containers that are running\n* `docker ps -a` lists all built containers\n* you can stop and remove all docker containers using `docker stop $(docker ps -a -q)` then `docker rm $(docker ps -a -q)`\n* three-step guide to making model changes:\n  1. Change your models (in models.py).\n  2. Run python manage.py makemigrations to create migrations for those changes\n  3. Run python manage.py migrate to apply those changes to the database.\n* save db to yaml file- `python manage.py dumpdata --format yaml ootlist.Outoftreemodule -o db.yaml`\n* load yaml file to db- `python manage.py loaddata db.yaml` \n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}