{
  "user": "chapsuk",
  "name": "miga",
  "namespace": "chapsuk",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Go DB migration CLI tool",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 7514,
  "last_updated": "2021-09-14T18:01:18.420837Z",
  "date_registered": "2018-07-10T17:43:13.966464Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "chapsuk",
  "has_starred": false,
  "full_description": "# miga\n\n[![Build Status](https://travis-ci.com/chapsuk/miga.svg?token=m33r59zSHRPMSbqfFKFk&branch=master)](https://travis-ci.com/chapsuk/miga)\n\nMiga is a command line utility around several migration packages with single interface.\nAimed to add extra features and hide some limitations of existing golang migration CLI`s.\n\n```command\n> go get -u github.com/chapsuk/miga\n```\n\n```command\n> docker run -it chapsuk/miga --help\n```\n\n## Supporting\n\nPackageName | Version | Postgres            | MySQL\n----------- | ------- | ------------------- | --------\n[goose](https://github.com/pressly/goose)       |  2.6.0  |  :heavy_check_mark: | :heavy_check_mark:\n[migrate](https://github.com/golang-migrate/migrate)     |  4.2.5  |  :heavy_check_mark: | :heavy_check_mark:\n[impg](https://github.com/im-kulikov/migrate)        |   0.1   |  :heavy_check_mark: \n\n\n## Features\n\n* Configuration by file or environment variables;\n* Seeding db by migration way;\n* One from several migration packages of your choice;\n* Converting one migration format to another;\n* Testing;\n\n## Usage\n\nMiga CLI inherit from goose CLI and may not be familiar to users of other utilities.\nSee commands description before usage\n\n```text\n≻ ./bin/miga migrate\nNAME:\n   miga migrate - Migrations root command\n\nUSAGE:\n   miga migrate command [command options] [arguments...]\n\nCOMMANDS:\n     convert  Converting migrations FROM_FORMAT to TO_FORMAT and store to DESTENITION_PATH\n     create   Creates new migration sql file\n     down     Roll back the version by 1\n     down-to  Roll back to a specific VERSION\n     redo     Re-run the latest migration\n     reset    Roll back all migrations\n     status   Dump the migration status for the current DB\n     up       Migrate the DB to the most recent version available\n     up-to    Migrate the DB to a specific VERSION\n     version  Print the current version of the database\n     help, h  Shows a list of commands or help for one command\n```\n\n## Configuration\n\nMiga has 3 level configuration options by priority:\n\n### Flags\n\n```bash\n--config value      Config file name (default: \"\")\n--driver value      Migration driver name: goose, migrate, stump (default: \"goose\")\n--log.level value   Logger level [debug|info|...] (default: \"debug\")\n--log.format value  Logger output format console|json (default: \"console\")\n```\n\n### Environment variables\n\nName                        | SettingDefault | Description\n--------------------------- | -------------- | -----------------------\nMIGA_CONFIG                 | miga.yml       | config file\nMIGA_DRIVER                 | goose          | one from [list](#supporting)\nMIGA_POSTGRES_DSN           |                | postgres DSN string\nMIGA_MYSQL_DSN              |                | mysql DSN string\nMIGA_MIGRATE_PATH           | ./migrations   | migrations dir\nMIGA_MIGRATE_TABLE_NAME     | db_version     | migrations db version table name\nMIGA_SEED_PATH              | ./seeds        | seeds dir\nMIGA_SEED_TABLE_NAME        | seed_version   | seeds version table name\nMIGA_LOG_LEVEL              | info           | logging level\nMIGA_LOG_FORMAT             | console        | logging format (console or json)\n\n*prefix `MIGA` may be changed by build flag `-ldflags \"-X main.Name=<NAME>\"`\n\n### Config file\n\n```yml\ndriver: goose\npostgres:\n  dsn: \"postgres://user:password@127.0.0.1:5432/miga?sslmode=disable\"\n# mysql:\n#   dsn: \"user:password@tcp(127.0.0.1:3306)/miga\"\nmigrate:\n  path: ./migrations\n  table_name: db_version\nseed:\n  path: ./seeds\n  table_name: seed_version\n```\n\n### Using without config\n\n```bash\n> MIGA_POSTGRES_DSN=\"postgres://user:password@127.0.0.1:5432/miga?sslmode=disable\" \\\n  MIGA_MIGRATE_PATH=./tests/migrations/goose/ \\\n  MIGA_SEED_PATH=./tests/seeds/goose \\\n  miga --driver goose migrate up\n```\n\n## Tests\n\n```text\n≻ make db_up\n≻ GOCACHE=off go test -v ./tests/\n=== RUN   TestConvert\n\n  Convert from MIGRATE to GOOSE source: ./migrations/migrate dest: ./migrations/tmp/goose ✔✔\n    Given migrations GOOSE driver with MYSQL dialect ✔✔\n      #1 up to first migartions (create users table) ✔✔✔✔✔✔✔✔✔\n      #2 up to second (create wallets table) ✔✔✔✔✔✔✔✔✔\n      #3 up to third (alter tables) ✔✔✔✔✔✔✔✔✔\n      #4 retry last migration ✔✔✔✔✔✔✔✔✔\n      #5 query with `;` ✔✔✔✔✔✔✔✔✔\n      #101 incorrect migration (duplicate of 3 migration) ✔✔✔✔✔✔✔✔✔✔\n      #102 try jump over failed migration ✔✔✔✔✔✔✔\n      #103 down to 2 migartion ✔✔✔✔✔✔✔\n      #104 reset all ✔✔✔✔✔✔✔✔\n      #105 up to latest, but stop on failed ✔✔✔✔✔✔✔✔✔✔\n      #106 down to first ✔✔✔✔✔✔✔✔\n      #107 reset all ✔✔✔✔✔\n...\n\n  Given migrations GOOSE driver with POSTGRES dialect ✔✔\n    #1 up to first migartions (create users table) ✔✔✔✔✔✔\n    #2 up to second (create wallets table) ✔✔✔✔✔✔\n    #3 up to third (alter tables) ✔✔✔✔✔✔\n    #4 retry last migration ✔✔✔✔✔✔\n    #5 query with `;` ✔✔✔✔✔✔\n    #6 plpsql statement, should create histories table and func for create inheritans ✔✔✔✔✔✔✔✔✔✔\n    #101 incorrect migration (duplicate of 3 migration) ✔✔✔✔✔✔✔\n    #102 try jump over failed migration ✔✔✔✔\n    #103 down to 2 migartion ✔✔✔✔\n    #104 reset all ✔✔✔✔✔\n    #105 up to latest, but stop on failed ✔✔✔✔✔✔✔\n    #106 down to first ✔✔✔✔✔\n    #107 reset all ✔✔✔✔\n\n\n1488 total assertions\n\n--- PASS: TestMigrations (3.35s)\nPASS\nok    miga/tests\t10.521s\n```\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}