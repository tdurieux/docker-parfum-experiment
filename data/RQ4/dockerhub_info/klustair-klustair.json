{
  "user": "klustair",
  "name": "klustair",
  "namespace": "klustair",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 43664,
  "last_updated": "2022-04-24T20:34:28.477329Z",
  "date_registered": "2020-10-30T07:22:44.281655Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "klustair",
  "has_starred": false,
  "full_description": "<p align=\"center\"><img src=\"https://raw.githubusercontent.com/mms-gianni/klustair-frontend/master/docs/img/klustair.png\" width=\"200\"></p>\n\n# <a href='https://github.com/mms-gianni/klustair'>KlustAIR Scanner</a>\nThe Klustair scanner scanns your Kubernetes namespaces for the used images and submits them to Anchore. This is the scanner part. \n\n### Related Klustair projects: \n- <a href=\"https://github.com/mms-gianni/klustair-frontend\">Klustair Frontend</a> to view the scanner results\n- <a href=\"https://github.com/mms-gianni/klustair-helm\">Klustair Helm charts</a> to spin up Anchore and Klustair\n\n### Related opensource projects\n- <a href=\"https://github.com/aquasecurity/trivy\">trivy</a> A Simple and Comprehensive Vulnerability Scanner for Containers and other Artifacts\n- (DEPRECATED) <a href=\"https://github.com/anchore/anchore-engine\">anchore-engine</a> A service that analyzes docker images and applies user-defined acceptance policies to allow automated container image validation and certification\n- <a href=\"https://github.com/Shopify/kubeaudit\">kubeaudit</a> kubeaudit helps you audit your Kubernetes clusters against common security controls\n\n## Requirements\n - Python 3\n - Running Anchore (See docker-compose-anchore.yaml)\n\n## Usage\n```\nusage: runner.py [-h] [-v] [-n NAMESPACES] [-N NAMESPACESBLACKLIST]\n                 [-k KUBEAUDIT] [-l LABEL] [-a] [-t] [-c TRIVYCREDENTIALS]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --verbose         increase output verbosity\n  -n NAMESPACES, --namespaces NAMESPACES\n                        Coma separated whitelist of Namespaces to check\n  -N NAMESPACESBLACKLIST, --namespacesblacklist NAMESPACESBLACKLIST\n                        Coma separated blacklist of Namespaces to skip\n  -k KUBEAUDIT, --kubeaudit KUBEAUDIT\n                        Coma separated list of audits to run. default: 'all',\n                        disable: 'none'\n  -l LABEL, --label LABEL\n                        A optional title for your run\n  -a, --anchore         Run Anchore vulnerability checks\n  -t, --trivy           Run Trivy vulnerability checks\n  -c TRIVYCREDENTIALSPATH, --trivycredentialspath TRIVYCREDENTIALSPATH\n                        Path to repo credentials for trivy\n  -ld LIMITDATE, --limitDate LIMITDATE\n                        Remove reports older than X days\n  -ln LIMITNR, --limitNr LIMITNR\n                        Keep only X reports\n```\n\n## ENV vars\n```\nexport KLUSTAIR_NAMESPACES=\nexport KLUSTAIR_NAMESPACEBLACKLIST=\nexport KLUSTAIR_KUBEAUDIT=\nexport KLUSTAIR_TRIVYCREDENTIALSPATH=\n```\n\n## Run in Docker\n```\ncp .env.example .env\nvim .env\ndocker-compose up -d \n``` \nor \n```\ndocker-compose up -d -e PATH_LOCAL_KUBECONFIG=~/.kube/config\n```\n\n## Start Anchore locally\n```\ncurl https://docs.anchore.com/current/docs/engine/quickstart/docker-compose.yaml > docker-compose-anchore.yaml\ndocker-compose -f docker-compose-anchore.yaml up -d \n```\n\n## develop\n```\npython3 -m venv env\nsource env/bin/activate\npip install -r requirements.txt\n\ndeactivate\n```\n\n## build\n```\ncp .env.example .env\nvim .env\ndocker compose build\n```\nor\n```\ndocker compose build\n```",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}