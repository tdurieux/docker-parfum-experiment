{
  "user": "daknob",
  "name": "torpaste",
  "namespace": "daknob",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "TorPaste is a very simple public pastebin designed specifically to work on Tor Browser.",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 771,
  "last_updated": "2017-10-16T09:08:13.69737Z",
  "date_registered": "2016-03-09T21:41:05.809045Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "daknob",
  "has_starred": false,
  "full_description": "# TorPaste\nA Pastebin for Tor\n\n![TravisCI](https://api.travis-ci.org/DaKnOb/TorPaste.svg?branch=master)\n![Current Version](https://img.shields.io/github/tag/daknob/torpaste.svg)\n![Open Issues](https://img.shields.io/github/issues-raw/daknob/torpaste.svg)\n![Closed Issues](https://img.shields.io/github/issues-closed-raw/daknob/torpaste.svg)\n![License](https://img.shields.io/github/license/daknob/torpaste.svg)\n![Awesome People](https://img.shields.io/github/contributors/daknob/torpaste.svg)\n![Pull Requests](https://img.shields.io/github/issues-pr-raw/daknob/torpaste.svg)\n![Closed Pull Requests](https://img.shields.io/github/issues-pr-closed-raw/daknob/torpaste.svg)\n![Docker Pulls](https://img.shields.io/docker/pulls/daknob/torpaste.svg)\n\n## What is this?\n\nTorPaste is a simple Pastebin service written in Python using the Flask framework.\nIt is targeted to users inside Tor and can be easily setup as a Hidden Service.\nAs of version v0.4 TorPaste supports multiple backends for storage of data, however\ncurrently only the local filesystem backend is implemented. TorPaste has been designed\nin order to need no cookies or JavaScript and to run without problems in the Tor Browser\nwith the Security and Privacy Settings set to Maximum.\n\nUnfortunately, the lack of client-side code means all the pastes are stored in\n**plaintext** format, readable by anyone, including the server. For this reason,\nall pastes are indexed and available publicly by default to anyone to see as well.\nDo not use this service for sensitive data.\n\n## How to run this?\n\nYou can run this locally in your system:\n\n```bash\nsudo pip install -r requirements.txt\npython torpaste.py\n```\n\nor using `virtualenv`:\n\n```bash\nvirtualenv .\nbin/pip install -r requirements.txt\n./torpaste.py\n```\n\nYou can also run this using Docker:\n\n```bash\ndocker build -t daknob/torpaste .\ndocker run -d -p 80:80 daknob/torpaste\n```\n\nor from Docker Hub:\n\n```bash\ndocker run -d -p 80:80 daknob/torpaste\n```\n\nIf you want to run TorPaste in production\n( [don't worry, you're not alone](https://paste.daknob.net) ), consider using\na specific tag such as `daknob/torpaste:v0.3`. The `latest` tag is synchronized\nautomatically with the `master` branch of this repo and therefore is the bleeding\nedge version. In both cases, don't forget to update your version of TorPaste for\nbug fixes, security patches, and new features. This can be done by running:\n\n```bash\ndocker pull daknob/torpaste\n```\n\nor of course, for a specific version:\n\n```bash\n\ndocker pull daknob/torpaste:v0.3\n```\n\nand then stop the previous container and start a new one. It is important to use\nthe same settings when launching a new container, so any `-p` / `-e` / `-v` arguments\nneed to be specified again.\n\nIf you're using Docker and you need the pastes to persist, you can mount the paste\ndirectory to the local filesystem. This will store all pastes in the host and not\ninside the container. This can be done as such:\n\n```bash\ndocker run -d -p 80:80 -v /path/to/host/:/torpaste/pastes daknob/torpaste\n```\n\n## Backends\nTorPaste is extensible and supports multiple backends for storage of its data. As\nof now, the only one implemented is the `filesystem` backend, which stores all data\nas files in the local filesystem. If you're interested in writting a backend, please\nsee [Issue #15](https://github.com/DaKnOb/TorPaste/issues/15) for some ideas. For\nmore information in the development of new backends, there's an `example.py` file\ninside the `backends` folder which you can copy and start editing right away. The\nfile includes a lot of useful information and design documentation for your new\nbackend, but if you still want to look at an example, the `backends/filesystem.py`\nis there as well to have a look.\n\n### filesystem\nThis is the first backend available for TorPaste and stores everything in the local\nfilesystem. TorPaste versions prior to v0.4 had this backend hardcoded and therefore\nthis is an improved implementation so we can maintain backwards compatibility without\nrunning any migration scripts. It is also the simplest backend and it is used by\ndefault.\n\n## Configuration\nTorPaste can be configured by using `ENV`ironment Variables. The list of available\nvariables as well as their actions is below so you can use them to parameterize your\ninstallation of the software. Please note that all these variables have a default\nvalue which may not work well for you, but makes them all optional.\n\n### Available ENV Variables\n\n* `TP_WEBSITE_TITLE` : Use this variable to set the TorPaste Title inside the HTML\n`<title></title>` tags. *Default:* `Tor Paste`\n* `TP_BACKEND` : Use this variable to select a backend for TorPaste to use. The\navailable backends for each version are included in the `COMPATIBLE_BACKENDS` variable\ninside `torpaste.py`. *Default:* `filesystem`\n* `TP_PASTE_MAX_SIZE` : Use this variable to set the maximum paste size, in bytes. The\npossible values are formatted as `<amount> <unit>`, for example `10 M`, or `128 B`,\nor `16 k`. Any value that starts with `0` changes this limit to unlimited. *Default:*\n`0`\n* `TP_PASTE_LIST_ACTIVE` : Use this variable to enable or disable the paste listing\navailable in the `Pastes` menu. *Default:* `True`\n* `TP_CSP_REPORT_URI` : Use this variable to set a `report-uri` for the Content Security\nPolicy of TorPaste. If this variable is not set, no `report-uri` is added, which is the\ndefault behavior.\n* `TP_ENABLED_PASTE_VISIBILITIES` : Use this variable to select the available paste\nvisibilities, separated by a comma. Example: \"public,unlisted\". The available backends\nfor each version are included in the `AVAILABLE_VISIBILITIES` variable inside \n`torpaste.py`. *Default:* `public`.\n\n### Backend ENV Variables\nEach backend may need one or more additional `ENV` variables to work. For example,\na MySQL backend may need the `HOST`, `PORT`, `USERNAME`, and `PASSWORD` to connect\nto the database. To prevent conflicts, all these variables will be available as\n`TP_BACKEND_BACKENDNAME_VARIABLE` where `BACKENDNAME` is the name of the backend,\nsuch as `MYSQL` and the `VARIABLE` will be the name of the variable, such as `HOST`.\n\nCurrently there are no used backend `ENV` variables. When there are, you will find\na list of all backends and their variables here.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}