{
  "user": "bhanderson",
  "name": "pbnh",
  "namespace": "bhanderson",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "docker for pbnh",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 168,
  "last_updated": "2018-10-26T23:28:21.117756Z",
  "date_registered": "2017-02-24T01:30:32.813764Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "bhanderson",
  "has_starred": false,
  "full_description": "pbnh\n========\nTHIS IS NO LONGER VALID WITH THIS BRANCH\n========\n[![MIT License](https://img.shields.io/badge/license-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![Build Status](https://img.shields.io/travis/bhanderson/pbnh.svg)](https://travis-ci.org/bhanderson/pbnh)\n[![Coverage Status](https://coveralls.io/repos/github/bhanderson/pbnh/badge.svg?branch=master)](https://coveralls.io/github/bhanderson/pbnh?branch=master)\n\npbnh is our implementation of a pastebin server using flask and postgres or sqlite\n\nIt is highly derived from [silverp1's](https://github.com/silverp1) and [buhman's](https://github.com/buhman) project [pb](https://github.com/ptpb/pb) and they deserve the recognition for this idea.\n\nThe syntax highlighting is done using [codemirrors](https://github.com/codemirror/codemirror) javascript library.\n\nThe icons are from [Font Awesome](https://fortawesome.github.io/Font-Awesome/)\n\npbnh requires at least Python 3.3\n\n## Table of Contents\n * [pbnh](#pbnh)\n * [Table of contents](#table-of-contents)\n * [Installation](#installation)\n * [Usage](#usage)\n    * [Content](#content)\n    * [Sunset](#sunset)\n    * [Mime](#mime)\n * [Render](#rendering)\n * [Tests](#tests)\n * [Dependency](#dependency)\n\n## Installation\nNote, psycopg2 is a C extension module for postgres. You can grab the dependencies by either installing python-psycopg2 from your package manager, or grab libpq-dev as well as python3-dev and gcc if you don't already have them.\n\nTo install the pbnh package:\n```\n$ git clone https://github.com/bhanderson/pbnh.git\n$ cd pbnh\n$ pip install .\n```\n[![asciicast](https://asciinema.org/a/75sd1vwb395kp997phsowfcvs.png)](https://asciinema.org/a/75sd1vwb395kp997phsowfcvs)\n\n## Configuration\nTo configure pbnh, copy the sample config to ~/.config/pbnh/config.yml and edit it as desired. You can also use the default config in conf.py.\n\nTo configure postgres (assuming debian/ubuntu, other distros should be similar):\n```\n# apt install postgres\n# su - postgres\n$ createuser -s $USERNAME\npython3 db/createdb.py\n```\n\n## Configure using docker-compose\n- Install docker-compose by following the instructions here:\n  https://docs.docker.com/compose/install/\n- Copy `sample_config.yml` to `~/.config/pbnh.yml` and configure as desired\n- Build the container with `docker-compose build`\n- Launch the container with `docker-compose up`\n- The webui should be available at `localhost:5000`\n\n## Usage\nYou can create pastes with the webui or though the cli using curl. Currently the only way to upload anything other than text or a redirect is through the cli.\n\nCurl has an option for a form id, you can use c or content to specify the contents of a paste.\n```\ncurl -F content=@file.txt servername.com\n```\nOr you can cat a file\n```\ncat file.txt | curl -F c=@- servername.com\n```\n[![asciicast](https://asciinema.org/a/8q5x4a0wrhtm7e2feok4b9i67.png)](https://asciinema.org/a/8q5x4a0wrhtm7e2feok4b9i67)\nWe also support strings\n```\ncurl -F content=\"hello world!\" servername.com\n```\nTo upload a redirect change the form id to r\n```\ncurl -F r=\"https://www.google.com\" servername.com\n```\nThere are three different inputs allowed in a curl command they are content, sunset, and mime. Sunset and Mime are optional.\n### content or c\nThe content is exactly what it sounds like. The content of the file or the string data you want to paste and can be seen in the examples above.\n### redirect or r\nYou can submit a url to be a 302 redirect by specifying the form as r or redirect\n### sunset\nThe sunset is the amount of time you want this paste to be available. If sunset is specified you may specify for it to last a maximum of 24 hours. If unspecified the sunset value is 0 and the paste will not be removed.\n\nCurrently there is no support for deleting pastes after you create them with a sunset. The sunset is set but no process is cleaning them up.\n```\ncurl -F content=@file.txt -F sunset=10 servername.com\n```\n### mime\nThe mime type is the type of file. If you want automatic syntax highlighting through the webui or want an image to be displayed you can set the mimetype.\nThe default is plain text, pbnh uses [python-magic](https://github.com/ahupp/python-magic) to attempt to guess the buffer mimetype if none is specified.\nA list of mimetypes can be found [here](http://www.freeformatter.com/mime-types-list.html). Only specify the second half of the mimetype.\nFor example for the mimetype 'application/pdf' only specify pdf.\n```\ncurl -F content=@file.txt -F mime=plain servername.com\n```\n## Rendering\nYou can render files as the browser would want to see them by specifying .<extension> in the url\nCurrently things we render with javascript are\n* Markdown (.md)\n* RST (.rst)\n* asciinema (.asciinema)\n## Tests\nTo install the dependencies required for running tests, simply run\n```\npip install -r tests_require.txt\n```\nTests can be ran by running nosetests in the pbnh directory or by specifying a specific test\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}