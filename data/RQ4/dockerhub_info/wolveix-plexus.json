{
  "user": "wolveix",
  "name": "plexus",
  "namespace": "wolveix",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "A suite of tools to help manage your media collection.",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 162,
  "last_updated": "2021-11-09T00:15:47.638599Z",
  "date_registered": "2020-07-05T02:06:27.402889Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "wolveix",
  "has_starred": false,
  "full_description": "# Plexus\nA suite of tools to help manage the media behind a Plex server.\n\n## Docker\nRather than installing the dependencies and downloading Plexus locally, you can run the Plexus Docker image:\n```shell\ndocker run -v $HOME/.config/plexus:/root/.config/plexus -v $HOME/.plexus:/root/.plexus -v /path/to/media:/media wolveix/plexus:latest \n```\n\n## Install\n### Automatic\nYou can automatically install Plexus by running the following line via a supported command line interface:\n``` shell\ncurl https://plexus.wolveix.com/install.sh | sudo bash\n```\n\nIf you don't have superuser priviledges or are using macOS, use this instead:\n``` shell\ncurl https://plexus.wolveix.com/install.sh | bash\n```\n\n### Manual\nAlternatively, you can manually install Plexus to a custom location on your device. You should install sudo if it doesn't already exist on your system.\nInstall any missing dependencies (Debian/Ubuntu):\n``` shell\nsudo apt-get -qq -y update && sudo apt-get -qq -y upgrade\nsudo apt-get -qq -y install curl ffmpeg rsync\n```\n\nInstall any missing dependencies (CentOS/Rhel):\n``` shell\nsudo yum -q -y install epel-release\nsudo yum -q -y update && sudo yum -q -y upgrade\nsudo yum -q -y localinstall --nogpgcheck https://download1.rpmfusion.org/free/el/rpmfusion-free-release-7.noarch.rpm https://download1.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-7.noarch.rpm\nsudo yum -q -y install curl ffmpeg ffmpeg-devel rsync\n```\n\nInstall any missing dependencies (macOS):\n``` shell\nbrew update && brew upgrade\nbrew install curl ffmpeg rsync\n```\n\nCreate all of the temporary folders required:\n``` shell\nmkdir -p $HOME/.config/plexus $HOME/.plexus/encode/convert $HOME/.plexus/encode/converted $HOME/.plexus/rclone /tmp/plexus\n```\n\nDownload the default config file and move it into the correct location:\n``` shell\ncurl -O https://raw.githubusercontent.com/Wolveix/Plexus/master/plexus.conf\nmv plexus.conf \"$HOME\"/.config/plexus/\n```\n\nNext, download the executable itself:\n``` shell\ncurl -O https://raw.githubusercontent.com/Wolveix/Plexus/master/plexus\n```\n\nFinally, correct the file permissions and move it into your respective operating system's application directory. The following example is for Linux:\n``` shell\nchmod u+x plexus && chmod 755 plexus\nsudo chown root:root plexus\nsudo mv plexus /usr/bin/plexus\n```\n\n#### That's it!\n\nPlexus natively supports RClone and a custom build of FFmpeg. You can install any dependencies via Plexus' built-in install function.\n\n### Configuration\n\nThis is the default config file:\n```\naudio_codec=\"aac\"\nblacklist_file=\"$HOME/.plexus/blacklist\"\nconvert_dir=\"$HOME/.plexus/encode/convert\"\nconverted_dir=\"$HOME/.plexus/encode/converted\"\ndeinterlacing=\"true\"\nffmpeg_binary=\"\"\nffmpeg_threads=\"2\"\nffmpeg_preset=\"faster\"\nffprobe_binary=\"\"\nforce_overwrite=\"true\"\nfusermount_binary=\"\"\nhardware_acceleration=\"false\"\nhardware_codec=\"opencl\"\nlist_file=\"$HOME/.plexus/list.txt\"\nmedia_container=\"mkv\"\nmedia_dir=\"/mnt/plexdrive\"\nmount_dir=\"\"\nrclone_binary=\"\"\nrsync_binary=\"\"\nvideo_codec=\"h264\"\nvideo_library=\"libx264\"\n```\n\nWithout changing any options, Plexus will create a list of your files that either don't use the MKV container, x264 video codec or the aac audio codec. You can then process this list by running the encode command which will move through the list and re-encode each file to fit the above three conditions.\n\nOriginal files are replaced by default, but you can disable this by changing the `force_overwrite` value to `false`. You can edit the config file directly (`$HOME/.config/plexus/plexus.conf`) or you can use the built-in config function by running `plexus config`.\n\n### Usage\nThis somewhat varies depending on whether you're planning on encoding local media or media contained on an [RClone remote](https://rclone.org/remote_setup/). Firstly, specify your ideal codecs via the `config` function.\n\n#### Local Media\nRun `plexus list -d /path/to/media` to start building a recursive list of your media which needs to be re-encoded.\n\nOnce the list function has finished its process, you can begin the encoding process by running `plexus encode -l /path/to/list`.\n\n#### Remote Media\nRun `plexus list -d /mount/path/path/to/media -m /mount/path` to start building a recursive list of your media which needs to be re-encoded.\n\nOnce the list function has finished its process, you can begin the encoding process by running `plexus encode -l /path/to/list -r RCloneRemote:`.\n\n### Support\nIf you run into any issues, please [submit an issue via this repo](https://github.com/Wolveix/Plexus/issues/new?assignees=&labels=&template=bug_report.md&title=). If the issue occurs during the encode command, please run the command again with the `--verbose` flag so that we may have a better idea of what's happening.\n\n## Credits\n- Creator: [Robert Thomas](https://github.com/Wolveix)\n- Help: [Greg Probst](https://github.com/gorgarp), [Mason Rowe](https://github.com/MasonR)\n- License: [GNU General Public License v3.0](https://github.com/Wolveix/Plexus/blob/master/LICENSE)",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}