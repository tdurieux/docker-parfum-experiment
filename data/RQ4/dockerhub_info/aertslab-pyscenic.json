{
  "user": "aertslab",
  "name": "pyscenic",
  "namespace": "aertslab",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "pySCENIC is a lightning-fast python implementation of the SCENIC pipeline",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 5,
  "pull_count": 13832,
  "last_updated": "2022-11-21T13:02:04.103299Z",
  "date_registered": "2018-12-20T14:57:17.788556Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "aertslab",
  "has_starred": false,
  "full_description": "pySCENIC\n---\n\npySCENIC is a lightning-fast python implementation of the SCENIC_ pipeline (Single-Cell rEgulatory Network Inference and\nClustering) which enables biologists to infer transcription factors, gene regulatory networks and cell types from\nsingle-cell RNA-seq data.\n\nThe pioneering work was done in R and results were published in [Nature Methods](https://www.nature.com/articles/nmeth.4463).\n\npySCENIC can be run on a single desktop machine but easily scales to multi-core clusters to analyze thousands of cells\nin no time. The latter is achieved via the dask framework for distributed computing.\n\nPlease see also the main [pySCENIC repository](https://github.com/aertslab/pySCENIC).\n\n## Usage\n\npySCENIC is available to use with both Docker and Singularity.  This can be accomplished in two ways: either using the container as as a portal to the pySCENIC command line interface, or interactively as a Jupyter notebook kernel.\n\n### Command line interface\nNote that the feather databases, transcription factors, and motif annotation databases need to be accessible to the container.\nIn the below examples, separate mounts are created for the input, output, and databases directories.\n\nTo run the pySCENIC CLI via Docker, use the following three steps.\nA mount point (or more than one) needs to be specified, which contains the input data and necessary resources).\n\n    docker run -it --rm \\\n        -v /data:/data \\\n        aertslab/pyscenic:0.12.0 pyscenic grn \\\n            --num_workers 6 \\\n            -o /data/expr_mat.adjacencies.tsv \\\n            /data/expr_mat.tsv \\\n            /data/allTFs_hg38.txt\n\n    docker run -it --rm \\\n        -v /data:/data \\\n        aertslab/pyscenic:0.12.0 pyscenic ctx \\\n            /data/expr_mat.adjacencies.tsv \\\n            /data/hg19-tss-centered-5kb-7species.mc9nr.genes_vs_motifs.rankings.feather \\\n            /data/hg19-tss-centered-10kb-7species.mc9nr.genes_vs_motifs.rankings.feather \\\n            --annotations_fname /data/motifs-v9-nr.hgnc-m0.001-o0.0.tbl \\\n            --expression_mtx_fname /data/expr_mat.tsv \\\n            --mode \"custom_multiprocessing\" \\\n            --output /data/regulons.csv \\\n            --num_workers 6\n\n    docker run -it --rm \\\n        -v /data:/data \\\n        aertslab/pyscenic:0.12.0 pyscenic aucell \\\n            /data/expr_mat.tsv \\\n            /data/regulons.csv \\\n            -o /data/auc_mtx.csv \\\n            --num_workers 6\n\n\n---\n## Website\nFor more information, please visit [LCB](https://aertslab.org) and [SCENIC](http://scenic.aertslab.org).\n\n## License\nGNU General Public License v3",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json",
    "application/vnd.oci.image.config.v1+json"
  ],
  "content_types": [
    "image"
  ]
}