{
  "user": "klee",
  "name": "klee",
  "namespace": "klee",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Docker image for KLEE (http://klee.github.io/)",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 18,
  "pull_count": 44701,
  "last_updated": "2022-06-20T19:51:35.638958Z",
  "date_registered": "2015-04-09T19:00:00.114979Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "klee",
  "has_starred": false,
  "full_description": "KLEE Symbolic Virtual Machine\n=============================\n\n[![Build Status](https://travis-ci.com/klee/klee.svg?branch=master)](https://travis-ci.com/klee/klee)\n[![Build Status](https://github.com/klee/klee/workflows/CI/badge.svg)](https://github.com/klee/klee/actions?query=workflow%3ACI)\n[![Build Status](https://api.cirrus-ci.com/github/klee/klee.svg)](https://cirrus-ci.com/github/klee/klee)\n[![Coverage](https://codecov.io/gh/klee/klee/branch/master/graph/badge.svg)](https://codecov.io/gh/klee/klee)\n\n`KLEE` is a symbolic virtual machine built on top of the LLVM compiler\ninfrastructure. Currently, there are two primary components:\n\n  1. The core symbolic virtual machine engine; this is responsible for\n     executing LLVM bitcode modules with support for symbolic\n     values. This is comprised of the code in lib/.\n\n  2. A POSIX/Linux emulation layer oriented towards supporting uClibc,\n     with additional support for making parts of the operating system\n     environment symbolic.\n\nAdditionally, there is a simple library for replaying computed inputs\non native code (for closed programs). There is also a more complicated\ninfrastructure for replaying the inputs generated for the POSIX/Linux\nemulation layer, which handles running native programs in an\nenvironment that matches a computed test input, including setting up\nfiles, pipes, environment variables, and passing command line\narguments.\n\nFor further information, see the [webpage](http://klee.github.io/).\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}