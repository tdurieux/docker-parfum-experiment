{
  "user": "cassproject",
  "name": "cass",
  "namespace": "cassproject",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Competency and Skills Service -- Competency Management",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 4,
  "pull_count": 6929,
  "last_updated": "2023-01-03T19:40:07.433078Z",
  "date_registered": "2018-04-24T00:13:05.290141Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "cassproject",
  "has_starred": false,
  "full_description": "# CaSS\r\nCompetency and Skills Service -- Competency Management\r\n\r\nRelease Candidate: 1.5.21 [![Build Status](https://travis-ci.org/cassproject/CASS.svg?branch=1.5)](https://travis-ci.org/cassproject/CASS)  \r\nSupported: 1.4 [![Build Status](https://travis-ci.org/cassproject/CASS.svg?branch=1.4)](https://travis-ci.org/cassproject/CASS)  \r\nSupported: 1.3 [![Build Status](https://travis-ci.org/cassproject/CASS.svg?branch=1.3)](https://travis-ci.org/cassproject/CASS)  \r\nSupported: 1.2 [![Build Status](https://travis-ci.org/cassproject/CASS.svg?branch=1.2)](https://travis-ci.org/cassproject/CASS)\r\n\r\n[High level documentation](https://docs.cassproject.org)  \r\n[Developer documentation](https://devs.cassproject.org)\r\n\r\n# Purpose of this Document\r\nThis document is intended to act as a technical guide to the installation of CaSS.\r\n\r\nThis installation of CaSS will provide several components that operate to provide a working system. It is composed of:\r\n * The CaSS Repository, a Java application that runs in a Servlet Container, such as Tomcat.\r\n * The CaSS Library, a Javascript library that provides an interoperability layer between web applications and the CaSS Repository.\r\n * CaSS Embeddable Apps, a set of iframeable applications for branded web applications.\r\n * CaSS Adapters, an adapter that interprets xAPI statements and asserts competence, and an adapter that synchronizes competencies and frameworks to and from Moodle.\r\n\r\n# CaSS Libraries\r\n## From GitHub\r\n\r\nhttps://github.com/cassproject/cass-npm\r\n\r\n## NPM\r\n\r\nhttps://www.npmjs.com/package/cassproject\r\n\r\n# Installation\r\n## Ubuntu/Fedora Linux:\r\n\r\n    wget https://raw.githubusercontent.com/cassproject/CaSS/master/scripts/cassInstall.sh\r\n    chmod +x cassInstall.sh\r\n    sudo ./cassInstall.sh\r\n    \r\nDuring the installation, you will be asked to select a version to install. Versions are listed at the top of this document.\r\n\r\n## Docker\r\n\r\nDocker images for standalone instances (based on Ubuntu) and distributed/scalable instances (based on Alpine Linux) can be found at:\r\n\r\nhttps://hub.docker.com/r/cassproject/cass\r\n\r\n# Post Installation\r\nTo support open linked data, it is important that the objects created in CaSS have public, reliable URLs. For this:\r\n\r\n * Assign this server a domain name.\r\n * Enable HTTPS.\r\n * (Optional) Use a reverse proxy to control the endpoint closely.\r\n\r\n# Running Locally\r\nAfter cloning this repository (ensure you use git clone with --recurse-submodules!), you can run CaSS locally.\r\n\r\nDependencies: Docker (will pull and run elasticsearch on port 9200)\r\n\r\n## Getting things up and running\r\n\r\n * `git clone --recurse-submodules -b <branch> https://github.com/cassproject/CASS` - Get the code.\r\n * `npm i` - Install dependencies.\r\n * `npm run dev` - Starts server, restarts server on-save.\r\n\r\n## In a separate command line, if you want unit tests:\r\n\r\n * `npm run automocha` - Runs both cass-npm and cass unit tests, runs them again on-save.\r\n * `npm run automochafast` - Runs cass unit tests, runs them again on-save.\r\n * `npm run mocha` - Runs cass-npm and cass unit tests.\r\n * `npm run mochafast` - Runs cass unit tests.\r\n\r\n## Generating documentation\r\nWill be deposited in `/docs`\r\n\r\n * `npm run docs`\r\n\r\n## Running in myriad environments (requires Docker)\r\n\r\nWhere flavors are: ubuntu16, ubuntu18, ubuntu20, ubuntu18:13to15, standaloneWindows, standalone, testReplication\r\n * `npm run buildRun:<flavor>` - Wipes previous test container, builds and starts flavor container.\r\n * `npm run buildRun:kill` - Stops the running container.\r\n\r\n## Running it like it's in prod\r\n\r\n * `npm run run:cassbase` - Starts PM2 on localhost:8080/cass (used by cassInstall.sh)\r\n * `npm run run:standalone` - Starts PM2 on localhost/ (used by Docker installs)\r\n * `npm run run` - Starts PM2 on localhost:8080/\r\n * `npm run logs` - Tails logs.\r\n * `npm run stop` - Stops all PM2 services.\r\n\r\n To get the process to restart when your linux machine restarts, run `npm run pm2startup`, run the command the process tells you to, and run `npm run pm2save`. For Windows, an additional library is needed to configure this.\r\n\r\n## A note on Elasticsearch and 1.5\r\nDue to the performance improvements in the 1.5 version of CaSS, we highly recommend using Elasticsearch 7 with it as it's better configured to handle the load than previous versions.\r\n\r\n## Release Process\r\n * Review dependencies, autocomplete version numbers\r\n * Increment version number in package.json\r\n * Increment elasticsearch version number to latest minor/revision in docker/standalone/DockerFile (https://hub.docker.com/_/elasticsearch)\r\n * `npm install`\r\n * `npm run testWithCoverage`\r\n * In another command window, `npm run test:mocha` - Must not fail any tests.\r\n * In the command window running testWithCoverage, `ctrl+c`. Record the output of the code coverage for the tests in codeCoverage.md.\r\n * Update src/main/webapp to point at the appropriate gh-pages commit.\r\n * Update CHANGELOG.md\r\n * Update README.md\r\n * Run `npm run buildRun:standaloneTest` to ensure the container can build.\r\n * In another command window, `npm run test:mocha` - Must not fail any tests.\r\n * Commit with release notes.\r\n * Tag commit with version number.",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}