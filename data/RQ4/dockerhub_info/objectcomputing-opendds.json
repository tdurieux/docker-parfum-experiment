{
  "user": "objectcomputing",
  "name": "opendds",
  "namespace": "objectcomputing",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "OpenDDS is an open source C++ implementation of Object Management Group Data Distribution Service.",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 6,
  "pull_count": 15098,
  "last_updated": "2021-11-29T20:11:57.185889Z",
  "date_registered": "2017-08-29T20:27:09.654993Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "objectcomputing",
  "has_starred": false,
  "full_description": "<img src=\"docs/logo.svg\" alt=\"OpenDDS\" width=\"200\">\n\n# OpenDDS\n\n[![Coverity Scan Build Status](https://scan.coverity.com/projects/opendds/badge.svg)](https://scan.coverity.com/projects/opendds)\n\nOpenDDS is an open-source C++ implementation of the Object Management Group's\nspecification \"Data Distribution Service for Real-time Systems\" (DDS), as well\nas some other related specifications. These standards define a set of\ninterfaces and protocols for developing distributed applications based on the\npublish-subscribe and distributed cache models. Although OpenDDS is itself\ndeveloped in C++, Java and JMS bindings are provided so that Java applications\ncan use OpenDDS.  OpenDDS also includes support for the DDS Security and XTypes\nspecifications.\n\nOpenDDS is built on the [ACE](docs/dependencies.md#ace) abstraction layer to\nprovide platform portability.  OpenDDS also leverages capabilities of\n[TAO](docs/dependencies.md#tao), such as its IDL compiler and as the basis of\nthe OpenDDS DCPS Information Repository (DCPSInfoRepo).\n\nThe primary development of OpenDDS was done by\n[Object Computing, Incorporated](http://www.objectcomputing.com) in\nSt. Louis and Phoenix.  It is released under generous license\nterms similar to ACE, TAO and MPC.  See the [`LICENSE`](LICENSE) file for\ndetails.\n\n**Table of Contents:**\n\n* [Documentation](#documentation)\n* [Support](#support)\n* [Features](#features)\n* [Dependencies](#dependencies)\n  * [ACE/TAO](#acetao)\n  * [Perl](#perl)\n  * [Optional Dependencies](#optional-dependencies)\n* [Supported Platforms](#supported-platforms)\n  * [Operating Systems](#operating-systems)\n  * [Compilers](#compilers)\n* [Building and Installing](#building-and-installing)\n* [Quick Start with Docker](#quick-start-with-docker)\n\n## Documentation\n\n- The OpenDDS Developer's Guide is freely downloadable at:\nhttp://download.objectcomputing.com/OpenDDS/\n\n- A Doxygen for the latest release is available at\nhttp://download.opendds.org/doxygen/.\n\n- For developers wanting to contribute to OpenDDS, please take the time to read\n[the developer's guidelines](docs/guidelines.md).\n\nOther documentation can be found in [`docs` directory](docs).\n\n## Support\n\nIf you encounter any problems with this release please fill out the\n[PROBLEM-REPORT-FORM](PROBLEM-REPORT-FORM) file found in this directory and use\nit when posting to the [mailing list](http://opendds.org/support.html) or\ncreating a [GitHub Issue](https://github.com/objectcomputing/OpenDDS/issues).\n\nFor commercial support please see https://opendds.org/support.html.\n\n## Features\n\nThis release of OpenDDS is based on the DDS Specification [formal/2015-04-10\n(version 1.4)](https://www.omg.org/spec/DDS/1.4).  It features the following\ntransport protocols:\n\n* TCP/IP\n* UDP/IP\n* IP multicast\n* RTPS over UDP/IP (unicast and multicast)\n* Shared memory\n\nRTPS (Interoperability) features are based on the [DDS-RTPS Specification\nformal/2019-04-03 (version 2.3)](https://www.omg.org/spec/DDSI-RTPS/2.3).  See\nthe OpenDDS Developer's Guide and the file [docs/design/RTPS](docs/design/RTPS)\nfor more details on RTPS.\n\nSee the [Developer's Guide](http://download.objectcomputing.com/OpenDDS) for\ninformation on OpenDDS compliance with the DDS specification. If you would like\nto contribute a feature or sponsor the developers to add a feature  please see\nthe Support section above for contact information.\n\n## Dependencies\n\nFor a complete detailed list of dependencies, see\n[`docs/dependencies.md`](docs/dependencies.md).\n\n### ACE/TAO\n\nOpenDDS requires TAO for both IDL compilation as well as interaction with the\nDCPSInfoRepo. ACE is also required, but it is always included with TAO. If you\nwill be using the `configure` script for OpenDDS (see the\n[`INSTALL.md`](INSTALL.md) file for details), you do not need to download TAO\nfirst -- the `configure` script will download it for you.\n\nThere are two distributions of ACE/TAO that can be used with OpenDDS:\n\n* OCI ACE/TAO 2.2a patch 20 or later\n  * This will be automatically downloaded by default when using the configure\n    script.\n  * Can be manually downloaded from:\n    * http://download.objectcomputing.com/TAO-2.2a_patches/\n* DOC Group ACE 6.5.13 / TAO 2.5.13 or later in the ACE 6.x / TAO 2.x series\n  * When using the configure script, DOC Group ACE/TAO can be downloaded using\n    one of these arguments:\n    * `--doc-group` for the latest release\n    * `--ace-github-latest` to use the `ace6tao2` branch of ACE/TAO as is. This\n      also downloads the `master` branch of MPC as is.\n  * Can be manually downloaded from:\n    * https://github.com/DOCGroup/ACE_TAO/releases/tag/ACE%2BTAO-6_5_13\n\nThe TAO Developer's Guide book can be requested for free from\nhttps://objectcomputing.com/products/tao/tao-developers-guide\n\n### Perl\n\nPerl is used for the configure script, running the automated tests and examples\nincluded in this source tree, and generating Makefiles or Visual Studio project\nfiles.\n\nOn Windows we recommend the use of [Strawberry Perl](https://strawberryperl.com).\n\n### Optional Dependencies\n\n* [Google Test](docs/dependencies.md#google-test), for various tests.\n  * Google Test is required for OpenDDS tests. If tests are not built, Google Test is not needed.\n* [CMake](docs/dependencies.md#cmake), for building Google Test and the OpenDDS\n  CMake module.\n* [Java](docs/dependencies.md#java), for Java bindings.\n* [Qt](docs/dependencies.md#qt), for Monitor application and ishapes demo.\n* [Wireshark](docs/dependencies.md#wireshark), for the OpenDDS DCPS Wireshark\n  dissector.\n* [RapidJSON](docs/dependencies.md#rapidjson), for optional dissector sample\n  dissection support and JSON typesupport.\n* [Xerces-C++](docs/dependencies.md#xerces), for XML QoS and DDS Security.\n* [OpenSSL](docs/dependencies.md#openssl), for DDS Security.\n\n## Supported Platforms\n\n### Operating Systems\n\nThis release of OpenDDS has been tested under the following platforms:\n\nLinux family:\n* Red Hat EL and CentOS 6.6, 6.8, 6.9 (x86\\_64)\n* Red Hat EL and CentOS 7.2, 7.3, 7.4, 7.5 (x86\\_64)\n* Fedora 24 and 33 (x86\\_64)\n* Debian 9.4 (i686)\n* Ubuntu 18.04 LTS, (x86\\_64)\n* openSUSE 42.1 (x86\\_64)\n\nWindows family:\n* Windows 7 (32-bit, 64-bit)\n* Windows Server 2012 R2 (64-bit)\n* Windows 10 (64-bit)\n\nOthers:\n* macOS 10.15.2 (Catalina)\n\nEmbedded/Mobile/IoT:\n* LynxOS-178 (OpenDDS Safety Profile)\n* VxWorks 6.9 and 7 (see below)\n* [Linux on Raspberry Pi](https://opendds.org/quickstart/GettingStartedPi.html)\n* [Android 9.0 \"Pie\" (API Level 28) NDK r18b](docs/android.md)\n\nWe have built OpenDDS for VxWorks 6.9 and 7 and have run basic\nsystem and performance tests (but not the entire regression test suite).\nPlease contact sales@objectcomputing.com or opendds-main@lists.sourceforge.net\nfor more information on support for ACE, TAO, and OpenDDS on VxWorks.\nOCI's packages for ACE, TAO, and OpenDDS can be obtained on the [Wind River\nMarketplace](https://marketplace.windriver.com/index.php?partners&on=details&id=33).\n\n### Compilers\n\nThis release of OpenDDS has been tested using the following compilers:\n\n* Microsoft Visual C++ 9 with SP1 (Visual Studio 2008)\n* Microsoft Visual C++ 10 with SP1 (Visual Studio 2010)\n* Microsoft Visual C++ 11 (Visual Studio 2012) - Update 4\n* Microsoft Visual C++ 12 (Visual Studio 2013) - Update 5\n* Microsoft Visual C++ 14 (Visual Studio 2015) - Update 3\n* Microsoft Visual C++ 14.1 (Visual Studio 2017) cl 19.16.27044\n* Microsoft Visual C++ 14.2 (Visual Studio 2019) cl 19.28.29335\n* gcc 4.4.7, 4.8.5\n* gcc 6.3\n* gcc 7.2\n* gcc 11.1\n* Clang 12.0.1 (llvm.org) and 11.0.3 (Apple)\n\n## Building and Installing\n\nFor building and installation instructions see the [`INSTALL.md`](INSTALL.md)\nfile in this directory.\n\n## Quick Start with Docker\n\nSee [`docs/docker.md`](docs/docker.md) for how to use the pre-built docker\nimage.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}