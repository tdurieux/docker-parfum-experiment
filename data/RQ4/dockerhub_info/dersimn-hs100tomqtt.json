{
  "user": "dersimn",
  "name": "hs100tomqtt",
  "namespace": "dersimn",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Gateway between TP-Link HS100/HS110 devices and MQTT",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 2987,
  "last_updated": "2019-04-12T23:50:46.280821Z",
  "date_registered": "2017-09-12T21:31:15.798911Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "dersimn",
  "has_starred": false,
  "full_description": "NodeJS script to control TP-Link HS100 & HS110 devices via MQTT.\r\n\r\nTopics:\r\n\r\n\ths100/maintenance/_bridge    /online    -> bool\r\n\ths100/maintenance/<DEVICE_ID>/online    -> bool\r\n\r\n\ths100/status/<DEVICE_ID>    -> JSON: {\"val\":false,\"power\":0,\"voltage\":230.68353,\"current\":0.012407}\r\n\ths100/set   /<DEVICE_ID>    <- bool\r\n\r\n(Spaces here are only for formatting, the actual topics won't have them.)\r\n\r\n## Usage\r\n\r\n### Native\r\n\r\n\tgit clone <this repo URL> HS100toMQTT\r\n\tcd HS100toMQTT\r\n\tnpm install\r\n\tnode index --help\r\n\r\n### Docker\r\n\r\nShow all available options:\r\n\r\n\tdocker run --rm dersimn/hs100tomqtt --help\r\n\r\nStart with:\r\n\r\n\tdocker run -d --net=host dersimn/hs100tomqtt -m mqtt://<MQTT Broker IP>\r\n\r\nIn order to use automatic device discovery, your Docker host has to suport the `--net=host` parameter - not all Docker installations can do this (see *Docker for Mac* [issue](https://forums.docker.com/t/should-docker-run-net-host-work/14215)).  \r\nIf you prefer to run the script in bridge mode or your host doesn't support host networking, provide a list of IP addresses via the `--devices` option:\r\n\r\n\tdocker run -d dersimn/hs100tomqtt -m mqtt://<MQTT Broker IP> --devices=\"10.1.1.100 10.1.1.101\"\r\n\r\n### Blocking internet access for your devices\r\n\r\nEven though there are currently [no known security issues](https://www.softscheck.com/en/reverse-engineering-tp-link-hs110/) for the HS100 / HS110, if you choose to block internet access for your plugs, be aware that the unterlying [tplink-smarthome-api](https://github.com/plasticrake/tplink-smarthome-api) will throw an error on every polling cycle, because the TP-Link devices will have a wrong time set-up (quite obvious: no Internet, no NTP server, no correct set time and date).  \r\n\r\nI've written this [workaround](https://github.com/dersimn/HS100toMQTT/blob/64a364f0336af1cb08791b13346441641fecee26/index.js#L87) until I found a better way to solve this problem: According to [this](https://blog.georgovassilis.com/2016/05/07/controlling-the-tp-link-hs100-wi-fi-smart-plug/) source, the plugs are using `fr.pool.ntp.org` to get their time. If you are able to alter the DNS resolving mechanism of your router (for e.g. when you're using OpenWRT), just make sure to redirect the DNS name to your router IP and setup a local NTP server.\r\n\r\nIn OpenWRT you can configure this with:\r\n\r\n`/etc/config/firewall`:\r\n\r\n\tconfig rule\r\n\t\toption enabled '1'\r\n\t\toption src 'lan'\r\n\t\toption name 'Block HS110'\r\n\t\toption src_mac '00:00:00:00:00:00'\r\n\t\toption dest 'wan'\r\n\t\toption target 'REJECT'\r\n\r\n`/etc/config/dhcp`:\r\n\r\n\tconfig domain\r\n\t\toption name 'fr.pool.ntp.org'\r\n\t\toption ip '10.1.1.1'\r\n\r\n## Development\r\n\r\n### Show debugging output\r\n\r\nFor some reason `Ctrl-C` is not working, workaround:\r\n\r\n\tdocker run --rm -it --name=hs100tomqtt dersimn/hs100tomqtt --mqtt-retain=false -m mqtt://MQTT_IP -v debug\r\n\tCtrl-P Ctrl-Q\r\n\tdocker stop hs100tomqtt\r\n\r\n### Manually build\r\n\t\r\n\tdocker build -t hs100tomqtt .\r\n\tdocker build -t hs100tomqtt:armhf -f Dockerfile.armhf .\r\n\r\n## Credits\r\n\r\nThis project follows [Oliver \"owagner\" Wagner](https://github.com/owagner)'s architectural proposal for an [mqtt-smarthome](https://github.com/mqtt-smarthome/mqtt-smarthome).  \r\nBuilt by copy-pasting together [Sebastian \"hobbyquaker\" Raff](https://github.com/hobbyquaker)'s mqtt-smarthome scripts and [Patrick \"plasticrake\" Seal](https://github.com/plasticrake)'s [tplink-smarthome-api](https://github.com/plasticrake/tplink-smarthome-api).",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}