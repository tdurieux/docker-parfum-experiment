{
  "user": "jhao104",
  "name": "proxy_pool",
  "namespace": "jhao104",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Python爬虫代理IP池(proxy pool)",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 23,
  "pull_count": 139244,
  "last_updated": "2022-08-16T07:25:20.984823Z",
  "date_registered": "2019-09-11T06:36:29.489724Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "jhao104",
  "has_starred": false,
  "full_description": "\nProxyPool 爬虫代理IP池\n=======\n[![Build Status](https://travis-ci.org/jhao104/proxy_pool.svg?branch=master)](https://travis-ci.org/jhao104/proxy_pool)\n[![](https://img.shields.io/badge/Powered%20by-@j_hao104-green.svg)](http://www.spiderpy.cn/blog/)\n[![Requirements Status](https://requires.io/github/jhao104/proxy_pool/requirements.svg?branch=master)](https://requires.io/github/jhao104/proxy_pool/requirements/?branch=master)\n[![Packagist](https://img.shields.io/packagist/l/doctrine/orm.svg)](https://github.com/jhao104/proxy_pool/blob/master/LICENSE)\n[![GitHub contributors](https://img.shields.io/github/contributors/jhao104/proxy_pool.svg)](https://github.com/jhao104/proxy_pool/graphs/contributors)\n[![](https://img.shields.io/badge/language-Python-green.svg)](https://github.com/jhao104/proxy_pool)\n\n    ______                        ______             _\n    | ___ \\_                      | ___ \\           | |\n    | |_/ / \\__ __   __  _ __   _ | |_/ /___   ___  | |\n    |  __/|  _// _ \\ \\ \\/ /| | | ||  __// _ \\ / _ \\ | |\n    | |   | | | (_) | >  < \\ |_| || |  | (_) | (_) || |___\n    \\_|   |_|  \\___/ /_/\\_\\ \\__  |\\_|   \\___/ \\___/ \\_____\\\n                           __ / /\n                          /___ /\n\n### ProxyPool\n\n爬虫代理IP池项目,主要功能为定时采集网上发布的免费代理验证入库，定时验证入库的代理保证代理的可用性，提供API和CLI两种使用方式。同时你也可以扩展代理源以增加代理池IP的质量和数量。\n\n* 文档: [document](https://proxy-pool.readthedocs.io/zh/latest/) [![Documentation Status](https://readthedocs.org/projects/proxy-pool/badge/?version=latest)](https://proxy-pool.readthedocs.io/zh/latest/?badge=latest)\n\n* 支持版本: ![](https://img.shields.io/badge/Python-2.x-green.svg) ![](https://img.shields.io/badge/Python-3.x-blue.svg)\n\n* 测试地址: http://demo.spiderpy.cn (勿压谢谢)\n\n* 付费代理推荐: [luminati-china](https://brightdata.grsm.io/proxyPool). 国外的亮数据BrightData（以前叫luminati）被认为是代理市场领导者，覆盖全球的7200万IP，大部分是真人住宅IP，成功率扛扛的。付费套餐多种，100刀的也有，需要高质量代理ip的可以注册后联系中文客服，开通后有5美金赠送和教程指引。.\n\n\n### 运行项目\n\n##### 下载代码:\n\n* git clone\n\n```bash\ngit clone git@github.com:jhao104/proxy_pool.git\n```\n\n* releases\n\n```bash\nhttps://github.com/jhao104/proxy_pool/releases 下载对应zip文件\n```\n\n##### 安装依赖:\n\n```bash\npip install -r requirements.txt\n```\n\n##### 更新配置:\n\n\n```python\n# setting.py 为项目配置文件\n\n# 配置API服务\n\nHOST = \"0.0.0.0\"               # IP\nPORT = 5000                    # 监听端口\n\n\n# 配置数据库\n\nDB_CONN = 'redis://:pwd@127.0.0.1:8888/0'\n\n\n# 配置 ProxyFetcher\n\nPROXY_FETCHER = [\n    \"freeProxy01\",      # 这里是启用的代理抓取方法名，所有fetch方法位于fetcher/proxyFetcher.py\n    \"freeProxy02\",\n    # ....\n]\n```\n\n#### 启动项目:\n\n```bash\n# 如果已经具备运行条件, 可用通过proxyPool.py启动。\n# 程序分为: schedule 调度程序 和 server Api服务\n\n# 启动调度程序\npython proxyPool.py schedule\n\n# 启动webApi服务\npython proxyPool.py server\n\n```\n\n### Docker运行\n\n```bash\ndocker pull jhao104/proxy_pool\n\ndocker run --env DB_CONN=redis://:password@ip:port/db -p 5010:5010 jhao104/proxy_pool:latest\n```\n\n\n### 使用\n\n* Api\n\n启动web服务后, 默认配置下会开启 http://127.0.0.1:5010 的api接口服务:\n\n| api | method | Description | params|\n| ----| ---- | ---- | ----|\n| / | GET | api介绍 | None |\n| /get | GET | 随机获取一个代理| 可选参数: `?type=https` 过滤支持https的代理|\n| /pop | GET | 获取并删除一个代理| 可选参数: `?type=https` 过滤支持https的代理|\n| /all | GET | 获取所有代理 |可选参数: `?type=https` 过滤支持https的代理|\n| /count | GET | 查看代理数量 |None|\n| /delete | GET | 删除代理  |`?proxy=host:ip`|\n\n\n* 爬虫使用\n\n　　如果要在爬虫代码中使用的话， 可以将此api封装成函数直接使用，例如：\n\n```python\nimport requests\n\ndef get_proxy():\n    return requests.get(\"http://127.0.0.1:5010/get/\").json()\n\ndef delete_proxy(proxy):\n    requests.get(\"http://127.0.0.1:5010/delete/?proxy={}\".format(proxy))\n\n# your spider code\n\ndef getHtml():\n    # ....\n    retry_count = 5\n    proxy = get_proxy().get(\"proxy\")\n    while retry_count > 0:\n        try:\n            html = requests.get('http://www.example.com', proxies={\"http\": \"http://{}\".format(proxy)})\n            # 使用代理访问\n            return html\n        except Exception:\n            retry_count -= 1\n    # 删除代理池中代理\n    delete_proxy(proxy)\n    return None\n```\n\n### 扩展代理\n\n　　项目默认包含几个免费的代理获取源，但是免费的毕竟质量有限，所以如果直接运行可能拿到的代理质量不理想。所以，提供了代理获取的扩展方法。\n\n　　添加一个新的代理源方法如下:\n\n* 1、首先在[ProxyFetcher](https://github.com/jhao104/proxy_pool/blob/1a3666283806a22ef287fba1a8efab7b94e94bac/fetcher/proxyFetcher.py#L21)类中添加自定义的获取代理的静态方法，\n该方法需要以生成器(yield)形式返回`host:ip`格式的代理，例如:\n\n```python\n\nclass ProxyFetcher(object):\n    # ....\n\n    # 自定义代理源获取方法\n    @staticmethod\n    def freeProxyCustom1():  # 命名不和已有重复即可\n\n        # 通过某网站或者某接口或某数据库获取代理\n        # 假设你已经拿到了一个代理列表\n        proxies = [\"x.x.x.x:3128\", \"x.x.x.x:80\"]\n        for proxy in proxies:\n            yield proxy\n        # 确保每个proxy都是 host:ip正确的格式返回\n```\n\n* 2、添加好方法后，修改[setting.py](https://github.com/jhao104/proxy_pool/blob/1a3666283806a22ef287fba1a8efab7b94e94bac/setting.py#L47)文件中的`PROXY_FETCHER`项：\n\n　　在`PROXY_FETCHER`下添加自定义方法的名字:\n\n```python\nPROXY_FETCHER = [\n    \"freeProxy01\",    \n    \"freeProxy02\",\n    # ....\n    \"freeProxyCustom1\"  #  # 确保名字和你添加方法名字一致\n]\n```\n\n\n　　`schedule` 进程会每隔一段时间抓取一次代理，下次抓取时会自动识别调用你定义的方法。\n\n### 免费代理源\n\n   目前实现的采集免费代理网站有(排名不分先后, 下面仅是对其发布的免费代理情况, 付费代理测评可以参考[这里](https://zhuanlan.zhihu.com/p/33576641)): \n   \n  |   代理名称   |  状态  |  更新速度 |  可用率  |  地址 |    代码   |\n  | ---------   |  ---- | --------  | ------  | ----- |   ------- |\n  | 米扑代理     |  ✔    |     ★     |   *     | [地址](https://proxy.mimvp.com/)   | `freeProxy01`  |\n  | 66代理      |   ✔   |     ★★     |   *    | [地址](http://www.66ip.cn/)         |  `freeProxy02` |\n  | Pzzqz       |  ✔    |     ★     |   *     | [地址](https://pzzqz.com/)          | `freeProxy03`  |\n  | 神鸡代理     |  ✔    |    ★★★    |   *     | [地址](http://www.shenjidaili.com/) | `freeProxy04`  |\n  | 快代理       |  ✔    |     ☆     |   *     | [地址](https://www.kuaidaili.com/)  | `freeProxy05`  |\n  | 极速代理     |  ✔    |    ★★★    |   *     | [地址](https://proxy.coderbusy.com/)| `freeProxy06`  |\n  | 云代理       |  ✔    |     ★     |   *     | [地址](http://www.ip3366.net/)      |  `freeProxy07` |\n  | 小幻代理     |  ✔    |     ★★    |    *    | [地址](https://ip.ihuan.me/)        | `freeProxy08`   |\n  | 免费代理库   |  ✔    |      ☆    |    *    | [地址](http://ip.jiangxianli.com/)  |   `freeProxy09` |\n  | 89代理      |  ✔    |      ☆     |   *    | [地址](https://www.89ip.cn/)         | `freeProxy13` |\n  | 西拉代理    |  ✔     |     ★★    |   *     | [地址](http://www.xiladaili.com/)   | `freeProxy14` |\n\n  \n  如果还有其他好的免费代理网站, 可以在提交在[issues](https://github.com/jhao104/proxy_pool/issues/71), 下次更新时会考虑在项目中支持。\n\n### 问题反馈\n\n　　任何问题欢迎在[Issues](https://github.com/jhao104/proxy_pool/issues) 中反馈，同时也可以到我的[博客](http://www.spiderpy.cn/blog/message)中留言。\n\n　　你的反馈会让此项目变得更加完美。\n\n### 贡献代码\n\n　　本项目仅作为基本的通用的代理池架构，不接收特有功能(当然,不限于特别好的idea)。\n\n　　本项目依然不够完善，如果发现bug或有新的功能添加，请在[Issues](https://github.com/jhao104/proxy_pool/issues)中提交bug(或新功能)描述，我会尽力改进，使她更加完美。\n\n　　这里感谢以下contributor的无私奉献：\n\n　　[@kangnwh](https://github.com/kangnwh) | [@bobobo80](https://github.com/bobobo80) | [@halleywj](https://github.com/halleywj) | [@newlyedward](https://github.com/newlyedward) | [@wang-ye](https://github.com/wang-ye) | [@gladmo](https://github.com/gladmo) | [@bernieyangmh](https://github.com/bernieyangmh) | [@PythonYXY](https://github.com/PythonYXY) | [@zuijiawoniu](https://github.com/zuijiawoniu) | [@netAir](https://github.com/netAir) | [@scil](https://github.com/scil) | [@tangrela](https://github.com/tangrela) | [@highroom](https://github.com/highroom) | [@luocaodan](https://github.com/luocaodan) | [@vc5](https://github.com/vc5) | [@1again](https://github.com/1again) | [@obaiyan](https://github.com/obaiyan) | [@zsbh](https://github.com/zsbh) | [@jiannanya](https://github.com/jiannanya)\n\n\n### Release Notes\n\n   [changelog](https://github.com/jhao104/proxy_pool/blob/master/docs/changelog.rst)\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}