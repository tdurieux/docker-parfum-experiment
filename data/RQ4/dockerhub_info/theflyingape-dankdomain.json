{
  "user": "theflyingape",
  "name": "dankdomain",
  "namespace": "theflyingape",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "∆äa…≥∆ô ∆äo…±ai…≥ :: the return of Hack & Slash",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 78,
  "last_updated": "2022-09-19T08:22:36.842645Z",
  "date_registered": "2020-12-30T13:17:56.034636Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "theflyingape",
  "has_starred": false,
  "full_description": "# üè∞ ∆äa…≥∆ô ∆äo…±ai…≥ :: _the return of Hack &amp; Slash_\n\n<a href=\"https://robert.hurst-ri.us\"><img src=\"https://avatars.githubusercontent.com/theflyingape\" title=\"Robert Hurst\" align=\"right\"></a>\n\n- [Player's Manual](#players-manual)\n- [Installation](#installation)\n- [FAQ](#faq)\n- [Files directory structure](#files-directory-structure)\n- [Gallery](#gallery)\n- [Node.js dependency tree](#nodejs-dependency-tree)\n\n---\n\n![screenshot](https://raw.githubusercontent.com/theflyingape/dankdomain/master/game/portal/static/assets/title.jpg \"Can you defeat the Demogorgon?\")\n\n## Player's Manual\n\n_Read the_ [Manual](https://manual.ddgame.us) _to play the_ [online game](https://play.ddgame.us)\n\n---\n>**∆äa…≥∆ô ∆äo…±ai…≥** is the re-imagined classic Amiga bulletin board, [Hack & Slash](https://github.com/theflyingape/rpgbbs), built around a medieval role-playing atmosphere. Your character kills, steals, brawls, and jousts other PCs, NPCs, and BOTs to gain levels and fortune. Successful ventures into the deep dank dungeon are key to immortality.\n\n*Original Commodore Amiga* **Hack & Slash** *enthusiasts can visit:*  [Absinthe BBS](https://www.telnetbbsguide.com/bbs/absinthe-bbs/) *by Anachronist*\n\n---\n\n[![NPM](https://nodei.co/npm/dankdomain.png?compact=true)](https://nodei.co/npm/dankdomain/)\n\n[![Code Preview](https://badgen.net/badge/Preview/VS%20Code/blue?icon=github)](https://open.vscode.dev/theflyingape/dankdomain) _... or just press_ `dot (.)` _on your keyboard_\n\n![npm version](https://img.shields.io/node/v/dankdomain) ![Libraries.io dependency status for latest release](https://img.shields.io/librariesio/release/npm/dankdomain?style=plastic) ![GitHub milestones](https://img.shields.io/github/milestones/closed/theflyingape/dankdomain)\n\n## Installation\n\nProject development on `Chrome OS` and `Linux` with the `Node.js` runtime. To run a local game copy, click the `VS Code` icon above or manually [install](https://www.npmjs.com/package/dankdomain):\n\n```bash\n# fetch this package source:\n$ git clone https://github.com/theflyingape/dankdomain\n# ... or via Node.js\n$ npm install dankdomain\n\n# cd into package source folder:\n$ npm install\n\n# 1) play it as standalone:\n$ npm run play\n\n# modify for your server networking preferences:\n$ cp etc/network.json_inet etc/network.json\n$ vim etc/network.json\n\n# 2) run it as a local multiuser server:\n$ npm run net &\n$ npm run term\n$ npm stop\n\n# 3) other ways to play online:\n$ npm run mame\n$ npm run term play.ddgame.us\n$ telnet play.ddgame.us\nConnected to play.ddgame.us.\nEscape character is '^]'.\nCARRIER DETECTED\nPC emulation enabled\n            ...........|\\...................../|................. Welcome to\n             ........./  \\..|\\__  __/|......./  \\............... Dank Domain\n            ........./ /  \\.\\ _ \\/ _ /....../    \\.............\n      _  .........../ / /  \\.(-)\\/(-)....../  / \\ \\.............\n     (_)  ..........| | | / \\\\/(oo)\\/...../  // |\\ \\.............\n          ..........| | | |  \\|v--v|\\..../  / | || \\|...........\n        ............| | | | / \\_^^_/ \\../  / || || ||.............\n           ......../ / /  | |   \\/    \\/  /| || || ||/\\../\\....\n            /\\..../ / /  / /  |______/   /| \\ \\ || ||  \\/  \\    /\\        /\\\n /\\      /\\/  \\../ / /  / /  /\\_____/  |/ /__\\ \\ \\ \\ \\ /    \\  /  \\  /\\  /  \\\n/  \\/\\  / /    \\.| | | / /  /\\______/    \\   \\__| \\ \\ \\      \\/    \\/  \\/    \\\n    \\ \\/        \\| | | | | |\\______       \\_    \\__|_| \\     /      \\  /\n     \\/          | | ____ /\\______ ____     \\_       \\  |   /         /\n      \\          | |/    /\\_____  /    \\      \\__     \\ |\n       \\         |/ |   |\\______ |      |        \\___  \\|\n                    |   |\\______ |      |            \\_\n            _   ___/|   |\\______ |      |          /\\  \\   ___\n           / \\_/     \\   \\________\\_    _\\____/   /  \\__\\_|   \\\n       ___/ __     __/   /       __/   /__    \\__/      __     \\__\n     _/    /  \\   /  ___/       /  ___/   \\            /  \\       |__\n    |     |      |/|/          |/|/        \\__    \\        \\         |\n\nWho dares to enter my dank domain <or NEW>?\n```\n\n**NOTE**: _my_ \"public\" _access [packages](https://github.com/theflyingape?tab=packages&visibility=public) are published on_ **GitHub** _and it requires your_ `Personal Access Token` authentication _to fetch/install them from this alternative_ `npm registry`. Read GitHub's [Working with the npm registry](https://docs.github.com/en/enterprise-server@2.22/packages/working-with-a-github-packages-registry/working-with-the-npm-registry#authenticating-to-github-packages) to learn more details.\n\n```bash\n# setup local Node.js package\n$ npm config set @theflyingape:registry https://npm.pkg.github.com\n$ npm login --scope=@theflyingape\n$ npm install @theflyingape/dankdomain\n```\n\n... or use **Docker** _(convenient and uses the latest commits)_:\n\n```linux\n$ docker pull theflyingape/dankdomain\n$ docker run --rm -it -p 1939:1939/tcp -p 1986:1986/tcp theflyingape/dankdomain\n\nDank Domain (DDnet) started on linux #661\ncwd /usr/games/dankdomain/game ‚Üí /usr/games/dankdomain/game/portal\ninitializing Deeds\ninitializing Online\ninitializing Rings (unique)\n + adding ‚öõÔ∏è Atomic\n + adding ‚úùÔ∏è Faith\n + adding ‚ôæÔ∏è Infinity\n + adding üêç Medusa's\n + adding üï≥Ô∏è Mystic Portal\n + adding üëπ Ogre\n + adding üñ§ Undying\n + adding ‚ö™ White Wizard\ninitializing Players\ninitializing Gangs\n + adding AB Original with BOT+NPC members\n + adding (the) Monster Mash\nENOENT: no such file or directory, open '/usr/games/dankdomain/game/etc/network.json'\n‚Üí listening on telnet 0.0.0.0:1986\n‚Üí listening on https://0.0.0.0:1939/\n‚Üî WebSocket endpoints enabled\n```\n\nSupports running as a BBS door (as Amiga-only BBSes did for `Hack & Slash` in 1994) by allowing a passed user numeric ID paired with a compatible **Mystic** `door.sys` [file format](http://wiki.mysticbbs.com/doku.php?id=menu_commands#external_doors) launched from its `BBS node` startup directory. Here is how to _freshly_ unit-test that app startup mode:\n\n```bash\n[~/dankdomain]$ npm run clean\n[~/dankdomain]$ cd game\n[~/dankdomain/game]$ cp door-example.sys door.sys\n[~/dankdomain/game]$ node main 0\n```\n\nFor example, configure to call-out to a script with two (2) parameters: `userId` and the path with filename to `door.sys`\n\n```bash\n#!/bin/sh\npwd; [ -s \"$2\" ] || exit 1\ncp \"$2\" /usr/local/games/dankdomain/door.sys\nnode /usr/local/games/dankdomain/main \"$1\"\n```\n\n## FAQ\n\n- What does `etc/sysop.json` do? How do you assign sysop privileges?\n\n_This file simply regulates some of the game features loaded at_ `runtime`_. The first Player (non-NPC) to register is automatically entitled as the Ruler off the last object entry in_ `files/items/title.json` _which is packaged here as either the_ (M) King _or_ (F) Queen `access` _role. The Ruler alone is granted with minor \"favor\" over their domain, but aligned with the game play & spirit if not abused. Other roles can have_ `sysop: true` _enabled to gain access to_ `\"@\"` _and some overlapping favor with the Ruler as you'd expect from a minion._\n\n**NOTE**: _in_ `users` _folder, edit a hidden (dot) export file to carefully modify any Player's record and save as_ **`save.json`** _whereas a running DDnet_ `app.js` _portal service_ (`npm run net`) _will automatically consume and apply it to the_ `dankdomain.sql` **`Players`** _table._\n\n- What's the best way to modify Player time limits and timeouts throughout the game?\n\n_Refer to_ `files/items/title.json` _for player runtime values based on their_ `access` _role -- assigned or achieved by reaching the next_ `promote` _level. There are no soft-coded values for the timeouts assigned to the various prompts. Those have been specially tweaked to keep turn-play moving along -- appropriately. That said, try modifying_ `vt.defaultTimeout` _seconds in_ `main.js` _to your liking._\n\n## Files directory structure\n\nFor the Portal, consider downloading media packs: üì∑ [images](https://drive.google.com/open?id=1jjLPtGf_zld416pxytZfbfCHREZTghkW) and üîâ [sounds](https://drive.google.com/open?id=1UvqQJbN61VbWVduONXgo1gm9yvGI0Qp8) into the appropriate game/portal/static folder:\n\n```linux\n$ pwd\n/usr/games/dankdomain\n.vscode           Visual Studio Code: settings & debug profiles\ngame\n  etc             sysop support files\n  files           game, menu & player support files: ANSI and/or text formats\n    arena         ASCII art & menu files\n    casino        menu files\n    dungeon       ASCII art\n    items         game artifacts\n    library       deeds & menu files\n    main          about system & menu files\n    naval         ASCII art & menu files\n    party         instruction & menu files\n    player        ASCII art\n    square        menu files\n    tavern        all player events logged for the day\n    user          each player‚Äôs events logged since last visit\n  pcs             user object type templates for BOTs, NPCs, and PCs\n  play            game modules for each main menu item\n    battle.js     support module for player engagements\n    init.js       support module for initial login\n    runtime.json  game play runtime values\n    sysop.js      support module for the system operator - main menu \"@\" command\n  portal\n    static        UI html/css/js using bundle.js: client.js & xterm.js\n      assets      app install, fonts, etc.\n      images      visual media for artifacts, creatures, and players\n      sounds      audio media for event notifications\n    app.js        DDnet for optional web and/or telnet services to run DDplay remotely\n  users           player runtime database & current game files\n  db.js           net & play module for player runtime database & files\n  email.js        support module for (optional) dispatching email notifications\n  interfaces.js   TypeScript object types\n  items.js        support module for loading item artifacts & coin\n  lib.js          support module for common I/O functions\n  main.js         DDplay client node\n  npc.js          support classes for BOTs & NPCs with arena, dungeon, and naval denizens\n  pc.js           support classes for PCs with Deeds\n  player.js       support module for common PC functions\n  runtime.js      global runtime variables to govern play\n  sys.js          support module with discrete functions to dependencies\n  telnet.js       telnet client using websocket and XT emulator handling\n  types.js        TypeScript template literals\nmame              player - MAME VT240 terminal + socat startup script\nnode_modules      Node.js support libraries\npackage.json      Node.js manifest\n```\n\n üá∫üá∏ ¬©Ô∏è1991 - 2022 [Robert Hurst](https://www.linkedin.com/in/roberthurstrius/)\n\n## Gallery\n\n- [Arena](https://photos.app.goo.gl/sZS7xx6rpyoG4CYBA)\n- [Connect](https://photos.app.goo.gl/AeZZXrC8VKnMFuqj8)\n- [Dungeon](https://photos.app.goo.gl/XfQTJ2NrKdVWJext9)\n- [Images](https://photos.app.goo.gl/wXpBUtrY2L64SrEH6)\n- [Monster](https://photos.app.goo.gl/rTRm8xDbF2wGJDFZ7)\n- [Naval](https://photos.app.goo.gl/w6v8Zk4GVBc3CbAA6)\n- [NPC](https://photos.app.goo.gl/T4QQT87U1eZK6EHk8)\n- [Player](https://photos.app.goo.gl/BCEAJjynqHZKxpaX9)\n- [Potion](https://photos.app.goo.gl/Gj9HYSXQUDGVcviJ7)\n- [Ring](https://photos.app.goo.gl/SWQDdytqjdXNfT4m7)\n- [Specials](https://photos.app.goo.gl/Dn2g2BtdwtKSbudu7)\n- [User](https://photos.app.goo.gl/hfTJ8EstLPSp4Kry6)\n\n## Node.js dependency tree\n\n**DDnet** portal\n\n**`app`**\n\n- `chokidar`, `dns`, `express`, `fs`, `http`, `https`, `net`, `node-pty`, `ws`\n- `sys`: `fs`, `got`, `path`, `romanize`, `sprintf-js`, `title-case`\n- `items`: sys\n- `db`: `better-sqlite3`, items, sys\n- _network service options_\n  - telnet: `net-keepalive`, `telnet-socket`\n  - web: `url`\n\n**`client`**\n\n- `animate.css`, `browserify`, `xterm`, `xterm-addon-fit`, `xterm-addon-unicode11`\n\n**DDplay** game\n\n**`main`**\n\n- `sys`: `country-flag-emoji`, `fs`, `fast-geoip` `got`, `path`, `romanize`, `sprintf-js`, `title-case`\n- `lib`: items, runtime, sys, `xvt`\n  - `items`: sys\n  - `runtime`: sys\n- `init`: db, items, lib, npc, pc, player, runtime, sys\n  - `db`: `better-sqlite3`, items, sys\n  - `pc`: db, items, lib, runtime, sys\n  - `npc`: db, items, lib, pc, runtime, sys\n  - `player`: db, items, lib, npc, pc, runtime, sys\n  - `email`: db, items, lib, `nodemailer`, `nodemailer-smtp-transport`, pc, runtime, sys\n  - `newuser`: db, email, init, items, lib, pc, runtime, sys\n  - `taxman`: db, items, lib, pc, player, runtime, sys\n    - `battle`: db, items, lib, npc, pc, player, runtime, sys\n    - `menu`: battle, db, items, lib, npc, pc, player, runtime, sys\n      - `arena`: battle, db, items, lib, npc, pc, player, runtime, sys\n      - `casino`: db, items, lib, npc, pc, player, runtime, sys\n      - `dungeon`: battle, db, items, lib, npc, pc, player, runtime, sys\n      - `library`: db, items, lib, npc, pc, runtime, sys\n      - `naval`: battle, db, items, lib, npc, pc, player, runtime, sys\n      - `party`: battle, db, items, lib, npc, pc, player, runtime, sys\n      - `square`: battle, db, items, lib, npc, pc, player, runtime, sys\n      - `sysop`: battle, db, dungeon, email, lib, pc, player, runtime, sys\n      - `tavern`: battle, db, items, lib, npc, pc, player, runtime, sys, taxman\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}