{
  "user": "nekmo",
  "name": "amazon-dash",
  "namespace": "nekmo",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Hack your Amazon Dash to run what you want.",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 6,
  "pull_count": 2430983,
  "last_updated": "2019-01-12T17:36:19.245288Z",
  "date_registered": "2018-08-21T17:45:17.653821Z",
  "collaborator_count": 1,
  "affiliation": null,
  "hub_user": "nekmo",
  "has_starred": false,
  "full_description": "\n\n.. image:: https://raw.githubusercontent.com/Nekmo/amazon-dash/master/amazon-dash.png\n    :width: 100%\n\n|\n\n\n.. image:: https://img.shields.io/travis/Nekmo/amazon-dash/develop.svg?style=flat-square&maxAge=2592000\n  :target: https://travis-ci.org/Nekmo/amazon-dash\n  :alt: Latest Travis CI build status\n\n.. image:: https://img.shields.io/pypi/v/amazon-dash.svg?style=flat-square\n  :target: https://pypi.org/project/amazon-dash/\n  :alt: Latest PyPI version\n\n.. image:: https://img.shields.io/pypi/pyversions/amazon-dash.svg?style=flat-square\n  :target: https://pypi.org/project/amazon-dash/\n  :alt: Python versions\n\n.. image:: https://img.shields.io/codeclimate/github/Nekmo/amazon-dash.svg?style=flat-square\n  :target: https://codeclimate.com/github/Nekmo/amazon-dash\n  :alt: Code Climate\n\n.. image:: https://img.shields.io/codecov/c/github/Nekmo/amazon-dash/master.svg?style=flat-square\n  :target: https://codecov.io/github/Nekmo/amazon-dash\n  :alt: Test coverage\n\n.. image:: https://img.shields.io/requires/github/Nekmo/amazon-dash.svg?style=flat-square\n     :target: https://requires.io/github/Nekmo/amazon-dash/requirements/?branch=master\n     :alt: Requirements Status\n\n\nPython Amazon Dash\n##################\nHack your Amazon Dash to run what you want. Without welders. For the entire family.\n\nThis program written in Python runs in daemon mode waiting for someone in the same\nnetwork to press a configured Amazon Dash button. It is not necessary to know\nprogramming to use this program. Amazon-Dash executes **commands by command line,\ncalls a url and more**. This program works well on a **Raspberry PI** or on computers\nwith few resources.\n\n\n1. **Install** Amazon Dash:\n\n.. code:: console\n\n    $ sudo pip install amazon-dash  # and after:\n    $ sudo python -m amazon_dash.install\n\nAlso available on `AUR <https://aur.archlinux.org/packages/amazon-dash-git/>`_ and\n`FreeNAS <http://docs.nekmo.org/amazon-dash/installation.html#freenas>`_. See other installation methods\n`in the documentation <http://docs.nekmo.org/amazon-dash/installation.html>`_.\n\n\n2. Use *discovery mode* **to know the mac of your Dash** (Run the program, and then press any button):\n\n.. code-block:: console\n\n    $ sudo amazon-dash discovery\n\n\n3. Edit **config file** (``/etc/amazon-dash.yml``):\n\n.. code-block:: yaml\n\n    # amazon-dash.yml\n    # ---------------\n    settings:\n      delay: 10\n    devices:\n      0C:47:C9:98:4A:12: # Command example\n        name: Hero\n        user: nekmo\n        cmd: spotify\n      AC:63:BE:75:1B:6F: # SSH example\n        name: Tassimo\n        cmd: door --open\n        ssh: 192.168.1.23:2222\n      AC:63:BE:67:B2:F1: # Url Webhook example\n        name: Kit Kat\n        url: 'http://domain.com/path/to/webhook'\n        method: post\n        content-type: json\n        body: '{\"mac\": \"AC:63:BE:67:B2:F1\", \"action\": \"toggleLight\"}'\n        confirmation: send-tg\n      40:B4:CD:67:A2:E1: # Home Assistant example\n        name: Fairy\n        homeassistant: hassio.local\n        event: toggle_kitchen_light\n      18:74:2E:87:01:F2: # OpenHAB example\n        name: Doritos\n        openhab: 192.168.1.140\n        item: open_door\n        state: \"ON\"\n        confirmation: send-pb\n      44:65:0D:75:A7:B2: # IFTTT example\n        name: Pompadour\n        ifttt: cdxxx-_gEJ3wdU04yyyzzz\n        event: pompadour_button\n        data: {\"value1\": \"Pompadour button\"}\n    confirmations:\n      send-tg:\n        service: telegram\n        token: '402642618:QwGDgiKE3LqdkNAtBkq0UEeBoDdpZYw8b4h'\n        to: 24291592\n        is_default: false\n      send-pb:\n        service: pushbullet\n        token: 'o.BbbPYjJizbPr2gSWgXGmqNTt6T9Rew51'\n        is_default: false\n\n\n**UPGRADE** from `previous versions <http://docs.nekmo.org/amazon-dash/installation.html>`_\n\nThe following execution methods are supported with your Amazon Dash button with this program:\n\n================================  ================================  ================================\n.. image:: https://goo.gl/VqgMZJ  .. image:: https://goo.gl/a6TS7X  .. image:: https://goo.gl/zrjisq\n`System command`_                 `Call url`_                       `Homeassistant`_\n.. image:: https://goo.gl/Cq4bYC  .. image:: https://goo.gl/L7ng8k\n`OpenHAB`_                        `IFTTT`_\n================================  ================================  ================================\n\n\nAmazon-dash also allows you to **send a confirmation** after pressing a button. You will also receive a message in\ncase of failure. **Telegram** and **Pushbullet** are supported.\n\n\nFor more information see\n`the documentation of the configuration file <http://docs.nekmo.org/amazon-dash/config_file.html>`_.\n\n\n4. Run the **daemon**:\n\nIf you use a **Systemd** system *(Debian 8+, Fedora 15+, Ubuntu 15.04+, Arch Linux 2012+, OpenSUSE 12.1+, and more)*\nexecute:\n\n.. code-block:: console\n\n    $ sudo systemctl start amazon-dash\n\nTo run Amazon-dash at **startup**:\n\n.. code-block:: console\n\n    $ sudo systemctl enable amazon-dash\n\n\nTo run Amazon-dash manually look at `the documentation <http://docs.nekmo.org/amazon-dash/usage.html>`_.\n\n\n5. **Avoid making a purchase** by pressing the button\n\nThis program detects when your button connects to the network to execute actions, but does not prevent the ordering.\nThe easiest way to avoid making a purchase is to reconfigure the button using the Amazon instructions\n(by pressing the button for 5 seconds) but **skipping the last configuration step** *(do not choose which product you\nwant to associate with the button)*. If Amazon does not know what product you want, they can not charge anything on\nyour credit card.\n\nThere are two more methods `in the documentation. <http://docs.nekmo.org/amazon-dash/avoid_purchase.html>`_\n\n\nDocker\n======\nUsing Amazon Dash within docker is easy! First, pull the Docker image:\n\n.. code-block:: console\n\n    $ docker pull nekmo/amazon-dash:latest\n\nThen, create a container and run Amazon Dash itself:\n\n.. code-block:: console\n\n    $ docker run -it --network=host \\\n                 -v </full/path/path/to/amazon-dash.yml>:/config/amazon-dash.yml \\\n                 nekmo/amazon-dash:latest \\\n                 amazon-dash run --ignore-perms --root-allowed \\\n                                 --config /config/amazon-dash.yml\n\n\nJoin the community\n==================\nDo you need ideas on how to use Amazon Dash? See what the community does with this project. Some examples:\n\n* `The Simpsons Random Episode <http://docs.nekmo.org/amazon-dash/community.html#the-simpsons-random-episode>`_\n* `Shopping list in Google Keep <http://docs.nekmo.org/amazon-dash/community.html#shopping-list-in-google-keep>`_\n* `Play a audio <http://docs.nekmo.org/amazon-dash/community.html#play-a-audio>`_\n\nSee all the examples `in the community`_.\n\n\n.. _System command: http://docs.nekmo.org/amazon-dash/config_file.html#execute-cmd\n.. _Call url: http://docs.nekmo.org/amazon-dash/config_file.html#call-url\n.. _Homeassistant: http://docs.nekmo.org/amazon-dash/config_file.html#homeassistant-event\n.. _OpenHAB: http://docs.nekmo.org/amazon-dash/config_file.html#openhab-event\n.. _IFTTT: http://docs.nekmo.org/amazon-dash/config_file.html#ifttt-event\n.. _in the community: http://docs.nekmo.org/amazon-dash/community.html\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}