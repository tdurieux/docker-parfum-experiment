{
  "user": "healpy",
  "name": "healpy",
  "namespace": "healpy",
  "repository_type": null,
  "status": 0,
  "status_description": "initialized",
  "description": "Healpy is a python package to work with the HEALPix format.",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 0,
  "last_updated": "2018-11-04T05:37:00.493905Z",
  "date_registered": "2018-11-04T05:37:00.493905Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "healpy",
  "has_starred": false,
  "full_description": "====================================\nHealpy, a python wrapper for healpix\n====================================\n\n.. image:: https://travis-ci.org/healpy/healpy.png?branch=master\n   :target: https://travis-ci.org/healpy/healpy\n\n.. image:: https://readthedocs.org/projects/healpy/badge/?version=latest\n   :target: https://readthedocs.org/projects/healpy/?badge=latest\n   :alt: Documentation Status\n\nDescription\n-----------\n\n`healpy` is a Python package to handle pixelated data on the sphere. It is based on the\n`Hierarchical Equal Area isoLatitude Pixelization (HEALPix) <https://healpix.jpl.nasa.gov/>`_\nscheme and bundles the `HEALPix` C++ library.\n\n`HEALPix` was developed to efficiently process Cosmic Microwave Background data from Cosmology\nexperiments like BOOMERANG and WMAP but it is now used in other branches of Astrophysics to\nstore data from all-sky surveys. The target audience used to be primarily the Cosmology\nscientific community but currently anyone interested in handling pixelated data on the sphere\nis very welcome to propose new features.\n\nCapabilities\n------------\n\n`healpy` provides utilities to:\n\n* convert between sky coordinates and pixel indices in `HEALPix` nested and ring schemes\n* find pixels within a disk, a polygon or a strip in the sky\n* apply coordinate transformations between Galactic, Ecliptic and Equatorial reference frames\n* apply custom rotations either to vectors or full maps\n* read and write `HEALPix` maps to disk in FITS format\n* upgrade and downgrade the resolution of existing `HEALPix` maps\n* visualize maps in Mollweide, Gnomonic and Cartographic projections\n* transform maps to Spherical Harmonics space and back using multi-threaded C++ routines\n* compute Auto and Cross Power Spectra from maps and create map realizations from spectra\n\nThe documentation can be found at https://healpy.readthedocs.io, tutorial at\nhttps://healpy.readthedocs.io/en/latest/tutorial.html.\n\nRequirements\n------------\n\n* `Python <http://www.python.org>`_ 2.7, 3.5, or 3.6\n\n* `Numpy <http://numpy.scipy.org/>`_ (tested with version >=1.5.0)\n\n* `Matplotlib <http://matplotlib.sourceforge.net/>`_ \n\n* Python development package is required for some distribution (e.g.,\n  python-dev package for Ubuntu)\n\n* `Astropy <http://www.astropy.org>`_\n\nQuick installation with Pip\n---------------------------\n\nThe quickest way to install Healpy is with `pip <http://www.pip-installer.org>`_\n(>= 1.4.2), which automatically fetches the latest version of Healpy and any\nmissing dependencies::\n\n    pip install --user healpy\n\nIf you have installed with ``pip``, you can keep your installation up to date\nby upgrading from time to time::\n\n    pip install --user --upgrade healpy\n\nSee `INSTALL.rst <https://github.com/healpy/healpy/blob/master/INSTALL.rst>`_\nfor further details and other installation options.\n\nOptional\n--------\n\nHealpy depends on the `HEALPix` C++ and cfitsio C libraries. Source code is\ninclude with Healpy and you do not have to install them separately.\n\nHowever, if you have them installed already, Healpy should detect and reuse\nthem instead of building them from source. To use your own installations of\n`HEALPix` and cfitsio, you will also need:\n\n* `pkg-config <http://pkg-config.freedesktop.org>`_\n\n* `HEALPix\n  <http://sourceforge.net/projects/healpix/files/Healpix_3.11/autotools_packages/>`_\n  autotools-style C++ package\n\n* `cfitsio <http://heasarc.gsfc.nasa.gov/fitsio/>`_\n\nSee `INSTALL.rst <https://github.com/healpy/healpy/blob/master/INSTALL.rst>`_\nfor further instructions.\n\nKnown issues\n------------\n\n* Building with OpenMP support: the underlying `HEALPix` C++ library can be built\n  to use `OpenMP <http://openmp.org/wp/>`_ to speed up some operations on\n  systems with multiple cores. Most, but not all, modern C/C++ compilers support\n  OpenMP, `the notable exception being clang <http://openmp.llvm.org>`_.\n\n  If your Healpy build fails with an error message about being unable to link\n  against `-lgomp`, then this typically means that Healpy detected an\n  already-installed `HEALPix` C++ library that was built with OpenMP support, but\n  you are trying to build Healpy with a compiler that does not support OpenMP.\n  Try cleaning the build with `python setup.py clean --all`, and set the\n  environment variables `CC` and `CXX` to point to an OpenMP-capable compiler,\n  such as gcc/g++.\n\n* Healpy does not currently support Windows.\n  See https://github.com/healpy/healpy/issues/25.\n\n* Incompatibility with ``cfitisio`` from ``HEASOFT``: due to a conflict of\n  header file names it is currently not possible to use the cfitsio library\n  provided with the HEASOFT package for compilation of `HEALPix` C++. HEASOFT's\n  include directory contains a file called \"rotmatrix.h\" which clashes with\n  `HEALPix`'s own rotmatrix.h.\n\n* Compilation problems in the C++ package: some gcc versions (we have reports\n  for 4.4.5 and 4.4.6) crash with an internal compiler error during compilation\n  of libsharp. Unfortunately we have not found a workaround for this compiler\n  problem. To our knowledge, it has been fixed in gcc 4.4.7 and in the 4.5.x\n  and newer versions.\n\n* Healpy pixel functions, e.g. ``ang2pix``, do not support 32-bit platforms.\n  See https://github.com/healpy/healpy/issues/194.\n\nSupport\n-------\n\nFor specific *HOWTO* questions please create a question on StackOverflow_ and\ntag it with the `healpy` tag, so that answers will be easily searchable on\ngoogle.\n\nIf you think you found a bug or you have install issues, open an issue on GitHub:\nhttps://github.com/healpy/healpy/issues\n\nFor more general discussion, you can write to the healpy mailing list:\nhttps://groups.google.com/d/forum/healpy\n\n.. _StackOverflow: http://stackoverflow.com/questions/ask\n\nContribute\n----------\n\nProject development takes place on github, http://github.com/healpy/healpy,\nplease open an issue over there for reporting bugs or suggest improvements.\nCollaboration is very welcome, just fork the project on github and send pull\nrequests back to the main repository.\n\nDevelopers\n----------\nCore developers:\n\n* Cyrille Rosset\n* Andrea Zonca\n* Martin Reinecke\n* Leo Singer \n* Daniel Lenz\n\nList of contributors: https://github.com/healpy/healpy/graphs/contributors\n\nAcknowledgements\n----------------\n\nNote that, as stated `here <http://healpix.sourceforge.net/downloads.php>`_\npublications based on work using the `HEALPix` software package should include\nboth of the following:\n\n1. an acknowledgment statement: \"Some of the results in this paper have been\n   derived using the `HEALPix` (Gorski et al., 2005) package\". The complete\n   reference is:\n\n      Gorski, K.M., E. Hivon, A.J. Banday, B.D. Wandelt, F.K. Hansen,\n      M. Reinecke, and M. Bartelmann, HEALPix: A Framework for\n      High-resolution Discretization and Fast Analysis of Data\n      Distributed on the Sphere, Ap.J., 622, 759-771, 2005.\n\n2. at the first use of the `HEALPix` acronym, a footnote placed in the main body\n   of the paper referring to the `HEALPix` web site, currently\n   http://healpix.sf.net\n\nAs healpy is based on `HEALPix` Software (the C++ library), the same\ncondition applies to it.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [],
  "content_types": []
}