{
  "user": "jgarzik",
  "name": "kvdbd",
  "namespace": "jgarzik",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "API microservice exporting embedded key/value databases to remote users",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 189,
  "last_updated": "2022-06-30T05:10:53.297872Z",
  "date_registered": "2019-10-07T18:45:07.259557Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "jgarzik",
  "has_starred": false,
  "full_description": "# kvdbd\n\nDaemon that enables reading/writing of flat-file key/value databases\navailable via HTTP API, using REST/JSON or Protobufs.\n\n## Goals\n\n* \"NoSQL databases go from filesystem to docker microservice\"\n* Written in safe rust\n* Can be queried by stock HTTP clients\n* Modern HTTP service with threads, HTTP/2 etc.\n* Beyond Get/Put/Delete, expose db-specific operations such as transactions or batch-update.\n* Access multiple databases simultaneously from a single HTTP endpoint.\n* Support multiple database back-ends (sled, lmdb, more soon)\n* Docker-friendly Zero configuration mode\n\n## Documentation\n\n* Requirements: Rust 2018+ and `protoc` compiler.\n* Quick Start: see below\n* Configuration:  [config.md](doc/config.md)\n* Remote HTTP API:  [api.md](doc/api.md)\n\n## Using kvdbd\n\n### From cargo\n\nStandard rust cargo multi-binary setup:\n\n```\n$ cargo build\n$ cargo run --bin kvdbd\n```\n\n### From docker\n\nZeroconf docker example, with sled database stored on docker volume `dbdata`:\n```\n$ docker volume create dbdata\n$ docker run --rm -p 8080:8080 -v dbdata:/data jgarzik/kvdbd \\\n\tkvdbd --bind-addr 0.0.0.0 --sled /data/sled.db\n$ curl http://127.0.0.1:8080/ | json_pp\n```\n\n## Testing\n\nIntegration testing is performed via a separate binary, `tester`.\n```\n$ cargo run --bin tester\n```\n\n## Other projects\n\nUnrelated projects with similar names:\n\n* Another \"kvdb\" exists as a Go library: https://github.com/portworx/kvdb\n* An online cloud service https://kvdb.io/\n\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}