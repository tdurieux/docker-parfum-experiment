{
  "user": "cennznet",
  "name": "cennznet",
  "namespace": "cennznet",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 2,
  "pull_count": 150657,
  "last_updated": "2022-12-22T23:34:12.767497Z",
  "date_registered": "2019-05-23T01:52:50.148056Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "cennznet",
  "has_starred": false,
  "full_description": "# CENNZnet Node\n\nCENNZnet node based on Substrate\n\n## Development Environment\n\n### Linux and Mac\n\nFor Unix-based operating systems, you should run the following commands:\n\n```bash\ncurl https://sh.rustup.rs -sSf | sh\n\nrustup update nightly\nrustup target add wasm32-unknown-unknown --toolchain nightly\nrustup update stable\ncargo install --git https://github.com/alexcrichton/wasm-gc\n```\n\nYou will also need to install the following packages:\n\n__Linux:__\n```bash\nsudo apt install cmake pkg-config libssl-dev git clang libclang-dev\n```\n\n__Mac:__\n```bash\nbrew install cmake pkg-config openssl git llvm\n```\n\n### Windows\n\nIf you are trying to set up Substrate on Windows, you should do the following:\n\n1. First, you will need to download and install \"Build Tools for Visual Studio:\"\n\n    * You can get it at this link: https://aka.ms/buildtools\n    * Run the installation file: `vs_buildtools.exe`\n    * Please ensure the Windows 10 SDK component is included when installing the Visual C++ Build Tools.\n    * ![image](https://i.imgur.com/zayVLmu.png)\n    * Restart your computer.\n\n2. Next, you need to install Rust:\n\n    * Detailed instructions are provided by the [Rust Book](https://doc.rust-lang.org/book/ch01-01-installation.html#installing-rustup-on-windows).\n        * Download from: https://www.rust-lang.org/tools/install\n        * Run the installation file: `rustup-init.exe`\n        > Note that it should not prompt you to install vs_buildtools since you did it in step 1.\n        * Choose \"Default Installation.\"\n        * To get started, you need Cargo's bin directory (%USERPROFILE%\\.cargo\\bin) in your PATH environment variable. Future applications will automatically have the correct environment, but you may need to restart your current shell.\n\n3. Then, you will need to run some commands in CMD to set up your Wasm Build Environment:\n\n```bash\nrustup update nightly\nrustup update stable\nrustup target add wasm32-unknown-unknown --toolchain nightly\n```\n\n4. Next, you install wasm-gc, which is used to slim down Wasm files:\n\n```bash\ncargo install --git https://github.com/alexcrichton/wasm-gc --force\n```\n\n5. Then, you need to install LLVM: https://releases.llvm.org/download.html\n\n6. Next, you need to install OpenSSL, which we will do with `vcpkg`:\n\n```\nmkdir \\Tools\ncd \\Tools\ngit clone https://github.com/Microsoft/vcpkg.git\ncd vcpkg\n.\\bootstrap-vcpkg.bat\n.\\vcpkg.exe install openssl:x64-windows-static\n```\n\n7. After, you need to add OpenSSL to your System Variables:\n\n```\n$env:OPENSSL_DIR = 'C:\\Tools\\vcpkg\\installed\\x64-windows-static'\n$env:OPENSSL_STATIC = 'Yes'\n[System.Environment]::SetEnvironmentVariable('OPENSSL_DIR', $env:OPENSSL_DIR, [System.EnvironmentVariableTarget]::User)\n[System.Environment]::SetEnvironmentVariable('OPENSSL_STATIC', $env:OPENSSL_STATIC, [System.EnvironmentVariableTarget]::User)\n```\n\n8. Finally, you need to install `cmake`: https://cmake.org/download/\n\n## Development\n\n__Build__\n\n```bash\n# compile runtime to wasm\n./scripts/build.sh\n\n# compile the node\ncargo build\n```\n\n\n__Run__\n```bash\n# Run your own testnet with a validator\ncargo run -- --dev\n# or\n./target/debug/cennznet --dev\n```\n\n\n__Purge chain__\n```bash\n# For local testnet\ncargo run -- purge-chain --dev\n# or\n./target/debug/cennznet purge-chain --dev\n```\n\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}