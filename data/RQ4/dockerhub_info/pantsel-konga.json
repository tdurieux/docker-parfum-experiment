{
  "user": "pantsel",
  "name": "konga",
  "namespace": "pantsel",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "More than just another GUI to KONG Admin API.",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 117,
  "pull_count": 36201060,
  "last_updated": "2020-05-28T11:40:11.480607Z",
  "date_registered": "2017-03-11T11:46:12.106538Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "pantsel",
  "has_starred": false,
  "full_description": "## More than just another GUI to [KONG Admin API](http://getkong.org)    [![Build Status](https://travis-ci.org/pantsel/konga.svg?branch=master)](https://travis-ci.org/pantsel/konga)    [![Gitter chat](https://badges.gitter.im/pantsel-konga/Lobby.png)](https://gitter.im/pantsel-konga/Lobby)\n\n\n[![Dashboard](screenshots/bc3.png)](https://raw.githubusercontent.com/pantsel/konga/master/screenshots/bc2.png)\n\n_Konga is not an official app. No affiliation with [Kong](https://www.konghq.com/)._\n\n### Support the project\nIf you find Konga helpful, \nyou can show your support and help me continue maintaining the project by [buying me a coffee](buymeacoff.ee/F1aRIj8CG)\nor becoming a [Patron](https://www.patreon.com/kongaui). Cheers!\n\n<a href=\"https://www.buymeacoffee.com/F1aRIj8CG\" target=\"_blank\"><img src=\"https://www.buymeacoffee.com/assets/img/custom_images/yellow_img.png\" alt=\"Buy Me A Coffee\" style=\"height: auto !important;width: auto !important;\" ></a>\n\n\n## Supported by\n\nSpecial thanks to our supporters that help us keep the project going and the motivation alive.\n\n<a href=\"https://www.greenbird.com\" target=\"_blank\"><img src=\"screenshots/greenbird.png\" width=\"250\"></a>\n\n## Summary\n\n- [**Discussions & Support**](#discussions--support)\n- [**Features**](#features)\n- [**Compatibility**](#compatibility)\n- [**Prerequisites**](#prerequisites)\n- [**Used libraries**](#used-libraries)\n- [**Installation**](#installation)\n- [**Configuration**](#configuration)\n- [**Environment variables**](#environment-variables)\n- [**Running Konga**](#running-konga)\n- [**Upgrading**](#upgrading)\n- [**FAQ**](#faq)\n- [**More Kong related stuff**](#more-kong-related-stuff)\n- [**License**](#license)\n\n## Discussions & Support\nIf you need to discuss anything Konga related, we have a chatroom on Gitter:\n\n[![Gitter chat](https://badges.gitter.im/pantsel-konga/Lobby.png)](https://gitter.im/pantsel-konga/Lobby)\n\n## Features\n* Manage all Kong Admin API Objects.\n* Import Consumers from remote sources (Databases, files, APIs etc.).\n* Manage multiple Kong Nodes.\n* Backup, restore and migrate Kong Nodes using Snapshots.\n* Monitor Node and API states using health checks.\n* Email & Slack notifications.\n* Multiple users.\n* Easy database integration (MySQL, postgresSQL, MongoDB).\n\n## Compatibility\n**From 0.14.0 onwards, Konga is ONLY compatible with Kong 1.x**\n\nIf you're on an older Kong version , use [this](https://github.com/pantsel/konga/tree/legacy) branch \nor `konga:legacy` from docker hub instead.\n\n## Prerequisites\n- A running [Kong installation](https://getkong.org/) \n- Nodejs >= 8, <= 12.x (12.16 LTS is recommended)\n- Npm\n\n## Used libraries\n* Sails.js, http://sailsjs.org/\n* AngularJS, https://angularjs.org/\n\n## Installation\n\nInstall `npm` and `node.js`. Instructions can be found [here](http://sailsjs.org/#/getStarted?q=what-os-do-i-need).\n\nInstall `bower`, ad `gulp` packages.\n```\n$ git clone https://github.com/pantsel/konga.git\n$ cd konga\n$ npm i\n```\n\n## Configuration\nYou can configure your  application to use your environment specified\nsettings.\n\nThere is an example configuration file on the root folder.\n\n```\n.env_example\n```\n\nJust copy this to `.env` and make necessary changes to it. Note that this\n`.env` file is in .gitignore so it won't go to VCS at any point.\n\n## Environment variables\nThese are the general environment variables Konga uses.\n\n| VAR                | DESCRIPTION                                                                                                                | VALUES                                 | DEFAULT                                      |\n|--------------------|----------------------------------------------------------------------------------------------------------------------------|----------------------------------------|----------------------------------------------|\n| HOST               | The IP address that will be bind by Konga's server                                                                               | -                                      | '0.0.0.0'                                         |\n| PORT               | The port that will be used by Konga's server                                                                               | -                                      | 1337                                         |\n| NODE_ENV           | The environment                                                                                                            | `production`,`development`             | `development`                                |\n| SSL_KEY_PATH       | If you want to use SSL, this will be the absolute path to the .key file. Both `SSL_KEY_PATH` & `SSL_CRT_PATH` must be set. | -                                      | null                                         |\n| SSL_CRT_PATH       | If you want to use SSL, this will be the absolute path to the .crt file. Both `SSL_KEY_PATH` & `SSL_CRT_PATH` must be set. | -                                      | null                                         |\n| KONGA_HOOK_TIMEOUT | The time in ms that Konga will wait for startup tasks to finish before exiting the process.                                | -                                      | 60000                                        |\n| DB_ADAPTER         | The database that Konga will use. If not set, the localDisk db will be used.              | `mongo`,`mysql`,`postgres`     | -                                            |\n| DB_URI             | The full db connection string. Depends on `DB_ADAPTER`. If this is set, no other DB related var is needed.                 | -                                      | -                                            |\n| DB_HOST            | If `DB_URI` is not specified, this is the database host. Depends on `DB_ADAPTER`.                                          | -                                      | localhost                                    |\n| DB_PORT            | If `DB_URI` is not specified, this is the database port.  Depends on `DB_ADAPTER`.                                         | -                                      | DB default.                                  |\n| DB_USER            | If `DB_URI` is not specified, this is the database user. Depends on `DB_ADAPTER`.                                          | -                                      | -                                            |\n| DB_PASSWORD        | If `DB_URI` is not specified, this is the database user's password. Depends on `DB_ADAPTER`.                               | -                                      | -                                            |\n| DB_DATABASE        | If `DB_URI` is not specified, this is the name of Konga's db.  Depends on `DB_ADAPTER`.                                    | -                                      | `konga_database`                             |\n| DB_PG_SCHEMA       | If using postgres as a database, this is the schema that will be used.                                                     | -                                      | `public`                                     |\n| KONGA_LOG_LEVEL    | The logging level                                                                                                          | `silly`,`debug`,`info`,`warn`,`error`  | `debug` on dev environment & `warn` on prod. |\n| TOKEN_SECRET       | The secret that will be used to sign JWT tokens issued by Konga | - | - |\n| NO_AUTH            | Run Konga without Authentication                                                                                           | true/false                             | -                                         |\n| BASE_URL           | Define a base URL or relative path that Konga will be loaded from. Ex: www.example.com/konga                               | <string>                                     | -                                         |\n| KONGA_SEED_USER_DATA_SOURCE_FILE           | Seed default users on first run. [Docs](./docs/SEED_DEFAULT_DATA.md).                               | <string>                                     | -                                         |\n| KONGA_SEED_KONG_NODE_DATA_SOURCE_FILE      | Seed default Kong Admin API connections on first run [Docs](./docs/SEED_DEFAULT_DATA.md)                               | <string>                                     | -                                         |\n\n\n### Databases Integration\n\nKonga is bundled with It's own persistence mechanism for storing users and configuration.\n\nA local persistent object store is used by default, which works great as a bundled, starter database (with the strict caveat that it is for non-production use only).\n\nThe application also supports some of the most popular databases out of the box:\n\n1. MySQL\n2. MongoDB\n3. PostgresSQL\n\nIn order to use them, set the appropriate env vars in your `.env` file.\n \n\n## Running Konga\n\n### Development\n```\n$ npm start\n```\nKonga GUI will be available at `http://localhost:1337`\n\n### Production\n\n***************************************************************************************** \nIn case of `MySQL` or `PostgresSQL` adapters, Konga will not perform db migrations when running in production mode.\n\nYou can manually perform the migrations by calling ```$ node ./bin/konga.js  prepare``` \n, passing the args needed for the database connectivity.\n\nFor example: \n\n```\n$ node ./bin/konga.js  prepare --adapter postgres --uri postgresql://localhost:5432/konga\n```\nThe process will exit after all migrations are completed. \n\n*****************************************************************************************\n\nFinally:\n```\n$ npm run production\n```\nKonga GUI will be available at `http://localhost:1337`\n\n\n### Production Docker Image\n\nThe following instructions assume that you have a running Kong instance following the\ninstructions from [Kong's docker hub](https://hub.docker.com/_/kong/)\n```\n$ docker pull pantsel/konga\n$ docker run -p 1337:1337 \\\n             --network {{kong-network}} \\ // optional\n             --name konga \\\n             -e \"NODE_ENV=production\" \\ // or \"development\" | defaults to 'development'\n             -e \"TOKEN_SECRET={{somerandomstring}}\" \\\n             pantsel/konga\n```\n\n#### To use one of the supported databases\n\n1. ##### Prepare the database\n> **Note**: You can skip this step if using the `mongo` adapter.\n\nYou can prepare the database using an ephemeral container that runs the prepare command.\n\n**Args**\n\nargument  | description | default\n----------|-------------|--------\n-c      | command | -\n-a      | adapter (can be `postgres` or `mysql`) | -\n-u     | full database connection url | -\n\n```\n$ docker run --rm pantsel/konga:latest -c prepare -a {{adapter}} -u {{connection-uri}}\n```\n\n\n2. ##### Start Konga\n```\n$ docker run -p 1337:1337 \n             --network {{kong-network}} \\ // optional\n             -e \"TOKEN_SECRET={{somerandomstring}}\" \\\n             -e \"DB_ADAPTER=the-name-of-the-adapter\" \\ // 'mongo','postgres','sqlserver'  or 'mysql'\n             -e \"DB_HOST=your-db-hostname\" \\\n             -e \"DB_PORT=your-db-port\" \\ // Defaults to the default db port\n             -e \"DB_USER=your-db-user\" \\ // Omit if not relevant\n             -e \"DB_PASSWORD=your-db-password\" \\ // Omit if not relevant\n             -e \"DB_DATABASE=your-db-name\" \\ // Defaults to 'konga_database'\n             -e \"DB_PG_SCHEMA=my-schema\"\\ // Optionally define a schema when integrating with prostgres\n             -e \"NODE_ENV=production\" \\ // or 'development' | defaults to 'development'\n             --name konga \\\n             pantsel/konga\n             \n             \n // Alternatively you can use the full connection string to connect to a database\n $ docker run -p 1337:1337 \n              --network {{kong-network}} \\ // optional\n              -e \"TOKEN_SECRET={{somerandomstring}}\" \\\n              -e \"DB_ADAPTER=the-name-of-the-adapter\" \\ // 'mongo','postgres','sqlserver'  or 'mysql'\n              -e \"DB_URI=full-connection-uri\" \\\n              -e \"NODE_ENV=production\" \\ // or 'development' | defaults to 'development'\n              --name konga \\\n              pantsel/konga\n```\n\n\nThe GUI will be available at `http://{your server's public ip}:1337`\n\n\n[It is possible to seed default users on first install.](./docs/SEED_DEFAULT_DATA.md)\n\nYou may also configure Konga to authenticate via [LDAP](./docs/LDAP.md).\n\n\n## Upgrading\nIn some cases a newer version of Konga may introduce changes in database schemas.\nThe only thing you need to do is to start Konga in dev mode once so that the migrations will be applied.\nThen stop the app and run it again in production mode.\n\nif you're using docker, you can lift an ephemeral container, as stated before:\n```\n$ docker run --rm pantsel/konga:latest -c prepare -a {{adapter}} -u {{connection-uri}}\n```\n\n## FAQ\n\n##### 1. Getting blank page with `Uncaught ReferenceError: angular is not defined`\n\nIn some cases when running `npm install`, the bower dependencies are not installed properly.\nYou will need to cd into your project's root directory and install them manually by typing\n```\n$ npm run bower-deps\n```\n\n##### 2. Can't add/edit some plugin properties.\nWhen a plugin property is an array, the input is handled by a chip component.\nYou will need to press `enter` after every value you type in\nso that the component assigns it to an array index.\nSee issue [#48](https://github.com/pantsel/konga/issues/48) for reference.\n\n##### 3. EACCES permission denied, mkdir '/kongadata/'.\nIf you see this error while trying to run Konga, it means that konga has no write permissions to\nit's default data dir `/kongadata`.  You will just have to define the storage path yourself to \na directory Konga will have access permissions via the env var `STORAGE_PATH`.\n\n##### 4. The hook `grunt` is taking too long to load\nThe default timeout for the sails hooks to load is 60000. In some cases, depending on\nthe memory the host machine has available, startup tasks like code minification and uglyfication\nmay take longer to complete. You can fix that by setting then env var `KONGA_HOOK_TIMEOUT` to something\ngreater than 60000, like 120000.\n\n\n## More Kong related stuff\n- [**Kong Admin proxy**](https://github.com/pantsel/kong-admin-proxy)\n- [**Kong Middleman plugin**](https://github.com/pantsel/kong-middleman-plugin)\n\n## Author\n\nPanagis Tselentis\n\n## License\n```\nThe MIT License (MIT)\n=====================\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n```\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}