{
  "user": "cognitom",
  "name": "momy",
  "namespace": "cognitom",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "MongoDB to MySQL replication",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 92,
  "last_updated": "2019-11-10T06:40:22.96278Z",
  "date_registered": "2019-11-09T05:41:30.432254Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "cognitom",
  "has_starred": false,
  "full_description": "[![Build Status][circle-image]][circle-url]\n[![NPM Status][npm-image]][npm-url]\n[![Codecov Status][codecov-image]][codecov-url]\n\n# Momy\n\n[Momy](https://goo.gl/maps/s9hXxKyoACv) is a simple cli tool for replicating MongoDB to MySQL in realtime.\n\n- Enable SQL query on data in NoSQL database\n- Enable to be accessed by Excel / Access\n\n![Momy](images/concept.png)\n\n## Installation\n\nInstall via npm:\n\n```bash\n$ npm install -g momy\n```\n\nOr use docker:\n\n```bash\n$ docker run -it --rm -v $(pwd):/workdir cognitom/momy\n```\n\nYou might want to create an alias, for example\n\n```bash\n$ echo 'alias momy=\"docker run -it --rm -v $(pwd):/workdir cognitom/momy\"' >> ~/.bashrc\n```\n\nSee more detail about Docker configurations below.\n\n## Preparation\n\n### MongoDB\n\nMomy uses [Replica Set](http://docs.mongodb.org/manual/replication/) feature in MongoDB. But you don't have to replicate between MongoDB actually. Just follow the steps below.\n\nStart a new mongo instance with no data:\n\n```bash\n$ mongod --replSet \"rs0\" --oplogSize 100\n```\n\nOpen another terminal, and go to MongoDB Shell:\n\n```bash\n$ mongo\n....\n> rs.initiate()\n```\n\n`rs.initiate()` command prepare the collections that is needed for replication.\n\n### MySQL\n\nLaunch MySQL instance, and create the new database to use. The tables will be created or updated when syncing. You'll see `mongo_to_mysql`, too. This is needed to store the information for syncing. (don't remove it)\n\n### Configuration\n\nCreate a new `momyfile.json` file like this:\n\n```json\n{\n  \"src\": \"mongodb://localhost:27017/dbname\",\n  \"dist\": \"mysql://root:password@localhost:3306/dbname\",\n  \"prefix\": \"t_\",\n  \"case\": \"camel\",\n  \"collections\": {\n    \"collection1\": {\n      \"_id\": \"number\",\n      \"createdAt\": \"DATETIME\",\n      \"field1\": \"number\",\n      \"field2\": \"string\",\n      \"field3\": \"boolean\",\n      \"field4.subfield\": \"string\"\n    },\n    \"collection2\": {\n      \"_id\": \"string\",\n      \"createdAt\": \"DATETIME\",\n      \"field1\": \"number\",\n      \"field2\": \"string\",\n      \"field3\": \"boolean\",\n      \"field4\": \"TEXT\"\n    }\n  }\n}\n```\n\n- `src`: the URL of the MongoDB server\n- `dist`: the URL of the MySQL server\n- `prefix`: optional prefix for table name. The name of the table would be `t_collection1` in the example above.\n- `fieldCase`: optional. `snake` or `camel`. See the section below.\n- `exclusions`: optional. Chars or a range of chars to exclude: `\"\\uFFFD\"`\n- `inclusions`: optional. Chars or a range of chars to include: `\"\\u0000-\\u007F\"`\n- `collections`: set the collections and fields to sync\n\n`_id` field is required for each collection and should be `string` or `number`.\n\n### Field names and types\n\n```\n\"<field_name>\": \"<field_tipe>\"\n```\nor, field_name could be dot-concatenated:\n```\n\"<field_name>.<sub_name>\": \"<field_tipe>\"\n```\n\nFor example, if you have `{ a: { b: { c: 'hey!' } } }` then `\"a.b.c\": \"string\"`\n\nCurrently these native types are supported:\n\n- `BIGINT`\n- `TINYINT`\n- `VARCHAR`\n- `DATE`\n- `DATETIME`\n- `TIME`\n- `TEXT`\n\nThere're also some aliases:\n\n- `number` => `BIGINT`\n- `boolean` => `TINYINT`\n- `string` => `VARCHAR`\n\n### Field name normalization: fieldCase\n\nSome system like Microsoft Access don't allow *dot-concatenated field names*, so `address.street` will cause an error. For such a case, use `fieldCase`:\n\n- `snake`: `address.street` --> `address_street`\n- `camel`: `address.street` --> `addressStreet`\n\n**Note**: if you set `fieldCase` value, the name of `_id` field will change into `id` without `_`, too.\n\n## Usage\n\nAt the first run, we need to import all the data from MongoDB:\n\n```bash\n$ momy --config momyfile.json --import\n```\n\nThen start the daemon to streaming data:\n\n```bash\n$ momy --config momyfile.json\n```\n\nor\n\n```bash\n$ forever momy --config momyfile.json\n```\n\n## Usage with Docker\n\nFirst thing first, create a network for your containers:\n\n```bash\n$ docker network create my-net\n```\n\nThen, launch database servers:\n\n```bash\n$ docker run \\\n    --name my-mongod \\\n    --detach --rm \\\n    --network my-net \\\n    --mount type=volume,source=my-mongo-store,target=/data/db \\\n    mongo --replSet \"rs0\"\n$ docker run \\\n    --name my-mysqld \\\n    --detach --rm \\\n    --network my-net \\\n    --mount type=volume,source=my-mysql-store,target=/var/lib/mysql \\\n    --env MYSQL_ALLOW_EMPTY_PASSWORD=yes \\\n    mysql\n```\n\nIf this is the first time to run the containers above, you need to initialize them:\n\n```bash\n$ docker exec my-mongod mongo --eval 'rs.initiate()'\n$ docker exec my-mysqld mysql -e 'CREATE DATABASE momy;'\n```\n\nCreate `momyfile.json` like this:\n\n```json\n{\n  \"src\": \"mongodb://my-mongod:27017/momy\",\n  \"dist\": \"mysql://root@my-mysqld:3306/momy\",\n  \"collections\": {...}\n}\n```\n\n**Note**: you must change username, password, port, ...etc. to fit your environment.\n\nOK, let's run `momy` with `--import` option:\n\n```bash\n$ docker run \\\n    --interactive --tty --rm \\\n    --network my-net \\\n    --mount type=bind,source=$(pwd),target=/workdir \\\n    cognitom/momy --import\n```\n\nEverything goes well? Then, stop the container (Ctrl + C). Now you can run it as a daemon:\n\n```bash\n$ docker run \\\n    --detach --rm \\\n    --restart unless-stopped \\\n    --network my-net \\\n    --mount type=bind,source=$(pwd),target=/workdir \\\n    cognitom/momy\n```\n\n## For contributors\n\nSee [dev](dev) directory.\n\n## License\n\nMIT\n\nThis library was originally made by @doubaokun as [MongoDB-to-MySQL](https://github.com/doubaokun/MongoDB-to-MySQL) and rewritten by @cognitom.\n\n[circle-image]:https://img.shields.io/circleci/project/github/cognitom/momy.svg?style=flat-square\n[circle-url]:https://circleci.com/gh/cognitom/momy\n[npm-image]:https://img.shields.io/npm/v/momy.svg?style=flat-square\n[npm-url]:https://www.npmjs.com/package/momy\n[codecov-image]:https://img.shields.io/codecov/c/github/cognitom/momy.svg?style=flat-square\n[codecov-url]:https://codecov.io/gh/cognitom/momy\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}