{
  "user": "nwithan8",
  "name": "tauticord",
  "namespace": "nwithan8",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "A Discord bot pulling live data from Tautulli",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 1568,
  "last_updated": "2022-12-22T18:05:58.561953Z",
  "date_registered": "2019-06-20T06:08:11.756754Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "nwithan8",
  "has_starred": false,
  "full_description": "[![Donate with Bitcoin](https://en.cryptobadges.io/badge/micro/3H94aowuz4hgbvNjceZ2xeq14rjmGz4cD9)](https://en.cryptobadges.io/donate/3H94aowuz4hgbvNjceZ2xeq14rjmGz4cD9)\n\n# Tauticord\nA Discord bot that displays live data from Tautulli\n\n# Features\nTauticord uses the Tautulli API to pull information from Tautulli and display them in a Discord channel, including:\n\n### OVERVIEW:\n* Number of current streams\n* Number of transcoding streams\n* Total bandwidth\n* Total LAN bandwidth\n\n### FOR EACH STREAM:\n* Stream state (playing, paused, stopped, loading)\n* Media type (tv show/movie/song/photo)\n* User\n* Media title\n* Product and player\n* Quality profile\n* Stream bandwidth\n* If stream is transcoding\n* Progress of stream\n* ETA of stream completion\n\nAdministrator (the bot owner) can react to Tauticord's messages to terminate a specific stream (if they have Plex Pass).\n\nUsers can also indicate what libraries they would like monitored. Tauticord will create/update a voice channel for each library name with item counts every hour.\n\n# Requirements\n- A Plex Media Server\n- Tautulli (formerly known as PlexPy)\n- A Discord server\n- Python 3.7+\n\n# Installation and setup\nHOW TO MAKE A DISCORD BOT: https://www.digitaltrends.com/gaming/how-to-make-a-discord-bot/\nPermissions required:\n- Manage Channels\n- View Channels\n- Send Messages\n- Manage Messages\n- Read Message History\n- Add Reactions\n\nInstall requirements with:\n\n\tpip3 install -r requirements.txt\n\nCopy ``config.yaml.example`` to ``config.yaml`` and complete the variables in the file.\n\n# Usage\nRun the script with the following command:\n\n\tpython3 Tauticord.py\n\t\n# Docker\nYou can also run Tauticord as a Docker container.\n\nAfter copying and editing your ``config.py`` file, build the container with:\n\t``docker build -t tauticord .``\nRun the container with ``docker run tauticord``\n\n# Analytics\nTauticord uses Google Analytics to collect statistics such as common errors that will help with future development.\n**This data is limited, anonymous, and never sold or redistributed.**\n\n**When and what data is collected?**\n- Whenever the bot comes online\n\t- What operating system the bot is running on (Windows, Linux, MacOS, etc.)\n- Whenever an error is logged\n \t- What Python function the error occurred in.\n\n**What data is NOT collected:**\n- Any identifying information about the user\n- Any identifying information about the computer/machine (a random ID is generated on each analytics call, IP addresses are anonymized)\n- Settings for Discord or Tautulli, including passwords, API tokens, URLs, etc.\n- Any data from Tautulli\n- Anything typed in Discord.\n\n# To come\nThis bot is still a work in progress. If you have any ideas for improving or adding to Tauticord, please do a pull request.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.list.v2+json",
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}