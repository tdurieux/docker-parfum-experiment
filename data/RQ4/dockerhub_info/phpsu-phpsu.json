{
  "user": "phpsu",
  "name": "phpsu",
  "namespace": "phpsu",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "minimal phpsu docker image",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 5168,
  "last_updated": "2022-12-14T16:37:10.15872Z",
  "date_registered": "2019-11-08T12:15:05.960036Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "phpsu",
  "has_starred": false,
  "full_description": "# Phpsu: Synchronisation Utility: File and Database\n\n[![Latest Version](https://img.shields.io/github/release-pre/phpsu/phpsu.svg?style=flat-square)](https://github.com/phpsu/phpsu/releases)\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE)\n[![Build Status](https://img.shields.io/travis/phpsu/phpsu/master.svg?style=flat-square)](https://travis-ci.org/phpsu/phpsu)\n[![Coverage Status](https://img.shields.io/codecov/c/gh/phpsu/phpsu.svg?style=flat-square)](https://codecov.io/gh/phpsu/phpsu)\n[![Infection MSI](https://img.shields.io/endpoint?style=flat-square&url=https://badge-api.stryker-mutator.io/github.com/phpsu/phpsu/master)](https://infection.github.io)\n[![Quality Score](https://img.shields.io/scrutinizer/g/phpsu/phpsu.svg?style=flat-square)](https://scrutinizer-ci.com/g/phpsu/phpsu)\n[![Total Downloads](https://img.shields.io/packagist/dt/phpsu/phpsu.svg?style=flat-square)](https://packagist.org/packages/phpsu/phpsu)\n\nThis package is compliant with [PSR-1], [PSR-2], [PSR-4] and [PSR-12]. If you notice compliance oversights, please send a patch via pull request.\n\n[PSR-1]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md\n[PSR-2]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md\n[PSR-4]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md\n[PSR-12]: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-12-extended-coding-style-guide.md\n\n## Install\n\n### Via Composer:\n\n````bash\ncomposer require --dev phpsu/phpsu\n````\n\n#### Via Composer, with conflicting versions\n\nIf you have problems with conflicting versions eg. symfony:2.* you can use the [composer-bin-plugin].\n\n````bash\ncomposer require --dev bamarni/composer-bin-plugin\ncomposer bin phpsu require --dev phpsu/phpsu\n#  we recommend to install it with the auto installation scripts:\ncomposer config scripts.bin \"echo 'bin not installed'\"\ncomposer config scripts.post-install-cmd '@composer bin all install --ansi'\ncomposer config scripts.post-update-cmd '@composer bin all update --ansi'\necho '/vendor-bin/**/vendor' >> .gitignore\n````\n\n[composer-bin-plugin]: https://github.com/bamarni/composer-bin-plugin\n\n### Via Docker:\n\nif you want to use phpsu via Docker we have a minimal phpsu docker image: [phpsu/phpsu].\n\nyou can execute any phpsu command via something like this:\n\n``docker run --rm -it -u $(id -u):$(id -g) -v $(pwd):/app -v ~/.ssh:/home/phpsu/.ssh phpsu/phpsu:latest phpsu ssh production``\n\n[read more about docker usage]\n\n\n[phpsu/phpsu]: https://hub.docker.com/r/phpsu/phpsu\n[read more about docker usage]: docs/Docker.md\n\n## Requirements\n\nThe following versions of PHP are supported by this version.\n\n* PHP `7.2`, `7.3`, `7.4`, `8.0`\n* Compatible and continuously tested with symfony `4.3` and `5.0`\n* for older versions go to [version 1.1.0](https://github.com/phpsu/phpsu/tree/1.1.0)\n\nRequired for synchronisation are:\n* ``ssh`` on execution System\n* ``rsync`` on executing System\n* ``mysqldump`` on source System\n* ``mysql`` on destination Systems\n\nUnfortunately we do not support Windows yet.\n\n## Documentation\n\nThe full [Documentation](docs/index.md) can be found in the ``/docs`` Directory.\n\n## Configuration Example\n\nSimple configuration example `phpsu-config.php`:\n\n````php\n<?php\ndeclare(strict_types=1);\n\n$globalConfig = new \\PHPSu\\Config\\GlobalConfig();\n$globalConfig->addFilesystem('Image Uploads', 'var/storage')\n    ->addExclude('*.mp4')\n    ->addExclude('*.mp3')\n    ->addExclude('*.zip')\n    ->addExcludes(['*.jpg', '*.gif']);\n$globalConfig->addSshConnection('hostA', 'ssh://user@localhost:2208');\n$globalConfig->addAppInstance('production', 'hostA', '/var/www/')\n    ->setCompressions(new \\PHPSu\\Config\\Compression\\GzipCompression())\n    ->addDatabase('app', 'production01db', 'root', 'password', '127.0.0.1', 3307)\n    ->addExclude('one_single_table_name')\n    ->addExclude('/cache/')\n    ->addExclude('/session$/')\n    ->addExcludes(['/log/']);\n$globalConfig->addAppInstance('local')\n    ->setCompressions(new \\PHPSu\\Config\\Compression\\GzipCompression())\n    ->addDatabase('app', 'testingLocal', 'root', 'root');\nreturn $globalConfig;\n````\n\n> Hint:\n> If you ever need or want to rename the configuration file for phpsu, you can do this by providing \n> an environment variable `PHPSU_CONFIG_FILE` and setting it to the file name including the file ending\n> example: `PHPSU_CONFIG_FILE=alternative-config.php`\n\n## CLI Examples\n\n````bash\nphpsu sync production --dry-run\nphpsu sync p --no-db\nphpsu sync p --no-fs\nphpsu sync production testing --all\n````\n\n<!--### PHP API Examples\n\n````php\n<?php\ndeclare(strict_types=1);\n\n$log = new \\Symfony\\Component\\Console\\Output\\BufferedOutput();\n$configurationLoader = new \\PHPSu\\Config\\ConfigurationLoader();\n$syncOptions = new \\PHPSu\\SyncOptions('production');\n$phpsu = new \\PHPSu\\Controller();\n$phpsu->sync($log, $configurationLoader->getConfig(), $syncOptions);\n````-->\n\n## Contributing\n\ninstall for Contribution\n````bash\ngit clone git@github.com:phpsu/phpsu.git\ncd phpsu\ncomposer install\n````\n\n## Testing\n\n````bash\ncomposer test\n````\n\nYou can also check, whether any changes you made are affecting your tests immediately on save:\n````bash\ncomposer test:watch\n````\n\nIf you see a low `Mutation Score Indicator (MSI)` value, you can show the mutations that are escaping:\n````bash\ncomposer infection -- -s\n````\n\nIf you have an unwanted BC break in your Pull Request you can run the same test locally with docker:\n````bash\ndocker run --rm -v `pwd`:/app nyholm/roave-bc-check --format=markdown > results.md\n````\n\n## Security\n\nIf you discover any security related issues, please email git@kanti.de instead of using the issue tracker.\n\n## Credits\n\n- [Matthias Vogel](https://github.com/Kanti)\n- [Chris Ben](https://github.com/ChrisB9)\n- [All Contributors](https://github.com/phpsu/phpsu/contributors)\n\n## License\n\nThe MIT License (MIT). Please see [License File](https://github.com/phpsu/phpsu/blob/master/LICENSE) for more information.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}