{
  "user": "vincentbernat",
  "name": "dashkiosk",
  "namespace": "vincentbernat",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Managing dashboards on various displays (especially those running on Android)",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 14,
  "pull_count": 2271268,
  "last_updated": "2019-09-23T11:44:39.674038Z",
  "date_registered": "2015-08-06T19:08:50.485124Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "vincentbernat",
  "has_starred": false,
  "full_description": "# Dashkiosk\n\n[![Build Status](https://secure.travis-ci.org/vincentbernat/dashkiosk.png?branch=master)](https://travis-ci.org/vincentbernat/dashkiosk)\n\nDashkiosk is a solution to manage dashboards on multiple screens. It\ncomes as four components:\n\n 1. A _receiver_ runs in a browser attached to each screen and will\n    display the requested dashboards. The receiver is quite dumb, it\n    contacts the server and wait for it to tell which URL to display.\n\n 2. A _server_ which will manage the screens by sending them what they\n    should display. An administration interface allows the user to\n    manage those screens individually or in a group.\n    \n 3. An _Android app_ that will run the receiver. This is mainly a\n    fullscreen webview. There is also a _Firefox app_ fulfilling the\n    same purpose.\n\n 4. A _Chromecast custom receiver_ which will run the regular receiver\n    if you want to display dashboards using Google Chromecast devices.\n\nThe full documentation is available on [ReadTheDocs][].\n\n[ReadTheDocs]: https://dashkiosk.readthedocs.io\n\nA live installation, reset every hour, is publicly available:\n - [administration panel](https://dashkiosk-demo.herokuapp.com/admin)\n - [receiver](http://dashkiosk-demo.herokuapp.com/receiver)\n\nHere is a demonstration video:\n\n[![Dashkiosk demo](https://img.youtube.com/vi/Vb4BvEzoYOU/0.jpg)](https://www.youtube.com/watch?v=Vb4BvEzoYOU \"Dashkiosk demo\")\n\n# Development\n\nTo run the server for development:\n\n    $ grunt serve\n\n# Android receiver\n\nThe Android receiver has moved to its\n[own repository](https://github.com/vincentbernat/dashkiosk-android).\n\n# Chromecast receiver\n\nThe \"official\" Chromecast receiver has app ID `5E7A2C2C` and is hosted\nin the `gh-pages` branch of this repository. To update it:\n\n    $ grunt dist\n    $ git worktree add ~/src/dashkiosk-gh-pages gh-pages\n    $ cd ~/src/dashkiosk-gh-pages\n    $ git rm -r *\n    $ rsync -rv --include '*chromecast*' --include '*/' --exclude '*' ~-dashkiosk/dist/public/* .\n    $ git add *\n    $ git commit -m \"Update\"\n\n# Docker\n\nThere is a `Dockerfile` to run *Dashkiosk* inside Docker. As of [06438d6](https://github.com/dersimn/dashkiosk/commit/06438d6613107de5f6069266a51098ece3c62e45) this will also work with Chromecast devices if your Docker host supports the `--net=host` option:\n\n    $ docker run --net=host \\\n                 -v /var/lib/dashkiosk/database:/database \\\n                 -e \"chromecast__enabled=1\" \\\n                 -e \"chromecast__receiver=http://<DOCKER_HOST_IP>:8081/receiver\" \\\n                 -e \"port=8081\" \\\n                 vincentbernat/dashkiosk:latest\n\nTo start without Chromecast support, simply run:\n\n    $ docker run -d -p 8080:8080 \\\n                 -v /var/lib/dashkiosk/database:/database \\\n                 vincentbernat/dashkiosk:latest\n\nUsing `latest` can be broken from time to time. You may prefer a\nstable tag, like `2.6.1`.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json",
    "application/vnd.docker.distribution.manifest.v1+prettyjws"
  ],
  "content_types": [
    "image"
  ]
}