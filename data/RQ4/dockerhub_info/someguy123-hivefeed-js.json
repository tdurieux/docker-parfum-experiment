{
  "user": "someguy123",
  "name": "hivefeed-js",
  "namespace": "someguy123",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Hive automated pricefeed software written in NodeJS",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 222,
  "last_updated": "2021-09-27T14:28:59.660389Z",
  "date_registered": "2020-10-21T14:53:47.465276Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "someguy123",
  "has_starred": false,
  "full_description": "Hive Feed JS\n============\n\nThis is a Hive Price Feed for witnesses on the [HIVE Network](https://hive.io). It's\nwritten in Node.JS and uses Hive's [Hive-JS](https://www.npmjs.com/package/@hiveio/hive-js).\n\nRecommended NodeJS version: v12.19.0.\n\nInstallation\n========\n\nFirst, download the git repository, then edit `config.json` as needed. The interval is in minutes.\n\n```\ngit clone https://github.com/Someguy123/hivefeed-js.git\ncd hivefeed-js\ncp config.example.json config.json\nnano config.json\n```\n\nI recommend using Docker, however you can also use a locally installed copy of Node v8.11.4 or higher.\n\n**Starting Via Docker**\n\n```sh\n\n# If you don't have docker installed yet, you can easily install it using run.sh\n./run.sh install_docker\n\n# (Optional) To save a little time, you can use my binary docker image, instead of having\n# to build the container - which takes a few minutes (vs. a few seconds via binary install)\n./run.sh install\n\n# Now just start your feed :)\n./run.sh start\n\n# Check the logs / status to make sure it's working properly\n./run.sh logs       # Check the status with docker logs\n./run.sh status     # This will also help you check if it's running or not.\n\n# If you need to force update your feed at any point\n./run.sh publish\n\n# Other useful commands:\n./run.sh stop       # To stop the hivefeed-js container\n./run.sh restart    # To restart the hivefeed-js container (e.g. after config changes)\n./run.sh build      # If you don't want to / can't use my binary image, this will force build a new image locally.\n\n```\n\n**Starting Via NodeJS (assuming you have the correct version installed)**\n\n```\nnpm install\nnpm start\n```\n\nFull explanation for usage with nodejs: https://peakd.com/witness/@rishi556/how-to-setup-hive-witness-pricefeed-using-hivefeed-js\n\n**Easy update with Docker**\n\nTo update the dockerised version simply do the following:\n\n```sh\ngit pull\n./run.sh install\n./run.sh restart\n```\n\n**Crontab**\n\nAs NodeJS is somewhat unreliable, it's recommended to use a cron to restart it every 3 to 4 hrs.\n\n    crontab -e\n\nFor docker you can use the following (restarts every 4 hrs)\n\n```\n0 */4   *  *    *    docker restart hivefeed\n```\n\nConfiguration\n===========\n\n```\n{\n    \"name\": \"your hive name\",\n    \"signing_keys\" : {\n    \"Public Signing Key\" : \"Private Signing Key\"\n    },\n    \"network\": \"hive\",\n    \"interval\": 60,\n    \"peg\": false,\n    \"peg_multi\": 1\n}\n```\n\n- **name** (REQUIRED) - The name of the hive account that will publish the feed\n\n- **signing_keys** (dictionary - alternative/combo to `wif`) - Witness signing keys as a dictionary `{\"pubkey\": \"privkey\", ...}`, can be used as either an alternative to `wif`, or in combination as backup keys\n\n- **node** (default: `https://hived.privex.io`) - The HTTP(S) URL of the hive node to use, e.g. `https://hived.privex.io`\n\n- **interval** (default: `60`) - The number of minutes between publishing the feed\n\n- **network** (default: `hive`) - The network (chain) you're using this for. For using the hive long term testnet, set to `testnet`. Options are: `hive` `testnet`\n\n- **peg** (default: `false`) - Set to true only if you want to adjust your price feed bias\n\n- **peg_multi** (default: `1`) - If \"peg\" is set to true, then this will change the \"quote\" to 1 / peg_multi. If you set \"peg_multi\" to 2 it will show a 100% bias on your feed.\n\n\nAdvanced Configuration Options\n==============================\n\n**NOTE:** The settings `ex_symbol`, `ex_compare`, `base_symbol` and `quote_symbol` normally do not need to be adjusted.\n\nJust set the correct `network`, and those settings will be automatically updated to the correct values.\n\n`wif` - Your private active key if you'd use that instead. You can use this in replacement to `signing_keys` or alongside it.\n\n`ex_symbol` - The symbol we're obtaining the price of. Default: `hive`\n\n`ex_compare` - The symbol we're pricing `ex_symbol` with (i.e. the other half of the exchange pair). Default: `usd`\n\n`base_symbol` - The symbol used for the `\"base\": \"0.512 HBD\"` part of the feed. Default: `HBD`\n\n`quote_symbol` - The symbol used for the `\"quote\": \"1.000 HIVE\"` part of the feed. Default: `HIVE`\n\n`alternate_nodes` - Alternate nodes to use if the main provided one is down. Provided as an array of nodes. Default : `[\"https://api.hive.blog\", \"https://api.deathwing.me\"]`\n\n`chain_id` - Chain id of the chain that you are using. Default: `beeab0de00000000000000000000000000000000000000000000000000000000`\n\n`address_prefix` -  Address prefix of the chain that you are using. Default: `STM`\n\n`disable_exchanges` - A list of exchange `code` 's to disable. Exchanges listed here will not be used\ndirectly (i.e. get price for A/B), nor indirectly (i.e. get price for A/D by converting A/C then C/D).\n\nExample (disable all exchanges...):\n\n```json\n{\n    \"disable_exchanges\": [\"bittrex\", \"poloniex\", \"kraken\", \"ionomy\", \"binance\"]\n}\n```\n\n`exchanges_no_provide` - Disable use of specific coin pairs per exchange, for example, you might want\nto temporarily ban the usage of HIVE/BTC from Poloniex.\n\nExample (block HIVE/BTC from poloniex, block BTC/USDT on Kraken):\n\n```json\n{\n    \"exchanges_no_provide\": {\n        \"poloniex\": [\n            [\"hive\", \"btc\"]\n        ],\n        \"kraken\": [\n            [\"btc\", \"usdt\"]\n        ]\n    },\n}\n```\n\n`exchanges_provide` - Add new coin pairs to exchanges, allowing the user to inform hivefeed-js of\nnew pairs supported by a given exchange.\n\nBy default, most exchange adapters have the following pairs enabled (if the exchange supports them):\n\n    - BTC/USD\n    - BTC/USDT\n    - USDT/USD\n    - HIVE/BTC\n    - HIVE/USD (preferred over HIVE/BTC)\n\nExample (add BTC/DASH, EOS/USD, EOS/BTC to bittrex - add EOS/BTC to kraken):\n\n```json\n{\n    \"exchanges_provide\": {\n        \"bittrex\": [\n            [\"btc\",\"dash\"],\n            [\"eos\",\"usd\"],\n            [\"eos\",\"btc\"]\n        ],\n        \"kraken\": [\n            [\"eos\", \"btc\"]\n        ]\n    }\n}\n```\n\n\n\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}