{
  "user": "mtlynch",
  "name": "logpaste",
  "namespace": "mtlynch",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 2196,
  "last_updated": "2022-08-15T04:52:27.709948Z",
  "date_registered": "2021-02-25T02:18:35.273166Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "mtlynch",
  "has_starred": false,
  "full_description": "# logpaste\n\n[![CircleCI](https://circleci.com/gh/mtlynch/logpaste.svg?style=svg)](https://circleci.com/gh/mtlynch/logpaste)\n[![Docker Pulls](https://img.shields.io/docker/pulls/mtlynch/logpaste.svg?maxAge=604800)](https://hub.docker.com/r/mtlynch/logpaste/)\n[![License](http://img.shields.io/:license-mit-blue.svg?style=flat-square)](LICENSE)\n\nA minimalist web service for uploading and sharing log files.\n\n[![LogPaste animated demo](https://raw.githubusercontent.com/mtlynch/logpaste/master/.readme-assets/demo.gif)](https://raw.githubusercontent.com/mtlynch/logpaste/master/.readme-assets/demo.gif)\n\n## Features\n\n* Accept text uploads from command-line, JavaScript, and web UI\n* Simple to deploy\n  * Runs in a single Docker container\n  * Fits in the free tier of Heroku\n* Easy database management\n  * Syncs persistent data to any S3-compatible cloud storage provider\n* Customizable UI without changing source code\n\n## Demo\n\n* <http://logpaste.com>\n\n## Run LogPaste\n\n### From source\n\n```bash\nPORT=3001 go run main.go\n```\n\n### From Docker\n\nTo run LogPaste within a Docker container, mount a volume from your local system to store the LogPaste sqlite database.\n\n```bash\ndocker run \\\n  -e \"PORT=3001\" \\\n  -p 3001:3001/tcp \\\n  --volume \"${PWD}/data:/app/data\" \\\n  --name logpaste \\\n  mtlynch/logpaste\n```\n\n### From Docker + cloud data replication\n\nIf you specify settings for an S3 bucket, LogPaste will use [Litestream](https://litestream.io/) to automatically replicate your data to S3.\n\nYou can kill the container and start it later, and it will restore your data from the S3 bucket and continue as if there was no interruption.\n\n```bash\nLITESTREAM_ACCESS_KEY_ID=YOUR-ACCESS-ID\nLITESTREAM_SECRET_ACCESS_KEY=YOUR-SECRET-ACCESS-KEY\nLITESTREAM_REGION=YOUR-REGION\nDB_REPLICA_URL=s3://your-bucket-name/db\n\ndocker run \\\n  -e \"PORT=3001\" \\\n  -e \"LITESTREAM_ACCESS_KEY_ID=${LITESTREAM_ACCESS_KEY_ID}\" \\\n  -e \"LITESTREAM_SECRET_ACCESS_KEY=${LITESTREAM_SECRET_ACCESS_KEY}\" \\\n  -e \"LITESTREAM_REGION=${LITESTREAM_REGION}\" \\\n  -e \"DB_REPLICA_URL=${DB_REPLICA_URL}\" \\\n  -p 3001:3001/tcp \\\n  --name logpaste \\\n  mtlynch/logpaste\n```\n\nSome notes:\n\n* Only run one Docker container for each S3 location\n  * LogPaste can't sync writes across multiple instances.\n\n### With custom site settings\n\nLogPaste offers some options to customize the text for your site. Here's an example that uses a custom title, subtitle, and footer:\n\n```bash\nSITE_TITLE=\"My Cool Log Pasting Service\"\nSITE_SUBTITLE=\"Upload all your logs for FooBar here\"\nSITE_FOOTER=\"<h2>Notice</h2><p>Only cool users can share logs here.</p>\"\nSITE_DARK_MODE=\"true\"\nSITE_SHOW_DOCUMENTATION=\"false\" # Hide usage information from homepage\nPER_MINUTE_LIMIT=\"5\" # Allow only 5 pastes per minute per IP\n\ndocker run \\\n  -e \"PORT=3001\" \\\n  -e \"SITE_TITLE=${SITE_TITLE}\" \\\n  -e \"SITE_SUBTITLE=${SITE_SUBTITLE}\" \\\n  -e \"SITE_FOOTER=${SITE_FOOTER}\" \\\n  -e \"SITE_DARK_MODE=${SITE_DARK_MODE}\" \\\n  -e \"SITE_SHOW_DOCUMENTATION=${SITE_SHOW_DOCUMENTATION}\" \\\n  -e \"PER_MINUTE_LIMIT=${PER_MINUTE_LIMIT}\" \\\n  -p 3001:3001/tcp \\\n  --name logpaste \\\n  mtlynch/logpaste\n```\n\n## Parameters\n\n### Command-line flags\n\n| Flag | Meaning | Default Value |\n|------|---------|---------------|\n| `-title` | Title to display on homepage | `\"LogPaste\"` |\n| `-subtitle` | Subtitle to display on homepage | `\"A minimalist, open-source debug log upload service\"` |\n| `-footer` | Footer to display on homepage (may include HTML) | |\n| `-darkmode` | Whether to use dark mode theme on homepage | `false` |\n| `-showdocs` | Whether to display usage documentation on homepage | `true` |\n| `-perminutelimit` | Number of pastes to allow per IP per minute | `0` (no limit) |\n\n### Docker environment variables\n\nYou can adjust behavior of the Docker container by passing these parameters with `docker run -e`:\n\n| Environment Variable | Meaning |\n|----------------------|---------|\n| `PORT`               | TCP port on which to listen for HTTP connections (defaults to 3001) |\n| `SITE_TITLE`         | Value to set the `-title` command-line flag |\n| `SITE_SUBTITLE`      | Value to set the `-subtitle` command-line flag |\n| `SITE_FOOTER`        | Value to set the `-footer` command-line flag |\n| `SITE_DARK_MODE`     | Value to set the `-darkmode` command-line flag |\n| `SITE_SHOW_DOCUMENTATION` | Value to set the `-showdocs` command-line flag |\n| `PER_MINUTE_LIMIT`   | Value to set the `-perminutelimit` command-line flag |\n| `DB_REPLICA_URL`     | S3 URL where you want to replicate the LogPaste datastore (e.g., `s3://mybucket.mydomain.com/db`) |\n| `LITESTREAM_REGION`         | AWS region where your S3 bucket is located |\n| `LITESTREAM_ACCESS_KEY_ID`  | AWS access key ID for an IAM role with access to the bucket where you want to replicate data. |\n| `LITESTREAM_SECRET_ACCESS_KEY` | AWS secret access key for an IAM role with access to the bucket where you want to replicate data. |\n\n### Docker build args\n\nIf you rebuild the Docker image from source, you can adjust the build behavior with `docker build --build-arg`:\n\n| Build Arg | Meaning | Default Value |\n| --------- | ------- | ------------- |\n| `litestream_version` | Version of [Litestream](https://litestream.io/) to use for data replication | `0.3.7` |\n\n## Deployment\n\nLogPaste is easy to deploy to cloud services. Here are some places it works well:\n\n* [fly.io](docs/deployment/fly.io.md) (recommended)\n* [Heroku](docs/deployment/heroku.md)\n* [Google Cloud Run](docs/deployment/cloud-run.md)\n* [Amazon LightSail](docs/deployment/lightsail.md)\n\n## Further reading\n\n* [\"How Litestream Eliminated My Database Server for $0.03/month\"](https://mtlynch.io/litestream/): Explains the motivation behind LogPaste\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}