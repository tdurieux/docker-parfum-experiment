{
  "user": "girish17",
  "name": "op-mattermost",
  "namespace": "girish17",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Open project and Mattermost integration to log time for a work package",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 2,
  "pull_count": 321,
  "last_updated": "2022-06-13T07:32:20.582953Z",
  "date_registered": "2019-10-10T05:05:59.235338Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "girish17",
  "has_starred": false,
  "full_description": "# op-mattermost      ![Node.js CI](https://github.com/girish17/op-mattermost/workflows/Node.js%20CI/badge.svg)  [![Donation](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://paypal.me/GirishModiletappa)                                     \n\n[OpenProject](https://www.openproject.org/) integration for [Mattermost](https://mattermost.com/). Currently, supports following operations using a slash command -\n- Create time entry for a work package\n- Create work package for a project\n- Delete work package\n- View time logs\n- Delete time log\n\n## Demo\n\n![Demo video](resource/op-mattermost-demo-v0.7.gif) recorded using [Peek](https://github.com/phw/peek).\n\n## Dependencies\n\n- OpenProject community edition\n- Mattermost preview\n- docker\n- Node js and [npm modules](package.json)\n\n## Installing dependencies\n\n- Docker\n  - [Download and install](https://docs.docker.com/install/) instructions\n- OpenProject\n  - Quick install\n    - `docker run -it -p 8080:80 -e SECRET_KEY_BASE=secret openproject/community:11` or\n  - Recommended install\n    - `sudo mkdir -p /var/lib/openproject/{pgdata, static}`\n    - `docker run -d -p 8080:80 --name openproject -e SECRET_KEY_BASE=secret \n       -v /var/lib/openproject/pgdata:/var/openproject/pgdata \n       -v /var/lib/openproject/static:/var/openproject/assets\n       openproject/community:11`\n    - `docker stop openproject`\n    - `docker start openproject`\n  - For up to date info on OpenProject installation refer their [official docs](https://docs.openproject.org/installation-and-operations/installation/docker).\n- Mattermost\n  - `docker run --name mattermost-preview -d --publish 8065:8065 --add-host dockerhost:127.0.0.1 mattermost/mattermost-preview`\n- Node js\n  - [Download and install](https://nodejs.org/en/download/)\n  - Run `npm install` to install npm dependencies\n\n## Setup\n\n- Fork and `git clone` the repo using HTTPS\n- Install and launch all the dependencies as mentioned above and open the cloned directory in an editor or IDE of your choice\n- Run `sh configure.sh` to create `.env` using bash command line. Alternatively, create a `.env` file using a text editor with the following entries:\n    - `OP_URL=http://<your host or ip address>:8080/api/v3/`   (needed for pointing to OpenProject installation)\n    - `INT_URL=http://<your host or ip address>:3000/`         (needed for exposing the integration running on port 3000)\n    - `MM_URL=http://<your host or ip address>:8065/api/v4/`   (needed for pointing to Mattermost installation)\n    - `MATTERMOST_SLASH_TOKEN=<use the mattermost slash command token for logtime>` (needed for slash command validation)\n    - `MATTERMOST_BOT_TOKEN=<use the mattermost bot access token>`  (needed for validation for posting messages as bot)\n    - `OP_ACCESS_TOKEN=<openproject access token (a.k.a apikey) obtained from user account page>`\n- In the project root directory do `npm init` to generate (or update existing) `package.json` file\n- Then run `npm install` to download and install the node modules from npm\n- Run op-mattermost in the console using `npm start` (usually launches on port 3000)\n- Create a custom Mattermost slash command `/op` as described [here](https://docs.mattermost.com/developer/slash-commands.html#custom-slash-command) and provide localhost or IP address (with port 3000) as the request URL and method as `POST`\n- Create a bot account with *System Admin* access as described [here](https://docs.mattermost.com/developer/bot-accounts.html#bot-account-creation) \n- In OpenProject, create a custom field `billable hours` for all work packages in a project\n- Test the integration by trying `/op` in the message bar.\n\n## Command list\n\n- `/op` - Displays the general menu\n- `/op lt` - Log time for a work package\n- `/op cwp` - Create a work package for a project\n- `/op tl` - View time logs of the current user\n- `/op dwp` - Delete work package\n- `/op dtl` - Delete time log entry\n\n## Wiki\n\nDevelopment wiki is available [here](https://github.com/girish17/op-mattermost/wiki). It contains the workflows, file description and miscellaneous information necessary for development.\n\n## COPYING\n\n![GPLv3 or later](resource/gplv3-or-later.png)\n\nCopyright (C) 2021, 20, 19 Girish M\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}