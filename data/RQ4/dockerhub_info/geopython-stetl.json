{
  "user": "geopython",
  "name": "stetl",
  "namespace": "geopython",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Stetl - Streaming ETL in Python - Docker Images",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 4,
  "pull_count": 708,
  "last_updated": "2021-11-24T12:59:54.035101Z",
  "date_registered": "2017-08-04T14:21:23.149864Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "geopython",
  "has_starred": false,
  "full_description": "# Stetl - Streaming ETL\n\nStetl, streaming ETL, pronounced \"staedl\", is a lightweight ETL-framework for geospatial data conversion. \n\n[![Build Status](https://travis-ci.org/geopython/stetl.png)](https://travis-ci.org/geopython/stetl)\n[![Documentation Status](https://img.shields.io/badge/docs-latest-brightgreen.svg)](http://stetl.readthedocs.org/en/latest)\n[![Gitter Chat](http://img.shields.io/badge/chat-online-brightgreen.svg)](https://gitter.im/geopython/stetl)\n\nNotice: the Stetl GH repo is now at the [GeoPython GH organization](https://github.com/geopython).\n\n# License\n\nStetl is released under a [GNU GPL v3](https://en.wikipedia.org/wiki/GNU_General_Public_License) license\n(see [LICENSE.txt](LICENSE.txt)).\n\n## Documentation\n\nThe Stetl website and documentation can be found via http://stetl.org.\nFor a quick overview read the [5-minute Stetl-introduction](http://www.slideshare.net/justb4/5-minute-intro-to-setl), \nor a [more detailed presentation](http://www.slideshare.net/justb4/stetl-foss4g20131024v1).\nStetl was presented at several events like the\n[FOSS4G 2013 in Nottingham](http://2013.foss4g.org) and [GeoPython 2016](http://www.geopython.net).\n\n## Concepts \n\nStetl basically glues together existing parsing and transformation tools like [GDAL/OGR](http://gdal.org), Jinja2 and \nXSLT with custom Python code. By using native libraries like `libxml2` and `libxslt` (via Python `lxml`) Stetl is speed-optimized.\n\nA configuration file, in Python config `.ini` format, specifies a chained sequence of transformation \nsteps: typically an `Input` connected to one or more `Filters`, and finally to an `Output`.\nAt runtime, this sequence is instantiated and run as a linked series of Python objects. These objects are \nsymbolically specified (by their module/class name) and parameterized in the config file. \nVia the `stetl -c <config file>`  command, the transformation is executed.\n\nStetl has been proven to handle 10's of millions of GML objects without any memory issues.\nThis is achieved through a technique called \"streaming and splitting\". \nFor example: using the `OgrPostgisInput` module an GML stream can be generated from the database.\nA component called the `GmlSplitter` can split this stream into manageable chunks (like 20000 features) \nand feed this upstream into the ETL chain.\n\n## Use Cases\n\nStetl has been found particularly useful for complex GML-related ETL-cases, like those found\nwithin [EU INSPIRE](http://inspire.ec.europa.eu/) Data Harmonization and the transformation\nof GML/XML-based National geo-datasets to for example PostGIS.\n\nMost of the data conversions within the [Dutch NLExtract Project](https://github.com/nlextract/NLExtract) apply Stetl.\n\nStetl also proved to be very effective in [IoT-related transformations involving the SensorWeb/SOS](https://github.com/smartemission).\n\n## Examples\n\nBrowse all examples under the [examples dir](examples). \nBest is to start with the [basic examples](examples/basics)\n\n## Installation\n \nStetl can be installed via PyPi `pip install stetl` and recently as a [Stetl Docker image](https://hub.docker.com/r/geopython/stetl).\nMore on [installation in the documentation](http://www.stetl.org/en/latest/install.html).\n\n## Contributing\n\nAnyone and everyone is welcome to contribute. Please take a moment to\nreview the [guidelines for contributing](CONTRIBUTING.md).\n\n* [Bug reports](CONTRIBUTING.md#bugs)\n* [Feature requests](CONTRIBUTING.md#features)\n* [Pull requests](CONTRIBUTING.md#pull-requests)\n\n## Origins\n\nStetl originated in the INSPIRE-FOSS project: [2009-2013 now archived](https://github.com/justb4/inspire-foss). \nSince then Stetl evolved into a wider use like\ntransforming [Dutch GML-based Open Datasets](https://github.com/nlextract/NLExtract) such as IMGEO/BGT (Large Scale Topography) \nand IMKAD/BRK (Cadastral Data) and [Sensor Data Transformation and Calibration](https://github.com/smartemission/docker-se-stetl).\n\n## Finally\n\nThe word \"stetl\" is also an alternative writing for \"shtetl\":\nhttp://en.wikipedia.org/wiki/Stetl : \"...Material things were neither disdained nor\nextremely praised in the shtetl. Learning and education were the ultimate measures of \nworth in the eyes of the community,\nwhile money was secondary to status...\"\n\n\n\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}