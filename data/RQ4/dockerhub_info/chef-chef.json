{
  "user": "chef",
  "name": "chef",
  "namespace": "chef",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "A systems integration framework, built to bring the benefits of config mgmt to your infrastructure.",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 69,
  "pull_count": 3549972,
  "last_updated": "2023-01-05T18:30:57.919661Z",
  "date_registered": "2015-12-04T00:47:41.771951Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "chef",
  "has_starred": false,
  "full_description": "## What is Chef?\nChef is a configuration management tool designed to bring automation to your entire infrastructure.\n\n* Documentation: [https://docs.chef.io](https://docs.chef.io)\n* Source: [https://github.com/chef/chef/tree/master](https://github.com/chef/chef/tree/master)\n* Tickets/Issues: [https://github.com/chef/chef/issues](https://github.com/chef/chef/issues)\n* Slack: [Chef Community Slack](https://community-slack.chef.io/)\n* Mailing list: [https://discourse.chef.io](https://discourse.chef.io)\n\n## How do I use this image?\nThis image is intended for use with [kitchen-dokken](https://github.com/someara/kitchen-dokken) only. Please check out it's README for instructions on usage.\n\n## Tags\nChef publishes it's software using two channels: stable and current. \n* The `latest` tag is associated with the most recent version of Chef to be promoted to stable. \n* The `current` tag is associated with the most recent version of Chef to pass internal testing and published to the current channel. \n\n## How is this image built?\nThis image is built using an independent build system. Images are built, tagged, and published as they make their way through Chef Software's internal packaging system. The Dockerfile used to build this image is located [here](https://github.com/chef/chef/blob/master/Dockerfile).\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json",
    "application/vnd.docker.distribution.manifest.list.v2+json"
  ],
  "content_types": [
    "image"
  ]
}