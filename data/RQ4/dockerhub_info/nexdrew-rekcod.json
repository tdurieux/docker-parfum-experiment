{
  "user": "nexdrew",
  "name": "rekcod",
  "namespace": "nexdrew",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "docker inspect â†’ docker run",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 6,
  "pull_count": 17326,
  "last_updated": "2020-09-03T20:57:59.780422Z",
  "date_registered": "2018-04-07T18:51:50.15646Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "nexdrew",
  "has_starred": false,
  "full_description": "## Supported tags and `Dockerfile` links\n\n- [latest, 3, 3.0, 3.0.0](https://github.com/nexdrew/rekcod/blob/v3.0.0/Dockerfile)\n- [2, 2.2, 2.2.0](https://github.com/nexdrew/rekcod/blob/v2.2.0/Dockerfile)\n- [2.1, 2.1.1](https://github.com/nexdrew/rekcod/blob/v2.1.1/Dockerfile)\n\n# ![rekcod](https://raw.githubusercontent.com/nexdrew/rekcod/master/logo.png)\n\nReverse engineer a `docker run` command from an existing container (via `docker inspect`).\n\n`rekcod` can turn any of the following into a `docker run` command:\n\n1. container ids/names (`rekcod` will call `docker inspect`)\n2. path to file containing `docker inspect` output\n3. raw JSON (pass the `docker inspect` output directly)\n\nEach `docker run` command can be used to duplicate the containers.\n\n## Usage\n\nQuick run:\n\n```\n$ docker run --rm -v /var/run/docker.sock:/var/run/docker.sock nexdrew/rekcod <container>\n```\n\nPull and define alias:\n\n```\n$ docker pull nexdrew/rekcod\n$ alias rekcod=\"docker run --rm -v /var/run/docker.sock:/var/run/docker.sock nexdrew/rekcod\"\n```\n\nPass one or more container names or ids and `rekcod` will print to stdout a `docker run` command that duplicates those containers.\n\n## Fields Supported\n\n`rekcod` will translate the following `docker inspect` fields into the listed `docker run` arguments.\n\n| docker inspect               | docker run       |\n| ---------------------------- | ---------------- |\n| `Name`                       | `--name`         |\n| `HostConfig.Privileged`      | `--privileged`   |\n| `HostConfig.Runtime`         | `--runtime`      |\n| `HostConfig.Binds`           | `-v`             |\n| `HostConfig.VolumesFrom`     | `--volumes-from` |\n| `HostConfig.PortBindings`    | `-p`             |\n| `HostConfig.Links`           | `--link`         |\n| `HostConfig.PublishAllPorts` | `-P`             |\n| `HostConfig.NetworkMode`     | `--net`          |\n| `HostConfig.UTSMode`         | `--uts`          |\n| `HostConfig.RestartPolicy`   | `--restart`      |\n| `HostConfig.ExtraHosts`      | `--add-host`     |\n| `HostConfig.GroupAdd`        | `--group-add`    |\n| `HostConfig.PidMode`         | `--pid`          |\n| `HostConfig.SecurityOpt`     | `--security-opt` |\n| `Config.Hostname`            | `-h`             |\n| `Config.Domainname`          | `--domainname`   |\n| `Config.ExposedPorts`        | `--expose`       |\n| `Config.Labels`              | `-l`             |\n| `Config.Env`                 | `-e`             |\n| `Config.Attach`* !== true    | `-d`             |\n| `Config.AttachStdin`         | `-a stdin`       |\n| `Config.AttachStdout`        | `-a stdout`      |\n| `Config.AttachStderr`        | `-a stderr`      |\n| `Config.Tty`                 | `-t`             |\n| `Config.OpenStdin`           | `-i`             |\n| `Config.Entrypoint`          | `--entrypoint`   |\n| `Config.Image` &#124;&#124; `Image` | image name or id |\n| `Config.Cmd`                 | command and args |\n\n## GitHub\n\nGet more info here: https://github.com/nexdrew/rekcod\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json",
    "application/vnd.docker.distribution.manifest.list.v2+json"
  ],
  "content_types": [
    "image"
  ]
}