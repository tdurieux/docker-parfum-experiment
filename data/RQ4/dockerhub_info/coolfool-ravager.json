{
  "user": "coolfool",
  "name": "ravager",
  "namespace": "coolfool",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "A telegram bot that downloads content and mirrors them 1:1 to google drive ",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 95,
  "last_updated": "2022-07-20T20:54:11.18819Z",
  "date_registered": "2022-02-06T18:22:03.914251Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "coolfool",
  "has_starred": false,
  "full_description": "<div align=\"center\" id = \"top\">\n  <img src=\"https://github.com/CoolFool/Ravager/raw/main/ravager.png\"  alt=\"ravager logo\"/>\n  <h3>A telegram bot that sails the high seas and brings treasures from the land unknown</h3> \n</div>\n\n## Introduction\n\nThis is a telegram bot which supports torrent file,magnet uri as well as direct download links,it uses aria2 as a backend \nfor downloading the content and uploads it to google drive. It can be deployed to heroku free dyno or on a server.\n\n## Features\n\n- Support for multiple telegram chats (group and private) and Google accounts with built-in Oauth support\n- Preserves the directory structure of uploaded content and doesn't require any archiving.\n- Support for Personal and Shared Drive and changing them on the fly\n- Flexible in terms deploying and installing options\n- Single multi-arch docker image\n- Recover from failed upload\n- Download once upload multiple times\n\n\n## Environment Variables\nTo run this project, you will need to set the following environment variables (Click to expand) :\n<details>\n    <summary>>Core Environment Variables</summary>\n    <ul>\n        <details>\n            <summary>>APP_URL</summary>\n            <p>The url where the app will be hosted i.e for heroku it will be \n            https://{appname}.herokuapp.com or for self-hosted server it will be\n            https://{hostname_or_ip}:{port} where port is usally 8443</p>\n        </details>\n        <details> \n            <summary>>CLIENT_CONFIG</summary>\n                <ol>\n                    <h4>To create a Google Cloud project:</h4>\n                    <ol>\n                        <li>Open the <a href=\"https://console.cloud.google.com/\">Google Cloud Console.</a></li>\n                        <li>At the top-left, click Menu > <b>IAM & Admin</b> > <b>Create a Project.</b></li>\n                        <li>In the <b>Project Name</b> field, enter a descriptive name for your project.<br>\n                            Optional: To edit the <b>Project ID</b>, click <b>Edit</b>. The project ID can't be changed after the project is created, so choose an ID that meets your needs for the lifetime of the project.<br>\n                            In the <b>Location</b> field, click <b>Browse</b> to display potential locations for your project. Then, click <b>Select</b></li>\n                        <li>Click <b>Create.</b> The console navigates to the Dashboard page and your project is created within a few minutes.\n                    </ol>\n                    <h4>Configure the Project:</h4>\n                    <ol>\n                        <li>Open the <a href=\"https://console.cloud.google.com/home/dashboard\">Google Cloud Console Dashboard</a> and select your project</li>\n                        <li>At the top-left, click Menu > <b>APIs & Services</b> </li>\n                        <li>On the left side menu,Select <b>Library/</b></li>\n                        <li>Search for <b>Google Drive</b> in the search bar the API library and Select and <b>Enable Google Drive API</b></li>\n                        <li>Again at the top-left, click Menu > <b>APIs & Services</b> </li>\n                        <li>On the left side menu,Select <b>Credentials</b>, select <b>Create credentials</b>, then <b>OAuth client ID</b>.</li>\n                        <li>You may be prompted to set a product name on the <b>Consent screen</b>; if so, click <b>Configure consent screen</b>, supply the requested information following the notes below, and click Save to return to the Credentials screen</li>\n                        <h4>OAuth consent screen Configuration: </h4>\n                            <ol>\n                                <li>Select user type as <b>external</b></li>\n                                <li>Fill the required details</li>\n                                <li>In the scopes page,Click on <b>Add or Remove Scopes</b></li>\n                                <li>Search and Add <b>/auth/drive</b> and <b>/auth/drive.metadata</b> scopes and click on update</li>\n                                <li>You should see the scopes added in <b>Your Sensitive Scopes</b> Section</li>\n                                <li>Click on <b>Save and Continue</b> for rest of the sections</li>\n                                <li>On the OAuth consent screen Click on <b>Publish App</b> and <b>Confirm</b></li>\n                                <li>Ignore Needs verification warning for the time being,the users will only see the warning while authorizing but please note there's a limit to number of users for unverified apps</li>\n                            </ol>\n                        <li>Again On the left side menu,select <b>Credentials</b> and then select <b>Create credentials</b>, then <b>OAuth client ID</b></li>\n                        <li>Select Web Application for the Application Type. Follow the instructions to enter JavaScript origins, redirect URIs, or both.\n                            <ol>\n                                <li>In <b>Javascript Origins</b> add your domain name which should be <b>APP_URL</b></li>\n                                <li>In <b>Authorized redirect URIs</b> Add your redirect uri which should be <b>APP_URL/oauth_handler</b></li>\n                            </ol>\n                        </li>\n                        <li>Click <b>Create.</b></li>\n                        <li>Download your client_secret.json from the popup modal or from under OAuth 2.0 Client IDs</li>\n                    </ol>\n                </ol>\n        </details>\n        <details>\n            <summary>>BOT_TOKEN</summary>\n            <p>The bot token for telegram bot, for more info on how to create a bot and get\n            a token visit <a href=\"https://core.telegram.org/bots#3-how-do-i-create-a-bot\">How to create a telegram bot</a></p>\n        </details>\n        <details>\n            <summary>>STATE_SECRET_KEY</summary>\n            <p>A random alphanumeric text used as a salt in generating state for oauth authorization. <br>\n           Not required in heroku caused generator is used while deploying</p>\n        </details>\n        <details>\n            <summary>>BOT_URL</summary>\n            <p>The telegram bot url,this is usually in the form https://t.me/{bot_username}</p>\n        </details>\n        <details>\n            <summary>>ALLOWLIST</summary>\n            <p>Should there be a filter where password is required for access to the bot <br>\n                Set as \"True\" or \"False\"</p>\n        </details>\n        <details>\n            <summary>>GROUP_PASSWORD</summary>\n            <p>Password used for allowing a group chat access to the bot,should be set if \"ALLOWLIST\" is enabled</p>\n        </details>\n        <details>\n            <summary>>USER_PASSWORD</summary>\n            <p>Password used for allowing a user access to the bot,should be set if \"ALLOWLIST\" is enabled</p>\n        </details> \n    </ul>\n</details>\n<details>\n    <summary>>Optional Environment Variables</summary>\n    <ul>\n        <details>\n        <summary>>DATABASE_URL</summary>\n        <p>The DATABASE URI for custom SQL Database</p>\n        </details>\n        <details>\n        <summary>>REDIS_URL</summary>\n        <p>The URL for connecting to custom redis instance</p>\n        </details>\n        <details>\n        <summary>>LOG_LEVEL</summary>\n        <p>The log level to be displayed in console,all the log levels can be found <a href=\"https://docs.python.org/3/library/logging.html#logging-levels\">here</a><br>\n        Only numeric value is supported</p>\n        </details>\n        <details>\n        <summary>>PORT</summary>\n        <p>Custom port for hosting the application,but only Ports supported by telegram should be used when the application is not hosted behind a reverse proxy</p>\n        </details>\n    </ul>\n</details>\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n## Installation\n- Ravager can be deployed and used in the following ways\n## Docker\n    1) Download [docker-compose.yml](https://github.com/CoolFool/Ravager/blob/main/docker-compose.yml) for running on a server or [docker-compose-local.yml](https://github.com/CoolFool/Ravager/blob/main/docker-compose-local.yml) for running locally with ngrok or other tunneling service for Oauth authentication <br>\n    2) Open the file in a text editor and fill the environment variables <br>\n    3) - If `docker-compose-local.yml` is used you have to create a docker network called `ravager_net` <br>\n       - Forward the connection for `ravager_net` with port `8443` using ngrok or some other tunneling service. \n       - Get the ip for `ravager_net` using the command `docker inspect ravager_net` \n       - For ngrok the command should be as follows: `./ngrok https <ravager_net_ip>:8443`\n       - The url from ngrok will be used as telegram bot webhook and oauth endpoint \n       - Add the ngrok url and the oauth endpoint `ngrok_url/oauth_handler` to google's oauth api authorized domain. \n    4) Execute the following command in the same directory\n        ```\n        docker-compose up -d\n        ```\n    5) The bot should be up and running <br>\n    6) For checking the logs you can use `docker logs -f ravager` <br>\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n    \n## Telegram Bot Commands\n- `/start` : Start the authorization flow for google drive access\n- `/add_drive` : Set default drive either personal or shared drive through the menu\n- `/download` : Add download task\n- `/upload` : Upload content if a download fails you can reply to the source message or upload multiple times\n- `/abort` : Abort an ongoing task\n- `/admin_interface` : Admin interface access (only available in private chat and for admins)\n- `/revoke` : Revoke and delete your Google account on the bot\n- `/help` : See all the commands\n\n## Authors\n\n- [@coolfool](https://www.github.com/coolfool)\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n## License\n\n[MIT](https://choosealicense.com/licenses/mit/)\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.list.v2+json"
  ],
  "content_types": [
    "image"
  ]
}