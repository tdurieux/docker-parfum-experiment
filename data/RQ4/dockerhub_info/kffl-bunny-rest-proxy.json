{
  "user": "kffl",
  "name": "bunny-rest-proxy",
  "namespace": "kffl",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "HTTP message broker built on top of RabbitMQ",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 5985,
  "last_updated": "2022-06-07T08:32:28.13456Z",
  "date_registered": "2022-01-06T18:28:49.76023Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "kffl",
  "has_starred": false,
  "full_description": "<div align=\"center\">\n  <img alt=\"Bunny REST Proxy logo\" src=\"https://github.com/kffl/bunny-rest-proxy/raw/HEAD/docs/assets/bunny-rest-proxy-logo-dark.svg\" width=\"400\" height=\"auto\"/>\n</div>\n\n# Bunny REST Proxy\n\nBunny REST Proxy is a HTTP message broker built on top of RabbitMQ. It allows services to easily publish messages into RabbitMQ queues over HTTP as well as to consume messages utilizing both pull (HTTP GET) and push (HTTP POST to a subscriber) delivery modes.\n\n> **NOTE:**\n> Bunny REST Proxy is still under development and should not be considered production-ready at this point in time.\n\n## Quick links\n\n- [Documentation](https://kffl.github.io/bunny-rest-proxy/)\n- [Quickstart guide](https://kffl.github.io/bunny-rest-proxy/getting-started/)\n- [GitHub Repository](https://github.com/kffl/bunny-rest-proxy)\n- [Report a bug](https://github.com/kffl/bunny-rest-proxy/issues)\n\n## Using this container image\n\n```bash\n# this example assumes that you have Bunny REST Proxy config.yml file in your working directory\ndocker network create bunny\ndocker run -d --hostname rabbit --net bunny --name rabbitmq rabbitmq:3-management\ndocker run -p 3672:3672 -v $(pwd)/config.yml:/app/config.yml --net bunny \\\n   --env BRP_CONN_STR=\"amqp://guest:guest@rabbitmq:5672?heartbeat=30\" -d \\\n   kffl/bunny-rest-proxy\n```",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}