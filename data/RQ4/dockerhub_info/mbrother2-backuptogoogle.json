{
  "user": "mbrother2",
  "name": "backuptogoogle",
  "namespace": "mbrother2",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "backuptogoogle in docker",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 54,
  "last_updated": "2020-05-12T03:59:05.703315Z",
  "date_registered": "2020-05-11T01:23:17.633892Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "mbrother2",
  "has_starred": false,
  "full_description": "# Quick reference\n- **Maintained by:** [mbrother2](https://github.com/mbrother2/backuptogoogle)\n- **Where to get help:** [the Docker Community Forums](https://forums.docker.com/) or [Stack Overflow](https://stackoverflow.com/search?tab=newest&q=docker)\n\n# Supported tags and respective `Dockerfile` links\n- [`1.5.1-alpine, latest`](https://github.com/mbrother2/backuptogoogle/blob/master/Dockerfile)\n\n# Quick reference (cont.)\n- Where to file issues: https://github.com/mbrother2/backuptogoogle/issues\n\n# What is backuptogoogle( butgg)?\nBackup to Google Drive use [gdrive](https://github.com/gdrive-org/gdrive)\n\n# What can this script do?\n- Complie gdrive (https://github.com/gdrive-org/gdrive) on your server with your Google credential\n- Create cron auto backup\n- Exclude file/directory when run cron backup\n- Sync backup directory from local to Google Drive\n- Compress backup directory before upload\n- Send error email if upload to Google Drive fail\n- Auto remove old backup on Google Drive\n- Run upload from your backup directory to Google Drive whenever you want\n- Detail log\n\n# Structure (in container)\n```\n/root\n   ├── bin\n   │    └── gdrive\n   ├── .gdrive\n   │    ├── butgg.conf\n   │    ├── butgg.log\n   │    ├── exclude.list (exist if you create)\n   │    ├── detail.log (debug log if run fail)\n   │    └── token_v2.json\n   └── /usr/local/bin\n        ├── cron_backup.bash\n        └── docker-entrypoint.sh\n```\n\n# How to use this image\n## 1. Build gdrive only\nRun command:\n```\ndocker run --rm --env GG_CLIENT_ID=xxxxxx --env GG_CLIENT_SECRET=xxxxxx -v $PWD:/root/bin mbrother2/backuptogoogle build\n```\n\n## 2. Build gdrive + config backuptogoogle + run cron\nRun commands:\n```\nmkdir /root/gdrive /root/conf\ndocker run --rm -it --env GG_CLIENT_ID=xxxxxx --env GG_CLIENT_SECRET=xxxxxx -v /root/gdrive:/root/bin -v /root/conf:/root/.gdrive mbrother2/backuptogoogle setup\ndocker run -d -v /root/gdrive:/root/bin -v /root/conf:/root/.gdrive -v /your_dir_you_want_to_backup_on_host_machine:/root/backup mbrother2/backuptogoogle cron\n```\nYou can replace `/root/gdrive` and `/root/conf` with any directory if you want. REMEMBER change `/your_dir_you_want_to_backup_on_host_machine`to your really backup directory!\n\n`/root/bin` directory contains gdrive bin file\n\n`/root/conf` directory contains token_v2.json, butgg.conf, butgg.log file\n\n`/your_dir_you_want_to_backup_on_host_machine` directory on host machine which you want to backup\n\n## 3. Use with docker-compose\nRun command:\n```\ncurl -o docker-compose.yml https://raw.githubusercontent.com/mbrother2/backuptogoogle/master/docker-compose.yml\n```\nReplace `GG_CLIENT_ID` `GG_CLIENT_SECRET` and other variables if you want. REMEMBER replace `/your_dir_you_want_to_backup_on_host_machine` (line 21) to your really backup directory in docker-compose.yml file then run commands:\n```\ndocker-compose run --rm butgg setup\ndocker-compose up -d\n```\n\n## 4. Setup credential only\nRun command:\n```\ndocker run --rm -it --env GG_CLIENT_ID=xxxxxx --env GG_CLIENT_SECRET=xxxxxx -v /root/conf:/root/.gdrive mbrother2/backuptogoogle credential\n```\n\n## 5. Setup config only\nRun command:\n```\ndocker run --rm -it --env GG_CLIENT_ID=xxxxxx --env GG_CLIENT_SECRET=xxxxxx -v /root/conf:/root/.gdrive mbrother2/backuptogoogle config\n```\n\n## 6. Setup credential + config backuptogoogle\nRun command:\n```\ndocker run --rm -it --env GG_CLIENT_ID=xxxxxx --env GG_CLIENT_SECRET=xxxxxx -v /root/conf:/root/.gdrive mbrother2/backuptogoogle setup\n```",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}