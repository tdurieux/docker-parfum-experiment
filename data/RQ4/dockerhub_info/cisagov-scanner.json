{
  "user": "cisagov",
  "name": "scanner",
  "namespace": "cisagov",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 126,
  "last_updated": "2023-01-06T10:10:20.572458Z",
  "date_registered": "2019-11-26T22:14:14.783667Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "cisagov",
  "has_starred": false,
  "full_description": "# pshtt, trustymail, and sslyze Scanner #\n\n[![GitHub Build Status](https://github.com/cisagov/scanner/workflows/build/badge.svg)](https://github.com/cisagov/scanner/actions/workflows/build.yml)\n[![CodeQL](https://github.com/cisagov/scanner/workflows/CodeQL/badge.svg)](https://github.com/cisagov/scanner/actions/workflows/codeql-analysis.yml)\n[![Known Vulnerabilities](https://snyk.io/test/github/cisagov/scanner/badge.svg)](https://snyk.io/test/github/cisagov/scanner)\n\n## Docker Image ##\n\n[![Docker Pulls](https://img.shields.io/docker/pulls/cisagov/scanner)](https://hub.docker.com/r/cisagov/scanner)\n[![Docker Image Size (latest by date)](https://img.shields.io/docker/image-size/cisagov/scanner)](https://hub.docker.com/r/cisagov/scanner)\n[![Platforms](https://img.shields.io/badge/platforms-amd64-blue)](https://hub.docker.com/r/cisagov/scanner/tags)\n\nThis is a Docker container that uses\n[domain-scan](https://github.com/18F/domain-scan) to scan domains\nusing [pshtt](https://github.com/cisagov/pshtt),\n[trustymail](https://github.com/cisagov/trustymail), and\n[sslyze](https://github.com/nabla-c0d3/sslyze).\n\nThis Docker container is intended to be run via\n[cisagov/orchestrator](https://github.com/cisagov/orchestrator).\n\n**N.B.:** The secrets in the `src/secrets` directory are only used\nwhen testing via the `docker-compose.yml` composition.  Normally this\nDocker container is run via the Docker composition in\n[cisagov/orchestrator](https://github.com/cisagov/orchestrator), which\nexpects the secrets in a different location.\n\n## Running ##\n\n### Running with Docker ###\n\nTo run the `cisagov/scanner` image via Docker:\n\n```console\ndocker run cisagov/scanner:1.3.4\n```\n\n### Running with Docker Compose ###\n\n1. Create a `docker-compose.yml` file similar to the one below to use [Docker Compose](https://docs.docker.com/compose/).\n\n    ```yaml\n    ---\n    version: \"3.7\"\n\n    services:\n      scanner:\n        image: cisagov/scanner:1.3.4\n        volumes:\n          - type: bind\n            source: <your_log_dir>\n            target: /home/cisa/shared\n    ```\n\n1. Start the container and detach:\n\n    ```console\n    docker compose up --detach\n    ```\n\n## Using secrets with your container ##\n\nThis container also supports passing sensitive values via [Docker\nsecrets](https://docs.docker.com/engine/swarm/secrets/).  Passing sensitive\nvalues like your credentials can be more secure using secrets than using\nenvironment variables.  See the\n[secrets](#secrets) section below for a table of all supported secret files.\n\n1. To use secrets, create an `aws_config` file in [this\n   format](https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html):\n\n    ```ini\n    [default]\n    aws_access_key_id=AKIAIOSFODNN7EXAMPLE\n    aws_secret_access_key=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\n    region=us-east-1\n    output=json\n    ```\n\n1. Then add the secrets to your `docker-compose.yml` file:\n\n    ```yaml\n    ---\n    version: \"3.7\"\n\n    secrets:\n      aws_config:\n        file: ./secrets/aws_config\n\n    services:\n      scanner:\n        image: cisagov/scanner:1.3.4\n        volumes:\n          - type: bind\n            source: <your_log_dir>\n            target: /home/cisa/shared\n        secrets:\n          - source: aws_config\n            target: aws_config\n    ```\n\n## Updating your container ##\n\n### Docker Compose ###\n\n1. Pull the new image from Docker Hub:\n\n    ```console\n    docker compose pull\n    ```\n\n1. Recreate the running container by following the [previous instructions](#running-with-docker-compose):\n\n    ```console\n    docker compose up --detach\n    ```\n\n### Docker ###\n\n1. Stop the running container:\n\n    ```console\n    docker stop <container_id>\n    ```\n\n1. Pull the new image:\n\n    ```console\n    docker pull cisagov/scanner:1.3.4\n    ```\n\n1. Recreate and run the container by following the [previous instructions](#running-with-docker).\n\n## Image tags ##\n\nThe images of this container are tagged with [semantic\nversions](https://semver.org) of the underlying example project that they\ncontainerize.  It is recommended that most users use a version tag (e.g.\n`:1.3.4`).\n\n| Image:tag | Description |\n|-----------|-------------|\n|`cisagov/scanner:1.3.4`| An exact release version. |\n|`cisagov/scanner:1.3`| The most recent release matching the major and minor version numbers. |\n|`cisagov/scanner:1`| The most recent release matching the major version number. |\n|`cisagov/scanner:edge` | The most recent image built from a merge into the `develop` branch of this repository. |\n|`cisagov/scanner:nightly` | A nightly build of the `develop` branch of this repository. |\n|`cisagov/scanner:latest`| The most recent release image pushed to a container registry.  Pulling an image using the `:latest` tag [should be avoided.](https://vsupalov.com/docker-latest-tag/) |\n\nSee the [tags tab](https://hub.docker.com/r/cisagov/scanner/tags) on Docker\nHub for a list of all the supported tags.\n\n## Volumes ##\n\n| Mount point | Purpose        |\n|-------------|----------------|\n| `/home/cisa/shared` |  Output |\n\n## Ports ##\n\nThere are no ports exposed by this container.\n\n<!-- The following ports are exposed by this container: -->\n\n<!-- | Port | Purpose        | -->\n<!-- |------|----------------| -->\n<!-- | 8080 | Example only; nothing is actually listening on the port | -->\n\n<!-- The sample [Docker composition](docker-compose.yml) publishes the -->\n<!-- exposed port at 8080. -->\n\n## Environment variables ##\n\n### Required ###\n\nThere are no required environment variables.\n\n<!--\n| Name  | Purpose | Default |\n|-------|---------|---------|\n| `REQUIRED_VARIABLE` | Describe its purpose. | `null` |\n-->\n\n### Optional ###\n\n| Name  | Purpose | Default |\n|-------|---------|---------|\n| `AWS_CONFIG_FILE` | The path to the configuration file containing the AWS credentials. | `null` |\n| `AWS_PROFILE` | The AWS profile to use. | `null` |\n\n## Secrets ##\n\n| Filename     | Purpose |\n|--------------|---------|\n| aws_config | AWS credentials allowing read-only access to the Elasticsearch DMARC database in [this format](https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html) |\n\n## Building from source ##\n\nBuild the image locally using this git repository as the [build context](https://docs.docker.com/engine/reference/commandline/build/#git-repositories):\n\n```console\ndocker build \\\n  --build-arg VERSION=1.3.4 \\\n  --tag cisagov/scanner:1.3.4 \\\n  https://github.com/cisagov/scanner.git#develop\n```\n\n## Cross-platform builds ##\n\nTo create images that are compatible with other platforms, you can use the\n[`buildx`](https://docs.docker.com/buildx/working-with-buildx/) feature of\nDocker:\n\n1. Copy the project to your machine using the `Code` button above\n   or the command line:\n\n    ```console\n    git clone https://github.com/cisagov/scanner.git\n    cd scanner\n    ```\n\n1. Create the `Dockerfile-x` file with `buildx` platform support:\n\n    ```console\n    ./buildx-dockerfile.sh\n    ```\n\n1. Build the image using `buildx`:\n\n    ```console\n    docker buildx build \\\n      --file Dockerfile-x \\\n      --platform linux/amd64 \\\n      --build-arg VERSION=1.3.4 \\\n      --output type=docker \\\n      --tag cisagov/scanner:1.3.4 .\n    ```\n\n## Contributing ##\n\nWe welcome contributions!  Please see [`CONTRIBUTING.md`](CONTRIBUTING.md) for\ndetails.\n\n## License ##\n\nThis project is in the worldwide [public domain](LICENSE).\n\nThis project is in the public domain within the United States, and\ncopyright and related rights in the work worldwide are waived through\nthe [CC0 1.0 Universal public domain\ndedication](https://creativecommons.org/publicdomain/zero/1.0/).\n\nAll contributions to this project will be released under the CC0\ndedication. By submitting a pull request, you are agreeing to comply\nwith this waiver of copyright interest.",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}