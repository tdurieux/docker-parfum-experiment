{
  "user": "gin66",
  "name": "midi2ly",
  "namespace": "gin66",
  "repository_type": null,
  "status": 1,
  "status_description": "active",
  "description": "MIDI to Lilypond converter",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 129,
  "last_updated": "2016-05-21T04:07:49.226588Z",
  "date_registered": "2016-05-17T14:32:38.98919Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "gin66",
  "has_starred": false,
  "full_description": "MIDI2LY\n-------\n\nA MIDI to Lilypond converter with these features:\n\n    - Let's you select tracks and lyrics to be embedded\n    - Automatic selection of piano tracks to bass/treble (no left/right split though)\n    - Automatic key detection\n    - Automatic detection of repeats based on identical (!) bars\n    - Repeats will fold lyrics along the bar\n    - Notes are adjusted (rounded) to 1/32 boundaries\n\nBackground:\n-----------\nIn order to compile the scores for the band of my son, I have bought Logic Pro X. Nice tool, but making short scores using repeats is just a nightmare. Typical workflow is:\n\n    1. Get the song ready in Logic primarily for Piano.\n    2. Then create two more tracks for the printout\n    3. In these new scores all loops are removed and repeats are type set manually.\n\nThe bad thing is:\n\n    * If you print the long track, those repeat signs are disturbing\n    * You cannot listen to the song with the repeats set.\n    * Hell of manual work\n    * And now imagine you want to add lyrics somehow....\n\nSo I have looked around for a solution. For music typesetting lilypond is great, so I \"just\" need to convert the Logic Pro music to lilypond format.\nThere is a nice tool musicxml2ly and Logic Pro X can export MusicXML format. So I have given it a try and it has failed miserably.\nAfter some time looking around and looking at the MusicXML format, I have come to the conclusion of this being a dead end.\nNext try has been with midi. The converter - I have found for midi to lilypond - haven't worked so well either.\nNot to mention automatic repeats detection. As I have come across python-midi and I like python programming, I have decided to write my own converter.\n\nHere it is.\n\nUsage:\n------\nPlease try for the latest usage:\n\n    ./midi2ly.py -h\n\nIn case you have Logic Pro X, then follow these steps:\n\n    1. Duplicate those tracks you want to export (assume you have used Alias+Loops)\n    2. Copy whole content of the original tracks\n    3. Select the new tracks and press 'J' in order to convert Alias+Loops into one region per track\n    4. Export as MIDI with Alt+Apple+E\n    5. Run midi2ly.py and lilypond => Done\n\nExample:\n--------\n\nI have one midifile called \"Randy Newman - When I am Gone.mid\".\nThe embedded tracks can be listed with:\n\n    ./midi2ly.py -l Randy\\ Newman\\ -\\ When\\ I\\ am\\ Gone.mid >RN.ly\n\nAnd the output is:\n\n    1 : Track(None,None)\n    2 : Track(Voice,Orchestra Oboe) with 184 lyric events\n    3 : Track(Intro,R)\n    4 : Track(Intro,L)\n\nThe first track is the meta track. For print out of the piano score with embedded lyrics the invocation would be:\n\n    ./midi2ly.py -L 2 -P 3,4 Randy\\ Newman\\ -\\ When\\ I\\ am\\ Gone.mid >RN.ly\n\nAnd then for type setting + midi output with repeats expanded just do:\n\n    lilypond RN.ly\n\nThis will create:\n\n    RN.pdf      ... the scores\n    RN-1.mid    ... with repeats unfolded\n\nDocker:\n-------\n\nIn case you lack python v3, then you can use a docker container. Either use the official one:\n\n    docker pull gin66/midi2ly\n\nOr create it locally with:\n\n    docker build -t midi2ly .\n\nAnd run it with\n\n    docker run -it --rm -v \"`pwd`\":/in midi2ly -L 2 -P 3,4 Randy\\ Newman\\ -\\ When\\ I\\ am\\ Gone.mid >RN.ly\n\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.v1+prettyjws"
  ],
  "content_types": [
    "image"
  ]
}