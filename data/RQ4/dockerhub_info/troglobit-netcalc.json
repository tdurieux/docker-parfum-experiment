{
  "user": "troglobit",
  "name": "netcalc",
  "namespace": "troglobit",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "IP network calculator",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 382,
  "last_updated": "2020-06-06T22:07:15.455059Z",
  "date_registered": "2020-05-24T20:22:32.085799Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "troglobit",
  "has_starred": false,
  "full_description": "IP network calculator\n=====================\n[![License Badge][]][License] [![Travis Status][]][Travis] [![Coverity Status][]][Coverity Scan]\n\nnetcalc is a slimmed down clone of [sipcalc][], using the output format\nof [ipcalc][].  It is written in C and only depends on a POSIX compliant\nC library.  Both IPv4 and IPv6 are supported.\n\n![Image netcalc example run](./example.png \"netcalc in action!\")\n\n\nBuild & Install\n---------------\n\n### Debian/Ubuntu\n\n    curl -sS https://deb.troglobit.com/pubkey.gpg | sudo apt-key add -\n    echo \"deb [arch=amd64] https://deb.troglobit.com/debian stable main\" | sudo tee /etc/apt/sources.list.d/troglobit.list\n    sudo apt-get update && sudo apt-get install netcalc\n\n### Docker\n\nAutomatically built images available here:\n\n* https://hub.docker.com/r/troglobit/netcalc\n\nA Dockerfile is provided to simplify building and running `netcalc`.\n\n    docker build -t netcalc:latest .\n    docker run --rm netcalc:latest netcalc 172.16.10.10/16\n\n\n### Building from Source\n\nFirst download the latest official release from GitHub:\n\n* https://github.com/troglobit/netcalc/releases\n\nAlways use the versioned tarballs, they contain all required files to be\nable to build.\n\n\n### Configure & Build\n\nThe GNU Configure & Build system use `/usr/local` as the default install\nprefix.  Here we override that to use `/usr/`, the netcalc binary will\nthen be installed in `/usr/bin`:\n\n    $ ./configure --prefix=/usr\n    $ make -j5\n    $ sudo make install-strip\n\n\n### Building from GIT\n\nIf you want to contribute, or simply just try out the latest but\nunreleased features, then you need to know a few things about the\n[GNU build system][buildsystem]:\n\n- `configure.ac` and a per-directory `Makefile.am` are key files\n- `configure` and `Makefile.in` are generated from `autogen.sh`,\n  they are not stored in GIT but automatically generated for the\n  release tarballs\n- `Makefile` is generated by `configure` script\n\nTo build from GIT; clone the repository and run the `autogen.sh` script.\nThis requires the GNU tools `automake`, `autoconf` and `libtool` to be\ninstalled on your system.  Released tarballs do not require these tools.\n\n    $ sudo apt install git automake autoconf\n\nThen you can clone the repository and create the `configure` script,\nwhich is not part of the GIT repo:\n\n    git clone https://github.com/troglobit/netcalc.git\n    cd netcalc/\n    ./autogen.sh\n    ./configure && make\n\nGIT sources are a moving target and are not recommended for production\nsystems, unless you know what you are doing!\n\n\nOrigin & References\n-------------------\n\nThe original `sipcalc` project was created by Simon Ekstrand in 2001.\nIt is no longer actively maintained, but has a lot of features and is\navailable on major Linux distributions and works on *BSD and Solaris.\n\n[Use GitHub][github] to file bug reports, questions, feature requests or\npatches â€” preferably as pull requests.\n\n[ipcalc]:          http://jodies.de/ipcalc\n[sipcalc]:         http://www.routemeister.net/\n[github]:          https://github.com/troglobit/netcalc\n[License]:         https://en.wikipedia.org/wiki/BSD_licenses\n[License Badge]:   https://img.shields.io/badge/License-BSD%203--Clause-blue.svg\n[Travis]:          https://travis-ci.org/troglobit/netcalc\n[Travis Status]:   https://travis-ci.org/troglobit/netcalc.png?branch=master\n[Coverity Scan]:   https://scan.coverity.com/projects/21276\n[Coverity Status]: https://scan.coverity.com/projects/21276/badge.svg\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}