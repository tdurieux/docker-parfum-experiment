{
  "user": "graik",
  "name": "biskit",
  "namespace": "graik",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Biskit structural bioinformatics python library and third-party programs wrapped by Biskit",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 87,
  "last_updated": "2021-02-01T20:41:28.016312Z",
  "date_registered": "2018-08-28T14:35:47.696028Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "graik",
  "has_starred": false,
  "full_description": "biskit\n==========\n___a software platform for structural bioinformatics___\n\n[![Build Status](https://travis-ci.org/graik/biskit.svg?branch=master)](https://travis-ci.org/graik/biskit)\n[![Coverage Status](https://coveralls.io/repos/github/graik/biskit/badge.svg?branch=master&service=github)](https://coveralls.io/github/graik/biskit?branch=master)\n\nPlease refer to \n            **http://biskit.pasteur.fr**\nfor installation and usage instructions.\nSee the [**biskit-2.x branch**](https://github.com/graik/biskit/tree/biskit-2.x) for the last stable Python 2.x version of Biskit.\n\nBiskit is a modular, object-oriented python library that provides\nintuitive classes for many typical tasks of structural bioinformatics\nresearch. It facilitates the manipulation and analysis of\nmacromolecular structures, protein complexes, and molecular dynamics\ntrajectories. At the same time, Biskit offers a software platform for\nthe rapid integration of external programs and new algorithms into\ncomplex structural bioinformatics workflows. Calculations are thus\noften delegated to established programs like Xplor, Amber, Hex, Prosa,\nand DelPhi; interfaces to further software can be added\neasily. \n\nPython 3 Migration\n-------------------\n\nThis is the Python 3 line of Biskit development. Note that **b**iskit (lowercase) 3 is not any longer backwards-compatible to previous **B**iskit (uppercase) 2 releases. Please check out the [`biskit-2.x` branch](https://github.com/graik/biskit/tree/biskit-2.x) if you need to use the classic Python 2.x Biskit. Note also that the new `biskit` is, currently at least, *only* compatible with Python 3.x and cannot be used with Python 2.x.\n\nThe core functionalities and many of the wrappers have been migrated. Still un-migrated are some smaller modules and most of the scripts. The new version is found in (lower case) ```biskit```. All the modules that have **not** yet been migrated are in the old ```Biskit2``` folder (which cannot be imported any longer). After installation, the new Python 3 Biskit is imported with ```import biskit```\n\nShort Installation Instructions\n--------------------------------\n\n___1. Install (plotting) dependencies___\n\nThe biskit library itself does not strictly need `biggles` and you can safely install it later. However, **biggles** (https://biggles-plot.github.io/) is an excellent plotting library with a relatively intuitive syntax that is used throughout biskit and several unittests depend on it. So you may as well get it set up right from the start:\n\nOn Debian / Ubuntu:\n  *  ```sh\n     sudo apt-get install libplot-dev plotutils  ## needed for biggles compilation\n     pip3 install biggles\n     ```\n\nOn Mac OS-X:\n  * install Quartz (https://www.xquartz.org/)\n  *  ```sh\n     brew install plotutils --with-x11\n     pip3 install biggles\n     ```\n\n___2. Install biskit___\n\n```sh\ngit clone https://github.com/graik/biskit.git biskit3\npip3 install -e biskit3\n```\n*Note:* The `-e` option will create an \"editable\" biskit installation where the git-controlled `biskit3` folder is not copied but sym-linked into your system's (or virtualenv) python `site-packages` folder [see explanation](http://codumentary.blogspot.com/2014/11/python-tip-of-year-pip-install-editable.html). *Alternatively*, run `python3 biskit3/setup.py install`\nin order to create an actual copy of the biskit source code inside your Python 3 `site-packages` folder.\n\nDepending on your environment, `pip install -e` will always install all the needed dependencies but it may or may not also create the link for putting biskit into the `$PYTHONPATH`. It seems to work within the virtualenv but not, e.g. in the OSX terminal. Test by changing to another folder, run `python` and run the following import command:\n```py\n>>> import biskit\n```\nShould this fail, you can instead add the biskit3 folder manually to your PYTHONPATH. Assuming you cloned the biskit project into `~/py/biskit3`, the following would work:\n```sh\nexport PYTHONPATH=$PYTHONPATH:~/py/biskit3\n```\nAppend this line to your `.bashrc` or `.bash_profile` file. zsh users should put it into `.zshenv`. \n\n___3. Test your installation___\n\nBiskit comes with a unittest suite that can be run using the `test.py` script that is part of the library. First you have to figure out where your biskit installation went. If you used the `pip3 install -e` command above, biskit will still be in the same location where your `git clone` created it. Otherwise, it will be in something like `/usr/local/lib/python3.7/site-packages/biskit`. If you have no idea, open a python interpreter and ... :\n\n  * ```python\n    >>> import biskit\n    >>> biskit.__path__\n    ['/usr/local/lib/python3.7/site-packages/biskit']\n    ```\n   \nNow run the biskit test suite, *except* those tests that require external programs (`-e exe`) or are tagged as `old` or `fails`:\n \n   ```sh\n   ~> python3 biskit/test.py -e exe old fails\n   ```\nOnce you have installed third-party software such as Pymol, Delphi, Xplor-NIH, DSSP, surfaceRacer, etc, you can re-run the test without the -e exe option. If you want to test individual biskit wrappers for a given program, simply call the wrapping python module which will execute this particular test. For example, if you have just installed Pymol, you can now run the biskit.exe.pymoler test case to ensure biskit and Pymol are properly working together:\n\n   ```sh\n   ~> python3 biskit/exe/pymoler.py\n   ```\n    \nThis should open a Pymoler window with a short MD movie and will, generally, give you a much more detailed test output.\n\n\nLicense\n-------\n\nBiskit is distributed under the GNU GPL version 3. See LICENSE.txt. Contact us, in case you prefer a different licensing model.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}