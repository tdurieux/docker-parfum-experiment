{
  "user": "mrtazz",
  "name": "pocketcleaner",
  "namespace": "mrtazz",
  "repository_type": null,
  "status": 1,
  "status_description": "active",
  "description": "keep your pocket clean http://code.mrtazz.com/pocketcleaner/ ",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 131,
  "last_updated": "2016-06-26T17:57:35.715036Z",
  "date_registered": "2016-06-26T17:54:55.476764Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "mrtazz",
  "has_starred": false,
  "full_description": "# pocketcleaner\n\n[![Build Status](https://travis-ci.org/mrtazz/pocketcleaner.svg?branch=master)](https://travis-ci.org/mrtazz/pocketcleaner)\n[![Coverage Status](https://coveralls.io/repos/mrtazz/pocketcleaner/badge.svg?branch=master&service=github)](https://coveralls.io/github/mrtazz/pocketcleaner?branch=master)\n[![Code Climate](https://codeclimate.com/github/mrtazz/pocketcleaner/badges/gpa.svg)](https://codeclimate.com/github/mrtazz/pocketcleaner)\n[![Packagecloud](https://img.shields.io/badge/packagecloud-available-brightgreen.svg)](https://packagecloud.io/mrtazz/pocketcleaner)\n[![GoDoc](https://godoc.org/github.com/mrtazz/pocketcleaner?status.svg)](https://godoc.org/github.com/mrtazz/pocketcleaner)\n[![MIT license](https://img.shields.io/badge/license-MIT-blue.svg)](http://opensource.org/licenses/MIT)\n\n## Overview\n\nThis is a utility to keep your [Pocket](https://getpocket.com) list small and\nmanageable. It will archive all items in your list except for the newest `n`\nitems.\n\n**WARNING**: This will *archive* items. Something you can't just undo.\n\n## Usage\n```\npocketcleaner keeps your pocket clean\n\nUsage:\n  pocketcleaner [-d | --debug] [--keep=<keepCount>]\n  pocketcleaner -h | --help | -v | --version\n\nOptions:\n  -h --help          Show this screen.\n  -d --debug         Show debug information.\n  -v --version       Show version.\n  --config=<config>  Config file to use\n  --keep=<keepCount> Count of items to keep\n```\n\n## Installation\n\n### Get auth tokens to use with pocketcleaner\n\nPocketcleaner doesn't come with any auth keys, so you will have to get your\nown. The following steps are taken from\n[here](http://www.jamesfmackenzie.com/getting-started-with-the-pocket-developer-api/).\n\n#### 1. Create an app in the [developer portal](http://getpocket.com/developer/)\n\nMake sure it has at least the `retrieve` and `modify` permissions.\n\n#### 2. Get a request token\n\n```\ncurl https://getpocket.com/v3/oauth/request -X POST \\\n-H \"Content-Type: application/json\" -H \"X-Accept: application/json\" \\\n-d '{\"consumer_key\":\"your-key-here\",\"redirect_uri\":\"http://www.google.com\"}'\n```\n\n#### 3. Authorize the app\n\nVisit the following URL in your browser and authorize the app.\n\n```\nhttps://getpocket.com/auth/authorize?request_token=request-token-here&redirect_uri=http://www.google.com\n```\n\n#### 4. Convert request token to access token\n\n```\ncurl https://getpocket.com/v3/oauth/authorize -X POST \\\n-H \"Content-Type: application/json\" -H \"X-Accept: application/json\" \\\n-d '{\"consumer_key\":\"your-key-here\",\"code\":\"request-token\"}'\n```\n\n#### 5. Make sure the token works by getting a list of your saved items\n\n```\ncurl http://getpocket.com/v3/get -X POST -H \"Content-Type: application/json\" \\\n-H \"X-Accept: application/json\" \\\n-d '{\"consumer_key\":\"your-key-here\", \"access_token\":\"access-token\"}'\n```\n\n### Install pocketcleaner\n\nThere are packages for linux up [on\npackagecloud.io](https://packagecloud.io/mrtazz/pocketcleaner) but you can also just clone the repo and build the binary yourself.\n\n```\ngo get github.com/mrtazz/pocketcleaner\ncd $GOPATH/src/github.com/mrtazz/pocketcleaner\nmake\n```\n\n### Docker\nThere is also a docker image on docker hub which you can use to run\npocketcleaner like this:\n\n```\ndocker pull mrtazz/pocketcleaner\ndocker run -i -e \"POCKETCLEANER_CONSUMER_SECRET=your_secret\" -e \"POCKETCLEANER_ACCESS_TOKEN=your_token\" --rm mrtazz/pocketcleaner\n```\n\n## Configuration\npocketcleaner reads the configuration file `$HOME/.pocketcleaner.ini` to get\nconsumer key, access token, and the number of items to keep. The format looks\nlike this:\n\n```\nconsumer_key      = consumer-key\naccess_token      = access-token\nkeep_count        = 100\n```\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}