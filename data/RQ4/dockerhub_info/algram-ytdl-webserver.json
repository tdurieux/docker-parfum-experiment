{
  "user": "algram",
  "name": "ytdl-webserver",
  "namespace": "algram",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "ðŸ“» Webserver for downloading youtube videos. Ready for docker.",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 4,
  "pull_count": 1005665,
  "last_updated": "2022-12-30T17:20:23.473095Z",
  "date_registered": "2018-09-23T14:10:09.798037Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "algram",
  "has_starred": false,
  "full_description": "# ytdl-webserver [![Build Status](https://travis-ci.com/Algram/ytdl-webserver.svg?branch=master)](https://travis-ci.com/Algram/ytdl-webserver)\nhttps://github.com/Algram/ytdl-webserver\nWebserver for downloading youtube videos. Ready for docker.\nIf you have questions, read the [blog post](https://blog.rphl.io/selfhosted-youtube-downloader-with-docker/).\n\n![Demovideo](http://imgur.com/iEpA1oQ.gif)\n\n\n## Installation\n### As a server\n``` bash\nnpm install && npm start\n```\n\n### As a docker image\n#### Basic\n```\ndocker run -d -p 3000:3000 algram/ytdl-webserver\n```\n\n#### Advanced\nBuild the docker image, create a directory to hold and access the downloaded videos on the host, and then start a container instance of the image.  \n```\ndocker build -t <your username>/ytdl-webserver .\nmkdir /tmp/videos\ndocker run -v /tmp/videos:/home/app/public/temp -p 3000:3000 -d <your username>/ytdl-webserver\n```\nIn the example above, we are creating a directory under /tmp to hold the videos and then specifying a host mount to the container that corresponds to that new directory.  You may update this to any path on your host or use a different existing path if you would prefer. The host mount also improves performance as the downloaded files are written to the native host filesystem bypassing the CoW filesystem of the container.\n\n\n## Development\nTo start contributing you only have to run one command.\n``` bash\nnpm run dev\n```\nThis will start webpack and a dev server on `localhost:8080`\n\n## License\nMIT\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}