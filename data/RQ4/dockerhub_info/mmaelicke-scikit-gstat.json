{
  "user": "mmaelicke",
  "name": "scikit-gstat",
  "namespace": "mmaelicke",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Docker image with scikit-gstat pre-installed.",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 359,
  "last_updated": "2022-02-04T16:11:49.075454Z",
  "date_registered": "2019-11-18T19:26:24.592325Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "mmaelicke",
  "has_starred": false,
  "full_description": "SciKit-GStat\n============\n\nInfo: scikit-gstat needs Python >= 3.6!\n\n.. image:: https://img.shields.io/pypi/v/scikit-gstat?color=green&logo=pypi&logoColor=yellow&style=flat-square   :alt: PyPI\n    :target: https://pypi.org/project/scikit-gstat\n\n.. image:: https://img.shields.io/github/v/release/mmaelicke/scikit-gstat?color=green&logo=github&style=flat-square   :alt: GitHub release (latest by date)\n    :target: https://github.com/mmaelicke/scikit-gstat\n\n.. image:: https://github.com/mmaelicke/scikit-gstat/workflows/Test%20and%20build%20docs/badge.svg\n    :target: https://github.com/mmaelicke/scikit-gstat/actions\n\n.. image:: https://api.codacy.com/project/badge/Grade/34022fb8b795435b8eeb5431159fa7c6\n   :alt: Codacy Badge\n   :target: https://app.codacy.com/app/mmaelicke/scikit-gstat?utm_source=github.com&utm_medium=referral&utm_content=mmaelicke/scikit-gstat&utm_campaign=Badge_Grade_Dashboard\n\n.. image:: https://codecov.io/gh/mmaelicke/scikit-gstat/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/mmaelicke/scikit-gstat\n    :alt: Codecov\n\n.. image:: https://zenodo.org/badge/98853365.svg\n   :target: https://zenodo.org/badge/latestdoi/98853365\n\nHow to cite\n-----------\n\nIn case you use SciKit-GStat in other software or scientific publications,\nplease reference this module. It is published and has a DOI. It can be cited\nas:\n\n  Mirko Mälicke, Egil Möller, Helge David Schneider, & Sebastian Müller. (2021, May 28). \n    mmaelicke/scikit-gstat: A scipy flavoured geostatistical variogram analysis toolbox \n    (Version v0.6.0). Zenodo. http://doi.org/10.5281/zenodo.4835779\n\n\nFull Documentation\n------------------\n\nThe full documentation can be found at: https://mmaelicke.github.io/scikit-gstat\n\nDescription\n-----------\n\nSciKit-Gstat is a scipy-styled analysis module for geostatistics. It includes\ntwo base classes ``Variogram`` and ``OrdinaryKriging``. Additionally, various\nvariogram classes inheriting from ``Variogram`` are available for solving\ndirectional or space-time related tasks.\nThe module makes use of a rich selection of semi-variance\nestimators and variogram model functions, while being extensible at the same\ntime.\nThe estimators include:\n\n- matheron\n- cressie\n- dowd\n- genton\n- entropy\n- two experimental ones: quantiles, minmax\n\nThe models include:\n\n- sperical\n- exponential\n- gaussian\n- cubic\n- stable\n- matérn\n\nwith all of them in a nugget and no-nugget variation. All the estimator are\nimplemented using numba's jit decorator. The usage of numba might be subject\nto change in future versions.\n\n\nInstallation\n~~~~~~~~~~~~\n\nPyPI\n^^^^\n.. code-block:: bash\n\n  pip install scikit-gstat\n\n**Note:** It can happen that the installation of numba or numpy is failing using pip. Especially on Windows systems. \nUsually, a missing Dll (see eg. `#31 <https://github.com/mmaelicke/scikit-gstat/issues/31>`_) or visual c++ redistributable is the reason. \n\nGIT:\n^^^^\n\n.. code-block:: bash\n\n  git clone https://github.com/mmaelicke/scikit-gstat.git\n  cd scikit-gstat\n  pip install -r requirements.txt\n  pip install -e .\n\nConda-Forge:\n^^^^^^^^^^^^\n\nFrom Version `0.5.5` on `scikit-gstat` is also available on conda-forge.\nNote that for versions `< 1.0` conda-forge will not always be up to date, but\nfrom `1.0` on, each minor release will be available.\n\n.. code-block:: bash\n\n  conda install -c conda-forge scikit-gstat\n\n\nQuickstart\n----------\n\nThe `Variogram` class needs at least a list of coordiantes and values.\nAll other attributes are set by default.\nYou can easily set up an example by using the `skgstat.data` sub-module,\nthat includes a growing list of sample data.\n\n.. code-block:: python\n\n  import skgstat as skg\n\n  # the data functions return a dict of 'sample' and 'description'\n  coordinates, values = skg.data.pancake(N=300).get('sample')\n\n  V = skg.Variogram(coordinates=coordinates, values=values)\n  print(V)\n\n.. code-block:: bash\n\n  spherical Variogram\n  -------------------\n  Estimator:         matheron\n  Effective Range:   353.64\n  Sill:              1512.24\n  Nugget:            0.00\n\nAll variogram parameters can be changed in place and the class will automatically\ninvalidate and update dependent results and parameters.\n\n.. code-block:: python\n\n  V.model = 'exponential'\n  V.n_lags = 15\n  V.maxlag = 500\n\n  # plot - matplotlib and plotly are available backends\n  fig = V.plot()\n\n.. image:: ./example.png",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}