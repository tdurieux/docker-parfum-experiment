{
  "user": "im2nguyen",
  "name": "rover",
  "namespace": "im2nguyen",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Interactive Terraform visualizer.\n\n",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 19543,
  "last_updated": "2022-07-22T17:15:27.819254Z",
  "date_registered": "2021-07-02T07:41:39.776015Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "im2nguyen",
  "has_starred": false,
  "full_description": "## Rover - Terraform Visualizer\n\nRover is a [Terraform](http://terraform.io/) visualizer. \n\nIn order to do this, Rover:\n\n1. generates a [`plan`](https://www.terraform.io/docs/cli/commands/plan.html#out-filename) file and parses the configuration in the root directory.\n1. parses the `plan` and configuration files to generate three items: the resource overview (`rso`), the resource map (`map`), and the resource graph (`graph`).\n1. consumes the `rso`, `map`, and `graph` to generate an interactive configuration and state visualization hosts on `localhost:9000`.\n\n## Quickstart\n\nThe fastest way to get up and running with Rover is through Docker.\n\nRun the following command in any Terraform workspace to generate a visualization. This command copies all the files in your current directory to the Rover container and exposes port `:9000`.\n\n```\n$ docker run --rm -it -p 9000:9000 -v $(pwd):/src im2nguyen/rover\n2021/07/02 06:46:23 Starting Rover...\n2021/07/02 06:46:23 Initializing Terraform...\n2021/07/02 06:46:24 Generating plan...\n2021/07/02 06:46:25 Parsing configuration...\n2021/07/02 06:46:25 Generating resource overview...\n2021/07/02 06:46:25 Generating resource map...\n2021/07/02 06:46:25 Generating resource graph...\n2021/07/02 06:46:25 Done generating assets.\n2021/07/02 06:46:25 Rover is running on localhost:9000\n```\n\nOnce Rover runs on `localhost:9000`, navigate to it to find the visualization!\n\nUse `--env` or `--env-file` to set environment variables in the Docker container. For example, you can save your AWS credentials to an `.env` file.\n\n```\n$ printenv | grep \"AWS\" > .env\n```\n\nThen, add it as environment variables to your Docker container with `--env-file`.\n\n```\n$ docker run --rm -it -p 9000:9000 -v $(pwd):/src --env-file ./.env im2nguyen/rover\n```\n\n## Next steps\n\nFor full readme, visit the [Github repo](https://github.com/im2nguyen/rover).",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}