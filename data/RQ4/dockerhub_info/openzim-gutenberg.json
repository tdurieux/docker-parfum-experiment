{
  "user": "openzim",
  "name": "gutenberg",
  "namespace": "openzim",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Scraper for downloading the entire ebooks repository of project Gutenberg",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 521,
  "last_updated": "2022-12-26T12:36:49.565229Z",
  "date_registered": "2017-04-07T10:59:01.371294Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "openzim",
  "has_starred": false,
  "full_description": "# Gutenberg Offline\n\nThis scraper downloads the whole [Project\nGutenberg](https://www.gutenberg.org) library and puts it in a\n[ZIM](https://openzim.org) file, a clean and user friendly format for\nstoring content for offline usage.\n\n[![Python package](https://img.shields.io/pypi/v/gutenberg2zim.svg)](https://pypi.python.org/pypi/gutenberg2zim)\n[![Docker](https://img.shields.io/docker/v/openzim/gutenberg?label=docker&sort=semver)](https://hub.docker.com/r/openzim/gutenberg)\n[![CodeFactor](https://www.codefactor.io/repository/github/openzim/gutenberg/badge)](https://www.codefactor.io/repository/github/openzim/gutenberg)\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n\n## Setting up the environment\n\nIt's recommended that you use `virtualenv` and `py3.6+`.\n\n### Install the dependencies\n\n#### GNU/Linux\n\n```bash\nsudo apt-get install python-pip python-dev libxml2-dev libxslt-dev advancecomp jpegoptim pngquant p7zip-full gifsicle curl zip\nsudo pip install virtualenv\n```\n\n#### macOS\n\n```bash\nsudo easy_install pip\nsudo pip install virtualenv\nbrew install advancecomp jpegoptim pngquant p7zip gifsicle\n```\n\n### Set up the project\n\n```bash\ngit clone git@github.com:kiwix/gutenberg.git\ncd gutenberg\nvirtualenv gut-env (or any name you want)\n./gut-env/bin/pip install -r requirements.pip\n```\n\n### Working in the environment\n\n* Activate the environment:  `source gut-env/bin/activate`\n* Quit the environment: `deactivate`\n\n## Getting started\n\nAfter setting up the whole environment you can just run the main\nscript `gutenberg2zim`.  It will download, process and export the\ncontent.\n\n```bash\n./gutenberg2zim\n```\n\n#### Arguments\n\nYou can also specify parameters to customize the content.  Only want\nbooks with the Id 100-200? Books only in French? English? Or only\nthose both? No problem!  You can also include or exclude book\nformats. You can add bookshelves and the option to search books by\ntitle to enrich your user experince.\n\n```bash\n./gutenberg2zim -l en,fr -f pdf --books 100-200 --bookshelves --title-search\n```\n\nThis will download books in English and French that have the Id 100 to\n200 in the HTML (default) and PDF format.\n\nYou can find the full arguments list below:\n\n```bash\n-h --help                       Display this help message\n-y --wipe-db                    Empty cached book metadata\n-F --force                      Redo step even if target already exist\n\n-l --languages=<list>           Comma-separated list of lang codes to filter export to (preferably ISO 639-1, else ISO 639-3)\n-f --formats=<list>             Comma-separated list of formats to filter export to (epub, html, pdf, all)\n\n-r --rdf-folder=<folder>        Don't download rdf-files.tar.bz2 and use extracted folder instead\n-e --static-folder=<folder>     Use-as/Write-to this folder static HTML\n-z --zim-file=<file>            Write ZIM into this file path\n-t --zim-title=<title>          Set ZIM title\n-n --zim-desc=<description>     Set ZIM description\n-d --dl-folder=<folder>         Folder to use/write-to downloaded ebooks\n-u --rdf-url=<url>              Alternative rdf-files.tar.bz2 URL\n-b --books=<ids>                Execute the processes for specific books, separated by commas, or dashes for intervals\n-c --concurrency=<nb>           Number of concurrent process for download and parsing tasks\n--dlc=<nb>                      Number of concurrent *download* process for download (overwrites --concurrency). if server blocks high rate requests\n-m --one-language-one-zim=<folder> When more than 1 language, do one zim for each   language (and one with all)\n--no-index                      Do NOT create full-text index within ZIM file\n--check                         Check dependencies\n--prepare                       Download & extract rdf-files.tar.bz2\n--parse                         Parse all RDF files and fill-up the DB\n--download                      Download ebooks based on filters\n--export                        Export downloaded content to zim-friendly static HTML\n--dev                           Exports *just* Home+JS+CSS files (overwritten by --zim step)\n--zim                           Create a ZIM file\n--title-search                  Add field to search a book by title and directly jump to it\n--bookshelves                   Add bookshelves\n--optimization-cache=<url>      URL with credentials to S3 bucket for using as optimization cache\n--use-any-optimized-version     Try to use any optimized version found on optimization cache\n```\n\n## Screenshots\n\n![](https://raw.githubusercontent.com/openzim/gutenberg/main/pictures/screenshot_1.png)\n![](https://raw.githubusercontent.com/openzim/gutenberg/main/pictures/screenshot_2.png)\n\n## License\n\n[GPLv3](https://www.gnu.org/licenses/gpl-3.0) or later, see\n[LICENSE](LICENSE) for more details.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}