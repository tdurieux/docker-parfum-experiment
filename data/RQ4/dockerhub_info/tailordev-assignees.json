{
  "user": "tailordev",
  "name": "assignees",
  "namespace": "tailordev",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Code reviews for everyone.",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 75,
  "last_updated": "2018-04-26T18:44:01.226982Z",
  "date_registered": "2017-07-24T09:56:35.227938Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "tailordev",
  "has_starred": false,
  "full_description": "Assignees\n=========\n\n[![CircleCI](https://circleci.com/gh/TailorDev/assignees.svg?style=svg&circle-token=75bf93c8fc2ccb61e3cb3f07f1444a133bf87eab)](https://circleci.com/gh/TailorDev/assignees)\n\nAssignees does automatically code review requests on GitHub (currently).\nThis project is based on the\n[hackathon-starter](https://github.com/sahat/hackathon-starter) :heart:\nand it is a side project developed in a couple days for our needs (and\nalso for fun).\n\n<p align=\"center\">\n<img src=\"public/images/assignees-projects.png\">\n</p>\n\n## Usage\n\n### Web application\n\n~The application is available at: https://app.assignees.io/.~\n<br>:warning: As of April 2018, our public instance is not available anymore,\nsorry.\n\nSee the next section if you want to host it yourself.\n\n### Command line\n\nThis project provides a command line tool to perform various operations. You can\nrun it _via_ [Yarn](https://yarnpkg.com/):\n\n    $ yarn run assignees\n\nIn development environment, you should run the command above within a `app`\nDocker container:\n\n    $ docker-compose run --rm app yarn run assignees\n    yarn run v0.19.1\n    $ node bin/assignees\n\n    Usage: assignees [options] [command]\n\n\n    Commands:\n\n        feature:add [username] [feature]                       add feature to user\n        feature:remove [username] [feature]                    remove feature to user\n        feature:list [username...]                             list enabled features of user\n        pr:process [options] [repositoryId] [number] [author]  process pull request\n\n    Options:\n\n        -h, --help     output usage information\n        -V, --version  output the version number\n\n## Installation\n\nThis project provides a [Docker Compose](https://docs.docker.com/compose/)\nconfiguration to quickly build and start it. Clone the project, then run:\n\n    $ docker-compose up -d app\n\nThe application will shortly be accessible at: http://assignees.localdev:3000/.\n\n**Important:** you must configure your local DNS to be able to use\n`assignees.localdev` in the URL. You can edit your `/etc/hosts` file, but it is\nrecommended to install and configure\n[Dnsmasq](https://en.wikipedia.org/wiki/Dnsmasq). [This link is a good\ntutorial](https://passingcuriosity.com/2013/dnsmasq-dev-osx/).\n\n### Limitations\n\nThe `docker-compose.yml` contains *my* credentials (for an application that does\nnot exist anymore at the time of writing by the way). You should [register a new\nOAuth application](https://github.com/settings/applications/new) on your own.\n\nIt is also recommended to use [ngrok](https://ngrok.com/) if you plan to test\nwebhooks from your development environment.\n\n### Configuration\n\nThis project is configured with environment variables. Here is the list:\n\n* `ADMIN_IDS`: a comma-separated (without space) list of GitHub user identifiers\n  (not usernames) to grant admin rights to certain users;\n* `APP_DOMAIN`: the domain that points to this application (for redirecting\n  traffic from Heroku `*.herokuapp.com` domain for instance);\n* `GITHUB_ID`: the GitHub ID you get when you register a GitHub (OAuth)\n  application;\n* `GITHUB_SECRET`: the GitHub secret tied to the previous GitHub ID;\n* `GITHUB_APP_ID`: the identifier of the application you had to register on\n  GitHub;\n* `GITHUB_WEBHOOK_SECRET`: a randomly generated value (like a password) used to\n  sign and verify GitHub webhooks requests.\n* `GITHUB_WEBHOOK_URL`: the webhook URL that will be registered on each project\n  enabled by Assignees (_e.g._ `https://app.assignees.io/events`);\n* `MONGODB_URI`: the MongoDB data source name (_e.g._ `mongodb://user:pass@server/db`).\n  This variable is automatically set if you use the _mLab_ add-on on Heroku.\n  Alternatively, you can use the `MONGOLAB_URI` environment variable;\n* `SESSION_SECRET`: a randomly generated value to prevent session tampering.\n\nAlso, setting `NODE_ENV` to `production` looks like a good idea.\n\n**N.B.** because of the Yarn incompatibility on Heroku, I set\n`NODE_MODULES_CACHE` to `false` and `NPM_CONFIG_PRODUCTION` to `true`.\n\n#### New Relic\n\nTo monitor the application at an early stage, it is possible to use New Relic\nAPM. These extra environment variables could be useful (at least on Heroku):\n\n* `NEW_RELIC_APP_NAME`;\n* `NEW_RELIC_LICENSE_KEY`;\n* `NEW_RELIC_LOG` (automatically set by Heroku when enabling the add-on);\n* `NEW_RELIC_NO_CONFIG_FILE` should be set to `true`;\n* `NEW_RELIC_SKIP_NATIVE_METRICS` should be set to `true`.\n\n**Note:** [this commit](https://github.com/TailorDev/assignees/commit/f1d0e6657a2676ddf79c93c2da170363f926b71f)\nhas disabled New Relic on this project. You can re-enable it by yourself by\nrequiring the `newrelic` package in both the `package.json` file and the code.\n\n#### Other settings\n\nYou may want to change the name of the project, the contact email address, or\nthe Piwik tracking code by editing the [`views/global-mixins.pug`\ntemplate](https://github.com/TailorDev/assignees/blob/master/views/global-mixins.pug).\n\n## Running the Tests\n\n    $ [docker-compose run --rm app] yarn run test\n\n## License\n\nAssignees is released under the MIT License. See the bundled\n[LICENSE](LICENSE.md) file for details.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}