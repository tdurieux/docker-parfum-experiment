{
  "user": "rudloff",
  "name": "alltube",
  "namespace": "rudloff",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Web GUI for youtube-dl",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 34,
  "pull_count": 13104653,
  "last_updated": "2021-07-25T13:07:49.370608Z",
  "date_registered": "2016-12-18T19:12:15.684144Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "rudloff",
  "has_starred": false,
  "full_description": "# AllTube Download\n\nHTML GUI for youtube-dl ([alltubedownload.net](http://alltubedownload.net/))\n\n![Screenshot](img/screenshot.png \"AllTube GUI screenshot\")\n\n## Setup\n\n### From a release package\n\nYou can download the latest release package [here](https://github.com/Rudloff/alltube/releases).\n\nYou just have to unzip it on your server and it should be ready to use.\n\n### From Git\n\nIn order to get AllTube working,\nyou need to use [Composer](https://getcomposer.org/):\n\n```bash\ncomposer install\n```\n\nThis will download all the required dependencies.\n\nYou should also ensure that the *templates_c* folder has the right permissions:\n\n```bash\nchmod 770 templates_c/\n```\n\n(You need to adapt this to your permission model.\nYou can find more information about this [in the Smarty documentation](https://www.smarty.net/docsv2/en/installing.smarty.basic.tpl#id2778738).)\n\nIf your web server is Apache,\nyou need to set the `AllowOverride` setting to `All` or `FileInfo`.\n\n#### Update\n\nWhen updating from Git, you need to run Composer again:\n\n```bash\ngit pull\ncomposer install\n```\n\n### On Heroku\n\n[![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy)\n\n### On Cloudron\n\nCloudron is a complete solution for running apps on your server and keeping them up-to-date and secure.\n\n[![Install](https://cloudron.io/img/button.svg)](https://cloudron.io/store/net.alltubedownload.cloudronapp.html)\n\nThe source code for the package can be found [here](https://git.cloudron.io/cloudron/alltube-app).\n\n## Config\n\nIf you want to use a custom config, you need to create a config file:\n\n```bash\ncp config/config.example.yml config/config.yml\n```\n\n## PHP requirements\n\nYou will need PHP 7.2 (or higher) and the following PHP modules:\n\n* intl\n* mbstring\n* gmp\n\n## Web server configuration\n\nIf you want to serve the application under a basepath and/or with a different internal than external port (scenario: nginx->docker setup) Alltube supports the following X-Forwarded headers:\n\n* X-Forwarded-Host (ex. `another.domain.com`)\n* X-Forwarded-Path (ex: `/alltube`)\n* X-Forwarded-Port (ex: `5555`)\n* X-Forwarded-Proto (ex: `https`)\n\n### Apache\n\nThe following modules are recommended:\n\n* mod_mime\n* mod_rewrite\n* mod_expires\n* mod_filter\n* mod_deflate\n* mod_headers\n\n### Nginx\n\nHere is an example Nginx configuration:\n\n```nginx\nserver {\n        server_name localhost;\n        listen 443 ssl;\n\n        root /var/www/path/to/alltube;\n        index index.php;\n\n        access_log  /var/log/nginx/alltube.access.log;\n        error_log   /var/log/nginx/alltube.error.log;\n\n        types {\n                text/html   html htm shtml;\n                text/css    css;\n                text/xml    xml;\n                application/x-web-app-manifest+json   webapp;\n        }\n\n        # Deny access to dotfiles\n        location ~ /\\. {\n                deny all;\n        }\n\n        location / {\n                try_files $uri /index.php?$args;\n        }\n\n        location ~ \\.php$ {\n                try_files $uri /index.php?$args;\n\n                fastcgi_param     PATH_INFO $fastcgi_path_info;\n                fastcgi_param     PATH_TRANSLATED $document_root$fastcgi_path_info;\n                fastcgi_param     SCRIPT_FILENAME $document_root$fastcgi_script_name;\n\n                fastcgi_pass unix:/var/run/php5-fpm.sock;\n                fastcgi_index index.php;\n                fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n                fastcgi_intercept_errors off;\n\n                fastcgi_buffer_size 16k;\n                fastcgi_buffers 4 16k;\n\n                include fastcgi_params;\n        }\n}\n```\n\n## Other dependencies\n\nYou need [ffmpeg](https://ffmpeg.org/)\nin order to enable conversions.\n(Conversions are disabled by default.)\n\nOn Debian-based systems:\n\n```bash\nsudo apt-get install ffmpeg\n```\n\nIf your ffmpeg binary is not installed at `/usr/bin/ffmpeg`, you also need to edit the `ffmpeg` variable in `config.yml`.\n\n## Use as a library\n\nThe `Video` class is now available as [a separate package](https://packagist.org/packages/rudloff/alltube-library)\nso that you can reuse it in your projects.\n\n## JSON API\n\nWe also provide a JSON API that you can use like this:\n[/json?url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DdQw4w9WgXcQ](https://alltubedownload.net/json?url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DdQw4w9WgXcQ)\n\nIt returns a JSON object generated by youtube-dl.\nYou can find a list of all the properties [in the youtube-dl documentation](https://github.com/ytdl-org/youtube-dl#output-template).\n\n## FAQ\n\nPlease read the [FAQ](resources/FAQ.md) before reporting any issue.\n\n## License\n\nThis software is available under the [GNU General Public License](http://www.gnu.org/licenses/gpl.html).\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}