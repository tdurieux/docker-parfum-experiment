{
  "user": "threagile",
  "name": "threagile",
  "namespace": "threagile",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Threagile - Agile Threat Modeling",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 5,
  "pull_count": 907670,
  "last_updated": "2021-11-21T12:47:22.140327Z",
  "date_registered": "2020-04-19T16:43:22.31812Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "threagile",
  "has_starred": false,
  "full_description": "# Threagile\n\n[![Threagile Community Chat](https://badges.gitter.im/Threagile/community.svg)](https://gitter.im/Threagile/community)\n\n#### Agile Threat Modeling Toolkit\nThreagile (see [https://threagile.io](https://threagile.io) for more details) is an open-source toolkit for \nagile threat modeling: \n\nIt allows to model an architecture with its assets in an agile fashion as a YAML file directly inside the IDE. \nUpon execution of the Threagile toolkit all standard risk rules (as well as individual custom rules if present) \nare checked against the architecture model.\n\n\n#### Execution via Docker Container\nThe easiest way to execute Threagile on the commandline is via its Docker container: \n\n    docker run --rm -it threagile/threagile\n    \n    \n      _____ _                          _ _      \n     |_   _| |__  _ __ ___  __ _  __ _(_) | ___ \n       | | | '_ \\| '__/ _ \\/ _` |/ _` | | |/ _ \\\n       | | | | | | | |  __/ (_| | (_| | | |  __/\n       |_| |_| |_|_|  \\___|\\__,_|\\__, |_|_|\\___|\n                                 |___/        \n    Threagile - Agile Threat Modeling\n    \n    \n    Documentation: https://threagile.io\n    Docker Images: https://hub.docker.com/r/threagile\n    Sourcecode: https://github.com/threagile\n    License: Open-Source (MIT License)    \n    \n    Usage: threagile [options]\n    \n    \n    Options:\n    \n      -background string\n            background pdf file (default \"background.pdf\")\n      -create-editing-support\n            just create some editing support stuff in the output directory\n      -create-example-model\n            just create an example model named threagile-example-model.yaml in the output directory\n      -create-stub-model\n            just create a minimal stub model named threagile-stub-model.yaml in the output directory\n      -custom-risk-rules-plugins string\n            comma-separated list of plugins (.so shared object) file names with custom risk rules to load\n      -diagram-dpi int\n            DPI used to render: maximum is 240 (default 120)\n      -execute-model-macro string\n            Execute model macro (by ID)\n      -generate-data-asset-diagram\n            generate data asset diagram (default true)\n      -generate-data-flow-diagram\n            generate data-flow diagram (default true)\n      -generate-report-pdf\n            generate report pdf, including diagrams (default true)\n      -generate-risks-excel\n            generate risks excel (default true)\n      -generate-risks-json\n            generate risks json (default true)\n      -generate-stats-json\n            generate stats json (default true)\n      -generate-tags-excel\n            generate tags excel (default true)\n      -generate-technical-assets-json\n            generate technical assets json (default true)\n      -ignore-orphaned-risk-tracking\n            ignore orphaned risk tracking (just log them) not matching a concrete risk\n      -list-model-macros\n            print model macros\n      -list-risk-rules\n            print risk rules\n      -list-types\n            print type information (enum values to be used in models)\n      -model string\n            input model yaml file (default \"threagile.yaml\")\n      -output string\n            output directory (default \".\")\n      -print-3rd-party-licenses\n            print 3rd-party license information\n      -print-license\n            print license information\n      -raa-plugin string\n            RAA calculation plugin (.so shared object) file name (default \"raa.so\")\n      -server int\n            start a server (instead of commandline execution) on the given port\n      -skip-risk-rules string\n            comma-separated list of risk rules (by their ID) to skip\n      -verbose\n            verbose output\n      -version\n            print version\n    \n    \n    Examples:\n    \n    If you want to create an example model (via docker) as a starting point to learn about Threagile just run: \n     docker run --rm -it -v \"$(pwd)\":/app/work threagile/threagile -create-example-model -output /app/work\n    \n    If you want to create a minimal stub model (via docker) as a starting point for your own model just run: \n     docker run --rm -it -v \"$(pwd)\":/app/work threagile/threagile -create-stub-model -output /app/work\n    \n    If you want to execute Threagile on a model yaml file (via docker): \n     docker run --rm -it -v \"$(pwd)\":/app/work threagile/threagile -verbose -model /app/work/threagile.yaml -output /app/work\n    \n    If you want to run Threagile as a server (REST API) on some port (here 8080): \n     docker run --rm -it --shm-size=256m -p 8080:8080 --name threagile-server --mount 'type=volume,src=threagile-storage,dst=/data,readonly=false' threagile/threagile -server 8080\n    \n    If you want to find out about the different enum values usable in the model yaml file: \n     docker run --rm -it threagile/threagile -list-types\n    \n    If you want to use some nice editing help (syntax validation, autocompletion, and live templates) in your favourite IDE: \n     docker run --rm -it -v \"$(pwd)\":/app/work threagile/threagile -create-editing-support -output /app/work\n    \n    If you want to list all available model macros (which are macros capable of reading a model yaml file, asking you questions in a wizard-style and then update the model yaml file accordingly): \n     docker run --rm -it threagile/threagile -list-model-macros\n    \n    If you want to execute a certain model macro on the model yaml file (here the macro add-build-pipeline): \n     docker run --rm -it -v \"$(pwd)\":/app/work threagile/threagile -model /app/work/threagile.yaml -output /app/work -execute-model-macro add-build-pipeline\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}