{
  "user": "weareopensource",
  "name": "node",
  "namespace": "weareopensource",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Node - Boilerplate Back : Express, Jwt, Mongo, Sequelize (Beta)",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 4525,
  "last_updated": "2021-07-27T08:08:05.906169Z",
  "date_registered": "2020-04-27T20:52:39.107366Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "weareopensource",
  "has_starred": false,
  "full_description": "[![Build Status](https://badges.weareopensource.me/travis/weareopensource/Node.svg?style=flat-square)](https://travis-ci.org/weareopensource/Node) [![Drone](https://badges.weareopensource.me/drone/build/weareopensource/Node?style=flat-square)](https://cloud.drone.io/weareopensource/Node) [![Coveralls Status](https://badges.weareopensource.me/coveralls/github/weareopensource/Node.svg?style=flat-square)](https://coveralls.io/github/weareopensource/Node) [![Code Climate](https://badges.weareopensource.me/codeclimate/maintainability-percentage/weareopensource/Node.svg?style=flat-square)](https://codeclimate.com/github/weareopensource/Node/maintainability)\n [![Dependabot badge](https://badges.weareopensource.me/badge/Dependabot-enabled-2768cf.svg?style=flat-square)](https://dependabot.com)\n [![Known Vulnerabilities](https://snyk.io/test/github/weareopensource/node/badge.svg?style=flat-square)](https://snyk.io/test/github/weareopensource/node) [![Docker Pulls](https://badges.weareopensource.me/docker/pulls/weareopensource/node?style=flat-square)](https://hub.docker.com/repository/docker/weareopensource/node)\n\n# :globe_with_meridians: [WeAreOpenSource](https://weareopensource.me) Node\n\n## :book: Presentation\n\nThis project is a Node stack that can be ran as a standalone BackEnd. Or in a fullstack with another repo of your choice (ex: [Vue](https://github.com/weareopensource/Vue), [Swift](https://github.com/weareopensource/Swift)).\n\nQuick links :\n\n* [Mindset and what we would like to create](https://weareopensource.me/)\n* [How to start a project and maintain updates from stacks](https://blog.weareopensource.me/start-a-project-and-maintain-updates/)\n* [Global roadmap and  ideas about stacks](https://github.com/orgs/weareopensource/projects/3)\n* [How to contribute and help us](https://blog.weareopensource.me/how-to-contribute/)\n\n# :computer: Node / Express / Mongoose - Sequelize Orm\n\n* [**Knowledges JS**](https://blog.weareopensource.me/js-knwoledges/)\n* [**Demo**](https://node.weareopensource.me) (or working with [Vue](https://github.com/weareopensource/Vue) stack [here](https://vue.weareopensource.me), email: *test@waos.me*, password: *TestWaos@2019*)\n\n## :package: Technology Overview\n\n| Subject | Informations\n| ------- | --------\n| **Available** |\n| Architecture | Layered Architecture : everything is separated in layers, and the upper layers are abstractions of the lower ones, that's why every layer should only reference the immediate lower layer (vertical modules architecture with Repository and Services Pattern)\n| Server  | [Node >= v14 LTS](https://nodejs.org/en/) <br> [Express](https://github.com/expressjs/express) - [body-parser](https://github.com/expressjs/body-parser) - [compression](https://github.com/expressjs/compression) - [CORS](https://github.com/expressjs/cors) - [method-override](https://github.com/expressjs/method-override) <br> [gulp 4](https://github.com/gulpjs/gulp) - [nodemon](https://github.com/remy/nodemon)\n| DataBase  | [Mongo 4.x LTS](https://www.mongodb.com/download-center/community) - [mongoose](https://github.com/Automattic/mongoose) - *User, Crud, Seed, Gridf upload, Options (auth, ssl ..)* <br> [Sequelize](https://github.com/sequelize/sequelize) - *PostgreSQL, MySQL, SQLit 4.x (option - crud Task example)* <br> [JOI](https://github.com/hapijs/joi) - *Models & Repository for database code abstraction*\n| Testing |  [Jest](https://github.com/facebook/jest) - [SuperTest](https://github.com/visionmedia/supertest) - *Coverage & Watch* <br> *example of mocha with gulp available*\n| Security | [passport-jwt](https://github.com/themikenicholson/passport-jwt) - *JWT Stateless* <br> [bcrypt](https://en.wikipedia.org/wiki/Bcrypt) - [zxcvbn](https://github.com/dropbox/zxcvbn) - *Passwords*  <br> [SSL](https://github.com/weareopensource/Node/blob/master/WIKI.md#SSL) - *Express / Reverse Proxy (must be activated, otherwise => plain text password)*\n| API | [jsend](https://github.com/omniti-labs/jsend) - *Default answer wrapper (helper) : status, message, data or error* <br>  *Helper: default errors handling : formatted by the controller, Custom ES6 errors for other layers*\n| Upload | [Mongo gridfs](https://docs.mongodb.com/manual/core/gridfs/) - [mongoose-gridfs](https://github.com/lykmapipo/mongoose-gridfs) - [Multer](https://github.com/expressjs/multer) - [Sharp](https://github.com/lovell/sharp) - *Image stream example, all contentType, image video ..*\n| Logs | [winston](https://github.com/winstonjs/winston) - [morgan](https://github.com/expressjs/morgan) *custom example available*\n| CI  | [Travis CI](https://travis-ci.org/weareopensource/Node) - [Drone.io](https://cloud.drone.io/weareopensource/Node)\n| Linter  | [ESLint](https://github.com/eslint/eslint) - *ecmaVersion 10 (2019)*\n| Developer  | [Coveralls](https://coveralls.io/github/weareopensource/Node) - [Code Climate](https://codeclimate.com/github/weareopensource/Node) - [Dependency status](https://david-dm.org/weareopensource/node) - [Dependabot](https://dependabot.com/) - [Snyk](https://snyk.io/test/github/weareopensource/node) <br> [standard-version](https://github.com/conventional-changelog/standard-version) / [semantic-release](https://github.com/semantic-release/semantic-release) - [commitlint](https://github.com/conventional-changelog/commitlint) - [commitizen](https://github.com/commitizen/cz-cli) - [@weareopensource/conventional-changelog](https://github.com/weareopensource/conventional-changelog)\n| Dependencies  | [npm](https://www.npmjs.com)\n| Deliver | Docker & Docker-compose\n| **In reflexion** |\n| Documentation  | Swagger <br> Docco\n| Developer  | uses v8's builtin `debug` and `inspect` options\n| API | evolution & version guideline\n\n## :tada: Features Overview\n\n### Core\n\n* **User** : classic register / auth or oAuth(microsoft, google) - profile management (update, avatar upload ...)\n* **User data privacy** : delete all - get all - send all by mail\n* **Admin** : list users - get user - edit user - delete user\n\n### Examples\n\n* **Tasks** : list - get - add - edit - delete\n* **Files Uploads** : get stream - add - delete  - get image stream & sharp operations\n\n## :pushpin: Prerequisites\n\nMake sure you have installed all of the following prerequisites on your development machine:\n\n* Git - [Download & Install Git](https://git-scm.com/downloads)\n* Node.js (10.x) - [Download & Install Node.js](https://nodejs.org/en/download/)\n\n## :boom: Installation\n\nIt's straightforward (you can use yarn if you want)\n\n```bash\ngit clone https://github.com/weareopensource/node.git && cd Node\nnpm i\n```\n\n## :runner: Running Your Application\n\n### Development\n\n* `npm start` or `npm run serve` to run a dev server. Available at `http://localhost:3000/`.\n\n### Production\n\n* `npm run prod` to run a prod server. Available at `http://localhost:3000/`\n\n### others\n\n* debug : `npm run debug`\n* test : `npm test`\n* test Watch : `npm run test:watch`\n* test Coverage : `npm run test:coverage`\n* seed development= `npm run seed:dev`\n* seed Production = `npm run seed:prod`\n* seed Dump Mongo (Dev Team sample) = `npm run seed:mongodump` **be careful to not upload sample in public repo**\n* seed Restore Mongo (Dev Team sample) = `npm run seed:mongorestore` **create or update data based on _id, no purge**\n* seed Drop Mongo = `npm run seed:mongodrop`\n* generate SSL certs : `npm run generate:sslCerts`\n* lint : `npm run lint`\n* commit : `npm run commit`\n* release : `npm run release -- --first-release` **standard version, changelog, tag & choose version number : -- --release-as 1.1.1**\n* release:auto : `GITHUB_TOKEN=XXXXX npm run release:auto` **semantic release, changelog, tag, release** *require repositoryUrl conf in package.json*\n\n## :whale: Docker Way\n\n### docker\n\n* `docker run --env WAOS_NODE_db_uri=mongodb://host.docker.internal/WaosNodeDev --env WAOS_NODE_host=0.0.0.0 --rm -p 3000:3000 weareopensource/node`\n\nif you want to build yourself : `docker build -t weareopensource/node .`\n\n### docker-compose\n\n* `docker-compose up`\n\n### Configuration\n\nThe default configuration is : `config/defaults/development.js`\nThe other configurations : `config/defaults/*.js` overwrite the default configuration, you can create your own.\n\nWe take into account all system environment variables defined under the form WAOS_VUE_<path_toVariable>. A script turns under the hood those system environment variables into an object, infering paths from the varialbles name, merged to the configuration defined on `config/defaults` to regenerate the config.\n\nSo configuration avalable on `config/defaults/development` file are overidable. You can for instance define the app name by defining those system environment variables :\n\n```\nWAOS_NODE_app_title='my app =)'\n```\n\n## :pencil2: [Contribute](https://blog.weareopensource.me/how-to-contribute/)\n\n## :scroll: History\n\nThis work is based on [MEAN.js](http://meanjs.org) and more precisely on a fork of the developers named [Riess.js](https://github.com/lirantal/Riess.js). The work being stopped we wished to take it back, we want to create updated stack with same mindset \"simple\", \"easy to use\". The toolbox needed to start projects, but not only with Node and Angular ...\n\n## :globe_with_meridians: [We Are Open Source, Who we are ?](https://weareopensource.me)\n\nToday, we dreams to create Backs/Fronts, aligns on feats, in multiple languages, in order to allow anyone to compose fullstack on demand (React, Angular, VusJS, Node, Nest, Swift, Go).\nFeel free to discuss, share other kind of bricks, and invite whoever you want with this mindset to come help us.\n\n## :clipboard: Licence\n\n[![Packagist](https://badges.weareopensource.me/packagist/l/doctrine/orm.svg?style=flat-square)](/LICENSE.md)\n\n## :family: Main Team\n\n* Pierre Brisorgueil\n\n[![Github](https://badges.weareopensource.me/badge/Follow-me%20on%20Github-282828.svg?style=flat-square)](https://github.com/PierreBrisorgueil) [![Twitter](https://badges.weareopensource.me/badge/Follow-me%20on%20Twitter-3498db.svg?style=flat-square)](https://twitter.com/pbrisorgueil?lang=fr) [![Youtube](https://badges.weareopensource.me/badge/Watch-me%20on%20Youtube-e74c3c.svg?style=flat-square)](https://www.youtube.com/channel/UCIIjHtrZL5-rFFupn7c3OtA) [![Instagram](https://badges.weareopensource.me/badge/Follow-me%20on%20Instagram-f27231.svg?style=flat-square)](https://www.instagram.com/pierre_brsrgl/) [![Linkedin](https://badges.weareopensource.me/badge/Add-me%20on%20linkedin-006DA9.svg?style=flat-square)](https://www.linkedin.com/in/pierre-brisorgueil/)\n\nFeel free to help us ! :)\n\n## :link: Links\n\n[![Blog](https://badges.weareopensource.me/badge/Read-our%20Blog-1abc9c.svg?style=flat-square)](https://blog.weareopensource.me) [![Slack](https://badges.weareopensource.me/badge/Chat-on%20our%20Slack-d0355b.svg?style=flat-square)](https://join.slack.com/t/weareopensource/shared_invite/zt-62p1qxna-PEQn289qx6mmHobzKW8QFw) [![Discord](https://badges.weareopensource.me/badge/Chat-on%20our%20Discord-516DB9.svg?style=flat-square)](https://discord.gg/U2a2vVm)  [![Mail](https://badges.weareopensource.me/badge/Contact-us%20by%20mail-00a8ff.svg?style=flat-square)](mailto:weareopensource.me@gmail.com?subject=Contact)\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}