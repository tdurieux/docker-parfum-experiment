{
  "user": "yyyar",
  "name": "gobetween",
  "namespace": "yyyar",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "☁️ Modern & minimalistic proxy server for the Сloud era",
  "is_private": false,
  "is_automated": false,
  "can_edit": false,
  "star_count": 11,
  "pull_count": 1397727,
  "last_updated": "2021-05-10T13:15:57.340095Z",
  "date_registered": "2016-06-12T13:21:36.175676Z",
  "collaborator_count": 2,
  "affiliation": null,
  "hub_user": "yyyar",
  "has_starred": false,
  "full_description": "<img src=\"/logo.png?raw=true\" alt=\"gobetween\" width=\"256px\" />\n\n[![Tag](https://img.shields.io/github/tag/yyyar/gobetween.svg)](https://github.com/yyyar/gobetween/releases/latest)\n[![Build Status](https://travis-ci.org/yyyar/gobetween.svg?branch=master)](https://travis-ci.org/yyyar/gobetween)\n[![Go Report Card](https://goreportcard.com/badge/github.com/yyyar/gobetween)](https://goreportcard.com/report/github.com/yyyar/gobetween)\n[![Docs](https://img.shields.io/badge/docs-current-brightgreen.svg)](https://github.com/yyyar/gobetween/wiki)\n[![Docker](https://img.shields.io/docker/pulls/yyyar/gobetween.svg)](https://hub.docker.com/r/yyyar/gobetween/)\n[![Snap Status](https://build.snapcraft.io/badge/yyyar/gobetween.svg)](https://build.snapcraft.io/user/yyyar/gobetween)\n[![Telegram](https://img.shields.io/badge/telegram-chat-blue.svg)](https://t.me/joinchat/GdlUlg_gRfchk1BORU82PA)\n[![License](https://img.shields.io/badge/license-MIT-blue.svg)](/LICENSE)\n\n\n**gobetween** -  modern & minimalistic load balancer and reverse-proxy for the :cloud: Cloud era.\n\n**Current status**: *Maintenance mode, accepting PRs*. Currently in use in several highly loaded production environments.\n\n## Features\n\n* [Fast L4 Load Balancing](https://github.com/yyyar/gobetween/wiki)\n  * **TCP** - with optional [The PROXY Protocol](https://github.com/yyyar/gobetween/wiki/Proxy-Protocol) support\n  * **TLS** - [TLS Termination](https://github.com/yyyar/gobetween/wiki/Protocols#tls) + [ACME](https://github.com/yyyar/gobetween/wiki/Protocols#tls) & [TLS Proxy](https://github.com/yyyar/gobetween/wiki/Tls-Proxying)\n  * **UDP** - with optional virtual sessions and transparent mode\n\n\n* [Clear & Flexible Configuration](https://github.com/yyyar/gobetween/wiki/Configuration) with [TOML](config/gobetween.toml) or [JSON](config/gobetween.json)\n  * **File** - read configuration from the file\n  * **URL** - query URL by HTTP and get configuration from the response body \n  * **Consul** - query Consul key-value storage API for configuration\n\n* [Management REST API](https://github.com/yyyar/gobetween/wiki/REST-API)\n  * **System Information** - general server info\n  * **Configuration** - dump current config \n  * **Servers** - list, create & delete\n  * **Stats & Metrics** - for servers and backends including rx/tx, status, active connections & etc.\n \n* [Discovery](https://github.com/yyyar/gobetween/wiki/Discovery)\n  * **Static** - hardcode backends list in the config file\n  * **Docker** - query backends from Docker / Swarm API filtered by label\n  * **Exec** - execute an arbitrary program and get backends from its stdout\n  * **JSON** - query arbitrary http url and pick backends from response json (of any structure)\n  * **Plaintext** - query arbitrary http and parse backends from response text with customized regexp\n  * **SRV** - query DNS server and get backends from SRV records\n  * **Consul** - query Consul Services API for backends \n  * **LXD** - query backends from LXD\n\n* [Healthchecks](https://github.com/yyyar/gobetween/wiki/Healthchecks)\n  * **Ping** - simple TCP ping healthcheck\n  * **Exec** - execute arbitrary program passing host & port as options, and read healthcheck status from the stdout\n  * **Probe** - send specific bytes to backend (udp, tcp or tls) and expect a correct answer (bytes or regexp)\n\n* [Balancing Strategies](https://github.com/yyyar/gobetween/wiki/Balancing) (with [SNI](https://github.com/yyyar/gobetween/wiki/Server-Name-Indication) support)\n  * **Weight** - select backend from pool based relative weights of backends\n  * **Roundrobin** - simple elect backend from pool in circular order\n  * **Iphash** - route client to the same backend based on client ip hash\n  * **Iphash1** - same as iphash but backend removal consistent (clients remain connecting to the same backend, even if some other backends down)\n  * **Leastconn** - select backend with least active connections\n  * **Leastbandwidth** -  backends with least bandwidth\n\n* Integrates seamlessly with Docker and with any custom system (thanks to Exec discovery and healthchecks)\n\n* Single binary distribution\n\n\n## Architecture\n<img src=\"http://i.piccy.info/i9/8b92154435be32f21eaa3ff7b3dc6d1c/1466244332/74457/1043487/gog.png\" alt=\"gobetween\" />\n\n## Usage\n\n* Install with snap: https://snapcraft.io/gobetween\n* [Other Installation Options](https://github.com/yyyar/gobetween/wiki/Installation)\n* [Read Configuration Reference](https://github.com/yyyar/gobetween/wiki)\n* Execute `gobetween --help` for full help on all available commands and options.\n\n## Hacking\n\n* Install Go 1.14+ https://golang.org/\n* `$ git clone git@github.com:yyyar/gobetween.git`\n* `$ make`\n* `$ make run`\n\n### Debug and Test\nRun several web servers for tests in different terminals:\n\n* `$ python -m SimpleHTTPServer 8000`\n* `$ python -m SimpleHTTPServer 8001`\n\nInstead of Python's internal HTTP module, you can also use a single binary (Go based) webserver like:\nhttps://github.com/udhos/gowebhello\n\n**gowebhello** has support for SSL sertificates as well (**HTTPS** mode), in case you want to do quick demos\nof the **TLS+SNI** capabilities of gobetween.\n\nPut `localhost:8000` and `localhost:8001` to `static_list` of static discovery in config file, then try it:\n\n* `$ gobetween -c gobetween.toml`\n\n* `$ curl http://localhost:3000`\n\nEnable [profiler](https://blog.golang.org/profiling-go-programs) and debug issues you encounter\n```\n[profiler]\nenabled = true     # false | true\nbind    = \":6060\"  # \"host:port\"\n```\n\n## Performance\nIt's Fast! See [Performance Testing](https://github.com/yyyar/gobetween/wiki/Performance-tests)\n\n## The Name\nIt's a play on words: gobetween (\"go between\"). \n\nAlso, it's written in Go, and it's a proxy so it's something that stays between 2 parties :smile:\n\n## License\nMIT. See LICENSE file for more details.\n\n## Authors & Maintainers\n- [Yaroslav Pogrebnyak](http://pogrebnyak.info)\n- [Nick Doikov](https://github.com/nickdoikov)\n- [Ievgen Ponomarenko](https://github.com/kikom)\n- [Illarion Kovalchuk](https://github.com/illarion)\n\n## All Contributors\n- See [AUTHORS](AUTHORS)\n\n## Community\n- Join gobetween Telegram group [here](https://t.me/joinchat/GdlUlg_gRfchk1BORU82PA).\n\n## Logo\nLogo by [Max Demchenko](https://www.linkedin.com/in/max-demchenko-116170112)\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json",
    "application/vnd.docker.distribution.manifest.v1+prettyjws",
    "application/octet-stream"
  ],
  "content_types": [
    "image",
    "unrecognized"
  ]
}