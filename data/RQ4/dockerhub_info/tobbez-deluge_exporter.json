{
  "user": "tobbez",
  "name": "deluge_exporter",
  "namespace": "tobbez",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Prometheus exporter for the Deluge BitTorrent client",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 977717,
  "last_updated": "2023-01-03T06:17:23.325309Z",
  "date_registered": "2018-11-11T18:08:28.399217Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "tobbez",
  "has_starred": false,
  "full_description": "# Deluge Exporter\n\nPrometheus exporter for the [Deluge](https://deluge-torrent.org/) BitTorrent client.\n\n\n## Requirements\n\n * Python 3\n * [prometheus\\_client](https://github.com/prometheus/client_python)\n * [deluge-client](https://github.com/JohnDoee/deluge-client)\n\nThe exporter only supports Deluge 2. For Deluge 1.3.x, see the v1.0 tag.\n\n\n## Notes\n### State\nThe project is generally considered complete. However, there are a number of\nareas that could be improved, and contributions are welcome. Some areas that\ncould use improvements are:\n\n - [ ] Packaging: There are currently no packaging scripts nor PyPI packages\n\n\n## Configuration\n### General settings\n\n - `PER_TORRENT_METRICS`: Per-torrent metrics are disabled by default. Set this\n   environment variable to `1` to enable. Note that this may significantly\n   increase the number of time series (depending on the number of torrents in\n   your Deluge instances).\n - `LISTEN_PORT`: The port the exporter should listen on. The default is `9354`.\n - `LISTEN_ADDRESS`: The address the exporter should listen on. The default is\n   to listen on all addresses.\n\n### Deluge connection\n\nThere are two options for configuring the Deluge connection details: to specify\nthem explicitly, or to let the exporter read them from the Deluge configuration\nfiles.\n\n#### Explicit configuration\n\nSet the all of the following environment variables:\n\n - `DELUGE_HOST`: The host where Deluge is running.\n - `DELUGE_PORT`: The port on which Deluge is listening.\n - `DELUGE_USER`: The username to use when authenticating.\n - `DELUGE_PASSWORD`: The password to use when authenticating.\n\n#### Read from Deluge's configuration files\n\nIf not all of the environment variables listed in the previous section are not\nset, the exporter will automatically attempt to read the connection details\nfrom Deluge's configuration files (for the current user).\n\nThe following environment variables can be used to customize the behaviour:\n\n - `DELUGE_CONFIG_DIR`: The directory to read the configuration files from. The\n   default is `~/.config/deluge` on Linux and `%APPDATA%\\deluge` on Windows.\n - `DELUGE_HOST`: Override the the host to connect to.\n\n\n## Docker\n\nA docker image is [available on Docker Hub](https://hub.docker.com/r/tobbez/deluge_exporter/).\n\nPassing configuration using environment variables:\n\n```\ndocker run -e \"DELUGE_HOST=172.17.0.1\" -e \"DELUGE_PORT=58846\" -e \"DELUGE_USER=user\" -e \"DELUGE_PASSWORD=password\" -v /etc/deluge:/root/.config/deluge/ -p 9354:9354 tobbez/deluge_exporter:latest\n```\n\nOr passing the deluge config directory into the container, [for example](https://github.com/tobbez/deluge_exporter/pull/1#issue-229784499):\n\n```\ndocker run -e \"DELUGE_HOST=172.17.0.1\" -v /etc/deluge:/root/.config/deluge/ -p 9354:9354 tobbez/deluge_exporter:latest\n```\n\n\n## Windows service\n\nOn Windows, a service can be created by running the following with\nAdministrator privileges:\n\n```\nsc create deluge_exporter binPath= \"C:\\path\\to\\python.exe C:\\path\\to\\deluge_exporter_windows_service.py start\" obj= .\\USERNAME password= PASSWORD displayname= deluge_exporter start= auto\n```\n\n\n## Exported metrics\n\nFor a full list of metrics, please refer to the [README on GitHub](https://github.com/tobbez/deluge_exporter#exported-metrics)",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.list.v2+json"
  ],
  "content_types": [
    "image"
  ]
}