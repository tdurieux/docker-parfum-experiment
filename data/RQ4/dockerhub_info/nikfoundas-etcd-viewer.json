{
  "user": "nikfoundas",
  "name": "etcd-viewer",
  "namespace": "nikfoundas",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "etcd key-value store viewer and editor",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 8,
  "pull_count": 698189,
  "last_updated": "2018-02-06T07:00:17.721643Z",
  "date_registered": "2015-06-12T21:35:40.903795Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "nikfoundas",
  "has_starred": false,
  "full_description": "# etcd-viewer\n\n[![Build Status](https://travis-ci.org/nikfoundas/etcd-viewer.png?branch=master)](https://travis-ci.org/nikfoundas/etcd-viewer)\n\nThe `etcd-viewer` is a java web application that allows you to navigate and modify [etcd][etcd] distributed key-value stores.\n\nThe application uses the [etcd rest API][etcd-api] to communicate with the underlying key-value store.\n\n## Getting Started\n\n![navigation screen](http://nikfoundas.github.io/etcd-viewer/screenshots/navigation.png)\n\n\n### Run with docker\n\nThe easiest way to get etcd-viewer is to run a [docker][docker] container with the etcd-viewer image:\n\n```docker run -d -p 8080:8080 nikfoundas/etcd-viewer```\n\nThe docker container will deploy the etcd-viewer war file to a [jetty][jetty] servlet container.\nThe docker image is built on top of the jetty:latest image.\n\n\n### Build etcd-viewer\n\nIn order to build `etcd-viewer` you need java-1.8 and [maven][maven] 3.0.5 or later.\n\n* Clone the etcd-viewer repository\n\n```git clone https://github.com/nikfoundas/etcd-viewer.git```\n\n* Build the project with maven\n\n```mvn clean install```\n\n* deploy war file to some servlet container ([jetty][jetty] or [tomcat][tomcat])\n\n* Alternatively you can start the etcd-viewer with maven jetty plugin\n\n```mvn jetty:run```\n\n* or even build a docker image using the provided Dockerfile\n\n```docker build -t some-repo/etcd-viewer .```\n\n\n### Embed components within your wicket application\n\nIf your application is built with [wicket][wicket] you can also use the\ncomponents - panels from etcd-viewer to embed the browsing - editing\nfunctionality in your application.\n\n## Features\n\n### Supported etcd API\n\nEtcd viewer supports the following actions via the [etcd rest API][etcd-api]:\n\n* Get version\n* Get node self statistics which contains the leader information\n* Retrieve machines that participate in the etcd cluster.\n* Create directories and key-value pairs with optionally providing\ntime to live (TTL)\n* Retrieve directories and key value nodes\n* Update key-value pairs\n* Delete directories recursively\n* Delete key-value pairs\n\n![add node](http://nikfoundas.github.io/etcd-viewer/screenshots/add-node.png)\n\n![confirm delete](http://nikfoundas.github.io/etcd-viewer/screenshots/confirm-delete.png)\n\n### Multiple etcd key-value stores\n\nYou can navigate and modify multiple etcd key-value stores without\nhaving to run the application more than once. The etcd clusters are\nstored in memory and they are forgotten after the application is\nrestarted.\n\nYou can add and remove etcd key-value stores at any time. Removing\nan etcd registry from the etcd-viewer does not affect the contents\nof the registry itself.\n\n![multiple clusters](http://nikfoundas.github.io/etcd-viewer/screenshots/add-registry.png)\n\n### Leader auto detection\n\nIn order to add an etcd cluster registry you only need to provide one\nalive etcd host. The application discovers the rest of the cluster\nhosts and detects the leader node. All reads and writes are then\ndirected to the leader node to avoid redirections.\n\n### Etcd cluster monitor\n\nEtcd viewer enables you to view the machines that participate in the\netcd cluster along with their status - leader or follower. If some\netcd host is not accessible then it is marked with red to indicate\nthat it is down. Note that for single node etcd registries no\nstatus is reported by etcd.\n\n![cluster monitor](http://nikfoundas.github.io/etcd-viewer/screenshots/view-cluster.png)\n\n### Responsive css\n\n`etcd-viewer` uses [bootstrap][bootstrap] css framework to enable key-value\nstorage accessibility even from mobile devices or tablets.\n\n![responsive](http://nikfoundas.github.io/etcd-viewer/screenshots/responsive.png)\n\n## Next steps\n\n* Provide feedback on communication or etcd api errors (partially done)\n* Provide log console to record modifications applied\n* Extend functionality to view and modify [fleet][fleet] unit information\n* Use thread safe CXF jax-rs api (done)\n* Support client side basic authentication for etcd with authentication enabled. Check [etcd auth api](https://github.com/coreos/etcd/blob/master/Documentation/auth_api.md). (etcd 2.1.x and later)\n* Support user and role management (etcd 2.1.x and later)\n* Provide documentation and hooks to import etcd client certificates\n\n## About\n\n`etcd-viewer` uses the following open source libraries and frameworks:\n\n* [Apache wicket 6.19.0][wicket]: Open source Java web framework\n* [Apache CXF 3.0.1][cxf]: To handle the etcd rest API\n* [FasterXML Jackson 2.5.3][jackson]: To marshal/unmarshal JSON objects to POJOs\n* [Google Guice 3.0][guice]: For dependency injection\n* [Bootstrap 3.3.4][bootstrap]: Responsive CSS framework\n* [jQuery 1.11.2][jquery]: Open source JavaScript library\n* [FontAwesome 4.3.0][fontawesome]: Iconic web font\n\n![about](http://nikfoundas.github.io/etcd-viewer/screenshots/about.png)\n\n## License\n\netcd-viewer is released under the Apache 2.0 license. See the [LICENSE](http://nikfoundas.github.io/etcd-viewer/LICENSE) file for details.\n\n[etcd]: https://github.com/coreos/etcd\n[etcd-api]: https://github.com/coreos/etcd/blob/master/Documentation/api.md\n[docker]: https://www.docker.com/\n[maven]: http://maven.apache.org\n[wicket]: http://wicket.apache.org/\n[bootstrap]: http://getbootstrap.com/\n[fontawesome]: http://fortawesome.github.io/Font-Awesome/\n[cxf]: http://cxf.apache.org\n[jackson]: https://github.com/FasterXML/jackson\n[guice]: https://github.com/google/guice\n[jetty]: http://www.eclipse.org/jetty/\n[tomcat]: http://tomcat.apache.org\n[fleet]: https://github.com/coreos/fleet\n[jquery]: https://jquery.com/\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.v1+prettyjws",
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}