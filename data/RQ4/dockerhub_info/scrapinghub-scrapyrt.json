{
  "user": "scrapinghub",
  "name": "scrapyrt",
  "namespace": "scrapinghub",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "ScrapyRT (scrapy realtime)",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 1,
  "pull_count": 1967,
  "last_updated": "2018-05-09T11:40:27.672993Z",
  "date_registered": "2017-03-14T22:10:29.029504Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "scrapinghub",
  "has_starred": false,
  "full_description": "==========================\nScrapyrt (Scrapy realtime)\n==========================\n\n.. image:: https://travis-ci.org/scrapinghub/scrapyrt.svg?branch=master\n    :target: https://travis-ci.org/scrapinghub/scrapyrt\n\n.. image:: https://img.shields.io/pypi/pyversions/scrapyrt.svg\n    :target: https://pypi.python.org/pypi/scrapyrt\n\n.. image:: https://img.shields.io/pypi/v/scrapyrt.svg\n    :target: https://pypi.python.org/pypi/scrapyrt\n\n.. image:: https://img.shields.io/pypi/l/scrapyrt.svg\n    :target: https://pypi.python.org/pypi/scrapyrt\n\nHTTP server which provides API for scheduling Scrapy spiders and\nmaking requests with spiders.\n\nAllows you to easily add HTTP API to your existing Scrapy project. All Scrapy project\ncomponents (e.g. middleware, pipelines, extensions) are supported out of the box. You\nsimply run Scrapyrt in Scrapy project directory and it starts HTTP server allowing you\nto schedule your spiders and get spider output in JSON format.\n\n\nDocumentation\n=============\n\nDocumentation is available here: http://scrapyrt.readthedocs.org/en/latest/index.html\n\n\nSupport\n=======\n\nOpen source support is provided here in Github. Please `create a question\nissue`_ (ie. issue with \"question\" label).\n\nCommercial support is also available by `Scrapinghub`_.\n\n.. _create a question issue: https://github.com/scrapinghub/scrapyrt/issues/new?labels=question\n.. _Scrapinghub: http://scrapinghub.com\n\nDevelopment\n===========\n\nRelease\n-------\n\nUse `bumpversion`_ tool, e.g. to release minor version do::\n\n    bumpversion minor --verbose\n    git push origin master\n    git push origin <new_version_tag>\n\n.. _bumpversion: https://pypi.python.org/pypi/bumpversion\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}