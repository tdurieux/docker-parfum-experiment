{
  "user": "outsideris",
  "name": "citizen",
  "namespace": "outsideris",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "A Private Terraform Module Registry",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 0,
  "pull_count": 2534,
  "last_updated": "2019-03-21T08:42:17.939803Z",
  "date_registered": "2018-06-08T12:17:19.318482Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "outsideris",
  "has_starred": false,
  "full_description": "= Citizen\n\nimage:https://travis-ci.org/outsideris/citizen.svg?branch=master[\"Build Status\", link=\"https://travis-ci.org/outsideris/citizen\"]\nimage:https://app.fossa.io/api/projects/git%2Bgithub.com%2Foutsideris%2Fcitizen.svg?type=shield[\"FOSSA Status\", link=\"https://app.fossa.io/projects/git%2Bgithub.com%2Foutsideris%2Fcitizen?ref=badge_shield\"]\nimage:https://david-dm.org/outsideris/citizen/status.svg[\"Dependency Status\", link=\"https://david-dm.org/outsideris/citizen\"]\nimage:https://david-dm.org/outsideris/citizen/dev-status.svg[\"devDependency Status\", link=\"https://david-dm.org/outsideris/citizen?type=dev\"]\n\nA Private link:https://registry.terraform.io/[Terraform Module Registry]\nin the early stages of development.\n\n== Requirements\n\n* Node.js 8+\n* HTTPS - Terraform module registry only support HTTPS.\n\n== Usage\nlink:https://github.com/outsideris/citizen//releases/latest[Download the latest release!]\n\n=== `citizen server`\nTo launch the registry server\n[source, sh]\n....\n$ ./citizen server\n....\n\nIt will be launched at link:http://localhost:3000[http://localhost:3000]. You can check it at link:http://localhost:3000/health[http://localhost:3000/health].\n\nBecause link:https://www.terraform.io/[Terraform CLI] works with only HTTPS server, you should set up HTTPS in front of the registry server.\n\nIf you want to test it at local, you need a tool which provides HTTPS like link:https://ngrok.com/[ngrok].\n\nEnvironment variables:\n\n* `CITIZEN_DATA_PATH`: A directory to save database file. The default is `data` directory in a current working directory (absolute/relative path can be used).\n* `CITIZEN_STORAGE` : Storage type to store module files. You can use `file` or `s3` type.\n* `CITIZEN_STORAGE_PATH`: A directory to save module files only if `CITIZEN_STORAGE` is `file` (absolute/relative path can be used).\n* `CITIZEN_AWS_S3_BUCKET``: A S3 bucket to save module files only if `CITIZEN_STORAGE` is `s3`.\n* `AWS_ACCESS_KEY_ID`: Your AWS access key only if `CITIZEN_STORAGE` is `s3`.\n* `AWS_SECRET_ACCESS_KEY`: Your AWS secret access key only if `CITIZEN_STORAGE` is `s3`.\n\n=== `citizen publish`\nSince link:https://registry.terraform.io/[official Terraform Module Registry] is integrated with GitHub, users can publish terraform modules if they just push it on GitHub.\n\nCitizen provides a special command to publish a module onto citizen registry server instead integrating GitHub.\n\nIn a module directory, you can publish your terraform module via a command below:\n[source, sh]\n....\n$ ./citizen publish <namespace> <name> <provider> <version>\n....\n\nYou should set `CITIZEN_ADDR` as citizen registry server address which you will publish your modules to. e.g. `https://registry.example.com`.\n\n=== Examples\nIf you have ALB module in `./alb` directory and your registry server is launched at `https://registry.example.com`, you run below command in `./alb` directory to publish ALB module.\n[source, sh]\n....\n$ CITIZEN_ADDR=https://registry.example.com \\\n  citizen publish dev-team alb aws 0.1.0\n....\n\nThen, you can define it in your terraform file like this:\n....\nmodule \"alb\" {\n  source = \"registry.example.com/dev-team/alb/aws\"\n  version = \"0.1.0\"\n}\n....\n\n== Docker\nYou can use docker to launch the registry server.\nThe docker image is in link:https://hub.docker.com/r/outsideris/citizen/[outsideris/citizen].\n\n[source, sh]\n....\n$ docker run -d -p \"3000:3000\" outsideris/citizen:latest\n....\n\n== Development\nSet environment variables, see above.\n\n[source, sh]\n....\n$ ./bin/citizen server\n$ ./bin/citizen publish\n....\n\n=== Test\n[source, sh]\n....\n$ npm test\n....\n\n=== Build distributions\n\n[source, sh]\n....\n$ npm run build\n....\n\nUnder ``dist/``,\ncitizen binaries for linux, darwin and windows made.\n\n== License\nimage:https://app.fossa.io/api/projects/git%2Bgithub.com%2Foutsideris%2Fcitizen.svg?type=large[\"FOSSA Status\", link=\"https://app.fossa.io/projects/git%2Bgithub.com%2Foutsideris%2Fcitizen?ref=badge_large\"]\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}