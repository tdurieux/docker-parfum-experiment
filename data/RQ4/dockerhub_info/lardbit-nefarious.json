{
  "user": "lardbit",
  "name": "nefarious",
  "namespace": "lardbit",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Nefarious",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 4,
  "pull_count": 10913038,
  "last_updated": "2022-08-13T16:05:56.336927Z",
  "date_registered": "2018-11-17T15:24:32.062231Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "lardbit",
  "has_starred": false,
  "full_description": "# Nefarious\n\n[![Build Status](https://travis-ci.org/lardbit/nefarious.svg?branch=master)](https://travis-ci.org/lardbit/nefarious)\n\n**Nefarious is a web application that helps you download Movies and TV Shows.**\n\nIt aims to combine features of [Sonarr](https://github.com/Sonarr/Sonarr/), [Radarr](https://github.com/Radarr/Radarr) and [Ombi](https://github.com/tidusjar/Ombi).\n\nIt uses [Jackett](https://github.com/Jackett/Jackett/) and [Transmission](https://transmissionbt.com/) under the hood.  Jackett searches for torrents and Transmission does the downloading.\n\nFeatures:\n- [x] Search TV\n- [x] Search Movies\n- [x] Auto download TV (individual or full season)\n- [x] Auto download Movies\n- [x] Discover Movies (by popularity, genres etc)\n- [x] Discover TV (by popularity, genres etc)\n- [x] Manually search Jackett results and download\n- [x] Support blacklisting torrent results (a bad torrent that should be avoided)\n- [X] Support quality profiles (i.e only download *1080p* Movies and *any* quality TV)\n- [x] Auto download media once it's released (routinely scan)\n- [x] Monitor transmission results from within the app\n- [x] Self/auto updating application\n- [x] Support multiple users (i.e admin users and regular users)\n- [x] Mobile Friendly (looks good on small devices like phones)\n- [ ] Support user requests (i.e an unprivileged user must \"request\" to watch something)\n- [ ] Smart Ratio management (auto seed to specified indexers)\n\n### Contents\n\n[Installing](#installing)\n\n[Running](#running)\n\n[Screenshots](#screenshots)\n\n[Troubleshooting](#troubleshooting)\n\n[Development](#development)\n\n### Screenshots\n\n##### Login\n![](https://github.com/lardbit/nefarious/blob/master/screenshots/login.png?raw=true)\n##### Search\n![](https://github.com/lardbit/nefarious/blob/master/screenshots/search-blank.png?raw=true)\n##### Search Results\n![](https://github.com/lardbit/nefarious/blob/master/screenshots/search-results.png?raw=true)\n##### TV Result\n![](https://github.com/lardbit/nefarious/blob/master/screenshots/media-tv-result.png?raw=true)\n##### Download Status\n![](https://github.com/lardbit/nefarious/blob/master/screenshots/media-status.png?raw=true)\n##### Movie Result\n![](https://github.com/lardbit/nefarious/blob/master/screenshots/media-movie-result.png?raw=true)\n##### Movie Custom Quality Profile\n![](https://github.com/lardbit/nefarious/blob/master/screenshots/media-movie-custom-quality-profile.png?raw=true)\n##### Discover\n![](https://github.com/lardbit/nefarious/blob/master/screenshots/discover.png?raw=true)\n##### Wanted\n![](https://github.com/lardbit/nefarious/blob/master/screenshots/wanted.png?raw=true)\n##### Watching\n![](https://github.com/lardbit/nefarious/blob/master/screenshots/watching.png?raw=true)\n##### Settings\n![](https://github.com/lardbit/nefarious/blob/master/screenshots/settings.png?raw=true)\n##### Search Manual\n![](https://github.com/lardbit/nefarious/blob/master/screenshots/search-manual.png?raw=true)\n##### Mobile Friendly\n![](https://github.com/lardbit/nefarious/blob/master/screenshots/search-mobile.png?raw=true)\n\n\n### Installing\n\nNefarious is best run via Docker through [Docker Compose](https://docs.docker.com/compose/install/).\n\nInstall that and you're all set.\n\n### Running\n\nRun nefarious and dependencies:\n    \n    docker-compose up -d\n\nThe default user/pass is `admin/admin`.  You can change this through the backend [admin interface](http://localhost:8000/admin/auth/user/1/password/).\n\n**NOTE:** there is an [armv7 image](https://hub.docker.com/r/lardbit/nefarious/tags/) as well.\n\n### Configure Jackett\n\nConfigure your local Jackett instance at [http://localhost:9117](http://localhost:9117).  You'll need to add indexers and copy your api key to enter into nefarious.\n\n### Configure Transmission\n\nIf you're using the built-in transmission, then there's nothing to actually configure, but you can view its web ui at [http://localhost:9091](http://localhost:9091) to see what's actually being downloaded by nefarious.\n\n### Configure Nefarious\n\nOpen nefarious at [http://localhost:8000](http://localhost:8000).  You'll be redirected to the settings page.\n\n##### Jackett settings\n\nSince jackett is running in the same docker network, you'll need to set the host as `jackett`.  The default port is `9117`.  Enter your api token.\n\n##### Transmission settings\n\nConfigure your transmission host, port, username and password, and download directories.  Nefarious will save TV and Movies in individual sub-folders of your configured Transmission download path.\n\nIf you're using the built-in transmission in the `docker-compose.yml`, then make sure to enter `transmission` as the host since it's in the same docker network stack.\n\n## Troubleshooting\n   \n    # logs for main app\n    docker-compose logs -f nefarious\n\n    # logs for tasks (search results)\n    docker-compose logs -f celery\n\n\n## Development\n\nIf you're interested in contributing or simply want to run nefarious without *docker* then follow these instructions.\n\nNefarious is built on:\n\n- Python 3.6\n- Django 2\n- Angular 6\n- Bootstrap 4\n\n*Note*: Review the `Dockerfile` for all necessary dependencies.\n\n#### Build front-end resources\n\nFirst build the frontend html/css stuff (angular):\n    \n    npm --prefix src/frontend run build\n   \nNote: run `npm --prefix src/frontend run watch` to automatically rebuild while you're developing the frontend stuff.\n   \n#### Run nefarious\n\nRun the python application using django's *development* `runserver` management command: \n\n    python src/manage.py runserver 8000\n   \nIt'll be now running at [http://127.0.0.1:8000](http://127.0.0.1:8000)\n\n   \n#### Run celery (task queue)\n\n[Celery](http://celeryproject.org) is a task queue and is used by nefarious to queue downloads, monitor for things, etc.\n\nRun the celery server:\n\n    celery -A nefarious worker --loglevel=INFO\n    \nYou'll see all download logs/activity come out of here.\n\n#### Dependencies\n\nJackett, Redis and Transmission are expected to be running somewhere.  \n\nYou can download and run them manually, or, for simplicity, I'd just run them via docker using the `docker-compose.yml` file.\n\nRun redis, jackett and transmission from the `docker-compose.yml` file:\n\n    docker-compose up -d redis jackett transmission\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.distribution.manifest.list.v2+json",
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}