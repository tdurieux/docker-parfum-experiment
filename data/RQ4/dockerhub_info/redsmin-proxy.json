{
  "user": "redsmin",
  "name": "proxy",
  "namespace": "redsmin",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "Docker container for Redsmin proxy, connects a local Redis to the Redsmin GUI.",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 9,
  "pull_count": 9851006,
  "last_updated": "2020-05-08T12:31:07.299719Z",
  "date_registered": "2015-09-15T20:45:10.724Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "redsmin",
  "has_starred": false,
  "full_description": "## Redsmin Proxy â€” Securely connect behind the firewall (or localhost) Redis servers to [Redsmin](https://redsmin.com)\n\n[![Build Status](https://img.shields.io/circleci/project/github/Redsmin/proxy.svg)](https://circleci.com/gh/Redsmin/proxy/) [![Coverage Status](https://img.shields.io/coveralls/Redsmin/proxy/master.svg)](https://coveralls.io/github/Redsmin/proxy?branch=master) [![Support](http://img.shields.io/badge/redsmin-support-0690fa.svg?style=flat)](https://redsmin.uservoice.com/) [![Follow](https://img.shields.io/twitter/follow/redsmin.svg?style=social)](https://twitter.com/Redsmin)\n\n[![Docker Hub](http://img.shields.io/badge/docker-hub-22b8eb.svg?style=flat)](https://hub.docker.com/r/redsmin/proxy/) [![Docker hub](https://img.shields.io/docker/pulls/redsmin/proxy.svg)](https://hub.docker.com/r/redsmin/proxy/) [![NPM version](https://img.shields.io/npm/v/redsmin.svg)](http://badge.fury.io/js/redsmin) [![Downloads](http://img.shields.io/npm/dm/redsmin.svg)](https://www.npmjs.com/package/redsmin)\n\n\n<p align=\"center\">\n<a target=\"_blank\" href=\"https://redsmin.com\"><img style=\"width:100%\" src=\"docs/redsmin-proxy.png\"></a>\n</p>\n\n\n\n- [Installation - Getting started](https://redsmin.uservoice.com/knowledgebase/articles/121169-can-i-manage-redis-instances-only-accessible-from-)\n- [Environment variables options](#environment-variables-options)\n- [Is the communication safe between my server and Redsmin? (Yes)](#is-the-communication-safe-between-my-server-and-redsmin-yes)\n- How to start Redsmin proxy\n  - [on Docker](#docker)\n    -  [Start and connect Redsmin proxy to a local Redis server](#start-and-connect-redsmin-proxy-to-a-local-redis-server)\n    -  [Start and connect Redsmin proxy to an network-wide available Redis](#start-and-connect-redsmin-proxy-to-an-network-wide-available-redis)\n    -  [Start and connect Redsmin proxy to a Redis container](#start-and-connect-redsmin-proxy-to-a-redis-container)\n    -  [Docker auto-restart](#docker-auto-restart)\n  - [on Mac OS X](#macos-debianubuntu)\n  - [on Debian/Ubuntu, *nix](#macos-debianubuntu)\n  - [on Windows](#windows-powershell)\n  - with a password protected redis\n    - [Mac OS X](#StartWithPasswordProtectedRedisUnix)\n    - [Debian/Ubuntu, *nix](#StartWithPasswordProtectedRedisUnix)\n    - [Windows](#StartWithPasswordProtectedRedisWindows)\n  - with a redis listening on a unix-socket\n    - [Mac OS X](#how-to-start-redsmin-proxy-with-a-redis-listening-on-a-unix-socket)\n    - [Debian/Ubuntu, *nix](#how-to-start-redsmin-proxy-with-a-redis-listening-on-a-unix-socket)\n    - [Windows](#how-to-start-redsmin-proxy-with-a-redis-listening-on-a-unix-socket)\n  - [reading a configuration file](#how-to-start-redsmin-proxy-reading-a-configuration-file)\n- [How to connect multiple Redis from the same server to Redsmin](#macos-debianubuntu-4)\n- How to keep redsmin proxy up once I disconnect\n  - [with nohup](#with-nohup)\n  - [with screen](#with-screen)\n  - [with a process manager](#with-a-process-manager)\n    - [with systemd](#with-systemd)\n    - [with supervisord](#with-supervisord)\n- [I'm behind a firewall, what rule should I add?](#im-behind-a-firewall-what-rule-should-i-add)\n- [How to uninstall Redsmin Proxy](#how-to-uninstall-redsmin-proxy)\n- [Throubleshooting](#throubleshooting)\n  - [Ready check failed: NOAUTH Authentication required.](#ready-check-failed-noauth-authentication-required)\n- [Changelog](/CHANGELOG.md)\n\nWe announce changes on our Twitter account [@redsmin](https://twitter.com/redsmin), our [Facebook page](https://www.facebook.com/redis.redsmin).\n\n--------------------------------------------------------------------------------------------------\n\n<a name=\"EnvironmentVariablesOptions\"></a>\n####  Environment variables options:  ####\n\n- `CONFIG_FILE`: configuration file to read (if any), default: `/path/to/redsmin-proxy/etc/redsmin.json`\n- `REDIS_URI`: Redis URI or socket path, default `redis://127.0.0.1:6379`\n- `REDIS_AUTH`: Redis authentication password, default `null`\n- `REDSMIN_KEY`: your Redsmin server connection key, default `''`\n\nAdvanced configuration:\n\n- `REDSMIN_PORT`: where redsmin proxy should connect, default: `993`\n- `REDSMIN_HOSTNAME`: where redsmin proxy should connect, default `ssl.redsmin.com`\n- `DEBUG`: debug mode, default `false`\n- Prefix `REDIS_URI` with `rediss://` to connect to Redis using TLS encryption\n\n--------------------------------------------------------------------------------------------------\n\n<a name=\"CommunicationSafety\"></a>\n#### Is the communication safe between my server and Redsmin? (Yes)\n\nYes, Redsmin and Redsmin proxy communicate through a secure connection using the [TLS 1.2 protocol](https://en.wikipedia.org/wiki/Transport_Layer_Security) so no one will be able to inspect the data looking at the traffic.\n\n--------------------------------------------------------------------------------------------------\n\n\n#### How to start Redsmin proxy\n\n<a name=\"StartWithDocker\"></a>\n##### Docker\n\n\n<a name=\"StartWithDockerAndConnectToALocalRedis\"></a>\n###### Start and connect Redsmin proxy to a local Redis server\n\nLet say you started `redis-server` on your machine and then want to start redsmin-proxy from docker. **If you are on MacOSX or Windows the following command won't work** (if you are on Linux the following line will work):\n\n```bash\ndocker run -it --rm --net=host --name redsmin-proxy -e REDSMIN_KEY=YOUR_REDSMIN_KEY -e REDIS_URI=\"redis://127.0.0.1:6379\" redsmin/proxy\n```\n\nIt does not work because on non-linux environment the docker daemon is running inside a VM and your `redis-server` is running on your host machine, thus accessing 127.0.0.1 from the docker daemon will simply hit the VM loopback.\n\nSo we simply need to specify the `HOST_IP` (replace it with your own local IP, you may want to use `ifconfig` to find it) instead of `127.0.0.1`:\n\n```bash\ndocker run -it --rm --name redsmin-proxy -e REDSMIN_KEY=YOUR_REDSMIN_KEY -e REDIS_URI=\"redis://HOST_IP:6379\" redsmin/proxy\n```\n\nOn MacOSX, this should work and let redsmin-proxy connect to a Redis container on the same host:\n\n```bash\ndocker run -it --rm --name redsmin-proxy -e REDSMIN_KEY=YOUR_REDSMIN_KEY -e REDIS_URI=\"redis://docker.for.mac.localhost:6379\" redsmin/proxy\n```\n\n<a name=\"StartWithDockerAndConnectToNetworkWideRedis\"></a>\n###### Start and connect Redsmin proxy to an network-wide available Redis\n\n```bash\ndocker run -it --rm --name redsmin-proxy -e REDSMIN_KEY=YOUR_REDSMIN_KEY -e REDIS_URI=\"redis://192.168.3.50:6379\" redsmin/proxy\n```\n\nWhere `redis://192.168.3.50:6379` will be the ip address and port of the running Redis server and `YOUR_REDSMIN_KEY` is your [Redsmin key](https://redsmin.uservoice.com/knowledgebase/articles/121169-can-i-manage-redis-instances-only-accessible-from).\n\n<a name=\"StartWithDockerAndConnectToARedisContainer\"></a>\n###### Start and connect Redsmin proxy to a Redis container\n\nLet first say you've started a Redis container:\n\n```bash\ndocker run --name my-redis --rm redis\n```\n\nYou can [link](https://docs.docker.com/userguide/dockerlinks/) redsmin proxy container to the redis one with `--link:\n\n```bash\ndocker run -it --rm --name redsmin-proxy --link my-redis:local-redis -e REDSMIN_KEY=YOUR_KEY -e REDIS_URI=\"redis://local-redis:6379\" redsmin/proxy\n```\n\n<a name=\"StartWithDockerAndUseAutoRestart\"></a>\n###### Docker auto-restart\n\nIf you want to leverage docker [auto-restart docker feature](https://docs.docker.com/reference/run/#restart-policies-restart), use the `--restart=always` command.\n\n\n<a name=\"StartOnMacOSDebianUbuntu\"></a>\n##### MacOS, Debian/Ubuntu\n\n```bash\nnpm install redsmin --global\nREDIS_URI=\"redis://127.0.0.1:6379\" REDSMIN_KEY=\"redsmin-token\" redsmin\n```\n\n<a name=\"StartOnWindows\"></a>\n##### Windows (PowerShell)\n\n```bash\nnpm install redsmin --global\n$env:REDIS_URI=\"redis://127.0.0.1:6379\"\n$env:REDSMIN_KEY=\"redsmin-token\"\nredsmin\n```\n\n##### Windows (CMD.exe)\n\n```bash\nnpm install redsmin --global\nset REDIS_URI=redis://127.0.0.1:6379\nset REDSMIN_KEY=redsmin-token\nredsmin\n```\n\nNote: don't use double quotes for values on windows (bad ðŸ”´ : `set KEY=\"VALUE\"`, good âœ… : `set KEY=VALUE`)\n\n--------------------------------------------------------------------------------------------------\n\n<a name=\"StartWithPasswordProtectedRedis\"></a>\n#### How to start Redsmin proxy with a password protected redis\n\n<a name=\"StartWithPasswordProtectedRedisUnix\"></a>\n##### MacOS, Debian/Ubuntu\n\n```bash\nnpm install redsmin --global\nREDIS_URI=\"redis://127.0.0.1:6379\" REDIS_AUTH=\"auth-pass\" REDSMIN_KEY=\"redsmin-token\" redsmin\n```\n\n<a name=\"StartWithPasswordProtectedRedisWindows\"></a>\n##### Windows\n\n```bash\nnpm install redsmin --global\nset REDIS_URI=redis://127.0.0.1:6379\nset REDIS_AUTH=auth-pass\nset REDSMIN_KEY=redsmin-token\nredsmin\n```\n\nNote: don't use double quotes for values on windows (bad ðŸ”´ : `set KEY=\"VALUE\"`, good âœ… : `set KEY=VALUE`)\n\n--------------------------------------------------------------------------------------------------\n\n<a name=\"StartWithRedisUnixSocket\"></a>\n#### How to start Redsmin proxy with a redis listening on a unix-socket\n\n<a name=\"StartWithRedisUnixSocketUnix\"></a>\n##### MacOS, Debian/Ubuntu\n\n```bash\nnpm install redsmin --global\nREDIS_URI=\"/tmp/redis.sock\" REDSMIN_KEY=\"5517e20046f4c7530d000357\" redsmin\n```\n\n<a name=\"StartWithRedisUnixSocketWindows\"></a>\n##### Windows\n\n```bash\nnpm install redsmin --global\nset REDIS_URI=/tmp/redis.sock\nset REDSMIN_KEY=5517e20046f4c7530d000357\nredsmin\n```\n\nNote: \n- don't use double quotes for values on windows (bad ðŸ”´ : `set KEY=\"VALUE\"`, good âœ… : `set KEY=VALUE`)\n- you may need to use `sudo` to access to the socket.\n\n--------------------------------------------------------------------------------------------------\n\n<a name=\"startWithConfigurationFile\"></a>\n#### How to start Redsmin proxy reading a configuration file\n\nFirst create a json configuration file, for instance  `/etc/redsmin.json`:\n\n```json\n{\n  \"key\": \"redsmin-token\",\n  \"redis\": \"redis://127.0.0.1:6379\",\n  \"auth\": \"\"\n}\n```\n\nThen start redsmin proxy with:\n\n##### MacOS, Debian/Ubuntu\n\n```bash\nCONFIG_FILE=\"/etc/redsmin.json\" redsmin\n```\n\n##### Windows\n\n```bash\nset CONFIG_FILE=\"/etc/redsmin.json\"\nredsmin\n```\n\n--------------------------------------------------------------------------------------------------\n\n<a name=\"connectMultipleRedis\">\n  \n#### How to connect multiple Redis from the same server to Redsmin\n\n##### MacOS, Debian/Ubuntu\n\n```bash\nREDIS_URI=\"redis://127.0.0.1:6379\" REDSMIN_KEY=\"redsmin-token1\" redsmin &\nREDIS_URI=\"redis://127.0.0.1:6380\" REDSMIN_KEY=\"redsmin-token2\" redsmin &\nREDIS_URI=\"redis://127.0.0.1:6381\" REDSMIN_KEY=\"redsmin-token3\" redsmin &\nREDIS_URI=\"redis://127.0.0.1:6382\" REDSMIN_KEY=\"redsmin-token4\" redsmin &\n```\n\n##### Windows\n\n```bash\nset REDIS_URI=\"redis://127.0.0.1:6379\"\nset REDSMIN_KEY=redsmin-token1\nSTART /B redsmin\n\nset REDIS_URI=\"redis://127.0.0.1:6380\"\nset REDSMIN_KEY=redsmin-token2\nSTART /B redsmin\n\nset REDIS_URI=\"redis://127.0.0.1:6381\"\nset REDSMIN_KEY=redsmin-token3\nSTART /B redsmin\n\nset REDIS_URI=\"redis://127.0.0.1:6382\"\nset REDSMIN_KEY=redsmin-token4\nSTART /B redsmin\n```\n\nNote: \n- of course we could have used multiple `CONFIG_FILE` instead of environment variables.\n\n--------------------------------------------------------------------------------------------------\n\n#### How to keep redsmin proxy up once I disconnect\n\n<a name=\"keepRedsminProxyUpWithNohup\"></a>\n## With nohup\n\nThe easiest way is to use [nohup](http://linux.die.net/man/1/nohup) that will keep redsmin-proxy running even once the SSH session is closed. Simply connect to the server that contains Redis, run the commands below, don't forget to replace `YOUR_REDSMIN_TOKEN` with the `REDSMIN_TOKEN` you had when creating the proxy connection from Redsmin app.\n\n```shell\necho '#!/usr/bin/env bash' >> redsmin-proxy.sh\necho 'while true; do REDSMIN_KEY=YOUR_REDSMIN_TOKEN redsmin; sleep 1; done;' >> redsmin-proxy.sh\nchmod +x redsmin-proxy.sh\nnohup ./redsmin-proxy.sh &\n```\n\nTo check that everything is alright or to debug Redsmin proxy, you can use `tail -f nohup.out`.\n\n## With nohup (one-liner)\n\n```\nnohup bash -c \"while true; do REDSMIN_KEY=YOUR_REDSMIN_TOKEN redsmin; sleep 1; done\" &\n```\n\n<a name=\"keepRedsminProxyUpWithScreen\"></a>\n## With screen\n\nOn MacOS, Ubuntu/Debian, the simplest way is to use [screen](http://www.rackaid.com/blog/linux-screen-tutorial-and-how-to/):\n\n```\n# start screen\nscreen\n# start redsmin-proxy\nREDIS_URI=\"redis://127.0.0.1:6379\" REDSMIN_KEY=\"redsmin-token1\" redsmin\n# Ctrl+A+D to detach from screen\n# and then to reattach to the screen session:\nscreen -r\n```\n\n<a name=\"keepRedsminProxyUpWithAProcessManager\"></a>\n## With a process manager\n\nBut you could also use [Upstart](http://upstart.ubuntu.com/), [systemd](http://www.freedesktop.org/wiki/Software/systemd/), [supervisord](http://supervisord.org/) or [pm2](https://github.com/Unitech/PM2) on these system.\n\nOn Windows you will need to [create a service](http://support.microsoft.com/en-us/kb/251192) or use [pm2](https://github.com/Unitech/PM2).\n\n## With Systemd\n\nCreate the service at `/etc/systemd/system/redsmin.service`\n\n```\n[Unit]\nDescription = Redsmin Proxy\nAfter = network.target\n\n[Service]\nType = simple\nEnvironment = REDIS_URI=redis://127.0.0.1:6379 REDSMIN_KEY=your-token-here\nExecStart = /usr/bin/redsmin $REDIS_URI $REDSMIN_KEY\nTimeoutStartSec = infinity\nRestart = on-abort\n\n[Install]\nWantedBy = multi-user.target\n```\n\nReload systemd by `systemctl daemon-reload`.\n\nYou can now start/stop/restart redsmin like any other systemd service, like `systemctl start redsmin`.\n\n## With Supervisord\n\nCreate a config file with these contents:\n\n```\n[program:redsmin]\ncommand = /usr/bin/redsmin\nautostart = true\nautorestart = true\nenvironment = REDIS_URI=\"redis://127.0.0.1:6379\",REDSMIN_KEY=\"your-token-here\"\n```\n\nReload supervisord config by `supervisorctl reread && supervisorctl update`\n\n**We will happily merge into this repository any pull-request describing a configuration file for any other process runner.**\n\n--------------------------------------------------------------------------------------------------\n\n<a name=\"RuleBehindTheFirewall\"></a>\n#### I'm behind a firewall, what rule should I add?\n\nRedsmin proxy connects to `ssl.redsmin.com` on port `993` with a secure [TLS socket connection](https://en.wikipedia.org/wiki/Transport_Layer_Security). For troubleshooting: [What ip/port should I locally open to use Redsmin proxy](https://redsmin.uservoice.com/knowledgebase/articles/274294-what-ip-port-should-i-locally-open-to-use-redsmin-).\n\n--------------------------------------------------------------------------------------------------\n\n<a name=\"Uninstall\"></a>\n#### How to uninstall Redsmin Proxy\n\n##### MacOS, Debian/Ubuntu\n\n```bash\nnpm uninstall redsmin -g\n```\n\n<a name=\"troubleshooting\"></a>\n#### Throubleshooting\n\n<a name=\"noauth\"></a>\n##### Ready check failed: NOAUTH Authentication required\n\nIt means that your Redis server required a password and that no password is configured in Redsmin Proxy. To fix this start Redsmin proxy with the [`REDIS_AUTH`](#environment-variables-options) environment variable.\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json",
    "application/vnd.docker.distribution.manifest.v1+prettyjws"
  ],
  "content_types": [
    "image"
  ]
}