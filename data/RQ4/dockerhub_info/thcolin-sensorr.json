{
  "user": "thcolin",
  "name": "sensorr",
  "namespace": "thcolin",
  "repository_type": "image",
  "status": 1,
  "status_description": "active",
  "description": "üçøüìº Sensorr - Your Friendly Digital Video Recorder",
  "is_private": false,
  "is_automated": true,
  "can_edit": false,
  "star_count": 3,
  "pull_count": 1362857,
  "last_updated": "2021-02-02T11:38:47.270706Z",
  "date_registered": "2018-12-02T17:39:30.583954Z",
  "collaborator_count": 0,
  "affiliation": null,
  "hub_user": "thcolin",
  "has_starred": false,
  "full_description": "<img src=\"https://raw.githubusercontent.com/thcolin/sensorr/master/doc/banner.png?raw=true\" width=\"100%\" />\n\n<!-- # Warning\nüö® This is early experimental, currently will only support [`Cardigann`](https://github.com/cardigann/cardigann) and [`Jackett`](https://github.com/Jackett/Jackett). -->\n\n# ‚ú® Features\n<table className=\"markdown-table\">\n  <tbody>\n    <tr>\n      <th>Screenshot</th>\n      <th>Description</th>\n    </tr>\n    <tr>\n      <td>\n      <img src=\"https://raw.githubusercontent.com/thcolin/sensorr/master/doc/screenshots/home.png?raw=true\" width=\"100\" />\n      </td>\n      <td>\n        <b>Home</b>\n        <ul>\n          <li>Trending</li>\n          <li>Discover (Popular)</li>\n          <li>Discover (By year)</li>\n          <li>Discover (By genre)</li>\n          <li>Discover (By studio)</li>\n          <li>Trending (stars)</li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>\n      <img src=\"https://raw.githubusercontent.com/thcolin/sensorr/master/doc/screenshots/library.png?raw=true\" width=\"100\" />\n      </td>\n      <td>\n        <b>Library</b>\n        <ul>\n          <li>Manage your movies <code>library</code> (<code>wished</code>, <code>pinned</code> and <code>archived</code>)</li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>\n      <img src=\"https://raw.githubusercontent.com/thcolin/sensorr/master/doc/screenshots/discover.png?raw=true\" width=\"100\" />\n      </td>\n      <td>\n        <b>Discover</b>\n        <ul>\n          <li><code>Discover</code> movies with many options</li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>\n      <img src=\"https://raw.githubusercontent.com/thcolin/sensorr/master/doc/screenshots/movie.png?raw=true\" width=\"100\" />\n      </td>\n      <td>\n        <b>Movie</b>\n        <ul>\n          <li>Display <code>movie</code> details</li>\n          <li>Consider movie as, <code>üîï</code> <code>ignored</code>, <code>üçø</code> <code>wished</code>, <code>üìç</code> <code>pinned</code> or <code>üìº</code> <code>archived</code></li>\n          <li>Find <code>releases</code> on <code>sources</code> (<code>torznab</code> / <code>newznab</code>) - requested with <code>title</code> (localized) and <code>original_title</code></li>\n          <li>Grab a <code>release</code> (<code>manual</code> or <code>auto</code>)</li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>\n      <img src=\"https://raw.githubusercontent.com/thcolin/sensorr/master/doc/screenshots/collection.png?raw=true\" width=\"100\" />\n      </td>\n      <td>\n        <b>Collection</b>\n        <ul>\n          <li>Display <code>collection</code> details</li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>\n      <img src=\"https://raw.githubusercontent.com/thcolin/sensorr/master/doc/screenshots/calendar.png?raw=true\" width=\"100\" />\n      </td>\n      <td>\n        <b>Calendar</b>\n        <ul>\n          <li>Track upcoming movies from <code>followed</code> stars !</li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>\n      <img src=\"https://raw.githubusercontent.com/thcolin/sensorr/master/doc/screenshots/following.png?raw=true\" width=\"100\" />\n      </td>\n      <td>\n        <b>Following</b>\n        <ul>\n          <li>Manage stars you're <code>following</code></li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td>\n      <img src=\"https://raw.githubusercontent.com/thcolin/sensorr/master/doc/screenshots/person.png?raw=true\" width=\"100\" />\n      </td>\n      <td>\n        <b>Star</b>\n        <ul>\n          <li>Display <code>star</code> details</li>\n          <li>Follow star <code>üîï</code> <code>ignored</code>, <code>üîî</code> <code>followed</code></li>\n        </ul>\n      </td>\n    </tr>\n    <!-- <tr>\n      <td>\n      <img src=\"https://raw.githubusercontent.com/thcolin/sensorr/master/doc/screenshots/configure.png?raw=true\" width=\"100\" />\n      </td>\n      <td>\n        <b>Configure</b>\n        <ul>\n          <li>Simple configuration</li>\n          <li>Secured WebUI (with <code>basic-auth</code>)</li>\n          <li>Language aware, by default search on <a href=\"https://www.themoviedb.org/\">TMDB</a> with first <code>window.navigator.languages</code></li>\n          <li>Plex synchronization, never inadvertently download a movie you already own !</li>\n        </ul>\n      </td>\n    </tr> -->\n    <tr>\n      <td>\n      <img src=\"https://raw.githubusercontent.com/thcolin/sensorr/master/doc/screenshots/records.png?raw=true\" width=\"100\" />\n      </td>\n      <td>\n        <b>Logs</b>\n        <ul>\n          <li>See <code>logs</code> details</li>\n          <li>Every wished <code>movie</code> processed</li>\n        </ul>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n# üèéÔ∏è Quick Start\nBest way to get a **Sensorr** fresh install is with the Docker image, you just need a terminal with [`docker`](https://www.docker.com/get-starteds) installed !\n\n## üê≥ Docker\nCheckout Sensorr Docker image at [thcolin/sensorr/](https://hub.docker.com/r/thcolin/sensorr/)\n\n```\n# `/home/user/.sensorr` will be your config path\n# `/home/user/downloads` will be your blackhole path\ndocker run -p 5070:5070 -v /home/user/.sensorr:/app/sensorr/config -v /home/user/downloads:/app/sensorr/blackhole --name=\"sensorr\" thcolin/sensorr\n```\n\n_Tips_: Docker image is based on `alpine`, so you can add `TZ` env variable with `-e TZ=Europe/Paris`\n\n## üéö Configure\n* Edit default configuration at `http://localhost:5070/settings` (or `config/config.json`)\n\n## ‚è∞ Jobs\nSome necessary cron jobs will be launched in background every day:\n* _16:03_ `sensorr:purge`: Clean oldest log sessions (if directory space exceeds configured value)\n* _17:00_ `sensorr:record`: Record wished movies from collection with best release\n* _01:03_ `sensorr:schedule`: Schedule calendar with recents movies from stalked stars (+/- 2 years from today)\n* _03:03_ `sensorr:pairwise`: Pairwise Plex instance with Sensorr instance (if configured)\n* _05:03_ `sensorr:hydrate`: Hydrate -or refresh- collected movies and stalked stars data\n\n# üó∫Ô∏è Roadmap\n* Fix `Home` rows issues\n  * `Upcoming` / `Records` empty\n* Display other `Person` behind each `Movie` on `Details` page (`:hover` only)\n  * Load every followed stars from database on component mount\n* Feature `Policies`\n  * Add \"groups\" `Policy` with \"default\" === current (groups like `default` or `blockbuster` for example)\n    * Add configurable `avoid` terms on `Movie` (like `/movie/515195` which got a `0.73` similarity score with `/movie/582607`)\n    * Add configurable `prefer` terms on `Movie` (like `/movie/447404` I want in `FRENCH` and not `VOSTFR`)\n  * Add `size` property on `Settings/blocks/Policy` (how to handle it ? `min/max` ?)\n  * Improve `Documents.*.Filters`\n    * `policies` - `multiple`\n  * `Movie`\n    * Add `policies`\n      * `Checkbox` displayed as grid or column\n        * After `Row` ? - Bad UX, far away from `state`\n      * Create `policy` option (will copy/paste `default`)\n      * Edit `policy` link\n  * Add `List` page\n    * Grouped movies by \"policy\"\n    * Same layout as `Home` page\n* Feature `Review` (fix manual)\n  * Summary command result\n    * `record`:\n      ```\n        From ${wished} wished üçø movies, ${found} where recorded üìº to ${sensorr.config.blackhole} !\n          * ${movie.title} (${movie.year}) with release ${release.generated}\n        ${filtered} were filtered üö´ according to your policies\n          * ${movie.title} (${movie.year})\n            * ${release} (${reason})\n        But ${missing} still missing üì≠ (with no releases found)\n          * ${movie.title} (${movie.year}) \n        You should look at these ${error} errors üö®\n          * ${movie.title} (${movie.year}) : ${err}\n      ```\n  * Refactor `Logs`\n    * Left panel with `session` list with summary\n    * `Records`\n      * Summary\n        * üçø Wished\n        * üìº Recorded\n        * üö´ Filtered (reviewable)\n        * üì≠ Missing (reviewable)\n        * üö® Error (reviewable)\n      * Review\n        * Review each `record`, one by one, autoscroll on validation\n      * Record\n        * Allow to post an `issue` on `thcolin/oleoo`\n          * With data : { movie, records: records.map(record => record.meta ) }\n        * Allow to search for `releases` manualy\n          * Allow to search custom titles - like `The.92nd.Annual.Academy.Awards.2020.FRENCH.1080p.HDTV.H264-SH0W` - out of `releases` scope\n        * Allow to **ban** `releases` (like a `release` with hardcoded `subtitles` downloaded that i don't want)\n    * `Purge`\n    * `Pairwise`\n    * `Hydrate`\n* Feature `performance`\n  * Rename `XZNAB` to `XYZNAB`\n  * On `Person.State` `unfollow`, delete `calendar` entities with only `this` as followed credits\n  * Look at [`shipjs`](https://github.com/algolia/shipjs)\n  * `oleoo`\n    * Refactor algorithm, split `title` and `metadata` with `year|language|resolution|source` (`[0]`/`[1]`)\n  * `Server`\n    * Look at [`WatermelonDB`](https://github.com/Nozbe/WatermelonDB)\n      * Or only use **remote** `PouchDB` server with `rxdb`\n    * Fix RAM usage with `sessions` in `io`\n  * `CLI`\n    * Use [`cli-step`](https://github.com/poppinss/cli-step)\n    * When `stalk` star, `atomicUpsert` it\n    * Fix `record` command, filter movies with release date < +3 months (useless to search for movies still in production - make configurable)\n    * Compile binary (reduce Docker image size by removing useless dependecies)\n  * Responsive design / mobile UI-UX\n    * Take `screenshots` in `small`, `medium` and `large` breakpoints\n* Feature `Config`\n  * Refactor `config` to `settings` using [mozilla/node-convict](https://github.com/mozilla/node-convict)\n  * Refactor with [nrwl/nx](https://github.com/nrwl/nx)\n  * Look at `Prisma` for database\n* Feature `1.0.0`\n  * üéâ\n  * Fix `docz`\n  * Improve `README`\n* Feature `Notifications`\n  * Notify `records` summary (email, sms, etc...)\n* Feature `UI/UX sugar`\n  * Translate (`fr`, `en`)\n  * `Discover`\n    * Add `status` in `controls` - how ?\n    * Add `Random` button\n  * `Home`\n    * Add `Head` `Movie` ? (see [inspiration](https://dribbble.com/shots/2813716-BookMyShow-Movies-Concept))\n      * Add \"pre-configured\" `List` like `Oscars` ?\n      * Weekly movies selection (?)\n        * Allow user to send PR with own movies selection\n      * Make sensorr a social network (?)\n        * Look at `Mastodon` example and `ActivityPub` spec\n        * Make it private by default, if public will only show non-user related informations (home, discover, calendar (?), following (?))\n        * Multi user (?)\n  * `Settings`\n    * `Database`\n      * Allow to `clean` browser `sensorr-*` databases (`doctor`)\n  * `Grid`\n    * Select/Deselect all\n    * Actions on selection\n  * `Loading` page waiting sync of `db` with progress ?\n    * Allow to `clean` database if waiting too much\n  * Dark mode (`theme-ui`)\n* Feature `Custom Home`\n  * `Home`\n    * Customize\n      * Pinned sortable `Trending|Discover` `Rows`\n        * `type=[Popular|Top|Calendar|Trending|Discover]`\n        * `uri={...}`\n        * `params={...}`\n      * Save from `Discover` \"current\" params\n* Feature `Doctor`\n  * Replace `Plex` releases by better if available, like `CouchPotato`\n    * `Plex` manage all `medias`, so we can get `release` (`source`, `language`, `resolution`, ...) and compute score\n* Feature `Onboarding`\n  * Add `Onboarding` page\n* Add demo on a server\n* Feature `Browser Plugin`\n  * `IMDB`, `TMDB`, `SensCritique` or `AlloCin√©` browser plugin \"bookmark\" (update state of current movie website tab on `Sensorr` instance)\n* Feature `import/export`\n  * Synchronize with `trakt.tv`\n* Feature `Mobile` app\n  * Connect to server with QR code\n  * Streaming from `Releases` (how to know which file read ? - ask user)\n\n# üé® Inspiration\n* CLI\n  * [minimist](https://github.com/substack/minimist)\n  * [Inquirer.js](https://github.com/SBoudrias/Inquirer.js)\n  * [commander.js](https://github.com/tj/commander.js)\n  * [oclif](https://github.com/oclif/oclif)\n  * [ink](https://github.com/vadimdemedes/ink)\n\n# üëã Alternatives\n* [CouchPotato](https://github.com/CouchPotato/CouchPotatoServer)\n* [Radarr](https://github.com/Radarr/Radarr)\n* [Watcher3](https://github.com/nosmokingbandit/Watcher3)\n",
  "permissions": {
    "read": true,
    "write": false,
    "admin": false
  },
  "media_types": [
    "application/vnd.docker.container.image.v1+json"
  ],
  "content_types": [
    "image"
  ]
}