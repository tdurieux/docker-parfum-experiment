{"startTime":"2023-01-22T20:02:49.470Z","endTime":1674417775240,"repository":"evennia/evennia","organization":"docker-parfum","dockerfilePath":"Dockerfile","dockerfile_sha":"cac23de5896d0d6e8db09973f9dc3f1199616246","dockerfile":"#####\n# Base docker image for running Evennia-based games in a container.\n#\n# Install:\n#   install `docker` (https://docker.com)\n#\n# Usage:\n#    cd to a folder where you want your game data to be (or where it already is).\n#\n#        docker run -it --rm -p 4000:4000 -p 4001:4001 -p 4002:4002 -v $PWD:/usr/src/game evennia/evennia\n#\n#    (If your OS does not support $PWD, replace it with the full path to your current\n#    folder).\n#\n#    You will end up in a shell where the `evennia` command is available. From here you\n#    can initialize and/or run the game normally. Use Ctrl-D to exit the evennia docker container.\n#    For more info see: https://github.com/evennia/evennia/wiki/Getting-Started#quick-start\n#\n#    You can also start evennia directly by passing arguments to the folder:\n#\n#        docker run -it --rm -p 4000:4000 -p 4001:4001 -p 4002:4002 -v $PWD:/usr/src/game evennia/evennia evennia start -l\n#\n#    This will start Evennia running as the core process of the container. Note that you *must* use -l\n#    or one of the foreground modes (like evennia ipstart), since otherwise the container will immediately\n#    die because of having no foreground process.\n#\n# The evennia/evennia base image is found on DockerHub and can also be used\n# as a base for creating your own custom containerized Evennia game. For more\n# info, see https://evennia.com/docs/latest/Setup/Installation-Docker\n#\nFROM python:3.11-alpine\n\nLABEL maintainer=\"https://www.evennia.com\"\n\n# install compilation environment\nRUN apk update && apk add bash gcc jpeg-dev musl-dev procps \\\nlibffi-dev openssl-dev zlib-dev gettext \\\ng++ gfortran python3-dev cmake openblas-dev\n\n# add the files required for pip installation\nCOPY ./pyproject.toml /usr/src/evennia/\nCOPY ./setup.py /usr/src/evennia/\nCOPY ./bin /usr/src/evennia/bin/\n\n# install dependencies\nRUN pip install --upgrade pip && \\\n    pip install cryptography pyasn1 service_identity && \\\n    pip install -e /usr/src/evennia --trusted-host pypi.python.org && \\\n    pip install evennia[extra]\n\n# add the project source; this should always be done after all\n# expensive operations have completed to avoid prematurely\n# invalidating the build cache.\nCOPY . /usr/src/evennia\n\n# add the game source when rebuilding a new docker image from inside\n# a game dir\nONBUILD COPY --chown=evennia . /usr/src/game\n\n# make the game source hierarchy persistent with a named volume.\n# mount on-disk game location here when using the container\n# to just get an evennia environment.\nVOLUME /usr/src/game\n\n# set the working directory\nWORKDIR /usr/src/game\n\n# set bash prompt and pythonpath to evennia lib\nENV PS1 \"evennia|docker \\w $ \" \nENV PYTHONPATH /usr/src/evennia\n\n# create and switch to a non-root user for runtime security\n# -D - do not set a password\n# -H - do not create a home directory\n# -s /bin/false - set login shell to /bin/false\n# RUN adduser -D -H -s /bin/false evennia\n# USER evennia\n\n# startup a shell when we start the container\nENTRYPOINT [\"/usr/src/evennia/bin/unix/evennia-docker-start.sh\"]\n\n# expose the telnet, webserver and websocket client ports\nEXPOSE 4000 4001 4002\n"}