{"startTime":"2023-01-11T10:56:26.717Z","endTime":1673434612457,"repository":"sqlfluff/sqlfluff","organization":"docker-parfum","dockerfilePath":"Dockerfile","dockerfile_sha":"709cd734b8dc97f8e5f193c567570488aa81f961","dockerfile":"FROM python:3.9-slim-bullseye\n\n# Set separate working directory for easier debugging.\nWORKDIR /app\n\n# Create virtual environment.\nENV VIRTUAL_ENV /app/.venv\nRUN python -m venv $VIRTUAL_ENV\nENV PATH $VIRTUAL_ENV/bin:$PATH\nRUN pip install --upgrade pip setuptools wheel\n\n# Install requirements separately\n# to take advantage of layer caching.\n# N.B. we extract the requirements from setup.cfg\nCOPY setup.cfg .\nRUN python -c \"import configparser; c = configparser.ConfigParser(); c.read('setup.cfg'); print(c['options']['install_requires'])\" > requirements.txt\nRUN pip install --upgrade -r requirements.txt\n\n# Copy minimal set of SQLFluff package files.\nCOPY MANIFEST.in .\nCOPY README.md .\nCOPY setup.py .\nCOPY src ./src\n\n# Install sqlfluff package.\nRUN pip install --no-dependencies .\n\n# Switch to non-root user.\nUSER 5000\n\n# Switch to new working directory as default bind mount location.\n# User can bind mount to /sql and not have to specify the full file path in the command:\n# i.e. docker run --rm -it -v $PWD:/sql sqlfluff/sqlfluff:latest lint test.sql\nWORKDIR /sql\n\n# Set SQLFluff command as entry point for image.\nENTRYPOINT [\"sqlfluff\"]\nCMD [\"--help\"]\n"}