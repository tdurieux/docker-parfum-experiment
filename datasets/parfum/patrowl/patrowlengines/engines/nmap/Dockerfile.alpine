FROM alpine:3.13.5

MAINTAINER Patrowl.io "getsupport@patrowl.io"
LABEL Name="Nmap\ \(Patrowl engine\)" Version="1.0.0"

ARG nmap_ver=7.91

# Set the working directory
RUN mkdir -p /opt/patrowl-engines/nmap
RUN mkdir -p /opt/patrowl-engines/nmap/results
RUN mkdir -p /opt/patrowl-engines/nmap/logs
WORKDIR /opt/patrowl-engines/nmap

# Copy the current directory contents into the container at /
COPY __init__.py .
COPY engine-nmap.py .
COPY nmap.json.sample nmap.json
COPY requirements.txt .
COPY README.md .
COPY libs/ libs/

# Install any needed packages specified in requirements.txt
RUN apk add --update \
    linux-headers \
    sudo \
    python3 \
    python3-dev \
    py3-pip \
    build-base \
  && adduser -u 1000 -G wheel -D alpine \
  && rm -rf /var/cache/apk/*


# Install dependencies
RUN apk add --update --no-cache \
            ca-certificates \
            libpcap \
            libgcc libstdc++ \
            libressl3.1-libcrypto libressl3.1-libssl \
 && update-ca-certificates \
 && rm -rf /var/cache/apk/*

# Compile and install Nmap from sources
RUN apk add --update --no-cache --virtual .build-deps \
        libpcap-dev libressl-dev lua-dev linux-headers \
        autoconf g++ libtool make \
        curl \

 && curl -fL -o /tmp/nmap.tar.bz2 \
         https://nmap.org/dist/nmap-${nmap_ver}.tar.bz2 \
 && tar -xjf /tmp/nmap.tar.bz2 -C /tmp \

 && cd /tmp/nmap* \
 && ./configure \
        --prefix=/usr \
        --sysconfdir=/etc \
        --mandir=/usr/share/man \
        --infodir=/usr/share/info \
        --without-zenmap \
#        --without-nmap-update \
        --with-openssl=/usr/lib \
        --with-liblua=/usr/include \
        --with-libpcap=included \
 && make \
 && make install \

 && apk del .build-deps \
 && rm -rf /var/cache/apk/* \
      /tmp/nmap*

# nmap must be started with root
RUN echo "%wheel ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
RUN pip3 install --upgrade pip
RUN pip3 install --trusted-host pypi.python.org -r requirements.txt

# TCP port exposed by the container (NAT)
EXPOSE 5001
USER alpine

# Run app when the container launches
CMD ["sudo", "gunicorn", "engine-nmap:app", "-b", "0.0.0.0:5001", "--access-logfile", "-"]
