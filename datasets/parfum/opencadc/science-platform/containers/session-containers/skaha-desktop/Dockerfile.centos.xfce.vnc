# This Dockerfile is used to build an headles vnc image based on Centos

FROM centos:7

LABEL io.k8s.description="Headless VNC Container with Xfce window manager, firefox and chromium" \
      io.k8s.display-name="Headless VNC Container based on Centos" \
      io.openshift.expose-services="6901:http,5901:xvnc" \
      io.openshift.tags="vnc, centos, xfce" \
      io.openshift.non-scalable=true

# BM: Install fonts so remote displays work
RUN yum update -y && yum install -y xorg-x11-fonts* gedit rsync gimp gimp-gmic

## Connection ports for controlling the UI:
# VNC port:5901
# noVNC webport, connect via http://IP:6901/?password=vncpassword

ENV DISPLAY=:1 \
    VNC_PORT=5901 \
    NO_VNC_PORT=6901
EXPOSE $VNC_PORT $NO_VNC_PORT

### Envrionment config
ENV TERM=xterm \
    STARTUPDIR=/dockerstartup \
    INST_SCRIPTS=/headless/install \
    NO_VNC_HOME=/headless/noVNC \
    VNC_COL_DEPTH=24 \
    VNC_RESOLUTION=1920x1200 \
    VNC_PW=changeit \
    VNC_VIEW_ONLY=false \
    XDG_CONFIG_HOME=/headless
WORKDIR /headless

### Add all install scripts for further steps
ADD ./src/common/install/ $INST_SCRIPTS/
COPY ./src/centos/install/ $INST_SCRIPTS/
RUN find $INST_SCRIPTS -name '*.sh' -exec chmod a+x {} +

### Install some common tools
RUN $INST_SCRIPTS/tools.sh
ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'

### Install xvnc-server & noVNC - HTML5 based VNC viewer
RUN $INST_SCRIPTS/tigervnc.sh
RUN $INST_SCRIPTS/no_vnc.sh

## BM: Add custom vnc shell and css
ADD ./conf/vnc_custom.html $NO_VNC_HOME/
ADD ./conf/ui_custom.js $NO_VNC_HOME/app/
ADD ./conf/base_custom.css $NO_VNC_HOME/app/styles/
ADD ./conf/arcade-logo.png $NO_VNC_HOME/app/images/
ADD ./conf/canfar-logo.png $NO_VNC_HOME/app/images/
ADD ./conf/canfar-icon.png $NO_VNC_HOME/app/images/icons/

### Install firefox and chrome browser
RUN $INST_SCRIPTS/firefox.sh
#RUN $INST_SCRIPTS/chrome.sh

### Install xfce UI
RUN $INST_SCRIPTS/xfce_ui.sh
RUN mkdir -p $XDG_CONFIG_HOME/.config
ADD ./src/common/xfce/.config/user-dirs.dirs $XDG_CONFIG_HOME/.config/
ADD ./src/common/xfce/.config/ $XDG_CONFIG_HOME/
ADD ./src/common/xfce/wm_startup.sh $XDG_CONFIG_HOME/
ADD ./src/common/xfce/Desktop $XDG_CONFIG_HOME/
RUN mkdir -p $XDG_CONFIG_HOME/Desktop
RUN rm /etc/xdg/Thunar/uca.xml

### configure startup
RUN $INST_SCRIPTS/libnss_wrapper.sh
ADD ./src/common/scripts $STARTUPDIR
RUN $INST_SCRIPTS/set_user_permission.sh $STARTUPDIR /headless

# CANFAR Specifics Below
COPY conf/xfce-applications.menu /etc/xdg/menus/xfce-applications.menu
COPY conf/xfce-applications.menu /etc/xdg/menus/applications.menu
RUN chmod 777 /etc/xdg/menus/applications-merged
COPY conf/atacama.jpg /headless/atacama.jpg

# add curl with openssl (instead of nss)
WORKDIR /tmp
#RUN wget ftp://ftp.pbone.net/mirror/ftp5.gwdg.de/pub/opensuse/repositories/home:/Scott_Cantor/CentOS_7/x86_64/libcurl-openssl-7.43.0-1.1.x86_64.rpm
#RUN wget http://mirror.ihep.ac.cn/cern/slc6X/i386/yum/extras/libcurl-openssl-7.43.0-1.1.x86_64.rpm
RUN wget http://mirror.ihep.ac.cn/cern/centos/7.0/cern/x86_64/Packages/libcurl-openssl-7.33.0-1.1.el7.cern.x86_64.rpm
#RUN wget ftp://ftp.pbone.net/mirror/ftp5.gwdg.de/pub/opensuse/repositories/home:/Scott_Cantor/CentOS_7/x86_64/curl-openssl-7.43.0-1.1.x86_64.rpm
RUN wget http://mirror.ihep.ac.cn/cern/centos/7.0/cern/x86_64/Packages/curl-openssl-7.33.0-1.1.el7.cern.x86_64.rpm
#RUN yum install -y libcurl-openssl-7.43.0-1.1.x86_64.rpm
RUN yum install -y libcurl-openssl-7.33.0-1.1.el7.cern.x86_64.rpm
#RUN yum install -y curl-openssl-7.43.0-1.1.x86_64.rpm
RUN yum install -y curl-openssl-7.33.0-1.1.el7.cern.x86_64.rpm

RUN yum install -y sssd-client acl
RUN yum install -y mailcap

ENV LD_LIBRARY_PATH /opt/shibboleth/lib64

# create the guest account
RUN groupadd -g 30001 guest
RUN useradd -m -g guest -u 30001 guest && \
    mkdir -p /home/guest/.ssl && \
    chown -R guest:guest /home/guest/.ssl && \
    ln -s /home/guest/.ssl /headless/.ssl

# Add scripts that launch sofware containers
ADD software-scripts/*.sh /usr/local/bin/

# Add desktop icon files
RUN mkdir -p /headless/.icons
COPY software-scripts/icons/* /headless/.icons/

# Add desktop links to those scripts
COPY software-scripts/*.desktop /usr/share/applications/
RUN chmod 777 /usr/share/applications/terminal.desktop

# Add a subset of software links to the desktop
COPY software-scripts/arcade-feedback.desktop $XDG_CONFIG_HOME/Desktop/arcade-feedback.desktop
COPY software-scripts/firefox.desktop $XDG_CONFIG_HOME/Desktop/firefox.desktop
COPY software-scripts/gedit.desktop $XDG_CONFIG_HOME/Desktop/gedit.desktop
COPY software-scripts/kill-session.desktop $XDG_CONFIG_HOME/Desktop/kill-session.desktop
COPY software-scripts/terminal.desktop $XDG_CONFIG_HOME/Desktop/terminal.desktop
RUN chmod 777 $XDG_CONFIG_HOME/Desktop/terminal.desktop
RUN chown guest $XDG_CONFIG_HOME/Desktop/*.desktop

# Create firefox profile and space
RUN mkdir -p /headless/mozilla/skaha
RUN firefox --headless -CreateProfile "skaha /headless/mozilla/skaha"
RUN chmod -R 777 /headless/mozilla/skaha
ENV MOZ_FORCE_DISABLE_E10S 1

ENTRYPOINT ["/dockerstartup/vnc_startup.sh"]
CMD ["--wait"]
