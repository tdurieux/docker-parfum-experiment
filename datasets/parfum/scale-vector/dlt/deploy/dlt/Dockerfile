FROM alpine:3.15

# Metadata
LABEL org.label-schema.vendor="ScaleVector" \
    org.label-schema.url="https://scalevector.ai" \
    org.label-schema.name="DLT" \
    org.label-schema.description="DLT is an open-source python-native scalable data loading framework that does not require any devops efforts to run."

# prepare dirs to install autopoieses
RUN mkdir -p /tmp/pydlt

WORKDIR /tmp/pydlt

# generated by make recreate-compiled-deps to install packages requiring compiler
# recreate only when you have new deps requiring compilation - step below is very slow
ADD compiled_requirements.txt .

# install alpine deps
RUN apk update &&\
    apk add --no-cache python3 ca-certificates curl postgresql &&\
    apk add --no-cache --virtual build-deps build-base automake autoconf libtool python3-dev postgresql-dev libffi-dev linux-headers gcc musl-dev &&\
    ln -s /usr/bin/python3 /usr/bin/python &&\
    curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python3 get-pip.py &&\
    rm get-pip.py &&\
    pip3 install --upgrade setuptools wheel &&\
    rm -r /usr/lib/python*/ensurepip &&\
    pip3 install -r compiled_requirements.txt &&\
    apk del --purge build-deps
    #rm -r /root/.cache

# add build labels and envs
ARG COMMIT_SHA=""
ARG IMAGE_VERSION=""
LABEL commit_sha = ${COMMIT_SHA}
LABEL version=${IMAGE_VERSION}
ENV COMMIT_SHA=${COMMIT_SHA}
ENV IMAGE_VERSION=${IMAGE_VERSION}

# install exactly the same version of the library we used to build
COPY dist/python-dlt-${IMAGE_VERSION}.tar.gz .
RUN pip3 install /tmp/pydlt/python-dlt-${IMAGE_VERSION}.tar.gz[gcp,redshift]

WORKDIR /
RUN rm -r /tmp/pydlt
