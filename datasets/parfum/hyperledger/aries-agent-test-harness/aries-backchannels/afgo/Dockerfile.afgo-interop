#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

ARG GO_VER=1.16
ARG ALPINE_VER=3.12

################
# build afgo

FROM golang:${GO_VER}-alpine${ALPINE_VER} as go-build

RUN apk add --no-cache make git bash
ENV EXECUTABLES go git

RUN mkdir -p /go/src/github.com/hyperledger
WORKDIR /go/src/github.com/hyperledger

ARG REPO_URL
RUN git clone ${REPO_URL}
WORKDIR /go/src/github.com/hyperledger/aries-framework-go
ARG REPO_COMMIT
RUN git fetch origin && git checkout ${REPO_COMMIT}

ARG GO_TAGS=
ARG GOPROXY=
RUN GO_TAGS=${GO_TAGS} GOPROXY=${GOPROXY} make agent-rest-acapy-interop

################
# python base image

FROM alpine:${ALPINE_VER} as python-base

ENV PYTHONUNBUFFERED=1
RUN apk add --update --no-cache python3
RUN ln -sf python3 /usr/bin/python

RUN mkdir -p /root/.local/bin
ENV PATH=/root/.local/bin:$PATH

RUN mkdir -p /agent-home
WORKDIR /agent-home

################
# build python deps

FROM python-base as python-build

RUN apk add --update --no-cache python3-dev git gcc make libtool musl-dev bash

RUN python3 -m ensurepip
RUN pip3 install --no-cache --upgrade pip setuptools

COPY python/requirements.txt .
RUN pip3 install --user -r requirements.txt

################
# build final image

FROM python-base as run-stage

ENV RUNMODE=docker PYTHONPATH=/agent-home
RUN mkdir -p ./bin

# Copy the necessary files from the AATH Backchannel sub-folders
COPY python python
COPY afgo afgo
COPY data ./

# use python dependencies built in build stage
COPY --from=python-build /root/.local /root/.local

# The Backchannel is looking for aries-agent-rest in ./bin, copy it from the go-build stage
COPY --from=go-build /go/src/github.com/hyperledger/aries-framework-go/build/bin/aries-agent-rest ./bin/aries-agent-rest

ENTRYPOINT ["python", "afgo/afgo_backchannel.py"]
