# Copyright 2019 Cargill Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

FROM ubuntu:bionic

# Install base dependencies
ENV VERSION=AUTO_STRICT

RUN apt-get update \
 && apt-get install -y \
 curl \
 gcc \
 libssl-dev \
 libzmq3-dev \
 pkg-config \
 unzip

ENV PATH=$PATH:/protoc3/bin:/root/.cargo/bin

# Install Rust
RUN curl https://sh.rustup.rs -sSf > /usr/bin/rustup-init \
 && chmod +x /usr/bin/rustup-init \
 && rustup-init -y

RUN rustup update \
 && rustup target add wasm32-unknown-unknown

# Install protoc
RUN curl -OLsS https://github.com/google/protobuf/releases/download/v3.7.1/protoc-3.7.1-linux-x86_64.zip \
 && unzip -o protoc-3.7.1-linux-x86_64.zip -d /usr/local \
 && rm protoc-3.7.1-linux-x86_64.zip

# Create empty cargo project for sdk
WORKDIR /build/sdks
RUN USER=root cargo new --lib rust

# Copy over Cargo.toml, build.rs and protos
COPY sdks/rust/Cargo.toml /build/sdks/rust/Cargo.toml
COPY sdks/rust/build.rs /build/sdks/rust/build.rs
COPY sdks/rust/protos /build/sdks/rust/protos

# Do a release build to cache dependencies
WORKDIR /build/sdks/rust
RUN cargo build --target wasm32-unknown-unknown --release

WORKDIR /build

# Create empty cargo project for intkey multiply
RUN USER=root cargo new --bin example/intkey_multiply/processor

# Copy over Cargo.toml file
COPY example/intkey_multiply/processor/Cargo.toml \
     /build/example/intkey_multiply/processor/Cargo.toml

# Do a release build to cache dependencies
WORKDIR /build/example/intkey_multiply/processor
RUN cargo build --target wasm32-unknown-unknown --release

# Remove the auto-generated .rs files and the built files
RUN rm src/*.rs
RUN rm target/wasm32-unknown-unknown/release/intkey* \
    target/wasm32-unknown-unknown/release/deps/intkey*

# Copy over source files
COPY sdks/rust/src /build/sdks/rust/src
COPY example/intkey_multiply/processor/src \
     /build/example/intkey_multiply/processor/src

# Build the contract
ARG REPO_VERSION
RUN sed -i -e s/version.*$/version\ =\ \"${REPO_VERSION}\"/ Cargo.toml
RUN cargo build --target wasm32-unknown-unknown --release

# Copy the packaging directory
COPY example/intkey_multiply/processor/packaging/scar/* \
     /build/example/intkey_multiply/processor/packaging/scar/

# Copy the contract to the packaging directory
RUN cp target/wasm32-unknown-unknown/release/intkey-multiply.wasm \
    packaging/scar

WORKDIR /build/example/intkey_multiply/processor/packaging/scar

# Create .scar file
RUN tar -jcvf /tmp/intkey-multiply_${REPO_VERSION}.scar .
