FROM ubuntu:18.04

# Add Maintainer Info
LABEL maintainer="Jean-Marie Verdun <jean-marie.verdun@hpe.com>"

# Set the Current Working Directory inside the container
WORKDIR /app

# Copy the source from the current directory to the Working Directory inside the container
COPY . .

# lets build
RUN echo $http_proxy
RUN cat /etc/resolv.conf 
RUN cat /etc/apt/apt.conf.d/proxy.conf
ENV GOPATH=$GOPATH:/go/src/base
RUN apt-get --allow-unauthenticated update --allow-insecure-repositories
RUN apt-get update && apt install -qq -y locales
RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
    locale-gen
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
RUN apt install -y apt-utils
RUN apt-get update && apt-get install --no-install-recommends -y ca-certificates && rm -rf /var/lib/apt/lists/*
RUN cat /etc/apt/sources.list
RUN DEBIAN_FRONTEND=noninteractive apt-get update && DEBIAN_FRONTEND=noninteractive  apt install -qq -y build-essential libssl-dev libcurl4-gnutls-dev libexpat1-dev gettext unzip wget snapd squashfuse fuse snap-confine sudo python2.7-dev chrpath cpio diffstat gawk texinfo python3.8 python3.8-venv python3.8-distutils python3.8-dev python3.8-gdbm python3.8-tk python3.8-lib2to3 idle-python3.8 flex bison libncurses-dev vim openssl libssl-dev dkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf bc sudo
RUN apt-get -y install git
RUN wget https://dl.google.com/go/go1.16.linux-amd64.tar.gz
RUN gunzip go1.16.linux-amd64.tar.gz
RUN tar xf go1.16.linux-amd64.tar
RUN mv  go /usr/local
RUN rm -Rf go*
ENV PATH /usr/local/go/bin:$PATH
RUN mkdir /app/go
ENV GOPATH=/app/go
RUN echo $GOPATH
RUN go get github.com/linuxboot/fiano/pkg/utk
RUN git clone https://github.com/linuxboot/fiano
RUN go get github.com/ulikunitz/xz/lzma
WORKDIR fiano/cmds/utk
RUN go build utk.go
RUN cp utk /usr/bin
RUN useradd -ms /bin/bash linuxboot
RUN usermod -aG sudo linuxboot
RUN echo "linuxboot ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
USER linuxboot
WORKDIR /home/linuxboot
RUN cp /app/build_linuxboot /home/linuxboot/
RUN chmod -Rf 777 /home/linuxboot/build_linuxboot

STOPSIGNAL SIGRTMIN+3

# Expose port 8080 to the outside world
EXPOSE 443

# Command to run the executable
# CMD /app/start_container
CMD [ "/home/linuxboot/build_linuxboot" ]
