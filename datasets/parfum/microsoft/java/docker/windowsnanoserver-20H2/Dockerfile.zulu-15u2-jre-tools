
# This Zulu OpenJDK Dockerfile and corresponding Docker image are
# to be used solely with Java applications or Java application components
# that are being developed for deployment on Microsoft Azure or Azure Stack,
# and are not intended to be used for any other purpose.

FROM mcr.microsoft.com/windows/nanoserver:20H2
MAINTAINER Zulu Enterprise Container Images <azul-zulu-images@microsoft.com>

ARG PACKAGE_DIR=zulu-15/15.0.2
ARG JDK_DIR=zulu-15-azure-jdk_15.29.15-15.0.2-win_x64
ARG JDK_PACKAGE=$JDK_DIR.zip
ARG JRE_DIR=zulu-15-azure-jre_15.29.15-15.0.2-win_x64
ARG JRE_PACKAGE=$JRE_DIR.zip
ARG JRE_TOOLS_DIR=C:\zulu-15-azure-jre-tools_15.29.15-15.0.2-win_x64

USER ContainerAdministrator
RUN curl https://repos.azul.com/azure-only/zulu/packages/%PACKAGE_DIR%/%JDK_PACKAGE% -o %JDK_PACKAGE% && \
    tar -xf %JDK_PACKAGE% && \
    del %JDK_PACKAGE%

RUN curl https://repos.azul.com/azure-only/zulu/packages/%PACKAGE_DIR%/%JRE_PACKAGE% -o %JRE_PACKAGE% && \
    tar -xf %JRE_PACKAGE% && \
    del %JRE_PACKAGE%

RUN cmd /V:on /C "%JDK_DIR%\bin\jimage list %JRE_DIR%\lib\modules | findstr "Module: " > modules.out && \
     @echo off && \
     set JRE_MODULES= && \
     (for /f "tokens=2" %a in (modules.out) do set JRE_MODULES=!JRE_MODULES!%a,) && \
     set JRE_MODULES=!JRE_MODULES!jdk.jcmd && \
     echo !JRE_MODULES! && \
     %JDK_DIR%\bin\jlink --no-header-files --strip-debug --module-path %JDK_DIR%\jmods --add-modules !JRE_MODULES! --output %JRE_TOOLS_DIR% && \
     del modules.out && \
     rmdir /S /Q %JDK_DIR% && \
     rmdir /S /Q %JRE_DIR%"

RUN setx /m JAVA_HOME %JRE_TOOLS_DIR% && \
    setx /m PATH "%PATH%;%JAVA_HOME%\bin"

