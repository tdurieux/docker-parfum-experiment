
# This Zulu OpenJDK Dockerfile and corresponding Docker image are
# to be used solely with Java applications or Java application components
# that are being developed for deployment on Microsoft Azure or Azure Stack,
# and are not intended to be used for any other purpose.

FROM mcr.microsoft.com/java/jdk:11u2-zulu-alpine AS stage1
MAINTAINER Zulu Enterprise Container Images <azul-zulu-images@microsoft.com>

RUN ZULU_PACK=zulu-11-azure-jre-headless_11.29.3-11.0.2-linux_musl_x64.tar.gz && \
    INSTALL_DIR=/usr/lib/jvm && \
    wget -q http://repos.azul.com/azure-only/zulu/packages/zulu-11/11.0.2/${ZULU_PACK} && \
    mkdir -p ${INSTALL_DIR} && \
    tar -xf ./${ZULU_PACK} -C ${INSTALL_DIR} && rm -f ${ZULU_PACK} && \
    JDK_DIR=${INSTALL_DIR}/zulu-11-azure-jdk_11.29.3-11.0.2-linux_musl_x64 && \
    JRE_DIR=${INSTALL_DIR}/zulu-11-azure-jre-headless_11.29.3-11.0.2-linux_musl_x64 && \
    JRE_TOOLS_DIR=${INSTALL_DIR}/zulu-11-azure-jre-headless-tools_11.29.3-11.0.2-linux_musl_x64 && \
    JRE_MODULES=$(jimage list ${JRE_DIR}/lib/modules | grep "Module: " | sed -e "s/^Module: //" | tr '\n' ',') && \
    JRE_MODULES=${JRE_MODULES}jdk.jcmd, && \
    jlink --release-info ${JDK_DIR}/release --module-path ${JDK_DIR}/jmods --no-header-files --strip-debug --add-modules ${JRE_MODULES} --output ${JRE_TOOLS_DIR}

FROM alpine

ARG JRE_TOOLS_DIR=/usr/lib/jvm/zulu-11-azure-jre-headless-tools_11.29.3-11.0.2-linux_musl_x64
COPY --from=stage1 ${JRE_TOOLS_DIR} ${JRE_TOOLS_DIR}

RUN cd /usr/bin && find ${JRE_TOOLS_DIR}/bin -type f -perm -a=x -exec ln -s {} . \;

#    MAN_DIR=/usr/share/man/man1 && \
#    mkdir -p ${MAN_DIR} && \
#    cd ${MAN_DIR} && \
#    find ${JRE_TOOLS_DIR}/man/man1 -type f -name "*.1" -exec ln -s {} . \;

ENV JAVA_HOME=${JRE_TOOLS_DIR}
