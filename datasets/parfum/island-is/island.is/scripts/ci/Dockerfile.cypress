#
# This cypress image is very similar to https://hub.docker.com/r/cypress/included.
# Because it is based on debian buster it has many security vulnerabilities.
# That is why we need this custom dockerfile which uses ubuntu as its base
# instead of debian. The cypress docker image logic has been duplicated here and
# there are references above each FROM statement to the source.
#
ARG DOCKER_IMAGE_REGISTRY=public.ecr.aws

FROM $DOCKER_IMAGE_REGISTRY/docker/library/buildpack-deps:kinetic-curl as node-base

RUN apt-get update \
  && apt-get install -y nodejs npm \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*
RUN npm install -g n yarn
RUN n install 14.17.0

# https://github.com/cypress-io/cypress-docker-images/blob/master/base/14.19.0/Dockerfile
FROM node-base as cypress-base

RUN apt-get update && \
  apt-get install --no-install-recommends -y \
  libgtk2.0-0 \
  libgtk-3-0 \
  libnotify-dev \
  libgconf-2-4 \
  libgbm-dev \
  libnss3 \
  libxss1 \
  libasound2 \
  libxtst6 \
  xauth \
  xvfb \
  # install text editors
  vim-tiny \
  nano \
  # install emoji font
  fonts-noto-color-emoji \
  # install Chinese fonts
  # this list was copied from https://github.com/jim3ma/docker-leanote
  fonts-arphic-bkai00mp \
  fonts-arphic-bsmi00lp \
  fonts-arphic-gbsn00lp \
  fonts-arphic-gkai00mp \
  fonts-arphic-ukai \
  fonts-arphic-uming \
  ttf-wqy-zenhei \
  ttf-wqy-microhei \
  xfonts-wqy \
  # clean up
  && rm -rf /var/lib/apt/lists/* \
  && apt-get clean

RUN npm --version

RUN npm install -g yarn@latest --force
RUN yarn --version

# a few environment variables to make NPM installs easier
# good colors for most applications
ENV TERM xterm
# avoid million NPM install messages
ENV npm_config_loglevel warn
# allow installing when the main user is root
ENV npm_config_unsafe_perm true

# Node libraries
RUN node -p process.versions

# Show where Node loads required modules from
RUN node -p 'module.paths'

# versions of local tools
RUN echo  " node version:    $(node -v) \n" \
  "npm version:     $(npm -v) \n" \
  "yarn version:    $(yarn -v) \n" \
  "debian version:  $(cat /etc/debian_version) \n" \
  "user:            $(whoami) \n"

# https://github.com/cypress-io/cypress-docker-images/blob/master/browsers/node14.19.0-chrome100-ff99-edge/Dockerfile
FROM cypress-base as cypress-browser

USER root

RUN node --version

# Install dependencies
RUN apt-get update && \
  apt-get install -y \
  fonts-liberation \
  git \
  libcurl4 \
  libcurl3-gnutls \
  libcurl3-nss \
  xdg-utils \
  wget \
  curl \
  # firefox dependencies
  bzip2 \
  # add codecs needed for video playback in firefox
  # https://github.com/cypress-io/cypress-docker-images/issues/150
  mplayer \
  # edge dependencies
  gnupg \
  dirmngr \
  # clean up
  && rm -rf /var/lib/apt/lists/* \
  && apt-get clean

# install libappindicator3-1 - not included with Debian 11
RUN wget --no-verbose /usr/src/libappindicator3-1_0.4.92-7_amd64.deb "http://ftp.us.debian.org/debian/pool/main/liba/libappindicator/libappindicator3-1_0.4.92-7_amd64.deb" && \
  dpkg -i /usr/src/libappindicator3-1_0.4.92-7_amd64.deb ; \
  apt-get install -f -y && \
  rm -f /usr/src/libappindicator3-1_0.4.92-7_amd64.deb

# install Chrome browser
RUN wget --no-verbose -O /usr/src/google-chrome-stable_current_amd64.deb "http://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_100.0.4896.88-1_amd64.deb" && \
  dpkg -i /usr/src/google-chrome-stable_current_amd64.deb ; \
  apt-get install -f -y && \
  rm -f /usr/src/google-chrome-stable_current_amd64.deb

# "fake" dbus address to prevent errors
# https://github.com/SeleniumHQ/docker-selenium/issues/87
ENV DBUS_SESSION_BUS_ADDRESS=/dev/null

# versions of local tools
RUN echo  " node version:    $(node -v) \n" \
  "npm version:     $(npm -v) \n" \
  "yarn version:    $(yarn -v) \n" \
  "debian version:  $(cat /etc/debian_version) \n" \
  "Chrome version:  $(google-chrome --version) \n" \
  "git version:     $(git --version) \n" \
  "whoami:          $(whoami) \n"

# a few environment variables to make NPM installs easier
# good colors for most applications
ENV TERM=xterm
# avoid million NPM install messages
ENV npm_config_loglevel=warn
# allow installing when the main user is root
ENV npm_config_unsafe_perm=true

# https://github.com/cypress-io/cypress-docker-images/blob/master/included/9.7.0/Dockerfile
FROM cypress-browser as cypress-included

# avoid too many progress messages
# https://github.com/cypress-io/cypress/issues/1243
ENV CI=1 \
# disable shared memory X11 affecting Cypress v4 and Chrome
# https://github.com/cypress-io/cypress-docker-images/issues/270
  QT_X11_NO_MITSHM=1 \
  _X11_NO_MITSHM=1 \
  _MITSHM=0


FROM cypress-included as output-cypress

RUN apt-get update && apt-get install jq -y \
  # clean up
  && rm -rf /var/lib/apt/lists/* \
  && apt-get clean

RUN addgroup runners && adduser runner && adduser runner runners
RUN mkdir /out && chown runner /out
ENV CYPRESS_VIDEOS_FOLDER=/out/videos
ENV CYPRESS_SCREENSHOTS_FOLDER=/out/screenshots
ENV PATH=./node_modules/.bin:${PATH}
USER runner

WORKDIR /app

RUN npm install typescript cypress@10

ARG APP_HOME

ADD ${APP_HOME} .

ENTRYPOINT [ "/app/entrypoint.sh" ]
