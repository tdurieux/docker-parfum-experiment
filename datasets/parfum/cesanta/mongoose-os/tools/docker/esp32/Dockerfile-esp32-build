FROM ubuntu:jammy-20220531

RUN DEBIAN_FRONTEND=noninteractive apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y -q \
      apt-utils autoconf bison build-essential cmake flex gawk gdb-multiarch git gperf help2man \
      libexpat-dev libncurses5-dev libtool-bin \
      python3 python3-dev python3-git python3-pip python3-pyelftools python3-serial python3-six python3-yaml \
      python-is-python3 rsync software-properties-common sudo texinfo unzip wget xz-utils zip && \
    apt-get clean

RUN cd /tmp && \
    git clone https://github.com/rojer/fsync-stub && \
    cd /tmp/fsync-stub && ./install.sh && \
    rm -rf /tmp/fsync-stub

# ESP-IDF uses CMake and GDB is compiled with Python2.
RUN DEBIAN_FRONTEND=noninteractive apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y -q \
      python2 python2-dev && \
    apt-get clean

RUN useradd -d /opt/Espressif -m -s /bin/bash user && chown -R user /opt

ARG TARGETARCH
ARG TOOLCHAIN_URLS="https://github.com/espressif/crosstool-NG/releases/download/esp-2021r2-patch3/xtensa-esp32-elf-gcc8_4_0-esp-2021r2-patch3-linux-${TARGETARCH}.tar.gz https://github.com/espressif/crosstool-NG/releases/download/esp-2021r2-patch3/riscv32-esp-elf-gcc8_4_0-esp-2021r2-patch3-linux-${TARGETARCH}.tar.gz https://github.com/espressif/crosstool-NG/releases/download/esp-2021r2-patch3/xtensa-esp32s3-elf-gcc8_4_0-esp-2021r2-patch3-linux-${TARGETARCH}.tar.gz"
RUN cd /opt/Espressif && for u in $TOOLCHAIN_URLS; do wget -q $u && tar xf `basename $u` && rm `basename $u`; done
ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/Espressif/riscv32-esp-elf/bin:/opt/Espressif/xtensa-esp32-elf/bin:/opt/Espressif/xtensa-esp32s3-elf/bin
ADD ct_path.sh /etc/profile.d

ARG DOCKER_TAG
RUN sudo -u user git clone -j 8 --branch $DOCKER_TAG --depth 1 --recursive --shallow-submodules https://github.com/mongoose-os/esp-idf /opt/Espressif/esp-idf
RUN git config --global --add safe.directory /opt/Espressif/esp-idf
ENV IDF_PATH=/opt/Espressif/esp-idf

# Apply submodule patches.
RUN cd $IDF_PATH && ./patch_submodules.sh

RUN pip3 install --no-cache-dir -r /opt/Espressif/esp-idf/requirements.txt

# Pre-build configuration tools
RUN cd $IDF_PATH/tools/kconfig && make conf-idf

# TODO: add esp32s3 rom files
ADD rom.bin rom.elf esp32c3_rev3_rom.bin esp32c3_rev3_rom.elf /opt/Espressif/rom/

ARG TARGETARCH
ADD mgos_fw_meta.py $TARGETARCH/mklfs $TARGETARCH/mkspiffs $TARGETARCH/mkspiffs8 /usr/local/bin/
ADD serve_core/ /opt/serve_core/
RUN ln -s /opt/serve_core/serve_core.py /usr/local/bin/serve_core.py

ARG DOCKER_TAG
ENV MGOS_TARGET_GDB /opt/Espressif/xtensa-esp32-elf/bin/xtensa-esp32-elf-gdb
ENV MGOS_TARGET_GDB_ESP32S3 /opt/Espressif/xtensa-esp32s3-elf/bin/xtensa-esp32s3-elf-gdb
ENV MGOS_TARGET_GDB_ESP32C3 /opt/Espressif/riscv32-esp-elf/bin/riscv32-esp-elf-gdb
ENV MGOS_SDK_REVISION $DOCKER_TAG
ENV MGOS_SDK_BUILD_IMAGE docker.io/mgos/esp32-build:$DOCKER_TAG
