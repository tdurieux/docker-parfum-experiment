###########################################
###########################################
## Dockerfile to run MegaLinter ##
###########################################
###########################################

# @not-generated

#############################################################################################
## @generated by .automation/build.py using descriptor files, please do not update manually ##
#############################################################################################
#FROM__START

#FROM__END

##################
# Get base image #
##################
FROM python:3.9.7-alpine3.13

#############################################################################################
## @generated by .automation/build.py using descriptor files, please do not update manually ##
#############################################################################################
#ARG__START

#ARG__END

####################
# Run APK installs #
####################

# APK Packages used by mega-linter core architecture
RUN apk add --update --no-cache \
        bash \
        curl \
        gcc \
        git \
        libffi-dev \
        make \
        musl-dev \
        openssh && \
    git config --global core.autocrlf true

#############################################################################################
## @generated by .automation/build.py using descriptor files, please do not update manually ##
#############################################################################################
#APK__START
RUN apk add --update --no-cache \
                icu-libs \
                libcurl \
                libintl \
                libssl1.1 \
                libstdc++ \
                lttng-ust-dev \
                zlib \
                zlib-dev
#APK__END

# PATH for golang
ENV GOROOT=/usr/lib/go \
    GOPATH=/go
# hadolint ignore=DL3044
ENV PATH="$PATH":"$GOROOT"/bin:"$GOPATH"/bin
RUN mkdir -p ${GOPATH}/src ${GOPATH}/bin || true && \
    # Ignore npm package issues
    yarn config set ignore-engines true || true

#############################################################################################
## @generated by .automation/build.py using descriptor files, please do not update manually ##
#############################################################################################
#PIP__START

#PIP__END

############################
# Install NPM dependencies #
#############################################################################################
## @generated by .automation/build.py using descriptor files, please do not update manually ##
#############################################################################################

# Downgrade npm because from npm@v7, npm install crashes when called from root directory within Dockerfile
RUN npm install npm@latest-6 -g || true && \
    # Disable package-lock.json to avoid sudden crash. Try to remove later if possible
    echo 'package-lock=false' >> .npmrc || true

#NPM__START

#NPM__END

# Add node packages to path #
ENV PATH="/node_modules/.bin:${PATH}"

##############################
# Installs ruby dependencies #
#############################################################################################
## @generated by .automation/build.py using descriptor files, please do not update manually ##
#############################################################################################

#GEM__START

#GEM__END

#############################################################################################
## @generated by .automation/build.py using descriptor files, please do not update manually ##
#############################################################################################
#OTHER__START
# tsqllint installation
RUN wget --tries=5 -q -O dotnet-install.sh https://dot.net/v1/dotnet-install.sh \
    && chmod +x dotnet-install.sh \
    && ./dotnet-install.sh --install-dir /usr/share/dotnet -channel 5.0 -version latest

ENV PATH="${PATH}:/root/.dotnet/tools:/usr/share/dotnet"
RUN dotnet tool install --global TSQLLint

#OTHER__END

######################
# Set the entrypoint #
######################
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x entrypoint.sh
ENTRYPOINT ["/bin/bash", "/entrypoint.sh"]

################################
# Installs python dependencies #
################################
COPY megalinter /megalinter
RUN python /megalinter/setup.py install \
    && python /megalinter/setup.py clean --all \
    && rm -rf /var/cache/apk/*

#######################################
# Copy scripts and rules to container #
#######################################
COPY megalinter/descriptors /megalinter-descriptors
COPY TEMPLATES /action/lib/.automation

###########################
# Get the build arguments #
###########################
ARG BUILD_DATE
ARG BUILD_REVISION
ARG BUILD_VERSION

#################################################
# Set ENV values used for debugging the version #
#################################################
ENV BUILD_DATE=$BUILD_DATE \
    BUILD_REVISION=$BUILD_REVISION \
    BUILD_VERSION=$BUILD_VERSION

#FLAVOR__START
ENV MEGALINTER_FLAVOR=none
#FLAVOR__END

#EXTRA_DOCKERFILE_LINES__START
ENV ENABLE_LINTERS=SQL_TSQLLINT \
    FLAVOR_SUGGESTIONS=false \
    SINGLE_LINTER=SQL_TSQLLINT \
    PRINT_ALPACA=false \
    LOG_FILE=none \
    SARIF_REPORTER=true \
    TEXT_REPORTER=false \
    UPDATED_SOURCES_REPORTER=false \
    GITHUB_STATUS_REPORTER=false \
    GITHUB_COMMENT_REPORTER=false \
    EMAIL_REPORTER=false \
    FILEIO_REPORTER=false \
    CONFIG_REPORTER=false
#EXTRA_DOCKERFILE_LINES__END

#########################################
# Label the instance and set maintainer #
#########################################
LABEL com.github.actions.name="MegaLinter" \
      com.github.actions.description="The ultimate linters aggregator to make sure your projects are clean" \
      com.github.actions.icon="code" \
      com.github.actions.color="red" \
      maintainer="Nicolas Vuillamy <nicolas.vuillamy@gmail.com>" \
      org.opencontainers.image.created=$BUILD_DATE \
      org.opencontainers.image.revision=$BUILD_REVISION \
      org.opencontainers.image.version=$BUILD_VERSION \
      org.opencontainers.image.authors="Nicolas Vuillamy <nicolas.vuillamy@gmail.com>" \
      org.opencontainers.image.url="https://megalinter.github.io" \
      org.opencontainers.image.source="https://github.com/megalinter/megalinter" \
      org.opencontainers.image.documentation="https://megalinter.github.io" \
      org.opencontainers.image.vendor="Nicolas Vuillamy" \
      org.opencontainers.image.description="Lint your code base with GitHub Actions"
