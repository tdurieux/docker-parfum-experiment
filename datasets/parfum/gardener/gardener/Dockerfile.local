############# base
FROM alpine:3.15.4 AS base

# Define GOTRACEBACK to mark this container as using the Go language runtime
# for `skaffold debug` (https://skaffold.dev/docs/workflows/debug/).
ENV GOTRACEBACK=single

RUN apk add --update tzdata

############# distroless-static
FROM gcr.io/distroless/static-debian11:nonroot as distroless-static

############# builder-base #############
FROM golang:1.18.4 AS builder-base

WORKDIR /go/src/github.com/gardener/gardener

# `skaffold debug` sets SKAFFOLD_GO_GCFLAGS to disable compiler optimizations
ARG SKAFFOLD_GO_GCFLAGS
ARG TARGETOS
ARG TARGETARCH

ENV CGO_ENABLED=0
ENV GOOS=$TARGETOS
ENV GOARCH=$TARGETARCH

ARG VERSION
COPY VERSION .

RUN echo "-X k8s.io/component-base/version.gitVersion=${VERSION:-$(cat VERSION)} \
        -X k8s.io/component-base/version.buildDate=$(date '+%Y-%m-%dT%H:%M:%S%z' | sed 's/\([0-9][0-9]\)$/:\1/g') \
        -X k8s.io/component-base/version/verflag.programName=Gardener" > /tmp/build-flags

############# apiserver #############
FROM builder-base AS builder-apiserver

# manually copy the packages we need to keep the build context slim
COPY cmd cmd
COPY pkg pkg
COPY plugin plugin

COPY go.mod go.sum ./

RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    go build -gcflags="${SKAFFOLD_GO_GCFLAGS}" \
    -ldflags="$(cat /tmp/build-flags)" \
    -o /gardener-apiserver ./cmd/gardener-apiserver

FROM distroless-static AS apiserver

COPY --from=builder-apiserver /gardener-apiserver /gardener-apiserver
ENTRYPOINT ["/gardener-apiserver"]

############# controller-manager #############
FROM builder-base AS builder-controller-manager

# manually copy the packages we need to keep the build context slim
COPY cmd cmd
COPY pkg pkg

COPY go.mod go.sum ./

RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    go build -gcflags="${SKAFFOLD_GO_GCFLAGS}" \
    -ldflags="$(cat /tmp/build-flags)" \
    -o /gardener-controller-manager ./cmd/gardener-controller-manager

FROM distroless-static AS controller-manager

COPY --from=builder-controller-manager /gardener-controller-manager /gardener-controller-manager
ENTRYPOINT ["/gardener-controller-manager"]

############# scheduler #############
FROM builder-base AS builder-scheduler

# manually copy the packages we need to keep the build context slim
COPY cmd cmd
COPY pkg pkg

COPY go.mod go.sum ./

RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    go build -gcflags="${SKAFFOLD_GO_GCFLAGS}" \
    -ldflags="$(cat /tmp/build-flags)" \
    -o /gardener-scheduler ./cmd/gardener-scheduler

FROM distroless-static AS scheduler

COPY --from=builder-scheduler /gardener-scheduler /gardener-scheduler
ENTRYPOINT ["/gardener-scheduler"]

############# admission-controller #############
FROM builder-base AS builder-admission-controller

# manually copy the packages we need to keep the build context slim
COPY cmd cmd
COPY pkg pkg
COPY third_party third_party

COPY go.mod go.sum ./

RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    go build -gcflags="${SKAFFOLD_GO_GCFLAGS}" \
    -ldflags="$(cat /tmp/build-flags)" \
    -o /gardener-admission-controller ./cmd/gardener-admission-controller

FROM distroless-static AS admission-controller

COPY --from=builder-admission-controller /gardener-admission-controller /gardener-admission-controller
ENTRYPOINT ["/gardener-admission-controller"]

############# resource-manager #############
FROM builder-base AS builder-resource-manager

# manually copy the packages we need to keep the build context slim
COPY cmd cmd
COPY pkg pkg

COPY go.mod go.sum ./

RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    go build -gcflags="${SKAFFOLD_GO_GCFLAGS}" \
    -ldflags="$(cat /tmp/build-flags)" \
    -o /gardener-resource-manager ./cmd/gardener-resource-manager

FROM distroless-static AS resource-manager

COPY --from=builder-resource-manager /gardener-resource-manager /gardener-resource-manager
ENTRYPOINT ["/gardener-resource-manager"]

############# seed-admission-controller #############
FROM builder-base AS builder-seed-admission-controller

# manually copy the packages we need to keep the build context slim
COPY cmd cmd
COPY pkg pkg

COPY go.mod go.sum ./

RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    go build -gcflags="${SKAFFOLD_GO_GCFLAGS}" \
    -ldflags="$(cat /tmp/build-flags)" \
    -o /gardener-seed-admission-controller ./cmd/gardener-seed-admission-controller

FROM distroless-static AS seed-admission-controller

COPY --from=builder-seed-admission-controller /gardener-seed-admission-controller /gardener-seed-admission-controller
ENTRYPOINT ["/gardener-seed-admission-controller"]

############# gardenlet #############
FROM builder-base AS builder-gardenlet

# manually copy the packages we need to keep the build context slim
COPY charts/images.yaml charts/charts.go charts/
COPY cmd cmd
COPY pkg pkg
COPY third_party third_party

COPY go.mod go.sum ./

RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    go build -gcflags="${SKAFFOLD_GO_GCFLAGS}" \
    -ldflags="$(cat /tmp/build-flags)" \
    -o /gardenlet ./cmd/gardenlet

FROM base AS gardenlet

RUN apk add --update openvpn

COPY charts /charts
COPY --from=builder-gardenlet /gardenlet /gardenlet
ENTRYPOINT ["/gardenlet"]

############# extension-provider-local #############
FROM builder-base AS builder-extension-provider-local

# manually copy the packages we need to keep the build context slim
COPY charts/charts.go charts/
COPY cmd cmd
COPY extensions extensions
COPY pkg pkg

COPY go.mod go.sum ./

RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    go build -gcflags="${SKAFFOLD_GO_GCFLAGS}" \
    -ldflags="$(cat /tmp/build-flags)" \
    -o /gardener-extension-provider-local ./cmd/gardener-extension-provider-local

FROM base AS extension-provider-local

COPY charts/gardener/provider-local/internal /charts/gardener/provider-local/internal
COPY --from=builder-extension-provider-local /gardener-extension-provider-local /gardener-extension-provider-local
ENTRYPOINT ["/gardener-extension-provider-local"]
