# WARNING: this file was autogenerated by generate-included-image.js
# using
#   npm run add:included -- 10.0.2 cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
#
# build this image with command
#   docker build -t cypress/included:10.0.2 .
#
FROM cypress/browsers:node16.14.2-slim-chrome100-ff99-edge

# Update the dependencies to get the latest and greatest (and safest!) packages.
RUN apt update && apt upgrade -y && apt-get install -y git

# avoid too many progress messages
# https://github.com/cypress-io/cypress/issues/1243
ENV CI=1

# disable shared memory X11 affecting Cypress v4 and Chrome
# https://github.com/cypress-io/cypress-docker-images/issues/270
ENV QT_X11_NO_MITSHM=1
ENV _X11_NO_MITSHM=1
ENV _MITSHM=0

# should be root user
RUN echo "whoami: $(whoami)"
RUN npm config -g set user $(whoami)

# command "id" should print:
# uid=0(root) gid=0(root) groups=0(root)
# which means the current user is root
RUN id

# point Cypress at the /root/cache no matter what user account is used
# see https://on.cypress.io/caching
ENV CYPRESS_CACHE_FOLDER=/root/.cache/Cypress
RUN npm install -g "cypress@10.0.2"
RUN cypress verify

# Cypress cache and installed version
# should be in the root user's home folder
RUN cypress cache path
RUN cypress cache list
RUN cypress info
RUN cypress version

# give every user read access to the "/root" folder where the binary is cached
# we really only need to worry about the top folder, fortunately
RUN ls -la /root
RUN chmod 755 /root

# always grab the latest Yarn
# otherwise the base image might have old versions
# NPM does not need to be installed as it is already included with Node.
RUN npm i -g yarn@latest

# Show where Node loads required modules from
RUN node -p 'module.paths'

# should print Cypress version
# plus Electron and bundled Node versions
RUN cypress version
RUN echo  " node version:    $(node -v) \n" \
  "npm version:     $(npm -v) \n" \
  "yarn version:    $(yarn -v) \n" \
  "debian version:  $(cat /etc/debian_version) \n" \
  "user:            $(whoami) \n" \
  "chrome:          $(google-chrome --version || true) \n" \
  "firefox:         $(firefox --version || true) \n"
  
#Instalclone Cypress-TestFramework to /e2e
WORKDIR /e2e
RUN git clone https://github.com/far11ven/Cypress-TestFramework.git /e2e
WORKDIR "/e2e/Part 10"
RUN ls
RUN npm install

ENTRYPOINT ["npm", "run"]

#then you can directly run tests inside a container using image built with this file
# docker run -it far11ven/cypress-included-v9.2.0:2.0.0 cy:test:qa
