FROM docker.io/snowzach/tensorflow-multiarch:2.7.0-armv7l as base

# Install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget \
    curl \
    gnupg \
    libjpeg8 \
    libpng16-16 \
    libavcodec58 \
    libavformat58 \
    libswscale5 \
    libgl1 \
    libglib2.0-0 \
    unzip && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* 

# Install edgeTPU 
RUN echo "deb https://packages.cloud.google.com/apt coral-edgetpu-stable main" | tee /etc/apt/sources.list.d/coral-edgetpu.list && \
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \
    echo "libedgetpu1-max libedgetpu/accepted-eula select true" | debconf-set-selections && \
    apt-get update && \
    apt-get install -y libedgetpu1-max && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN python3 -m pip install --no-cache-dir \
    https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/opencv_python-4.5.4+c1ca98c-cp38-cp38-linux_armv7l.whl \
    https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/numpy-1.20.3-cp38-cp38-linux_armv7l.whl \
    https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/pandas-1.3.4-cp38-cp38-linux_armv7l.whl \
    https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/scipy-1.9.0.dev0+1108.bdefc81-cp38-cp38-linux_armv7l.whl

# Install python libs
ADD requirements.txt /tmp/requirements.txt
RUN python3 -m pip install -r /tmp/requirements.txt && rm /tmp/requirements.txt
