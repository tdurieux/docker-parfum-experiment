FROM docker.io/snowzach/tensorflow-multiarch:2.7.0-armv7l as base

# Install tensorflow python dependencies for which there are good packages.
RUN apt-get update && apt-get install -y --no-install-recommends \
    libblas3 \
    liblapack3 \
    libxml2-dev \
    libxslt1-dev \
    libjpeg8 \
    libpng16-16 \
    libavcodec58 \
    libavformat58 \
    libswscale5 \
    python3-sklearn \
    libjpeg-dev \
    libpng-dev \
    pkg-config \
    cmake && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install Tensorflow Object Detection dependancies that cannot be installed via PIP for armv7l.
RUN python3 -m pip install --no-cache-dir cython \ 
    https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/tensorflow_text-2.7.3-cp38-cp38-linux_armv7l.whl \
    https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/apache_beam-2.34.0-py3-none-any.whl \
    https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/dm_tree-0.1.6-cp38-cp38-linux_armv7l.whl \
    https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/libclang-12.0.0-py2.py3-none-linux_armv7l.whl \
    https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/numpy-1.20.3-cp38-cp38-linux_armv7l.whl \
    https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/opencv_python-4.5.4+c1ca98c-cp38-cp38-linux_armv7l.whl \
    https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/opencv_python_headless-4.5.4+c1ca98c-cp38-cp38-linux_armv7l.whl \
    https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/orjson-3.6.5-cp38-cp38-manylinux_2_24_armv7l.whl \
    https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/pandas-1.3.4-cp38-cp38-linux_armv7l.whl \
    https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/pyarrow-5.0.0-cp38-cp38-linux_armv7l.whl \
    https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/scipy-1.9.0.dev0+1108.bdefc81-cp38-cp38-linux_armv7l.whl \
    https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/tensorflow_addons-0.16.0.dev0-cp38-cp38-linux_armv7l.whl \
    https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/tensorflow_text-2.7.3-cp38-cp38-linux_armv7l.whl

#https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/object_detection-0.1-py3-none-any.whl

# Install tesorflow object detection
RUN cd tmp && git clone https://github.com/tensorflow/models.git && \
    cd models/research && \
    protoc object_detection/protos/*.proto --python_out=. && \
    cp object_detection/packages/tf2/setup.py . && \
    python -m pip install --use-feature=2020-resolver . && \
    rm -Rf /root/.cache && \
    rm -Rf /tmp/models

ENV TF_CPP_MIN_LOG_LEVEL 3

# Install edgeTPU 
RUN echo "deb https://packages.cloud.google.com/apt coral-edgetpu-stable main" | tee /etc/apt/sources.list.d/coral-edgetpu.list && \
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \
    apt-get update && \
    apt-get install -y libedgetpu1-max && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install PyTorch dependencies
# ADD requirements.pytorch.txt /tmp/requirements.txt
# RUN python3 -m pip install -r /tmp/requirements.txt && rm /tmp/requirements.txt

# Install python libs
ADD requirements.txt /tmp/requirements.txt
RUN python3 -m pip install -r /tmp/requirements.txt && rm /tmp/requirements.txt
