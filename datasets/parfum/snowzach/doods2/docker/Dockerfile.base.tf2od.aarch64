FROM docker.io/snowzach/tensorflow-multiarch:2.7.0-aarch64 as base

# Install Tensorflow Object Detection dependancies that cannot be installed via PIP for aarch64.
RUN python3 -m pip install --no-cache-dir https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/tensorflow_addons-0.16.0.dev0-cp38-cp38-linux_aarch64.whl
RUN python3 -m pip install --no-cache-dir https://github.com/snowzach/doods2/releases/download/tf-v2.7.0-deps/dm_tree-0.1.6-cp38-cp38-linux_aarch64.whl

# Install tesorflow object detection
RUN cd tmp && git clone https://github.com/tensorflow/models.git && \
    cd models/research && \
    protoc object_detection/protos/*.proto --python_out=. && \
    cp object_detection/packages/tf2/setup.py . && \
    python -m pip install --use-feature=2020-resolver . && \
    rm -Rf /root/.cache && \
    rm -Rf /tmp/models

# Install edgeTPU 
RUN echo "deb https://packages.cloud.google.com/apt coral-edgetpu-stable main" | tee /etc/apt/sources.list.d/coral-edgetpu.list && \
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \
    apt-get update && \
    apt-get install -y libedgetpu1-std && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install PyTorch dependencies
# ADD requirements.pytorch.txt /tmp/requirements.txt
# RUN python3 -m pip install -r /tmp/requirements.txt && rm /tmp/requirements.txt

# Install python libs
ADD requirements.txt /tmp/requirements.txt
RUN python3 -m pip install -r /tmp/requirements.txt && rm /tmp/requirements.txt
