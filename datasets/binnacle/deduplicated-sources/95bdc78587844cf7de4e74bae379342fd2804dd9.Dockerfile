# 0. 基础镜像 & 维护者信息.
# VERSION: 1.0.0.0
# Author:  yangjun <597092663@qq.com>
# MAINTAINER yangjun <597092663@qq.com>

# 1. 基础镜像.
FROM 10.5.24.46:80/docker/ubuntu:14.04

# 2. 镜像BUILD默认参数 & RUN环境变量.
ARG TIME_ZONE="Asia/shanghai"
ARG NTP_SERVER="10.7.7.1"
ARG APP_PATH="/opt/applications"

ENV PARAM_TEST="helloworld"

# 3. 镜像生成过程操作指令.
ENV TIME_ZONE=${TIME_ZONE}
ENV NTP_SERVER=${NTP_SERVER}
ENV APP_PATH=${APP_PATH}
ENV EXPOSE_PORT="22"

# 3.1 将build-depends拷贝到镜像中
# copy build-depends of applications to images
RUN mkdir -p ${APP_PATH}/build-depends
COPY ./applications/build-depends/ ${APP_PATH}/build-depends

# 3.2 修改系统默认shell为bash
# switch default shell from sh/dash to bash
RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# 3.3 配置默认apt源，加速apt
# config apt sources - trusty
RUN mv /etc/apt/sources.list /etc/apt/sources.list.back \
    && cp -rf ${APP_PATH}/build-depends/apt-sources/sources.list.trusty /etc/apt/sources.list

# 3.4 配置默认pip源，加速pip
# config python pip sources && install default pip packages
RUN rm -rf ~/.pip && mkdir -p ~/.pip && mkdir -p ~/.pip_download_cache_dir \
    && cp -rf ${APP_PATH}/build-depends/pip-conf/pip.conf ~/.pip/

# 3.5 修改系统默认语言为en_US.UTF-8
# set default language environment
RUN locale-gen en_US.UTF-8 \
    && dpkg-reconfigure locales \
    && sed -i "1i # !!!No Modification, This Section is Auto Generated by Docker" ~/.bashrc \
    && sed -i "1a export LANG=en_US.UTF-8\n\n" ~/.bashrc \
    && sed -i "1a export LANGUAGE=en_US.UTF-8" ~/.bashrc \
    && sed -i "1a export LC_ALL=en_US.UTF-8" ~/.bashrc \
    && source ~/.bashrc
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8

# 3.6 安装apt依赖包
# apt install packages
RUN apt-get update -y \
    && apt-get install supervisor ntp openssh-server -y \
    && apt-get install vim net-tools subversion -y \
    && apt-get install python-dev python-pip libmysqlclient-dev -y

# 3.7 安装pip依赖包
# pip install packages
RUN pip install --upgrade pip \
    && pip install -r ${APP_PATH}/build-depends/pip-requirements/requirements.txt

# 3.8 配置时区、时钟同步
# configure timezone & ntp
RUN echo ${TIME_ZONE} > /etc/timezone \
    && cp /usr/share/zoneinfo/PRC /etc/localtime
RUN mv /etc/ntp.conf /etc/ntp.conf.bak \
    && cp -rf ${APP_PATH}/build-depends/ntp-conf/ntp.conf /etc/ \
    && echo -e "server ${NTP_SERVER}" >> /etc/ntp.conf \
    && echo -e "fudge ${NTP_SERVER} stratum 10" >> /etc/ntp.conf

# 3.9 配置SSHD
# configure sshd
RUN cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak \
    && mkdir /var/run/sshd \
    && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config \
    && sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config \
    && mkdir -p /root/.ssh/ && touch ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys \
    && cat ${APP_PATH}/build-depends/ssh-conf/sys_automation.pub >> ~/.ssh/authorized_keys

# 3.10 配置svn-server访问权限
# configure svn-server
RUN cp ${APP_PATH}/build-depends/svn-conf/.subversion.tar.gz ~/ \
    && cd ~/ && tar -xzvf .subversion.tar.gz \
    && rm -rf .subversion.tar.gz

# 4. 指定容器需要暴露的端口.
# EXPOSE ${EXPOSE_PORT}

# 5. 指定容器需要使用的持久化存储.
# VOLUME ["/var/log/supervisor", "${APP_PATH}/logs", "${APP_PATH}/template/sharedfiles"]

# 6. 容器启动指令: 如果为LongTime Service，不能起为后台进程.
COPY ./applications/ ${APP_PATH}
RUN chmod a+x ${APP_PATH}/run.sh
CMD ["/bin/bash", "-c", "cd ${APP_PATH} && ./run.sh"]

