{
  "startTime": 1674251414589,
  "endTime": 1674251414706,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is the stage where we build the runtime base image, which is used as the\n# common ancestor by the rest of the stages, and contains the minimal runtime\n# dependencies required for the application to run:\n\n# Step 1: Use the official Node 8.15 Strech image as base:\nFROM node:8.15-stretch AS runtime\n\n# Step 2: We'll set '/code' path as the working directory:\nWORKDIR /code\n\n# Step 3: Install the common runtime dependencies:\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n    apt-transport-https \\\n    curl && rm -rf /var/lib/apt/lists/*;\n\n# Step 4: Install latest version of yarn\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n    && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y yarn && rm -rf /var/lib/apt/lists/*;\n\n# II: Development Stage: =======================================================\n# In this stage we'll build the image used for development, including compilers,\n# and development libraries. This is also a first step for building a releasable\n# Docker image:\n\n# Step 5: Start off from the \"runtime\" stage:\nFROM runtime AS development\n\nRUN npm config set scripts-prepend-node-path true\n\n# Step 6: Copy the rest of the application code\nADD . /code\n\n# III: Release stage: ==========================================================\n# In this stage we'll add the current code from the project's source, so we can\n# build the application\n\n# Step 7: Start off from the development stage image:\nFROM runtime AS release\n\n# Step 8: Copy from app code from the \"development\" stage, which at this point\nCOPY --from=development /code /code\n\n# Step 9: Install the dependencies via yarn and\n# build the application for production\nRUN yarn install \\\n    && npm run build && yarn cache clean;\n\n# Step 10: Set the default command\nCMD yarn start:prod\n"
}